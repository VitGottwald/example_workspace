*        %GOTO ENFPPRO  ;         /* Bilingual header                   00010000
         MACRO                                                          00020000
         IRRPENF3                                                       00030000
*                                 */                                    00040000
*%ENFPPRO: ;                                                            00050000
*/*                                                                  */ 00060000
*/********************************************************************/ 00070000
*/*                                                                  */ 00080000
*/*01* PROPRIETARY STATEMENT:                                        */ 00090000
*/*                                                                  */ 00100000
*/***PROPRIETARY_STATEMENT********************************************/ 00110000
*/*                                                                  */ 00120000
*/*                                                                  */ 00130000
*/* Licensed Materials - Property of IBM                             */ 00140000
*/* 5650-ZOS Copyright IBM Corp. 2013                                */ 00150036
*/*                                                                  */ 00160000
*/* STATUS= HBB7790                                                  */ 00170000
*/*                                                                  */ 00180000
*/***END_OF_PROPRIETARY_STATEMENT*************************************/ 00190000
*/*                                                                  */ 00200000
*/*                                                                  */ 00210000
*/* $MAC(IRRPENF3) COMP(SC1BN) PROD(SAF):                            */ 00220000
*/*                                                                  */ 00230000
*/*01* EXTERNAL CLASSIFICATION: PI                                   */ 00240000
*/*01* END OF EXTERNAL CLASSIFICATION                                */ 00250000
*/*                                                                  */ 00260000
*/*                                                                  */ 00270000
*/*01* MACRO NAME: IRRPENF3                                          */ 00280000
*/*                                                                  */ 00290000
*/*                                                                  */ 00300000
*/*01* DESCRIPTIVE NAME:                                             */ 00310000
*/*      RACF ENF 79 Signaling Parameter List                        */ 00320013
*/*                                                                  */ 00330000
*/*                                                                  */ 00340000
*/*01* FUNCTION:                                                     */ 00350000
*/*      This data area maps the input parameter list for            */ 00360000
*/*      ENF event code 79 listen exits.                             */ 00370012
*/*                                                                  */ 00380000
*/*                                                                  */ 00390000
*/*01* NOTES:                                                        */ 00400000
*/*      Created by RACF                                             */ 00410000
*/*                                                                  */ 00420000
*/*                                                                  */ 00430000
*/*01* METHOD OF ACCESS:                                             */ 00440000
*/*      For BAL:                                                    */ 00450000
*/*               Issue the IRRPENF3 macro                           */ 00460000
*/*      For PL/X:                                                   */ 00470000
*/*               %INCLUDE SYSLIB(IRRPENF3)                          */ 00480000
*/*                                                                  */ 00490000
*/*                                                                  */ 00500000
*/*01* CHANGE ACTIVITY:                                              */ 00510000
*/*      $L0=DB2ENF   HBB7790 120301 PDGTM1: ENF Signal for DB2      */ 00520022
*/*      $L1=DB2ENF   HBB7790 120608 PDGTM1: ENF Signal for DB2  @L1A*/ 00530038
*/*      $L2=DB2ENF   HBB7790 120710 PDGTM1: ENF Signal for DB2  @L2A*/ 00540040
*/*                                                                  */ 00550000
*/*                                                                  */ 00560024
*/*                                                                  */ 00570040
*/*01* CHANGE DESCRIPTIONS:                                          */ 00580000
*/*      A000000 - 999999 Original code                              */ 00590000
*/*      A - Support for DB2 V11                                     */ 00600037
*/*          - Support for DB2 requirement to propagate              */ 00610037
*/*            ENF event code 79 for PERMIT ACCESS/DELETE/RESET,     */ 00620037
*/*            RDEFINE/RDEFINE ADDMEM, RALTER ADDMEM/DELMEM, and     */ 00630037
*/*            RDELETE                                               */ 00640037
*/*      A - Support for DB2 V11                                     */ 00650040
*/*          - Added the flag                                        */ 00660040
*/*             IRR_ENF3_UACC_Specified                          @L1A*/ 00670040
*/*      A - Support for DB2 V11                                     */ 00680040
*/*          - Removed the constant                                  */ 00690040
*/*            IRR_ENF3_PERMIT_WHEN_SYSID_Cond                   @L2A*/ 00700040
*/*                                                                  */ 00710038
*/*                                                                  */ 00720040
*/********************************************************************/ 00730000
*/*                                                                  */ 00740000
*                                                               @EJECT; 00750000
*        %GOTO ENFPPLS  ;         /* Bilingual header                   00760000
*                                                                       00770020
*********************************************************************** 00780020
*                                                                       00790000
ENF3     DSECT ,                      IRRPENF3                          00800014
         DS    0F                                                       00810000
*                                                                       00820000
IRR_ENF3_ID               DS CL6      Literal 'IRREN3'                  00830014
IRR_ENF3_Version          DS XL2      Parameter list version            00840014
IRR_ENF3_Length           DS XL2      Total length of Parameter List    00850014
                          DS CL2      Reserved                          00860014
IRR_ENF3_QualCode         DS 0CL4     Qualifier Code                    00870014
                          DS CL1      Qualifier Code Value              00880019
                          DS CL3      Reserved                          00890014
IRR_ENF3_UserID           DS CL8      RACF UserID                       00900014
IRR_ENF3_ClassName        DS CL8      RACF Class Name                   00910014
IRR_ENF3_Flags            DS XL4      Control Flags                     00920025
IRR_ENF3_PERMIT_ACCESS     EQU X'80000000' PERMIT ACCESS(...)           00930026
IRR_ENF3_PERMIT_DELETE     EQU X'40000000' PERMIT DELETE                00940026
IRR_ENF3_PERMIT_RESET      EQU X'30000000' PERMIT RESET or              00950035
*                                          PERMIT RESET(ALL)            00960039
IRR_ENF3_PERMIT_RESET_STD  EQU X'20000000' PERMIT RESET(STANDARD)       00970028
IRR_ENF3_PERMIT_RESET_WHEN EQU X'10000000' PERMIT RESET(WHEN)           00980028
IRR_ENF3_UACC_Specified    EQU X'08000000' UACC was specified    @L1A   00990038
*                                          on either             @L1A   01000038
*                                          - RDEFINE or          @L1A   01010038
*                                          - RALTER              @L1A   01020038
IRR_ENF3_Access_Level     DS XL1      Access Level from:                01030034
*                                     - PERMIT ACCESS(Access Level)     01040034
*                                     - RDEFINE UACC(Access Level)      01050034
*                                     - RALTER UACC(Access Level)       01060034
IRR_ENF3_Access_Level_ALTER   EQU X'80' ACCESS(ALTER)   / UACC(ALTER)   01070037
IRR_ENF3_Access_Level_CONTROL EQU X'40' ACCESS(CONTROL) / UACC(CONTROL) 01080037
IRR_ENF3_Access_Level_UPDATE  EQU X'20' ACCESS(UPDATE)  / UACC(UPDATE)  01090037
IRR_ENF3_Access_Level_READ    EQU X'10' ACCESS(READ)    / UACC(READ)    01100037
IRR_ENF3_Access_Level_EXECUTE EQU X'08' ACCESS(EXECUTE) / UACC(EXECUTE) 01110037
IRR_ENF3_Access_Level_NONE    EQU X'01' ACCESS(NONE)    / UACC(NONE)    01120037
IRR_ENF3_PERMIT_WHEN_Cond DS XL1      PERMIT WHEN(Condition) value      01130030
                          DS CL2      Reserved                          01140030
IRR_ENF3_ADDMEML_Member#  DS XL2      Number of Members in ADDMEM List  01150025
IRR_ENF3_DELMEML_Member#  DS XL2      Number of Members in DELMEM List  01160025
IRR_ENF3_ADDMEML_Length   DS XL2      Length of ADDMEM Member List      01170025
IRR_ENF3_DELMEML_Length   DS XL2      Length of DELMEM Member List      01180025
IRR_ENF3_ADDMEML_Offset   DS XL2      Offset to ADDMEM List Data        01190025
IRR_ENF3_DELMEML_Offset   DS XL2      Offset to DELMEM List Data        01200025
                          DS CL28     Reserved                          01210027
IRR_ENF3_ProfName_DS      DS 0CL256   RACF Profile Name Data Structure  01220037
IRR_ENF3_ProfName_Length  DS XL1      Length of RACF Profile Name       01230014
IRR_ENF3_ProfName         DS CL255    RACF Profile Name                 01240026
IRR_ENF3_CACLName_DS      DS 0CL256   Conditional Access Name Data      01250037
*                                                            Structure  01260037
IRR_ENF3_CACLName_Length  DS XL1      Length of Conditional Access Name 01270025
IRR_ENF3_CACLName         DS CL255    Conditional Access Name           01280026
*                                                                       01290000
IRR_ENF3_Header_Length    EQU *-ENF3  Length of IRREN3 Header           01300014
*                                                                       01310000
*********************************************************************** 01320001
* ADDMEM Member List                                                    01330001
*********************************************************************** 01340001
*                                                                       01350001
IRR_ENF3_ADDMEM_List      DSECT ,                                       01360014
                          DS 0CL2     ADDMEM Member List Structure      01370014
IRR_ENF3_ADDMEM_Name_Len  DS XL1      Length of ADDMEM Member Name      01380014
IRR_ENF3_ADDMEM_Name      DS C        ADDMEM Member Name                01390014
*                                                                       01400001
*********************************************************************** 01410001
* DELMEM Member List                                                    01420001
*********************************************************************** 01430001
*                                                                       01440001
IRR_ENF3_DELMEM_List      DSECT ,                                       01450014
                          DS 0CL2     DELMEM Member List Structure      01460014
IRR_ENF3_DELMEM_Name_Len  DS XL1      Length of DELMEM Member Name      01470014
IRR_ENF3_DELMEM_Name      DS C        DELMEM Member Name                01480014
*                                                                       01490000
*********************************************************************** 01500001
*  Equates for IRR_ENF3VER                                              01510000
*********************************************************************** 01520001
*                                                                       01530000
IRR_ENF3_Version_01_Con   EQU X'01'   Version 1 of ENF3                 01540014
*                                                                       01550000
IRR_ENF3_Current_Version  EQU X'01'   Current version of ENF3           01560014
*                                                                       01570000
*********************************************************************** 01580001
*  Equates for IRR_ENF3_QualCode                                        01590026
*********************************************************************** 01600001
*                                                                       01610000
IRR_ENF3_QualCode_PE      EQU X'80000000'  X'80' PERMIT  Command signal 01620014
IRR_ENF3_QualCode_RDEF    EQU X'40000000'  X'40' RDEFINE Command signal 01630014
IRR_ENF3_QualCode_RALT    EQU X'20000000'  X'20' RALTER  Command signal 01640014
IRR_ENF3_QualCode_RDEL    EQU X'10000000'  X'10' RDELETE Command signal 01650014
*                                                                       01660000
*********************************************************************** 01670026
*  Equates for IRR_ENF3_PERMIT_WHEN_Cond                                01680026
*********************************************************************** 01690026
*                                                                       01700026
IRR_ENF3_PERMIT_WHEN_PROGRAM_Cond    EQU X'01'                          01710026
IRR_ENF3_PERMIT_WHEN_CONSOLE_Cond    EQU X'02'                          01720026
IRR_ENF3_PERMIT_WHEN_TERMINAL_Cond   EQU X'03'                          01730026
IRR_ENF3_PERMIT_WHEN_JESINPUT_Cond   EQU X'04'                          01740026
IRR_ENF3_PERMIT_WHEN_APPCPORT_Cond   EQU X'05'                          01750026
IRR_ENF3_PERMIT_WHEN_SERVAUTH_Cond   EQU X'07'                          01760026
IRR_ENF3_PERMIT_WHEN_CRITERIA_Cond   EQU X'08'                          01770026
*                                                                       01780026
         MEND                                                           01790000
*                                                                       01800024
* Terminating PL/X comment                                          */  01810016
*                                                                       01820023
*%ENFPPLS: ;                                                            01830016
*                                                                       01840015
*%IF ENF3BASE = '' %THEN                                                01850015
*  %DO;                                                                 01860015
*    %ENF3BASE = 'BASED(IRR_ENF3_PTR)';                                 01870015
*  %END;                                                                01880015
*                                                                       01890015
*%IF ENF3BASE = 'BASED(IRR_ENF3_PTR)' %THEN                             01900015
*  %DO;                                                                 01910015
*     DCL IRR_ENF3_PTR   PTR(31); ] Base Pointer for ENF3               01920015
*  %END;                                                                01930015
*                                                                       01940015
*DCL 1 ENF3   ENF3BASE   BDY(WORD),          ] RACF ENF3 parameter list 01950015
*      2 IRR_ENF3_ID                CHAR(6),   ] Literal 'IRREN3'       01960015
*      2 IRR_ENF3_Version           FIXED(16), ] Parameter list version 01970015
*      2 IRR_ENF3_Length            FIXED(16), /* Total length of ENF3  01980015
*                                                 Parameter List     */ 01990015
*      2 *                          CHAR(2),   ] Reserved               02000015
*      2 IRR_ENF3_QualCode          CHAR(4),   ] Qualifier Code         02010015
*        3 *                          CHAR(1), ] Qualifier Code Value   02020025
*        3 *                          CHAR(3), ] Reserved               02030025
*      2 IRR_ENF3_UserID            CHAR(8),   ] RACF UserID            02040015
*      2 IRR_ENF3_ClassName         CHAR(8),   ] RACF Class Name        02050015
*      2 IRR_ENF3_Flags             BIT(32),   ] Control Flags          02060025
*        3 IRR_ENF3_PERMIT_ACCESS     BIT(1),  ] PERMIT ACCESS(...)     02070026
*        3 IRR_ENF3_PERMIT_DELETE     BIT(1),  ] PERMIT DELETE          02080026
*        3 IRR_ENF3_PERMIT_RESET      BIT(2),  /* PERMIT RESET or       02090028
*                                                 PERMIT RESET(ALL)  */ 02100028
*          4 IRR_ENF3_PERMIT_RESET_STD  BIT(1), /* PERMIT               02110028
*                                                  RESET(STANDARD)   */ 02120028
*          4 IRR_ENF3_PERMIT_RESET_WHEN BIT(1),  ] PERMIT RESET(WHEN)   02130028
*        3 IRR_ENF3_UACC_Specified    BIT(1),  /* UACC was specified    02140038
*                                                 on either:            02150038
*                                                  - RDEFINE or         02160038
*                                                  - RALTER      @L1A*/ 02170038
*        3 *                          BIT(27), ] Reserved        @L1C   02180038
*      2 IRR_ENF3_Access_Level       FIXED(8), /* Access Level from:    02190037
*                                      - PERMIT ACCESS(Access Level)    02200037
*                                      - RDEFINE UACC(Access Level)     02210037
*                                      - RALTER UACC(Access Level)      02220037
*                                              */                       02230037
*        3 IRR_ENF3_Access_Level_ALTER     BIT(1), ] ALTER              02240037
*        3 IRR_ENF3_Access_Level_CONTROL   BIT(1), ] CONTROL            02250037
*        3 IRR_ENF3_Access_Level_UPDATE    BIT(1), ] UPDATE             02260037
*        3 IRR_ENF3_Access_Level_READ      BIT(1), ] READ               02270037
*        3 IRR_ENF3_Access_Level_EXECUTE   BIT(1), ] EXECUTE            02280037
*        3 *                               BIT(2), ] Reserved           02290031
*        3 IRR_ENF3_Access_Level_NONE      BIT(1), ] NONE               02300037
*      2 IRR_ENF3_PERMIT_WHEN_Cond  FIXED(8), /* PERMIT WHEN(Condition) 02310026
*                                                value               */ 02320026
*      2 *                          CHAR(2),   ] Reserved               02330030
*      2 IRR_ENF3_ADDMEML_Member#   FIXED(16), /* Number of Members in  02340025
*                                                 ADDMEM List        */ 02350025
*      2 IRR_ENF3_DELMEML_Member#   FIXED(16), /* Number of Members in  02360025
*                                                 DELMEM List        */ 02370025
*      2 IRR_ENF3_ADDMEML_Length    FIXED(16), /* Length of ADDMEM      02380025
*                                                 List Data          */ 02390025
*      2 IRR_ENF3_DELMEML_Length    FIXED(16), /* Length of DELMEM      02400025
*                                                 List Data          */ 02410025
*      2 IRR_ENF3_ADDMEML_Offset    FIXED(16), /* Offset to ADDMEM      02420025
*                                                 List Data          */ 02430025
*      2 IRR_ENF3_DELMEML_Offset    FIXED(16), /* Offset to DELMEM      02440025
*                                                 List Data          */ 02450025
*      2 *                          CHAR(28),  ] Reserved               02460027
*      2 IRR_ENF3_ProfName_DS       CHAR(256), /* RACF Profile Name     02470026
*                                                 Data Structure     */ 02480037
*        3 IRR_ENF3_ProfName_Length   FIXED(8), /* Length of RACF       02490015
*                                                  Profile Name      */ 02500015
*        3 IRR_ENF3_ProfName          CHAR(255), ] RACF Profile Name    02510026
*      2 IRR_ENF3_CACLName_DS       CHAR(256), /* Conditional Access    02520026
*                                              Name Data Structure   */ 02530037
*        3 IRR_ENF3_CACLName_Length   FIXED(8), /* Length of            02540025
*                                                  Conditional Access   02550025
*                                                  Name              */ 02560025
*        3 IRR_ENF3_CACLName          CHAR(255), /* Conditional Access  02570026
*                                                  Name              */ 02580025
*      2 *                          CHAR(0);   ] Reserved               02590025
*                                                                       02600015
*/********************************************************************/ 02610015
*/* ADDMEM Member List Mapping                                       */ 02620015
*/********************************************************************/ 02630015
*                                                                       02640015
*DCL 1 IRR_ENF3_ADDMEM_List   BASED(ADDR(ENF3) +                        02650015
*                                   IRR_ENF3_ADDMEML_Offset),           02660015
*      2 IRR_ENF3_ADDMEM_Name_Len   FIXED(8),  /* Length of ADDMEM      02670015
*                                                 Member Name        */ 02680015
*      2 IRR_ENF3_ADDMEM_Name       CHAR(*);   ] ADDMEM Member Name     02690015
*                                                                       02700015
*/********************************************************************/ 02710015
*/* DELMEM Member List Mapping                                       */ 02720015
*/********************************************************************/ 02730015
*                                                                       02740015
*DCL 1 IRR_ENF3_DELMEM_List   BASED(ADDR(ENF3) +                        02750015
*                                   IRR_ENF3_DELMEML_Offset),           02760015
*      2 IRR_ENF3_DELMEM_Name_Len   FIXED(8),  /* Length of DELMEM      02770015
*                                                 Member Name        */ 02780015
*      2 IRR_ENF3_DELMEM_Name       CHAR(*);   ] DELMEM Member Name     02790015
*                                                                       02800015
*/********************************************************************/ 02810015
*/* Constants                                                        */ 02820015
*/********************************************************************/ 02830015
*                                                                       02840015
*DCL IRR_ENF3_Header_Length     FIXED(32) CONSTANT(LENGTH(ENF3)); /*    02850015
*                                            Length of IRREN3 Header */ 02860015
*                                                                       02870015
*DCL IRR_ENF3_Version_01_Con    FIXED(16) CONSTANT('0001'X); /* Version 02880015
*                                                          1 of ENF3 */ 02890015
*DCL IRR_ENF3_Current_Version   FIXED(16) CONSTANT('0001'X); /* Current 02900015
*                                                    Version of ENF3 */ 02910015
*                                                                       02920015
*DCL IRR_ENF3_ID_Con   CHAR(6) CONSTANT('IRREN3'); /* ENF3 literal      02930015
*                                                     'IRREN3'       */ 02940015
*                                                                       02950028
*/********************************************************************/ 02960028
*/* Qualifier Code Constants                                         */ 02970028
*/********************************************************************/ 02980028
*                                                                       02990015
*DCL IRR_ENF3_QualCode_PE     BIT(32) CONSTANT('80000000'X); /* PERMIT  03000015
*                                                     Command signal */ 03010015
*DCL IRR_ENF3_QualCode_RDEF   BIT(32) CONSTANT('40000000'X); /* RDEFINE 03020015
*                                                     Command signal */ 03030015
*DCL IRR_ENF3_QualCode_RALT   BIT(32) CONSTANT('20000000'X); /* RALTER  03040015
*                                                     Command signal */ 03050015
*DCL IRR_ENF3_QualCode_RDEL   BIT(32) CONSTANT('10000000'X); /* RDELETE 03060015
*                                                     Command signal */ 03070015
*                                                                       03080028
*/********************************************************************/ 03090028
*/* PERMIT WHEN Condition Constants                                  */ 03100028
*/********************************************************************/ 03110028
*                                                                       03120026
*DCL IRR_ENF3_PERMIT_WHEN_PROGRAM_Cond    FIXED(8) CONSTANT('01'X);     03130026
*DCL IRR_ENF3_PERMIT_WHEN_CONSOLE_Cond    FIXED(8) CONSTANT('02'X);     03140026
*DCL IRR_ENF3_PERMIT_WHEN_TERMINAL_Cond   FIXED(8) CONSTANT('03'X);     03150026
*DCL IRR_ENF3_PERMIT_WHEN_JESINPUT_Cond   FIXED(8) CONSTANT('04'X);     03160026
*DCL IRR_ENF3_PERMIT_WHEN_APPCPORT_Cond   FIXED(8) CONSTANT('05'X);     03170026
*DCL IRR_ENF3_PERMIT_WHEN_SERVAUTH_Cond   FIXED(8) CONSTANT('07'X);     03180026
*DCL IRR_ENF3_PERMIT_WHEN_CRITERIA_Cond   FIXED(8) CONSTANT('08'X);     03190026
*                                                           @SPACE(2);  03200026
