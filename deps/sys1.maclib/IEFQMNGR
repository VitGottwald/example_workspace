*        %GOTO QMNGRPRO; /*                                      @L1A   00010000
         MACRO                                                          00020000
         IEFQMNGR                                                       00030000
.*/      %QMNGRPRO: ;    /*                                      @L1A*/ 00040000
*/************* START OF SPECIFICATIONS ******************************/ 00050000
*/*                                                              @L1A*/ 00060000
*/*01* MACRO NAME: IEFQMNGR                                      @L1A*/ 00070000
*/*                                                              @L1A*/ 00080000
*/*01* DESCRIPTIVE NAME: SWA MANAGER PARAMETER AREA              @L1A*/ 00090000
*/*                                                              @L1A*/ 00100000
*/*01* PROPRIETARY STATEMENT=                                        */ 00100109
*/***PROPRIETARY_STATEMENT********************************************/ 00101005
*/*                                                              @L1A*/ 00103005
*/*01* COPYRIGHT=                                                @L1A*/ 00110000
*/*      5650-ZOS                                                @L2C*/ 00120000
*/*      COPYRIGHT IBM CORP. 1986, 2019                          @L3C*/ 00130003
*/*      LICENSED MATERIALS - PROPERTY OF IBM                    @L1A*/ 00140000
*/*                                                              @L1A*/ 00150000
*/*01* STATUS = HBB77C0                                          @L3C*/ 00160003
*/*                                                              @L1A*/ 00160106
*/***END_OF_PROPRIETARY_STATEMENT*************************************/ 00161006
*/*                                                              @L1A*/ 00170000
*/*01* FUNCTION: Provides mapping of SWA Manager Parameter Area  @L1A*/ 00180000
*/*                                                              @L1A*/ 00190000
*/*01* DSECT NAME: IOPARAMS                                      @P1A*/ 00191002
*/*                                                              @L1A*/ 00192000
*/*01* COMPONENT: Scheduler Work Area Manager (SC1B5)            @P1A*/ 00193002
*/*                                                              @L1A*/ 00194000
*/*01* EYE-CATCHER: None                                         @P1A*/ 00195002
*/*                                                              @L1A*/ 00196000
*/*01* STORAGE-ATTRIBUTES:                                       @P1A*/ 00197002
*/*02*   SUBPOOL: Any                                            @P1A*/ 00197102
*/*02*   Key:     Any                                            @P1A*/ 00197202
*/*                                                              @L1A*/ 00198000
*/*01* SIZE: 36 bytes located on a word boundary                 @P1A*/ 00199002
*/*                                                              @L1A*/ 00199100
*/*01* Created by: Caller of Move Mode SWA Manager               @P1A*/ 00199202
*/*                                                              @L1A*/ 00199300
*/*01* Pointed to by: Register 1, JSCBQMPI in the active JSCB    @P1A*/ 00199410
*/*                                                              @L1A*/ 00199500
*/*01* Serialization: None                                       @P1A*/ 00199602
*/*                                                              @L1A*/ 00199700
*/*01* MODULE TYPE = MACRO                                       @L1A*/ 00200000
*/*                                                              @L1A*/ 00210000
*/*01* INVOCATION =                                              @L1A*/ 00220000
*/*                                                              @L1A*/ 00230000
*/*      BAL - IEFQMNGR                                          @L1A*/ 00240000
*/*                                                              @L1A*/ 00250000
*/*            ADDRESSABILITY IS ESTABLISHED BY DOING A USING    @L1A*/ 00260000
*/*            ON IOPARAMS                                       @L1A*/ 00270000
*/*                                                              @L1A*/ 00280000
*/*      PLX - %INCLUDE SYSLIB(IEFQMNGR)                         @L3C*/ 00290000
*/*            DECLARE QMPAPTR AS PTR(31).                       @L1A*/ 00300000
*/*                                                              @L1A*/ 00310000
*/*            GENERATES MAPPING BASED ON QMPAPTR.               @L1A*/ 00320000
*/*                                                              @L1A*/ 00330000
*/*01* EXTERNAL CLASSIFICATION:  NOTPI                           @L3A*/ 00340000
*/*    END OF EXTERNAL CLASSIFICATION:                           @L3A*/ 00341000
*/*                                                                  */ 00342000
*/*01* NOTES =                                                       */ 00343000
*/*                                                                  */ 00344000
*/*      THE QMPA MUST BE DEFINED ON A WORD BOUNDARY                 */ 00345000
*/*                                                                  */ 00346000
*/*      NOTE: The mapping of the local copy of the QMPA         @L3A*/ 00347000
*/*      in module IEFQB551 must agree with the QMPA mapping     @L3A*/ 00348000
*/*      defined here.                                           @L3A*/ 00349000
*/*                                                                  */ 00350000
*/*      When the QMQMAT64 bit is not set, the QMADD field       @L3A*/ 00360000
*/*      contains a 31-bit pointer to the first QMAT extent.     @L3A*/ 00370000
*/*      When the QMQMAT64 bit is set, you must assemble the     @L3A*/ 00380000
*/*      64-bit pointer to the first QMAT extent from the        @L3A*/ 00390000
*/*      QMADD01, QMADD23 and QMADD fields, as follows:          @L3A*/ 00400000
*/*                                                                  */ 00410000
*/*      bytes    0     1     2     3     4     5     6     7        */ 00420000
*/*            *--+--*--+--*--+--*--+--*--+--*--+--*--+--*--+--* @L3A*/ 00430000
*/*     64-bit !     !     !     !     !     !     !     !     ! @L3A*/ 00440000
*/*     ptr    *--+--*--+--*--+--*--+--*--+--*--+--*--+--*--+--* @L3A*/ 00450000
*/*               A     A     A     A     A     A     A     A    @L3A*/ 00460000
*/*               !     !     !     !     !     !     !     !    @L3A*/ 00470000
*/*               !     !     !     !     !     !     !     !    @L3A*/ 00480000
*/*            *--+--*--+--*  !     !     !     !     !     !    @L3A*/ 00490000
*/*    QMADD01 !     !     !  !     !     !     !     !     !    @L3A*/ 00500000
*/*            *--+--*--+--*  !     !     !     !     !     !    @L3A*/ 00510000
*/*                           !     !     !     !     !     !    @L3A*/ 00520000
*/*                        *--+--*--+--*  !     !     !     !    @L3A*/ 00530000
*/*    QMADD23             !     !     !  !     !     !     !    @L3A*/ 00540000
*/*                        *--+--*--+--*  !     !     !     !    @L3A*/ 00550000
*/*                                       !     !     !     !    @L3A*/ 00560000
*/*                                    *--+--*--+--*--+--*--+--* @L3A*/ 00570000
*/*    QMADD                           !     !     !     !     ! @L3A*/ 00580000
*/*                                    *--+--*--+--*--+--*--+--* @L3A*/ 00590000
*/*                                                                  */ 00600000
*/*01* CHANGE ACTIVITY = L1,R1,L2,L3                             @L3C*/ 00610000
*/*                                                              @L1A*/ 00620000
*/*    $L1=SWABOVE JBB2220 850408 PDR6: SWA ABOVE THE LINE       @L1A*/ 00630000
*/*    $R1=PA20312 JBB2220 850814 PDR6: PA20312                  @L1A*/ 00640000
*/*    $L2=APPC1   HBB4420 890310 PDB3: APPC                     @L2A*/ 00650000
*/*    $L3=ALC2MDS HBB77A0 130301 PDKK: Raise # of SWA blocks    @L3A*/ 00660000
*/*    $P1=W184141 HBB77C0 190103 PDOO: SHOWHDR compliance       @P1A*/ 00661007
*/*                                                              @L1A*/ 00670000
*/* A PROLOGUE                                                   @L1A*/ 00690000
*/* C REDEFINING OF RESERVED FIELDS NECESSARY FOR SWA ABOVE THE  @L1A*/ 00700000
*/*   LINE SUPPORT                                                   */ 00710000
*/* C UPDATED DUE TO A CHANGE IN ADDRESS TABLE (QMAT)            @R1A*/ 00720000
*/*   PROCESSING. THE CURRENT EXTENT NUMBER WAS REMOVED          @R1A*/ 00730000
*/*   FROM THE QMPA AND MOVED TO THE QMAT HEADER.                @R1A*/ 00740000
*/* C ADD BUILD VAT OPTION QMBLDVAT & CONSTANTS FOR FUNCTIONS    @L2A*/ 00750000
*/* C Support movement of the QMAT into 64-bit above-the-bar     @L3A*/ 00760000
*/*   storage. The space in reserved fields QMFLT, QMTST, QMPRI  @L3A*/ 00770000
*/*   and QMLNK has been reapportioned and the field names       @L3A*/ 00780000
*/*   eliminated. When the new QMQMAT64 bit is set, it indicates @L3A*/ 00790000
*/*   that a 64-bit pointer to the first QMAT extent is stored   @L3A*/ 00800000
*/*   across the QMADD01 (2 byte), QMADD23 (2 byte) and QMADD    @L3A*/ 00810000
*/*   (4 byte) fields. Because these three fields are not        @L3A*/ 00820000
*/*   contiguous, a PLO Compare and Swap and Double Store        @L3A*/ 00830000
*/*   operation MUST be used to atomically set these fields.     @L3A*/ 00840000
*/*   When the QMQMAT64 bit is not set, the QMADD field contains @L3A*/ 00850000
*/*   a 31-bit pointer to the first QMAT extent.                 @L3A*/ 00860000
*/*   When the QMQMAT64 bit is set, you must assemble the 64-bit @L3A*/ 00870000
*/*   pointer to the first QMAT extent from the three fields.    @L3A*/ 00880000
*/* A SHOWHDR compliance                                         @P1A*/ 00881002
*/*************** END OF SPECIFICATIONS ******************************/ 00882004
* % GOTO QMPABSL;/*                                                     00900000
*  QUEUE MANAGER PARAMETER AREA                                    *    00910000
IOPARAMS DSECT                                                          00920000
QMNAM    DS    CL4                           RESERVED                   00930000
QMCAN    EQU   QMNAM                         RESERVED                   00940000
QMVERS   DS    CL2                           VERSION NUMBER      @L1C   00950000
QMCURVER EQU   2                             QMPA VERSION 2      @L1A   00960000
QMLGTH   DS    CL2                           QMPA LENGTH         @L1C   00970000
QMPOP    DS    CL1                           FUNCTION CODE PARAMETER    00980000
*                   FUNCTION CODE VALUES                                00990000
QMASGN   EQU   1                             ASSIGN                     01000000
QMASGS   EQU   0                             ASSIGN/START               01010000
QMWRTA   EQU   2                             WRITE AND ASSIGN           01020000
QMWRTE   EQU   3                             WRITE                      01030000
QMREAD   EQU   4                             READ                       01040000
QMREDALL EQU   5                             READALL/MOVE        @L1C   01050000
QMWRTALL EQU   6                             WRITEALL/MOVE       @L1C   01060000
QMDTYP   EQU   7                             RESERVED                   01070000
QMDELE   EQU   8                             DELETE                     01080000
*                                                                       01090000
QMRSV01  DS    CL1                           RESERVED              @L3C 01100000
QMADD01  DS    XL2                           QMAT ptr bytes 0-1    @L3C 01110000
*                                            if QMQMAT64 is one    @L3A 01120000
*   The following 4 bytes are overlayed by QMRBN.                  @L3A 01130000
QMTLN    DS    CL2                           RESERVED                   01140000
QMNOT    DS    CL1                           RESERVED                   01150000
QMTPY    DS    CL1                           RESERVED                   01160000
QMSTA    DS    CL1                           JOB STATUS BYTE            01170000
QMACLEX  EQU   X'80'                         PASSING 4-BYTE EPA ADDRESS 01180000
*                                                                 @L1A  01190000
QMEPAX   EQU   X'40'                         PASSING 16 BYTE EPAS @L1A  01200000
QMSJNL   EQU   X'20'                         IF SET TO ONE, JOURNAL     01210000
*                                            BLOCKS                     01220000
QMCONDGM EQU   X'10'                         IF SET TO ONE, DO @ZA48518 01230000
*                                            COND. GETMAIN     @ZA48518 01240000
QMBLDVAT EQU   X'08'                         IF SET TO ONE,             01250000
*                                            BUILD VAT TABLE       @L2A 01260000
QMQMAT64 EQU   X'04'                         If set to one:             01270000
*                                             QMADD01 is bytes 0-1      01280000
*                                             QMADD23 is bytes 2-3      01290000
*                                             QMADD   is bytes 4-7      01300000
*                                            of a 64-bit QMAT ptr  @L3A 01310000
QMRSV02  DS    CL1                           RESERVED              @L3C 01320000
QMADD23  DS    XL2                           QMAT ptr bytes 2-3    @L3C 01330000
*                                            if QMQMAT64 is one    @L3A 01340000
QMPACLX  DS    F                             4-BYTE PTR TO EXTERNAL     01350000
*                                            PARAMETER LIST        @L1C 01360000
QMADD    DS    F                             QMAT address table ptr     01370000
*                                              31-bit if QMQMAT64=0     01380000
*                                              bytes 4-7 of 64-bit      01390000
*                                              ptr if QMQMAT64=1   @L3C 01400000
QMSTO    DS    F                             ADDRESS OF STORAGE TABLE   01410000
*                                            (QMST)                @L1C 01420000
QMPCL    DS    CL4                           PTR TO EXTRN PARM LIST     01430000
QMPCM    EQU   QMPCL                         NO. OF RCRDS TO ASSIGN     01440000
*                                              First 4 bits        @L3A 01450000
QMPNC    EQU   QMPCL                         NO. OF RCRDS TO READ/WRITE 01460000
*                                              Second 4 bits       @L3A 01470000
QMPACL   EQU   QMPCL+1                       PTR TO EXTRN PARM LIST     01480000
         SPACE                                                          01490000
*        THE FOLLOWING FIELD NAMES ARE USED ONLY FOR SWA FUNCTIONS      01500000
         ORG   QMNAM                                                    01510000
QMSWSP   DS    CL1                           SWA SUBPOOL NUMBER         01520000
         ORG   QMTLN                                                    01530000
QMRBN    DS    F                             BLOCK NUMBER FOR THIS JOB  01540000
         MEND                                                           01550000
**/ % QMPABSL:;                                                         01560000
*  DCL 1 QMPA BASED(QMPAPTR),                                           01570000
*    4 QMNAM CHAR (8),  /* RESERVED */                                  01580000
*       6 QMCAN CHAR (4),   /* THIS FIELD IS REDEFINED BY QMSWSP,       01590000
*                              REFER TO THE DECLARE FOR SWAQMPA. @L1C*/ 01600000
*       6 QMVERS CHAR (2),  /* VERSION NUMBER                    @L1C*/ 01610000
*       6 QMLGTH CHAR (2),  /* QMPA LENGTH                       @L1C*/ 01620000
*    4 QMPOP BIT (8),   /* FUNCTION CODE PARAMETER */                   01630000
*    4 QMRSV01 CHAR (1),    /* RESERVED                          @L3C*/ 01640000
*    4 QMADD01 CHAR (2),    /* QMAT pointer bytes 0-1                   01650000
*                              if QMQMAT64 is one                @L3C*/ 01660000
*    4 QMTLN CHAR (2),  /* THE FOLLOWING FOUR BYTES ARE REDEFINED BY    01670000
*                       QMRBN, REFER TO THE DECLARE FOR SWAQMPA  @L1M*/ 01680000
*    4 QMNOT CHAR (1),  /* RESERVED */                                  01690000
*    4 QMTPY CHAR (1),  /* RESERVED */                                  01700000
*    4 QMSTA BIT (8),   /* JOB STATUS */                                01710000
*      6 QMACLEX BIT(1),/* PASSING 4-BYTE EPA ADDRESS            @L1C*/ 01720000
*      6 QMEPAX BIT(1), /* PASSING 16 BYTE EPAS                  @L1A*/ 01730000
*      6 QMSJNL BIT(1), /* IF SET TO ONE, JOURNAL BLOCKS             */ 01740000
*      6 QMCONDGM BIT(1),/* IF SET TO ONE, DO COND GETMAIN   @ZA48518*/ 01750000
*      6 QMBLDVAT BIT(1),/* IF SET TO ONE, BUILD VAT TABLE       @L2A*/ 01760000
*      6 QMQMAT64 BIT(1),/* If set to one:                              01770000
*                              QMADD01 is bytes 0-1                     01780000
*                              QMADD23 is bytes 2-3                     01790000
*                              QMADD   is bytes 4-7                     01800000
*                           of a 64-bit QMAT pointer             @L3A*/ 01810000
*      6 *      BIT(2), /* RESERVED                              @L3C*/ 01820000
*    4 QMRSV02 CHAR (1),    /* RESERVED                          @L3C*/ 01830000
*    4 QMADD23 CHAR (2),    /* QMAT pointer bytes 2-3                   01840000
*                              if QMQMAT64 is one                @L3C*/ 01850000
*    4 QMPACLX PTR(31), /* 4-BYTE POINTER TO EXTERNAL PARAMETERS @L1C*/ 01860000
*    4 QMADD PTR(32),   /* Address of address table (QMAT)              01870000
*                              31-bit if QMQMAT64 = 0 but               01880000
*                              bytes 4-7 of 64-bit pointer              01890000
*                              if QMQMAT64 = 1                   @L3C*/ 01900000
*    4 QMSTO PTR(31),   /* ADDRESS OF STORAGE TABLE (QMST)       @L1C*/ 01910000
*    4 QMPCL PTR(31),   /* ADDR OF EXTERNAL PARAMETERS */               01920000
*       6 QMPCMNC CHAR(1),  /* NO OF RECS FOR ASSIGN/READ/WRITE */      01930000
*          8 QMPCM BIT(4),  /* RECS TO ASSIGN */                        01940000
*          8 QMPNC BIT(4),  /* READ/WRITE REC COUNT */                  01950000
*       6 QMPACL PTR(24);   /* ADDR OF EXTERNAL PARAMETERS */           01960000
*/*                                             */                      01970000
*/*  THE FOLLOWING FIELD NAMES ARE NEW FOR OS/VS/RELEASE 2 */           01980000
*  DCL 1 SWAQMPA BASED(QMPAPTR),                                        01990000
*        4 QMSWSP CHAR(1),       /* SWA SUBPOOL NUMBER */               02000000
*        4 *      CHAR(11),      /* RESERVED */                         02010000
*        4 QMRBN FIXED(31);      /* BLOCK NUMBER FOR THIS JOB */        02020000
*                                                                       02030000
*/* CONSTANTS USED TO SET VALUES IN THE QMPA                     @L1A*/ 02040000
*                                                                       02050000
*  DCL QMCURVER FIXED(8) CONSTANT(2); /* QMPA VERSION 2          @L1A*/ 02060000
*       /*    SWA MANAGER MOVE MODE FUNCTION CODES               @L2A*/ 02070000
*   DCL                                                                 02080000
*         QMASGS    BIT(8) CONSTANT('00'X);/* FOR ASSIGN/STARTS  @L2A*/ 02090000
*   DCL                                                                 02100000
*         QMASGN    BIT(8) CONSTANT('01'X);/* FOR ASSIGNS        @L2A*/ 02110000
*   DCL                                                                 02120000
*         QMWRTA    BIT(8) CONSTANT('02'X);/* FOR WRITE & ASSIGNS@L2A*/ 02130000
*   DCL                                                                 02140000
*         QMWRTE    BIT(8) CONSTANT('03'X);/* FOR WRITES         @L2A*/ 02150000
*   DCL                                                                 02160000
*         QMREAD    BIT(8) CONSTANT('04'X);/* FOR READS          @L2A*/ 02170000
*   DCL                                                                 02180000
*         QMREDALL  BIT(8) CONSTANT('05'X);/* FOR READING THE SWA       02190000
*                                             PREFIX AND DATA PORTION   02200000
*                                             OF THE SWA BLOCK   @L2A*/ 02210000
*   DCL                                                                 02220000
*         QMWRTALL  BIT(8) CONSTANT('06'X);/* FOR UPDATING THE SWA      02230000
*                                             PREFIX AND DATA PORTION   02240000
*                                             OF THE SWA BLOCK   @L2A*/ 02250000
*   DCL                                                                 02260000
*         QMDELE    BIT(8) CONSTANT('08'X);/* FOR DELETES        @L2A*/ 02270000
