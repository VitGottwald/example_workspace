*                                                                       00001000
* %DCL HZSZCPAR_INCLUDED CHAR EXT;                                      00002000
* %DEACTIVATE HZSZCPAR_INCLUDED;                                        00003000
* %IF HZSZCPAR_INCLUDED = '' %THEN                                      00004000
* %DO;                                                                  00005000
*/* Macro made bi-lingual on 15191. CBGEN compile date 12258         */ 00006000
*% /*                                                                   00007000
         MACRO                                                          00008000
         HZSZCPAR &DSECT=YES,&LIST=YES,&TITLE=YES,&CParArea=YES,       *00009000
               &CParKeywordEntry=COND,&CParKeywordValueEntry=COND,     *00010000
               &CParKeywordInfo=COND,&CParKeywordFlags=COND,           *00011000
               &CParKeywordData=COND                                    00012000
                      GBLC  &HZSZCPAR_INCLUDED                          00013000
                      GBLC  &ZCBPRINT                                   00014000
&HZSZCPAR_INCLUDED    SETC  'YES'                                       00015000
                      AIF   ('&LIST' EQ 'NONE').P0                      00016000
                      AIF   ('&TITLE' EQ 'NO').P5                       00017000
 TITLE                'HZSZCPAR  - HC Check Parsing for parameter      *00018000
                           '                                            00019000
.P5                   ANOP                                              00020000
**/ HZSZCPAR_1:;                                                        00021000
*/****START OF SPECIFICATIONS****************************************** 00022000
*                                                                       00023000
*01* MACRO NAME: HZSZCPAR                                               00024000
*                                                                       00025000
*01* DSECT NAME:                                                        00026000
*            CParArea                                                   00027000
*            CParKeywordEntry                                           00028000
*            CParKeywordValueEntry                                      00029000
*            CParKeywordInfo                                            00030000
*            CParKeywordFlags                                           00031000
*            CParKeywordData                                            00032000
*                                                                       00033000
*01* DESCRIPTIVE NAME: HC Check Parsing for parameter                   00034000
*                                                                       00035000
*02*   ACRONYM: N/A                                                     00036000
*                                                                       00037000
*01* COMPONENT:  IBM Health Checker for z/OS (SCHZS)                    00038000
*                                                                       00039000
*01* PROPRIETARY STATEMENT =                                            00040000
*                                                                       00041000
*    Licensed Materials - Property of IBM                               00042000
*    5694-A01 COPYRIGHT IBM CORP. 2006,2008                             00043000
*                                                                       00044000
*01* STATUS = HBB7750                                                   00045000
*                                                                       00046000
*01* END OF PROPRIETARY STATEMENT                                       00047000
*                                                                       00048000
*01* EXTERNAL CLASSIFICATION: PI                                        00049000
*01* END OF EXTERNAL CLASSIFICATION:                                    00050000
*                                                                       00051000
*01* FUNCTION:                                                          00052000
*                                                                       00053000
*       Parsing structures                                              00054000
**/                                                                     00055000
*/********************************************************************/ 00056000
*/*  HZSCPARS REQUEST=PARSE                                          */ 00057000
*/*             input: PARMArea                                      */ 00058000
*/*             input: PARMLen                                       */ 00059000
*/*            output: CParArea                                      */ 00060000
*/*              CParArea consists of a header ("CParArea") which    */ 00061000
*/*              has the header for a queue of CParKeywordEntry's    */ 00062000
*/*              each of which has the header for a queue of         */ 00063000
*/*              CParKeywordEntryValue's                             */ 00064000
*/*   (Note that CParKeywordInfo area is just zeroes at this point)  */ 00065000
*/*   Keyword Entries are in order                                   */ 00066000
*/*   To scan for a given CParKeywordEntry@                          */ 00067000
*/*      HZSCPARS REQUEST=CHECKPARM                                  */ 00068000
*/*             input: keyword name (upper case)                     */ 00069000
*/*            output: CParKeywordEntry addr or 0 if not found       */ 00070000
*/*   To validate the values for a keyword                           */ 00071000
*/*      HZSCPARS REQUEST=CHECKPARM                                  */ 00072000
*/*             input: parameter name (16-char)                      */ 00073000
*/*             input: CParKeywordEntry area                         */ 00074000
*/*         Error Messages:                                          */ 00075000
*/*           Too few values for parameter x                         */ 00076000
*/*           Too many values for parameter x                        */ 00077000
*/*   To validate a given decimal keyword value                      */ 00078000
*/*      HZSCPARS REQUEST=CHECKDEC                                   */ 00079000
*/*             input: parameter name (16-char)                      */ 00080000
*/*             input: KeywordData area (from CParKeywordEntry or    */ 00081000
*/*                    KeywordValueEntry)                            */ 00082000
*/*             input: minimum value                                 */ 00083000
*/*             input: maximum value                                 */ 00084000
*/*             input: value to be used when % is provided           */ 00085000
*/*             input output: a CParKeywordInfo area to be filled in */ 00086000
*/*             Note: Handles suffixes of "K", "M", "G", "P", "T",   */ 00087000
*/*                   "E", "%"                                       */ 00088000
*/*         Error Messages:                                          */ 00089000
*/*           Value for parameter x is too long                      */ 00090000
*/*           Value for parameter x is too big                       */ 00091000
*/*           Value for parameter x is not a valid decimal number    */ 00092000
*/*           Value for parameter x is too small                     */ 00093000
*/*   To validate a given hexadecimal keyword value                  */ 00094000
*/*      HZSCPARS REQUEST=CHECKHEX                                   */ 00095000
*/*             input: parameter name (16-char)                      */ 00096000
*/*             input: KeywordData area (from CParKeywordEntry or    */ 00097000
*/*                    KeywordValueEntry)                            */ 00098000
*/*             input: minimum value                                 */ 00099000
*/*             input: maximum value                                 */ 00100000
*/*             input output: a CParKeywordInfo area to be filled in */ 00101000
*/*         Error Messages:                                          */ 00102000
*/*           Value for parameter x is too long                      */ 00103000
*/*           Value for parameter x is too big                       */ 00104000
*/*           Value for parameter x is not a valid hex number        */ 00105000
*/*           Value for parameter x is too small                     */ 00106000
*/*   To validate a given character keyword value                    */ 00107000
*/*      HZSCPARS REQUEST=CHECKCHAR                                  */ 00108000
*/*             input: parameter name (16-char)                      */ 00109000
*/*             input: KeywordData area (from CParKeywordEntry or    */ 00110000
*/*                    KeywordValueEntry)                            */ 00111000
*/*             input: minimum length                                */ 00112000
*/*             input: maximum length                                */ 00113000
*/*             input output: a CParKeywordInfo area to be filled in */ 00114000
*/*                    There is no output information here that you  */ 00115000
*/*                    will need.                                    */ 00116000
*/*         Error Messages:                                          */ 00117000
*/*           Value for parameter x is too long                      */ 00118000
*/*           Value for parameter x is too short                     */ 00119000
*/*   To check if any unknown/unprocessed keywords were specified    */ 00120000
*/*      HZSCPARS REQUEST=CHECKNOTPROC,CPARAREA=cpararea             */ 00121000
*/*   When done with the keyword area                                */ 00122000
*/*      HZSCPARS REQUEST=FREE,CPARAREA=cpararea                     */ 00123000
*/*      Note that this is done automatically for REMOTE=NO          */ 00124000
*/*      checks upon completion of the invocation in which           */ 00125000
*/*      the parse area was obtained                                 */ 00126000
*/********************************************************************/ 00127000
*/*                                                                     00128000
*01* METHOD OF ACCESS:                                                  00129000
*02*   ASM:                                                             00130000
*      HZSZCPAR                                                         00131000
*           DSECT=YES!NO  -- Request DSECT definition                   00132000
*           CParArea=YES!NO!COND -- Request header mapping              00133000
*                            USING on CParArea                          00134000
*           CparKeywordEntry=YES!NO!COND -- Request entry mapping       00135000
*                            USING on CparKeywordEntry                  00136000
*           CparKeywordValueEntry=YES!NO!COND -- Request value mapping  00137000
*                            USING on CparKeywordValueEntry             00138000
*           CparKeywordInfo=YES!NO!COND -- Request keyword info mapping 00139000
*                            USING on CparKeywordInfo                   00140000
*           CparKeywordFlags=YES!NO!COND -- Request flags mapping       00141000
*                            USING on CparKeywordFlags                  00142000
*           CparKeywordData=YES!NO!COND -- Request data mapping         00143000
*                            USING on CparKeywordData                   00144000
*     Default: DSECT=YES,CParArea=YES,CparKeywordEntry=COND,            00145000
*              CparKeywordValueEntry=COND,CparKeywordInfo=COND,         00146000
*              CparKeywordFlags=COND,CparKeywordData=COND               00147000
*     Notes: name=YES  => expand                                        00148000
*            name=NO   => do not expand                                 00149000
*            name=COND => expand only if DSECT=YES                      00150000
*                                                                       00151000
*02*   PL/X:                                                            00152000
*                                                                       00153000
*        %INCLUDE SYSLIB(HZSZCPAR)                                      00154000
*        Declare based structures via ISA(xxx) BASED....                00155000
*                                                                       00156000
*                                                                       00157000
*01* SIZE:                                                              00158000
*            CParArea              -- X'0020' bytes                     00159000
*            CParKeywordEntry      -- X'002C' bytes                     00160000
*            CParKeywordValueEntry -- X'0020' bytes                     00161000
*            CParKeywordInfo       -- X'0020' bytes                     00162000
*            CParKeywordFlags      -- X'0003' bytes                     00163000
*            CParKeywordData       -- X'0008' bytes                     00164000
*                                                                       00165000
*01* POINTED TO BY: N/A                                                 00166000
*                                                                       00167000
*01* CREATED BY: caller                                                 00168000
*                                                                       00169000
*01* DELETED BY: HC when check iteration ends for local checks.         00170000
*                                                                       00171000
*                                                                       00172000
*01* STORAGE ATTRIBUTES:                                                00173000
*02*   SUBPOOL/DATASPACE:                                               00174000
*02*   KEY:       caller                                                00175000
*02*   RESIDENCY: caller-provided                                       00176000
*                                                                       00177000
*01* FREQUENCY:   1 per parameter parsing                               00178000
*                                                                       00179000
*01* SERIALIZATION: None.                                               00180000
*                                                                       00181000
*01* DEPENDENCIES:  hzshcpar.h Metal C header file                      00182000
*                                                                       00183000
*01* NOTES:                                                             00184000
*                                                                       00185000
*01* COMPONENT: HC                                                      00186000
*                                                                       00187000
*01* DISTRIBUTION LIBRARY:  APLSLIB                                     00188000
*                                                                       00189000
*01* EYE-CATCHER: CPARArea                                              00190000
*02*   OFFSET:  0                                                       00191000
*02*   LENGTH:  8                                                       00192000
*                                                                       00193000
*01* CHANGE-ACTIVITY:                                                   00194000
*  $L0=HCR8CBG  HBB7730,051001,PD00XB: R8                               00195000
*  $L1=HCR8     HBB7730,051001,PD00XB: R8                               00196000
*  $P1=ME05620  HBB7730,060131,PD00XB: Save key of area for freemain    00197000
*  $P2=ME08493  HBB7740,061115,PD00MP: Fix copyright statement          00198000
*                                                                       00199000
* ****************************************************************      00200000
* *** Any and all changes to this macro MUST also be reflected ***      00201000
* *** in the corresponding Metal C header file hzshcpar.h      ***      00202000
* ****************************************************************      00203000
*                                                                       00204000
****END OF SPECIFICATIONS*********************************************/ 00205000
*% /*                                                                   00206000
.P0                   ANOP                                              00207000
                      AIF   ('&ZCBPRINT' EQ 'NO').P1                    00208000
                      AIF   ('&LIST' EQ 'YES').P2                       00209000
.P1                   ANOP                                              00210000
                      PUSH  PRINT                                       00211000
                      PRINT OFF                                         00212000
.P2                   ANOP                                              00213000
                      AIF   ('&CParArea' EQ 'NO').L0002                 00214000
                      AIF   ('&DSECT' EQ 'YES').L0003                   00215000
                      AIF   ('&CParArea' NE 'YES').L0002                00216000
CParArea              DS    0F                                          00217000
                      AGO   .L0004                                      00218000
.L0003                ANOP                                              00219000
CParArea              DSECT                                             00220000
.L0004                ANOP                                              00221000
CParAreaID            DS    CL8    'CPARAREA'                           00222000
CParAreaLength        DS    F      The length of the CparArea plus its *00223000
                                   subsidiary blocks                    00224000
CParAreaSubpool       DS    X      The storage is in the key in which  *00225000
                                   the parse routine is invoked.        00226000
CParAreaFlags         DS    B                                           00227000
*  Bit definitions:                                                     00228000
CParAreaFormatPositional EQU X'80' No key() or key= was encountered     00229000
CParAreaNumKeywords   DS    H      Number of CParKeywordEntry's         00230000
CParAreaKeywordEntryFirstAddr DS A Address of first CParKeywordEntry.  *00231000
                                   0 if no entries                      00232000
CParAreaKeywordEntryLastAddr DS A  Address of last CParKeywordEntry. 0 *00233000
                                   if no entries                        00234000
CparAreaKey           DS    X      The storage key                      00235000
                      DS    CL7    Reserved                             00236000
kCParAreaID_0TO3      EQU   C'CPAR' This is the first 4-byte segment   *00237000
                                   of an 8-byte constant.               00238000
kCParAreaID_4TO7      EQU   C'AREA' This is the second 4-byte segment  *00239000
                                   of an 8-byte constant.               00240000
CParArea_Len          EQU   *-CParArea                                  00241000
.L0002                ANOP                                              00242000
                      AIF   ('&CParKeywordEntry' EQ 'NO').L0005         00243000
                      AIF   ('&DSECT' EQ 'YES').L0006                   00244000
                      AIF   ('&CParKeywordEntry' NE 'YES').L0005        00245000
CParKeywordEntry      DS    0F                                          00246000
                      AGO   .L0007                                      00247000
.L0006                ANOP                                              00248000
CParKeywordEntry      DSECT                                             00249000
.L0007                ANOP                                              00250000
CParKeywordEntryID    DS    CL8    'CPARKEYE'                           00251000
CParKeywordEntryNextAddr DS A      Address of the next                 *00252000
                                   CParKeywordEntry. 0 if no next      *00253000
                                   entry                                00254000
CParKeywordEntryPrevAddr DS A      Address of the previous             *00255000
                                   CParKeywordEntry. 0 if no previous  *00256000
                                   entry                                00257000
CParKeywordEntryData  DS    CL8    This area is mapped by DSECT        *00258000
                                   CParKeywordData                      00259000
CParKeywordEntryNumValues DS F     Number of CParKeywordValueEntry's    00260000
CParKeywordEntryValueFirstAddr DS A Address of first                   *00261000
                                   CParKeywordValueEntry. 0 if no      *00262000
                                   entries. 0 is expected when         *00263000
                                   CparAreaFormatPositional is on       00264000
CParKeywordEntryValueLastAddr DS A Address of last                     *00265000
                                   CParKeywordValueEntry. 0 if no      *00266000
                                   entries. 0 is expected when         *00267000
                                   CparAreaFormatPositional is on       00268000
CParKeywordEntryFlags DS    B                                           00269000
*  Bit definitions:                                                     00270000
CParKeywordEntryProcessed EQU X'80' Processed by a Checkparm           *00271000
                                   invocation.                          00272000
                      DS    CL7    Reserved                             00273000
kCParKeywordEntryID_0TO3 EQU C'CPAR' This is the first 4-byte segment  *00274000
                                   of an 8-byte constant.               00275000
kCParKeywordEntryID_4TO7 EQU C'KEYE' This is the second 4-byte segment *00276000
                                   of an 8-byte constant.               00277000
CParKeywordEntry_Len  EQU   *-CParKeywordEntry                          00278000
.L0005                ANOP                                              00279000
                      AIF   ('&CParKeywordValueEntry' EQ 'NO').L0008    00280000
                      AIF   ('&DSECT' EQ 'YES').L0009                   00281000
                      AIF   ('&CParKeywordValueEntry' NE 'YES').L0008   00282000
CParKeywordValueEntry DS    0F                                          00283000
                      AGO   .L000A                                      00284000
.L0009                ANOP                                              00285000
CParKeywordValueEntry DSECT                                             00286000
.L000A                ANOP                                              00287000
CParKeywordValueEntryID DS  CL8    'CPARKEYV'                           00288000
CParKeywordValueEntryNextAddr DS A Address of next                     *00289000
                                   CParKeywordValueEntry. 0 if no next *00290000
                                   entry                                00291000
CParKeywordValueEntryPrevAddr DS A Address of previous                 *00292000
                                   CParKeywordValueEntry. 0 if no      *00293000
                                   previous entry                       00294000
CParKeywordValueEntryData DS CL8   This area is mapped by DSECT        *00295000
                                   CParKeywordData                      00296000
                      DS    CL8    Reserved                             00297000
kCParKeywordValueEntryID_0TO3 EQU C'CPAR' This is the first 4-byte     *00298000
                                   segment of an 8-byte constant.       00299000
kCParKeywordValueEntryID_4TO7 EQU C'KEYV' This is the second 4-byte    *00300000
                                   segment of an 8-byte constant.       00301000
CParKeywordValueEntry_Len EQU *-CParKeywordValueEntry                   00302000
.L0008                ANOP                                              00303000
                      AIF   ('&CParKeywordInfo' EQ 'NO').L000B          00304000
                      AIF   ('&DSECT' EQ 'YES').L000C                   00305000
                      AIF   ('&CParKeywordInfo' NE 'YES').L000B         00306000
CParKeywordInfo       DS    0D                                          00307000
                      AGO   .L000D                                      00308000
.L000C                ANOP                                              00309000
CParKeywordInfo       DSECT                                             00310000
.L000D                ANOP                                              00311000
CParKeywordInfoFlags  DS    CL3    This area is mapped by DSECT        *00312000
                                   CParKeywordInfoFlags                 00313000
CParKeywordInfoSuffix DS    CL1    "K", "M", "G", "P", % for CHECKDEC. *00314000
                                   It is not set for CHECKHEX and      *00315000
                                   CHECKCHAR.                           00316000
                      DS    CL4    Reserved                             00317000
CParKeywordInfoNotMultiplied DS CL8 This is the value without being    *00318000
                                   multiplied by the suffix, for       *00319000
                                   CHECKHEX and CHECKDEC. It is not    *00320000
                                   set for CHECKCHAR.                   00321000
CParKeywordInfoValue  DS    CL8    This is the value after being       *00322000
                                   multiplied by the suffix, for       *00323000
                                   CHECKHEX and CHECKDEC. It is not    *00324000
                                   set for CHECKCHAR.                   00325000
                      DS    CL8    Reserved                             00326000
CParKeywordInfo_Len   EQU   *-CParKeywordInfo                           00327000
.L000B                ANOP                                              00328000
                      AIF   ('&CParKeywordFlags' EQ 'NO').L000E         00329000
                      AIF   ('&DSECT' EQ 'YES').L000F                   00330000
                      AIF   ('&CParKeywordFlags' NE 'YES').L000E        00331000
CParKeywordFlags      DS    0X                                          00332000
                      AGO   .L0010                                      00333000
.L000F                ANOP                                              00334000
CParKeywordFlags      DSECT                                             00335000
.L0010                ANOP                                              00336000
CParKeywordFlagBits   DS    BL3                                         00337000
*  Bit definitions:                                                     00338000
CParKeywordFlagNumericWithSuffix EQU X'80' The value is numeric with a *00339000
                                   Suffix (such as "K") for CHECKDEC.  *00340000
                                   It is not set for CHECKHEX and      *00341000
                                   CHECKCHAR.                           00342000
CParKeywordFlagNumericWithPercent EQU X'40' The value is numeric with  *00343000
                                   a percent suffix for CHECKDEC. It   *00344000
                                   is not set for CHECKHEX and         *00345000
                                   CHECKCHAR.                           00346000
                      ORG   CParKeywordFlags+3                          00347000
CParKeywordFlags_Len  EQU   *-CParKeywordFlags                          00348000
.L000E                ANOP                                              00349000
                      AIF   ('&CParKeywordData' EQ 'NO').L0011          00350000
                      AIF   ('&DSECT' EQ 'YES').L0012                   00351000
                      AIF   ('&CParKeywordData' NE 'YES').L0011         00352000
CParKeywordData       DS    0F                                          00353000
                      AGO   .L0013                                      00354000
.L0012                ANOP                                              00355000
CParKeywordData       DSECT                                             00356000
.L0013                ANOP                                              00357000
CParKeywordDataLen    DS    F      The length of the data               00358000
CParKeywordDataAddr   DS    A      The address of the data              00359000
CParKeywordData_Len   EQU   *-CParKeywordData                           00360000
.L0011                ANOP                                              00361000
                      AIF   ('&ZCBPRINT' EQ 'NO').P3                    00362000
                      AIF   ('&LIST' EQ 'YES').P4                       00363000
.P3                   ANOP                                              00364000
                      POP   PRINT                                       00365000
.P4                   ANOP                                              00366000
.P_EXIT               ANOP                                              00367000
                      MEND                                              00368000
**/ HZSZCPAR_2:;                                                        00369000
* %HZSZCPAR_INCLUDED = 'YES';                                           00370000
* %DCL ZCBPRINT CHAR EXT;                                               00371000
* %DEACTIVATE ZCBPRINT;                                                 00372000
* %DCL HZSZCPAR_LIST CHAR EXT;                                          00373000
* %DEACTIVATE HZSZCPAR_LIST;                                            00374000
* %IF HZSZCPAR_LIST ^= 'NO' &                                           00375000
*    ZCBPRINT ^= 'NO' %THEN                                             00376000
*   %GOTO HZSZCPAR_3;                                                   00377000
*   @LIST PUSH NOECHO;                                                  00378000
*   @LIST NOASSEMBLE NOECHO;                                            00379000
*   @LIST OFF C NOECHO;                                                 00380000
* %HZSZCPAR_3:;                                                         00381000
*/* Start of PL/X Source                                             */ 00382000
*                                                          @SPACE(2);   00383000
*                                                                       00384000
*Dcl 1 CParArea Type                                          /* @L1A*/ 00385000
*      ,3 CParAreaID Char(8)          /* 'CPARAREA'              @L1A*/ 00386000
*      ,3 CParAreaLength Fixed        /* The length of the CparArea     00387000
*                              plus its subsidiary blocks        @L1A*/ 00388000
*      ,3 CParAreaSubpool Fixed(8)    /* The storage is in the          00389000
*                              key in which the parse routine           00390000
*                              is invoked.                       @L1A*/ 00391000
*      ,3 CParAreaFlags Bit(8)                                /* @L1A*/ 00392000
*        ,4 CParAreaFormatPositional Bit(1)   /* No key() or key=       00393000
*                              was encountered                   @L1A*/ 00394000
*      ,3 CParAreaNumKeywords Fixed(15)    /* Number of                 00395000
*                              CParKeywordEntry's                @L1A*/ 00396000
*      ,3 CParAreaKeywordEntryFirstAddr Ptr /* Address of first         00397000
*                              CParKeywordEntry. 0 if no entries @L1A*/ 00398000
*      ,3 CParAreaKeywordEntryLastAddr Ptr /* Address of last           00399000
*                              CParKeywordEntry. 0 if no entries @L1A*/ 00400000
*      ,3 CparAreaKey Fixed(8)      /* The storage key           @P1A*/ 00401000
*      ,3 * Char(7)                 /* Reserved                  @P1C*/ 00402000
*      ;                                                                00403000
*Dcl kCParAreaID Char(8) Constant('CPARAREA');                /* @L1A*/ 00404000
*Dcl bCParArea isa(CParArea) based;                           /* @L1A*/ 00405000
*Dcl 1 CParKeywordEntry Type                                  /* @L1A*/ 00406000
*      ,3 CParKeywordEntryID Char(8)  /* 'CPARKEYE'              @L1A*/ 00407000
*      ,3 CParKeywordEntryNextAddr Ptr /* Address of the next           00408000
*                              CParKeywordEntry. 0 if no next           00409000
*                              entry                             @L1A*/ 00410000
*      ,3 CParKeywordEntryPrevAddr Ptr /* Address of the previous       00411000
*                              CParKeywordEntry. 0 if no previous       00412000
*                              entry                             @L1A*/ 00413000
*      ,3 CParKeywordEntryData    /* This area is mapped by DSECT       00414000
*                                    CParKeywordData             @L1A*/ 00415000
*        ,5 CParKeywordEntryDataIsa isa(CParKeywordData)                00416000
*      ,3 CParKeywordEntryNumValues Fixed  /* Number of                 00417000
*                              CParKeywordValueEntry's           @L1A*/ 00418000
*      ,3 CParKeywordEntryValueFirstAddr Ptr /* Address of first        00419000
*                              CParKeywordValueEntry. 0 if no           00420000
*                              entries. 0 is expected when              00421000
*                              CparAreaFormatPositional is on    @L1A*/ 00422000
*      ,3 CParKeywordEntryValueLastAddr Ptr /* Address of last          00423000
*                              CParKeywordValueEntry. 0 if no           00424000
*                              entries. 0 is expected when              00425000
*                              CparAreaFormatPositional is on    @L1A*/ 00426000
*      ,3 CParKeywordEntryFlags Bit(8)                                  00427000
*        ,5 CParKeywordEntryProcessed Bit(1)   /* Processed by          00428000
*                       a Checkparm invocation.                  @L1A*/ 00429000
*      ,3 * Char(7)                 /* Reserved                  @L1A*/ 00430000
*      ;                                                                00431000
*Dcl kCParKeywordEntryID Char(8) Constant('CPARKEYE');        /* @L1A*/ 00432000
*Dcl bCParKeywordEntry isa(CParKeywordEntry) based;           /* @L1A*/ 00433000
*Dcl 1 CParKeywordValueEntry Type                             /* @L1A*/ 00434000
*      ,3 CParKeywordValueEntryID Char(8)   /* 'CPARKEYV'        @L1A*/ 00435000
*      ,3 CParKeywordValueEntryNextAddr Ptr /* Address of next          00436000
*                              CParKeywordValueEntry. 0 if no next      00437000
*                              entry                             @L1A*/ 00438000
*      ,3 CParKeywordValueEntryPrevAddr Ptr /* Address of previous      00439000
*                              CParKeywordValueEntry. 0 if no previous  00440000
*                              entry                             @L1A*/ 00441000
*      ,3 CParKeywordValueEntryData /* This area is mapped by DSECT     00442000
*                                   CParKeywordData              @L1A*/ 00443000
*        ,5 CParKeywordValueEntryDataIsa isa(CParKeywordData)           00444000
*      ,3 * Char(8)                 /* Reserved                  @L1A*/ 00445000
*      ;                                                                00446000
*Dcl kCParKeywordValueEntryID Char(8) Constant('CPARKEYV');   /* @L1A*/ 00447000
*Dcl bCParKeywordValueEntry isa(CParKeywordValueEntry) based; /* @L1A*/ 00448000
*Dcl 1 CParKeywordInfo Type                                   /* @L1A*/ 00449000
*      ,3 CParKeywordInfoFlags      /* This area is mapped by DSECT     00450000
*                                      CParKeywordInfoFlags      @L1A*/ 00451000
*        ,5 CParKeywordInfoFlagsIsa isa(CParKeywordFlags)     /* @L1A*/ 00452000
*      ,3 CParKeywordInfoSuffix Char(1)   /* "K", "M", "G", "P", %      00453000
*                           for CHECKDEC. It is not set for             00454000
*                           CHECKHEX and CHECKCHAR.              @L1A*/ 00455000
*      ,3 * Char(4)                 /* Reserved                  @L1A*/ 00456000
*      ,3 CParKeywordInfoNotMultiplied Char(8) Bdy(Dword)   /* This     00457000
*                           is the value without being multiplied       00458000
*                           by the suffix, for CHECKHEX and CHECKDEC.   00459000
*                           It is not set for CHECKCHAR.         @L1A*/ 00460000
*      ,3 CParKeywordInfoValue Char(8) Bdy(Dword)   /*                  00461000
*                           This is the value after                     00462000
*                           being multiplied by the suffix, for         00463000
*                           CHECKHEX and CHECKDEC. It is not set        00464000
*                           for CHECKCHAR.                       @L1A*/ 00465000
*      ,3 * Char(8)                 /* Reserved                  @L1A*/ 00466000
*      ;                                                                00467000
*Dcl bCParKeywordInfo isa(CParKeywordInfo) based;             /* @L1A*/ 00468000
*Dcl 1 CParKeywordFlags Type                                  /* @L1A*/ 00469000
*      ,3 CParKeywordFlagBits Bit(24)                         /* @L1A*/ 00470000
*        ,5 CParKeywordFlagNumericWithSuffix Bit(1)  /* The value is    00471000
*                           numeric with a Suffix (such as "K")         00472000
*                           for CHECKDEC. It is not set for             00473000
*                           CHECKHEX and CHECKCHAR.              @L1A*/ 00474000
*        ,5 CParKeywordFlagNumericWithPercent Bit(1) /* The value is    00475000
*                           numeric with a percent suffix               00476000
*                           for CHECKDEC. It is not set for             00477000
*                           CHECKHEX and CHECKCHAR.              @L1A*/ 00478000
*      ;                                                                00479000
*Dcl 1 CParKeywordData Type                                   /* @L1A*/ 00480000
*     ,3 CParKeywordDataLen Fixed   /* The length of the data    @L1A*/ 00481000
*     ,3 CParKeywordDataAddr Ptr    /* The address of the data   @L1A*/ 00482000
*     ;                                                                 00483000
*@LOGIC;                                                                00484000
*#PRAGMA TOOL=CBGEN.                                                    00485000
*#DELETE.bCParArea                                                      00486000
*#DELETE.bCParKeywordEntry                                              00487000
*#DELETE.CParKeywordEntryDataIsa                                        00488000
*#DELETE.bCParKeywordValueEntry                                         00489000
*#DELETE.CParKeywordValueEntryDataIsa                                   00490000
*#DELETE.bCParKeywordInfo                                               00491000
*#DELETE.CParKeywordInfoFlagsIsa                                        00492000
*#USEORG.                                                               00493000
*#ALIGNOP.                                                              00494000
*#NOTUPPER.                                                             00495000
*#EPRAGMA.                                                              00496000
*@ENDLOGIC;                                                             00497000
*/* End of PL/X Source                                               */ 00498000
* %IF HZSZCPAR_LIST ^= 'NO' &                                           00499000
*    ZCBPRINT ^= 'NO' %THEN                                             00500000
*   %GOTO HZSZCPAR_4;                                                   00501000
*   @LIST POP NOECHO;                                                   00502000
* %HZSZCPAR_4:;                                                         00503000
* %END;                                                                 00504000
