*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IWMMRELA                              -02/22/21-<0> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  Relate monitoring environments (PBs)          * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5650-ZOS COPYRIGHT IBM CORP. 1993, 2021                         * 00001200
*                                                                     * 00001300
* STATUS= HBB77D0                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      The calling subsystem work manager can use IWMMRELA to relate  * 00002100
*      two different monitoring environments that are associated with * 00002200
*      the same work request.  IWMMRELA initializes a monitoring      * 00002300
*      environment, called a dependent monitoring environment, and    * 00002400
*      associates it with a previously established monitoring         * 00002500
*      environment, called a parent monitoring environment.           * 00002600
*                                                                     * 00002700
*      You can use IWMMRELA when you do not have direct access to the * 00002800
*      information required by IWM4MINI. If the caller has the        * 00002900
*      monitoring token for a parent environment that is previously   * 00003000
*      established for the same work request, you provide it in the   * 00003100
*      PARENTMONTKN parameter. If the caller does not pass the        * 00003200
*      monitoring token, you can use PARENTP=FINDACTIVE to specify    * 00003300
*      that the parent monitoring environment is the active           * 00003400
*      monitoring environment owned by the address space and which is * 00003500
*      associated with the TCB provided via PARENTTCB.                * 00003600
*                                                                     * 00003700
*      IWMMRELA must be used together with IWMMXFER to ensure that    * 00003800
*      the dependent monitoring environment is a valid representation * 00003900
*      for the work request.                                          * 00004000
*                                                                     * 00004100
*      Optionally with this macro,you can use the OWNER_TOKEN and     * 00004200
*      OWNER_DATA parameters to use the monitoring environment for    * 00004300
*      your own purposes.You can use the token/data to keep your own  * 00004400
*      information.                                                   * 00004500
*                                                                     * 00004600
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00004700
*                                                                     * 00004800
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00004900
*                                                                     * 00005000
*01* ENVIRONMENT:                                                     * 00005100
*                                                                     * 00005200
*                                                                     * 00005300
*      Dispatchable unit mode: Task or SRB mode.                      * 00005400
*                                                                     * 00005500
*      Cross Memory Mode: Any PASN, any HASN, any SASN.               * 00005600
*                                                                     * 00005700
*      Locks:            Unlocked when PARENT=FINDACTIVE is           * 00005800
*                        specified, otherwise, no restrictions.       * 00005900
*                                                                     * 00006000
*      Control parameters:     Control parameters must be in the      * 00006100
*                        primary address space, except the TCB, if    * 00006200
*                        specified, must reside in current home       * 00006300
*                        address space.                               * 00006400
*                                                                     * 00006500
*      Minimum authorization: Problem state or supervisor state.  PSW * 00006600
*                        key must either be 0 or match the value      * 00006700
*                        supplied on IWM4MCRE.                        * 00006800
*                                                                     * 00006900
*      AMODE:            31-bit.                                      * 00007000
*                                                                     * 00007100
*      ASC mode:         Primary.                                     * 00007200
*                                                                     * 00007300
*      Interrupt status: Enabled for I/O and external interrupts.     * 00007400
*                                                                     * 00007500
*01* PROGRAMMING REQUIREMENTS:                                        * 00007600
*                                                                     * 00007700
*                                                                     * 00007800
*    1.  You must include the IWMYCON mapping macro in the calling    * 00007900
*        program.                                                     * 00008000
*                                                                     * 00008100
*    2.  If the key specified on IWM4MCRE for the input MONTKN was a  * 00008200
*        user key (8-F), then the following must be true:             * 00008300
*                                                                     * 00008400
*                                                                     * 00008500
*        o   If you specify PARENTP=YES, then:                        * 00008600
*                                                                     * 00008700
*                                                                     * 00008800
*            -   Primary addressability must exist to the performance * 00008900
*                block IWM4MCRE obtained (represented by the input    * 00009000
*                MONTKN). You could do this by ensuring that current  * 00009100
*                primary matches primary at the time that IWM4MCRE    * 00009200
*                was invoked. If this service is invoked in a         * 00009300
*                subspace, the condition may be satisfied by ensuring * 00009400
*                that the performance block is shared with the base   * 00009500
*                space.                                               * 00009600
*                                                                     * 00009700
*            -   You cannot specify the list form of this macro. With * 00009800
*                PARENTP=YES, IWMMRELA produces an inline expansion   * 00009900
*                rather than an out-of-line service, so you do not    * 00010000
*                need a parameter list. Registers 0,1,14, and 15 are  * 00010100
*                not preserved across the expansion.                  * 00010200
*                                                                     * 00010300
*                                                                     * 00010400
*                                                                     * 00010500
*        o   If you specify PARENTP=FINDACTIVE, then the caller must  * 00010600
*            be in non-cross-memory mode (PASN=SASN=HASN). That is,   * 00010700
*            the current primary (and home) must match the primary    * 00010800
*            (and home) at the time that IWM4MCRE was invoked.        * 00010900
*                                                                     * 00011000
*                                                                     * 00011100
*                                                                     * 00011200
*    3.  If the key specified on IWM4MCRE for the parent environment  * 00011300
*        was a user key (8-F), then either primary or secondary       * 00011400
*        addressability must exist to the monitoring environment for  * 00011500
*        the parent environment.                                      * 00011600
*                                                                     * 00011700
*    4.  Both monitoring environments must be established on the same * 00011800
*        MVS image.                                                   * 00011900
*                                                                     * 00012000
*    5.  The caller must serialize to prevent any delay monitoring    * 00012100
*        services from being invoked concurrently for the monitoring  * 00012200
*        environment.                                                 * 00012300
*                                                                     * 00012400
*    6.  When PARENTP=YES, the caller must provide recovery.          * 00012500
*                                                                     * 00012600
*                                                                     * 00012700
*                                                                     * 00012800
*01* RESTRICTIONS:                                                    * 00012900
*    None.                                                            * 00013000
*                                                                     * 00013100
*                                                                     * 00013200
*                                                                     * 00013300
*01* INPUT REGISTER INFORMATION:                                      * 00013400
*                                                                     * 00013500
*    Before issuing the IWMMRELA macro, the caller does not have to   * 00013600
*    place any information into any register unless using it in       * 00013700
*    register notation for a particular parameter, or using it as a   * 00013800
*    base register.                                                   * 00013900
*                                                                     * 00014000
*01* OUTPUT REGISTER INFORMATION:                                     * 00014100
*                                                                     * 00014200
*    When control returns to the caller, the GPRs contain:            * 00014300
*                                                                     * 00014400
*                                                                     * 00014500
*    REGISTER  CONTENTS                                               * 00014600
*                                                                     * 00014700
*    0         Reason code if GR15 return code is non-zero            * 00014800
*                                                                     * 00014900
*    1         Used as work registers by the system                   * 00015000
*                                                                     * 00015100
*    2-13      Unchanged                                              * 00015200
*                                                                     * 00015300
*    14        Used as work registers by the system                   * 00015400
*                                                                     * 00015500
*    15        Return code                                            * 00015600
*                                                                     * 00015700
*                                                                     * 00015800
*                                                                     * 00015900
*    When control returns to the caller, the ARs contain:             * 00016000
*                                                                     * 00016100
*                                                                     * 00016200
*    REGISTER  CONTENTS                                               * 00016300
*                                                                     * 00016400
*    0-1       Used as work registers by the system                   * 00016500
*                                                                     * 00016600
*    2-13      Unchanged                                              * 00016700
*                                                                     * 00016800
*    14-15     Used as work registers by the system                   * 00016900
*                                                                     * 00017000
*                                                                     * 00017100
*                                                                     * 00017200
*    Some callers depend on register contents remaining the same      * 00017300
*    before and after issuing a service.  If the system changes the   * 00017400
*    contents of registers on which the caller depends, the caller    * 00017500
*    must save them before issuing the service, and restore them      * 00017600
*    after the system returns control.                                * 00017700
*                                                                     * 00017800
*01* PERFORMANCE IMPLICATIONS:                                        * 00017900
*                                                                     * 00018000
*    None                                                             * 00018100
*                                                                     * 00018200
*01* SYNTAX:                                                          * 00018300
*                                                                     * 00018400
*Ýxlabel¨  IWMMRELA  Ð  FUNCTION=CREATE                               * 00018500
*                    !    Ý,OWNER_TOKEN                               * 00018600
*                    !                  =»xowner_token!NO_OWNER_TOKEN * 00018700
*                    !                  º¨                            * 00018800
*                    !    Ý,OWNER_DATA=»xowner_data!NO_OWNER_DATAº¨   * 00018900
*                    !   Ð ,DISPTYPE=TCB                              * 00019000
*                    !   !     ,TCB=xtcb                              * 00019100
*                    !   ¿ ,DISPTYPE=SRB                              * 00019200
*                    !       Ð ,SAMEDU=YES                            * 00019300
*                    !       ¿ ,SAMEDU=NO                             * 00019400
*                    !   Ð ,PARENTP=YES                               * 00019500
*                    !   !     ,PARENTMONTKN=xparentmontkn            * 00019600
*                    !   !        Ý,PARENTENVTKN                      * 00019700
*                    !   !                       =»xparentenvtkn!NO_P * 00019800
*                    !   !                       ARENTENVTKNº¨        * 00019900
*                    !   !   Ð ,PARENTENV=NOSWITCH                    * 00020000
*                    !   !   Ô ,PARENTENV=SECONDARY                   * 00020100
*                    !   !   ¿ ,PARENTENV=HOME                        * 00020200
*                    !   ¿ ,PARENTP=FINDACTIVE                        * 00020300
*                    !         ,PARENTTCB=xparenttcb                  * 00020400
*                    ¿ ,FUNCTION=DELETE                               * 00020500
*                      ,MONTKN=xmontkn                                * 00020600
*                     Ý,RETCODE=xretcode¨                             * 00020700
*                     Ý,RSNCODE=xrsncode¨                             * 00020800
*                     Ý,PLISTVER=»xplistver!IMPLIED_VERSIONº¨         * 00020900
*                    ÐÝ,MF=S¨                                         * 00021000
*                    ÔÝ,MF=(L,xmfctrl»,xmfattr!0Dº)¨                  * 00021100
*                    ¿Ý,MF=(E,xmfctrl»,COMPLETEº)¨                    * 00021200
*                                                                     * 00021300
*                                                                     * 00021400
*      Where:                                                         * 00021500
*                                                                     * 00021600
*                                                                     * 00021700
*      Ýxlabel¨                                                       * 00021800
*          is an optional symbol, starting in column 1, that is the   * 00021900
*          name on the IWMMRELA macro invocation.  The name must      * 00022000
*          conform to the rules for an ordinary assembler language    * 00022100
*          symbol.                                                    * 00022200
*          DEFAULT: No name.                                          * 00022300
*                                                                     * 00022400
*                                                                     * 00022500
*                                                                     * 00022600
*                                                                     * 00022700
*      FUNCTION=»CREATE!DELETEº                                       * 00022800
*          is a required keyword input which indicates whether the    * 00022900
*          relationship is being established or inactivated.          * 00023000
*                                                                     * 00023100
*                                                                     * 00023200
*          FUNCTION=CREATE                                            * 00023300
*              indicates that the relationship is being established.  * 00023400
*                                                                     * 00023500
*                                                                     * 00023600
*              ÝOWNER_TOKEN=»xowner_token!NO_OWNER_TOKENº¨            * 00023700
*                  is the name (RS-type), or address in register      * 00023800
*                  (2)-(12), of an optional 32 bit input which        * 00023900
*                  contains a token maintained by the user/owner of   * 00024000
*                  the monitoring environment.  The format is         * 00024100
*                  undefined to MVS.                                  * 00024200
*                  DEFAULT: NO_OWNER_TOKEN indicates that no owner    * 00024300
*                  token is provided on this service.                 * 00024400
*                                                                     * 00024500
*                                                                     * 00024600
*                                                                     * 00024700
*                                                                     * 00024800
*              ÝOWNER_DATA=»xowner_data!NO_OWNER_DATAº¨               * 00024900
*                  is the name (RS-type), or address in register      * 00025000
*                  (2)-(12), of an optional 32 bit input which        * 00025100
*                  contains data maintained by the user/owner of the  * 00025200
*                  monitoring environment.  The format is undefined   * 00025300
*                  to MVS.                                            * 00025400
*                  DEFAULT: NO_OWNER_DATA indicates that no owner     * 00025500
*                  data is provided.                                  * 00025600
*                                                                     * 00025700
*                                                                     * 00025800
*                                                                     * 00025900
*                                                                     * 00026000
*              DISPTYPE=»TCB!SRBº                                     * 00026100
*                  is a required keyword input which describes the    * 00026200
*                  dispatchable units which participate in processing * 00026300
*                  work requests associated with the monitoring       * 00026400
*                  environment represented by the monitoring token    * 00026500
*                  (MONTKN).                                          * 00026600
*                                                                     * 00026700
*                                                                     * 00026800
*                  DISPTYPE=TCB                                       * 00026900
*                                                                     * 00027000
*                      indicates that work requests run in TCB mode   * 00027100
*                      under a TCB within the current home address    * 00027200
*                      space. Note that in cross-memory mode, this    * 00027300
*                      may be different from the current primary      * 00027400
*                      address space.                                 * 00027500
*                                                                     * 00027600
*                                                                     * 00027700
*                      TCB=xtcb                                       * 00027800
*                          is the name (RS-type), or address in       * 00027900
*                          register (2)-(12), of a required character * 00028000
*                          input which defines the TCB within the     * 00028100
*                          current home address space which will      * 00028200
*                          serve the work request.  Note that this    * 00028300
*                          name is not the pointer to the TCB, but    * 00028400
*                          the name of the data area containing the   * 00028500
*                          TCB.  A typical invocation might replace   * 00028600
*                          xTCB with TCB.                             * 00028700
*                                                                     * 00028800
*                          Ordinarily the input TCB specified should  * 00028900
*                          be the TCB under which the work request    * 00029000
*                          (e.g. transaction program) runs and under  * 00029100
*                          which the delay information is recorded    * 00029200
*                          (in spite of the fact that task switches   * 00029300
*                          may occur).                                * 00029400
*                                                                     * 00029500
*                                                                     * 00029600
*                                                                     * 00029700
*                  DISPTYPE=SRB                                       * 00029800
*                                                                     * 00029900
*                      indicates that work requests run in SRB mode   * 00030000
*                      within the current home address space.         * 00030100
*                                                                     * 00030200
*                                                                     * 00030300
*                      SAMEDU=»YES!NOº                                * 00030400
*                          is a required keyword input which          * 00030500
*                          describes whether the dependent monitoring * 00030600
*                          environment associated with MONTKN is      * 00030700
*                          running under the same dispatchable unit   * 00030800
*                          as the parent.  In that case, it would     * 00030900
*                          behave as a "subroutine" and execute on    * 00031000
*                          the same processor (CP, a.k.a. CPU) as the * 00031100
*                          parent environment.                        * 00031200
*                                                                     * 00031300
*                                                                     * 00031400
*                          SAMEDU=YES                                 * 00031500
*                                                                     * 00031600
*                              indicates that the work request runs   * 00031700
*                              as a subroutine of the parent.         * 00031800
*                                                                     * 00031900
*                              YES may not be specified when          * 00032000
*                              PARENTP(FINDACTIVE) is coded.          * 00032100
*                                                                     * 00032200
*                          SAMEDU=NO                                  * 00032300
*                                                                     * 00032400
*                              indicates that the work request runs   * 00032500
*                              in SRB mode and is independent of the  * 00032600
*                              parent dispatchable unit.              * 00032700
*                                                                     * 00032800
*                                                                     * 00032900
*                                                                     * 00033000
*                                                                     * 00033100
*                                                                     * 00033200
*                                                                     * 00033300
*                                                                     * 00033400
*                                                                     * 00033500
*                                                                     * 00033600
*                                                                     * 00033700
*              PARENTP=»YES!FINDACTIVEº                               * 00033800
*                  is a required keyword input which describes        * 00033900
*                  whether the parent monitoring environment is known * 00034000
*                  or not.                                            * 00034100
*                                                                     * 00034200
*                                                                     * 00034300
*                  PARENTP=YES                                        * 00034400
*                                                                     * 00034500
*                      indicates that the parent monitoring           * 00034600
*                      environment is known.                          * 00034700
*                                                                     * 00034800
*                      Note that this produces an inline expansion    * 00034900
*                      rather than an out-of-line service, so that no * 00035000
*                      parameter list is needed.  Thus the MF keyword * 00035100
*                      is not applicable when this option is          * 00035200
*                      specified, and is not allowed.  Registers 0,   * 00035300
*                      1, 14, and 15 are not preserved across the     * 00035400
*                      expansion.                                     * 00035500
*                                                                     * 00035600
*                                                                     * 00035700
*                      PARENTMONTKN=xparentmontkn                     * 00035800
*                          is the name (RS-type), or address in       * 00035900
*                          register (2)-(12), of a required 32 bit    * 00036000
*                          input which contains the delay monitoring  * 00036100
*                          token for the parent environment, i.e. the * 00036200
*                          monitoring environment which was           * 00036300
*                          established earlier and contains the       * 00036400
*                          characteristics to be inherited.           * 00036500
*                                                                     * 00036600
*                                                                     * 00036700
*                          ÝPARENTENVTKN=»xparentenvtkn!NO_PARENTENVT * 00036800
*                              KNº¨                                   * 00036900
*                              is the name (RS-type), or address in   * 00037000
*                              register (2)-(12), of an optional 32   * 00037100
*                              bit input for internal use only        * 00037200
*                              DEFAULT: NO_PARENTENVTKN indicates     * 00037300
*                              that no parent environment token is    * 00037400
*                              provided on this service.              * 00037500
*                                                                     * 00037600
*                                                                     * 00037700
*                                                                     * 00037800
*                                                                     * 00037900
*                                                                     * 00038000
*                                                                     * 00038100
*                      PARENTENV=»NOSWITCH!SECONDARY!HOMEº            * 00038200
*                          is a required keyword input which          * 00038300
*                          describes whether a space switch is needed * 00038400
*                          to access the parent monitoring            * 00038500
*                          environment.                               * 00038600
*                                                                     * 00038700
*                                                                     * 00038800
*                          PARENTENV=NOSWITCH                         * 00038900
*                                                                     * 00039000
*                              indicates that NO space switch is      * 00039100
*                              needed to access the parent monitoring * 00039200
*                              environment.  This would be            * 00039300
*                              appropriate if the parent monitoring   * 00039400
*                              environment was established (by        * 00039500
*                              IWM4MCRE) to be used by routines in a  * 00039600
*                              specific system key or if it was       * 00039700
*                              established to be used in a specific   * 00039800
*                              user key in the current primary.       * 00039900
*                                                                     * 00040000
*                          PARENTENV=SECONDARY                        * 00040100
*                                                                     * 00040200
*                              indicates that the parent monitoring   * 00040300
*                              environment was established in current * 00040400
*                              secondary (for use by a specific user  * 00040500
*                              key).                                  * 00040600
*                                                                     * 00040700
*                          PARENTENV=HOME                             * 00040800
*                                                                     * 00040900
*                              indicates that the parent monitoring   * 00041000
*                              environment was established in current * 00041100
*                              home (for use by a specific user key). * 00041200
*                              Use of this option requires that the   * 00041300
*                              program must reside in the MVS common  * 00041400
*                              area.                                  * 00041500
*                                                                     * 00041600
*                                                                     * 00041700
*                                                                     * 00041800
*                                                                     * 00041900
*                                                                     * 00042000
*                  PARENTP=FINDACTIVE                                 * 00042100
*                                                                     * 00042200
*                      indicates that the parent monitoring           * 00042300
*                      environment is unknown, but requests that the  * 00042400
*                      input monitoring environment be related to the * 00042500
*                      active monitoring environment owned by the     * 00042600
*                      current HOME address space and which is        * 00042700
*                      associated with the TCB specified by PARENTTCB * 00042800
*                      and which has no further continuations to      * 00042900
*                      other monitoring environments.  When no such   * 00043000
*                      monitoring environment exists, the input       * 00043100
*                      monitoring environment will be related to the  * 00043200
*                      current home address space.                    * 00043300
*                                                                     * 00043400
*                                                                     * 00043500
*                      PARENTTCB=xparenttcb                           * 00043600
*                          is the name (RS-type), or address in       * 00043700
*                          register (2)-(12), of a required character * 00043800
*                          input which defines the TCB owned by the   * 00043900
*                          current home address space associated with * 00044000
*                          a monitoring environment via               * 00044100
*                          Initialize/Relate Disptype=TCB,TCB= . This * 00044200
*                          TCB need not be the owner of the           * 00044300
*                          monitoring environment.  Note that this    * 00044400
*                          name is not the pointer to the TCB, but    * 00044500
*                          the name of the data area containing the   * 00044600
*                          TCB.  A typical invocation might replace   * 00044700
*                          xTCB with TCB.                             * 00044800
*                                                                     * 00044900
*                                                                     * 00045000
*                                                                     * 00045100
*                                                                     * 00045200
*                                                                     * 00045300
*                                                                     * 00045400
*                                                                     * 00045500
*          FUNCTION=DELETE                                            * 00045600
*              which indicates that the relationship is being         * 00045700
*              inactivated.                                           * 00045800
*                                                                     * 00045900
*              Note that this produces an inline expansion rather     * 00046000
*              than an out-of-line service, so that no parameter list * 00046100
*              is needed.  Thus the MF keyword is not applicable when * 00046200
*              this option is specified, and is not allowed.          * 00046300
*              Registers 0, 1, 14, and 15 are not preserved across    * 00046400
*              the expansion.                                         * 00046500
*                                                                     * 00046600
*                                                                     * 00046700
*                                                                     * 00046800
*                                                                     * 00046900
*                                                                     * 00047000
*                                                                     * 00047100
*      MONTKN=xmontkn                                                 * 00047200
*          is the name (RS-type), or address in register (2)-(12), of * 00047300
*          a required 32 bit input which contains the delay           * 00047400
*          monitoring token for the dependent environment.            * 00047500
*                                                                     * 00047600
*                                                                     * 00047700
*                                                                     * 00047800
*                                                                     * 00047900
*      ÝRETCODE=xretcode¨                                             * 00048000
*          is the name (RS-type) of an optional fullword output       * 00048100
*          variable, or register (2)-(12) or (15), into which the     * 00048200
*          return code is to be copied from GPR 15.  If you specify   * 00048300
*          15, GPR15, REG15, or R15 (within or without parentheses),  * 00048400
*          the value will be left in GPR 15.                          * 00048500
*                                                                     * 00048600
*                                                                     * 00048700
*                                                                     * 00048800
*                                                                     * 00048900
*      ÝRSNCODE=xrsncode¨                                             * 00049000
*          is the name (RS-type) of an optional fullword output       * 00049100
*          variable into which the reason code is to be copied from   * 00049200
*          GPR 0.  If you specify 0, 00, GPR0, GPR00, REG0, REG00, or * 00049300
*          R0 (within or without parentheses), the value will be left * 00049400
*          in GPR 0.                                                  * 00049500
*                                                                     * 00049600
*                                                                     * 00049700
*                                                                     * 00049800
*                                                                     * 00049900
*      ÝPLISTVER=»xplistver!IMPLIED_VERSIONº¨                         * 00050000
*          is an optional byte input decimal value in the "0-0" range * 00050100
*          that specifies the macro version.  PLISTVER is the only    * 00050200
*          key allowed on the list form of MF and determines which    * 00050300
*          parameter list is generated.  Note that MAX may be         * 00050400
*          specified instead of a number, and the parameter list will * 00050500
*          be of the largest size currently supported. This size may  * 00050600
*          grow from release to release (thus possibly affecting the  * 00050700
*          amount of storage needed by your program).  If your        * 00050800
*          program can tolerate this, IBM recommends that you always  * 00050900
*          specify MAX when creating the list form parameter list as  * 00051000
*          that will ensure that the list form parameter list is      * 00051100
*          always long enough to hold whatever parameters might be    * 00051200
*          specified on the execute form.                             * 00051300
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00051400
*          default is the lowest version which allows all of the      * 00051500
*          parameters specified on the invocation to be processed.    * 00051600
*                                                                     * 00051700
*                                                                     * 00051800
*                                                                     * 00051900
*                                                                     * 00052000
*      ÝMF=»S!L!Eº¨                                                   * 00052100
*          is an optional keyword input which specifies the macro     * 00052200
*          form.                                                      * 00052300
*          DEFAULT: S                                                 * 00052400
*                                                                     * 00052500
*                                                                     * 00052600
*          ÝMF=S¨                                                     * 00052700
*              specifies the standard form of the macro.  The "S"     * 00052800
*              form generates code to put the parameters into an      * 00052900
*              in-line parameter list and invoke the desired service. * 00053000
*              Full checking for required macro keys is done along    * 00053100
*              with supplying defaults for omitted optional           * 00053200
*              parameters.                                            * 00053300
*                                                                     * 00053400
*          ÝMF=(L,xmfctrl»,xmfattr!0Dº)¨                              * 00053500
*              specifies the list form of the macro.  The "L" form    * 00053600
*              defines an area to be used for the parameter list.     * 00053700
*              Only the PLISTVER key may be specified on the          * 00053800
*              invocation.  All other macro parameters are flagged as * 00053900
*              errors.  If PLISTVER is not specified, the original    * 00054000
*              parameter list definition is used.                     * 00054100
*                                                                     * 00054200
*            ,xmfctrl                                                 * 00054300
*              is a required input.  It is the name of a storage area * 00054400
*              for the parameter list.                                * 00054500
*                                                                     * 00054600
*            »,xmfattr!0Dº                                            * 00054700
*              is an optional 60 character input string that varies   * 00054800
*              from 1 to 60 characters. Use it to force boundary      * 00054900
*              alignment of the parameter list. Use only 0F or 0D.    * 00055000
*              DEFAULT: 0D which forces the parameter list to a       * 00055100
*              doubleword boundary.                                   * 00055200
*                                                                     * 00055300
*          ÝMF=(E,xmfctrl»,COMPLETEº)¨                                * 00055400
*              specifies the execute form of the macro.  The "E" form * 00055500
*              generates code to put the parameters into the          * 00055600
*              parameter list specified by xmfctrl and provides full  * 00055700
*              syntax checking with default setting.                  * 00055800
*                                                                     * 00055900
*            ,xmfctrl                                                 * 00056000
*              is a required input.  It is the name (RS-type), or     * 00056100
*              address in register (1)-(12), of a storage area for    * 00056200
*              the parameter list.                                    * 00056300
*                                                                     * 00056400
*            »,COMPLETEº                                              * 00056500
*              is an optional keyword input which specifies the       * 00056600
*              degree of macro parameter syntax checking.             * 00056700
*              DEFAULT: COMPLETE                                      * 00056800
*                                                                     * 00056900
*                                                                     * 00057000
*              COMPLETE                                               * 00057100
*                  Checking for required macro keys is done and       * 00057200
*                  defaults are supplied for omitted optional         * 00057300
*                  parameters.                                        * 00057400
*                                                                     * 00057500
*                                                                     * 00057600
*                                                                     * 00057700
*                                                                     * 00057800
*                                                                     * 00057900
*                                                                     * 00058000
*                                                                     * 00058100
*01* ABEND CODES:  None.                                              * 00058200
*                                                                     * 00058300
*01* RETURN CODES:                                                    * 00058400
*                                                                     * 00058500
*                                                                     * 00058600
*            0    Name: IwmRetCodeOk                                  * 00058700
*                                                                     * 00058800
*                 Meaning: Successful completion.                     * 00058900
*                                                                     * 00059000
*            4    Name: IwmRetCodeWarning                             * 00059100
*                                                                     * 00059200
*                 Meaning: Successful completion, unusual conditions  * 00059300
*                 noted.                                              * 00059400
*                                                                     * 00059500
*                                                                     * 00059600
*                 HEX REASON  MEANING/ACTION                          * 00059700
*                 CODE                                                * 00059800
*                                                                     * 00059900
*                 xxxx0401    Name: IwmRsnCodeNoWLM                   * 00060000
*                                                                     * 00060100
*                             Meaning: System does not support delay  * 00060200
*                             monitoring services.  This return code  * 00060300
*                             is only set when the MVS release is     * 00060400
*                             prior to MVS/ESA SP5.1.0.               * 00060500
*                                                                     * 00060600
*                 xxxx0402    Name: IwmRsncodeNoMonEnv                * 00060700
*                                                                     * 00060800
*                             Meaning: Input monitoring token         * 00060900
*                             indicates no monitoring environment was * 00061000
*                             established.                            * 00061100
*                                                                     * 00061200
*                 xxxx0406    Name: IwmRsncodeNoParEnv                * 00061300
*                                                                     * 00061400
*                             Meaning: No parent monitoring           * 00061500
*                             environment was established.  The input * 00061600
*                             dependent monitoring environment is now * 00061700
*                             related to the Home address space.      * 00061800
*                                                                     * 00061900
*                                                                     * 00062000
*                                                                     * 00062100
*            8                                                        * 00062200
*                                                                     * 00062300
*                 Name: IwmRetCodeInvocError                          * 00062400
*                                                                     * 00062500
*                 Meaning: Invalid invocation environment or          * 00062600
*                 parameters                                          * 00062700
*                                                                     * 00062800
*                                                                     * 00062900
*                 HEX REASON  MEANING/ACTION                          * 00063000
*                 CODE                                                * 00063100
*                                                                     * 00063200
*                 xxxx0802    Name: IwmRsnCodeXmemUserKeyTkn          * 00063300
*                                                                     * 00063400
*                             Meaning: Caller is in cross-memory mode * 00063500
*                             while the token was obtained in user    * 00063600
*                             key.                                    * 00063700
*                                                                     * 00063800
*                 xxxx0803    Name: IwmRsnCodeDisabled                * 00063900
*                                                                     * 00064000
*                             Meaning: Caller is disabled             * 00064100
*                                                                     * 00064200
*                 xxxx0804    Name: IwmRsnCodeLocked                  * 00064300
*                                                                     * 00064400
*                             Meaning: Caller is locked               * 00064500
*                                                                     * 00064600
*                 xxxx080B    Name: IwmRsnCodeBadPl                   * 00064700
*                                                                     * 00064800
*                             Meaning: Error accessing parameter      * 00064900
*                             list.                                   * 00065000
*                                                                     * 00065100
*                 xxxx081A    Name: IwmRsnCodeCallerNotAuthDepEnv     * 00065200
*                                                                     * 00065300
*                             Meaning: Caller is not authorized to    * 00065400
*                             update the dependent monitoring         * 00065500
*                             environment                             * 00065600
*                                                                     * 00065700
*                 xxxx0820    Name: IwmRsnCodeBadMonEnv               * 00065800
*                                                                     * 00065900
*                             Meaning: Monitoring environment does    * 00066000
*                             not pass verification.                  * 00066100
*                                                                     * 00066200
*                 xxxx0822    Name: IwmRsnCodeBadParEnv               * 00066300
*                                                                     * 00066400
*                             Meaning: Parent monitoring environment  * 00066500
*                             does not pass verification.             * 00066600
*                                                                     * 00066700
*                 xxxx0823    Name: IwmRsnCodeDatoff                  * 00066800
*                                                                     * 00066900
*                             Meaning: Caller invoked service while   * 00067000
*                             DATOFF                                  * 00067100
*                                                                     * 00067200
*                 xxxx0824    Name: IwmRsnCodeAmode24                 * 00067300
*                                                                     * 00067400
*                             Meaning: Caller invoked service but was * 00067500
*                             was in 24 bit addressing mode.          * 00067600
*                                                                     * 00067700
*                 xxxx0825    Name: IwmRsnCodeAscModeNotPrimary       * 00067800
*                                                                     * 00067900
*                             Meaning: Caller invoked service but was * 00068000
*                             not DAT on Primary ASC mode.            * 00068100
*                                                                     * 00068200
*                 xxxx0827    Name: IwmRsnCodeRsvdNot0                * 00068300
*                                                                     * 00068400
*                             Meaning: Reserved field in parameter    * 00068500
*                             list was non-zero                       * 00068600
*                                                                     * 00068700
*                 xxxx0828    Name: IwmRsnCodeBadVersion              * 00068800
*                                                                     * 00068900
*                             Meaning: Version number in parameter    * 00069000
*                             list is not valid.                      * 00069100
*                                                                     * 00069200
*                 xxxx0829    Name: IwmRsnCodeBadOptions              * 00069300
*                                                                     * 00069400
*                             Meaning: Parameter list omits required  * 00069500
*                             parameters or supplies mutually         * 00069600
*                             exclusive parameters or provides data   * 00069700
*                             associated with options not selected.   * 00069800
*                                                                     * 00069900
*                 xxxx087E    Name: IwmRsnCodeRoMonEnv                * 00070000
*                                                                     * 00070100
*                             Meaning: Monitoring environment is      * 00070200
*                             report only                             * 00070300
*                                                                     * 00070400
*                 xxxx087F    Name: IwmRsnCodeRoParEnv                * 00070500
*                                                                     * 00070600
*                             Meaning: Parent monitoring environment  * 00070700
*                             is report only                          * 00070800
*                                                                     * 00070900
*                 xxxx08A4    Name: IwmRsnCodeBPParEnv                * 00071000
*                                                                     * 00071100
*                             Meaning: Parent monitoring environment  * 00071200
*                             is buffer pool management only          * 00071300
*                                                                     * 00071400
*                                                                     * 00071500
*                                                                     * 00071600
*            10   Name: IwmRetCodeCompError:                          * 00071700
*                                                                     * 00071800
*                 Meaning: Component error                            * 00071900
*                                                                     * 00072000
*                                                                     * 00072100
*                                                                     * 00072200
*01* REASON CODES:                                                    * 00072300
*                                                                     * 00072400
*       A unique reason code will be returned whenever the return     * 00072500
*       code is non-zero.  Reason codes, as appropriate, are defined  * 00072600
*       under their corresponding return code.  Reason code and       * 00072700
*       return code constants are defined within IWMYCON.  Note that  * 00072800
*       the high order halfword of register 0, and the reason code    * 00072900
*       variable when specified, may be non-zero and represents       * 00073000
*       diagnostic data which is NOT part of the external interface.  * 00073100
*       The high order halfword should thus be excluded from          * 00073200
*       comparison with the reason code values described above.  The  * 00073300
*       constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may be    * 00073400
*       used for this purpose.                                        * 00073500
*                                                                     * 00073600
*01* MODULE TYPE:  ASSEM MACRO                                        * 00073700
*                                                                     * 00073800
*02*   PROCESSOR:  ASSEM                                              * 00073900
*                                                                     * 00074000
*01* COMPONENT:  SCWLM                                                * 00074100
*                                                                     * 00074200
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00074300
*                                                                     * 00074400
*01* EXAMPLES:                                                        * 00074500
*                                                                     * 00074600
*    To relate two monitoring environments where an address space     * 00074700
*    switch is not required, specify:                                 * 00074800
*                                                                     * 00074900
*        IWMMRELA FUNCTION=CREATE,MONTKN=(R7),PARENTP=YES,            * 00075000
*              PARENTMONTKN=(R8),PARENTENV=NOSWITCH,                  * 00075100
*              DISPTYPE=SRB,SAMEDU=YES,                               * 00075200
*              RETCODE=RCODE,RSNCODE=RSN                              * 00075300
*                                                                     * 00075400
*                                                                     * 00075500
*01* MACRO USAGE NOTES:                                               * 00075600
*                                                                     * 00075700
*                                                                     * 00075800
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00075900
*        global macro variable.  Any value other than 'NO' will       * 00076000
*        result in the macro expansion being printed.  The default is * 00076100
*        'YES'.  The following examples illustrate how the ZPRINT     * 00076200
*        variable should be set.                                      * 00076300
*                                                                     * 00076400
*                    GBLC &ZPRINT                                     * 00076500
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00076600
*                                                                     * 00076700
*                                                                     * 00076800
*    2.  All   keys   currently   contained  in  the  IWMMRELA  macro * 00076900
*        correspond  to  version  0.   If you specify PLISTVER, use a * 00077000
*        value of 0 or MAX.                                           * 00077100
*                                                                     * 00077200
*                                                                     * 00077300
*    3.  The  macro  CVT  must  be  included  to  use this macro when * 00077400
*        FUNCTION(CREATE) PARENTP(FINDACTIVE) is specified.           * 00077500
*                                                                     * 00077600
*    4.  This  macro  may  only  be  used  on  MVS/ESA  (version 3 or * 00077700
*        higher), NOT versions 1 or 2 of MVS.                         * 00077800
*                                                                     * 00077900
*    5.  The macro IWMYCON must be included to use this macro.        * 00078000
*                                                                     * 00078100
*    6.  The  macro IWMPB must be in the library concatenation, since * 00078200
*        it is included by IWMYCON.                                   * 00078300
*                                                                     * 00078400
*    7.  Use   of  PARENTP(YES)  PARENTENV(HOME)  requires  that  the * 00078500
*        invoking program reside in the MVS common area.              * 00078600
*                                                                     * 00078700
*    8.  Note  that  the  high  order halfword of register 0, and the * 00078800
*        reason  code  variable  when  specified, may be non-zero and * 00078900
*        represents diagnostic data which is NOT part of the external * 00079000
*        interface.   The high order halfword should thus be excluded * 00079100
*        from comparison with the reason code values described above. * 00079200
*        The  constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may * 00079300
*        be used for this purpose.                                    * 00079400
*                                                                     * 00079500
*    9.  The  PL/AS version of the macro needs the EPILOG macro to be * 00079600
*        included.                                                    * 00079700
*                                                                     * 00079800
*    10. Note  that specification of PARENTP(YES) or FUNCTION(DELETE) * 00079900
*        produces  an  inline  expansion  rather  than an out-of-line * 00080000
*        service,  so  that no parameter list is needed.  Thus the MF * 00080100
*        keyword is not applicable when this option is specified, and * 00080200
*        is  not  allowed.    Registers  0,  1,  14,  and  15 are not * 00080300
*        preserved across the expansion.                              * 00080400
*                                                                     * 00080500
*                                                                     * 00080600
*                                                                     * 00080700
*01* CHANGE ACTIVITY:                                                 * 00080800
*                                                                     * 00080900
*   Flag LineItem  FMID    Date   ID    Comment                       * 00081000
*                                                                     * 00081100
*    $L0=WLMI     HBB5510 920309 PD16:  Workload Manager I            * 00081200
*    $P1=PIG7010  HBB5510 921029 PD16:  Remove check for RSNCODE for  * 00081300
*                                         GPR00F declare              * 00081400
*    $01=OW26040  HBB6603 970407 PDSN:  Make clear length dependent   * 00081500
*                                         on version level, new       * 00081600
*                                         length field                * 00081700
*    $P2=PWA0230  JBB6607 980619 PDKN:  Ensure dynamic area is not    * 00081800
*                                         used when clearing out PB   * 00081900
*                                         fields.                     * 00082000
*    $P3=64BITSRM HBB7703 990714 B9HAGB:  Remove GEN CODE for         * 00082100
*                                         clearing PB_CLEAR           * 00082200
*    $P4=WLMPPBS  HBB7707 011030 3241PB:  Peter Baeuerle              * 00082300
*                                         Check if Report Only        * 00082400
*                                         Monitor Environment         * 00082500
*    $P5=OW54806  HBB7707 020612 3241PB:  Peter Baeuerle              * 00082600
*                                         Fix addressing of PB        * 00082700
*    $P6=OA05654  HBB7708 031119 3241PB:  Peter Baeuerle              * 00082800
*                                         Correct check for Report    * 00082900
*                                         Only PB                     * 00083000
*    $P7=ME01176  HBB7720 040924 3241DW:  Doc changes only.  Service  * 00083100
*                                         names changed to reflect    * 00083200
*                                         the 64bit name.             * 00083300
*    $P8=WLMPERS  HBB7730 050228 3241KK:  EWLM CICS/IMS support       * 00083400
*    $P9=BLDCHKE  HBB7730 050919 3241BH:  No code change. ToolReq     * 00083500
*                                         5983 -                      * 00083600
*                                         B390.HBB7730.DRIVER5A.OC    * 00083700
*                                         OCHKE fixes.                * 00083800
*    $PA=WLMPDBM  HBB7730 060119 3241AA:  Avoid PB_CLEARs within      * 00083900
*                                         dependant bpmgmt_only pbs   * 00084000
*    $PB=ME11209  HBB7750 070911 3241GB:  Indicate to EPILOG to use   * 00084100
*                                         GPR01F (PLX only)           * 00084200
*    $PC=LEWMSM   HBB7760 080428 3241GB:  Remove GEN EXIT NOSEQFLOW   * 00084300
*                                         after ABEND macro (PLX      * 00084400
*                                         only), drop support for PB  * 00084500
*                                         versions 1 and 2            * 00084600
*    $L1=LPBABV   HBB7790 111020 3241AH:  IWM4MRLT created. Please do * 00084700
*                                         not change this macro any   * 00084800
*                                         longer                      * 00084900
*    $PD=WI335783 HBB77D0 200418 3241AH:  New keyword PARENTENVTKN    * 00085000
****** END OF SPECIFICATIONS *****************************************/ 00085100
*/********************************************************************* 00085200
         MACRO                                                          00085300
&XLABEL  IWMMRELA &FUNCTION=,&OWNER_TOKEN=,&OWNER_DATA=,&DISPTYPE=,    *00085400
               &TCB=,&SAMEDU=,&PARENTP=,&PARENTMONTKN=,&PARENTENVTKN=, *00085500
               &PARENTENV=,&PARENTTCB=,&MONTKN=,&RETCODE=,&RSNCODE=,   *00085600
               &PLISTVER=,&MF=                                          00085700
.*                                                                      00085800
*                  MACDATE -02/22/21-<0>                                00085900
.*                                                                      00086000
.*******************************************************************    00086100
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00086200
.*******************************************************************    00086300
                  GBLC  &ZPRINT     YES=PRINT NO=NO PRINT               00086400
                  GBLC  &ZTEST      YES=TEST NO=NO TEST                 00086500
                  GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX         00086600
.*                                                                      00086700
                  GBLC  &ZIWMMRELA  YES=MACRO USED AT LEAST ONCE        00086800
.*******************************************************************    00086900
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00087000
.*******************************************************************    00087100
                  LCLC  &ZMS        ERROR MESSAGE WORK AREA             00087200
                  LCLC  &ZCNDX      SYSNDX CHARACTERS                   00087300
                  LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED          00087400
                  LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR         00087500
                  LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE         00087600
                  LCLA  &ZAWRK      USED AS A WORK AREA                 00087700
                  LCLA  &ZASIZ      USED FOR SIZE OF VALUE              00087800
                  LCLA  &ZN         NUMERIC WORK VARIABLE               00087900
                  LCLC  &ZC         CHARACTER WORK VARIABLE             00088000
                  LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE         00088100
                  LCLA  &ZTLA       VALUE TOO LONG VARIABLE             00088200
                  LCLC  &ZMAC_G     "G" or null                         00088300
&ZMAC_G           SETC  ''                                              00088400
                  LCLC  &ZMAC_LR                                        00088500
&ZMAC_LR          SETC  'LR'                                            00088600
                  LCLC  &ZMAC_L                                         00088700
&ZMAC_L           SETC  'L'                                             00088800
                  LCLC  &ZMAC_ST                                        00088900
&ZMAC_ST          SETC  'ST'                                            00089000
                  LCLC  &ZMAC_LLGT                                      00089100
&ZMAC_LLGT        SETC  'L'                                             00089200
                  LCLC  &ZMAC_LGR                                       00089300
&ZMAC_LGR         SETC  'LR'                                            00089400
                  LCLC  &ZMAC_LG                                        00089500
&ZMAC_LG          SETC  'L'                                             00089600
                  LCLC  &ZMAC_STG                                       00089700
&ZMAC_STG         SETC  'ST'                                            00089800
                  LCLA  &ZMACRET    MACRO RETURN CODE                   00089900
&ZMACRET          SETA  0           ASSUME NO ERRORS                    00090000
.*                                                                      00090100
                  LCLC  &ZCSYSLIST(255)         NONXKEY, POS ARRAY      00090200
                  LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()          00090300
                  LCLA  &ZPLLEN     PARAMETER LIST LENGTH               00090400
                  LCLC  &ZENDBASEPL             End of base PL          00090500
                  LCLA  &ZPLWORKA   PARAMETER LIST LENGTH               00090600
.*******************************************************************    00090700
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00090800
.*******************************************************************    00090900
                  LCLA  &ZI         INDEX FOR ARRAY                     00091000
                  LCLA  &ZJ         INDEX FOR PARMS                     00091100
                  LCLA  &ZK         INDEX FOR PARSE                     00091200
                  LCLA  &ZLO        LOW RANGE VALUE                     00091300
                  LCLA  &ZHI        HIGH RANGE VALUE                    00091400
                  LCLC  &ZW         WORK AREA FOR PARM                  00091500
.********************************************************************   00091600
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00091700
.********************************************************************   00091800
                  GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL             00091900
                  GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE      00092000
                  GBLA  &SYSALVL    SYSSTATE ARCHLVL                    00092100
                  GBLC  &SYSAM64    SYSSTATE AMODE64                    00092200
.*                                                                      00092300
                  AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED      00092400
                  AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED       00092500
                  SPLEVEL  TEST                                         00092600
.ZSYS2            ANOP  ,                                               00092700
                  AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1           00092800
                  AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1           00092900
                  SYSSTATE TEST                                         00093000
                  AGO   .ZSYS4                                          00093100
.ZSYS3            ANOP  ,                                               00093200
&SYSASCE          SETC  'P'         ASSUME SYSSTATE PRIMARY             00093300
.ZSYS4            ANOP  ,                                               00093400
                  AIF   ('&SYSAM64' NE 'YES').ZSYSN64                   00093500
&ZMAC_LLGT        SETC 'LLGT'                                           00093600
&ZMAC_LGR         SETC 'LGR'                                            00093700
&ZMAC_LG          SETC 'LG'                                             00093800
&ZMAC_STG         SETC 'STG'                                            00093900
.ZSYSN64          ANOP  ,                                               00094000
.*******************************************************************    00094100
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00094200
.*******************************************************************    00094300
                  LCLC  &XFUNCTION  ++ VALUE                            00094400
                  LCLC  &XOWNER_TOKEN           ++ NAME                 00094500
                  LCLC  &XOWNER_DATA            ++ NAME                 00094600
                  LCLC  &XDISPTYPE  ++ VALUE                            00094700
                  LCLC  &XTCB       ++ NAME                             00094800
                  LCLC  &XSAMEDU    ++ VALUE                            00094900
                  LCLC  &XPARENTP   ++ VALUE                            00095000
                  LCLC  &XPARENTMONTKN          ++ NAME                 00095100
                  LCLC  &XPARENTENVTKN          ++ NAME                 00095200
                  LCLC  &XPARENTENV             ++ VALUE                00095300
                  LCLC  &XPARENTTCB             ++ NAME                 00095400
                  LCLC  &XMONTKN    ++ NAME                             00095500
                  LCLC  &XRETCODE   ++ NAME                             00095600
                  LCLC  &XRSNCODE   ++ NAME                             00095700
                  LCLA  &XPLISTVER  ++ VALUE                            00095800
                  LCLC  &XMF        ++ VALUE                            00095900
                  LCLC  &XMFCTRL    ++ NAME                             00096000
                  LCLC  &XMFATTR    ++ VALUE                            00096100
                  LCLC  &XMFSCK     ++ VALUE                            00096200
.*******************************************************************    00096300
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00096400
.*******************************************************************    00096500
                  LCLC  &ZXFUNCTION             ++ INPUT VALUE          00096600
                  LCLC  &ZXOWNER_TOKEN          ++ INPUT NAME           00096700
                  LCLC  &ZXOWNER_DATA           ++ INPUT NAME           00096800
                  LCLC  &ZXDISPTYPE             ++ INPUT VALUE          00096900
                  LCLC  &ZXTCB      ++ INPUT NAME                       00097000
                  LCLC  &ZXSAMEDU   ++ INPUT VALUE                      00097100
                  LCLC  &ZXPARENTP  ++ INPUT VALUE                      00097200
                  LCLC  &ZXPARENTMONTKN         ++ INPUT NAME           00097300
                  LCLC  &ZXPARENTENVTKN         ++ INPUT NAME           00097400
                  LCLC  &ZXPARENTENV            ++ INPUT VALUE          00097500
                  LCLC  &ZXPARENTTCB            ++ INPUT NAME           00097600
                  LCLC  &ZXMONTKN   ++ INPUT NAME                       00097700
                  LCLC  &ZXRETCODE  ++ OUTPUT NAME                      00097800
                  LCLC  &ZXRSNCODE  ++ OUTPUT NAME                      00097900
                  LCLC  &ZXPLISTVER             ++ INPUT VALUE          00098000
                  LCLC  &ZXMF       ++ INPUT VALUE                      00098100
                  LCLC  &ZXMFCTRL   ++ INPUT NAME                       00098200
                  LCLC  &ZXMFATTR   ++ INPUT VALUE                      00098300
                  LCLC  &ZXMFSCK    ++ INPUT VALUE                      00098400
.********************************************************************   00098500
.***AC.PLV01  PROCESS PLISTVER                                      *   00098600
.********************************************************************   00098700
&XPLISTVER      SETA  0                                                 00098800
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00098900
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00099000
&XPLISTVER      SETA  0                                                 00099100
.ZPLV0          ANOP  ,                                                 00099200
.*                                                                      00099300
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00099400
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00099500
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00099600
.*-------------------------------------------------------------------   00099700
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00099800
&ZMS            SETC  '"PLISTVER='                                      00099900
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00100000
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00100100
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00100200
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00100300
                AGO   .ZPVCK2                                           00100400
.ZPVCK3         ANOP  ,                                                 00100500
.*-------------------------------------------------------------------   00100600
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00100700
&ZMS            SETC  '"PLISTVER='                                      00100800
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00100900
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00101000
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00101100
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00101200
                AGO   .ZPVCKE                                           00101300
.ZPVCK2         ANOP  ,                                                 00101400
.*-------------------------------------------------------------------   00101500
&ZCVAL          SETC  '&PLISTVER(1)'                                    00101600
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00101700
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00101800
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00101900
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00102000
                AIF   (&ZN LE 0).ZPVCK4A   NOT HIGH                     00102100
.ZPVCK6         ANOP  ,                                                 00102200
&ZMS            SETC  '"PLISTVER='                                      00102300
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00102400
&ZMS            SETC  '&ZMS THE RANGE IS "0-0"'                         00102500
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00102600
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00102700
&XPLISTVER      SETA  0                                                 00102800
                AGO   .ZPVCKE                                           00102900
.*-------------------------------------------------------------------   00103000
.ZPVCK4A        ANOP  ,                                                 00103100
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00103200
&ZMS            SETC  'PLISTVER='                                       00103300
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00103400
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00103500
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00103600
                MNOTE 8,' &ZMS IS REQUIRED.'                            00103700
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00103800
                AGO   .ZPVCK5                                           00103900
.ZPVCK4         ANOP  ,                                                 00104000
&XPLISTVER      SETA  &PLISTVER(1)                                      00104100
.ZPVCK5         ANOP  ,                                                 00104200
.ZPVCKE         ANOP  ,                                                 00104300
.********************************************************************   00104400
.***AG.MF01 PROCESS MF MACRO FORMS                                      00104500
.********************************************************************   00104600
                  ACTR  10000                                           00104700
.*------------------------------------------------------------------    00104800
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00104900
&XMF              SETC  ''          INITIALIZE XVARIABLE                00105000
.*-------------------------------------------------------------------   00105100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00105200
.ZG59             ANOP  ,                                               00105300
&ZTLC             SETC 'S'                                              00105400
                  AIF   ('&MF(1)' NE '&ZTLC').ZG60                      00105500
&XMF              SETC  'S'         SET KEYWORD                         00105600
                  AIF   (N'&MF LE 1).ZG59A      CK NUM                  00105700
&ZMS              SETC  '"MF='                                          00105800
&ZMS              SETC  '&ZMS.&MF"'                                     00105900
&ZMS              SETC  '&ZMS "MF"'                                     00106000
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00106100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00106200
.ZG59A            ANOP  ,                                               00106300
.*-------------------------------------------------------------------   00106400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00106500
.ZG60             ANOP  ,                                               00106600
&ZTLC             SETC 'L'                                              00106700
                  AIF   ('&MF(1)' NE '&ZTLC').ZG67                      00106800
&XMF              SETC  'L'         SET KEYWORD                         00106900
                  AIF   (N'&MF LE 3).ZG60A      CK NUM                  00107000
&ZMS              SETC  '"MF='                                          00107100
&ZMS              SETC  '&ZMS.&MF"'                                     00107200
&ZMS              SETC  '&ZMS "MF"'                                     00107300
                  MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'            00107400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00107500
.ZG60A            ANOP  ,                                               00107600
.*-------------------------------------------------------------------   00107700
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00107800
                  AIF   (N'&SYSLIST NE 0).ZG60B  POSITIONALS?           00107900
                  AIF   ('&FUNCTION' NE '').ZG60B  KEYS?                00108000
                  AIF   ('&OWNER_TOKEN' NE '').ZG60B  KEYS?             00108100
                  AIF   ('&OWNER_DATA' NE '').ZG60B  KEYS?              00108200
                  AIF   ('&DISPTYPE' NE '').ZG60B  KEYS?                00108300
                  AIF   ('&TCB' NE '').ZG60B    KEYS?                   00108400
                  AIF   ('&SAMEDU' NE '').ZG60B  KEYS?                  00108500
                  AIF   ('&PARENTP' NE '').ZG60B  KEYS?                 00108600
                  AIF   ('&PARENTMONTKN' NE '').ZG60B  KEYS?            00108700
                  AIF   ('&PARENTENVTKN' NE '').ZG60B  KEYS?            00108800
                  AIF   ('&PARENTENV' NE '').ZG60B  KEYS?               00108900
                  AIF   ('&PARENTTCB' NE '').ZG60B  KEYS?               00109000
                  AIF   ('&MONTKN' NE '').ZG60B  KEYS?                  00109100
                  AIF   ('&RETCODE' NE '').ZG60B  KEYS?                 00109200
                  AIF   ('&RSNCODE' NE '').ZG60B  KEYS?                 00109300
                  AGO    .ZG60C     INVOCATION OKAY                     00109400
.ZG60B            ANOP  ,                                               00109500
&ZMS              SETC  'THE "L" FORM OF "MF"'                          00109600
&ZMS              SETC  '&ZMS CAN ONLY HAVE'                            00109700
&ZMS              SETC  '&ZMS THE "PLISTVER" KEY'                       00109800
                  MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'          00109900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00110000
.ZG60C            ANOP  ,                                               00110100
.*-------------------------------------------------------------------   00110200
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00110300
&ZXMFCTRL         SETC  'INPUT'     SET IN/OUTPUT                       00110400
&XMFCTRL          SETC  '&MF(2,1)'  SET XVARIABLE                       00110500
                  AIF   (N'&MF(2) GT 1).ZG62B   MULTI                   00110600
&XMFCTRL          SETC  '&MF(2)'    SET XVARIABLE                       00110700
.ZG62B            AIF   (K'&MF(2) GT 0).ZG62C                           00110800
&ZXMFCTRL         SETC  ''          RESET IN/OUTPUT                     00110900
&ZMS              SETC  'WHEN "L" IS SPECIFIED'                         00111000
&ZMS              SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'             00111100
                  MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                    00111200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00111300
.ZG62C            ANOP  ,                                               00111400
.*-------------------------------------------------------------------   00111500
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00111600
                  AIF   (K'&ZXMFCTRL LE 0).ZG62P  NOT I/O               00111700
                  AIF   ('&XMFCTRL'(1,1) NE '(').ZG62P                  00111800
&ZXMFCTRL         SETC  ''          RESET IN/OUTPUT                     00111900
&ZMS              SETC  '"MF='                                          00112000
&ZMS              SETC  '&ZMS.&MF"'                                     00112100
&ZMS              SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'       00112200
                  MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'               00112300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00112400
.ZG62P            ANOP  ,                                               00112500
.*-------------------------------------------------------------------   00112600
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00112700
&ZXMFATTR         SETC  'INPUT'     SET IN/OUTPUT                       00112800
&XMFATTR          SETC  '0D'                                            00112900
                  AIF   (K'&MF(3) LE 0).ZG65B   PARM                    00113000
&XMFATTR          SETC  '&MF(3,1)'  SET XVARIABLE                       00113100
                  AIF   (N'&MF(3) GT 1).ZG65B   MULTI                   00113200
&XMFATTR          SETC  '&MF(3)'    SET XVARIABLE                       00113300
.ZG65B            ANOP  ,                                               00113400
.*-------------------------------------------------------------------   00113500
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00113600
                  AIF   (K'&ZXMFATTR LE 0).ZG65P  NOT I/O               00113700
                  AIF   ('&XMFATTR'(1,1) NE '(').ZG65P                  00113800
&ZXMFATTR         SETC  ''          RESET IN/OUTPUT                     00113900
&ZMS              SETC  '"MF='                                          00114000
&ZMS              SETC  '&ZMS.&MF"'                                     00114100
&ZMS              SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'       00114200
                  MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'               00114300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00114400
.ZG65P            ANOP  ,                                               00114500
.*-------------------------------------------------------------------   00114600
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00114700
                  AIF   (K'&ZXMFATTR LE 0).ZG65S  NOT I/O               00114800
                  AIF   (K'&XMFATTR LE 60).ZG65S  LNG OK                00114900
&ZXMFATTR         SETC  ''          RESET IN/OUTPUT                     00115000
&ZMS              SETC  '"MF='                                          00115100
&ZMS              SETC  '&ZMS.&MF"'                                     00115200
&ZMS              SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'           00115300
                  MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'              00115400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00115500
.ZG65S            ANOP  ,                                               00115600
.*-------------------------------------------------------------------   00115700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00115800
.ZG67             ANOP  ,                                               00115900
&ZTLC             SETC 'E'                                              00116000
                  AIF   ('&MF(1)' NE '&ZTLC').ZG75                      00116100
&XMF              SETC  'E'         SET KEYWORD                         00116200
                  AIF   (N'&MF LE 3).ZG67A      CK NUM                  00116300
&ZMS              SETC  '"MF='                                          00116400
&ZMS              SETC  '&ZMS.&MF"'                                     00116500
&ZMS              SETC  '&ZMS "MF"'                                     00116600
                  MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'            00116700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00116800
.ZG67A            ANOP  ,                                               00116900
.*-------------------------------------------------------------------   00117000
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00117100
&ZXMFCTRL         SETC  'INPUT'     SET IN/OUTPUT                       00117200
&XMFCTRL          SETC  '&MF(2,1)'  SET XVARIABLE                       00117300
                  AIF   (N'&MF(2) GT 1).ZG69B   MULTI                   00117400
&XMFCTRL          SETC  '&MF(2)'    SET XVARIABLE                       00117500
.ZG69B            AIF   (K'&MF(2) GT 0).ZG69C                           00117600
&ZXMFCTRL         SETC  ''          RESET IN/OUTPUT                     00117700
&ZMS              SETC  'WHEN "E" IS SPECIFIED'                         00117800
&ZMS              SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'             00117900
                  MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                    00118000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00118100
.ZG69C            ANOP  ,                                               00118200
.*-------------------------------------------------------------------   00118300
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00118400
                  AIF   (K'&ZXMFCTRL LE 0).ZG69R  NOT I/O               00118500
                  AIF   ('&XMFCTRL'(1,1) NE '(').ZG69R                  00118600
&ZCGPR            SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                      00118700
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG69P                    00118800
                  AIF   (K'&ZCGPR GT 2).ZG69Q                           00118900
                  AIF   ('&ZCGPR' EQ '0').ZG69Q                         00119000
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00119100
                  AIF   (T'&ZCGPR NE 'N').ZG69Q  INVALID REG NAME       00119200
.ZG69P            ANOP  ,                                               00119300
                  AIF   (T'&ZCGPR NE 'N').ZG69R  NON NUMERIC            00119400
                  AIF   ('&ZCGPR' LT '1').ZG69Q                         00119500
                  AIF   ('&ZCGPR' LE '12').ZG69R                        00119600
.ZG69Q            ANOP  ,                                               00119700
&ZMS              SETC  '"MF='                                          00119800
&ZMS              SETC  '&ZMS.&MF"'                                     00119900
&ZMS              SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'       00120000
                  MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                00120100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00120200
.ZG69R            ANOP  ,                                               00120300
.*-------------------------------------------------------------------   00120400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00120500
&XMFSCK           SETC  ''          INITIALIZE XVARIABLE                00120600
.ZG73A   AIF   ('&MF(3)' NE 'COMPLETE').ZG74A                           00120700
&XMFSCK           SETC  'COMPLETE'  SET KEYWORD                         00120800
.*-------------------------------------------------------------------   00120900
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00121000
.ZG74A            AIF   (K'&XMFSCK GT 0).ZG74C  KEYWORD                 00121100
                  AIF   (K'&MF(3) LE 0).ZG74B                           00121200
&ZMS              SETC  '"MF='                                          00121300
&ZMS              SETC  '&ZMS.&MF"'                                     00121400
&ZMS              SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '       00121500
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00121600
&ZMS              SETC  '&ZMS "COMPLETE".'                              00121700
                  MNOTE 8,' &ZMS '                                      00121800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00121900
.ZG74B            ANOP  ,                                               00122000
&XMFSCK           SETC  'COMPLETE'  SET DEFAULT KEYWORD                 00122100
.ZG74C            ANOP  ,                                               00122200
&ZXMFSCK          SETC  'INPUT'     SET IN/OUTPUT                       00122300
.*------------------------------------------------------------------    00122400
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00122500
.ZG75             ANOP  ,                                               00122600
&ZXMF             SETC  'INPUT'     SET IN/OUTPUT                       00122700
                  AIF   (K'&XMF GT 0).ZG75E     VALID ARG               00122800
                  AIF   (T'&MF EQ 'O').ZG75D    OMITTED                 00122900
&ZASYSLNDX        SETA  0                                               00123000
.ZG75A            ANOP  ,           POSITIONAL MACRO KEY                00123100
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00123200
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG75C                00123300
&ZTLC             SETC 'MF'                                             00123400
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG75A       00123500
.ZG75B            ANOP  ,                                               00123600
&ZXMF             SETC  ''          RESET IN/OUTPUT                     00123700
&ZMS              SETC  'THE "MF" KEY'                                  00123800
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00123900
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00124000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00124100
                  AGO   .ZG75E                                          00124200
.ZG75C            ANOP  ,                                               00124300
&ZXMF             SETC  ''          RESET IN/OUTPUT                     00124400
&ZMS              SETC  '"MF='                                          00124500
&ZMS              SETC  '&ZMS.&MF"'                                     00124600
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00124700
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00124800
&ZMS              SETC  '&ZMS "S",'                                     00124900
&ZMS              SETC  '&ZMS "L",'                                     00125000
&ZMS              SETC  '&ZMS OR "E".'                                  00125100
                  MNOTE 8,' &ZMS '                                      00125200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00125300
                  AGO   .ZG75E                                          00125400
.ZG75D            ANOP  ,                                               00125500
&XMF              SETC  'S'         SET DEFAULT KEYWORD                 00125600
&XMFSCK           SETC  'COMPLETE'  COMPLETE CHECKING                   00125700
.ZG75E            ANOP  ,                                               00125800
.********************************************************************   00125900
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00126000
.********************************************************************   00126100
                  ACTR  10000                                           00126200
.*-------------------------------------------------------------------   00126300
.***AG.MF03 MF=(SLE)                                                    00126400
                  AIF   ('&XMF' EQ 'L').ZGMFX                           00126500
.*------------------------------------------------------------------    00126600
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00126700
&XFUNCTION        SETC  ''          INITIALIZE XVARIABLE                00126800
.*-------------------------------------------------------------------   00126900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00127000
.ZG3              ANOP  ,                                               00127100
                  AIF   (K'&FUNCTION(1) LE 0).ZG3A                      00127200
&ZTLC             SETC 'CREATE'                                         00127300
                  AIF   ('&FUNCTION(1)' NE '&ZTLC').ZG43                00127400
&XFUNCTION        SETC  'CREATE'    SET KEYWORD                         00127500
                  AIF   (N'&FUNCTION LE 1).ZG3A  CK NUM                 00127600
&ZMS              SETC  '"FUNCTION='                                    00127700
&ZMS              SETC  '&ZMS.&FUNCTION"'                               00127800
&ZMS              SETC  '&ZMS "FUNCTION"'                               00127900
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00128000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00128100
.ZG3A             ANOP  ,                                               00128200
.*----------------------------------------------------------------***   00128300
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00128400
                  AIF   (N'&OWNER_TOKEN LE 1).ZG5A  CK NUM              00128500
&ZMS              SETC  '"OWNER_TOKEN='                                 00128600
&ZMS              SETC  '&ZMS.&OWNER_TOKEN"'                            00128700
&ZMS              SETC  '&ZMS "OWNER_TOKEN"'                            00128800
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00128900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00129000
.ZG5A             ANOP  ,                                               00129100
.*-------------------------------------------------------------------   00129200
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00129300
&ZXOWNER_TOKEN    SETC  'INPUT'     SET IN/OUTPUT                       00129400
&XOWNER_TOKEN     SETC  'NO_OWNER_TOKEN'                                00129500
                  AIF   (K'&OWNER_TOKEN(1) LE 0).ZG5B  PARM             00129600
&XOWNER_TOKEN     SETC  '&OWNER_TOKEN(1)'       SET XVARIABLE           00129700
                  AIF   (N'&OWNER_TOKEN GT 1).ZG5B  MULTI               00129800
&XOWNER_TOKEN     SETC  '&OWNER_TOKEN'          SET XVARIABLE           00129900
.ZG5B             ANOP  ,                                               00130000
.*-------------------------------------------------------------------   00130100
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00130200
                  AIF   (K'&ZXOWNER_TOKEN LE 0).ZG5R  NOT I/O           00130300
         AIF   ('&XOWNER_TOKEN' EQ 'NO_OWNER_TOKEN').ZG5R               00130400
                  AIF   ('&XOWNER_TOKEN'(1,1) NE '(').ZG5R              00130500
&ZCGPR            SETC  '&XOWNER_TOKEN'(2,K'&XOWNER_TOKEN-2)            00130600
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                     00130700
                  AIF   (K'&ZCGPR GT 2).ZG5Q                            00130800
                  AIF   ('&ZCGPR' EQ '0').ZG5Q                          00130900
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00131000
                  AIF   (T'&ZCGPR NE 'N').ZG5Q  INVALID REG NAME        00131100
.ZG5P             ANOP  ,                                               00131200
                  AIF   (T'&ZCGPR NE 'N').ZG5R  NON NUMERIC             00131300
                  AIF   ('&ZCGPR' LT '2').ZG5Q                          00131400
                  AIF   ('&ZCGPR' LE '12').ZG5R                         00131500
.ZG5Q             ANOP  ,                                               00131600
&ZMS              SETC  '"OWNER_TOKEN='                                 00131700
&ZMS              SETC  '&ZMS.&OWNER_TOKEN"'                            00131800
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00131900
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00132000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00132100
.ZG5R             ANOP  ,                                               00132200
.*----------------------------------------------------------------***   00132300
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00132400
                  AIF   (N'&OWNER_DATA LE 1).ZG8A  CK NUM               00132500
&ZMS              SETC  '"OWNER_DATA='                                  00132600
&ZMS              SETC  '&ZMS.&OWNER_DATA"'                             00132700
&ZMS              SETC  '&ZMS "OWNER_DATA"'                             00132800
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00132900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00133000
.ZG8A             ANOP  ,                                               00133100
.*-------------------------------------------------------------------   00133200
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00133300
&ZXOWNER_DATA     SETC  'INPUT'     SET IN/OUTPUT                       00133400
&XOWNER_DATA      SETC  'NO_OWNER_DATA'                                 00133500
                  AIF   (K'&OWNER_DATA(1) LE 0).ZG8B  PARM              00133600
&XOWNER_DATA      SETC  '&OWNER_DATA(1)'        SET XVARIABLE           00133700
                  AIF   (N'&OWNER_DATA GT 1).ZG8B  MULTI                00133800
&XOWNER_DATA      SETC  '&OWNER_DATA'           SET XVARIABLE           00133900
.ZG8B             ANOP  ,                                               00134000
.*-------------------------------------------------------------------   00134100
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00134200
                  AIF   (K'&ZXOWNER_DATA LE 0).ZG8R  NOT I/O            00134300
         AIF   ('&XOWNER_DATA' EQ 'NO_OWNER_DATA').ZG8R                 00134400
                  AIF   ('&XOWNER_DATA'(1,1) NE '(').ZG8R               00134500
&ZCGPR            SETC  '&XOWNER_DATA'(2,K'&XOWNER_DATA-2)              00134600
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                     00134700
                  AIF   (K'&ZCGPR GT 2).ZG8Q                            00134800
                  AIF   ('&ZCGPR' EQ '0').ZG8Q                          00134900
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00135000
                  AIF   (T'&ZCGPR NE 'N').ZG8Q  INVALID REG NAME        00135100
.ZG8P             ANOP  ,                                               00135200
                  AIF   (T'&ZCGPR NE 'N').ZG8R  NON NUMERIC             00135300
                  AIF   ('&ZCGPR' LT '2').ZG8Q                          00135400
                  AIF   ('&ZCGPR' LE '12').ZG8R                         00135500
.ZG8Q             ANOP  ,                                               00135600
&ZMS              SETC  '"OWNER_DATA='                                  00135700
&ZMS              SETC  '&ZMS.&OWNER_DATA"'                             00135800
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00135900
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00136000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00136100
.ZG8R             ANOP  ,                                               00136200
.*------------------------------------------------------------------    00136300
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00136400
&XDISPTYPE        SETC  ''          INITIALIZE XVARIABLE                00136500
.*-------------------------------------------------------------------   00136600
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00136700
.ZG12             ANOP  ,                                               00136800
                  AIF   (K'&DISPTYPE(1) LE 0).ZG12A                     00136900
&ZTLC             SETC 'TCB'                                            00137000
                  AIF   ('&DISPTYPE(1)' NE '&ZTLC').ZG16                00137100
&XDISPTYPE        SETC  'TCB'       SET KEYWORD                         00137200
                  AIF   (N'&DISPTYPE LE 1).ZG12A  CK NUM                00137300
&ZMS              SETC  '"DISPTYPE='                                    00137400
&ZMS              SETC  '&ZMS.&DISPTYPE"'                               00137500
&ZMS              SETC  '&ZMS "DISPTYPE"'                               00137600
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00137700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00137800
.ZG12A            ANOP  ,                                               00137900
.*------------------------------------------------------------------    00138000
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00138100
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00138200
.ZG12A0           AIF   (K'&SAMEDU LE 0).ZG12A1  OK                     00138300
&ZCVAL            SETC '&ZCVAL SAMEDU'          INCORRECT KEY USED      00138400
.ZG12A1           AIF   (K'&ZCVAL LE 0).ZG12A2  OK                      00138500
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00138600
&ZMS              SETC  '"DISPTYPE'                                     00138700
&ZMS              SETC  '&ZMS.=&DISPTYPE"'                              00138800
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00138900
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00139000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00139100
.ZG12A2           ANOP  ,                                               00139200
.*----------------------------------------------------------------***   00139300
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00139400
                  AIF   (N'&TCB LE 1).ZG14A     CK NUM                  00139500
&ZMS              SETC  '"TCB='                                         00139600
&ZMS              SETC  '&ZMS.&TCB"'                                    00139700
&ZMS              SETC  '&ZMS "TCB"'                                    00139800
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00139900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00140000
.ZG14A            ANOP  ,                                               00140100
.*-------------------------------------------------------------------   00140200
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00140300
&ZXTCB            SETC  'INPUT'     SET IN/OUTPUT                       00140400
&XTCB             SETC  '&TCB(1)'   SET XVARIABLE                       00140500
                  AIF   (N'&TCB GT 1).ZG14B     MULTI                   00140600
&XTCB             SETC  '&TCB'      SET XVARIABLE                       00140700
.ZG14B            AIF   (K'&TCB(1) GT 0).ZG14C                          00140800
&ZXTCB            SETC  ''          RESET IN/OUTPUT                     00140900
&ZMS              SETC  ' '                                             00141000
&ZMS              SETC  '&ZMS "TCB" KEY AND ITS'                        00141100
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00141200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00141300
.ZG14C            ANOP  ,                                               00141400
.*-------------------------------------------------------------------   00141500
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00141600
                  AIF   (K'&ZXTCB LE 0).ZG14R   NOT I/O                 00141700
                  AIF   ('&XTCB'(1,1) NE '(').ZG14R                     00141800
&ZCGPR            SETC  '&XTCB'(2,K'&XTCB-2)                            00141900
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG14P                    00142000
                  AIF   (K'&ZCGPR GT 2).ZG14Q                           00142100
                  AIF   ('&ZCGPR' EQ '0').ZG14Q                         00142200
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00142300
                  AIF   (T'&ZCGPR NE 'N').ZG14Q  INVALID REG NAME       00142400
.ZG14P            ANOP  ,                                               00142500
                  AIF   (T'&ZCGPR NE 'N').ZG14R  NON NUMERIC            00142600
                  AIF   ('&ZCGPR' LT '2').ZG14Q                         00142700
                  AIF   ('&ZCGPR' LE '12').ZG14R                        00142800
.ZG14Q            ANOP  ,                                               00142900
&ZMS              SETC  '"TCB='                                         00143000
&ZMS              SETC  '&ZMS.&TCB"'                                    00143100
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00143200
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00143300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00143400
.ZG14R            ANOP  ,                                               00143500
.*-------------------------------------------------------------------   00143600
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00143700
.ZG16             ANOP  ,                                               00143800
&ZTLC             SETC 'SRB'                                            00143900
                  AIF   ('&DISPTYPE(1)' NE '&ZTLC').ZG22                00144000
&XDISPTYPE        SETC  'SRB'       SET KEYWORD                         00144100
                  AIF   (N'&DISPTYPE LE 1).ZG16A  CK NUM                00144200
&ZMS              SETC  '"DISPTYPE='                                    00144300
&ZMS              SETC  '&ZMS.&DISPTYPE"'                               00144400
&ZMS              SETC  '&ZMS "DISPTYPE"'                               00144500
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00144600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00144700
.ZG16A            ANOP  ,                                               00144800
.*------------------------------------------------------------------    00144900
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00145000
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00145100
.ZG16A0           AIF   (K'&TCB LE 0).ZG16A1    OK                      00145200
&ZCVAL            SETC '&ZCVAL TCB'             INCORRECT KEY USED      00145300
.ZG16A1           AIF   (K'&ZCVAL LE 0).ZG16A2  OK                      00145400
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00145500
&ZMS              SETC  '"DISPTYPE'                                     00145600
&ZMS              SETC  '&ZMS.=&DISPTYPE"'                              00145700
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00145800
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00145900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00146000
.ZG16A2           ANOP  ,                                               00146100
.*------------------------------------------------------------------    00146200
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00146300
&XSAMEDU          SETC  ''          INITIALIZE XVARIABLE                00146400
.*-------------------------------------------------------------------   00146500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00146600
.ZG19             ANOP  ,                                               00146700
                  AIF   (K'&SAMEDU(1) LE 0).ZG19A                       00146800
&ZTLC             SETC 'YES'                                            00146900
                  AIF   ('&SAMEDU(1)' NE '&ZTLC').ZG20                  00147000
&XSAMEDU          SETC  'YES'       SET KEYWORD                         00147100
                  AIF   (N'&SAMEDU LE 1).ZG19A  CK NUM                  00147200
&ZMS              SETC  '"SAMEDU='                                      00147300
&ZMS              SETC  '&ZMS.&SAMEDU"'                                 00147400
&ZMS              SETC  '&ZMS "SAMEDU"'                                 00147500
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00147600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00147700
.ZG19A            ANOP  ,                                               00147800
.*-------------------------------------------------------------------   00147900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00148000
.ZG20             ANOP  ,                                               00148100
&ZTLC             SETC 'NO'                                             00148200
                  AIF   ('&SAMEDU(1)' NE '&ZTLC').ZG21                  00148300
&XSAMEDU          SETC  'NO'        SET KEYWORD                         00148400
                  AIF   (N'&SAMEDU LE 1).ZG20A  CK NUM                  00148500
&ZMS              SETC  '"SAMEDU='                                      00148600
&ZMS              SETC  '&ZMS.&SAMEDU"'                                 00148700
&ZMS              SETC  '&ZMS "SAMEDU"'                                 00148800
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00148900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00149000
.ZG20A            ANOP  ,                                               00149100
.*------------------------------------------------------------------    00149200
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00149300
.ZG21             ANOP  ,                                               00149400
&ZXSAMEDU         SETC  'INPUT'     SET IN/OUTPUT                       00149500
                  AIF   (K'&XSAMEDU GT 0).ZG21E  VALID ARG              00149600
                  AIF   (T'&SAMEDU EQ 'O').ZG21D  OMITTED               00149700
&ZASYSLNDX        SETA  0                                               00149800
.ZG21A            ANOP  ,           POSITIONAL MACRO KEY                00149900
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00150000
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG21C                00150100
&ZTLC             SETC 'SAMEDU'                                         00150200
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG21A       00150300
.ZG21B            ANOP  ,                                               00150400
&ZXSAMEDU         SETC  ''          RESET IN/OUTPUT                     00150500
&ZMS              SETC  'THE "SAMEDU" KEY'                              00150600
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00150700
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00150800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00150900
                  AGO   .ZG21E                                          00151000
.ZG21C            ANOP  ,                                               00151100
&ZXSAMEDU         SETC  ''          RESET IN/OUTPUT                     00151200
&ZMS              SETC  '"SAMEDU='                                      00151300
&ZMS              SETC  '&ZMS.&SAMEDU"'                                 00151400
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00151500
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00151600
&ZMS              SETC  '&ZMS "YES"'                                    00151700
&ZMS              SETC  '&ZMS OR "NO".'                                 00151800
                  MNOTE 8,' &ZMS '                                      00151900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00152000
                  AGO   .ZG21E                                          00152100
.ZG21D            ANOP  ,                                               00152200
&XSAMEDU          SETC  'YES'       SET DEFAULT KEYWORD                 00152300
.ZG21E            ANOP  ,                                               00152400
.*------------------------------------------------------------------    00152500
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00152600
                  AIF   (K'&SAMEDU(1) GT 0).ZG21F  PARM                 00152700
&XSAMEDU          SETC  ''          ENSURE NULL KEYWORD                 00152800
&ZXSAMEDU         SETC  ''          RESET IN/OUTPUT                     00152900
&ZMS              SETC  'THE'                                           00153000
&ZMS              SETC  '&ZMS "SAMEDU" KEY AND ITS'                     00153100
&ZMS              SETC  '&ZMS ARGUMENT ARE REQUIRED.'                   00153200
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00153300
&ZMS              SETC  '&ZMS "YES"'                                    00153400
&ZMS              SETC  '&ZMS OR "NO".'                                 00153500
                  MNOTE 8,' &ZMS '                                      00153600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00153700
.ZG21F            ANOP  ,                                               00153800
.*------------------------------------------------------------------    00153900
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00154000
.ZG22             ANOP  ,                                               00154100
&ZXDISPTYPE       SETC  'INPUT'     SET IN/OUTPUT                       00154200
                  AIF   (K'&XDISPTYPE GT 0).ZG22E  VALID ARG            00154300
                  AIF   (T'&DISPTYPE EQ 'O').ZG22D  OMITTED             00154400
&ZASYSLNDX        SETA  0                                               00154500
.ZG22A            ANOP  ,           POSITIONAL MACRO KEY                00154600
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00154700
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG22C                00154800
&ZTLC             SETC 'DISPTYPE'                                       00154900
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG22A       00155000
.ZG22B            ANOP  ,                                               00155100
&ZXDISPTYPE       SETC  ''          RESET IN/OUTPUT                     00155200
&ZMS              SETC  'THE "DISPTYPE" KEY'                            00155300
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00155400
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00155500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00155600
                  AGO   .ZG22E                                          00155700
.ZG22C            ANOP  ,                                               00155800
&ZXDISPTYPE       SETC  ''          RESET IN/OUTPUT                     00155900
&ZMS              SETC  '"DISPTYPE='                                    00156000
&ZMS              SETC  '&ZMS.&DISPTYPE"'                               00156100
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00156200
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00156300
&ZMS              SETC  '&ZMS "TCB"'                                    00156400
&ZMS              SETC  '&ZMS OR "SRB".'                                00156500
                  MNOTE 8,' &ZMS '                                      00156600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00156700
                  AGO   .ZG22E                                          00156800
.ZG22D            ANOP  ,                                               00156900
&XDISPTYPE        SETC  'TCB'       SET DEFAULT KEYWORD                 00157000
.ZG22E            ANOP  ,                                               00157100
.*------------------------------------------------------------------    00157200
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00157300
                  AIF   (K'&DISPTYPE(1) GT 0).ZG22F  PARM               00157400
&XDISPTYPE        SETC  ''          ENSURE NULL KEYWORD                 00157500
&ZXDISPTYPE       SETC  ''          RESET IN/OUTPUT                     00157600
&ZMS              SETC  'THE'                                           00157700
&ZMS              SETC  '&ZMS "DISPTYPE" KEY AND ITS'                   00157800
&ZMS              SETC  '&ZMS ARGUMENT ARE REQUIRED.'                   00157900
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00158000
&ZMS              SETC  '&ZMS "TCB"'                                    00158100
&ZMS              SETC  '&ZMS OR "SRB".'                                00158200
                  MNOTE 8,' &ZMS '                                      00158300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00158400
.ZG22F            ANOP  ,                                               00158500
.*------------------------------------------------------------------    00158600
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00158700
&XPARENTP         SETC  ''          INITIALIZE XVARIABLE                00158800
.*-------------------------------------------------------------------   00158900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00159000
.ZG25             ANOP  ,                                               00159100
                  AIF   (K'&PARENTP(1) LE 0).ZG25A                      00159200
&ZTLC             SETC 'YES'                                            00159300
                  AIF   ('&PARENTP(1)' NE '&ZTLC').ZG38                 00159400
&XPARENTP         SETC  'YES'       SET KEYWORD                         00159500
                  AIF   (N'&PARENTP LE 1).ZG25A  CK NUM                 00159600
&ZMS              SETC  '"PARENTP='                                     00159700
&ZMS              SETC  '&ZMS.&PARENTP"'                                00159800
&ZMS              SETC  '&ZMS "PARENTP"'                                00159900
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00160000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00160100
.ZG25A            ANOP  ,                                               00160200
.*------------------------------------------------------------------    00160300
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00160400
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00160500
.ZG25A0           AIF   (K'&PARENTTCB LE 0).ZG25A1  OK                  00160600
&ZCVAL            SETC '&ZCVAL PARENTTCB'       INCORRECT KEY USED      00160700
.ZG25A1           AIF   (K'&ZCVAL LE 0).ZG25A2  OK                      00160800
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00160900
&ZMS              SETC  '"PARENTP'                                      00161000
&ZMS              SETC  '&ZMS.=&PARENTP"'                               00161100
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00161200
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00161300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00161400
.ZG25A2           ANOP  ,                                               00161500
.*----------------------------------------------------------------***   00161600
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00161700
                  AIF   (N'&PARENTMONTKN LE 1).ZG27A  CK NUM            00161800
&ZMS              SETC  '"PARENTMONTKN='                                00161900
&ZMS              SETC  '&ZMS.&PARENTMONTKN"'                           00162000
&ZMS              SETC  '&ZMS "PARENTMONTKN"'                           00162100
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00162200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00162300
.ZG27A            ANOP  ,                                               00162400
.*-------------------------------------------------------------------   00162500
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00162600
&ZXPARENTMONTKN   SETC  'INPUT'     SET IN/OUTPUT                       00162700
&XPARENTMONTKN    SETC  '&PARENTMONTKN(1)'      SET XVARIABLE           00162800
                  AIF   (N'&PARENTMONTKN GT 1).ZG27B  MULTI             00162900
&XPARENTMONTKN    SETC  '&PARENTMONTKN'         SET XVARIABLE           00163000
.ZG27B            AIF   (K'&PARENTMONTKN(1) GT 0).ZG27C                 00163100
&ZXPARENTMONTKN   SETC  ''          RESET IN/OUTPUT                     00163200
&ZMS              SETC  ' '                                             00163300
&ZMS              SETC  '&ZMS "PARENTMONTKN" KEY AND ITS'               00163400
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00163500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00163600
.ZG27C            ANOP  ,                                               00163700
.*-------------------------------------------------------------------   00163800
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00163900
                  AIF   (K'&ZXPARENTMONTKN LE 0).ZG27R  NOT I/O         00164000
                  AIF   ('&XPARENTMONTKN'(1,1) NE '(').ZG27R            00164100
&ZCGPR            SETC  '&XPARENTMONTKN'(2,K'&XPARENTMONTKN-2)          00164200
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG27P                    00164300
                  AIF   (K'&ZCGPR GT 2).ZG27Q                           00164400
                  AIF   ('&ZCGPR' EQ '0').ZG27Q                         00164500
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00164600
                  AIF   (T'&ZCGPR NE 'N').ZG27Q  INVALID REG NAME       00164700
.ZG27P            ANOP  ,                                               00164800
                  AIF   (T'&ZCGPR NE 'N').ZG27R  NON NUMERIC            00164900
                  AIF   ('&ZCGPR' LT '2').ZG27Q                         00165000
                  AIF   ('&ZCGPR' LE '12').ZG27R                        00165100
.ZG27Q            ANOP  ,                                               00165200
&ZMS              SETC  '"PARENTMONTKN='                                00165300
&ZMS              SETC  '&ZMS.&PARENTMONTKN"'                           00165400
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00165500
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00165600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00165700
.ZG27R            ANOP  ,                                               00165800
.*----------------------------------------------------------------***   00165900
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00166000
                  AIF   (N'&PARENTENVTKN LE 1).ZG29A  CK NUM            00166100
&ZMS              SETC  '"PARENTENVTKN='                                00166200
&ZMS              SETC  '&ZMS.&PARENTENVTKN"'                           00166300
&ZMS              SETC  '&ZMS "PARENTENVTKN"'                           00166400
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00166500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00166600
.ZG29A            ANOP  ,                                               00166700
.*-------------------------------------------------------------------   00166800
.***AG.KXVAR17 NAME, OPT INPUT, KEYS -XVARIABLE                         00166900
&XPARENTENVTKN    SETC  'NO_PARENTENVTKN'       SET DEFAULT             00167000
                  AIF   (K'&PARENTENVTKN(1) LE 0).ZG29C  PARM           00167100
&XPARENTENVTKN    SETC  '&PARENTENVTKN(1)'      SET XVARIABLE           00167200
                  AIF   (N'&PARENTENVTKN GT 1).ZG29B  MULTI             00167300
&XPARENTENVTKN    SETC  '&PARENTENVTKN'         SET XVARIABLE           00167400
.ZG29B            AIF   (K'&PARENTMONTKN(1) GT 0).ZG29C  KEY            00167500
&ZMS              SETC  '"PARENTENVTKN'                                 00167600
&ZMS              SETC  '&ZMS.=&PARENTENVTKN"'                          00167700
&ZMS              SETC  '&ZMS CAN ONLY BE SPECIFIED IF'                 00167800
&ZMS              SETC  '&ZMS '                                         00167900
&ZMS              SETC  '&ZMS "PARENTMONTKN"'                           00168000
                  MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                    00168100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00168200
.ZG29C            ANOP  ,                                               00168300
&ZXPARENTENVTKN   SETC  'INPUT'     SET IN/OUTPUT                       00168400
.*-------------------------------------------------------------------   00168500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00168600
                  AIF   (K'&ZXPARENTENVTKN LE 0).ZG29R  NOT I/O         00168700
         AIF   ('&XPARENTENVTKN' EQ 'NO_PARENTENVTKN').ZG29R            00168800
                  AIF   ('&XPARENTENVTKN'(1,1) NE '(').ZG29R            00168900
&ZCGPR            SETC  '&XPARENTENVTKN'(2,K'&XPARENTENVTKN-2)          00169000
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG29P                    00169100
                  AIF   (K'&ZCGPR GT 2).ZG29Q                           00169200
                  AIF   ('&ZCGPR' EQ '0').ZG29Q                         00169300
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00169400
                  AIF   (T'&ZCGPR NE 'N').ZG29Q  INVALID REG NAME       00169500
.ZG29P            ANOP  ,                                               00169600
                  AIF   (T'&ZCGPR NE 'N').ZG29R  NON NUMERIC            00169700
                  AIF   ('&ZCGPR' LT '2').ZG29Q                         00169800
                  AIF   ('&ZCGPR' LE '12').ZG29R                        00169900
.ZG29Q            ANOP  ,                                               00170000
&ZMS              SETC  '"PARENTENVTKN='                                00170100
&ZMS              SETC  '&ZMS.&PARENTENVTKN"'                           00170200
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00170300
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00170400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00170500
.ZG29R            ANOP  ,                                               00170600
.*------------------------------------------------------------------    00170700
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00170800
&XPARENTENV       SETC  ''          INITIALIZE XVARIABLE                00170900
.*-------------------------------------------------------------------   00171000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00171100
.ZG34             ANOP  ,                                               00171200
                  AIF   (K'&PARENTENV(1) LE 0).ZG34A                    00171300
&ZTLC             SETC 'NOSWITCH'                                       00171400
                  AIF   ('&PARENTENV(1)' NE '&ZTLC').ZG35               00171500
&XPARENTENV       SETC  'NOSWITCH'  SET KEYWORD                         00171600
                  AIF   (N'&PARENTENV LE 1).ZG34A  CK NUM               00171700
&ZMS              SETC  '"PARENTENV='                                   00171800
&ZMS              SETC  '&ZMS.&PARENTENV"'                              00171900
&ZMS              SETC  '&ZMS "PARENTENV"'                              00172000
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00172100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00172200
.ZG34A            ANOP  ,                                               00172300
.*-------------------------------------------------------------------   00172400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00172500
.ZG35             ANOP  ,                                               00172600
&ZTLC             SETC 'SECONDARY'                                      00172700
                  AIF   ('&PARENTENV(1)' NE '&ZTLC').ZG36               00172800
&XPARENTENV       SETC  'SECONDARY'             SET KEYWORD             00172900
                  AIF   (N'&PARENTENV LE 1).ZG35A  CK NUM               00173000
&ZMS              SETC  '"PARENTENV='                                   00173100
&ZMS              SETC  '&ZMS.&PARENTENV"'                              00173200
&ZMS              SETC  '&ZMS "PARENTENV"'                              00173300
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00173400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00173500
.ZG35A            ANOP  ,                                               00173600
.*-------------------------------------------------------------------   00173700
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00173800
.ZG36             ANOP  ,                                               00173900
&ZTLC             SETC 'HOME'                                           00174000
                  AIF   ('&PARENTENV(1)' NE '&ZTLC').ZG37               00174100
&XPARENTENV       SETC  'HOME'      SET KEYWORD                         00174200
                  AIF   (N'&PARENTENV LE 1).ZG36A  CK NUM               00174300
&ZMS              SETC  '"PARENTENV='                                   00174400
&ZMS              SETC  '&ZMS.&PARENTENV"'                              00174500
&ZMS              SETC  '&ZMS "PARENTENV"'                              00174600
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00174700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00174800
.ZG36A            ANOP  ,                                               00174900
.*------------------------------------------------------------------    00175000
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00175100
.ZG37             ANOP  ,                                               00175200
&ZXPARENTENV      SETC  'INPUT'     SET IN/OUTPUT                       00175300
                  AIF   (K'&XPARENTENV GT 0).ZG37E  VALID ARG           00175400
                  AIF   (T'&PARENTENV EQ 'O').ZG37D  OMITTED            00175500
&ZASYSLNDX        SETA  0                                               00175600
.ZG37A            ANOP  ,           POSITIONAL MACRO KEY                00175700
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00175800
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG37C                00175900
&ZTLC             SETC 'PARENTENV'                                      00176000
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG37A       00176100
.ZG37B            ANOP  ,                                               00176200
&ZXPARENTENV      SETC  ''          RESET IN/OUTPUT                     00176300
&ZMS              SETC  'THE "PARENTENV" KEY'                           00176400
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00176500
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00176600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00176700
                  AGO   .ZG37E                                          00176800
.ZG37C            ANOP  ,                                               00176900
&ZXPARENTENV      SETC  ''          RESET IN/OUTPUT                     00177000
&ZMS              SETC  '"PARENTENV='                                   00177100
&ZMS              SETC  '&ZMS.&PARENTENV"'                              00177200
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00177300
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00177400
&ZMS              SETC  '&ZMS "NOSWITCH",'                              00177500
&ZMS              SETC  '&ZMS "SECONDARY",'                             00177600
&ZMS              SETC  '&ZMS OR "HOME".'                               00177700
                  MNOTE 8,' &ZMS '                                      00177800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00177900
                  AGO   .ZG37E                                          00178000
.ZG37D            ANOP  ,                                               00178100
&XPARENTENV       SETC  'NOSWITCH'  SET DEFAULT KEYWORD                 00178200
.ZG37E            ANOP  ,                                               00178300
.*------------------------------------------------------------------    00178400
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00178500
                  AIF   (K'&PARENTENV(1) GT 0).ZG37F  PARM              00178600
&XPARENTENV       SETC  ''          ENSURE NULL KEYWORD                 00178700
&ZXPARENTENV      SETC  ''          RESET IN/OUTPUT                     00178800
&ZMS              SETC  'THE'                                           00178900
&ZMS              SETC  '&ZMS "PARENTENV" KEY AND ITS'                  00179000
&ZMS              SETC  '&ZMS ARGUMENT ARE REQUIRED.'                   00179100
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00179200
&ZMS              SETC  '&ZMS "NOSWITCH",'                              00179300
&ZMS              SETC  '&ZMS "SECONDARY",'                             00179400
&ZMS              SETC  '&ZMS OR "HOME".'                               00179500
                  MNOTE 8,' &ZMS '                                      00179600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00179700
.ZG37F            ANOP  ,                                               00179800
.*-------------------------------------------------------------------   00179900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00180000
.ZG38             ANOP  ,                                               00180100
&ZTLC             SETC 'FINDACTIVE'                                     00180200
                  AIF   ('&PARENTP(1)' NE '&ZTLC').ZG42                 00180300
&XPARENTP         SETC  'FINDACTIVE'            SET KEYWORD             00180400
                  AIF   (N'&PARENTP LE 1).ZG38A  CK NUM                 00180500
&ZMS              SETC  '"PARENTP='                                     00180600
&ZMS              SETC  '&ZMS.&PARENTP"'                                00180700
&ZMS              SETC  '&ZMS "PARENTP"'                                00180800
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00180900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00181000
.ZG38A            ANOP  ,                                               00181100
.*------------------------------------------------------------------    00181200
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00181300
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00181400
.ZG38A0           AIF   (K'&PARENTMONTKN LE 0).ZG38A1  OK               00181500
&ZCVAL            SETC '&ZCVAL PARENTMONTKN'    INCORRECT KEY USED      00181600
.ZG38A1           AIF   (K'&PARENTENVTKN LE 0).ZG38A2  OK               00181700
&ZCVAL            SETC '&ZCVAL PARENTENVTKN'    INCORRECT KEY USED      00181800
.ZG38A2           AIF   (K'&PARENTENV LE 0).ZG38A3  OK                  00181900
&ZCVAL            SETC '&ZCVAL PARENTENV'       INCORRECT KEY USED      00182000
.ZG38A3           AIF   (K'&ZCVAL LE 0).ZG38A4  OK                      00182100
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00182200
&ZMS              SETC  '"PARENTP'                                      00182300
&ZMS              SETC  '&ZMS.=&PARENTP"'                               00182400
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00182500
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00182600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00182700
.ZG38A4           ANOP  ,                                               00182800
.*----------------------------------------------------------------***   00182900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00183000
                  AIF   (N'&PARENTTCB LE 1).ZG40A  CK NUM               00183100
&ZMS              SETC  '"PARENTTCB='                                   00183200
&ZMS              SETC  '&ZMS.&PARENTTCB"'                              00183300
&ZMS              SETC  '&ZMS "PARENTTCB"'                              00183400
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00183500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00183600
.ZG40A            ANOP  ,                                               00183700
.*-------------------------------------------------------------------   00183800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00183900
&ZXPARENTTCB      SETC  'INPUT'     SET IN/OUTPUT                       00184000
&XPARENTTCB       SETC  '&PARENTTCB(1)'         SET XVARIABLE           00184100
                  AIF   (N'&PARENTTCB GT 1).ZG40B  MULTI                00184200
&XPARENTTCB       SETC  '&PARENTTCB'            SET XVARIABLE           00184300
.ZG40B            AIF   (K'&PARENTTCB(1) GT 0).ZG40C                    00184400
&ZXPARENTTCB      SETC  ''          RESET IN/OUTPUT                     00184500
&ZMS              SETC  ' '                                             00184600
&ZMS              SETC  '&ZMS "PARENTTCB" KEY AND ITS'                  00184700
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00184800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00184900
.ZG40C            ANOP  ,                                               00185000
.*-------------------------------------------------------------------   00185100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00185200
                  AIF   (K'&ZXPARENTTCB LE 0).ZG40R  NOT I/O            00185300
                  AIF   ('&XPARENTTCB'(1,1) NE '(').ZG40R               00185400
&ZCGPR            SETC  '&XPARENTTCB'(2,K'&XPARENTTCB-2)                00185500
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG40P                    00185600
                  AIF   (K'&ZCGPR GT 2).ZG40Q                           00185700
                  AIF   ('&ZCGPR' EQ '0').ZG40Q                         00185800
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00185900
                  AIF   (T'&ZCGPR NE 'N').ZG40Q  INVALID REG NAME       00186000
.ZG40P            ANOP  ,                                               00186100
                  AIF   (T'&ZCGPR NE 'N').ZG40R  NON NUMERIC            00186200
                  AIF   ('&ZCGPR' LT '2').ZG40Q                         00186300
                  AIF   ('&ZCGPR' LE '12').ZG40R                        00186400
.ZG40Q            ANOP  ,                                               00186500
&ZMS              SETC  '"PARENTTCB='                                   00186600
&ZMS              SETC  '&ZMS.&PARENTTCB"'                              00186700
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00186800
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00186900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00187000
.ZG40R            ANOP  ,                                               00187100
.*------------------------------------------------------------------    00187200
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00187300
.ZG42             ANOP  ,                                               00187400
&ZXPARENTP        SETC  'INPUT'     SET IN/OUTPUT                       00187500
                  AIF   (K'&XPARENTP GT 0).ZG42E  VALID ARG             00187600
                  AIF   (T'&PARENTP EQ 'O').ZG42D  OMITTED              00187700
&ZASYSLNDX        SETA  0                                               00187800
.ZG42A            ANOP  ,           POSITIONAL MACRO KEY                00187900
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00188000
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG42C                00188100
&ZTLC             SETC 'PARENTP'                                        00188200
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG42A       00188300
.ZG42B            ANOP  ,                                               00188400
&ZXPARENTP        SETC  ''          RESET IN/OUTPUT                     00188500
&ZMS              SETC  'THE "PARENTP" KEY'                             00188600
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00188700
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00188800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00188900
                  AGO   .ZG42E                                          00189000
.ZG42C            ANOP  ,                                               00189100
&ZXPARENTP        SETC  ''          RESET IN/OUTPUT                     00189200
&ZMS              SETC  '"PARENTP='                                     00189300
&ZMS              SETC  '&ZMS.&PARENTP"'                                00189400
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00189500
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00189600
&ZMS              SETC  '&ZMS "YES"'                                    00189700
&ZMS              SETC  '&ZMS OR "FINDACTIVE".'                         00189800
                  MNOTE 8,' &ZMS '                                      00189900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00190000
                  AGO   .ZG42E                                          00190100
.ZG42D            ANOP  ,                                               00190200
&XPARENTP         SETC  'YES'       SET DEFAULT KEYWORD                 00190300
.ZG42E            ANOP  ,                                               00190400
.*------------------------------------------------------------------    00190500
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00190600
                  AIF   (K'&PARENTP(1) GT 0).ZG42F  PARM                00190700
&XPARENTP         SETC  ''          ENSURE NULL KEYWORD                 00190800
&ZXPARENTP        SETC  ''          RESET IN/OUTPUT                     00190900
&ZMS              SETC  'THE'                                           00191000
&ZMS              SETC  '&ZMS "PARENTP" KEY AND ITS'                    00191100
&ZMS              SETC  '&ZMS ARGUMENT ARE REQUIRED.'                   00191200
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00191300
&ZMS              SETC  '&ZMS "YES"'                                    00191400
&ZMS              SETC  '&ZMS OR "FINDACTIVE".'                         00191500
                  MNOTE 8,' &ZMS '                                      00191600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00191700
.ZG42F            ANOP  ,                                               00191800
.*-------------------------------------------------------------------   00191900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00192000
.ZG43             ANOP  ,                                               00192100
&ZTLC             SETC 'DELETE'                                         00192200
                  AIF   ('&FUNCTION(1)' NE '&ZTLC').ZG44                00192300
&XFUNCTION        SETC  'DELETE'    SET KEYWORD                         00192400
                  AIF   (N'&FUNCTION LE 1).ZG43A  CK NUM                00192500
&ZMS              SETC  '"FUNCTION='                                    00192600
&ZMS              SETC  '&ZMS.&FUNCTION"'                               00192700
&ZMS              SETC  '&ZMS "FUNCTION"'                               00192800
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00192900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00193000
.ZG43A            ANOP  ,                                               00193100
.*------------------------------------------------------------------    00193200
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00193300
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00193400
.ZG43A0           AIF   (K'&OWNER_TOKEN LE 0).ZG43A1  OK                00193500
&ZCVAL            SETC '&ZCVAL OWNER_TOKEN'     INCORRECT KEY USED      00193600
.ZG43A1           AIF   (K'&OWNER_DATA LE 0).ZG43A2  OK                 00193700
&ZCVAL            SETC '&ZCVAL OWNER_DATA'      INCORRECT KEY USED      00193800
.ZG43A2           AIF   (K'&DISPTYPE LE 0).ZG43A3  OK                   00193900
&ZCVAL            SETC '&ZCVAL DISPTYPE'        INCORRECT KEY USED      00194000
.ZG43A3           AIF   (K'&TCB LE 0).ZG43A4    OK                      00194100
&ZCVAL            SETC '&ZCVAL TCB'             INCORRECT KEY USED      00194200
.ZG43A4           AIF   (K'&SAMEDU LE 0).ZG43A5  OK                     00194300
&ZCVAL            SETC '&ZCVAL SAMEDU'          INCORRECT KEY USED      00194400
.ZG43A5           AIF   (K'&PARENTP LE 0).ZG43A6  OK                    00194500
&ZCVAL            SETC '&ZCVAL PARENTP'         INCORRECT KEY USED      00194600
.ZG43A6           AIF   (K'&PARENTMONTKN LE 0).ZG43A7  OK               00194700
&ZCVAL            SETC '&ZCVAL PARENTMONTKN'    INCORRECT KEY USED      00194800
.ZG43A7           AIF   (K'&PARENTENVTKN LE 0).ZG43A8  OK               00194900
&ZCVAL            SETC '&ZCVAL PARENTENVTKN'    INCORRECT KEY USED      00195000
.ZG43A8           AIF   (K'&PARENTENV LE 0).ZG43A9  OK                  00195100
&ZCVAL            SETC '&ZCVAL PARENTENV'       INCORRECT KEY USED      00195200
.ZG43A9           AIF   (K'&PARENTTCB LE 0).ZG43A10  OK                 00195300
&ZCVAL            SETC '&ZCVAL PARENTTCB'       INCORRECT KEY USED      00195400
.ZG43A10          AIF   (K'&ZCVAL LE 0).ZG43A11  OK                     00195500
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00195600
&ZMS              SETC  '"FUNCTION'                                     00195700
&ZMS              SETC  '&ZMS.=&FUNCTION"'                              00195800
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00195900
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00196000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00196100
.ZG43A11          ANOP  ,                                               00196200
.*------------------------------------------------------------------    00196300
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00196400
.ZG44             ANOP  ,                                               00196500
&ZXFUNCTION       SETC  'INPUT'     SET IN/OUTPUT                       00196600
                  AIF   (K'&XFUNCTION GT 0).ZG44E  VALID ARG            00196700
                  AIF   (T'&FUNCTION EQ 'O').ZG44D  OMITTED             00196800
&ZASYSLNDX        SETA  0                                               00196900
.ZG44A            ANOP  ,           POSITIONAL MACRO KEY                00197000
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00197100
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG44C                00197200
&ZTLC             SETC 'FUNCTION'                                       00197300
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG44A       00197400
.ZG44B            ANOP  ,                                               00197500
&ZXFUNCTION       SETC  ''          RESET IN/OUTPUT                     00197600
&ZMS              SETC  'THE "FUNCTION" KEY'                            00197700
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00197800
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00197900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00198000
                  AGO   .ZG44E                                          00198100
.ZG44C            ANOP  ,                                               00198200
&ZXFUNCTION       SETC  ''          RESET IN/OUTPUT                     00198300
&ZMS              SETC  '"FUNCTION='                                    00198400
&ZMS              SETC  '&ZMS.&FUNCTION"'                               00198500
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00198600
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00198700
&ZMS              SETC  '&ZMS "CREATE"'                                 00198800
&ZMS              SETC  '&ZMS OR "DELETE".'                             00198900
                  MNOTE 8,' &ZMS '                                      00199000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00199100
                  AGO   .ZG44E                                          00199200
.ZG44D            ANOP  ,                                               00199300
&XFUNCTION        SETC  'CREATE'    SET DEFAULT KEYWORD                 00199400
.ZG44E            ANOP  ,                                               00199500
.*------------------------------------------------------------------    00199600
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00199700
                  AIF   (K'&FUNCTION(1) GT 0).ZG44F  PARM               00199800
&XFUNCTION        SETC  ''          ENSURE NULL KEYWORD                 00199900
&ZXFUNCTION       SETC  ''          RESET IN/OUTPUT                     00200000
&ZMS              SETC  'THE'                                           00200100
&ZMS              SETC  '&ZMS "FUNCTION" KEY AND ITS'                   00200200
&ZMS              SETC  '&ZMS ARGUMENT ARE REQUIRED.'                   00200300
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00200400
&ZMS              SETC  '&ZMS "CREATE"'                                 00200500
&ZMS              SETC  '&ZMS OR "DELETE".'                             00200600
                  MNOTE 8,' &ZMS '                                      00200700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00200800
.ZG44F            ANOP  ,                                               00200900
.*----------------------------------------------------------------***   00201000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00201100
                  AIF   (N'&MONTKN LE 1).ZG46A  CK NUM                  00201200
&ZMS              SETC  '"MONTKN='                                      00201300
&ZMS              SETC  '&ZMS.&MONTKN"'                                 00201400
&ZMS              SETC  '&ZMS "MONTKN"'                                 00201500
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00201600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00201700
.ZG46A            ANOP  ,                                               00201800
.*-------------------------------------------------------------------   00201900
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00202000
&ZXMONTKN         SETC  'INPUT'     SET IN/OUTPUT                       00202100
&XMONTKN          SETC  '&MONTKN(1)'            SET XVARIABLE           00202200
                  AIF   (N'&MONTKN GT 1).ZG46B  MULTI                   00202300
&XMONTKN          SETC  '&MONTKN'   SET XVARIABLE                       00202400
.ZG46B            AIF   (K'&MONTKN(1) GT 0).ZG46C                       00202500
&ZXMONTKN         SETC  ''          RESET IN/OUTPUT                     00202600
&ZMS              SETC  ' '                                             00202700
&ZMS              SETC  '&ZMS "MONTKN" KEY AND ITS'                     00202800
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00202900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00203000
.ZG46C            ANOP  ,                                               00203100
.*-------------------------------------------------------------------   00203200
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00203300
                  AIF   (K'&ZXMONTKN LE 0).ZG46R  NOT I/O               00203400
                  AIF   ('&XMONTKN'(1,1) NE '(').ZG46R                  00203500
&ZCGPR            SETC  '&XMONTKN'(2,K'&XMONTKN-2)                      00203600
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG46P                    00203700
                  AIF   (K'&ZCGPR GT 2).ZG46Q                           00203800
                  AIF   ('&ZCGPR' EQ '0').ZG46Q                         00203900
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00204000
                  AIF   (T'&ZCGPR NE 'N').ZG46Q  INVALID REG NAME       00204100
.ZG46P            ANOP  ,                                               00204200
                  AIF   (T'&ZCGPR NE 'N').ZG46R  NON NUMERIC            00204300
                  AIF   ('&ZCGPR' LT '2').ZG46Q                         00204400
                  AIF   ('&ZCGPR' LE '12').ZG46R                        00204500
.ZG46Q            ANOP  ,                                               00204600
&ZMS              SETC  '"MONTKN='                                      00204700
&ZMS              SETC  '&ZMS.&MONTKN"'                                 00204800
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00204900
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00205000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00205100
.ZG46R            ANOP  ,                                               00205200
.*----------------------------------------------------------------***   00205300
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00205400
                  AIF   (N'&RETCODE LE 1).ZG49A  CK NUM                 00205500
&ZMS              SETC  '"RETCODE='                                     00205600
&ZMS              SETC  '&ZMS.&RETCODE"'                                00205700
&ZMS              SETC  '&ZMS "RETCODE"'                                00205800
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00205900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00206000
.ZG49A            ANOP  ,                                               00206100
.*-------------------------------------------------------------------   00206200
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00206300
                  AIF   (K'&RETCODE(1) LE 0).ZG49C  NO PARM             00206400
&ZXRETCODE        SETC  'OUTPUT'    SET OUTPUT                          00206500
&XRETCODE         SETC  '&RETCODE(1)'           SET XVARIABLE           00206600
                  AIF   (N'&RETCODE GT 1).ZG49C                         00206700
&XRETCODE         SETC  '&RETCODE'  SET XVARIABLE                       00206800
.ZG49C            ANOP  ,                                               00206900
.*-------------------------------------------------------------------   00207000
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00207100
                  AIF   (K'&ZXRETCODE LE 0).ZG49R  NOT I/O              00207200
                  AIF   ('&XRETCODE'(1,1) NE '(').ZG49R                 00207300
&ZCGPR            SETC  '&XRETCODE'(2,K'&XRETCODE-2)                    00207400
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG49P                    00207500
                  AIF   (K'&ZCGPR GT 2).ZG49Q                           00207600
                  AIF   ('&ZCGPR' EQ '0').ZG49Q                         00207700
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00207800
                  AIF   (T'&ZCGPR NE 'N').ZG49Q  INVALID REG NAME       00207900
.ZG49P            ANOP  ,                                               00208000
                  AIF   (T'&ZCGPR NE 'N').ZG49R  NON NUMERIC            00208100
                  AIF   ('&ZCGPR' EQ '15').ZG49R                        00208200
                  AIF   ('&ZCGPR' LT '2').ZG49Q                         00208300
                  AIF   ('&ZCGPR' LE '12').ZG49R                        00208400
.ZG49Q            ANOP  ,                                               00208500
&ZMS              SETC  '"RETCODE='                                     00208600
&ZMS              SETC  '&ZMS.&RETCODE"'                                00208700
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00208800
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12) OR (15).'        00208900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00209000
.ZG49R            ANOP  ,                                               00209100
.*----------------------------------------------------------------***   00209200
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00209300
                  AIF   (N'&RSNCODE LE 1).ZG52A  CK NUM                 00209400
&ZMS              SETC  '"RSNCODE='                                     00209500
&ZMS              SETC  '&ZMS.&RSNCODE"'                                00209600
&ZMS              SETC  '&ZMS "RSNCODE"'                                00209700
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00209800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00209900
.ZG52A            ANOP  ,                                               00210000
.*-------------------------------------------------------------------   00210100
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00210200
                  AIF   (K'&RSNCODE(1) LE 0).ZG52C  NO PARM             00210300
&ZXRSNCODE        SETC  'OUTPUT'    SET OUTPUT                          00210400
&XRSNCODE         SETC  '&RSNCODE(1)'           SET XVARIABLE           00210500
                  AIF   (N'&RSNCODE GT 1).ZG52C                         00210600
&XRSNCODE         SETC  '&RSNCODE'  SET XVARIABLE                       00210700
.ZG52C            ANOP  ,                                               00210800
.*-------------------------------------------------------------------   00210900
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00211000
                  AIF   (K'&ZXRSNCODE LE 0).ZG52R  NOT I/O              00211100
                  AIF   ('&XRSNCODE'(1,1) NE '(').ZG52R                 00211200
&ZCGPR            SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                    00211300
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG52P                    00211400
                  AIF   (K'&ZCGPR GT 2).ZG52Q                           00211500
                  AIF   ('&ZCGPR' EQ '0').ZG52R                         00211600
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00211700
                  AIF   (T'&ZCGPR NE 'N').ZG52Q  INVALID REG NAME       00211800
.ZG52P            ANOP  ,                                               00211900
                  AIF   (T'&ZCGPR NE 'N').ZG52R  NON NUMERIC            00212000
                  AIF   ('&ZCGPR' EQ '0').ZG52R                         00212100
                  AIF   ('&ZCGPR' LT '2').ZG52Q                         00212200
                  AIF   ('&ZCGPR' LE '12').ZG52R                        00212300
.ZG52Q            ANOP  ,                                               00212400
&ZMS              SETC  '"RSNCODE='                                     00212500
&ZMS              SETC  '&ZMS.&RSNCODE"'                                00212600
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00212700
                  MNOTE 8,' &ZMS IN THE RANGE (0) OR (2)-(12).'         00212800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00212900
.ZG52R            ANOP  ,                                               00213000
.******************************************************************     00213100
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00213200
.******************************************************************     00213300
                  ACTR  10000                                           00213400
.*----------------------------------------------------------------***   00213500
.***AH.P02 EXTRA POSITIONALS                                            00213600
                  AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS            00213700
                  AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL            00213800
                  AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL        00213900
                  AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL         00214000
.ZGLISTX1         ANOP  ,                                               00214100
&ZCVAL            SETC  ''          ERROR FIELD                         00214200
&ZAWRK            SETA  0           POSITIONAL NUMBER                   00214300
.ZGLIST2          ANOP  ,                                               00214400
&ZAWRK            SETA  &ZAWRK+1    NEXT POSITIONAL                     00214500
                  AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE            00214600
&ZCVAL            SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                 00214700
                  AGO   .ZGLIST2                                        00214800
.*                                                                      00214900
.ZGLIST3          ANOP  ,                                               00215000
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)   STRIP COMMA             00215100
&ZMS              SETC  'POSITIONAL ARGUMENT(S),'                       00215200
&ZMS              SETC  '&ZMS "&ZCVAL"'                                 00215300
&ZMS              SETC  '&ZMS CANNOT BE USED.'                          00215400
&ZMS              SETC  '&ZMS NO POSITIONAL ARGUMENTS'                  00215500
                  MNOTE 8,' &ZMS ARE ALLOWED.'                          00215600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00215700
.ZGLISTX          ANOP  ,                                               00215800
&ZASYSLNDX        SETA  0                                               00215900
.*-------------------------------------------------------------------   00216000
.***AG.MF04 MF=(SLE)                                                    00216100
.ZGMFX            ANOP  ,           END OF FULL SYNTAX CHECK            00216200
.*******************************************************************    00216300
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00216400
.*******************************************************************    00216500
                  AIF   (&ZMACRET NE 0).ZLX2    ERROR DETECTED          00216600
.*******************************************************************    00216700
.***AE.01  START OF IWMMRELA MACRO CODE                                 00216800
.*******************************************************************    00216900
                  LCLC  &M0M0001                 NAME                   00217000
&M0M0001          SETC  '&XLABEL'                SET NAME               00217100
                  AIF   (K'&XLABEL NE 0).XLAB2                          00217200
&M0M0001          SETC  'M00M&SYSNDX'            DEFAULT NAME           00217300
.*                                                                      00217400
.XLAB2            ANOP  ,                                               00217500
                  AIF   ('&XMF' EQ 'L').XLAB3                           00217600
&M0M0001 DS    0H                             IWMMRELA-0                00217700
.XLAB3            ANOP  ,                                               00217800
.*******************************************************************    00217900
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00218000
.*******************************************************************    00218100
              PUSH  PRINT                                               00218200
                  AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON      00218300
                  PRINT OFF         ++ PR01                             00218400
                  AGO   .ZPRNTXX                                        00218500
.ZPRINTX          PRINT ON                                              00218600
.ZPRNTXX          ANOP  ,                                               00218700
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00218800
         LCLC  &T1                                                      00218900
         AIF   ('&XFUNCTION' EQ 'DELETE').TESTMF                        00219000
         AIF   ('&XPARENTP' EQ 'YES').TESTMF                            00219100
         AIF   ('&XPARENTP' NE 'FINDACTIVE').NOCODENEEDED               00219200
.*    PARENTP SPECIFIED AS FINDACTIVE                                   00219300
         AIF   ('&DISPTYPE' NE 'SRB').NOCODENEEDED                      00219400
         AIF   ('&SAMEDU' NE 'YES').NOCODENEEDED                        00219500
.*    DISPTYPE SPECIFIED AS SRB, SAMEDU SPECIFIED AS YES                00219600
&T1      SETC  'FUNCTION(CREATE) DISPTYPE(SRB) SAMEDU(YES) CANNOT BE '  00219700
&T1      SETC  '&T1.SPECIFIED WITH PARENTP(FINDACTIVE)'                 00219800
         MNOTE 8,'&T1'                                                  00219900
         MEXIT                                                          00220000
.*                                                                      00220100
.TESTMF  ANOP                                                           00220200
         AIF   ('&MF' EQ '').NOMF                                       00220300
&T1      SETC  'MF IS NOT VALID WITH FUNCTION(DELETE) OR PARENTP(YES)'  00220400
         MNOTE 4,'&T1'                                                  00220500
.NOMF    ANOP                                                           00220600
&T1      SETC  '&MONTKN'                                                00220700
         AIF   ('&MONTKN'(1,1) NE '(').MONTKNRS                         00220800
&T1      SETC  '&MONTKN'(2,K'&MONTKN-2)                                 00220900
&T1      SETC  '0(&T1.)'                                                00221000
.MONTKNRS  ANOP                                                         00221100
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00221200
         ICM   14,15,&T1               FETCH MONITORING TOKEN           00221300
         BNZ   MONENV&SYSNDX           BRANCH WHEN MON ENV IS PRESENT   00221400
         LA    0,IWMRSNCODENOMONENV    SET REASON CODE = NO MON ENV     00221500
         LA    15,IWMRETCODEWARNING    SET WARNING RETURN CODE          00221600
         B     END&SYSNDX              BRANCH TO END LABEL              00221700
MONENV&SYSNDX DS    0H                 BRANCH LABEL FOR MON ENV PRESENT 00221800
         CLC   PB_ID-PB(4,14),=CL4'PB  '                                00221900
         BE    MONENVRO&SYSNDX         BRANCH WHEN MON ENV PASSES       00222000
         LA    0,IWMRSNCODEBADMONENV   SET REASON CODE = BAD MON ENV    00222100
         LA    15,IWMRETCODEINVOCERROR SET INVOCATION ERROR RETURN CODE 00222200
         B     END&SYSNDX              BRANCH TO END LABEL              00222300
         USING PB,14                                         @OW54806   00222400
MONENVRO&SYSNDX DS    0H               BRANCH LABEL FOR      @WLMPPBS   00222500
         TM    PB_FLAGS,PB_REPORT_ONLY   REPORT ONLY CHECK   @WLMPPBS   00222600
         BC    8,MONENVOK&SYSNDX         BRANCH WHEN NOt RO  @OA05654   00222700
         LA    0,IWMRSNCODEROMONENV    SET REASON CODE = RO  @WLMPPBS   00222800
         LA    15,IWMRETCODEINVOCERROR SET INVOCATION ERROR  @WLMPPBS   00222900
         B     END&SYSNDX              BRANCH TO END LABEL   @WLMPPBS   00223000
MONENVOK&SYSNDX DS    0H               BRANCH LABEL FOR MON ENV OK      00223100
         AIF   ('&XFUNCTION' NE 'CREATE').ENDCREATE                     00223200
MONENVBP&SYSNDX DS    0H               BRANCH LABEL FOR      @WLMPDBM   00223300
         TM    PB_FLAGS,PB_BPMGMT_ONLY BUFFERPOOL ONLY CHECK @WLMPDBM   00223400
         BC    4,ENDXC&SYSNDX          BRANCH IF BPMGMTONLY  @WLMPDBM   00223500
.*                                                                      00223600
.* THE FOLLOWING CODE HANDLES FUNCTION(CREATE)                          00223700
.*                                                                      00223800
         LH    15,PB_NEW_LENGTH                               @OW26040  00223900
         LTR   15,15                                          @OW26040  00224000
         BZ    NOLENGTH&SYSNDX  Branch, if length is set      @LEWMSMC  00224100
         BCTR  15,0             Decrement length for EX       @LEWMSMC  00224200
         EX    15,A&SYSNDX      EXecute the XC instruction    @LEWMSMC  00224300
         B     ENDXC&SYSNDX     Branch around ABEND           @LEWMSMC  00224400
NOLENGTH&SYSNDX DS    0H        Branch target, if no length   @LEWMSMC  00224500
         ABEND X'15F',DUMP,,SYSTEM,REASON=352                 @OW26040  00224600
.* No continuation after ABEND                                @LEWMSMD  00224700
A&SYSNDX XC    PB_CLEAR_FLD(0),PB_CLEAR_FLD                   @OW26040  00224800
ENDXC&SYSNDX    DS    0H                                      @OW26040  00224900
         AIF   ('&XOWNER_TOKEN' NE 'NO_OWNER_TOKEN').OWNERTKN           00225000
         AGO   .ENDOWNERTKN                                             00225100
.*                                                                      00225200
.OWNERTKN   ANOP                                                        00225300
.* Change &OWNERTKN to &OWNER_TOKEN in the next 3 lines WLMPERS         00225400
&T1      SETC  '&OWNER_TOKEN'                                           00225500
         AIF   ('&OWNER_TOKEN'(1,1) NE '(').OWNERTKNRS                  00225600
&T1      SETC  '&OWNER_TOKEN'(2,K'&OWNER_TOKEN-2)                       00225700
&T1      SETC  '0(&T1.)'                                                00225800
.OWNERTKNRS ANOP                                                        00225900
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00226000
         L     1,&T1                   COPY OWNER_TOKEN VIA L,ST        00226100
         ST    1,PB_OWNER_TKN                                           00226200
.ENDOWNERTKN   ANOP                                                     00226300
.*                                                                      00226400
.*       OWNER_DATA PROCESSING                                          00226500
.*                                                                      00226600
         AIF   ('&XOWNER_DATA' NE 'NO_OWNER_DATA').OWNER_DATA           00226700
         AGO   .ENDOWNER_DATA                                           00226800
.*                                                                      00226900
.OWNER_DATA ANOP                                                        00227000
&T1      SETC  '&OWNER_DATA'                                            00227100
         AIF   ('&OWNER_DATA'(1,1) NE '(').OWNER_DATARS                 00227200
&T1      SETC  '&OWNER_DATA'(2,K'&OWNER_DATA-2)                         00227300
&T1      SETC  '0(&T1.)'                                                00227400
.OWNER_DATARS ANOP                                                      00227500
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00227600
         L     1,&T1                   COPY OWNER_DATA VIA L,ST         00227700
         ST    1,PB_OWNER_DATA                                          00227800
.ENDOWNER_DATA ANOP                                                     00227900
*                                                                       00228000
*                                                                       00228100
         AIF   ('&XDISPTYPE' NE 'TCB').ENDTCB                           00228200
&T1      SETC  '&TCB'                                                   00228300
         AIF   ('&TCB'(1,1) NE '(').TCBRS                               00228400
&T1      SETC  '&TCB'(2,K'&TCB-2)                                       00228500
.*    &T1      SETC  '0(&T1.)'       OLD NON-OPTIMIZED CODE DID LA,ST   00228600
         ST    &T1,PB_DU                                                00228700
         AGO   .ENDDISPTYPE                                             00228800
.TCBRS ANOP                                                             00228900
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00229000
         LA    0,&T1                   COPY TCB ADDRESS VIA LA,ST       00229100
         ST    0,PB_DU                                                  00229200
         AGO   .ENDDISPTYPE                                             00229300
.ENDTCB    ANOP                                                         00229400
&T1      SETC  'PB_SRB_SAMEDU_&XSAMEDU'                                 00229500
         LA    0,&T1                   INDICATE SRB MODE,SAMEDU VALUE   00229600
         ST    0,PB_DU                                                  00229700
.ENDDISPTYPE   ANOP                                                     00229800
*                                                                       00229900
         L     1,X'224'(0,0)           COPY PSAAOLD VIA L,ST            00230000
         ST    1,PB_DU_ASCB                                             00230100
*                                                                       00230200
&T1      SETC  '&PARENTMONTKN'                                          00230300
         AIF   ('&PARENTMONTKN'(1,1) NE '(').PARENTMONTKNRS             00230400
&T1      SETC  '&PARENTMONTKN'(2,K'&PARENTMONTKN-2)                     00230500
&T1      SETC  '0(&T1.)'                                                00230600
.PARENTMONTKNRS ANOP                                                    00230700
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00230800
         ICM   15,15,&T1               COPY PARENT MONITORING TOKEN     00230900
         BNZ   PAR_EXISTS&SYSNDX       BRANCH IF PARENT ENV EXISTS      00231000
         LH    1,X'24'(1,0)            COPY ASID FOR CURRENT HOME       00231100
         STH   1,PB_PARENT_HOME_ASID                                    00231200
         LA    0,IWMRSNCODENOPARENV    SET REASON CODE = NO PARENT ENV  00231300
         LA    15,IWMRETCODEWARNING    SET WARNING RETURN CODE          00231400
         B     SETRELATE&SYSNDX        BRANCH TO SET STATE TO RELATE    00231500
PAR_EXISTS&SYSNDX DS    0H             BRANCH LABEL FOR PAR ENV EXISTS  00231600
.*                                                                      00231700
.*                                                                      00231800
         LCLC  &SACTO2                                                  00231900
         LCLC  &SACBACK1                                                00232000
         LCLC  &SACBACK2                                                00232100
&SACBACK1 SETC  'DS'                                                    00232200
&SACBACK2 SETC  '0H'                                                    00232300
.*                                                                      00232400
         AIF   ('&XPARENTENV' NE 'NOSWITCH').NOSWITCHEND                00232500
.*                                                                      00232600
.*   THE FOLLOWING CODE HANDLES                                         00232700
.*   ===========================>    PARENTENV(PRIMARY)                 00232800
.*                                                                      00232900
         CLC   PB_ID-PB(4,15),=CL4'PB  '                                00233000
         AGO   .COMMONCONT1                                             00233100
.*                                                                      00233200
.NOSWITCHEND ANOP                                                       00233300
.*   THE FOLLOWING CODE HANDLES                                         00233400
.*   ===========================>    PARENTENV(SECONDARY!HOME)          00233500
.*                                                                      00233600
         AIF   ('&XPARENTENV' NE 'SECONDARY').HOMESWITCH                00233700
&SACTO2 SETC  '256'                                                     00233800
         AGO   .HOMESWITCHEND                                           00233900
.HOMESWITCH ANOP                                                        00234000
&SACTO2 SETC  '768'                                                     00234100
.HOMESWITCHEND ANOP                                                     00234200
.*                                                                      00234300
&SACBACK1 SETC  'SAC'                                                   00234400
&SACBACK2 SETC  '0'                                                     00234500
.*                                                                      00234600
.*       THE PB ACRONYM, REFERENCED AS A LITERAL, RESIDES IN CURRENT    00234700
.*         PRIMARY, AND MUST BE LOADED BEFORE CHANGING ASC MODE         00234800
.*                                                                      00234900
         L     0,=CL4'PB  '                                             00235000
         SAC   &SACTO2                                                  00235100
         CL    0,PB_ID-PB(0,15)                                         00235200
.*                                                                      00235300
.*             COMMON CODE FOR SHORT-FORM/MINIMAL VERIFICATION          00235400
.*                                                                      00235500
.COMMONCONT1 ANOP                                                       00235600
         BE    PARENVRO&SYSNDX         BRANCH WHEN PARENT ENV PASSES    00235700
         &SACBACK1 &SACBACK2                                            00235800
         LA    0,IWMRSNCODEBADPARENV   SET REASON CODE = BAD PAR ENV    00235900
         LA    15,IWMRETCODEINVOCERROR SET INVOCATION ERROR RETURN CODE 00236000
         B     END&SYSNDX              BRANCH TO END LABEL              00236100
PARENVRO&SYSNDX DS    0H               BRANCH LABEL FOR      @WLMPPBS   00236200
         TM    PB_FLAGS-PB(15),PB_REPORT_ONLY                @WLMPPBS   00236300
.*                                       REPORT ONLY CHECK   @WLMPPBS   00236400
         BC    8,PARENVBP&SYSNDX         BRANCH WHEN NOT RO  @WLLMPDBM  00236500
         LA    0,IWMRSNCODEROPARENV    SET REASON CODE = RO  @WLMPPBS   00236600
         LA    15,IWMRETCODEINVOCERROR SET INVOCATION ERROR  @WLMPPBS   00236700
         B     END&SYSNDX              BRANCH TO END LABEL   @WLMPPBS   00236800
PARENVBP&SYSNDX DS    0H               BRANCH LABEL FOR      @WLMPDBM   00236900
         TM    PB_FLAGS-PB(15),PB_BPMGMT_ONLY                @WLMPDBM   00237000
.*                                     BPMGMT ONLY CHECK     @WLMPDBM   00237100
         BC    8,PARENVOK&SYSNDX     BRANCH WHEN NOT BPMGMTO @WLMPDBM   00237200
         LA    0,IWMRSNCODEBPPARENV    SET REASON CODE = BP  @WLMPDBM   00237300
         LA    15,IWMRETCODEINVOCERROR SET INVOCATION ERROR  @WLMPDBM   00237400
         B     END&SYSNDX              BRANCH TO END LABEL   @WLMPDBM   00237500
PARENVOK&SYSNDX DS    0H               BRANCH LABEL FOR MON ENV OK      00237600
         L     0,PB_MIRROR_TKN-PB(15,0)  FETCH PARENT MIRROR TOKEN      00237700
         &SACBACK1 &SACBACK2                                            00237800
         ST    0,PB_PARENT_MIRROR_TKN    COPY PARENT MIRROR TOKEN       00237900
         ST    15,PB_PARENT_MONTKN                                      00238000
*                                                                       00238100
         LA    15,IWMRETCODEOK           SET RETURN CODE = OK           00238200
SETRELATE&SYSNDX DS   0H                BRANCH LABEL FOR RELATE TO HOME 00238300
         OI    PB_WORKDEF,PB_RELATE     SET RELATE                      00238400
         AGO   .ENDINLINE                                               00238500
.ENDCREATE  ANOP                                                        00238600
.*                                                                      00238700
.* THE FOLLOWING CODE HANDLES FUNCTION(DELETE)                          00238800
.*                                                                      00238900
         NI    PB_WORKDEF,X'FF'-PB_RELATE     RESET RELATE              00239000
         SLR   15,15                           SET RETURN CODE = OK     00239100
         ST    15,PB_PARENT_MONTKN                                      00239200
         ST    15,PB_PARENT_MIRROR_TKN                                  00239300
.ENDINLINE ANOP                                                         00239400
.*                                                                      00239500
.* THE FOLLOWING CODE HANDLES EWLM REPORTING.         @WLMPERS          00239600
.* IN CASE OF CREATE:                                                   00239700
.*   -THE MONTKN PB CAN BE HOME RELATED. IF SO, WE WILL DO NOTHING.     00239800
.*   -IF THE MONTKN PB IS NOT HOME RELATED, THE MONTKN PB AND THE       00239900
.*    PARENT PB ARE CHECKED ALREADY AND ARE VALID. WE DO NOT HAVE TO    00240000
.*    CHECK THIS AGAIN.                                                 00240100
.*                                                                      00240200
*                                                                       00240300
*   BEGIN EWLM REPORT SUPPORT                                           00240400
*                                                                       00240500
         CLI   PB_VERSION,PB_VERSION6                                   00240600
         BL    ENDRPTEWLM&SYSNDX    BRANCH IF EWLM IS NOT SUPPORTED(<6) 00240700
         AIF   ('&XFUNCTION' EQ 'DELETE').FKTDELETE                     00240800
         ICM   1,15,PB_PARENT_MONTKN  EXTRACT PARENT MONITORING TOKEN   00240900
.*  A MONITOR TOKEN HAS HIGH ORDER BIT ON, I.E. <0                      00241000
         BH    ENDRPTEWLM&SYSNDX    BRANCH IF RELATED TO HOME SPACE(>0) 00241100
         MVI   PB_EWLM_REQUEST,PB_EWLM_REQUEST_RELA_CREATE_&XPARENTENV  00241200
         AGO   .RPTEWLM1                                                00241300
.FKTDELETE     ANOP                                                     00241400
         MVI   PB_EWLM_REQUEST,PB_EWLM_REQUEST_RELA_DELETE              00241500
.RPTEWLM1      ANOP                                                     00241600
         LR    1,14                 GPR1  -> PB                         00241700
         L     14,16(0,0)           GET CVT ADDRESS                     00241800
         L     14,X'8C'(14,0)       GET ECVT ADDRESS                    00241900
         L     14,X'C4'(14,0)       GET WMVT ADDRESS                    00242000
         L     15,X'140'(14,0)      GET RELA EWLM SERVICE ENTRY ADDR    00242100
         BASR  14,15                CALL RELA EWLM SERVICE ROUTINE      00242200
         LR    14,1                 GPR14 -> PB                         00242300
ENDRPTEWLM&SYSNDX DS  0H            BRANCH LABEL FOR EWLM NOT SUPPORTED 00242400
*                                                                       00242500
*   END EWLM REPORT SUPPORT                                             00242600
*                                                                       00242700
.*                                                                      00242800
.* END EWLM Reporting                                 @WLMPERS          00242900
.*                                                                      00243000
         DROP  14                                                       00243100
END&SYSNDX DS    0H                    END LABEL                        00243200
.*******************************************************************    00243300
.***        RETURN CODE PROCESSING                                      00243400
.*******************************************************************    00243500
         AIF   (N'&RETCODE LE 0).IWMMRELA_ENDRC_EXP                     00243600
         AIF   ('&XRETCODE'(1,1) EQ '(').IWMMRELA_RC_REG                00243700
         AIF   ('&XRETCODE' EQ 'GPR15').IWMMRELA_ENDRC_EXP              00243800
         AIF   ('&XRETCODE' EQ 'REG15').IWMMRELA_ENDRC_EXP              00243900
         AIF   ('&XRETCODE' EQ 'R15').IWMMRELA_ENDRC_EXP                00244000
         AIF   ('&XRETCODE' EQ '15').IWMMRELA_ENDRC_EXP                 00244100
         ST    15,&XRETCODE                                             00244200
         AGO   .IWMMRELA_ENDRC_EXP                                      00244300
.*                                                                      00244400
.IWMMRELA_RC_REG      ANOP  ,                                           00244500
&T1      SETC  '&XRETCODE'(2,K'&XRETCODE-2)                             00244600
         AIF   ('&T1' EQ 'GPR15').IWMMRELA_ENDRC_EXP                    00244700
         AIF   ('&T1' EQ 'REG15').IWMMRELA_ENDRC_EXP                    00244800
         AIF   ('&T1' EQ 'R15').IWMMRELA_ENDRC_EXP                      00244900
         AIF   ('&T1' EQ '15').IWMMRELA_ENDRC_EXP                       00245000
         LR    &T1,15                                                   00245100
.IWMMRELA_ENDRC_EXP   ANOP  ,                                           00245200
.*******************************************************************    00245300
.***        REASON CODE PROCESSING                                      00245400
.*******************************************************************    00245500
         AIF   (N'&RSNCODE LE 0).IWMMRELA_ENDRSN_EXP                    00245600
         AIF   ('&XRSNCODE'(1,1) EQ '(').IWMMRELA_RSN_REG               00245700
         AIF   ('&XRSNCODE' EQ 'GPR0').IWMMRELA_ENDRSN_EXP              00245800
         AIF   ('&XRSNCODE' EQ 'GPR00').IWMMRELA_ENDRSN_EXP             00245900
         AIF   ('&XRSNCODE' EQ 'REG0').IWMMRELA_ENDRSN_EXP              00246000
         AIF   ('&XRSNCODE' EQ 'REG00').IWMMRELA_ENDRSN_EXP             00246100
         AIF   ('&XRSNCODE' EQ 'R0').IWMMRELA_ENDRSN_EXP                00246200
         AIF   ('&XRSNCODE' EQ '0').IWMMRELA_ENDRSN_EXP                 00246300
         AIF   ('&XRSNCODE' EQ '00').IWMMRELA_ENDRSN_EXP                00246400
         ST    0,&XRSNCODE                                              00246500
         AGO   .IWMMRELA_ENDRSN_EXP                                     00246600
.*                                                                      00246700
.IWMMRELA_RSN_REG     ANOP  ,                                           00246800
&T1      SETC '&XRSNCODE'(2,K'&XRSNCODE-2)                              00246900
         AIF  ('&ZCGPR' EQ 'GPR0').IWMMRELA_ENDRSN_EXP                  00247000
         AIF  ('&ZCGPR' EQ 'GPR00').IWMMRELA_ENDRSN_EXP                 00247100
         AIF  ('&ZCGPR' EQ 'REG0').IWMMRELA_ENDRSN_EXP                  00247200
         AIF  ('&ZCGPR' EQ 'REG00').IWMMRELA_ENDRSN_EXP                 00247300
         AIF  ('&ZCGPR' EQ 'R0').IWMMRELA_ENDRSN_EXP                    00247400
         AIF  ('&ZCGPR' EQ '0').IWMMRELA_ENDRSN_EXP                     00247500
         AIF  ('&ZCGPR' EQ '00').IWMMRELA_ENDRSN_EXP                    00247600
         LR   &T1,0                                                     00247700
.IWMMRELA_ENDRSN_EXP  ANOP  ,                                           00247800
.*******************************************************************    00247900
&ZIWMMRELA            SETC  'YES'          SET IWMMRELA USED            00248000
         POP   PRINT                                                    00248100
*                                            IWMMRELA END               00248200
         SPACE 1                                                        00248300
         MEXIT                                                          00248400
.NOCODENEEDED ANOP                                                      00248500
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00248600
.********************************************************************   00248700
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00248800
.********************************************************************   00248900
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00249000
                      LCLA  &ZOPN1         INVOCATION INDEX             00249100
                      LCLC  &ZOPL(4095)    LABEL                        00249200
                      LCLC  &ZOPO(4095)    OPERATION                    00249300
                      LCLC  &ZOPV(4095)    VALUE                        00249400
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00249500
.*                                                                      00249600
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00249700
.******************************************************************     00249800
.***AL.L10 IWMMRELA FMT=LIST MF=S!L PARAMETERS                          00249900
.******************************************************************     00250000
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00250100
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00250200
&XMFCTRL              SETC  '#Z'.'&SYSNDX'.'A'                          00250300
&XMFATTR              SETC  '0D'                                        00250400
.*                                                                      00250500
&ZOPN                 SETA  &ZOPN+1                                     00250600
&ZOPL(&ZOPN)          SETC  ' '                                         00250700
                      AIF   (&SYSALVL NE 0).ZALVL6A                     00250800
&ZOPO(&ZOPN)          SETC  'B'                                         00250900
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00251000
                      AGO   .ZALVL6B                                    00251100
.ZALVL6A              ANOP                                              00251200
&ZOPO(&ZOPN)          SETC  'CNOP'                                      00251300
&ZOPV(&ZOPN)          SETC  '4,8'                                       00251400
&ZOPN                 SETA  &ZOPN+1                                     00251500
&ZOPL(&ZOPN)          SETC  ' '                                         00251600
&ZOPO(&ZOPN)          SETC  'BRAS'                                      00251700
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              00251800
.ZALVL6B              ANOP                                              00251900
&ZOPD(&ZOPN)          SETC  '++ IWMMRELA ARG PARMS'                     00252000
.*                                                                      00252100
&ZOPN                 SETA  &ZOPN+1                                     00252200
&ZOPL(&ZOPN)          SETC  ' '                                         00252300
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00252400
&ZOPV(&ZOPN)          SETC  '1'                                         00252500
&ZOPD(&ZOPN)          SETC  ' '                                         00252600
.*                                                                      00252700
.ZLMFSL2              ANOP  ,                                           00252800
.*-------------------------------------------------------------------   00252900
.***AM.L00  IWMMRELA FMT=LIST name                                      00253000
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00253100
&ZOPN                 SETA &ZOPN+1                                      00253200
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00253300
&ZOPO(&ZOPN)          SETC 'EQU'                                        00253400
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00253500
&ZOPD(&ZOPN)          SETC '++ IWMMRELA NAME'                           00253600
.ZLMFSL2M             ANOP  ,                                           00253700
.*-------------------------------------------------------------------   00253800
.***AM.L01  IWMMRELA FMT=LIST PARAMETERS                                00253900
&ZOPN                 SETA &ZOPN+1                                      00254000
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00254100
&ZOPO(&ZOPN)          SETC 'DS'                                         00254200
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00254300
&ZOPD(&ZOPN)          SETC '++ IWMMRELA PARM LIST'                      00254400
.*-------------------------------------------------------------------   00254500
.***AM.L02 XVERSION XL1                                                 00254600
&ZOPN                 SETA &ZOPN+1                                      00254700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00254800
&ZOPO(&ZOPN)          SETC 'DS'                                         00254900
&ZOPV(&ZOPN)          SETC 'XL1'                                        00255000
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00255100
.*-------------------------------------------------------------------   00255200
.***AM.L03 XRELATE_OPTIONS BL.8                                         00255300
&ZOPN                 SETA &ZOPN+1                                      00255400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRELATE_OPTIONS'                  00255500
&ZOPO(&ZOPN)          SETC 'DS'                                         00255600
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00255700
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00255800
.*                                                                      00255900
&ZOPN                 SETA  &ZOPN+1                                     00256000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XDISPTYPE_TCB'                   00256100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00256200
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00256300
&ZOPD(&ZOPN)          SETC  '++ XDISPTYPE.'                             00256400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).TCB'                          00256500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00256600
.*                                                                      00256700
&ZOPN                 SETA  &ZOPN+1                                     00256800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XDISPTYPE_SRB'                   00256900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00257000
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00257100
&ZOPD(&ZOPN)          SETC  '++ XDISPTYPE.'                             00257200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SRB'                          00257300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00257400
.*                                                                      00257500
&ZOPN                 SETA  &ZOPN+1                                     00257600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSAMEDU_YES'                     00257700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00257800
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             00257900
&ZOPD(&ZOPN)          SETC  '++ XSAMEDU.'                               00258000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00258100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00258200
.*                                                                      00258300
&ZOPN                 SETA  &ZOPN+1                                     00258400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XPARENTP_FINDACTIVE'             00258500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00258600
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             00258700
&ZOPD(&ZOPN)          SETC  '++ XPARENTP.'                              00258800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).FINDACTIVE'                   00258900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00259000
.*-------------------------------------------------------------------   00259100
.***AM.L09  XRSV0002 CL2                                                00259200
&ZOPN                 SETA &ZOPN+1                                      00259300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0002'                         00259400
&ZOPO(&ZOPN)          SETC 'DS'                                         00259500
&ZOPV(&ZOPN)          SETC 'CL2'                                        00259600
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00259700
.*-------------------------------------------------------------------   00259800
.***AM.L09  XOWNER_DATA BL.32                                           00259900
&ZOPN                 SETA &ZOPN+1                                      00260000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XOWNER_DATA'                      00260100
&ZOPO(&ZOPN)          SETC 'DS'                                         00260200
&ZOPV(&ZOPN)          SETC 'BL.32'                                      00260300
&ZOPD(&ZOPN)          SETC '++ &ZXOWNER_DATA '                          00260400
.*-------------------------------------------------------------------   00260500
.***AM.L09  XOWNER_TOKEN BL.32                                          00260600
&ZOPN                 SETA &ZOPN+1                                      00260700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XOWNER_TOKEN'                     00260800
&ZOPO(&ZOPN)          SETC 'DS'                                         00260900
&ZOPV(&ZOPN)          SETC 'BL.32'                                      00261000
&ZOPD(&ZOPN)          SETC '++ &ZXOWNER_TOKEN '                         00261100
.*-------------------------------------------------------------------   00261200
.***AM.L09 ADDR XTCB A                                                  00261300
&ZOPN                 SETA &ZOPN+1                                      00261400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XTCB_ADDR'                        00261500
&ZOPO(&ZOPN)          SETC 'DS'                                         00261600
&ZOPV(&ZOPN)          SETC 'A'                                          00261700
&ZOPD(&ZOPN)          SETC '++ &ZXTCB ADDR'                             00261800
.*-------------------------------------------------------------------   00261900
.***AM.L09 ADDR XPARENTTCB A                                            00262000
&ZOPN                 SETA &ZOPN+1                                      00262100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPARENTTCB_ADDR'                  00262200
&ZOPO(&ZOPN)          SETC 'DS'                                         00262300
&ZOPV(&ZOPN)          SETC 'A'                                          00262400
&ZOPD(&ZOPN)          SETC '++ &ZXPARENTTCB ADDR'                       00262500
.*-------------------------------------------------------------------   00262600
.***AM.L09  XMONTKN BL.32                                               00262700
&ZOPN                 SETA &ZOPN+1                                      00262800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMONTKN'                          00262900
&ZOPO(&ZOPN)          SETC 'DS'                                         00263000
&ZOPV(&ZOPN)          SETC 'BL.32'                                      00263100
&ZOPD(&ZOPN)          SETC '++ &ZXMONTKN '                              00263200
.*-------------------------------------------------------------------   00263300
.***AM.L09  XRSV0018 CL4                                                00263400
&ZOPN                 SETA &ZOPN+1                                      00263500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0018'                         00263600
&ZOPO(&ZOPN)          SETC 'DS'                                         00263700
&ZOPV(&ZOPN)          SETC 'CL4'                                        00263800
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00263900
.*-------------------------------------------------------------------   00264000
.***AM.L10 END OF IWMMRELA LIST PARAMETERS                              00264100
&ZOPN                 SETA &ZOPN+1                                      00264200
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00264300
&ZOPO(&ZOPN)          SETC 'EQU'                                        00264400
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00264500
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00264600
.*                                                                      00264700
&ZOPN                 SETA &ZOPN+1                                      00264800
&ZOPL(&ZOPN)          SETC ' '                                          00264900
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00265000
&ZOPV(&ZOPN)          SETC '1'                                          00265100
&ZOPD(&ZOPN)          SETC ' '                                          00265200
.*-------------------------------------------------------------------   00265300
.***AL.L12 IWMMRELA FMT=LIST MF=S!L PARAMETERS                          00265400
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00265500
.*                                                                      00265600
&ZOPN                 SETA  &ZOPN+1                                     00265700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00265800
&ZOPO(&ZOPN)          SETC  'DC'                                        00265900
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00266000
&ZOPD(&ZOPN)          SETC  '++ IWMMRELA ARG PARMS'                     00266100
.*                                                                      00266200
.ZLMFSLX              ANOP  ,                                           00266300
.*-------------------------------------------------------------------   00266400
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00266500
&ZPLLEN               SETA 28                                           00266600
.*                                                                      00266700
.******************************************************************     00266800
.***AI.L01 IWMMRELA FMT=LIST FILL IN PARAMETER AREA                     00266900
.******************************************************************     00267000
                      ACTR  10000                                       00267100
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00267200
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00267300
&ZCVAL                SETC  'LAE'          XAX MODE                     00267400
.ZIMFXA               ANOP ,                                            00267500
.*                                                                      00267600
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00267700
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00267800
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00267900
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00268000
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00268100
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00268200
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00268300
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00268400
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00268500
&ZOPN                 SETA  &ZOPN+1                                     00268600
&ZOPL(&ZOPN)          SETC  ' '                                         00268700
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00268800
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00268900
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00269000
                      AGO   .ZIMFNX                                     00269100
.*                                                                      00269200
.ZIMFN2               ANOP ,                                            00269300
                      AIF   (&SYSALVL EQ 0).ZIMFNX1                     00269400
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     00269500
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  00269600
&ZOPN                 SETA  &ZOPN+1                                     00269700
&ZOPL(&ZOPN)          SETC  ' '                                         00269800
&ZOPO(&ZOPN)          SETC  'LAE'                                       00269900
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  00270000
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00270100
                      AGO   .ZIMFNX                                     00270200
.ZIMFNX1              ANOP ,                                            00270300
&ZOPN                 SETA  &ZOPN+1                                     00270400
&ZOPL(&ZOPN)          SETC  ' '                                         00270500
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00270600
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00270700
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00270800
.ZIMFNX               ANOP ,                                            00270900
.********************************************************************   00271000
.***AI.L02 IWMMRELA FMT=LIST INITIALIZE PARAMETER AREA                  00271100
.********************************************************************   00271200
.***AI.L03 MF=(SLE)                                                     00271300
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00271400
.*                                                                      00271500
&ZOPN                 SETA  &ZOPN+1                                     00271600
&ZOPL(&ZOPN)          SETC  ' '                                         00271700
&ZOPO(&ZOPN)          SETC  'XC'                                        00271800
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00271900
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00272000
.ZIMFLX               ANOP  ,                                           00272100
.*-------------------------------------------------------------------   00272200
.***AI.L05 XRELATE_OPTIONS BL1                                          00272300
&ZW                   SETC  ''                                          00272400
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00272500
.*-------------------------------------------------------------------   00272600
.***AI.L08 XRELATE_OPTIONS "TCB"                                        00272700
.***      BL1'1XXXXXXX'                                                 00272800
         AIF   ('&XDISPTYPE' NE 'TCB').ZI3A                             00272900
&ZW                   SETC  '&ZW.1'                                     00273000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00273100
                      AGO   .ZI3C                                       00273200
.*                                                                      00273300
.ZI3A                 ANOP  ,                                           00273400
&ZW                   SETC  '&ZW.0'                                     00273500
.ZI3C                 ANOP  ,                                           00273600
.*-------------------------------------------------------------------   00273700
.***AI.L08 XRELATE_OPTIONS "SRB"                                        00273800
.***      BL1'X1XXXXXX'                                                 00273900
         AIF   ('&XDISPTYPE' NE 'SRB').ZI4A                             00274000
&ZW                   SETC  '&ZW.1'                                     00274100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00274200
                      AGO   .ZI4C                                       00274300
.*                                                                      00274400
.ZI4A                 ANOP  ,                                           00274500
&ZW                   SETC  '&ZW.0'                                     00274600
.ZI4C                 ANOP  ,                                           00274700
.*-------------------------------------------------------------------   00274800
.***AI.L08 XRELATE_OPTIONS "YES"                                        00274900
.***      BL1'XX1XXXXX'                                                 00275000
         AIF   ('&XSAMEDU' NE 'YES').ZI5A                               00275100
&ZW                   SETC  '&ZW.1'                                     00275200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00275300
                      AGO   .ZI5C                                       00275400
.*                                                                      00275500
.ZI5A                 ANOP  ,                                           00275600
&ZW                   SETC  '&ZW.0'                                     00275700
.ZI5C                 ANOP  ,                                           00275800
.*-------------------------------------------------------------------   00275900
.***AI.L08 XRELATE_OPTIONS "FINDACTIVE"                                 00276000
.***      BL1'XXX1XXXX'                                                 00276100
         AIF   ('&XPARENTP' NE 'FINDACTIVE').ZI6A                       00276200
&ZW                   SETC  '&ZW.10000'                                 00276300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00276400
                      AGO   .ZI6C                                       00276500
.*                                                                      00276600
.ZI6A                 ANOP  ,                                           00276700
&ZW                   SETC  '&ZW.00000'                                 00276800
.ZI6C                 ANOP  ,                                           00276900
.*-------------------------------------------------------------------   00277000
.***AI.L11 XRELATE_OPTIONS BL1                                          00277100
                      AIF   ('&ZCLNG' NE 'YES').ZI6E  ALL ZERO BITS     00277200
&ZOPN                 SETA  &ZOPN+1                                     00277300
&ZOPL(&ZOPN)          SETC  ' '                                         00277400
&ZOPO(&ZOPN)          SETC  'OI'                                        00277500
&ZOPV(&ZOPN)          SETC  '1(1),B''&ZW'''                             00277600
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00277700
.ZI6E                 ANOP  ,                                           00277800
.*-------------------------------------------------------------------   00277900
.***AI.L18  XOWNER_DATA XL4                                             00278000
         AIF   ('&XOWNER_DATA' NE 'NO_OWNER_DATA').ZI8                  00278100
&ZXOWNER_DATA         SETC  ''             RESET INPUT/OUTPUT           00278200
.ZI8                  ANOP  ,                                           00278300
.*-------------------------------------------------------------------   00278400
.***AI.L25  XOWNER_DATA XL4                                             00278500
                      AIF   ('&ZXOWNER_DATA' EQ '').ZI8E                00278600
                      AIF   ('&ZXOWNER_DATA' EQ 'OUTPUT').ZI8E          00278700
&ZCGPR                SETC  '&XOWNER_DATA'                              00278800
.*                                                                      00278900
                      AIF   ('&XOWNER_DATA'(1,1) NE '(').ZI8B           00279000
&ZCGPR   SETC  '0('.'&XOWNER_DATA'(2,K'&XOWNER_DATA-2).')'              00279100
                      AGO   .ZI8D                                       00279200
.ZI8B                 ANOP  ,                                           00279300
.*                                                                      00279400
&ZC                   SETC  '&XOWNER_DATA'(1,1)                         00279500
                      AIF   (T'&ZC NE 'N').ZI8D                         00279600
&ZC                   SETC  '&XOWNER_DATA'                              00279700
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI8D                00279800
&ZCGPR                SETC  '=BL4''&XOWNER_DATA'''                      00279900
.*                                                                      00280000
.ZI8D                 ANOP  ,                                           00280100
.*                                                                      00280200
&ZOPN                 SETA  &ZOPN+1                                     00280300
&ZOPL(&ZOPN)          SETC  ' '                                         00280400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00280500
&ZOPV(&ZOPN)          SETC  '4(4,1),&ZCGPR'                             00280600
&ZOPD(&ZOPN)          SETC  '++ &ZXOWNER_DATA XOWNER_DATA'              00280700
.*                                                                      00280800
.ZI8E                 ANOP  ,                                           00280900
.*-------------------------------------------------------------------   00281000
.***AI.L18  XOWNER_TOKEN XL4                                            00281100
         AIF   ('&XOWNER_TOKEN' NE 'NO_OWNER_TOKEN').ZI9                00281200
&ZXOWNER_TOKEN        SETC  ''             RESET INPUT/OUTPUT           00281300
.ZI9                  ANOP  ,                                           00281400
.*-------------------------------------------------------------------   00281500
.***AI.L25  XOWNER_TOKEN XL4                                            00281600
                      AIF   ('&ZXOWNER_TOKEN' EQ '').ZI9E               00281700
                      AIF   ('&ZXOWNER_TOKEN' EQ 'OUTPUT').ZI9E         00281800
&ZCGPR                SETC  '&XOWNER_TOKEN'                             00281900
.*                                                                      00282000
                      AIF   ('&XOWNER_TOKEN'(1,1) NE '(').ZI9B          00282100
&ZCGPR   SETC  '0('.'&XOWNER_TOKEN'(2,K'&XOWNER_TOKEN-2).')'            00282200
                      AGO   .ZI9D                                       00282300
.ZI9B                 ANOP  ,                                           00282400
.*                                                                      00282500
&ZC                   SETC  '&XOWNER_TOKEN'(1,1)                        00282600
                      AIF   (T'&ZC NE 'N').ZI9D                         00282700
&ZC                   SETC  '&XOWNER_TOKEN'                             00282800
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI9D                00282900
&ZCGPR                SETC  '=BL4''&XOWNER_TOKEN'''                     00283000
.*                                                                      00283100
.ZI9D                 ANOP  ,                                           00283200
.*                                                                      00283300
&ZOPN                 SETA  &ZOPN+1                                     00283400
&ZOPL(&ZOPN)          SETC  ' '                                         00283500
&ZOPO(&ZOPN)          SETC  'MVC'                                       00283600
&ZOPV(&ZOPN)          SETC  '8(4,1),&ZCGPR'                             00283700
&ZOPD(&ZOPN)          SETC  '++ &ZXOWNER_TOKEN XOWNER_TOKEN'            00283800
.*                                                                      00283900
.ZI9E                 ANOP  ,                                           00284000
.*-------------------------------------------------------------------   00284100
.***AI.L19 ADDR XTCB A                                                  00284200
                      AIF   ('&ZXTCB' EQ '').ZI10H                      00284300
&ZCLNG                SETC  '&XTCB'                                     00284400
&ZCGPR                SETC  '14'                                        00284500
         AIF   ('&XTCB'(1,1) EQ '(').ZI10F  IN GPR                      00284600
.*                                                                      00284700
&ZOPN                 SETA  &ZOPN+1                                     00284800
&ZOPL(&ZOPN)          SETC  ' '                                         00284900
&ZOPO(&ZOPN)          SETC  'LA'                                        00285000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00285100
&ZOPD(&ZOPN)          SETC  '++ &ZXTCB XTCB'                            00285200
.*                                                                      00285300
                      AGO   .ZI10G                                      00285400
.*                                                                      00285500
.ZI10F                ANOP  ,                                           00285600
&ZCGPR   SETC  '&XTCB'(2,K'&XTCB-2)                                     00285700
.*                                                                      00285800
.ZI10G                ANOP  ,                                           00285900
.*                                                                      00286000
&ZOPN                 SETA  &ZOPN+1                                     00286100
&ZOPL(&ZOPN)          SETC  ' '                                         00286200
&ZOPO(&ZOPN)          SETC  'ST'                                        00286300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,12(,1)'                             00286400
&ZOPD(&ZOPN)          SETC  '++ &ZXTCB XTCB'                            00286500
.*                                                                      00286600
.ZI10H                ANOP  ,                                           00286700
.*-------------------------------------------------------------------   00286800
.***AI.L19 ADDR XPARENTTCB A                                            00286900
                      AIF   ('&ZXPARENTTCB' EQ '').ZI11H                00287000
&ZCLNG                SETC  '&XPARENTTCB'                               00287100
&ZCGPR                SETC  '14'                                        00287200
         AIF   ('&XPARENTTCB'(1,1) EQ '(').ZI11F  IN GPR                00287300
.*                                                                      00287400
&ZOPN                 SETA  &ZOPN+1                                     00287500
&ZOPL(&ZOPN)          SETC  ' '                                         00287600
&ZOPO(&ZOPN)          SETC  'LA'                                        00287700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00287800
&ZOPD(&ZOPN)          SETC  '++ &ZXPARENTTCB XPARENTTCB'                00287900
.*                                                                      00288000
                      AGO   .ZI11G                                      00288100
.*                                                                      00288200
.ZI11F                ANOP  ,                                           00288300
&ZCGPR   SETC  '&XPARENTTCB'(2,K'&XPARENTTCB-2)                         00288400
.*                                                                      00288500
.ZI11G                ANOP  ,                                           00288600
.*                                                                      00288700
&ZOPN                 SETA  &ZOPN+1                                     00288800
&ZOPL(&ZOPN)          SETC  ' '                                         00288900
&ZOPO(&ZOPN)          SETC  'ST'                                        00289000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,16(,1)'                             00289100
&ZOPD(&ZOPN)          SETC  '++ &ZXPARENTTCB XPARENTTCB'                00289200
.*                                                                      00289300
.ZI11H                ANOP  ,                                           00289400
.*-------------------------------------------------------------------   00289500
.***AI.L25  XMONTKN XL4                                                 00289600
                      AIF   ('&ZXMONTKN' EQ '').ZI12E                   00289700
                      AIF   ('&ZXMONTKN' EQ 'OUTPUT').ZI12E             00289800
&ZCGPR                SETC  '&XMONTKN'                                  00289900
.*                                                                      00290000
                      AIF   ('&XMONTKN'(1,1) NE '(').ZI12B              00290100
&ZCGPR   SETC  '0('.'&XMONTKN'(2,K'&XMONTKN-2).')'                      00290200
                      AGO   .ZI12D                                      00290300
.ZI12B                ANOP  ,                                           00290400
.*                                                                      00290500
&ZC                   SETC  '&XMONTKN'(1,1)                             00290600
                      AIF   (T'&ZC NE 'N').ZI12D                        00290700
&ZC                   SETC  '&XMONTKN'                                  00290800
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI12D               00290900
&ZCGPR                SETC  '=BL4''&XMONTKN'''                          00291000
.*                                                                      00291100
.ZI12D                ANOP  ,                                           00291200
.*                                                                      00291300
&ZOPN                 SETA  &ZOPN+1                                     00291400
&ZOPL(&ZOPN)          SETC  ' '                                         00291500
&ZOPO(&ZOPN)          SETC  'MVC'                                       00291600
&ZOPV(&ZOPN)          SETC  '20(4,1),&ZCGPR'                            00291700
&ZOPD(&ZOPN)          SETC  '++ &ZXMONTKN XMONTKN'                      00291800
.*                                                                      00291900
.ZI12E                ANOP  ,                                           00292000
.*-------------------------------------------------------------------   00292100
&ZOPN1                SETA &ZOPN                                        00292200
.*******************************************************************    00292300
.***  PROCESS IWMMRELA OUTPUT PARAMETERS                                00292400
.*******************************************************************    00292500
                      ACTR  10000                                       00292600
.*******************************************************************    00292700
.***AO.X02  RETURN CODE PROCESSING                                      00292800
.*******************************************************************    00292900
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00293000
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00293100
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00293200
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00293300
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00293400
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00293500
&ZOPN                 SETA  &ZOPN+1                                     00293600
&ZOPL(&ZOPN)          SETC  ' '                                         00293700
&ZOPO(&ZOPN)          SETC  'ST'                                        00293800
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00293900
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00294000
                      AGO   .ZMRETX                                     00294100
.*                                                                      00294200
.ZMRET2               ANOP  ,                                           00294300
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00294400
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00294500
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00294600
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00294700
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00294800
&ZOPN                 SETA  &ZOPN+1                                     00294900
&ZOPL(&ZOPN)          SETC  ' '                                         00295000
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00295100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00295200
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00295300
.ZMRETX               ANOP  ,                                           00295400
.*******************************************************************    00295500
.***AO.X03  REASON CODE PROCESSING                                      00295600
.*******************************************************************    00295700
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00295800
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00295900
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00296000
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00296100
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00296200
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00296300
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00296400
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00296500
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00296600
&ZOPN                 SETA  &ZOPN+1                                     00296700
&ZOPL(&ZOPN)          SETC  ' '                                         00296800
&ZOPO(&ZOPN)          SETC  'ST'                                        00296900
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00297000
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00297100
                      AGO   .ZMRSNX                                     00297200
.*                                                                      00297300
.ZMRSN2               ANOP  ,                                           00297400
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00297500
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00297600
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00297700
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00297800
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00297900
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00298000
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00298100
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00298200
&ZOPN                 SETA  &ZOPN+1                                     00298300
&ZOPL(&ZOPN)          SETC  ' '                                         00298400
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00298500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00298600
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00298700
.ZMRSNX               ANOP  ,                                           00298800
.*******************************************************************    00298900
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00299000
.*******************************************************************    00299100
.ZMFLX                ANOP  ,              MF=L PROCESSING              00299200
.*******************************************************************    00299300
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00299400
.*******************************************************************    00299500
                      ACTR  10000                                       00299600
.*                                                                      00299700
                      LCLA  &ZLC           COLUMN POSITION              00299800
                      LCLA  &ZOPX          LIST TABLE INDEX             00299900
                      LCLC  &ZLL           LABEL                        00300000
                      LCLC  &ZLOP          OPERATION                    00300100
                      LCLC  &ZLV           VALUE                        00300200
                      LCLC  &ZLD           DESCRIPTION                  00300300
.*                                                                      00300400
&ZOPX                 SETA  1                                           00300500
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00300600
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00300700
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00300800
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00300900
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00301000
                      AIF   (K'&ZLD LE 0).ZL5                           00301100
&ZLC                  SETA  35             COMMENT COLUMN               00301200
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00301300
&ZLC                  SETA  33             COMMMENT COLUMN              00301400
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00301500
&ZLV                  SETC  '&ZLV'.' '                                  00301600
                      AGO   .ZL3                                        00301700
.*                                                                      00301800
.ZL4                  ANOP  ,                                           00301900
&ZLV                  SETC  '&ZLV'.' '                                  00302000
.ZL5                  ANOP  ,                                           00302100
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00302200
.*                                                                      00302300
&ZLL     &ZLOP &ZLV                                                     00302400
.*                                                                      00302500
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00302600
                      AGO   .ZL2           CONTINUE LOOPING             00302700
.*                                                                      00302800
.ZLX                  ANOP  ,                                           00302900
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00303000
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00303100
         L     14,16(0,0)              GET CVT ADDRESS                  00303200
         TM    CVTOSLV1-CVT(14),X'40'    TEST FOR WLM PRESENCE          00303300
         BO    WLM&SYSNDX              BRANCH WHEN WLM IS PRESENT       00303400
         LA    0,IWMRSNCODENOWLM       SET REASON CODE = NO WLM         00303500
         LA    15,IWMRETCODEWARNING    SET WARNING RETURN CODE          00303600
         B     END&SYSNDX              BRANCH TO END LABEL              00303700
WLM&SYSNDX DS    0H                    BRANCH LABEL FOR WLM PRESENT     00303800
         L     14,772(14,0)            GET SFT ADDRESS                  00303900
         L     14,380(14,0)            GET LX FOR SERVICE ROUTINE       00304000
         LA    15,3                    GET EX FOR SERVICE ROUTINE       00304100
         OR    14,15                   GET PC NUMBER                    00304200
         PC    0(14)                                                    00304300
END&SYSNDX DS    0H                    END LABEL                        00304400
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00304500
.ZLINKX               ANOP  ,                                           00304600
.*******************************************************************    00304700
.***AP.X01  FORMAT GENERATED CODE                                       00304800
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00304900
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00305000
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00305100
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00305200
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00305300
                      AIF   (K'&ZLD LE 0).ZL51                          00305400
&ZLC                  SETA  35             COMMENT COLUMN               00305500
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00305600
&ZLC                  SETA  33             COMMENT COLUMN               00305700
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00305800
&ZLV                  SETC  '&ZLV'.' '                                  00305900
                      AGO   .ZL31                                       00306000
.*                                                                      00306100
.ZL41                 ANOP  ,                                           00306200
&ZLV                  SETC  '&ZLV'.' '                                  00306300
.ZL51                 ANOP  ,                                           00306400
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00306500
.*                                                                      00306600
&ZLL     &ZLOP &ZLV                                                     00306700
.*                                                                      00306800
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00306900
                      AGO   .ZL21          CONTINUE LOOPING             00307000
.*                                                                      00307100
.ZLX1                 ANOP  ,                                           00307200
.*******************************************************************    00307300
.***AP.X02  END OF IWMMRELA MACRO                                       00307400
&ZIWMMRELA            SETC  'YES'          SET IWMMRELA USED            00307500
         POP   PRINT                                                    00307600
*                                            IWMMRELA-0                 00307700
         SPACE 1                                                        00307800
.ZLX2                 ANOP  ,                                           00307900
         MEND                                                           00308000
**********************************************************************/ 00308100
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00308200
*%IWMMRELA: MACRO KEYS(FUNCTION,OWNER_TOKEN,OWNER_DATA,DISPTYPE,TCB,    00308300
*                 SAMEDU,PARENTP,PARENTMONTKN,PARENTENVTKN,PARENTENV,   00308400
*                 PARENTTCB,MONTKN,RETCODE,RSNCODE,PLISTVER,MF);        00308500
*  ANS('?'!!MACLABEL!!' '!!'IWMMRELP '!!MACLIST!!                       00308600
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              00308700
*%END IWMMRELA;                                                         00308800
