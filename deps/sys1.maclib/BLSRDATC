*/* Start of Specifications for BLSRDATC *****************************/ 00200000
*/*                                                                  */ 00400000
*/* $MAC(BLSRDATC) COMP(SC132) PROD(HBB7790): Describe attributes    */ 00600004
*/*                                                                  */ 00800000
*/* PROPRIETARY STATEMENT =                                          */ 00810004
*/*                                                                  */ 00820004
*/*   5650-ZOS COPYRIGHT IBM CORP. 1984, 2013                        */ 00830004
*/*   LICENSED MATERIALS - PROPERTY OF IBM                           */ 00840004
*/*                                                                  */ 00850004
*/* STATUS = HBB7790                                                 */ 00860004
*/*                                                                  */ 00870004
*/*                                                                  */ 02400000
*/* External classification: PI                                      */ 02600000
*/* End of external classification:                                  */ 02800000
*/*                                                                  */ 03000000
*/* DESCRIPTIVE NAME: IPCS attributes                                */ 03200000
*/*   ACRONYM:  BLSRDATC                                             */ 03400000
*/*                                                                  */ 03600000
*/* MACRO NAME: BLSRDATC                                             */ 03800000
*/* DSECT NAME: DATC                                                 */ 04000000
*/* COMPONENT:  IPCS (SC132)                                         */ 04200000
*/* EYE-CATCHER: none                                                */ 04400000
*/*                                                                  */ 04600000
*/* STORAGE ATTRIBUTES:                                              */ 04800000
*/*   SUBPOOL:  Any that may be altered by key 8 programs            */ 05000000
*/*   KEY:  8                                                        */ 05200000
*/*   RESIDENCY:  LOC(ANY,ANY)                                       */ 05400000
*/*   MAIN STORAGE:  No                                              */ 05600000
*/*   AUXILIARY STORAGE:  Yes                                        */ 05800000
*/*   VIRTUAL STORAGE:  No                                           */ 06000000
*/*   DATA SPACE: No                                                 */ 06200000
*/*                                                                  */ 06400000
*/* SIZE:                                                            */ 06600000
*/*   ABITS=31:  60 bytes                                            */ 06800000
*/*   ABITS=64:  76 bytes                                            */ 07000000
*/* CREATED BY: IPCS subcommands concerned with debugging            */ 07200000
*/* POINTED TO BY: Parameter lists used by IPCS programs to describe */ 07400000
*/*   a block of storage in a dump or trace data set or a            */ 07600000
*/*   reconstruction of part of a dumped system.                     */ 07800000
*/*                                                                  */ 08000000
*/* SERIALIZATION: None                                              */ 08200000
*/*                                                                  */ 08400000
*/* FUNCTION= Define the structure of the BLSRDATC data area.  This  */ 08600000
*/* is the structure in which IPCS stores the description of the     */ 08800000
*/* extent, data type, ... of an area in a dump.                     */ 09000000
*/*                                                                  */ 09200000
*/* METHOD OF ACCESS:                                                */ 09400000
*/*   Assembler:                                                     */ 09600000
*/*     name BLSRESSY ABITS=<31!64>,  Default is 31                  */ 09800000
*/*                   DSECT=<YES!NO>  Default is YES                 */ 10000000
*/*                                                                  */ 10200000
*/*   PL/X:                                                          */ 10400000
*/*     BLSRESSY <BUFFER>             Default is no room for remark  */ 10600000
*/*              MF(LIST,name,<COMPLETE> scope-and-storage-class);   */ 10800000
*/*                                                                  */ 11000000
*/* DELETED BY: IPCS                                                 */ 11200000
*/* DEPENDENCIES: None                                               */ 11400000
*/* DISTRIBUTION LIBRARY: AMACLIB                                    */ 11600000
*/*                                                                  */ 11800000
*/* ================================================================ */ 12000000
*/*                                                                  */ 12200000
*/* CHANGE ACTIVITY=                                                 */ 12400000
*/*                                                                  */ 12600000
*/*   Products=                                                      */ 12800000
*/* $L0= MVSIPCS,EIP1102,78001,PDE1: MVS IPCS initial release code   */ 13000000
*/* $L1= SRVASADA,JBB2220,84165,PDE1: Automatic SADUMP analysis      */ 13200000
*/*    = IPCSENH,HBB3310,86158,PDE1: Suppress assembler macro in     */ 13400000
*/*      PLAS source listing                                         */ 13600000
*/* $L2= RAS,HBB7708,03007,PDE1: Support explicit data type, length  */ 13800000
*/*      and offset in ABITS=31 assembler expansion                  */ 14000000
*/* $L3= ME24482 HBB7790 120723 PDXB: &LABEL                         */ 14010006
*/*                                                                  */ 14200000
*/* ---------------------------------------------------------------- */ 14400000
*/*                                                                  */ 14600000
*/*   Hardware=                                                      */ 14800000
*/* $H1= 64BIT,HBB7703,99049,PDE1: 64-bit support                    */ 15000000
*/*                                                                  */ 15200000
*/* ---------------------------------------------------------------- */ 15400000
*/*                                                                  */ 15600000
*/*   Design changes=                                                */ 15800000
*/* $D1= MACRO,HIP2102,78347,PDE1: Eliminate unnecessary symbols     */ 16000000
*/* $D2= QUALITY,HIP2102,82025,PDE1: Improve comments, remarks       */ 16200000
*/* $D3= DCR0049,JBB2125,83116,PDE1: Get/Store symbol services       */ 16400000
*/*                                                                  */ 16600000
*/* ---------------------------------------------------------------- */ 16800000
*/*                                                                  */ 17000000
*/*   PTMs=                                                          */ 17200000
*/* $P1= PA20624,JBB2220,85283,PDE1: Supply a default length for     */ 17400000
*/*      the assembler structure when DSECT=NO is specified.         */ 17600000
*/*                                                                  */ 17800000
*/* ---------------------------------------------------------------- */ 18000000
*/*                                                                  */ 18200000
*/*   Maintenance= none                                              */ 18400000
*/*                                                                  */ 18600000
*/*** End of Specifications for BLSRDATC *****************************/ 18800000
*/* Treat assembler macro as PLAS full-width remark ******************* 19000000
         MACRO                                                          19200000
&LAB     BLSRDATC &T,&N,&DSECT=YES,&ABITS=31,&L=4,&O=0,&LABEL=     @L3C 19400005
         LCLC  &P                                                  @L3A 19410005
&P       SETC  '&LAB'                                              @L3A 19420005
         AIF   ('&P' NE '').HAVELAB                                @L3A 19430005
&P       SETC  '&LABEL'                                            @L3A 19431005
         AIF   ('&P' NE '').HAVELAB                                @L3A 19432005
&P       SETC  'DATC'                                              @L3A 19440005
.HAVELAB ANOP                                                      @L3A 19450005
         GBLA  &BLSABIT           ABITS                            @H1A 19600000
         GBLB  &EDATC             Blurb produced once in assembly  @D3A 19800000
         BLSABITS ABITS=&ABITS.   Process ABITS option             @H1A 20000000
         IEZBITS ,                Define symbolic bits             @D3A 20200000
         AIF   (&EDATC).L000      Blurb produced once in assembly  @D3A 20400000
*---------------------------------------------------------------------- 20600000
*                                                                       20800000
* IPCS records the following properties for areas of storage:           21000000
*                                                                       21200000
* - The offset between an addressed byte and the physical origin        21400000
*   of this area.                                                       21600000
*                                                                       21800000
* - The physical length of this area.                                   22000000
*                                                                       22200000
* - A data type.                                                        22400000
*                                                                       22600000
* - An indication whether the area is scalar or an array and, if        22800000
*   the area is an array, the number of entries in the array            23000000
*   and the subscript which applies to the first entry.                 23200000
*                                                                       23400000
*---------------------------------------------------------------------- 23600000
&EDATC   SETB  1                  Blurb produced once in assembly  @D3A 23800000
.L000    AIF   (&BLSABIT EQ 64).OVERBAR ABITS=64 attributes        @H1A 24000000
         AIF   ('&DSECT' EQ 'NO').L010 No DSECT statement          @H1C 24200000
&P       DSECT ,                  IPCS attribute descriptor        @D3A 24400000
         AGO   .L020              Define structure of record       @D3A 24600000
.L010    ANOP  ,                  No DSECT statement               @D3A 24800000
         DS    0F                 Align structure on boundary      @P1C 25000000
&P       DS    0CL60              IPCS attribute descriptor        @P1A 25200000
.L020    ANOP  ,                  Define structure of record       @D3A 25400000
&P.00    DS    0C                 Begin BLSRDATC               #MD03007 25600000
&P.OF    DC    A(&O)              Offset in bytes                  @L2C 25800000
&P.LE    DC    A(&L)              Length in bytes                  @L2C 26000000
&P.OB    DC    FL1'0'                                              @D3A 26200000
&P.LB    DC    FL1'0'                                              @D3A 26400000
&P.T     BLSRDATT &T,&N,DSECT=NO  Data type                        @L2C 26600000
&P.IM    DC    F'0'               Array entry count                @D3A 26800000
&P.IL    DC    F'0'               Subscript of initial array entry @D3A 27000000
         AGO   .ABITANY           Common exit path                 @H1A 27200000
.OVERBAR AIF   ('&DSECT' EQ 'NO').L110 No DSECT statement          @H1A 27400000
&P       DSECT ,                  IPCS attribute descriptor        @H1P 27600000
         AGO   .L120              Define structure of record       @H1A 27800000
.L110    ANOP  ,                  No DSECT statement               @H1A 28000000
         DS    0F                 Align structure on boundary      @H1A 28200000
&P       DS    0CL76              IPCS attribute descriptor        @H1A 28400000
.L120    ANOP  ,                  Define structure of record       @H1A 28600000
&P.00    DS    0C                 Begin BLSRDATC               #MD03007 28800000
&P.OF    DS    0FDL8              Offset in bytes                  @L2C 29000000
         DC    ADL8(&O)           Offset in bytes                  @L2A 29200000
&P.LE    DC    ADL8(&L)           Length in bytes                  @L2C 29400000
&P.OB    DC    FL1'0'                                              @H1P 29600000
&P.LB    DC    FL1'0'                                              @H1P 29800000
&P.T     BLSRDATT DSECT=NO        Data type                        @H1P 30000000
&P.IM    DC    XL8'0'             Array entry count                @H1A 30200000
&P.IL    DC    XL8'0'             Subscript of initial array entry @H1A 30400000
.ABITANY ANOP  ,                  Common exit path                 @H1C 30600000
&P.F     DC    XL4'00'            Flags                            @D3A 30800000
&P.FA    EQU   BIT0               Array                            @D3A 31000000
         DC    XL4'00'                                             @D3A 31200000
&P.99    DS    0C                 End BLSRDATC                 #MD03007 31400000
         MEND  ,                  End assembler macro BLSRDATC       */ 31600000
*                                                                       31800000
*%BLSRDATC:                         /* Describe area properties      */ 32000000
*   MACRO KEYS(ABITS,               /* Entry                         */ 32200000
*       E,                          /* Entry                         */ 32400000
*       L,                          /* Length                        */ 32600000
*       MF,                         /* Standard macro keyword        */ 32800000
*       O);                         /* Offset                        */ 33000000
*                                                                       33200000
*/*------------------------------------------------------------------*/ 33400000
*/* Define External Macro-Variables                                  */ 33600000
*/*------------------------------------------------------------------*/ 33800000
*                                                                       34000000
*   DECLARE                         /* External macro variables      */ 34200000
*     BLSABIT  FIXED EXTERNAL,      /* ABITS                     @H1A*/ 34400000
*     BLSADC   CHARACTER EXTERNAL,  /* Data type                     */ 34600000
*     ELSOPTS  CHARACTER EXTERNAL,  /* IPCS macro options        @D1A*/ 34800000
*     ELSRDATC CHARACTER EXTERNAL,  /* BLSRDATC global data      @D1A*/ 35000000
*     EHBENDCHAR CHARACTER EXTERNAL, /* Final punctuation            */ 35200000
*     EHBLVL1  CHARACTER EXTERNAL,  /* First level number            */ 35400000
*     EHBLVL2  CHARACTER EXTERNAL,  /* Second level number           */ 35600000
*     EHBLVL3  CHARACTER EXTERNAL,  /* Third level number            */ 35800000
*     EHBMF1   CHARACTER EXTERNAL,  /* Macro form                    */ 36000000
*     EHBMF2   CHARACTER EXTERNAL,  /* Prefix characters             */ 36200000
*     EHBMF3   CHARACTER EXTERNAL,  /* Scope/storage class           */ 36400000
*     EHBMF3A  CHARACTER EXTERNAL,  /* Complete initialization flag  */ 36600000
*     EHBCOL1  FIXED EXTERNAL,      /* First indentation column      */ 36800000
*     EHBCOL2  FIXED EXTERNAL,      /* Second indentation column     */ 37000000
*     EHBCOL3  FIXED EXTERNAL,      /* Third indentation column      */ 37200000
*     EHBRC    FIXED EXTERNAL;      /* Macro return code             */ 37400000
*   DEACTIVATE                      /* Prevent accidents         @D1P*/ 37600000
*       ELSRDATC;                   /* BLSRDATC global data      @D1A*/ 37800000
*                                                                       38000000
*/*------------------------------------------------------------------*/ 38200000
*/* Define Internal Macro-Variables                                  */ 38400000
*/*------------------------------------------------------------------*/ 38600000
*                                                                       38800000
*   DECLARE                         /* Internal macro variables      */ 39000000
*     CENDCHAR CHARACTER INTERNAL,  /* Final punctuation             */ 39200000
*     CE1      CHARACTER INTERNAL,  /* Initial entry number          */ 39400000
*     CE2      CHARACTER INTERNAL,  /* Final entry number            */ 39600000
*     CLVL2    CHARACTER INTERNAL,  /* Second level number           */ 39800000
*     CLVL3    CHARACTER INTERNAL,  /* Third level number            */ 40000000
*     CMF1     CHARACTER INTERNAL,  /* Macro form                    */ 40200000
*     CMF2     CHARACTER INTERNAL,  /* Prefix characters             */ 40400000
*     CMF3A    CHARACTER INTERNAL,  /* Complete initialization flag  */ 40600000
*     CQCOMPLETE CHARACTER INTERNAL, /* Literal                      */ 40800000
*     CQINITIAL CHARACTER INTERNAL, /* Literal                       */ 41000000
*     FCOL2    FIXED INTERNAL,      /* Second indentation column     */ 41200000
*     FCOL3    FIXED INTERNAL,      /* Third indentation column      */ 41400000
*     F1       FIXED INTERNAL;      /* Utility                       */ 41600000
*   DEACTIVATE CENDCHAR,CE1,CE2,CLVL2,CLVL3,CMF1,CMF2,CMF3A,CQCOMPLETE, 41800000
*       CQINITIAL,FCOL2,FCOL3,F1;   /* Prevent accidents         @D2C*/ 42000000
*   CQCOMPLETE = 'COMPLETE';        /* Literal                       */ 42200000
*   CQINITIAL = ' INITIAL(';        /* Literal                       */ 42400000
*   ANSWER('?'!!MACLABEL!!'BLRMF('!!MF!!')FORMS(L,S);');                42600000
*   CENDCHAR = EHBENDCHAR;          /* Final punctuation             */ 42800000
*   EHBENDCHAR = ',';               /* Final punctuation             */ 43000000
*   CLVL2 = EHBLVL2;                /* Second level number           */ 43200000
*   CLVL3 = EHBLVL3;                /* Third level number            */ 43400000
*   CMF1 = EHBMF1;                  /* Macro form                    */ 43600000
*   CMF2 = EHBMF2;                  /* Prefix characters             */ 43800000
*   CMF3A = EHBMF3A;                /* Complete initialization flag  */ 44000000
*   FCOL2 = EHBCOL2;                /* Second indentation column     */ 44200000
*   FCOL3 = EHBCOL3;                /* Third indentation column      */ 44400000
*   ANSWER('?BLSABITS '!!ABITS!!';'); /* Process ABITS           @H1A*/ 44600000
*   IF EHBRC > 8 THEN               /* Serious error detected        */ 44800000
*     GO TO L99900;                 /* Serious error exit            */ 45000000
*   IF CMF1 = 'LIST' THEN           /* List form                     */ 45200000
*     ANSWER('DECLARE/*BLSRDATC #MD03007*/') COLUMN(5); /*       @L2C*/ 45400000
*   IF INDEX(ELSOPTS,'DEBUG') = 0 THEN /* Minimize debugging data       45600000
*                                                                @D1A*/ 45800000
*     DO;                           /* Minimize debugging data   @D1A*/ 46000000
*       IF EHBLVL1(1:1) ^= '1' THEN /* Level number required     @D1A*/ 46200000
*         ANSWER(EHBLVL1) COLUMN(EHBCOL1); /*                    @D1A*/ 46400000
*       ANSWER(CMF2!!EHBMF3!!' CHARACTER(60) BOUNDARY(WORD)'!!          46600000
*           EHBENDCHAR!!'/*BLSRDATC #MD03007*/') /* MACDATE          */ 46800000
*           COLUMN(EHBCOL1);        /*                           @L2C*/ 47000000
*     END;                          /* Minimize debugging data   @D1A*/ 47200000
*   ELSE                            /* Debugging data            @D1A*/ 47400000
*                                                                       47600000
*     /***************************************************************/ 47800000
*     /*                                                             */ 48000000
*     /* Debugging Data                                              */ 48200000
*     /*                                                             */ 48400000
*     /***************************************************************/ 48600000
*                                                                       48800000
*     DO;                           /* Debugging data            @D1A*/ 49000000
*       IF LENGTH(ELSRDATC) = 0 THEN /* Produce blurb            @L1C*/ 49200000
*         DO;                       /* Produce blurb             @L1M*/ 49400000
*           ANSWER('/*--------------------------------------------------49600000
*----------------*/ /* IPCS records the following properties for areas o49800000
*f storage:      */ /* (1) The offset between an addressed byte and the 50000000
*physical origin */ /*     of this area.                                50200000
*                */') COLUMN(2);    /*                           @L1M*/ 50400000
*           ANSWER('/* (2) The physical length of this area.            50600000
*                */ /* (3) A data type.                                 50800000
*                */ /* (4) An indication whether the area is scalar or a51000000
*n array and, if */ /*     the area is an array, the number of entries i51200000
*n the array     */ /*     and the subscript which applies to the first 51400000
*entry.          */ /*--------------------------------------------------51600000
*----------------*/') COLUMN(2);    /*                           @L1M*/ 51800000
*           ELSRDATC = CMF2;        /* Blurb produced            @L1C*/ 52000000
*         END;                      /* Produce blurb             @L1M*/ 52200000
*       ELSE                        /* Suppress blurb                */ 52400000
*         ANSWER('/*Block comment before '!!ELSRDATC!!                  52600000
*             ' also pertains to '!!CMF2!!'*/') COLUMN(7); /*    @L1A*/ 52800000
*       IF BLSABIT = 64 THEN        /* ABITS(64) option          @H1A*/ 53000000
*         DO;                       /* ABITS(64) option          @H1A*/ 53200000
*           ANSWER(EHBLVL1!!CMF2!!EHBMF3!!                              53400000
*               'CHARACTER(76) BOUNDARY(WORD),/*BLSRDATC'!!MACLIST!!' ' 53600000
*               !!MACKEYS!!'*/') COLUMN(EHBCOL1); /*             @H1A*/ 53800000
*           ANSWER(CLVL2!!CMF2!!'00 CHARACTER(0),/*BLSRDATC #MD03007*/' 54000000
*               ) COLUMN(FCOL2);    /*                           @L2C*/ 54200000
*           ANSWER(CLVL2!!CMF2!!'OF CHARACTER(8)') /*            @H1A*/ 54400000
*               COLUMN(FCOL2);                                          54600000
*           IF CMF3A = CQCOMPLETE THEN /* Initialize             @H1P*/ 54800000
*             DO;                   /* Initialize                @H1P*/ 55000000
*               ANSWER(CQINITIAL);  /*                           @H1P*/ 55200000
*               IF LENGTH(O(1)) > 0 THEN /* Explicit byte offset @H1P*/ 55400000
*                 ANSWER(O(1)!!')'); /*                          @H1P*/ 55600000
*               ELSE                /* Implicit byte offset      @H1A*/ 55800000
*                 ANSWER('''00''X)');                                   56000000
*             END;                  /* Initialize                @H1P*/ 56200000
*           ANSWER(',/*Offset in bytes*/'); /*                   @H1P*/ 56400000
*           ANSWER(CLVL2!!CMF2!!'LE '!!BLSADC) /*                @H1A*/ 56600000
*               COLUMN(FCOL2);                                          56800000
*           IF CMF3A = CQCOMPLETE THEN /* Initialize             @H1P*/ 57000000
*             DO;                   /* Initialize                @H1P*/ 57200000
*               ANSWER(CQINITIAL);  /*                           @H1P*/ 57400000
*               SELECT;             /* Initial value             @H1A*/ 57600000
*                 WHEN(LENGTH(L(1)) > 0) /* Explicit byte length @H1A*/ 57800000
*                   ANSWER(L(1)!!')'); /*                        @H1P*/ 58000000
*                 WHEN(BLSABIT = 64) /* ABITS(64) expansion      @H1A*/ 58200000
*                   ANSWER('''0000000000000004''X)'); /*         @H1A*/ 58400000
*                 OTHERWISE         /* Implicit byte length      @H1P*/ 58600000
*                   ANSWER('4)');                                       58800000
*               END;                /* Initial value             @H1A*/ 59000000
*             END;                  /* Initialize                @H1P*/ 59200000
*           ANSWER(',/*Length in bytes*/'); /*                   @H1P*/ 59400000
*         END;                      /* ABITS(64) option          @H1A*/ 59600000
*       ELSE                        /* ABITS(31) option          @H1A*/ 59800000
*         DO;                       /* ABITS(31) option          @H1A*/ 60000000
*           ANSWER(EHBLVL1!!CMF2!!EHBMF3!!                              60200000
*               'CHARACTER(60) BOUNDARY(WORD),/*BLSRDATC'!!MACLIST!!' ' 60400000
*               !!MACKEYS!!'*/') COLUMN(EHBCOL1); /*             @D1C*/ 60600000
*           ANSWER(CLVL2!!CMF2!!'00 CHARACTER(0),/*BLSRDATC #MD03007*/' 60800000
*               ) COLUMN(FCOL2);    /*                           @L2C*/ 61000000
*           ANSWER(CLVL2!!CMF2!!'OF SIGNED BINARY(31)') COLUMN(FCOL2);  61200000
*           IF CMF3A = CQCOMPLETE THEN /* Initialize                 */ 61400000
*             DO;                   /* Initialize                    */ 61600000
*               ANSWER(CQINITIAL);                                      61800000
*               IF LENGTH(O(1)) > 0 THEN /* Explicit byte offset     */ 62000000
*                 ANSWER(O(1)!!')');                                    62200000
*               ELSE                /* Implicit byte offset          */ 62400000
*                 ANSWER('0)');                                         62600000
*             END;                  /* Initialize                    */ 62800000
*           ANSWER(',/*Offset in bytes*/'); /*                   @D2C*/ 63000000
*           ANSWER(CLVL2!!CMF2!!'LE UNSIGNED BINARY(32)') COLUMN(FCOL2) 63200000
*               ;                                                       63400000
*           IF CMF3A = CQCOMPLETE THEN /* Initialize                 */ 63600000
*             DO;                   /* Initialize                    */ 63800000
*               ANSWER(CQINITIAL);                                      64000000
*               IF LENGTH(L(1)) > 0 THEN /* Explicit byte length     */ 64200000
*                 ANSWER(L(1)!!')');                                    64400000
*               ELSE                /* Implicit byte length          */ 64600000
*                 ANSWER('4)');                                         64800000
*             END;                  /* Initialize                    */ 65000000
*           ANSWER(',/*Length in bytes*/'); /*                   @D2C*/ 65200000
*         END;                      /* ABITS(31) option          @H1A*/ 65400000
*       ANSWER(CLVL2!!CMF2!!'OB UNSIGNED BINARY(8)') COLUMN(FCOL2);     65600000
*       IF CMF3A = CQCOMPLETE THEN  /* Initialize                    */ 65800000
*         DO;                       /* Initialize                    */ 66000000
*           ANSWER(CQINITIAL);                                          66200000
*           IF LENGTH(O(2)) > 0 THEN /* Explicit bit offset          */ 66400000
*             ANSWER(O(2)!!')');                                        66600000
*           ELSE                    /* Implicit bit offset           */ 66800000
*             ANSWER('0)');                                             67000000
*         END;                      /* Initialize                    */ 67200000
*       ANSWER(',');                /* PARTIAL BYTE OFFSET           */ 67400000
*       ANSWER(CLVL2!!CMF2!!'LB UNSIGNED BINARY(8)') COLUMN(FCOL2);     67600000
*       IF CMF3A = CQCOMPLETE THEN  /* Initialize                    */ 67800000
*         DO;                       /* Initialize                    */ 68000000
*           ANSWER(CQINITIAL);                                          68200000
*           IF LENGTH(L(2)) > 0 THEN /* Explicit bit length          */ 68400000
*             ANSWER(L(2)!!')');                                        68600000
*           ELSE                    /* Implicit bit length           */ 68800000
*             ANSWER('0)');                                             69000000
*         END;                      /* Initialize                    */ 69200000
*       ANSWER(',');                /* Partial byte length           */ 69400000
*       ANSWER('?BLSRDATT'!!MACLIST!!' MF(SUBLIST,'!!CMF2!!'T,'!!CMF3A  69600000
*           !!','!!CLVL2!!');');                                        69800000
*       IF BLSABIT = 64 THEN        /* ABITS(64) option          @H1A*/ 70000000
*         DO;                       /* ABITS(64) option          @H1A*/ 70200000
*           ANSWER(CLVL2!!CMF2!!'IM '!!BLSADC) /*                @H1A*/ 70400000
*               COLUMN(FCOL2);                                          70600000
*           IF CMF3A = CQCOMPLETE THEN /* INITIALIZE             @H1P*/ 70800000
*                                                                       71000000
*             /*******************************************************/ 71200000
*             /*                                                     */ 71400000
*             /* Initialize                                          */ 71600000
*             /*                                                     */ 71800000
*             /*******************************************************/ 72000000
*                                                                       72200000
*             DO;                   /* Initialize                @H1P*/ 72400000
*               ANSWER(CQINITIAL);  /*                           @H1P*/ 72600000
*               SELECT;             /* Initial value             @H1A*/ 72800000
*                 WHEN(LENGTH(E) > 0) /* Array                   @H1A*/ 73000000
*                                                                       73200000
*                   /*************************************************/ 73400000
*                   /*                                               */ 73600000
*                   /* Array                                         */ 73800000
*                   /*                                               */ 74000000
*                   /*************************************************/ 74200000
*                                                                       74400000
*                   DO;             /* Array                     @H1P*/ 74600000
*                     F1 = INDEX(E(1),':'); /* Detect range notation    74800000
*                                                                @H1P*/ 75000000
*                     IF F1 < 2 THEN /* Implicit range origin    @H1P*/ 75200000
*                       CE1 = '1';  /* Initial entry number      @H1P*/ 75400000
*                     ELSE          /* Explicit range origin         */ 75600000
*                       CE1 = E(1,1:F1-1); /* Initial entry number      75800000
*                                                                @H1P*/ 76000000
*                     IF F1 = 0 THEN /* Implicit range end       @H1P*/ 76200000
*                       CE2 = CE1;  /* Final entry number        @H1P*/ 76400000
*                     ELSE          /* Explicit range end        @H1P*/ 76600000
*                       CE2 = E(1,F1+1:LENGTH(E(1))); /* Final entry    76800000
*                                      number                        */ 77000000
*                     ANSWER('1+'!!CE2!!'-'!!CE1!!')'); /* Dimension    77200000
*                                                                @H1P*/ 77400000
*                   END;            /* Array                     @H1P*/ 77600000
*                 WHEN(BLSABIT = 64) /* ABITS(64) expansion      @H1A*/ 77800000
*                   ANSWER('''00''X)'); /*                       @H1A*/ 78000000
*                 OTHERWISE         /* Not an array              @H1P*/ 78200000
*                   ANSWER('0)');                                       78400000
*               END;                /* Initial value             @H1A*/ 78600000
*             END;                  /* Initialize                @H1P*/ 78800000
*           ANSWER(',/*Array entry count*/'); /*                 @H1P*/ 79000000
*           ANSWER(CLVL2!!CMF2!!'IL ') /*                        @H1A*/ 79200000
*               COLUMN(FCOL2);                                          79400000
*           IF BLSABIT = 64 THEN    /* ABITS(64)                 @H1A*/ 79600000
*             ANSWER(BLSADC);       /* Data type                 @H1A*/ 79800000
*           ELSE                    /* ABITS(31)                     */ 80000000
*             ANSWER('SIGNED BINARY(31)'); /* Data type          @H1A*/ 80200000
*           IF CMF3A = CQCOMPLETE THEN /* Initialize             @H1P*/ 80400000
*             DO;                   /* Initialize                @H1P*/ 80600000
*               ANSWER(CQINITIAL);  /*                           @H1P*/ 80800000
*               SELECT;             /* Initial value             @H1A*/ 81000000
*                 WHEN(LENGTH(E) > 0) /* Array                   @H1A*/ 81200000
*                   ANSWER(CE1!!')'); /* Initial entry number    @H1P*/ 81400000
*                 WHEN(BLSABIT = 64) /* ABITS(64) expansion      @H1A*/ 81600000
*                   ANSWER('''00''X)'); /*                       @H1A*/ 81800000
*                 OTHERWISE         /* Not an array              @H1P*/ 82000000
*                   ANSWER('0)');                                       82200000
*               END;                /* Initial value             @H1A*/ 82400000
*             END;                  /* Initialize                @H1P*/ 82600000
*           ANSWER(',/*Subscript of initial array entry*/'); /*  @H1P*/ 82800000
*         END;                      /* ABITS(64) option          @H1A*/ 83000000
*       ELSE                        /* ABITS(31) option          @H1A*/ 83200000
*         DO;                       /* ABITS(31) option          @H1A*/ 83400000
*           ANSWER(CLVL2!!CMF2!!'IM UNSIGNED BINARY(32)') COLUMN(FCOL2) 83600000
*               ;                                                       83800000
*           IF CMF3A = CQCOMPLETE THEN /* INITIALIZE                 */ 84000000
*                                                                       84200000
*             /*******************************************************/ 84400000
*             /*                                                     */ 84600000
*             /* Initialize                                          */ 84800000
*             /*                                                     */ 85000000
*             /*******************************************************/ 85200000
*                                                                       85400000
*             DO;                   /* Initialize                    */ 85600000
*               ANSWER(CQINITIAL);                                      85800000
*               IF LENGTH(E) > 0 THEN /* Array                       */ 86000000
*                                                                       86200000
*                 /***************************************************/ 86400000
*                 /*                                                 */ 86600000
*                 /* Array                                           */ 86800000
*                 /*                                                 */ 87000000
*                 /***************************************************/ 87200000
*                                                                       87400000
*                 DO;               /* Array                         */ 87600000
*                   F1 = INDEX(E(1),':'); /* Detect range notation   */ 87800000
*                   IF F1 < 2 THEN  /* Implicit range origin         */ 88000000
*                     CE1 = '1';    /* Initial entry number          */ 88200000
*                   ELSE            /* Explicit range origin         */ 88400000
*                     CE1 = E(1,1:F1-1); /* Initial entry number     */ 88600000
*                   IF F1 = 0 THEN  /* Implicit range end            */ 88800000
*                     CE2 = CE1;    /* Final entry number            */ 89000000
*                   ELSE            /* Explicit range end            */ 89200000
*                     CE2 = E(1,F1+1:LENGTH(E(1))); /* Final entry      89400000
*                                      number                        */ 89600000
*                   ANSWER('1+'!!CE2!!'-'!!CE1!!')'); /* Dimension   */ 89800000
*                 END;              /* Array                         */ 90000000
*               ELSE                /* Not an array                  */ 90200000
*                 ANSWER('0)');                                         90400000
*             END;                  /* Initialize                    */ 90600000
*           ANSWER(',/*Array entry count*/'); /*                 @D2C*/ 90800000
*           ANSWER(CLVL2!!CMF2!!'IL SIGNED BINARY(31)') COLUMN(FCOL2);  91000000
*           IF CMF3A = CQCOMPLETE THEN /* Initialize                 */ 91200000
*             DO;                   /* Initialize                    */ 91400000
*               ANSWER(CQINITIAL);                                      91600000
*               IF LENGTH(E) > 0 THEN /* Array                       */ 91800000
*                 ANSWER(CE1!!')'); /* Initial entry number          */ 92000000
*               ELSE                /* Not an array                  */ 92200000
*                 ANSWER('0)');                                         92400000
*             END;                  /* Initialize                    */ 92600000
*           ANSWER(',/*Subscript of initial array entry*/'); /*  @D2C*/ 92800000
*         END;                      /* ABITS(31) option          @H1A*/ 93000000
*       ANSWER(CLVL2!!CMF2!!'F BIT(32) BOUNDARY(WORD)') COLUMN(FCOL2);  93200000
*       IF CMF3A = CQCOMPLETE THEN  /* Initialize                    */ 93400000
*         DO;                       /* Initialize                    */ 93600000
*           ANSWER(CQINITIAL);                                          93800000
*           IF LENGTH(E) > 0 THEN   /* Array                         */ 94000000
*             ANSWER('''80000000''X)');                                 94200000
*           ELSE                    /* Not an array                  */ 94400000
*             ANSWER('''00000000''X)');                                 94600000
*         END;                      /* Initialize                    */ 94800000
*       ANSWER(',/*Flags*/');       /*                           @D2C*/ 95000000
*       ANSWER(CLVL3!!CMF2!!'FA BIT(1),/*Array*/') COLUMN(FCOL3); /*    95200000
*                                                                @D2C*/ 95400000
*       ANSWER(CLVL3!!CMF2!!'RSV01 BIT(31),') COLUMN(FCOL3); /*  @H1C*/ 95600000
*       ANSWER(CLVL2!!CMF2!!'RSV02 BIT(32) BOUNDARY(WORD)') COLUMN(     95800000
*           FCOL2);                 /*                           @H1C*/ 96000000
*       IF CMF3A = CQCOMPLETE THEN                                      96200000
*         ANSWER(CQINITIAL!!'''00''X)');                                96400000
*       ANSWER(',');                                                    96600000
*       ANSWER(CLVL2!!CMF2!!'99 CHARACTER(0)'!!CENDCHAR!!               96800000
*           '/*BLSRDATC #MD03007*/') COLUMN(FCOL2); /*           @L2C*/ 97000000
*     END;                          /* Debugging data            @D1A*/ 97200000
*L99900:                            /* Serious error exit            */ 97400000
*   IF EHBRC > 8 THEN               /* Serious error detected        */ 97600000
*     ANSWER(';/*BLSRDATC'!!MACLIST!!' '!!MACKEYS!!'*/') COLUMN(5);     97800000
*   ANSWER('?BLR003(BLSRDATC,'!!CHAR(EHBRC)!!');');                     98000000
*   RETURN CODE(EHBRC);                                                 98200000
*   %END BLSRDATC;                                                      98400000
