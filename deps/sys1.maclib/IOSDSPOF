*                                                                       00001000
* %DCL IOSDSPOF_INCLUDED CHAR EXT;                                      00002000
* %DEACTIVATE IOSDSPOF_INCLUDED;                                        00003000
* %IF IOSDSPOF_INCLUDED = '' %THEN                                      00004000
* %DO;                                                                  00005000
*/* Macro made bi-lingual on 17173. CBGEN compile date 15295         */ 00006000
*% /*                                                                   00007000
         MACRO                                                          00008000
         IOSDSPOF &DSECT=YES,&LIST=YES,&TITLE=YES,&SPOFArea=YES,       *00009000
               &SPOFCheck=COND,&SPOFGroupCheck=COND,                   *00010000
               &SPOFChk_Extension=COND,                                *00011000
               &SPOFCheck_CHP_Diag_MASK_Type=COND                       00012000
                      GBLC  &IOSDSPOF_INCLUDED                          00013000
                      GBLC  &ZCBPRINT                                   00014000
&IOSDSPOF_INCLUDED    SETC  'YES'                                       00015000
                      AIF   ('&LIST' EQ 'NONE').P0                      00016000
                      AIF   ('&TITLE' EQ 'NO').P5                       00017000
 TITLE                'IOSDSPOF  - Single Point of Failure Area        *00018000
                          '                                             00019000
.P5                   ANOP                                              00020000
**/ IOSDSPOF_1:;                                                        00021000
*/* START OF SPECIFICATIONS ******************************************* 00022000
*                                                                       00023000
*01* PROPRIETARY STATEMENT =                                            00024000
*                                                                       00025000
*    Licensed Materials - Property of IBM                               00026000
*    5650-ZOS COPYRIGHT IBM CORP. 2008, 2013                            00027000
*                                                                       00028000
*01* STATUS = HBB77A0                                                   00029000
*                                                                       00030000
*01* END OF PROPRIETARY STATEMENT                                       00031000
*                                                                       00032000
*01* EXTERNAL CLASSIFICATION: PI                                        00033000
*01* END OF EXTERNAL CLASSIFICATION:                                    00034000
*                                                                       00035000
*01* DESCRIPTIVE NAME:  Single Point of Failure Area                    00036000
*02*  ACRONYM:  SPOF                                                    00037000
*                                                                       00038000
*01* MACRO NAME:  IOSDSPOF                                              00039000
*                                                                       00040000
*01* DSECT NAME:                                                        00041000
*     SPOFArea                                                          00042000
*     SPOFCheck                                                         00043000
*     SPOFGroupCheck                                                    00044000
*                                                                       00045000
*01* COMPONENT:  I/O Supervisor (SC1C3)                                 00046000
*                                                                       00047000
*01* EYE-CATCHER:  NONE                                                 00048000
*                                                                       00049000
*01* STORAGE ATTRIBUTES:                                                00050000
*02*  SUBPOOL:    1                                                     00051000
*02*  KEY:        IOSSPOF callers key                                   00052000
*02*  RESIDENCY:  31-bit storage                                        00053000
*                                                                       00054000
*01* SIZE:  Variable                                                    00055000
*            SPOFCheck_CHP_Diag_MASK_Type -- X'000C' bytes              00056000
*            SPOFChk_Extension            -- X'0010' bytes              00057000
*            SPOFArea                     -- X'0030' bytes              00058000
*            SPOFCheck                    -- X'011C' bytes              00059000
*            SPOFGroupCheck               -- X'0114' bytes              00060000
*                                                                       00061000
*01* CREATED BY:                                                        00062000
*     IOSSPOF Service                                                   00063000
*                                                                       00064000
*01* POINTED TO BY:                                                     00065000
*     Contents of SPOFAREA Output Keyword                               00066000
*                                                                       00067000
*01* SERIALIZATION:                                                     00068000
*     None required                                                     00069000
*                                                                       00070000
*01* FUNCTION:                                                          00071000
*02* Maps the particular single points of failure for the set           00072000
*    of devices passed to the IOSSPOF service                           00073000
*                                                                       00074000
*01* USAGE NOTES:                                                       00075000
*                                                                       00076000
*   - The SPOFArea is automatically allocated and built if the          00077000
*     keyword SPOFAREA keyword is supplied.                             00078000
*                                                                       00079000
*   - The SPOFArea must be explicitly freed by the caller               00080000
*     using the length and subpool supplied in the                      00081000
*     SPOFArea.  The following is a code example that frees             00082000
*     the SPOFArea:                                                     00083000
*                                                                       00084000
*     .****** ASM Example - Begin ************************         @01A 00085000
*        L   1,IosSpofPl_xSpofArea                                 @01A 00086000
*        L   0,SpofArea_Len(,1)                                    @01A 00087000
*        XR  15,15                                                 @01A 00088000
*        IC  15,SpofArea_SubPool(,1)                               @01A 00089000
*        Storage RELEASE,Addr=(1),Length=(0),Sp=(15)               @01C 00090000
*     .****** ASM Example - End   ************************         @01A 00091000
*                                                                       00092000
* Word  Byte 0   Byte 1   Byte 2   Byte 3                               00093000
*                                                                       00094000
*     0--------1--------2--------3--------4                             00095000
*   0 ! SPOFArea EyeCatcher "SPOF"        !                             00096000
*     0--------1--------2--------3--------4                             00097000
*   1 ! SPOFArea EyeCatcher "AREA"        !                             00098000
*     0--------1--------2--------3--------4                             00099000
*   2 !Version !HdrLen  !SubPool ! ****** !                             00100000
*     0--------1--------2--------3--------4                             00101000
*   3 !SPOFArea_Len length with entries   !                             00102000
*     0--------1--------2--------3--------4                             00103000
*   4 !SPOFArea_NumEntries                !                             00104000
*     0--------1--------2--------3--------4                             00105000
* 5-8 !*********** Reserved ************* !                             00106000
*     0--------1--------2--------3--------4                             00107000
*   9 !SPOFArea_SumChecksAddr             +---+                         00108000
*     0--------1--------2--------3--------4   !                         00109000
*  10 !SPOFArea_GroupChecksAddr           +---)---+                     00110000
*     0--------1--------2--------3--------4   !   !                     00111000
*  11 !SPOFArea_EntriesAddr(1) (Device 1) +---)---)---+                 00112000
*     0--------1--------2--------3--------4   !   !   !                 00113000
*     !SPOFArea_EntriesAddr(2) (Device 2) +---)---)---)---+             00114000
*     0--------1--------2--------3--------4   !   !   !   !             00115000
*     !SPOFArea_EntriesAddr(3) (Device 3) +---)---)---)---)---+         00116000
*     0--------1--------2--------3--------4   !   !   !   !   !         00117000
*     !                                   !   !   !   !   !   !         00118000
*     !...                                +---)---)---)---)---)---+     00119000
*     !                                   !   !   !   !   !   !   !     00120000
*     0--------1--------2--------3--------4   !   !   !   !   !   !     00121000
*     !SPOFArea_EntiresAddr(N) (Device N) +---)---)---)---)---)---)---+ 00122000
*     0--------1--------2--------3--------4   !   !   !   !   !   !   ! 00123000
*  11 + SPOFArea_NumEntries                   !   !   !   !   !   !   ! 00124000
*     0--------1--------2--------3--------4   !   !   !   !   !   !   ! 00125000
*     !Summary SPOFCheck                  !   !   !   !   !   !   !   ! 00126000
*     !(Bit mask of all SPOFs found)      ! <-+   !   !   !   !   !   ! 00127000
*     !(Bit mask of SPOFs not checked)    !       !   !   !   !   !   ! 00128000
*     0--------1--------2--------3--------4       !   !   !   !   !   ! 00129000
*     !SPOFGroupCheck                     !       !   !   !   !   !   ! 00130000
*     !(Check of a Pair of devices)       ! <-----+   !   !   !   !   ! 00131000
*     !(Bit mask of SPOFs not checked)    !           !   !   !   !   ! 00132000
*     0--------1--------2--------3--------4           !   !   !   !   ! 00133000
*     !                                   !           !   !   !   !   ! 00134000
*     !SPOFGroupCheck Extension(s)        !           !   !   !   !   ! 00135000
*     !                                   !           !   !   !   !   ! 00136000
*     0--------1--------2--------3--------4           !   !   !   !   ! 00137000
*     !SPOFCheck For device 1             !           !   !   !   !   ! 00138000
*     !(Bit mask of all SPOFs found)      ! <---------+   !   !   !   ! 00139000
*     !(Bit mask of SPOFs not checked)    !               !   !   !   ! 00140000
*     0--------1--------2--------3--------4               !   !   !   ! 00141000
*     !                                   !               !   !   !   ! 00142000
*     !SPOFCheck Extensions for device 1  !               !   !   !   ! 00143000
*     !                                   !               !   !   !   ! 00144000
*     0--------1--------2--------3--------4               !   !   !   ! 00145000
*     !SPOFCheck For device 2             !               !   !   !   ! 00146000
*     !(Bit mask of all SPOFs found)      ! <-------------+   !   !   ! 00147000
*     !(Bit mask of SPOFs not checked)    !                   !   !   ! 00148000
*     0--------1--------2--------3--------4                   !   !   ! 00149000
*     !                                   !                   !   !   ! 00150000
*     !SPOFCheck Extensions for device 2  !                   !   !   ! 00151000
*     !                                   !                   !   !   ! 00152000
*     0--------1--------2--------3--------4                   !   !   ! 00153000
*     !SPOFCheck For device 3             !                   !   !   ! 00154000
*     !(Bit mask of all SPOFs found)      ! <-----------------+   !   ! 00155000
*     !(Bit mask of SPOFs not checked)    !                       !   ! 00156000
*     0--------1--------2--------3--------4                       !   ! 00157000
*     !                                   !                       !   ! 00158000
*     !SPOFCheck Extensions for device 3  !                       !   ! 00159000
*     !                                   !                       !   ! 00160000
*     0--------1--------2--------3--------4                       !   ! 00161000
*     !                                   !                       !   ! 00162000
*     !SPOFCheck For device ...           ! <---------------------+   ! 00163000
*     !                                   !                           ! 00164000
*     0--------1--------2--------3--------4                           ! 00165000
*     !                                   !                           ! 00166000
*     !SPOFCheck Extensions for ...       !                           ! 00167000
*     !                                   !                           ! 00168000
*     0--------1--------2--------3--------4                           ! 00169000
*     !SPOFCheck For device N             !                           ! 00170000
*     !(Bit mask of all SPOFs found)      ! <-------------------------+ 00171000
*     !(Bit mask of SPOFs not checked)    !                             00172000
*     0--------1--------2--------3--------4                             00173000
*     !                                   !                             00174000
*     !SPOFCheck Extensions for device N  !                             00175000
*     !                                   !                             00176000
*     0--------1--------2--------3--------4                             00177000
*                                                                  @04A 00178000
*  This entire structure is of length "SPOFArea_Len".                   00179000
*                                                                       00180000
*01* METHOD OF ACCESS:                                                  00181000
*                                                                       00182000
*02*   PL/X:                                                            00183000
*                                                                       00184000
*        ?ASAADMAC NAME(IOSDSPOF)                                       00185000
*                                                                       00186000
*        By default the SPOFArea is based.  If other basing is          00187000
*        desired, use %SPOFArea_Based='xxxxxx'.  Since the length       00188000
*        of this control block is variable it is not suggested to       00189000
*        used the AUTO keyword for your based attribute.                00190000
*                                                                       00191000
*        By default the SPOFCheck is based off of                       00192000
*        SPOFArea_SummaryCheckAddr If other basing is desired, use      00193000
*        %SPOFCheck_Based='xxxxxx'.                                     00194000
*                                                                       00195000
*        By default the SPOFGroupCheck is based off of                  00196000
*        SPOFArea_GroupChecksAddr.  If other basing is desired, use     00197000
*        %SPOFGroupCheck_Based='xxxxxx'.                                00198000
*                                                                       00199000
*                                                                       00200000
*02*   ASM:                                                             00201000
*                                                                       00202000
*        IOSDSPOF                                                       00203000
*                                                                       00204000
*01* DELETED BY:  The caller                                            00205000
*                                                                       00206000
*01* DEPENDENCIES:  None                                                00207000
*                                                                       00208000
*01* DISTRIBUTION LIBRARY:  AMACLIB                                     00209000
*                                                                       00210000
*01* CHANGE ACTIVITY:                                                   00211000
*                                                                       00212000
*  $L0=IOSSPOF  HBB7750 070731 PDMS: Single Point of Failure            00213000
*  $L1=IOSSPOFS HBB7790 120731 PDSK: Switch Single Point of Failure     00214000
*                                    Detection Improvements.            00215000
*                                    - changes flagged as OA40876       00216000
*                                                                       00217000
*  $P1=ME27208  HBB77A0 140315 PDSK: Correct problems with assembler    00218000
*                                    version.                           00219000
*                                                                       00220000
*  $01=OA27023  HBB7750 081215 PDNO: No code changes.  Correct          00221000
*                                    the STORAGE RELEASE example        00222000
*                                    in the prolog.                     00223000
*  $03=OA40876  HBB7770 130601 PDSK: Partial rolldown of Switch Single  00224000
*                                    Point of Failure Detection         00225000
*                                    Improvements                       00226000
*     =OA42670  HBB7790 130830 PDCC: Sync-up with lower levels          00227000
*  $04=OA48188  HBB7780 160131 PDSK: Read Availability Mask             00228000
*                                    Enhancements                       00229000
*                                    - Added SPOF check extension and   00230000
*                                      Control Unit Interface check     00231000
*                                      extension                        00232000
*  $05=OA47210  HBB7780 160620 PDBR  Ignore Drawer on SPOF CCC Checks   00233000
*                                    (only use "interesting" components 00234000
*                                    - Update SPOF message to decode    00235000
*                                      component flags                  00236000
*  $06=OA51327  HBB7790 170324 PDKS  SPOF Ignore                        00237000
*                                    - Add comment for discontinuation  00238000
*                                      of LSS check                     00239000
*                                    - Add comment to indicate 'PBOOK'  00240000
*                                      is now 'PDRAWER'                 00241000
*  $07=OA50638  HBB7790 170630 PDSK  Add flags to indicate if hardware  00242000
*                                    information is available for       00243000
*                                    channel paths and control unit     00244000
*                                    interfaces.                        00245000
*                                    - SPOFCheck_CHP_HWInfo_NAvail      00246000
*                                    - SPOFCheck_CUI_HWInfo_NAvail      00247000
*                                                                       00248000
* END OF SPECIFICATIONS **********************************************/ 00249000
*% /*                                                                   00250000
.P0                   ANOP                                              00251000
                      AIF   ('&ZCBPRINT' EQ 'NO').P1                    00252000
                      AIF   ('&LIST' EQ 'YES').P2                       00253000
.P1                   ANOP                                              00254000
                      PUSH  PRINT                                       00255000
                      PRINT OFF                                         00256000
.P2                   ANOP                                              00257000
*                                                                       00258000
* ********************************************************************  00259000
* * Return codes for the IOSSPOF service invocation                  *  00260000
* ********************************************************************  00261000
*                                                                       00262000
*                                                                       00263000
SPOF_RC_Ok            EQU   0                                           00264000
SPOF_RC_SomeChecksFailed EQU 4                                          00265000
SPOF_RC_SPOFFound     EQU   8                                           00266000
SPOF_RC_ProgramError  EQU   12                                          00267000
SPOF_RC_EnvironError  EQU   16                                          00268000
SPOF_RC_SystemError   EQU   32                                          00269000
*                                                                       00270000
* ********************************************************************  00271000
* * Reason codes for the IOSSPOF service invocation                  *  00272000
* ********************************************************************  00273000
* ********************************************************************  00274000
* * Return code 08                                                   *  00275000
* ********************************************************************  00276000
*                                                                       00277000
*                                                                       00278000
SPOF_RSN_AllDevicesFound EQU 0                                          00279000
SPOF_RSN_DeviceNotFound EQU 1                                           00280000
*                                                                       00281000
* ********************************************************************  00282000
* * Return code 12                                                   *  00283000
* ********************************************************************  00284000
*                                                                       00285000
*                                                                       00286000
SPOF_RSN_InvalidParmListVers EQU 1                                      00287000
SPOF_RSN_InvalidCount EQU   2                                           00288000
SPOF_RSN_ImproperModes EQU  3                                           00289000
SPOF_RSN_ImproperDevlistEntry EQU 4                                     00290000
SPOF_RSN_BadParmListAccess EQU 5                                        00291000
*                                                                       00292000
* ********************************************************************  00293000
* * Return code 16                                                   *  00294000
* ********************************************************************  00295000
*                                                                       00296000
*                                                                       00297000
SPOF_RSN_IOSSPOFNotAvail EQU 1                                          00298000
SPOF_RSN_HlthChkrNotAvail EQU 2                                         00299000
                      AIF   ('&SPOFArea' EQ 'NO').L0002                 00300000
                      AIF   ('&DSECT' EQ 'YES').L0003                   00301000
                      AIF   ('&SPOFArea' NE 'YES').L0002                00302000
.L0003                ANOP                                              00303000
*                                                                       00304000
* ********************************************************************  00305000
* * SPOFArea is the output structure put into the SPOFAREA(x) keyword*  00306000
* * for a IOSSPOF service call.                                      *  00307000
* ********************************************************************  00308000
*                                                                       00309000
*                                                                       00310000
                      AIF   ('&DSECT' EQ 'YES').L0004                   00311000
SPOFArea              DS    0D     IOSSPOF output area mapping          00312000
                      AGO   .L0005                                      00313000
.L0004                ANOP                                              00314000
SPOFArea              DSECT        IOSSPOF output area mapping          00315000
.L0005                ANOP                                              00316000
SPOFArea_Header       DS    CL44   SPOFArea Header                      00317000
                      ORG   SPOFArea_Header                             00318000
SPOFArea_EyeCatch     DS    CL8    Eye Catcher 'SPOFAREA'               00319000
SPOFArea_Version      DS    X      Version level                        00320000
SPOFArea_HdrLen       DS    X      Length of the SPOFArea header        00321000
SPOFArea_SubPool      DS    X      Subpool of SPOFArea                  00322000
                      DS    X      Reserved                             00323000
SPOFArea_Len          DS    F      Length of SPOFArea, including       *00324000
                                   header storage and entry storage     00325000
SPOFArea_NumEntries   DS    F      Number of entries in                *00326000
                                   SPOFArea_EntriesAddr                 00327000
                      DS    CL16   Reserved                             00328000
SPOFArea_SumChecksAddr DS   A      Pointer to a SPOFCheck structure    *00329000
                                   that contains a summary of single   *00330000
                                   points of failure to all devices     00331000
SPOFArea_GroupChecksAddr DS A      Pointer to a SPOFGroupCheck         *00332000
                                   structure that contains the         *00333000
                                   hardware isolation failures of      *00334000
                                   devices in DEVN1 DEVN2 or VOLSER1   *00335000
                                   and VOLSER2                          00336000
SPOFArea_EntriesAddr  DS    A      Array of pointers to SPOFCheck      *00337000
                                   structures that contains the single *00338000
                                   point of failure information of the *00339000
                                   devices passed in                    00340000
SPOFArea_EyeCatchConst_0TO3 EQU C'SPOF' This is the first 4-byte       *00341000
                                   segment of an 8-byte constant. The  *00342000
                                   eye catcher of the SPOFArea          00343000
SPOFArea_EyeCatchConst_4TO7 EQU C'AREA' This is the second 4-byte      *00344000
                                   segment of an 8-byte constant. The  *00345000
                                   eye catcher of the SPOFArea          00346000
SPOFArea_VersionCurrent EQU 1      Current version number               00347000
SPOFArea_VersionOne   EQU   1      Current version is version one       00348000
.L0002                ANOP                                              00349000
                      AIF   ('&SPOFCheck' EQ 'NO').L0006                00350000
                      AIF   ('&DSECT' EQ 'YES').L0007                   00351000
                      AIF   ('&SPOFCheck' NE 'YES').L0006               00352000
.L0007                ANOP                                              00353000
*                                                                       00354000
* ********************************************************************  00355000
* * SPOFCheck maps the single point of failure information passed    *  00356000
* * from the IOSSPOF service.                                        *  00357000
* ********************************************************************  00358000
*                                                                       00359000
*                                                                       00360000
                      AIF   ('&DSECT' EQ 'YES').L0008                   00361000
SPOFCheck             DS    0F     Check description mapping            00362000
                      AGO   .L0009                                      00363000
.L0008                ANOP                                              00364000
SPOFCheck             DSECT        Check description mapping            00365000
.L0009                ANOP                                              00366000
*                                                                       00367000
* ********************************************************************  00368000
* * Checks for single points of failure                              *  00369000
* ********************************************************************  00370000
*                                                                       00371000
*                                                                       00372000
SPOFCheck_Mask64      DS    BL8    Mask of single points of failure in *00373000
                                   64 bit form                          00374000
                      ORG   SPOFCheck_Mask64                            00375000
SPOFCheck_32Mask1     DS    BL4    Mask of single points of failure in *00376000
                                   32 bit form                          00377000
                      ORG   SPOFCheck_32Mask1                           00378000
SPOFCheck_16Mask1     DS    BL2    Mask of single points of failure in *00379000
                                   16 bit form                          00380000
                      ORG   SPOFCheck_16Mask1                           00381000
SPOFCheck_8Mask1      DS    B      Mask of single points of failure in *00382000
                                   8 bit form                           00383000
*  Bit definitions:                                                     00384000
SPOFCheck_NotFound    EQU   X'80'  Device does not exist                00385000
SPOFCheck_NotOnline   EQU   X'40'  Device is not online                 00386000
SPOFCheck_NoPaths     EQU   X'20'  Device has no paths varied online    00387000
SPOFCheck_OnePath     EQU   X'10'  Device has only one path varied     *00388000
                                   online                               00389000
SPOFCheck_OneSwitch   EQU   X'08'  All online paths go through one     *00390000
                                   switch                               00391000
SPOFCheck_NoPrefPaths EQU   X'04'  Device has only non preferred paths *00392000
                                   online                               00393000
SPOFCheck_OnlyPrefPaths EQU X'02'  Device has only preferred paths     *00394000
                                   online                               00395000
SPOFCheck_OnePrefPath EQU   X'01'  Device has only one preferred path  *00396000
                                   online                               00397000
SPOFCheck_8Mask2      DS    B      Mask of single points of failure in *00398000
                                   8 bit form                           00399000
*  Bit definitions:                                                     00400000
SPOFCheck_HostCHPSPF  EQU   X'80'  All chpids share a single point of  *00401000
                                   failure, on the host                 00402000
SPOFCheck_CUInterSPF  EQU   X'40'  All control unit interfaces share a *00403000
                                   single point of failure              00404000
SPOFCheck_SwCmHdwComp EQU   X'20'  All online paths share one or more  *00405000
                                   common switch hardware components    00406000
*                                                                       00407000
* ********************************************************************  00408000
* * If the 'N' bits are on the check for single points of failure    *  00409000
* * could not be done, due to check failure.                         *  00410000
* ********************************************************************  00411000
*                                                                       00412000
*                                                                       00413000
                      ORG   SPOFCheck_Mask64+8                          00414000
SPOFCheck_NC_Mask64   DS    BL8    Mask of single points of failure in *00415000
                                   64 bit that couldn't be performed    00416000
                      ORG   SPOFCheck_NC_Mask64                         00417000
SPOFCheck_NC_32Mask1  DS    BL4    Mask of single points of failure in *00418000
                                   32 bit form                          00419000
                      ORG   SPOFCheck_NC_32Mask1                        00420000
SPOFCheck_NC_16Mask1  DS    BL2    Mask of single points of failure in *00421000
                                   16 bit form                          00422000
                      ORG   SPOFCheck_NC_16Mask1                        00423000
SPOFCheck_NC_8Mask1   DS    B      Mask of single points of failure in *00424000
                                   8 bit form                           00425000
*  Bit definitions:                                                     00426000
SPOFCheck_NNotFound   EQU   X'80'  Device does not exist                00427000
SPOFCheck_NC_NotOnline EQU  X'40'  Device is not online                 00428000
SPOFCheck_NC_NoPaths  EQU   X'20'  Device has no paths varied online    00429000
SPOFCheck_NC_OnePath  EQU   X'10'  Device has only one path varied     *00430000
                                   online                               00431000
SPOFCheck_NC_OneSwitch EQU  X'08'  All online paths go through one     *00432000
                                   switch                               00433000
SPOFCheck_NC_NoPrefPaths EQU X'04' Device has only non preferred paths *00434000
                                   online                               00435000
SPOFCheck_NC_OnlyPrefPaths EQU X'02' Device has only preferred paths   *00436000
                                   online                               00437000
SPOFCheck_NC_OnePrefPath EQU X'01' Device has only one preferred path  *00438000
                                   online                               00439000
SPOFCheck_NC_8Mask2   DS    B      Mask of single points of failure in *00440000
                                   8 bit form                           00441000
*  Bit definitions:                                                     00442000
SPOFCheck_NC_HostCHPSPF EQU X'80'  All chpids share a single point of  *00443000
                                   failure, on the host                 00444000
SPOFCheck_NC_CUInterSPF EQU X'40'  All control unit interfaces share a *00445000
                                   single point of failure              00446000
*                                                                       00447000
* ********************************************************************  00448000
* * Validity flags                                                   *  00449000
* ********************************************************************  00450000
*                                                                       00451000
*                                                                       00452000
                      ORG   SPOFCheck_NC_Mask64+8                       00453000
SPOFCheck_Flags       DS    B      Use Flags                            00454000
*  Bit definitions:                                                     00455000
SPOFCheck_DEVNCH_Valid EQU  X'80'  Is the devnchar valid                00456000
SPOFCheck_VOLSER_Valid EQU  X'40'  Is the VOLSER valid                  00457000
SPOFCheck_CHP_Diag_Vld EQU  X'20'  Is the CHP_Diag valid                00458000
SPOFCheck_CUI_Diag_Vld EQU  X'10'  Is the CUI_Diag valid                00459000
SPOFCheck_Ext_Present EQU   X'08'  One or more SPOF check extensions   *00460000
                                   are present with this SPOF check     00461000
SPOFCheck_CHP_HWInfo_NAvail EQU X'04' The hardware information needed  *00462000
                                   to check the channel paths for a    *00463000
                                   single point of failure is not      *00464000
                                   available                            00465000
SPOFCheck_CUI_HWInfo_NAvail EQU X'02' The hardware information needed  *00466000
                                   to check the control unit           *00467000
                                   interfaces for a single point of    *00468000
                                   failure is not available             00469000
SPOFCheck_DEVNChar    DS    CL5    The device number of the device in  *00470000
                                   character form                       00471000
SPOFCheck_VOLSER      DS    CL6    The VOLSER of the checked device     00472000
*                                                                       00473000
* ********************************************************************  00474000
* * The CU interface numbers and compare channel components words    *  00475000
* ********************************************************************  00476000
*                                                                       00477000
*                                                                       00478000
SPOFCheck_Chp_Diag    DS    BL12   Resulting host specific compare     *00479000
                                   channel components result word       00480000
                      ORG   SPOFCheck_Chp_Diag                          00481000
SPOFCheck_Chp_Diag_Char DS  CL12   Resulting host specific compare     *00482000
                                   channel components result word       00483000
SPOFCheck_CUI_Diag    DS    BL2    Control unit interface Area          00484000
                      ORG   SPOFCheck_CUI_Diag                          00485000
SPOFCheck_Num_Com_CUI DS    X      The number of common control unit   *00486000
                                   interfaces                           00487000
SPOFCheck_Num_Psb_CUI DS    X      The number of possible control unit *00488000
                                   interfaces in common                 00489000
                      DS    BL2    Reserved                             00490000
*                                                                       00491000
* ********************************************************************  00492000
* *                                                                  *  00493000
* * Switch Diagnostic Area                                           *  00494000
* * Contains additional information regarding the common switch      *  00495000
* * hardware components shared by all the online paths.              *  00496000
* *                                                                     00497000
* ********************************************************************  00498000
*                                                                       00499000
*                                                                       00500000
SPOFCheck_Switch_Diag DS    CL224  Switch diagnostic area               00501000
                      ORG   SPOFCheck_Switch_Diag                       00502000
SPOFCheck_SD_PND      DS    CL30   The physical switch's node          *00503000
                                   descriptor dot qualified             00504000
SPOFCheck_SD_Count    DS    X      The total number of hardware        *00505000
                                   components in common among the      *00506000
                                   online paths.                        00507000
                      DS    CL1    Reserved                             00508000
SPOFCheck_SD_HWPart_Name DS CL24   The array of common hardware        *00509000
                                   component names, obtained from the  *00510000
                                   switch                               00511000
                      ORG   SPOFCheck_Switch_Diag+224                   00512000
                      DS    CL16   Reserved                             00513000
SPOFCheckExt          DS    0C     Start of SPOF Check Extensions       00514000
*                                                                       00515000
* ********************************************************************  00516000
* * The number of checks in a SPOFCheck                              *  00517000
* ********************************************************************  00518000
*                                                                       00519000
*                                                                       00520000
SPOFCheck_Number      EQU   11     There are 11 types of checks in a   *00521000
                                   SPOFCheck                            00522000
.L0006                ANOP                                              00523000
                      AIF   ('&SPOFGroupCheck' EQ 'NO').L000A           00524000
                      AIF   ('&DSECT' EQ 'YES').L000B                   00525000
                      AIF   ('&SPOFGroupCheck' NE 'YES').L000A          00526000
.L000B                ANOP                                              00527000
*                                                                       00528000
* ********************************************************************  00529000
* * SPOFGroupCheck maps the single point of failure information      *  00530000
* * between two devices.                                             *  00531000
* ********************************************************************  00532000
*                                                                       00533000
*                                                                       00534000
                      AIF   ('&DSECT' EQ 'YES').L000C                   00535000
SPOFGroupCheck        DS    0F                                          00536000
                      AGO   .L000D                                      00537000
.L000C                ANOP                                              00538000
SPOFGroupCheck        DSECT                                             00539000
.L000D                ANOP                                              00540000
*                                                                       00541000
*                                      Group Check mapping              00542000
*                                                                       00543000
* ********************************************************************  00544000
* * Checks for single points of failure                              *  00545000
* ********************************************************************  00546000
*                                                                       00547000
*                                                                       00548000
SPOFGroupCheck_Mask64 DS    BL8    Mask of single points of failure in *00549000
                                   64 bit form                          00550000
                      ORG   SPOFGroupCheck_Mask64                       00551000
SPOFGroupCheck_32Mask1 DS   BL4    Mask of single points of failure in *00552000
                                   32 bit form                          00553000
                      ORG   SPOFGroupCheck_32Mask1                      00554000
SPOFGroupCheck_16Mask1 DS   BL2    Mask of single points of failure in *00555000
                                   16 bit form                          00556000
                      ORG   SPOFGroupCheck_16Mask1                      00557000
SPOFGroupCheck_8Mask1 DS    B      Mask of single points failure in 8  *00558000
                                   bit form                             00559000
*  Bit definitions:                                                     00560000
SPOFGroupCheck_SameDevice EQU X'80' Devices are the same device         00561000
SPOFGroupCheck_ShareLSS EQU X'40'  Devices share a logical subsystem.  *00562000
                                   This check has been discontinued,   *00563000
                                   and as a result, this field will    *00564000
                                   never be set ON.                     00565000
SPOFGroupCheck_SharePhysCU EQU X'20' Devices share a physical control  *00566000
                                   unit                                 00567000
SPOFGroupCheck_ShareSwitch EQU X'10' All online paths of both devices  *00568000
                                   go through one switch                00569000
SPOFGroupCheck_HostCHPSPF EQU X'08' All chpids share a single point of *00570000
                                   failure, on the host side in both   *00571000
                                   devices                              00572000
SPOFGroupCheck_CUInterSPF EQU X'04' All control unit interfaces share  *00573000
                                   a single point of failure for both  *00574000
                                   devices                              00575000
SPOFGroupCheck_SwCmHdwComp EQU X'02' All online paths share one or     *00576000
                                   more common switch hardware         *00577000
                                   components                           00578000
*                                                                       00579000
* ********************************************************************  00580000
* * If the 'N' bits are on the check for single points of failure    *  00581000
* * could not be done, due to check failure.                         *  00582000
* ********************************************************************  00583000
*                                                                       00584000
*                                                                       00585000
                      ORG   SPOFGroupCheck_Mask64+8                     00586000
SPOFGroupCheck_NC_Mask64 DS BL8    Mask of single points of failure    *00587000
                                   that couldn't be performed           00588000
                      ORG   SPOFGroupCheck_NC_Mask64                    00589000
SPOFGroupCheck_NC_32Mask1 DS BL4   Mask of single points of failure in *00590000
                                   32 bit form                          00591000
                      ORG   SPOFGroupCheck_NC_32Mask1                   00592000
SPOFGroupCheck_NC_16Mask1 DS BL2   Mask of single points of failure in *00593000
                                   16 bit form                          00594000
                      ORG   SPOFGroupCheck_NC_16Mask1                   00595000
SPOFGroupCheck_NC_8Mask1 DS B      Mask of single points of failure in *00596000
                                   8 bit form                           00597000
*  Bit definitions:                                                     00598000
SPOFGroupCheck_NC_SameDevice EQU X'80' Devices are the same device      00599000
SPOFGroupCheck_NC_ShareLSS EQU X'40' Devices share a logical           *00600000
                                   subsystem. This field will never be *00601000
                                   set ON due to the discontinuation   *00602000
                                   of the LSS check.                    00603000
SPOFGroupCheck_NC_SharePhysCU EQU X'20' Devices share a physical       *00604000
                                   control unit                         00605000
SPOFGroupCheck_NC_ShareSwitch EQU X'10' All online paths of both       *00606000
                                   devices go through one switch        00607000
SPOFGroupCheck_NC_HostCHPSPF EQU X'08' All chpids share a single point *00608000
                                   of failure, on the host side in     *00609000
                                   both devices                         00610000
SPOFGroupCheck_NC_CUInterSPF EQU X'04' All control unit interfaces     *00611000
                                   share a single point of failure for *00612000
                                   both devices                         00613000
*                                                                       00614000
* ********************************************************************  00615000
* * Validity flags                                                   *  00616000
* ********************************************************************  00617000
*                                                                       00618000
*                                                                       00619000
                      ORG   SPOFGroupCheck_NC_Mask64+8                  00620000
SPOFGroupCheck_Flags  DS    B      Use Flags                            00621000
*  Bit definitions:                                                     00622000
SPOFGroupCheck_CHP_Diag_Vld EQU X'80' On if the CHP_Diag is valid       00623000
SPOFGroupCheck_CUI_Diag_Vld EQU X'40' On if the CUI_Diag is valid       00624000
SPOFGroupCheck_Ext_Present EQU X'20' One or more SPOF check extensions *00625000
                                   are present with this SPOF group    *00626000
                                   check                                00627000
                      DS    CL3    Reserved                             00628000
*                                                                       00629000
* ********************************************************************  00630000
* * The CU interface numbers and compare channel components words    *  00631000
* ********************************************************************  00632000
*                                                                       00633000
*                                                                       00634000
SPOFGroupCheck_Chp_Diag DS  BL12   Resulting host specific compare     *00635000
                                   channel components result word       00636000
                      ORG   SPOFGroupCheck_Chp_Diag                     00637000
SPOFGroupCheck_Chp_Diag_Char DS CL12 Resulting host specific compare   *00638000
                                   channel components result word       00639000
SPOFGroupCheck_CUI_Diag DS  BL2    Resulting and of Attached Node      *00640000
                                   Descriptor tags                      00641000
                      ORG   SPOFGroupCheck_CUI_Diag                     00642000
SPOFGroupCheck_Num_Com_CUI DS X    The number of common control unit   *00643000
                                   interfaces                           00644000
SPOFGroupCheck_Num_Psb_CUI DS X    The number of possible control unit *00645000
                                   interfaces in common                 00646000
                      DS    BL2    Reserved                             00647000
*                                                                       00648000
* ********************************************************************  00649000
* *                                                                  *  00650000
* * Group Switch Diagnostic Area                                     *  00651000
* * Contains additional information regarding the common switch      *  00652000
* * hardware components shared by all the online paths.              *  00653000
* *                                                                     00654000
* ********************************************************************  00655000
*                                                                       00656000
*                                                                       00657000
SPOFGroupCheck_Switch_Diag DS CL224 Switch diagnostic area              00658000
                      ORG   SPOFGroupCheck_Switch_Diag                  00659000
SPOFGroupCheck_SD_PND DS    CL30   The physical switch's node          *00660000
                                   descriptor dot qualified             00661000
SPOFGroupCheck_SD_Count DS  X      The total number of hardware        *00662000
                                   components in common among the      *00663000
                                   online paths.                        00664000
                      DS    CL1    Reserved                             00665000
SPOFGroupCheck_SD_HWPart_Name DS CL24 The array of common hardware     *00666000
                                   component names, obtained from the  *00667000
                                   switch                               00668000
                      ORG   SPOFGroupCheck_Switch_Diag+224              00669000
                      DS    CL16   Reserved                             00670000
SPOFGroupCheckExt     DS    0C     SPOF Check Extension                 00671000
*                                                                       00672000
* ********************************************************************  00673000
* * The number of checks in a SPOFGroupCheck                         *  00674000
* ********************************************************************  00675000
*                                                                       00676000
*                                                                       00677000
SPOFGroupCheck_Number EQU   7      There are 7 types of checks in a    *00678000
                                   SPOFGroupCheck                       00679000
.L000A                ANOP                                              00680000
                      AIF   ('&SPOFChk_Extension' EQ 'NO').L000E        00681000
                      AIF   ('&DSECT' EQ 'YES').L000F                   00682000
                      AIF   ('&SPOFChk_Extension' NE 'YES').L000E       00683000
.L000F                ANOP                                              00684000
*                                                                       00685000
* ********************************************************************  00686000
* *                                                                  *  00687000
* * SPOF Check Extension                                             *  00688000
* *                                                                  *  00689000
* * The SPOF check extension allows for the introduction of new SPOF *  00690000
* * checks without increasing the size of either the SPOFCheck or    *  00691000
* * the SPOFGroupCheck.                                              *  00692000
* *                                                                  *  00693000
* * Each SPOF check extension contains a header and specific data    *  00694000
* * associated with the SPOF check the extension represents.  The    *  00695000
* * SPOFChkE_Id identifies the type of extension and the data        *  00696000
* * associated for the given extension.                              *  00697000
* *                                                                  *  00698000
* * Each SPOFCheck and/or SPOFGroupCheck can contain one or more     *  00699000
* * SPOF check extensions.                                           *  00700000
* *                                                                  *  00701000
* *                                                                     00702000
* ********************************************************************  00703000
*                                                                       00704000
*                                                                       00705000
                      AIF   ('&DSECT' EQ 'YES').L0010                   00706000
SPOFChk_Extension     DS    0H     SPOF check extension                 00707000
                      AGO   .L0011                                      00708000
.L0010                ANOP                                              00709000
SPOFChk_Extension     DSECT        SPOF check extension                 00710000
.L0011                ANOP                                              00711000
SPOFChkE_Eye          DS    CL8    Extension eye catcher                00712000
SPOFChkE_Id           DS    X      Extension identifier                 00713000
SPOFChkE_Flags        DS    B      Extension flags                      00714000
*  Bit definitions:                                                     00715000
SPOFChkE_Valid        EQU   X'80'  Valid flag - when '1'b indicates    *00716000
                                   this SPOF check extension is valid  *00717000
                                   i.e. contains valid data - when     *00718000
                                   '0'b indicates this SPOF check      *00719000
                                   extension is invalid i.e. does not  *00720000
                                   contain valid data                   00721000
SPOFChkE_Last         EQU   X'40'  Last flag - when '1'b indicates     *00722000
                                   this SPOF check extension is the    *00723000
                                   last SPOF check extension present   *00724000
                                   in the given SPOF check or SPOF     *00725000
                                   group check - when '0'b indicates   *00726000
                                   this SPOF check extension is not    *00727000
                                   the last SPOF check extension       *00728000
                                   present in the given SPOF check or  *00729000
                                   SPOF group check                     00730000
                      DS    CL2    Reserved                             00731000
SPOFChkE_Length       DS    H      Length of this extension             00732000
                      DS    CL2    Reserved                             00733000
SPOFChkE_Data         DS    0C     SPOF data associated with this      *00734000
                                   extension                            00735000
*                                                                       00736000
* ********************************************************************  00737000
* *                                                                  *  00738000
* * SPOF Check Extension Control Unit Interface Area                 *  00739000
* * Contains common component descriptor information as returned by  *  00740000
* * the storage device.                                              *  00741000
* *                                                                  *  00742000
* * The SPOF Check Extension Control Unit Interface area is          *  00743000
* * identified by setting the SPOFChkE_id in the SPOFCheck_Extension *  00744000
* * to the constant SPOFChk_Ext_CUI_Id.                              *  00745000
* *                                                                  *  00746000
* * The number of descriptions present in the                        *  00747000
* * SPOFChk_Ext_CUI_Descriptions array can be up to four (4),        *  00748000
* * however, the actual number is described in the                   *  00749000
* * SPOFCheck_Num_Com_CUI variable.                                  *  00750000
* *                                                                     00751000
* ********************************************************************  00752000
*                                                                       00753000
*                                                                       00754000
                      ORG   SPOFChkE_Data                               00755000
SPOFChk_Ext_CUI_Area  DS    0X                                          00756000
SPOFChk_Ext_CUI_Descriptions DS CL62 An array of 4, 62 byte common     *00757000
                                   component descriptions               00758000
*                                                                       00759000
* ********************************************************************  00760000
* *                                                                  *  00761000
* * SPOF Check Extension Constants                                   *  00762000
* *                                                                     00763000
* ********************************************************************  00764000
*                                                                       00765000
*                                                                       00766000
SPOFCHK_Ext_Eye_0TO3  EQU   C'SPOF' This is the first 4-byte segment   *00767000
                                   of an 8-byte constant. Eye catcher  *00768000
                                   for the SPOF check extension         00769000
SPOFCHK_Ext_Eye_4TO7  EQU   C'CEXT' This is the second 4-byte segment  *00770000
                                   of an 8-byte constant. Eye catcher  *00771000
                                   for the SPOF check extension         00772000
SPOFChk_Ext_CUI_Id    EQU   1      SPOF check extension control unit   *00773000
                                   interface area identification        00774000
                      ORG   ,                                           00775000
.L000E                ANOP                                              00776000
                      AIF   ('&SPOFCheck_CHP_Diag_MASK_Type' EQ 'NO').L*00777000
               0012                                                     00778000
                      AIF   ('&DSECT' EQ 'YES').L0013                   00779000
                      AIF   ('&SPOFCheck_CHP_Diag_MASK_Type' NE 'YES').*00780000
               L0012                                                    00781000
.L0013                ANOP                                              00782000
*                                                                       00783000
* ********************************************************************  00784000
* * Define the mapping of the Component Bits in the CHP_Diag Area    *  00785000
* * (for fields: SPOFCheck_Chp_Diag and SPOFGroupCheck_Chp_Diag)     *  00786000
* ********************************************************************  00787000
*                                                                       00788000
*                                                                       00789000
                      AIF   ('&DSECT' EQ 'YES').L0014                   00790000
SPOFCheck_CHP_Diag_MASK_Type DS 0X Define Component Bits in CHP_Diag   *00791000
                                   area                                 00792000
                      AGO   .L0015                                      00793000
.L0014                ANOP                                              00794000
SPOFCheck_CHP_Diag_MASK_Type DSECT   Define Component Bits in CHP_Diag *00795000
                                   area                                 00796000
.L0015                ANOP                                              00797000
SPOFCheck_CHP_Diag_Mask_BYTE01 DS CL1 1st Byte                          00798000
*  Bit definitions:                                                     00799000
SPOFCheck_CHP_Diag_Mask_BYTE01_Bit1 EQU X'80' IGNORED                   00800000
SPOFCheck_CHP_Diag_Mask_BYTE01_Bit2 EQU X'40' IGNORED                   00801000
SPOFCheck_CHP_Diag_Mask_BOOK EQU X'20' Processor Drawer                 00802000
SPOFCheck_CHP_Diag_Mask_BYTE01_Bit4 EQU X'10' IGNORED                   00803000
SPOFCheck_CHP_Diag_Mask_BYTE01_Bit5 EQU X'08' IGNORED                   00804000
SPOFCheck_CHP_Diag_Mask_FANOUT EQU X'04' Fanout                         00805000
SPOFCheck_CHP_Diag_Mask_DOMAIN EQU X'02' I/O Domain                     00806000
SPOFCheck_CHP_Diag_Mask_CHANNEL EQU X'01' Channel Card                  00807000
SPOFCheck_CHP_Diag_Mask_BYTE02 DS CL1 2nd Byte                          00808000
SPOFCheck_CHP_Diag_Mask_BYTE03 DS CL1 3rd Byte                          00809000
SPOFCheck_CHP_Diag_Mask_BYTE04 DS CL1 4th Byte                          00810000
SPOFCheck_CHP_Diag_Mask_BYTE05 DS CL1 5th Byte                          00811000
SPOFCheck_CHP_Diag_Mask_BYTE06 DS CL1 6th Byte                          00812000
SPOFCheck_CHP_Diag_Mask_BYTE07 DS CL1 7th Byte                          00813000
SPOFCheck_CHP_Diag_Mask_BYTE08 DS CL1 8th Byte                          00814000
SPOFCheck_CHP_Diag_Mask_BYTE09 DS CL1 9th Byte                          00815000
SPOFCheck_CHP_Diag_Mask_BYTE10 DS CL1 10th Byte                         00816000
SPOFCheck_CHP_Diag_Mask_BYTE11 DS CL1 11th Byte                         00817000
SPOFCheck_CHP_Diag_Mask_BYTE12 DS CL1 12th Byte                         00818000
SPOFCheck_CHP_Diag_Mask_END DS 0C  Terminate Str                        00819000
.L0012                ANOP                                              00820000
                      AIF   ('&ZCBPRINT' EQ 'NO').P3                    00821000
                      AIF   ('&LIST' EQ 'YES').P4                       00822000
.P3                   ANOP                                              00823000
                      POP   PRINT                                       00824000
.P4                   ANOP                                              00825000
.P_EXIT               ANOP                                              00826000
                      MEND                                              00827000
**/ IOSDSPOF_2:;                                                        00828000
* %IOSDSPOF_INCLUDED = 'YES';                                           00829000
* %DCL ZCBPRINT CHAR EXT;                                               00830000
* %DEACTIVATE ZCBPRINT;                                                 00831000
* %DCL IOSDSPOF_LIST CHAR EXT;                                          00832000
* %DEACTIVATE IOSDSPOF_LIST;                                            00833000
* %IF IOSDSPOF_LIST ^= 'NO' &                                           00834000
*    ZCBPRINT ^= 'NO' %THEN                                             00835000
*   %GOTO IOSDSPOF_3;                                                   00836000
*   @LIST PUSH NOECHO;                                                  00837000
*   @LIST NOASSEMBLE NOECHO;                                            00838000
*   @LIST OFF C NOECHO;                                                 00839000
* %IOSDSPOF_3:;                                                         00840000
*/* Start of PL/X Source                                             */ 00841000
*/********************************************************************/ 00842000
*/* Return codes for the IOSSPOF service invocation                  */ 00843000
*/********************************************************************/ 00844000
*DCL SPOF_RC_Ok Fixed(32) Constant(0);                                  00845000
*DCL SPOF_RC_SomeChecksFailed Fixed(32) Constant(4);                    00846000
*DCL SPOF_RC_SPOFFound Fixed(32) Constant(8);                           00847000
*DCL SPOF_RC_ProgramError Fixed(32) Constant(12);                       00848000
*DCL SPOF_RC_EnvironError Fixed(32) Constant(16);                       00849000
*DCL SPOF_RC_SystemError Fixed(32) Constant(32);                        00850000
*                                                                       00851000
*/********************************************************************/ 00852000
*/* Reason codes for the IOSSPOF service invocation                  */ 00853000
*/********************************************************************/ 00854000
*/********************************************************************/ 00855000
*/* Return code 08                                                   */ 00856000
*/********************************************************************/ 00857000
*DCL SPOF_RSN_AllDevicesFound Fixed(32) Constant(0);                    00858000
*DCL SPOF_RSN_DeviceNotFound Fixed(32) Constant(1);                     00859000
*/********************************************************************/ 00860000
*/* Return code 12                                                   */ 00861000
*/********************************************************************/ 00862000
*DCL SPOF_RSN_InvalidParmListVers Fixed(32) Constant(1);                00863000
*DCL SPOF_RSN_InvalidCount Fixed(32) Constant(2);                       00864000
*DCL SPOF_RSN_ImproperModes Fixed(32) Constant(3);                      00865000
*DCL SPOF_RSN_ImproperDevlistEntry Fixed(32) Constant(4);               00866000
*DCL SPOF_RSN_BadParmListAccess Fixed(32) Constant(5);                  00867000
*/********************************************************************/ 00868000
*/* Return code 16                                                   */ 00869000
*/********************************************************************/ 00870000
*DCL SPOF_RSN_IOSSPOFNotAvail  Fixed(32) Constant(1);                   00871000
*DCL SPOF_RSN_HlthChkrNotAvail  Fixed(32) Constant(2);                  00872000
*                                                                       00873000
*@EJECT;                                                       /*@04A*/ 00874000
*/********************************************************************/ 00875000
*/* SPOFArea is the output structure put into the SPOFAREA(x) keyword*/ 00876000
*/* for a IOSSPOF service call.                                      */ 00877000
*/********************************************************************/ 00878000
*%IF SPOFArea_Based = '' %THEN                                          00879000
*%DO;                                                                   00880000
*  %SPOFArea_Based = 'based'; /* Base on nothing                     */ 00881000
*%END;                                                                  00882000
*%DO;                                                                   00883000
*DCL 1 SPOFArea Bdy(DWord) SPOFArea_Based, /* IOSSPOF output area       00884000
*                              mapping                               */ 00885000
*%END;                                                                  00886000
*      3 SPOFArea_Header Bdy(DWord), /* SPOFArea Header              */ 00887000
*        5 SPOFArea_EyeCatch Char(8), /* Eye Catcher 'SPOFAREA'      */ 00888000
*        5 SPOFArea_Version Fixed(8), /* Version level               */ 00889000
*        5 SPOFArea_HdrLen Fixed(8), /* Length of the SPOFArea header*/ 00890000
*        5 SPOFArea_SubPool Fixed(8), /* Subpool of SPOFArea         */ 00891000
*        5 *                Fixed(8), /* Reserved                    */ 00892000
*        5 SPOFArea_Len  Fixed(32), /* Length of SPOFArea, including    00893000
*                              header storage and entry storage      */ 00894000
*        5 SPOFArea_NumEntries Fixed(31), /* Number of entries in       00895000
*                              SPOFArea_EntriesAddr                  */ 00896000
*        5 *             Char(16), /* Reserved                       */ 00897000
*        5 SPOFArea_SumChecksAddr Ptr(31), /* Pointer to a SPOFCheck    00898000
*                              structure that contains a summary of     00899000
*                              single points of failure to all          00900000
*                              devices                               */ 00901000
*        5 SPOFArea_GroupChecksAddr Ptr(31), /* Pointer to a            00902000
*                              SPOFGroupCheck structure that contains   00903000
*                              the hardware isolation failures of       00904000
*                              devices in DEVN1 DEVN2 or VOLSER1        00905000
*                              and VOLSER2                           */ 00906000
*      3 SPOFArea_EntriesAddr (*) Ptr(31); /* Array of pointers to      00907000
*                              SPOFCheck structures that contains       00908000
*                              the single point of failure information  00909000
*                              of the devices passed in              */ 00910000
*Dcl SPOFArea_EyeCatchConst Char(8) Constant('SPOFAREA'); /* The eye    00911000
*                              catcher of the SPOFArea               */ 00912000
*Dcl SPOFArea_VersionCurrent Fixed(8) Constant(1); /* Current version   00913000
*                              number                                */ 00914000
*Dcl SPOFArea_VersionOne   Fixed(8) Constant(1); /* Current version     00915000
*                              is version one                        */ 00916000
*                                                                       00917000
*@EJECT;                                                       /*@04A*/ 00918000
*/********************************************************************/ 00919000
*/* SPOFCheck maps the single point of failure information passed    */ 00920000
*/* from the IOSSPOF service.                                        */ 00921000
*/********************************************************************/ 00922000
*%IF SPOFCheck_Based = '' %THEN                                         00923000
*%DO;                                                                   00924000
*  %SPOFCheck_Based = 'based(SPOFArea_SumChecksAddr)'; /* Base on the   00925000
*                              summary check                         */ 00926000
*%END;                                                                  00927000
*%DO;                                                                   00928000
*DCL 1 SPOFCheck Bdy(word) SPOFCheck_Based, /* Check description        00929000
*                              mapping                               */ 00930000
*%END;                                                                  00931000
*/********************************************************************/ 00932000
*/* Checks for single points of failure                              */ 00933000
*/********************************************************************/ 00934000
*      3 SPOFCheck_Mask64   Bit(64), /* Mask of single points of        00935000
*                              failure in 64 bit form                */ 00936000
*        5 SPOFCheck_32Mask1 Bit(32), /* Mask of single points of       00937000
*                              failure in 32 bit form                */ 00938000
*          7 SPOFCheck_16Mask1 Bit(16), /* Mask of single points of     00939000
*                              failure in 16 bit form                */ 00940000
*           9 SPOFCheck_8Mask1 Bit(8), /* Mask of single points of      00941000
*                              failure in 8 bit form                 */ 00942000
*           11 SPOFCheck_NotFound    Bit(1), /* Device does not exist   00943000
*                                                                    */ 00944000
*           11 SPOFCheck_NotOnline   Bit(1), /* Device is not online */ 00945000
*           11 SPOFCheck_NoPaths     Bit(1), /* Device has no paths     00946000
*                              varied online                         */ 00947000
*           11 SPOFCheck_OnePath     Bit(1), /* Device has only one     00948000
*                              path varied online                    */ 00949000
*           11 SPOFCheck_OneSwitch   Bit(1), /* All online paths go     00950000
*                              through one switch                    */ 00951000
*           11 SPOFCheck_NoPrefPaths Bit(1), /* Device has only         00952000
*                              non preferred paths online            */ 00953000
*           11 SPOFCheck_OnlyPrefPaths Bit(1), /* Device has only       00954000
*                              preferred paths online                */ 00955000
*           11 SPOFCheck_OnePrefPath Bit(1), /* Device has only one     00956000
*                              preferred path online                 */ 00957000
*           9 SPOFCheck_8Mask2 Bit(8), /* Mask of single points of      00958000
*                              failure in 8 bit form                 */ 00959000
*           11 SPOFCheck_HostCHPSPF  Bit(1), /* All chpids share a      00960000
*                              single point of failure, on the host  */ 00961000
*           11 SPOFCheck_CUInterSPF  Bit(1), /* All control unit        00962000
*                              interfaces share a single point of       00963000
*                              failure                               */ 00964000
*           11 SPOFCheck_SwCmHdwComp Bit(1), /* All online paths share  00965000
*                              one or more common switch hardware       00966000
*                              components                        @03A*/ 00967000
*/********************************************************************/ 00968000
*/* If the 'N' bits are on the check for single points of failure    */ 00969000
*/* could not be done, due to check failure.                         */ 00970000
*/********************************************************************/ 00971000
*      3 SPOFCheck_NC_Mask64   Bit(64), /* Mask of single points of     00972000
*                              failure in 64 bit that couldn't be       00973000
*                              performed                             */ 00974000
*        5 SPOFCheck_NC_32Mask1 Bit(32), /* Mask of single points of    00975000
*                              failure in 32 bit form                */ 00976000
*          7 SPOFCheck_NC_16Mask1 Bit(16), /* Mask of single points of  00977000
*                              failure in 16 bit form                */ 00978000
*           9 SPOFCheck_NC_8Mask1    Bit(8), /* Mask of single points   00979000
*                              of failure in 8 bit form              */ 00980000
*           11 SPOFCheck_NNotFound    Bit(1), /* Device does not        00981000
*                              exist                                 */ 00982000
*           11 SPOFCheck_NC_NotOnline   Bit(1), /* Device is not online 00983000
*                                                                    */ 00984000
*           11 SPOFCheck_NC_NoPaths     Bit(1), /* Device has no paths  00985000
*                              varied online                         */ 00986000
*           11 SPOFCheck_NC_OnePath     Bit(1), /* Device has only one  00987000
*                              path varied online                    */ 00988000
*           11 SPOFCheck_NC_OneSwitch   Bit(1), /* All online paths go  00989000
*                              through one switch                    */ 00990000
*           11 SPOFCheck_NC_NoPrefPaths Bit(1), /* Device has only      00991000
*                              non preferred paths online            */ 00992000
*           11 SPOFCheck_NC_OnlyPrefPaths Bit(1), /* Device has only    00993000
*                              preferred paths online                */ 00994000
*           11 SPOFCheck_NC_OnePrefPath Bit(1), /* Device has only one  00995000
*                              preferred path online                 */ 00996000
*           9 SPOFCheck_NC_8Mask2  Bit(8), /* Mask of single points of  00997000
*                              failure in 8 bit form                 */ 00998000
*           11 SPOFCheck_NC_HostCHPSPF  Bit(1), /* All chpids share a   00999000
*                              single point of failure, on the host  */ 01000000
*           11 SPOFCheck_NC_CUInterSPF  Bit(1), /* All control unit     01001000
*                              interfaces share a single point of       01002000
*                              failure                               */ 01003000
*/********************************************************************/ 01004000
*/* Validity flags                                                   */ 01005000
*/********************************************************************/ 01006000
*      3 SPOFCheck_Flags     Bit(8), /* Use Flags                    */ 01007000
*        5 SPOFCheck_DEVNCH_Valid Bit(1),/* Is the devnchar valid    */ 01008000
*        5 SPOFCheck_VOLSER_Valid Bit(1),/* Is the VOLSER valid      */ 01009000
*        5 SPOFCheck_CHP_Diag_Vld Bit(1),/* Is the CHP_Diag valid    */ 01010000
*        5 SPOFCheck_CUI_Diag_Vld Bit(1),/* Is the CUI_Diag valid    */ 01011000
*        5 SPOFCheck_Ext_Present  Bit(1),                               01012000
*                                   /* One or more SPOF check           01013000
*                                      extensions are present with this 01014000
*                                      SPOF check                @04A*/ 01015000
*        5 SPOFCheck_CHP_HWInfo_NAvail Bit(1),                          01016000
*                                   /* The hardware information needed  01017000
*                                      to check the channel paths       01018000
*                                      for a single point of failure    01019000
*                                      is not available          @07A*/ 01020000
*        5 SPOFCheck_CUI_HWInfo_NAvail Bit(1),                          01021000
*                                   /* The hardware information needed  01022000
*                                      to check the control unit        01023000
*                                      interfaces for a single point    01024000
*                                      of failure is not available      01025000
*                                                                @07A*/ 01026000
*      3 SPOFCheck_DEVNChar  Char(5), /* The device number of the       01027000
*                              device in character form              */ 01028000
*      3 SPOFCheck_VOLSER    Char(6), /* The VOLSER of the checked      01029000
*                              device                                */ 01030000
*/********************************************************************/ 01031000
*/* The CU interface numbers and compare channel components words    */ 01032000
*/********************************************************************/ 01033000
*      3 SPOFCheck_Chp_Diag  Bit(96), /* Resulting host specific        01034000
*                              compare channel components result word   01035000
*                                                                    */ 01036000
*        5 SPOFCheck_Chp_Diag_Char Char(12), /* Resulting host specific 01037000
*                              compare channel components result word   01038000
*                                                                    */ 01039000
*      3 SPOFCheck_CUI_Diag  Bit(16), /* Control unit interface Area */ 01040000
*        5 SPOFCheck_Num_Com_CUI Fixed(8),/* The number of common       01041000
*                              control unit interfaces               */ 01042000
*        5 SPOFCheck_Num_Psb_CUI Fixed(8),/* The number of possible     01043000
*                              control unit interfaces in common     */ 01044000
*      3 *                    Bit(16), /* Reserved                   */ 01045000
*/********************************************************************/ 01046000
*/*                                                                  */ 01047000
*/* Switch Diagnostic Area                                           */ 01048000
*/* Contains additional information regarding the common switch      */ 01049000
*/* hardware components shared by all the online paths.              */ 01050000
*/*                                                              @03A*/ 01051000
*/********************************************************************/ 01052000
*      3 SPOFCheck_Switch_Diag,     /* Switch diagnostic area    @03A*/ 01053000
*        5 SPOFCheck_SD_PND Char(30),                                   01054000
*                                   /* The physical switch's node       01055000
*                                      descriptor dot qualified  @03A*/ 01056000
*        5 SPOFCheck_SD_Count Fixed(8),                                 01057000
*                                   /* The total number of hardware     01058000
*                                      components in common among the   01059000
*                                      online paths.             @03A*/ 01060000
*        5 * Char(1),               /* Reserved                  @03A*/ 01061000
*        5 SPOFCheck_SD_HWPart_Name(8) Char(24),                        01062000
*                                   /* The array of common hardware     01063000
*                                      component names, obtained from   01064000
*                                      the switch                @03A*/ 01065000
*      3 *         Char(16),        /* Reserved                  @04C*/ 01066000
*      3 SPOFCheckExt Char(0);      /* Start of SPOF Check Extensions   01067000
*                                                                @04A*/ 01068000
*                                                                       01069000
*                                                                       01070000
*                                                                       01071000
*DCL SPOFCheck_Len Constant(Length(SPOFCheck));                /*@P1A*/ 01072000
*/********************************************************************/ 01073000
*/* The number of checks in a SPOFCheck                              */ 01074000
*/********************************************************************/ 01075000
*DCL SPOFCheck_Number Fixed(32) Constant(11); /* There are 11 types     01076000
*                              of checks in a SPOFCheck          @03C*/ 01077000
*                                                                       01078000
*@EJECT;                                                       /*@04A*/ 01079000
*/********************************************************************/ 01080000
*/* SPOFGroupCheck maps the single point of failure information      */ 01081000
*/* between two devices.                                             */ 01082000
*/********************************************************************/ 01083000
*%IF SPOFGroupCheck_Based = '' %THEN                                    01084000
*%DO;                                                                   01085000
*  %SPOFGroupCheck_Based = 'based(SPOFArea_GroupChecksAddr)'; /* Base   01086000
*                              on the Group check address            */ 01087000
*%END;                                                                  01088000
*%DO;                                                                   01089000
*DCL 1 SPOFGroupCheck Bdy(word) SPOFGroupCheck_Based, /* Group Check    01090000
*                              mapping                               */ 01091000
*%END;                                                                  01092000
*/********************************************************************/ 01093000
*/* Checks for single points of failure                              */ 01094000
*/********************************************************************/ 01095000
*      3 SPOFGroupCheck_Mask64   Bit(64), /* Mask of single points of   01096000
*                              failure in 64 bit form                */ 01097000
*        5 SPOFGroupCheck_32Mask1  Bit(32), /* Mask of single points of 01098000
*                              failure in 32 bit form                */ 01099000
*          7 SPOFGroupCheck_16Mask1 Bit(16),/* Mask of single points of 01100000
*                              failure in 16 bit form                */ 01101000
*           9 SPOFGroupCheck_8Mask1 Bit(8), /* Mask of single points    01102000
*                              failure in 8 bit form                 */ 01103000
*           11 SPOFGroupCheck_SameDevice  Bit(1), /* Devices are the    01104000
*                              same device                           */ 01105000
*           11 SPOFGroupCheck_ShareLSS    Bit(1), /* Devices share a    01106000
*                              logical subsystem. This check has been   01107000
*                              discontinued, and as a result, this      01108000
*                              field will never be set ON.       @06C*/ 01109000
*           11 SPOFGroupCheck_SharePhysCU Bit(1), /* Devices share a    01110000
*                              physical control unit                 */ 01111000
*           11 SPOFGroupCheck_ShareSwitch Bit(1), /* All online paths   01112000
*                              of both devices go through one switch */ 01113000
*           11 SPOFGroupCheck_HostCHPSPF  Bit(1), /* All chpids share   01114000
*                              a single point of failure, on the host   01115000
*                              side in both devices                  */ 01116000
*           11 SPOFGroupCheck_CUInterSPF  Bit(1), /* All control unit   01117000
*                              interfaces share a single point of       01118000
*                              failure for both devices              */ 01119000
*           11 SPOFGroupCheck_SwCmHdwComp Bit(1), /* All online paths   01120000
*                              share one or more common switch hardware 01121000
*                              components                        @03A*/ 01122000
*/********************************************************************/ 01123000
*/* If the 'N' bits are on the check for single points of failure    */ 01124000
*/* could not be done, due to check failure.                         */ 01125000
*/********************************************************************/ 01126000
*      3 SPOFGroupCheck_NC_Mask64   Bit(64), /* Mask of single points   01127000
*                              of failure that couldn't be performed */ 01128000
*        5 SPOFGroupCheck_NC_32Mask1 Bit(32), /* Mask of single points  01129000
*                              of failure in 32 bit form             */ 01130000
*         7 SPOFGroupCheck_NC_16Mask1 Bit(16), /* Mask of single points 01131000
*                              of failure in 16 bit form             */ 01132000
*           9 SPOFGroupCheck_NC_8Mask1 Bit(8), /* Mask of single points 01133000
*                              of failure in 8 bit form              */ 01134000
*           11 SPOFGroupCheck_NC_SameDevice  Bit(1), /* Devices are the 01135000
*                              same device                           */ 01136000
*           11 SPOFGroupCheck_NC_ShareLSS    Bit(1), /* Devices share a 01137000
*                              logical subsystem. This field will never 01138000
*                              be set ON due to the discontinuation     01139000
*                              of the LSS check.                 @06C*/ 01140000
*           11 SPOFGroupCheck_NC_SharePhysCU Bit(1), /* Devices share a 01141000
*                              physical control unit                 */ 01142000
*           11 SPOFGroupCheck_NC_ShareSwitch Bit(1),/* All online paths 01143000
*                              of both devices go through one switch */ 01144000
*           11 SPOFGroupCheck_NC_HostCHPSPF  Bit(1),/* All chpids share 01145000
*                              a single point of failure, on the host   01146000
*                              side in both devices                  */ 01147000
*           11 SPOFGroupCheck_NC_CUInterSPF  Bit(1),/* All control unit 01148000
*                              interfaces share a single point of       01149000
*                              failure for both devices              */ 01150000
*/********************************************************************/ 01151000
*/* Validity flags                                                   */ 01152000
*/********************************************************************/ 01153000
*      3 SPOFGroupCheck_Flags     Bit(8),/* Use Flags                */ 01154000
*        5 SPOFGroupCheck_CHP_Diag_Vld Bit(1),/* On if the CHP_Diag is  01155000
*                              valid                                 */ 01156000
*        5 SPOFGroupCheck_CUI_Diag_Vld Bit(1),/* On if the CUI_Diag is  01157000
*                              valid                                 */ 01158000
*        5 SPOFGroupCheck_Ext_Present  Bit(1),                          01159000
*                                   /* One or more SPOF check           01160000
*                                      extensions are present with this 01161000
*                                      SPOF group check          @04A*/ 01162000
*      3 *          Char(3),/* Reserved                              */ 01163000
*/********************************************************************/ 01164000
*/* The CU interface numbers and compare channel components words    */ 01165000
*/********************************************************************/ 01166000
*      3 SPOFGroupCheck_Chp_Diag  Bit(96), /* Resulting host specific   01167000
*                              compare channel components result word   01168000
*                                                                    */ 01169000
*        5 SPOFGroupCheck_Chp_Diag_Char  Char(12), /* Resulting host    01170000
*                              specific compare channel components      01171000
*                              result word                           */ 01172000
*                                                                       01173000
*      3 SPOFGroupCheck_CUI_Diag  Bit(16), /* Resulting and of          01174000
*                              Attached Node Descriptor tags         */ 01175000
*                                                                       01176000
*        5 SPOFGroupCheck_Num_Com_CUI Fixed(8),/* The number of common  01177000
*                              control unit interfaces               */ 01178000
*        5 SPOFGroupCheck_Num_Psb_CUI Fixed(8),/* The number of         01179000
*                              possible control unit interfaces in      01180000
*                              common                                */ 01181000
*      3 *                       Bit(16), /* Reserved                */ 01182000
*/********************************************************************/ 01183000
*/*                                                                  */ 01184000
*/* Group Switch Diagnostic Area                                     */ 01185000
*/* Contains additional information regarding the common switch      */ 01186000
*/* hardware components shared by all the online paths.              */ 01187000
*/*                                                              @03A*/ 01188000
*/********************************************************************/ 01189000
*      3 SPOFGroupCheck_Switch_Diag,                                    01190000
*                                   /* Switch diagnostic area    @03A*/ 01191000
*        5 SPOFGroupCheck_SD_PND Char(30),                              01192000
*                                   /* The physical switch's node       01193000
*                                      descriptor dot qualified  @03A*/ 01194000
*        5 SPOFGroupCheck_SD_Count Fixed(8),                            01195000
*                                   /* The total number of hardware     01196000
*                                      components in common among the   01197000
*                                      online paths.             @03A*/ 01198000
*        5 * Char(1),               /* Reserved                  @03A*/ 01199000
*        5 SPOFGroupCheck_SD_HWPart_Name(8) Char(24),                   01200000
*                                   /* The array of common hardware     01201000
*                                      component names, obtained from   01202000
*                                      the switch                @03A*/ 01203000
*      3 *         Char(16),        /* Reserved                  @04C*/ 01204000
*      3 SPOFGroupCheckExt Char(0); /* SPOF Check Extension      @04A*/ 01205000
*                                                                       01206000
*                                                                       01207000
*DCL SPOFGroupCheck_Len Constant(Length(SPOFGroupCheck));      /*@P1A*/ 01208000
*/********************************************************************/ 01209000
*/* The number of checks in a SPOFGroupCheck                         */ 01210000
*/********************************************************************/ 01211000
*DCL SPOFGroupCheck_Number Fixed(32) Constant(7); /* There are 7 types  01212000
*                              of checks in a SPOFGroupCheck     @03C*/ 01213000
*                                                                       01214000
*                                                                       01215000
*                                                                       01216000
*@EJECT;                                                       /*@04A*/ 01217000
*/********************************************************************/ 01218000
*/*                                                                  */ 01219000
*/* SPOF Check Extension                                             */ 01220000
*/*                                                                  */ 01221000
*/* The SPOF check extension allows for the introduction of new SPOF */ 01222000
*/* checks without increasing the size of either the SPOFCheck or    */ 01223000
*/* the SPOFGroupCheck.                                              */ 01224000
*/*                                                                  */ 01225000
*/* Each SPOF check extension contains a header and specific data    */ 01226000
*/* associated with the SPOF check the extension represents.  The    */ 01227000
*/* SPOFChkE_Id identifies the type of extension and the data        */ 01228000
*/* associated for the given extension.                              */ 01229000
*/*                                                                  */ 01230000
*/* Each SPOFCheck and/or SPOFGroupCheck can contain one or more     */ 01231000
*/* SPOF check extensions.                                           */ 01232000
*/*                                                                  */ 01233000
*/*                                                              @04A*/ 01234000
*/********************************************************************/ 01235000
*Dcl 1 SPOFChk_Extension Based,     /* SPOF check extension      @04A*/ 01236000
*      3 SPOFChkE_Eye Char(8),      /* Extension eye catcher     @04A*/ 01237000
*      3 SPOFChkE_Id Fixed(8),      /* Extension identifier      @04A*/ 01238000
*      3 SPOFChkE_Flags Bit(8),     /* Extension flags           @04A*/ 01239000
*        5 SPOFChkE_Valid Bit(1),   /* Valid flag                       01240000
*                                      - when '1'b indicates this SPOF  01241000
*                                        check extension is valid i.e.  01242000
*                                        contains valid data            01243000
*                                      - when '0'b indicates this SPOF  01244000
*                                        check extension is invalid     01245000
*                                        i.e. does not contain valid    01246000
*                                        data                    @04A*/ 01247000
*        5 SPOFChkE_Last  Bit(1),   /* Last flag                        01248000
*                                      - when '1'b indicates this SPOF  01249000
*                                        check extension is the last    01250000
*                                        SPOF check extension present   01251000
*                                        in the given SPOF check or     01252000
*                                        SPOF group check               01253000
*                                      - when '0'b indicates this SPOF  01254000
*                                        check extension is not the     01255000
*                                        last SPOF check extension      01256000
*                                        present in the given SPOF      01257000
*                                        check or SPOF group check      01258000
*                                                                @04A*/ 01259000
*      3 * Char(2),                 /* Reserved                  @04A*/ 01260000
*      3 SPOFChkE_Length Fixed(16), /* Length of this extension  @04A*/ 01261000
*      3 * Char(2),                 /* Reserved                  @04A*/ 01262000
*      3 SPOFChkE_Data Char(0);     /* SPOF data associated with this   01263000
*                                      extension                 @04A*/ 01264000
*                                                                       01265000
*/********************************************************************/ 01266000
*/*                                                                  */ 01267000
*/* SPOF Check Extension Control Unit Interface Area                 */ 01268000
*/* Contains common component descriptor information as returned by  */ 01269000
*/* the storage device.                                              */ 01270000
*/*                                                                  */ 01271000
*/* The SPOF Check Extension Control Unit Interface area is          */ 01272000
*/* identified by setting the SPOFChkE_id in the SPOFCheck_Extension */ 01273000
*/* to the constant SPOFChk_Ext_CUI_Id.                              */ 01274000
*/*                                                                  */ 01275000
*/* The number of descriptions present in the                        */ 01276000
*/* SPOFChk_Ext_CUI_Descriptions array can be up to four (4),        */ 01277000
*/* however, the actual number is described in the                   */ 01278000
*/* SPOFCheck_Num_Com_CUI variable.                                  */ 01279000
*/*                                                              @04A*/ 01280000
*/********************************************************************/ 01281000
*Dcl 1 SPOFChk_Ext_CUI_Area Char(248) Defined(SPOFChkE_Data),           01282000
*                                   /* Control unit interface extension 01283000
*                                      area                      @04A*/ 01284000
*      3 SPOFChk_Ext_CUI_Descriptions(4) Char(62);                      01285000
*                                   /* An array of 4, 62 byte common    01286000
*                                      component descriptions    @04A*/ 01287000
*                                                                       01288000
*                                                                       01289000
*/********************************************************************/ 01290000
*/*                                                                  */ 01291000
*/* SPOF Check Extension Constants                                   */ 01292000
*/*                                                              @04A*/ 01293000
*/********************************************************************/ 01294000
*Dcl SPOFCHK_Ext_Eye    Char(8) Constant('SPOFCEXT');                   01295000
*                                   /* Eye catcher for the SPOF check   01296000
*                                      extension                 @04A*/ 01297000
*Dcl SPOFChk_Ext_Count  Fixed(32) Constant(1);                          01298000
*                                   /* Count of SPOF check extensions   01299000
*                                      supported.  This represents the  01300000
*                                      number of extension fields       01301000
*                                      supported with the SPOF check,   01302000
*                                      for internal IBM use only @04A*/ 01303000
*Dcl SPOFChk_Ext_CUI_Id Fixed(8) Constant(1);                           01304000
*                                   /* SPOF check extension control     01305000
*                                      unit interface area              01306000
*                                      identification            @04A*/ 01307000
*                                                                       01308000
*/********************************************************************/ 01309000
*/* Define the mapping of the Component Bits in the CHP_Diag Area    */ 01310000
*/* (for fields: SPOFCheck_Chp_Diag and SPOFGroupCheck_Chp_Diag)     */ 01311000
*/********************************************************************/ 01312000
*DCL 1 SPOFCheck_CHP_Diag_MASK_Type CHAR(12) Type,  /* Define Component 01313000
*                                          Bits in CHP_Diag area @05A*/ 01314000
*      3 SPOFCheck_CHP_Diag_Mask_BYTE01 Char(1), ] 1st Byte        @05A 01315000
*        5 SPOFCheck_CHP_Diag_Mask_BYTE01_Bit1 Bit(1), ] IGNORED   @05A 01316000
*        5 SPOFCheck_CHP_Diag_Mask_BYTE01_Bit2 Bit(1), ] IGNORED   @05A 01317000
*        5 SPOFCheck_CHP_Diag_Mask_BOOK  Bit(1), ] Processor Drawer@06C 01318000
*        5 SPOFCheck_CHP_Diag_Mask_BYTE01_Bit4 Bit(1), ] IGNORED   @05A 01319000
*        5 SPOFCheck_CHP_Diag_Mask_BYTE01_Bit5 Bit(1), ] IGNORED   @05A 01320000
*        5 SPOFCheck_CHP_Diag_Mask_FANOUT Bit(1), ] Fanout         @05A 01321000
*        5 SPOFCheck_CHP_Diag_Mask_DOMAIN Bit(1), ] I/O Domain     @05A 01322000
*        5 SPOFCheck_CHP_Diag_Mask_CHANNEL Bit(1), ] Channel Card  @05A 01323000
*      3 SPOFCheck_CHP_Diag_Mask_BYTE02 Char(1), ] 2nd Byte        @05A 01324000
*      3 SPOFCheck_CHP_Diag_Mask_BYTE03 Char(1), ] 3rd Byte        @05A 01325000
*      3 SPOFCheck_CHP_Diag_Mask_BYTE04 Char(1), ] 4th Byte        @05A 01326000
*      3 SPOFCheck_CHP_Diag_Mask_BYTE05 Char(1), ] 5th Byte        @05A 01327000
*      3 SPOFCheck_CHP_Diag_Mask_BYTE06 Char(1), ] 6th Byte        @05A 01328000
*      3 SPOFCheck_CHP_Diag_Mask_BYTE07 Char(1), ] 7th Byte        @05A 01329000
*      3 SPOFCheck_CHP_Diag_Mask_BYTE08 Char(1), ] 8th Byte        @05A 01330000
*      3 SPOFCheck_CHP_Diag_Mask_BYTE09 Char(1), ] 9th Byte        @05A 01331000
*      3 SPOFCheck_CHP_Diag_Mask_BYTE10 Char(1), ] 10th Byte       @05A 01332000
*      3 SPOFCheck_CHP_Diag_Mask_BYTE11 Char(1), ] 11th Byte       @05A 01333000
*      3 SPOFCheck_CHP_Diag_Mask_BYTE12 Char(1), ] 12th Byte       @05A 01334000
*      3 SPOFCheck_CHP_Diag_Mask_END   CHAR(0);  ] Terminate Str   @05A 01335000
*                                                                       01336000
*@LOGIC;                                                       /*@P1A*/ 01337000
*#PRAGMA TOOL=CBGEN.                                           /*@P1A*/ 01338000
*#NOLEN.                                                       /*@P1A*/ 01339000
*#USEORG.                                                      /*@P1A*/ 01340000
*#NOTUPPER.                                                    /*@P1A*/ 01341000
*#ALIGNOP.                                                     /*@P1A*/ 01342000
*                                                                       01343000
* Following PLX symbols are not defined in ASM                   @04A   01344000
*                                                                       01345000
*#DELETE.SPOFCheck_Len                                                  01346000
*#DELETE.SPOFGroupCheck_Len                                             01347000
*#DELETE.SPOFChk_Ext_Count                                              01348000
*#EPRAGMA.                                                     /*@P1A*/ 01349000
*@ENDLOGIC;                                                    /*@P1A*/ 01350000
*/* End of PL/X Source                                               */ 01351000
* %IF IOSDSPOF_LIST ^= 'NO' &                                           01352000
*    ZCBPRINT ^= 'NO' %THEN                                             01353000
*   %GOTO IOSDSPOF_4;                                                   01354000
*   @LIST POP NOECHO;                                                   01355000
* %IOSDSPOF_4:;                                                         01356000
* %END;                                                                 01357000
