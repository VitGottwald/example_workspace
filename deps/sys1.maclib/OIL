         MACRO                                                          00050000
&NAME    OIL   &BYTE,&MASK,&REF=,&WREGS=(0,1,2)                         00100000
.*             OR IMMEDIATE LOCKED                                      00150000
.*                                                                      00159000
.*01* PROPRIETARY STATEMENT:                                            00168000
.*                                                                      00177000
.*     LICENSED MATERIALS - PROPERTY OF IBM                             00186000
.*     5694-A01 COPYRIGHT IBM CORP. 1977, 2008                          00195000
.*                                                                      00204000
.* STATUS= HBB7750                                                      00213000
.*                                                                      00222000
.*01* EXTERNAL CLASSIFICATION: PI                                       00231000
.*01* END OF EXTERNAL CLASSIFICATION:                                   00240000
.*                                                                      00250000
.*       This macro is used in a multiprocessing environment       @L2A 00300000
.*       to provide a lock on a word containing the byte which     @L2A 00350000
.*       is the target of an OI instruction.                       @L2A 00400000
.*                                                                      00450000
.*       &BYTE      Symbol naming the byte to which the or         @L2A 00500000
.*                  immediate function is to be applied.           @L2A 00550000
.*                                                                 @L2A 00560000
.*       &MASK      A one-byte self-defining term or symbol        @L2A 00600000
.*                  equated to such a term which specifies a       @L2A 00650000
.*                  mask as in immediate operand of OI             @L2A 00700000
.*                  instruction.                                   @L2A 00710000
.*                                                                 @L2A 00720000
.*       &REF       Label of a full word in storage.  Address      @L2A 00750000
.*                  of ref label must be less than or equal to     @L2A 00800000
.*                  that of byte (first operand).  Label must      @L2A 00850000
.*                  be addressable when the macro is issued,       @L2A 00900000
.*                  and USING must have been issued on a           @L2A 00950000
.*                  full-word label.                               @L2A 00960000
.*                                                                 @L2A 00970000
.* NOTE  &BYTE, &MASK and &REF must be specified on macro call.    @L2A 01000000
.*       &WREGS     Decimal numbers or symbols equated to decimal  @L2A 01050000
.*                  numbers of three work registers to be used by  @L2A 01100000
.*                  this macro.  Registers 0, 1 and 2 are default  @L2A 01150000
.*                  values                                         @L2A 01152000
.*                                                                 @L2A 01154000
.*                  If work registers (WREGS) are provided they    @L2A 01156000
.*                  must follow these rules:                       @L2A 01158000
.*                                                                 @L2A 01160000
.*                  o The registers must have unique values,       @L2A 01162000
.*                    that is the first register cannot be the     @L2A 01164000
.*                    same as the second or third and the second   @L2A 01166000
.*                    register cannot be the same as the third.    @L2A 01168000
.*                                                                 @L2A 01170000
.*        When control returns to the caller, the GPRs are         @L2A 01172000
.*        unchanged except for the three work registers that are   @L2A 01174000
.*        used by the system. If WREGS is not specified,           @L2A 01176000
.*        these will be registers 0-2.                             @L2A 01178000
.*                                                                 @L2A 01180000
.*        WREGS(1) is used to contain the "old" byte; WREGS(2) is  @L2A 01182000
.*        used to contain the "updated" byte; and WREGS(3) is      @L2A 01184000
.*        used to contain the mask.                                @L2A 01186000
.*                                                                 @L2A 01188000
.* CHANGE-ACTIVITY =                                               @L2A 01189000
.* $L2=ME11173 HBB7750 070915 PDJK_1: improve error checking            01190003
         LCLC  &XREGS(3)      FOR WREGS VALUES                          01200000
         LCLC  &X(3)          Also for WREGS values                @L2A 01208000
         SYSSTATE TEST                                             @L1A 01209002
         AIF   (N'&WREGS LE 3).OIL05                               @L2A 01235000
         MNOTE 0,'Fourth and later registers for WREGS ignored'    @L2A 01240000
.OIL05   AIF   ('&BYTE' NE '').OIL10    BRANCH IF BYTE SPECIFIED   @L2A 01250000
         IHBERMAC 1006,BYTE   BYTE REQUIRED BUT NOT SPECIFIED           01300000
         MEXIT                                                          01350000
.OIL10   AIF   ('&MASK' NE '').OIL20    BRANCH IF MASK SPECIFIED        01400000
         IHBERMAC 1006,MASK   MASK REQUIRED BUT NOT SPECIFIED           01450000
         MEXIT                                                          01500000
.OIL20   AIF   ('&REF' NE '').OIL30     BRANCH IF REF SPECIFIED         01550000
         IHBERMAC 1006,REF    REF REQUIRED BUT NOT SPECIFIED            01600000
         MEXIT                                                          01650000
.OIL30   AIF   ('&WREGS(1)' NE '').OIL35 BRANCH IF FIRST REG SPECIFIED  01700000
&XREGS(1) SETC '0'            USE REGISTER 0 AS DEFAULT                 01750000
         AGO   .OIL40                                                   01800000
.OIL35   ANOP                                                           01850000
&XREGS(1) SETC '&WREGS(1)'                                              01900000
.OIL40   AIF   ('&WREGS(2)' NE '').OIL45 BRANCH IF SECOND REG SPECIFIED 01950000
&XREGS(2) SETC '1'            USE REGISTER 1 AS DEFAULT                 02000000
         AGO   .OIL50                                                   02050000
.OIL45   ANOP                                                           02100000
&XREGS(2) SETC '&WREGS(2)'                                              02150000
.OIL50   AIF   ('&WREGS(3)' NE '').OIL55 BRANCH IF THIRD REG SPECIFIED  02200000
&XREGS(3) SETC '2'            USE REGISTER 2 AS DEFAULT                 02250000
         AGO   .OIL60                                                   02300000
.OIL55   ANOP                                                           02350000
&XREGS(3) SETC '&WREGS(3)'                                              02400000
.OIL60   ANOP  ,              ALL OPERANDS SPECIFIED                    02450000
&X(1)    SETC  '&XREGS(1)'                                         @L2A 02450700
&X(2)    SETC  '&XREGS(2)'                                         @L2A 02451600
&X(3)    SETC  '&XREGS(3)'                                         @L2A 02452500
.*                                                                 @L2A 02453400
.****************************************************************  @L2A 02454300
.*                                                              *  @L2A 02455200
.*       Verify proper register usage                           *  @L2A 02456100
.*                                                              *  @L2A 02457000
.****************************************************************  @L2A 02457900
.*                                                                 @L2A 02458800
         PUSH  PRINT,NOPRINT                                       @L2A 02459700
         PRINT NOGEN,NOPRINT                                       @L2A 02460600
.*                                                                 @L2A 02461500
         AIF   ('&X(1)' NE '&X(2)').VER0200                        @L2A 02462400
         MNOTE 8,'WREGS specification error - first WREGS (&X(1)) canno-02463301
               t have a value equal to the second WREGS (&X(2))'   @L2A 02464200
         AGO   .VER0300                                            @L2A 02465100
.*                                                                 @L2A 02466000
.VER0200 ANOP                                                      @L2A 02466900
 DC 0S(((&X(1))-(&X(2)))/((&X(1))-(&X(2)))-1) If err, WREGS(1)=WREGS(2) 02467800
*                If you get an assembly error on this statement,   @L2A-02468701
                   the first register specified for WREGS has      @L2A-02469601
                   the same value as the second register specified @L2A-02470501
                   for WREGS (not allowed)                         @L2A 02471400
.*                                                                 @L2A 02472300
.VER0300 AIF   ('&X(1)' NE '&X(3)').VER0400                        @L2A 02473200
         MNOTE 8,'WREGS specification error - first WREGS (&X(1)) canno-02474101
               t have a value equal to the third WREGS (&X(3))'    @L2A 02475000
         AGO   .VER0500                                            @L2A 02475900
.*                                                                 @L2A 02476800
.VER0400 ANOP                                                      @L2A 02477700
 DC 0S(((&X(1))-(&X(3)))/((&X(1))-(&X(3)))-1) If err, WREGS(1)=WREGS(3) 02478600
*                If you get an assembly error on this statement,   @L2A-02479501
                   the first register specified for WREGS has      @L2A-02480401
                   the same value as the third register specified  @L2A-02481301
                   for WREGS (not allowed)                         @L2A 02482200
.*                                                                 @L2A 02483100
.VER0500 AIF   ('&X(2)' NE '&X(3)').VER0600                        @L2A 02484000
         MNOTE 8,'WREGS specification error - second WREGS (&X(2)) cann-02484901
               ot have a value equal to the third WREGS (&X(3))'   @L2A 02485800
         AGO   .VER1000                                            @L2A 02486700
.*                                                                 @L2A 02487600
.VER0600 ANOP                                                      @L2A 02488500
 DC 0S(((&X(2))-(&X(3)))/((&X(2))-(&X(3)))-1) If err, WREGS(2)=WREGS(3) 02489400
*                If you get an assembly error on this statement,   @L2A-02490301
                   the second register specified for WREGS has     @L2A-02491201
                   the same value as the third register specified  @L2A-02492101
                   for WREGS (not allowed)                         @L2A 02493000
.*                                                                 @L2A 02493900
.VER1000 POP   PRINT,NOPRINT                                       @L2A 02494800
.*                                                                 @L2A 02495700
&NAME    L     &XREGS(1),&REF+(((&BYTE-&REF)/4)*4)                 @L2A-02500001
                                   Load word containing byte to    @L2A-02550001
                                   be set                          @L2A 02560000
         LA    &XREGS(3),&MASK.(0,0) Put mask in low-order byte    @L2A-02600001
                                   of register                     @L2A 02650000
         SLL   &XREGS(3),24-(8*((&BYTE-&REF)-(((&BYTE-&REF)/4)*4)))(0) -02700001
                                   Shift mask to same position     @L2A-02750001
                                   in word as byte to be changed   @L2A 02800000
         LR    &XREGS(2),&XREGS(1) Load word containing byte to    @L2A-02850001
                                   be set                          @L2A 02860000
         OR    &XREGS(2),&XREGS(3) Or mask into byte in register.  @L2A-02900001
                                   Use compare and swap to store   @L2A-02950001
                                   updated register in storage if  @L2A-03000001
                                   storage word was not modified   @L2A 03050000
         CS    &XREGS(1),&XREGS(2),&REF+(((&BYTE-&REF)/4)*4)            03100000
         JNE   *-8                 Do again from LR if word was    @L2A-03180001
                                   modified                        @L2A 03185000
.RELB1B  ANOP                                                           03190000
         MEND                                                           03200000
