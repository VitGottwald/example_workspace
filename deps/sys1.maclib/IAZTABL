         MACRO -- IAZTABL - JES TEXT TABLE CREATE MACRO                 00010000
&LABEL   IAZTABL &TABLEID=,        Table prefix to use                 C00020000
               &LVLLEN=,           Length for each text level          C00030000
               &DEFTXT=,           Default text for each level         C00040000
               &CODE=SYSLIST,      Code definition                     C00050000
               &TYPE=CODE,         Type of table                       C00060000
               &MAXCODE=255        Maximum code to define               00070000
.* **PROPRIETARY STATEMENT************************************          00080000
.*                                                           *          00090000
.*   LICENSED MATERIALS-PROPERTY OF IBM                      *          00100000
.*   5650-ZOS Copyright IBM Corp. 2013, 2015                 *          00110000
.*                                                           *          00120000
.*   STATUS:  HBB77A0                                        *          00130000
.*                                                           *          00140000
.*01* EXTERNAL CLASSIFICATION:  NONE                         *          00150000
.*01* END OF EXTERNAL CLASSIFICATION:                        *          00160000
.*                                                           *          00170000
.* **END-OF-PROPRIETARY-STATEMENT*****************************          00180000
.*************************************************************          00190000
.*                                                           *          00200000
.* FUNCTION:                                                 *          00210000
.*                                                           *          00220000
.*       The IAZTABL macro generates a table that            *          00230000
.*       associates a given code with a given text string.   *          00240000
.*       Multiple levels of text can be associated with      *          00250000
.*       a given code, providing the ability to supply       *          00260000
.*       compact text or longer explanations for a given     *          00270000
.*       code.                                               *          00280000
.*                                                           *          00290000
.* PARAMETERS:                                               *          00300000
.*                                                           *          00310000
.*       TABLEID - A 3 character value to be incorporated    *          00320000
.*                 into the label for the table. The table   *          00330000
.*                 label follows the format:                 *          00340000
.*                      TxxxTABL                             *          00350000
.*                 where "xxx" is the supplied TABLEID.      *          00360000
.*                 This is a required parameter.             *          00370000
.*                                                           *          00380000
.*       LVLLEN  - Length of each text entry in a given      *          00390000
.*                 level of text. The number of entries      *          00400000
.*                 supplied in this list represents the      *          00410000
.*                 number of text levels to define, up to    *          00420000
.*                 4. As an example, the following:          *          00430000
.*                      LVLLEN=(64,10,30)                    *          00440000
.*                 indicates that 3 levels of text will be   *          00450000
.*                 defined for each code. The first level    *          00460000
.*                 will have text entries of length 64       *          00470000
.*                 characters. The second level will have    *          00480000
.*                 text entries of length 10 characters,     *          00490000
.*                 and the third and final level will have   *          00500000
.*                 text entries of length 30 characters,     *          00510000
.*                 This is a required parameter.             *          00520000
.*                                                           *          00530000
.*       DEFTXT  - Default text for each level. If a code    *          00540000
.*                 value is not defined in the table this    *          00550000
.*                 would be the text returned for a lookup   *          00560000
.*                 of that code (refer to macro IAZTLKUP     *          00570000
.*                 for the process of looking up a code).    *          00580000
.*                 would be the text returned for a lookup   *          00590000
.*                 of that code (refer to macro IAZTLKUP     *          00600000
.*                 As an example, the default text           *          00610000
.*                 associated with our LVLLEN example above  *          00620000
.*                 might be:                                 *          00630000
.*                      DEFTXT=('Unknown job phase',         *          00640000
.*                              'UNKN PHASE','               *          00650000
.*                              'Unknown job phase')         *          00660000
.*                 The default text supplied for a given     *          00670000
.*                 level must be the number of characters    *          00680000
.*                 defined in LVLLEN for that level, or      *          00690000
.*                 less.                                     *          00700000
.*                 This is a required parameter.             *          00710000
.*                                                           *          00720000
.*       MAXCODE - Maximum code value to be tracked in the   *          00730000
.*                 table. Setting this parameter will        *          00740000
.*                 minimize the space used for index tables. *          00750000
.*                 The default is 255.                       *          00760000
.*                                                           *          00770000
.*       CODE    - only SYSLIST is allowed for this          *          00780000
.*                 parameter. It indicates that codes that   *          00790000
.*                 are to be defined in this table will be   *          00800000
.*                 supplied in a list.                       *          00810000
.*                                                           *          00820000
.*                 The list of codes to define in the table  *          00830000
.*                 are supplied as a list of "triplets",     *          00840000
.*                 separated by commas. Each triplet must    *          00850000
.*                 follow the pattern:                       *          00860000
.*                      code,level,'text assoc with code'    *          00870000
.*                 where "code" is a numeric value from      *          00880000
.*                 1 to 255 and represents the value that    *          00890000
.*                 must be translated to text via lookup.    *          00900000
.*                 "level" is a numeric value from 1 to 4    *          00910000
.*                 representing the level of the text value  *          00920000
.*                 being associated with the code. "text"    *          00930000
.*                 is the text to return when a lookup is    *          00940000
.*                 performed for "code".                     *          00950000
.*                 This is a required parameter.             *          00960000
.*                                                           *          00970000
.* NOTES:                                                    *          00980000
.*                                                           *          00990000
.*   When creating a new table using IAZTABL, review the     *   @Z22AM 00990900
.*   text lookup service module IAZTLUP to determine what    *   @Z22AM 00991800
.*   changes are needed in that module to support the new    *   @Z22AM 00992700
.*   table.                                                  *   @Z22AM 00993600
.*                                                           *   @Z22AM 00994500
.*   When creating a new table using IAZTABL, update the     *   @Z22AM 00995400
.*   IAZTLKDF and IAZTLKUP DSECT=YES macros to add constants *   @Z22AM 00996300
.*   that define the lengths of text returned by each text   *   @Z22AM 00997200
.*   level defined by the new table.                         *   @Z22AM 00998100
.*                                                           *   @Z22AM 00999000
.*   When defining a new flag value table using the IAZTABL  *   @Z22AM 01000000
.*   macro, you must include code in module IAZTLUP that     *   @Z22AM 01001000
.*   loads the associated flag bytes into a register in the  *   @Z22AM 01002000
.*   same order as expected by the IAZTABL definition, or    *   @Z22AM 01003000
.*   the service will report incorrect text or default text  *   @Z22AM 01004000
.*   for unknown flag values.                                *   @Z22AM 01005000
.*                                                           *          01010000
.* ENVIRONMENT:                                              *          01020000
.*                                                           *          01030000
.*       This macro may be invoked from either a JES2 or a   *          01040000
.*       JES3 module. It is invoked to define a text table   *          01050000
.*       that convets a code or flag values to a text        *          01060000
.*       string. IAZTABL lookup service is supplied by       *          01070000
.*       macro IAZTLKUP and the lookup service routine in    *          01080000
.*       module IAZTLUP. Currently the service supports      *          01090000
.*       code lookup for:                                    *          01100000
.*           Job phase text                                  *          01110000
.*       and flag lookup for:                                *          01120000
.*           Job delay text                                  *          01130000
.*                                                           *          01140000
.* REGISTER USAGE (ENTRY/EXIT):                              *          01150000
.*                                                           *          01160000
.*       N/A                                                 *          01170000
.*                                                           *          01180000
.* RETURN CODES (R15 ON EXIT):                               *          01190000
.*                                                           *          01200000
.*       N/A                                                 *          01210000
.*                                                           *          01220000
.* OTHER CONSIDERATIONS:                                     *          01230000
.*                                                           *          01240000
.*       NONE                                                *          01250000
.*                                                           *          01260000
.* CHANGE ACTIVITY:                                          *          01270000
.*                                                           *          01280000
.* $Z21LJMO=JOBMOD   HBB7790 130227 BWT:  Job Phase/Delay te *          01285000
.*                                                           *          01290000
.* A000000-999999          Created for z/OS V2R1             * @Z21LJMO 01300000
.*************************************************************          01310000
.*                                                           *          01320000
.*       IF &TEXT='YES', TWO TABLES ARE GENERATED TO         *          01330000
.*       THE TEXT TABLE CREATED BT IAZTABL/IAZTBLE IS        *   @Z22AM 01340000
.*       A LINEAR ARRAY OF CHARACTER STRINGS, EACH &TABLLEN  *          01350000
.*       CHARACTERS LONG. EACH OF THESE STRINGS IS THE TEXT  *          01360000
.*       FOR SOME TABLE CODE. THE NUMBER OF ENTRIES IN THIS  *          01370000
.*       TABLE IS EQUAL TO THE NUMBER OF USED/DEFINED TABLE  *          01380000
.*       CODES. IN OTHER WORDS, TO SAVE SPACE THE TABLE IS   *          01390000
.*       TIGHTLY PACKED - THERE ARE NO BLANK STRINGS FOR     *          01400000
.*       UNUSED TABLE CODES, SO THE TEXT FOR A GIVEN TABLE   *          01410000
.*       CODE CANNOT BE READ OFF THE TABLE ON THE BASIS OF   *          01420000
.*       THE TABLE CODE ALONE. TO FIND THE TEXT FOR A GIVEN  *          01430000
.*       TABLE CODE, WE USE THE INDEX TABLE WHICH CONSISTS   *          01440000
.*       OF 256 BYTES, 1 PER POSSIBLE TABLE CODE, AND        *          01450000
.*       TRANSLATES THE TABLE CODE INTO AN INDEX IN THE      *          01460000
.*       TEXT TABLE. FOR EXAMPLE, IF THE FOLLOWING CODES     *          01470000
.*       WERE DEFINED IN ORDER, THE TABLES WOULD APPEAR      *          01480000
.*       AS BELOW. NOTE THAT THE TABLE CODES DO NOT HAVE TO  *          01490000
.*       BE DECLARED (VIA IAZTBLE) IN ANY ORDER.             *          01500000
.*                                                           *          01510000
.*           CODE 0 HAS TEXT 'UNKNOWN'                       *          01520000
.*           CODE 2 HAS TEXT 'TABLES ARE FUN'                *          01530000
.*           CODE 6 HAS TEXT 'TEXT TABLES ROCK'              *          01540000
.*           CODE 3 HAS TEXT 'IMPORTANT TEXT'                *          01550000
.*                                                           *          01560000
.*     INDEX TABLE                    TEXT TABLE             *          01570000
.*     (&TABLINDX)                    (&TABLTXT)             *          01580000
.*     +-----------+                  +--------------------+ *          01590000
.*   0 !    0      +--------------> 0 !  UNKNOWN           ! *          01600000
.*     +-----------+                  +--------------------+ *          01610000
.*   1 !    0      !  +-----------> 1 !  TABLES ARE FUN    ! *          01620000
.*     +-----------+  !               +--------------------+ *          01630000
.*   2 !    1      +--+  +--------> 2 !  TEXT TABLES ROCK  ! *          01640000
.*     +-----------+     !            +--------------------+ *          01650000
.*   3 !    3      +-----!--------> 3 !  IMPORTANT TEXT    ! *          01660000
.*     +-----------+     !            +--------------------+ *          01670000
.*   4 !    0      !     !            <-- &TABLLEN CHARS --> *          01680000
.*     +-----------+     !                                   *          01690000
.*   5 !    0      !     !                                   *          01700000
.*     +-----------+     !  TO FIND THE TEXT CORRESPONDING   *          01710000
.*   6 !    2      +-----+  TO TABLE CODE 6, GET THE SIXTH   *          01720000
.*     +-----------+        ELEMENT OF THE INDEX TABLE (2),  *          01730000
.*     !           !        AND USE IT AS AN INDEX INTO THE  *          01740000
.*     .           .        TEXT TABLE. (ADDRESS OF MESSAGE  *          01750000
.*     .           .        = TEXT TABLE ADDR + 2 * &TABLLEN)*          01760000
.*     !           !                                         *          01770000
.*     +-----------+   NOTE: UNUSED TABLE CODES POINT TO     *          01780000
.* 255 !    0      !         THE UNKNOWN TEXT MESSAGE,       *          01790000
.*     +-----------+         WHICH IS ALWAYS REASON 0, THOUGH*          01800000
.*     <- 1  BYTE ->         THEY SHOULD NEVER BE ACCESSED.  *          01810000
.*                                                           *          01820000
.*       THESE TABLES ARE GENERATED FROM ASSEMBLER ARRAYS    *          01830000
.*       WHICH HAVE THE SAME STRUCTURE AS THE TABLES - THEY  *          01840000
.*       ARE THE SAME SIZE AS THE TABLES AND CONTAIN THE     *          01850000
.*       SAME DATA THAT THE TABLES WILL CONTAIN. THE         *          01860000
.*       ASSEMBLER STRING ARRAY &TABLTXT(1..256) HOLDS THE   *          01870000
.*       TABLE CODE TEXT STRINGS JUST AS THE TEXT TABLE WILL.*          01880000
.*       THE ASSEMBLER INTEGER ARRAY &TABLINDX(1..256) HOLDS *          01890000
.*       THE INDICES OF THE REASON CODES IN THE TEXT TABLE   *          01900000
.*       JUST AS THE INDEX TABLE WILL. THE ONLY DIFFERENCE   *          01910000
.*       BETWEEN THE ASSEMBLER ARRAYS AND THE TABLES TO BE   *          01920000
.*       GENERATED IN STORAGE IS THAT THE LATTER ARE INDEXED *          01930000
.*       FROM ZERO WHILE THE FORMER ARE INDEXED FROM ONE.    *          01940000
.*       FOR EXAMPLE, REFERRING TO THE ABOVE DIAGRAM, CODE   *          01950000
.*       TWO, THE THIRD TABLE CODE, POINTS TO THE SECOND     *          01960000
.*       DECLARED TABLE CODE TEXT IN THE TEXT TABLE, THUS    *          01970000
.*       &TABLTXT(2) = "TABLES ARE FUN" AND &TABLINDX(3) = 1.*          01980000
.*       &TABLRCT CONTAINS THE NUMBER OF DECLARED TABLE      *          01990000
.*       CODES, WHICH IS THE SIZE OF THE TEXT TABLE SO FAR.  *          02000000
.*                                                           *          02010000
.*       FOR EACH TABLE CODE, THIS MACRO INVOKES THE         *          02020000
.*       IAZTBLE MACRO. IAZTBLE ADDS THE TABLE CODE TEXT TO  *          02030000
.*       THE END OF THE &TABLTXT ARRAY, AND STORES THE INDEX *          02040000
.*       AT WHICH IT WAS ADDED (MINUS ONE) IN THE &TABLINDX  *          02050000
.*       ARRAY IN THE SLOT RESERVED FOR THAT TABLE CODE.     *          02060000
.*                                                           *          02070000
.*       NOTE THAT THE TEXT ADN INDEX TABLES BUILT IN        *          02080000
.*       MACRO ARRAYS ARE SEPARATED BASED ON THE LEVEL       *          02090000
.*       ASSOCIATED WITH THE TEXT. FOR EXAMPLE, IF THERE     *          02100000
.*       ARE 3 LEVELS OF TEXT PROVIDED FOR THE CODES BEING   *          02110000
.*       DEFINED IN THE TABLE THEN THE MACRO ARRAYS WILL     *          02120000
.*       CONTAIN 3 SEPARATE SECTIONS CONTAINING TEXT AND/OR  *          02130000
.*       INDEXES, ONE PER LEVEL.                             *          02140000
.*                                                           *          02150000
.*       AFTER ALL THE TABLE CODES HAVE BEEN DECLARED IN     *          02160000
.*       THIS WAY, THIS MACRO LOOPS THROUGH THE ASSEMBLER    *          02170000
.*       ARRAYS AND GENERATES THE TABLES IN STORAGE.         *          02180000
.*                                                           *          02190000
.*************************************************************          02200000
.*       Declare macro variables                             *          02210000
.*************************************************************          02220000
         GBLC  &TABLSCP                                                 02230000
         GBLA  &TABLLEN,&LVL,&NUMLVL,&MAXC                              02240000
         LCLA  &I,&B,&S,&ERRORS,&CODECNT,&TABLID,&TOTRCT                02250000
         LCLA  &LCLLVL,&LCLRCT,&MAXLEN                                  02260000
         LCLC  &INTBLID,&INTBLH,&FLG1,&INTBLPF,&INTBLOF                 02270000
         LCLC  &TEMPC,&LCLBITS                                          02280000
.*************************************************************          02290000
.*       Initialize parameters                               *          02300000
.*************************************************************          02310000
&ERRORS  SETA  0                                                        02320000
&NUMLVL  SETA  0                                                        02330000
&CODECNT SETA  0                                                        02340000
&TABLID  SETA  0                                                        02350000
&INTBLID SETC  ' '                                                      02360000
&INTBLH  SETC  ' '                                                      02370000
&LVL     SETA  0                                                        02380000
&TOTRCT  SETA  0                                                        02390000
&LCLLVL  SETA  0                                                        02400000
&LCLRCT  SETA  0                                                        02410000
&MAXLEN  SETA  0                                                        02420000
&FLG1    SETC  '0'                                                      02430000
&LCLBITS SETC  ' '                                                      02440000
&MAXC    SETA  0                                                        02450000
.*************************************************************          02460000
.*       Validate MAXCODE Parameter                          *          02470000
.*************************************************************          02480000
         AIF   ('&MAXCODE' GT '1' AND '&MAXCODE' LT '256').TABLMOK      02490000
         MNOTE 8,'IAZTABL: PARAMETER ERROR. MAXCODE= MUST BE'           02500000
         MNOTE 8,' GREATER THAN 1 AND LESS THAN OR EQUAL TO'            02510000
         MNOTE 8,' 256.'                                                02520000
&ERRORS  SETA  &ERRORS+1                                                02530000
&MAXC    SETA  256                                                      02540000
         AGO   .TABLMK2                                                 02550000
.TABLMOK ANOP                      MAXCODE PARAMETER OK                 02560000
&MAXC    SETA  &MAXCODE+1                                               02570000
.TABLMK2 ANOP                                                           02580000
.*************************************************************          02590000
.*       Validate LVLLEN Parameter                           *          02600000
.*************************************************************          02610000
         AIF   ('&LVLLEN' NE '').TABLLRC                                02620000
         MNOTE 8,'IAZTABL: PARAMETER ERROR. LVLLEN= MUST BE'            02630000
         MNOTE 8,' SET FOR IAZTABL.'                                    02640000
         AGO   .TABLLER                                                 02650000
.TABLLRC AIF   (N'&LVLLEN LT 5).TABLLST                                 02660000
         MNOTE 8,'IAZTABL: PARAMETER ERROR. LVLLEN= GREATER'            02670000
         MNOTE 8,' THAN 4 NOT VALID.'                                   02680000
.*                                                                      02690000
.TABLLER ANOP                      LVLLEN parameter error               02700000
&ERRORS  SETA  &ERRORS+1                                                02710000
         AGO   .TABLLOK                                                 02720000
.*                                                                      02730000
.TABLLST ANOP                      LVLLEN count setting                 02740000
&NUMLVL  SETA  N'&LVLLEN                                                02750000
.*************************************************************          02760000
.*       Set global variables based on NUMLVL                *          02770000
.*************************************************************          02780000
.*                                                                      02790000
         AIF   (&NUMLVL EQ 1).LVL1,                                    C02800000
               (&NUMLVL EQ 2).LVL2,                                    C02810000
               (&NUMLVL EQ 3).LVL3,                                    C02820000
               (&NUMLVL EQ 4).LVL4                                      02830000
         MNOTE 8,'IAZTABL: PARAMETER ERROR. LVLLEN= GREATER'            02840000
         MNOTE 8,' THAN 4 ENTRIES NOT VALID.'                           02850000
         AGO   .LVLOAD                                                  02860000
.LVL1    ANOP                                                           02870000
         GBLC  &TABLTXT(256),&TABLDTX(1)                                02880000
         GBLA  &TABLRCT(4),&TABLINDX(256),&TABLLVL(256)                 02890000
         GBLA  &TABLLNG(1)                                              02900000
         AGO   .LVLOAD                                                  02910000
.LVL2    ANOP                                                           02920000
         GBLC  &TABLTXT(512),&TABLDTX(2)                                02930000
         GBLA  &TABLRCT(4),&TABLINDX(512)                               02940000
         GBLA  &TABLLVL(512)                                            02950000
         GBLA  &TABLLNG(2)                                              02960000
         AGO   .LVLOAD                                                  02970000
.LVL3    ANOP                                                           02980000
         GBLC  &TABLTXT(768),&TABLDTX(3)                                02990000
         GBLA  &TABLRCT(4),&TABLINDX(768)                               03000000
         GBLA  &TABLLVL(768)                                            03010000
         GBLA  &TABLLNG(3)                                              03020000
         AGO   .LVLOAD                                                  03030000
.LVL4    ANOP                                                           03040000
         GBLC  &TABLTXT(1024),&TABLDTX(4)                               03050000
         GBLA  &TABLRCT(4),&TABLINDX(1024)                              03060000
         GBLA  &TABLLVL(1024)                                           03070000
         GBLA  &TABLLNG(4)                                              03080000
.*************************************************************          03090000
.*       Load table of text lengths                          *          03100000
.*************************************************************          03110000
.*                                                                      03120000
.LVLOAD  ANOP                                                           03130000
&I       SETA  1                                                        03140000
.LVLLP   ANOP                      LVLLEN set loop                      03150000
&TABLLNG(&I) SETA &LVLLEN(&I)                                           03160000
         AIF   (&LVLLEN(&I) GT &MAXLEN).LVLMAX                          03170000
         AGO   .LVLCHK                                                  03180000
.LVLMAX  ANOP                                                           03190000
&MAXLEN  SETA &LVLLEN(&I)                                               03200000
.LVLCHK  ANOP                      LVLLEN set loop                      03210000
&I       SETA  &I+1                                                     03220000
         AIF   (&I LT (&NUMLVL+1)).LVLLP                                03230000
.TABLLOK ANOP                      LVLLEN parameter ok                  03240000
.*************************************************************          03250000
.*       Validate DEFTXT Parameter                           *          03260000
.*************************************************************          03270000
         AIF   ('&DEFTXT' NE '').TABLDRC                                03280000
         MNOTE 8,'IAZTABL: PARAMETER ERROR. DEFTXT= REQUIRED'           03290000
         MNOTE 8,' FOR IAZTABL.'                                        03300000
         AGO   .TABLDER                                                 03310000
.TABLDRC AIF   (N'&DEFTXT LT 5).TABLDST                                 03320000
         MNOTE 8,'IAZTABL: PARAMETER ERROR. DEFTXT= GREATER'            03330000
         MNOTE 8,' THAN 4 NOT VALID.'                                   03340000
.*                                                                      03350000
.TABLDER ANOP                      DEFTXT parameter error               03360000
&ERRORS  SETA  &ERRORS+1                                                03370000
         AGO   .TABLDOK                                                 03380000
.*                                                                      03390000
.TABLDST ANOP                      DEFTXT count setting                 03400000
&I       SETA  1                                                        03410000
.DFTLP   ANOP                      DEFTXT set loop                      03420000
&TABLDTX(&I) SETC '&DEFTXT(&I)'                                         03430000
&I       SETA  &I+1                                                     03440000
         AIF   (&I LT (&NUMLVL+1)).DFTLP                                03450000
.TABLDOK ANOP                      DEFTXT parameter ok                  03460000
.*************************************************************          03470000
.*       Validate CODE parameter                             *          03480000
.*************************************************************          03490000
.*ODECNT SETA  N'&CODE                                                  03500000
         AIF   ('&CODE' EQ 'SYSLIST').TABLCSY                           03510000
         MNOTE 8,'IAZTABL: PARAMETER ERROR. CODE= MUST BE'              03520000
         MNOTE 8,' SET TO "SYSLIST" FOR IAZTABLE.'                      03530000
&ERRORS  SETA  &ERRORS+1                                                03540000
         AGO   .TABLCOK                                                 03550000
.TABLCSY ANOP                      CODE parameter SYSLIST OK            03560000
&CODECNT SETA  N'&SYSLIST                                               03570000
.TABLCOK ANOP                      CODE parameter done                  03580000
.*************************************************************          03590000
.*       Validate TYPE parameter                             *          03600000
.*************************************************************          03610000
         AIF   ('&TYPE' EQ 'CODE' OR '&TYPE' EQ 'FLAG').TABLYOK         03620000
         MNOTE 8,'IAZTABL: PARAMETER ERROR. TYPE= MUST BE'              03630000
         MNOTE 8,'  "CODE" OR "FLAG".'                                  03640000
&ERRORS  SETA  &ERRORS+1                                                03650000
         AGO   .TABLINT                                                 03660000
.TABLYOK ANOP                      TYPE parameter ok                    03670000
         AIF   ('&TYPE' EQ 'CODE').TABLINT                              03680000
&FLG1    SETC  '&FLG1'.'+B''10000000'''                                 03690000
.*************************************************************          03700000
.*       IF THERE WERE ANY PARAMETER ERRORS, EXIT.           *          03710000
.*************************************************************          03720000
         AIF   (&ERRORS GT 0).TABLEND                                   03730000
.*************************************************************          03740000
.*       INITIALIZE REASON COUNT AND &TABLINDX ARRAY         *          03750000
.*************************************************************          03760000
.TABLINT ANOP                      TYPE parameter ok                    03770000
&TABLRCT(4) SETA  0                                                     03780000
&TABLRCT(3) SETA  0                                                     03790000
&TABLRCT(2) SETA  0                                                     03800000
&TABLRCT(1) SETA  0                                                     03810000
&I       SETA  0                                                        03820000
.TABLCLR ANOP                      CLEAR INDEX ARRAY                    03830000
&I       SETA  &I+1                                                     03840000
&TABLINDX(&I) SETA 0                                                    03850000
&TABLLVL(&I) SETA 0                                                     03860000
         AIF   (&I LT &MAXC).TABLCLR                                    03870000
         AIF   (&NUMLVL EQ 1).DONCLR                                    03880000
         AIF   (&I LT (&MAXC*2)).TABLCLR                                03890000
         AIF   (&NUMLVL EQ 2).DONCLR                                    03900000
         AIF   (&I LT (&MAXC*3)).TABLCLR                                03910000
         AIF   (&NUMLVL EQ 3).DONCLR                                    03920000
         AIF   (&I LT (&MAXC*4)).TABLCLR                                03930000
.DONCLR  ANOP                                                           03940000
.*************************************************************          03950000
.*       DECLARE THE TEXT TABLE WITH THE CORRECT LENGTH AND  *          03960000
.*       THEN ORG BACK TO FILL IT IN. JUST LOOP THROUGH THE  *          03970000
.*       ASSEMBLER ARRAY &TABLTXT FROM 1 TO &TABLRCT         *          03980000
.*       GENERATING THE REASON STRINGS AS CHARACTER          *          03990000
.*       CONSTANTS.                                          *          04000000
.*************************************************************          04010000
.*************************************************************          04020000
.*       Header Data                                         *          04030000
.*************************************************************          04040000
&INTBLPF SETC  'T&TABLEID'                                              04050000
&INTBLID SETC  '&INTBLPF'.'TABL'                                        04060000
&INTBLID DS    0F                  Start of text table                  04070000
&INTBLID SETC  '&INTBLPF'.'TEYE'                                        04080000
&INTBLID DC    CL4'&INTBLPF'       Text table eyecatcher                04090000
&INTBLID SETC  '&INTBLPF'.'TVRM'                                        04100000
&INTBLID DC    XL2'0100'           Text table version/mod      @Z21LJMO 04110000
&INTBLID SETC  '&INTBLPF'.'NLVL'                                        04120000
&INTBLID DC    AL1(&NUMLVL)        Number of Levels in table            04130000
&INTBLID SETC  '&INTBLPF'.'IXSZ'                                        04140000
&INTBLID DC    AL1(1)              Size of table index value            04150000
&INTBLID SETC  '&INTBLPF'.'TXSZ'                                        04160000
&INTBLID DC    AL2(&MAXLEN)        Max size of text entry               04170000
&INTBLID SETC  '&INTBLPF'.'NIXE'                                        04180000
&INTBLID DC    AL2(&MAXC)          Number of entries in a              C04190000
                                    level index table                   04200000
.*                                                                      04210000
         AIF   ('&FLG1' EQ '0').FLG1SET                                 04220000
&FLG1    SETC  '&FLG1'(3,*)                                             04230000
.FLG1SET ANOP                                                           04240000
&INTBLID SETC  '&INTBLPF'.'FLG1'                                        04250000
&INTBLID DC    AL1(&FLG1)          Table indicators                     04260000
         DC    XL7'0'              Reserved                             04270000
.*                                                                      04280000
&INTBLID SETC  '&INTBLPF'.'OFTO'                                        04290000
&INTBLOF SETC  '&INTBLPF'.'TOFF-'.'&INTBLPF'.'TABL'                     04300000
&INTBLID DC    AL4(&INTBLOF)       Offset to text table offsets         04310000
&INTBLID SETC  '&INTBLPF'.'OFIO'                                        04320000
&INTBLOF SETC  '&INTBLPF'.'IOFF-'.'&INTBLPF'.'TABL'                     04330000
&INTBLID DC    AL4(&INTBLOF)       Offset to index tbl offsets          04340000
&INTBLID SETC  '&INTBLPF'.'OFLT'                                        04350000
&INTBLOF SETC  '&INTBLPF'.'LTBL-'.'&INTBLPF'.'TABL'                     04360000
&INTBLID DC    AL4(&INTBLOF)       Offset to length table               04370000
&INTBLID SETC  '&INTBLPF'.'OFDT'                                        04380000
&INTBLOF SETC  '&INTBLPF'.'DTBL-'.'&INTBLPF'.'TABL'                     04390000
&INTBLID DC    AL4(&INTBLOF)       Offset to default text table         04400000
&INTBLID SETC  '&INTBLPF'.'OFET'                                        04410000
&INTBLOF SETC  '&INTBLPF'.'ETBL-'.'&INTBLPF'.'TABL'                     04420000
&INTBLID DC    AL4(&INTBLOF)       Offset to txt tbl ent cnts           04430000
&INTBLID SETC  '&INTBLPF'.'OFTX'                                        04440000
.*                                                                      04450000
.*************************************************************          04460000
.*       Build the Text Table Offset table and fill in       *          04470000
.*************************************************************          04480000
.*                                                                      04490000
&I       SETA  0                                                        04500000
&INTBLID SETC  '&INTBLPF'.'TOFF'                                        04510000
&INTBLID DC    (&NUMLVL)AL4(0)     Text table offsets                   04520000
         ORG   &INTBLID                                                 04530000
.LVOFTTG ANOP                      Text table offset gen                04540000
&I       SETA  &I+1                                                     04550000
&INTBLOF SETC  '&INTBLPF'.'TXL'.'&I'.'-'.'&INTBLPF'.'TABL'              04560000
         DC    AL4(&INTBLOF)       Offset to text table                 04570000
         AIF   (&I LT &NUMLVL).LVOFTTG                                  04580000
.*                                                                      04590000
.*************************************************************          04600000
.*       Build the Index Table Offset table and fill in      *          04610000
.*************************************************************          04620000
.*                                                                      04630000
&I       SETA  0                                                        04640000
&INTBLID SETC  '&INTBLPF'.'IOFF'                                        04650000
&INTBLID DC    (&NUMLVL)AL4(0)     Index table offsets                  04660000
         ORG   &INTBLID                                                 04670000
.IXOFTTG ANOP                      Index table offset gen               04680000
&I       SETA  &I+1                                                     04690000
&INTBLOF SETC  '&INTBLPF'.'IXL'.'&I'.'-'.'&INTBLPF'.'TABL'              04700000
         DC    AL4(&INTBLOF)       Offset to index table                04710000
         AIF   (&I LT &NUMLVL).IXOFTTG                                  04720000
.*************************************************************          04730000
.*       Length Table                                        *          04740000
.*************************************************************          04750000
&I       SETA  0                                                        04760000
&INTBLID SETC  '&INTBLPF'.'LTBL'                                        04770000
&INTBLID DS    (&NUMLVL)AL1        Table of level lengths               04780000
         ORG   &INTBLID                                                 04790000
.LVLNTTG ANOP                      Length table generate                04800000
&I       SETA  &I+1                                                     04810000
         DC    AL1(&TABLLNG(&I))                                        04820000
         AIF   (&I LT &NUMLVL).LVLNTTG                                  04830000
.*************************************************************          04840000
.*       Default Text Table                                  *          04850000
.*************************************************************          04860000
&I       SETA  0                                                        04870000
&TABLLEN SETA  0                                                        04880000
&INTBLID SETC  '&INTBLPF'.'DTBL'                                        04890000
.DFTXINI ANOP                                                           04900000
&I       SETA  &I+1                                                     04910000
&TABLLEN SETA  &TABLLEN+&TABLLNG(&I)                                    04920000
         AIF   (&I LT &NUMLVL).DFTXINI                                  04930000
         DS    0H                  Align text table on halfwd  @Z21LJMO 04935000
&INTBLID DS    CL&TABLLEN          Table of level def text              04940000
.*                                                                      04950000
&I       SETA  0                                                        04960000
         ORG   &INTBLID                                                 04970000
.DEFTXTG ANOP                      Default text table gen               04980000
&I       SETA  &I+1                                                     04990000
&TABLLEN SETA  &TABLLNG(&I)                                             05000000
         DC    CL&TABLLEN&TABLDTX(&I)                                   05010000
         AIF   (&I LT &NUMLVL).DEFTXTG                                  05020000
.*************************************************************          05030000
.*       Process Default Code Entries                        *          05040000
.*************************************************************          05050000
&I       SETA  1                                                        05060000
&TABLID  SETA  0001                                                     05070000
.CODEDEF ANOP                      Process default code ent             05080000
&TABLLEN SETA  &TABLLNG(&I)                                             05090000
&LVL     SETA &I                                                        05100000
T&TABLEID&TABLID IAZTBLE CODE=0,TEXT=&TABLDTX(&I)                       05110000
&I       SETA  &I+1                                                     05120000
&TABLID  SETA  &TABLID+1                                                05130000
         AIF   (&I LT (&NUMLVL+1)).CODEDEF                              05140000
.*************************************************************          05150000
.*       Process Code Entries                                *          05160000
.*************************************************************          05170000
&I       SETA  1                                                        05180000
.CODENT  ANOP                      Process code entry                   05190000
&LVL     SETA  &SYSLIST(&I+1)                                           05200000
&TABLLEN SETA  &TABLLNG(&LVL)                                           05210000
         AIF   ('&TYPE' EQ 'FLAG').CODFLG                               05220000
T&TABLEID&TABLID IAZTBLE CODE=&SYSLIST(&I),TEXT=&SYSLIST(&I+2)          05230000
         AGO   .CODNXT                                                  05240000
.*************************************************************          05250000
.*       Process an entry for a FLAG Table                   *          05260000
.*************************************************************          05270000
.CODFLG  ANOP                      Process flag entry                   05280000
&LCLBITS SETC  '&SYSLIST(&I)'                                           05290000
.*       DC    CL40'&LCLBITS'                                           05300000
         AIF   ('&LCLBITS'(1,2) NE 'B''').CODFLGC                       05310000
&S       SETA  3                                                        05320000
&B       SETA  1                                                        05330000
.BITLP   AIF   ('&LCLBITS'(&S,1) EQ '1').CODFLGE                        05340000
         AIF   ('&LCLBITS'(&S,1) NE '0').CODFLGE                        05350000
&S       SETA  &S+1                                                     05360000
&B       SETA  &B+1                                                     05370000
         AGO   .BITLP                                                   05380000
.*                                                                      05390000
.CODFLGC ANOP                                                           05400000
&B       SETA  &SYSLIST(&I)+1                                           05410000
.CODFLGE ANOP                                                           05420000
T&TABLEID&TABLID IAZTBLE CODE=&B,TEXT=&SYSLIST(&I+2)                    05430000
.CODNXT  ANOP                      Process next entry                   05440000
&I       SETA  &I+3                                                     05450000
&TABLID  SETA  &TABLID+1                                                05460000
         AIF   (&I LT &CODECNT).CODENT                                  05470000
.*************************************************************          05480000
.*       Text Entry Count per Level Table                    *          05490000
.*************************************************************          05500000
&I       SETA  0                                                        05510000
&INTBLID SETC  '&INTBLPF'.'ETBL'                                        05520000
&INTBLID DS    (&NUMLVL)AL1        Table of text entry counts           05530000
         ORG   &INTBLID                                                 05540000
.TXTECTG ANOP                      Text entry count table gen           05550000
&I       SETA  &I+1                                                     05560000
         DC    AL1(&TABLRCT(&I))                                        05570000
         AIF   (&I LT &NUMLVL).TXTECTG                                  05580000
.*************************************************************          05590000
.*       TEXT TABLE - CONTAINS ACTUAL TABLE CODE TEXT        *          05600000
.*************************************************************          05610000
&I       SETA  0                                                        05620000
&TABLLEN SETA  0                                                        05630000
&TOTRCT  SETA  &TABLRCT(1)+&TABLRCT(2)+&TABLRCT(3)+&TABLRCT(4)          05640000
&INTBLID SETC  '&INTBLPF'.'TXTT'                                        05650000
.TXTXINI ANOP                                                           05660000
&I       SETA  &I+1                                                     05670000
&TABLLEN SETA  &TABLLEN+(&TABLLNG(&I)*&TABLRCT(&I))                     05680000
         AIF   (&I LT &NUMLVL).TXTXINI                                  05690000
         DS    0H                  Align text table on halfwd           05700000
&INTBLID DS    CL&TABLLEN          Table of text entries                05710000
.*                                                                      05720000
&I       SETA  0                                                        05730000
         ORG   &INTBLID                                                 05740000
&LVL     SETA  0                                                        05750000
&LCLRCT  SETA  1                                                        05760000
.*************************************************************          05770000
.*       Loop through and generate individual text entries   *          05780000
.*       using the macro array built by the IAZTBLE          *          05790000
.*       invocations.                                        *          05800000
.*************************************************************          05810000
.TABLNLV ANOP                      TEXT TABLE - NEW TEXT LEVEL          05820000
&LVL     SETA  &LVL+1                                                   05830000
&INTBLID SETC  '&INTBLPF'.'TXL'.'&LVL'                                  05840000
&INTBLID EQU   *                                                        05850000
.TABLTTG ANOP                      TEXT TABLE GENERATE                  05860000
&I       SETA  &I+1                                                     05870000
&LCLLVL  SETA  &TABLLVL(&I)                                             05880000
&TEMPC   SETC  'T&TABLEID'.'DC'.'&I'                                    05890000
         AIF   (&LCLLVL EQ 0).TABLNXT                                   05900000
         DC    CL&TABLLNG(&LCLLVL)'&TABLTXT(&I)'                        05910000
&LCLRCT  SETA  &LCLRCT+1                                                05920000
.TABLNXT ANOP                      Check for next text entry            05930000
         AIF   (&I LT &MAXC*&LVL).TABLTTG                               05940000
         AIF   (&NUMLVL NE &LVL).TABLNLV                                05950000
.DONTXT  ANOP                                                           05960000
&INTBLH  SETC  '&INTBLPF'.'TABL'                                        05970000
&INTBLID SETC  '&INTBLPF'.'TXTL'                                        05980000
&INTBLID EQU   *-&INTBLH                                                05990000
&INTBLID SETC  '&INTBLPF'.'TXTE'                                        06000000
&INTBLID EQU   *                    End of text portion                 06010000
.*************************************************************          06020000
.*       DECLARE THE INDEX TABLE WITH THE RIGHT LENGTH AND   *          06030000
.*       THEN ORG BACK TO FILL IT IN. JUST LOOP THROUGH      *          06040000
.*       THE ASSEMBLER ARRAY &TABLINDX FROM 1 TO 256         *          06050000
.*       GENERATING THE INDICES AS ADDRESS CONSTANTS         *          06060000
.*       OF LENGTH 1.                                        *          06070000
.*************************************************************          06080000
.*************************************************************          06090000
.*       INDEX TABLE - TRANSLATES REASON CODE TO INDEX IN    *          06100000
.*       TEXT TABLE                                          *          06110000
.*************************************************************          06120000
&I       SETA  0                                                        06130000
&LVL     SETA  0                                                        06140000
&INTBLID SETC  '&INTBLPF'.'XTBL'                                        06150000
&INTBLID DS    (&MAXC*&NUMLVL)XL1                                       06160000
         ORG   &INTBLID                                                 06170000
.TABLINL ANOP                      INDEX TABLE - NEW LEVEL              06180000
&LVL     SETA  &LVL+1                                                   06190000
&INTBLID SETC  '&INTBLPF'.'IXL'.'&LVL'                                  06200000
&INTBLID EQU   *                                                        06210000
.TABLITG ANOP                      INDEX TABLE GENERATE                 06220000
&I       SETA  &I+1                                                     06230000
&LVLLOC  SETA  ((&LVL-1)*&MAXC)                                         06240000
.TABLIEN ANOP                                                           06250000
         DC    AL1(&TABLINDX(&I))                                       06260000
         AIF   (&I LT &MAXC*&LVL).TABLITG                               06270000
         AIF   (&NUMLVL NE &LVL).TABLINL                                06280000
.DONIXD  ANOP                                                           06290000
&INTBLID SETC  '&INTBLPF'.'TEND'                                        06300000
&INTBLID EQU   *                   End of text table                    06310000
&INTBLID SETC  '&INTBLPF'.'TLEN'                                        06320000
&INTBLH  SETC  '&INTBLPF'.'TABL'                                        06330000
&INTBLID EQU   *-&INTBLH                                                06340000
.TABLEND ANOP                      END OF IAZTABL                       06350000
         MEND                                                           99999999
