*%/*                                                                    00010000
         MACRO                                                          00020000
&LABEL   POST  &ECB,               ECB address                         *00030000
               &CODE,              Completion code                     *00040000
               &ASCB=,             ASCB address                        *00050000
               &ECBKEY=,           Storage protection key              *00051000
               &ERRET=,            Address of error routine            *00052000
               &SERRET=,           LINKAGE=SYSTEM error routine    @L4A*00053000
               &MF=I,              I ! E ! L                           *00054000
               &BRANCH=,           NO ! YES                            *00055000
               &MEMREL=,           YES ! NO                            *00056000
               &LINKAGE=,          SVC ! SYSTEM ! BRANCH               *00057000
               &USELARL=NO,        NO ! YES                        @L5A*00057100
               &RELATED=           Any value                       @L1C 00058000
         AGO   .SKIP                                                 */ 00059000
*/****  START OF SPECIFICATIONS  *************************************/ 00060000
*/*                                                                  */ 00061000
*/*01*  MACRO NAME = POST                                            */ 00062000
*/*                                                                  */ 00063000
*/*01*  DESCRIPTIVE NAME = POST Macro                                */ 00064000
*/*                                                                  */ 00065000
*/*01*  COPYRIGHT=                                                   */ 00066000
*/*         5650-ZOS                                                 */ 00067000
*/*         COPYRIGHT IBM CORP. 1981, 2013                           */ 00069000
*/*         LICENSED MATERIALS - PROPERTY OF IBM                     */ 00070000
*/*                                                                  */ 00071000
*/*01*  STATUS =  HBB7790                                            */ 00072000
*/*                                                                  */ 00073000
*/*01*  EXTERNAL CLASSIFICATION: PI                                  */ 00074000
*/*01*  END OF EXTERNAL CLASSIFICATION:                              */ 00075000
*/*                                                                  */ 00076000
*/*01*  FUNCTION =                                                   */ 00077000
*/*       Provides an interface to the POST service routine          */ 00078000
*/*       (IEAVEPST).                                                */ 00079000
*/*                                                                  */ 00080000
*/*02*    OPERATION =                                                */ 00081000
*/*         The POST macro parses the keywords and invokes           */ 00082000
*/*         IEAVEPST via an SVC, a stacking PC or Branch entry.      */ 00083000
*/*         Reg 0, 1, 14 and 15 are set accordingly.                 */ 00084000
*/*         The POST service routine (IEAVEPST) is invoked using     */ 00085000
*/*         SVC(2), register 14 for the PC or BALR.                  */ 00086000
*/*                                                                  */ 00087000
*/*                                                                  */ 00088000
*/*01*  INPUT =  (BAL)                                               */ 00089000
*/*                                                                  */ 00090000
*/*       ,ECB              ECB address.                             */ 00091000
*/*                                                                  */ 00092000
*/*          ,CODE          Completion code.  Default: 0             */ 00093000
*/*                                                                  */ 00094000
*/*          ,ASCB=         ASCB address                             */ 00095000
*/*                                                                  */ 00096000
*/*          ,BRANCH=       NO ! YES  Default: NO                    */ 00097000
*/*                         Indicates branch entry or SVC linkage.   */ 00098000
*/*                         This function has been replaced by       */ 00099000
*/*                         LINKAGE keyword.                         */ 00100000
*/*                                                                  */ 00101000
*/*          ,ERRET=        Error routine address                    */ 00102000
*/*                         Do not specify with SERRET.              */ 00103000
*/*                                                                  */ 00104000
*/*          ,SERRET=       LINKAGE=SYSTEM error routine.        @L4A*/ 00105000
*/*                         Do not specify with ERRET.           @L4A*/ 00106000
*/*                         Always gets control with PASN        @L4A*/ 00107000
*/*                         matching the POST invoker's PASN.    @L4A*/ 00108000
*/*                         SERRET is like ERRET w/ LINKAGE=SYSTEM.  */ 00108100
*/*                                                              @01A*/ 00108200
*/*                                                                  */ 00109000
*/*          ,ECBKEY=       Storage protection key of the ECB to be  */ 00110000
*/*                         POSTED.                                  */ 00111000
*/*                                                                  */ 00112000
*/*          ,LINKAGE=      SVC ! SYSTEM ! BRANCH  Default: SVC      */ 00113000
*/*                         SVC - specifies SVC linkage to the       */ 00114000
*/*                         service routine. Valid only in           */ 00115000
*/*                         primary (P=H=S) mode.                    */ 00116000
*/*                         SYSTEM - specifies PC linkage to the     */ 00117000
*/*                         service routine. Valid in both primary   */ 00118000
*/*                         (P=H) mode and primary (P^H) mode.       */ 00119000
*/*                         BRANCH - specifies branch entry linkage  */ 00120000
*/*                         to the service routine.                  */ 00121000
*/*                                                                  */ 00122000
*/*          ,MF=           I ! E ! L   Default: I                   */ 00123000
*/*                         I - In-line POST                         */ 00124000
*/*                         E - Execute form                         */ 00125000
*/*                         L - List form                            */ 00126000
*/*                                                                  */ 00127000
*/*          ,MEMREL=       YES ! NO       Default: YES              */ 00128000
*/*                         Memory related.                          */ 00129000
*/*                         Can only be coded with LINKAGE=BRANCH    */ 00130000
*/*                                                                  */ 00131000
*/*          ,USELARL=      NO ! YES       Default: NO               */ 00131100
*/*                         For ERRET/SERRET when not in a register. */ 00131200
*/*                         When YES, use LARL instead of LA         */ 00131300
*/*                                                                  */ 00131400
*/*          ,RELATED=      Any value                                */ 00132000
*/*                                                                  */ 00133000
*/*                                                                  */ 00134000
*/*01*  INPUT =  (PLAS)                                              */ 00135000
*/*                         See POSTP for PLAS input description.    */ 00136000
*/*                                                                  */ 00137000
*/*                                                                  */ 00138000
*/*02*    NOTES =                                                    */ 00139000
*/*         -  The BRANCH= parameter is provided for compatibility   */ 00140000
*/*            only. The LINKAGE= parameter should be used instead.  */ 00141000
*/*         -  The ERRET= parameter can only be coded without the    */ 00142000
*/*            ASCB= parameter if LINKAGE=SYSTEM.                    */ 00143000
*/*         -  The SERRET= parameter can be coded only with          */ 00144000
*/*            LINKAGE=SYSTEM.                                       */ 00145000
*/*                                                                  */ 00146000
*/*                                                                  */ 00147000
*/*01*  NOTES =                                                      */ 00148000
*/*                                                                  */ 00149000
*/*02*    RESTRICTIONS = None                                        */ 00150000
*/*                                                                  */ 00151000
*/*02*    DEPENDENCIES = None                                        */ 00152000
*/*                                                                  */ 00153000
*/*03*      CHARACTER-CODE DEPENDENCIES= EBCDIC                      */ 00154000
*/*                                                                  */ 00155000
*/*01*  MODULE TYPE = BIL MACRO                                      */ 00156000
*/*                                                                  */ 00157000
*/*02*    PROCESSOR = ASSEMBLER-H  or  PLAS                          */ 00158000
*/*                                                                  */ 00159000
*/*02*    INVOCATION = See MACRO definition                          */ 00160000
*/*                                                                  */ 00161000
*/*01*  COMPONENT  =  SC1CL (TASK MANAGEMENT)                        */ 00162000
*/*                                                                  */ 00163000
*/*01*  DISTRIBUTION LIBRARY = AMACLIB                               */ 00164000
*/*                                                                  */ 00165000
*/**** END OF SPECIFICATIONS *****************************************/ 00166000
*/*                                                                     00167000
*                                                                       00168000
*    CHANGE ACTIVITY =                                                  00169000
*    $D1=28      JBB1326  800922  PDXL:    BRANCH Parameter             00170000
*    $D2=28      JBB1326  800922  PDXB:    MEMREL Parameter             00171000
*    $L1=AR      HBB3310  860825  PD16LD:  Access Registers             00172000
*    $D3=DCR0182 HBB3310  861229  PD16Q9:  Allow ERRET with             00173000
*                                          LINKAGE=SYSTEM               00174000
*    $L2=POSIX   HBB4430  920110  PD16FH:  Allow ECBKEY with            00175000
*                                          LINKAGE=BRANCH               00176000
*    OY32157  - Load completion code from Register 0 into      @YA32157 00177000
*               Register 10 on branch entry.         90183     @YA32157 00178000
*    $L3=64BITSUP HBB7703 981204 PD00XB: ESAME                          00179000
*    $L4=ME21135  HBB7780 110311 PD00KP: Add SERRET keyword.            00180000
*                                        UR1 of OA34523                 00180100
*    $01=OA36944  HBB7780 110708 PD00KP: Prolog change.  SERRET is      00180200
*                                        like ERRET w/ LINKAGE=SYSTEM   00180300
*    $L5=ME25356  HBB7790 121206 PD00XB: USELARL                        00180400
*    $02=OA44094  HBB7790 131225 PD00XB: Correct @L5 errors             00180500
*                                                                       00180600
*********************************************************************** 00180700
.*                                                                      00180800
.SKIP    ANOP ,                                                    @L1A 00180900
*        MACDATE  12/25/13                                         @L4C 00181000
.*                                                                      00181100
.********************************************************************** 00181200
.*                                                                    * 00181300
.*       Declare GLOBAL and LOCAL variables                           * 00181400
.*                                                                    * 00182000
.********************************************************************** 00183000
.*                                                                      00184000
         LCLA   &OSFT         Offset into System Function Table    @L1A 00185000
         LCLC   &LINKVAL      Value of LINKVAL or BRANCH           @L1A 00186000
         LCLA   &A                                               YM1995 00187000
         LCLC   &LIST,&MASK,&NX,&LISTA,&SHIFT,&B1                  @D1A 00188000
         LCLC  &L,&LR,&LA                                          @L5C 00189000
         GBLC  &SYSAM64                                            @MXA 00190000
         GBLA  &SYSALVL                                            @L5A 00190100
         SYSSTATE TEST                                             @MXA 00191000
         AIF   ('&SYSAM64' EQ 'YES').AM641                         @MXA 00192000
&L       SETC  'L'                                                 @MXA 00193000
&LR      SETC  'LR'                                                @MXA 00194000
         AGO   .AM31641                                            @MXA 00195000
.AM641   ANOP                                                      @MXA 00196000
&L       SETC  'LLGT'                                              @MXA 00197000
&LR      SETC  'LGR'                                               @MXA 00198000
.AM31641 ANOP                                                      @MXA 00199000
&LA      SETC  'LA'                                                @L5A 00199100
         AIF   ('&USELARL' NE 'YES').LARL1A                        @L5A 00199200
&LA      SETC  'LARL'                                              @L5A 00199300
.LARL1A  ANOP                                                      @L5A 00199400
.*                                                                      00200000
.********************************************************************** 00201000
.*                                                                    * 00202000
.*       Constants                                                    * 00203000
.*                                                                    * 00204000
.********************************************************************** 00205000
.*                                                                      00206000
&OSFT    SETA   172           Offset into SFT for POST             @L1A 00207000
.*                                                                      00208000
.********************************************************************** 00209000
.*                                                                    * 00210000
.*       Initialization                                               * 00211000
.*                                                                    * 00212000
.********************************************************************** 00213000
         ACTR  10000          Set for infinite loop control        @L1A 00214000
.*                            Reset Global Variables               @L1A 00215000
&LIST    SETC   'PST'.'&SYSNDX'                                         00216000
&MASK    SETC   'POST'.'&SYSNDX'                                        00217000
&SHIFT   SETC   '16*'                                          @ZA15373 00218000
.*                                                                    * 00219000
.********************************************************************** 00220000
.*  EVALUATE BRANCH AND LINKAGE PARAMETERS                            * 00221000
.*  BRANCH parameter should not be used                            @L1A 00222000
.********************************************************************** 00223000
.*                                                                      00224000
         AIF   ('&BRANCH&LINKAGE' EQ '').LNKSVC    Both null       @L1A 00225000
         AIF   (T'&BRANCH NE 'O' AND T'&LINKAGE NE 'O').ERR14      @L1A 00226000
         AIF   (T'&ERRET NE 'O' AND T'&SERRET NE 'O').ERR14A       @L4A 00227000
         AIF   ('&BRANCH' EQ 'NO' OR '&LINKAGE' EQ 'SVC').LNKSVC   @L1A 00228000
         AIF   ('&BRANCH' EQ 'YES').LNKBRAN        Issue MNOTE     @L1A 00229000
         AIF   ('&LINKAGE' EQ 'BRANCH').LNKBR      BRANCH linkage  @L1A 00230000
         AIF   ('&LINKAGE' EQ 'SYSTEM').LNKSYS     PC linkage      @L1A 00231000
         AIF   ('&BRANCH' NE '').ERR12             Invalid BRANCH  @L1A 00232000
         AGO   .ERR15                              Invalid LINKAGE @L1A 00233000
.LNKBRAN ANOP  ,                                                   @L1A 00234000
         MNOTE 0,' LINKAGE=BRANCH SHOULD BE USED INSTEAD OF BRANCH=YES' 00235000
.LNKBR   ANOP  ,                                                   @L1A 00236000
&LINKVAL SETC  'BRANCH'             Indicate branch entry linkage  @L1A 00237000
         AGO   .LNKEND                                             @L1A 00238000
.LNKSVC  ANOP                                                      @L1A 00239000
&LINKVAL SETC  'SVC'                Indicate SVC linkage (Default) @L1A 00240000
         AGO   .LNKEND                                             @L1A 00241000
.LNKSYS  ANOP  ,                                                   @L1A 00242000
&LINKVAL SETC  'SYSTEM'             Indicate SYSTEM linkage        @L1A 00243000
.LNKEND  ANOP  ,                                                   @L1A 00244000
.*                                                                    * 00245000
         AIF   ('&LINKAGE' EQ 'SYSTEM' AND '&ASCB' NE '' AND           x00246000
               '&ECBKEY' EQ '').ERR16                              @L1A 00247000
.*                                                                    * 00248000
.********************************************************************** 00249000
.*  SET BRANCH ENTRY DIGIT                                         @D1A 00250000
.********************************************************************** 00251000
.*  (USED TO CHANGE '0' TO '10' AND '1' TO '11' FOR BRANCH ENTRY        00252000
         AIF    ('&LINKVAL' NE 'BRANCH').LTST                      @L1C 00253000
&B1      SETC   '1'                                                @D1A 00254000
.LTST    ANOP                                                      @D1A 00255000
.*                                                                      00256000
.*  LIST FORMAT DOES NOT ALLOW THE CODE PARAMETER                       00257000
         AIF    ('&MF' EQ 'L').LIST1                                    00258000
.*                                                                      00259000
.*  SORT OUT POSSIBLE COMPLETION CODE FORMATS                           00260000
.*                                                                      00261000
         AIF    ('&CODE' EQ '' OR '&CODE' EQ '0').C1                    00262000
         AIF    ('&CODE'(1,1) EQ '(').C2                                00263000
         AIF    (T'&CODE NE 'N').C3                                     00264000
         AIF    (&CODE GT 4095).C4                                      00265000
.*                                                                      00266000
.*  ESTABLISH THE POST LABEL AND SET COMPLETION CODE IN REG 0 OR 10     00267000
.*                                                                      00268000
.* CODE IS NUMERIC, LESS THAN 4096                                      00269000
&LABEL   LA    &B1.0,&CODE.(0,0)      . SET POST CODE              @D1A 00270000
         AGO   .TYPE                                                    00271000
.*                                                                      00272000
.* CODE IS BLANK OR ZERO, SET ZERO COMPLETION CODE                      00273000
.C1      ANOP                                                           00274000
&LABEL   SR    &B1.0,&B1.0            . SET POST CODE              @D1A 00275000
         AGO   .TYPE                                                    00276000
.*                                                                      00277000
.* CODE IS IN A REGISTER                                                00278000
.C2      AIF   (N'&CODE GT 1).ERR3                                      00279000
         AIF   ('&LINKVAL' NE 'BRANCH' AND '&CODE(1)' EQ '0').C2A       00280000
.*                                                             @YA32157 00281000
&LABEL   LR    &B1.0,&CODE(1)         . SET POST CODE              @D1A 00282000
         AGO   .TYPE                                                    00283000
.C2A     AIF   ('&LABEL' EQ '').TYPE                                    00284000
&LABEL   DS    0H                                                       00285000
         AGO   .TYPE                                                    00286000
.* CODE IS NON-NUMERIC, E.G., A LABEL                                   00287000
.C3      ANOP                                                           00288000
&LABEL   LA    &B1.0,&CODE            . SET POST CODE              @D1A 00289000
         AGO   .TYPE                                                    00290000
.* CODE IS A NUMBER GREATER THAN 4095                                   00291000
.C4      ANOP                                                      @02C 00293000
         AIF   (&SYSALVL GT 0).ALVL10A                             @02A 00294000
         CNOP  0,4                                                      00295000
&LABEL   B     *+8                    . BRANCH AROUND CONSTANT          00295100
         DC    A(&CODE)               . FULLWORD CODE VALUE             00295200
         L     &B1.0,*-4              . LOAD POST CODE             @D1A 00295300
         AGO   .ALVL10C                                            @02A 00295400
.ALVL10A ANOP                                                      @02A 00295500
         AIF   (&SYSALVL GT 2).ALVL10B                             @02A 00295600
&LABEL   L     &B1.0,=A(&CODE)        . LOAD POST CODE             @02C 00295700
         AGO   .ALVL10C                                            @02A 00295800
.ALVL10B ANOP                                                      @02A 00295900
&LABEL   IILF  &B1.0,&CODE            . LOAD POST CODE             @02A 00296000
.ALVL10C ANOP                                                      @02A 00296100
.*                                                                      00296200
.*  DETERMINE MACRO FORM.                                               00297000
.*                                                                      00298000
.TYPE    AIF   ('&MEMREL' NE 'NO' AND '&MEMREL' NE 'YES'               *00299000
               AND '&MEMREL' NE '').ERR13                          @D2A 00300000
         AIF   ('&SERRET' NE '' AND '&LINKAGE' NE 'SYSTEM').ERR7A  @L4A 00301000
         AIF   ('&MF' NE 'I' OR '&ASCB' NE '').XMPOST                   00302000
         AIF   ('&ERRET' NE '' AND '&LINKAGE' NE 'SYSTEM').ERR7    @D3C 00303000
         AIF   ('&ECBKEY' NE '' AND '&LINKVAL' NE 'BRANCH').ERR8   @L1C 00304000
         AIF   ('&MEMREL' NE '').ERR8B                             @D2A 00305000
.*                                                                      00306000
.*  OLD FORM IN-LINE POST                                               00307000
.*    R0 IS ALREADY SET WITH THE COMPLETION CODE                        00308000
.*    R1 NEEDS THE ECB ADDRESS                                          00309000
         AIF   ('&ECB' EQ '').ERR2    . ECB MUST BE CODED               00310000
         AIF   ('&ECB'(1,1) NE '(').S1 . LABEL                          00311000
         LA    &B1.1,0(0,&ECB(1))     . LOAD ECB, CLEAR HI BYTE    @D1A 00312000
         AGO   .SVC                                                     00313000
.S1      LA    &B1.1,&ECB             . LOAD ECB ADDRESS           @D1A 00314000
         AGO   .SVC                                                     00315000
.********************************************************************** 00316000
.*                                                                      00317000
.*  XMPOST                                                              00318000
.*                                                                      00319000
.* FOR SVC ENTRY:                                                  @D1A 00320000
.*    R0  CONTAINS THE COMPLETION CODE AND ECBKEY BIT IF OPTION REQ     00321000
.*    R1  CONTAINS THE ADDRESS OF A LIST IN THE FORMAT:                 00322000
.*          WORD 1  ECB ADDRESS                                         00323000
.*          WORD 2  ASCB ADDRESS                                        00324000
.*          WORD 3  ERRET ADDRESS                                       00325000
.*          WORD 4  ECBKEY IN BYTE 0 IF OPTION REQUESTED       @ZA15373 00326000
.*         WITH THE HIGH ORDER BIT IN R1 ON TO INDICATE THE             00327000
.*         REQUEST TYPE                                                 00328000
.*                                                                      00329000
.* FOR BRANCH ENTRY:                                                    00330000
.*    R0  CONTAINS THE ECBKEY IF SPECIFIED                              00331000
.*    R10 CONTAINS THE COMPLETION CODE (HIGH BIT ON FOR ECBKEY)         00332000
.*    R11 CONTAINS THE ECB ADDRESS  (HIGH BIT ON FOR CROSS-ADDR)        00333000
.*    R12 CONTAINS THE ERRET SPECIFICATION                              00334000
.*    R13 CONTAINS THE ASCB ADDRESS                                     00335000
.*                                                                      00336000
.* For LINKAGE=SYSTEM:                                             @L4A 00337000
.*    R0  Contains the completion code                             @L4A 00338000
.*    R1  Contains the address of a list in the format:            @L4A 00339000
.*          Word 1  ECB address                                    @L4A 00340000
.*          Word 2  ASCB address                                   @L4A 00341000
.*          Word 3  ERRET address (via ERRET or SERRET)            @L4A 00342000
.*          Word 4  ECBKEY in byte 0                               @L4A 00343000
.*                  SERRET-specified indication in BYTE 1          @L4A 00344000
.*         With the high order bit in R1 on to indicate the        @L4A 00345000
.*         request type                                            @L4A 00346000
.*                                                                      00347000
.*                                                                      00348000
.XMPOST  AIF   (T'&ECB EQ 'O').XM1       SKIP SUBSTRING TEST            00349000
         AIF   ('&ECB'(1,1) EQ '(' AND N'&ECB GT 1).ERR3                00350000
.XM1     AIF   (T'&ASCB EQ 'O').XM2       SKIP SUBSTRING TEST           00351000
         AIF   ('&ASCB'(1,1) EQ '(' AND N'&ASCB GT 1).ERR3              00352000
.XM2     AIF   (T'&ERRET EQ 'O').XM2A                              @L4C 00353000
         AIF   ('&ERRET'(1,1) EQ '(' AND N'&ERRET GT 1).ERR3            00354000
.XM2A    AIF   (T'&SERRET EQ 'O').XM3                              @L4A 00355000
         AIF   ('&SERRET'(1,1) EQ '(' AND N'&SERRET GT 1).ERR3     @L4A 00356000
.XM3     AIF   (T'&ECBKEY EQ 'O').XM4                          @ZA15373 00357000
         AIF   ('&ECBKEY'(1,1) EQ '(' AND N'&ECBKEY GT 1).ERR3 @ZA15373 00358000
.XM4     AIF   ('&MF' NE 'I').EXECUTE                          @ZA15373 00359000
.********************************************************************** 00360000
.*                                                                      00361000
.*  INTERREGIONAL IN-LINE POST                                          00362000
.*                                                                      00363000
.*   SET REGISTER INDICATED VALUES IN THE PARAMETER LIST                00364000
         AIF   ('&ECB' EQ '').ERR2      ECB PARAMETER MUST BE CODED     00365000
         AIF   (T'&ASCB EQ 'O' AND                                     *00366000
               (T'&ERRET NE 'O' OR T'&SERRET NE 'O')).ERR7         @L4C 00367000
         AIF   (T'&ERRET EQ 'O' AND T'&SERRET EQ 'O' AND               *00368000
               T'&ASCB NE 'O').ERR1                                @L4C 00369000
         AIF   ('&LINKVAL' EQ 'BRANCH').BRAN                       @L1C 00370000
         AIF   ('&MEMREL' NE '').ERR8B                             @D2A 00371000
&A       SETA  12                       BASE LIST LENGTH       @ZA15373 00372000
         AIF   ('&ECB'(1,1) NE '(').R1                                  00373000
.*  SET ECB ADDRESS IN LIST                                    @ZA15373 00374000
         ST    &ECB(1),&LIST          . SET THE ECB ADDRESS             00375000
         AGO   .R1A                                                     00376000
.R1      LA    1,&ECB                 . ADDRESS THE ECB                 00377000
         ST    1,&LIST                . STORE IN PARM LIST              00378000
.*  SET ASCB ADDRESS IN LIST+4                                 @ZA15373 00379000
.R1A     AIF   (T'&ASCB EQ 'O').R3A                                     00380000
         AIF   ('&ASCB'(1,1) NE '(').R2                                 00381000
         ST    &ASCB(1),&LIST+4       . SET THE ASCB ADDRESS            00382000
         AGO   .R2A                                                     00383000
.R2      LA    1,&ASCB                . ADDRESS THE ASCB WORD           00384000
         ST    1,&LIST+4              . STORE IN PARM LIST              00385000
.*  SET ERRET ADDRESS IN LIST+8                                @ZA15373 00386000
.R2A     AIF   ('&SERRET' NE '').R2A1                              @L4A 00387000
         AIF   ('&ERRET'(1,1) NE '(').R3                                00388000
         ST    &ERRET(1),&LIST+8        . SET THE ERRET ADDRESS         00389000
         AGO   .R3A                                                     00390000
.R3      ANOP                                                           00391000
         &LA   1,&ERRET                                                 00391200
         ST    1,&LIST+8              . STORE IN PARM LIST              00392000
         AGO   .R3A                                                @L4A 00393000
.R2A1    AIF   ('&SERRET'(1,1) NE '(').R31                         @L4A 00394000
         ST    &SERRET(1),&LIST+8       . SET THE SERRET ADDRESS   @L4A 00395000
         OI    &LIST+13,X'80'           . Indicate SERRET          @L4A 00396000
         AGO   .R3A                                                @L4A 00397000
.R31     ANOP                                                      @L4A 00398000
         AIF   ('&SERRET' EQ 'YES').ERR9A                          @L4A 00399000
         &LA   1,&SERRET                                           @L4A 00400000
         ST    1,&LIST+8              . STORE IN PARM LIST         @L4A 00401000
         OI    &LIST+13,X'80'           . Indicate SERRET          @L4A 00402000
         AGO   .R3A                                                @L4A 00403000
.*  SET ECBKEY IN LIST+12                                      @ZA15373 00404000
.R3A     AIF   (T'&ECBKEY EQ 'O').R5                           @ZA15373 00405000
&A       SETA  &A+4                   ADD 4 BYTES FOR ECBKEY   @ZA15373 00406000
         AIF   ('&ECBKEY'(1,1) EQ '(').R4                      @ZA15373 00407000
         AIF   ('&ECBKEY' EQ 'YES').ERR9                       @ZA15373 00408000
         AIF   (T'&ECBKEY NE 'N').R3B                          @ZA15373 00409000
         AIF   (&ECBKEY GT 15).ERR9                            @ZA15373 00410000
.R3B     ANOP                                                  @ZA15373 00411000
         MVI   &LIST+12,&SHIFT&ECBKEY . SAVE ECBKEY IN LIST    @ZA15373 00412000
         AGO   .R4A                                            @ZA15373 00413000
.R4      STC   &ECBKEY(1),&LIST+12    . SAVE ECBKEY IN LIST    @ZA15373 00414000
.R4A     ANOP                                                  @ZA15373 00415000
         AIF   (&SYSALVL GT 1).ALVL1A                              @L5A 00415100
         LA    1,X'800'(0,0)                                   @ZA15373 00416000
         SLL   1,20(0)                                         @ZA15373 00417000
         OR    0,1                    . SET ECBKEY BIT         @ZA15373 00418000
         AGO   .ALVL1B                                             @L5A 00418100
.ALVL1A  ANOP                                                      @L5A 00418200
         OILH  0,X'8000'              . SET ECBKEY BIT             @L5A 00418300
.ALVL1B  ANOP                                                      @L5A 00418400
.*                                                                      00419000
.* ADDRESS AND DEFINE THE PARAMETER LIST                                00420000
.R5      CNOP  0,4                                                      00421000
         BRAS  1,*+&A+4               . ADDRESS PARM LIST          @02A 00423400
&LIST    DC    A(0)                   . 1ST WORD - ECB ADDRESS          00424000
         DC    A(0)                   . 2ND WORD - ASCB ADDRESS         00425000
         DC    A(0)                   . 3RD WORD - ERRET ADDRESS        00426000
         AIF   (T'&ECBKEY EQ 'O' AND T'&SERRET EQ 'O').R7          @02C 00427000
         AIF   ('&SERRET' NE '').R6                                @L4A 00427100
         DC    A(0)                   . 4TH WORD - BYTE0,ECBKEY@ZA15373 00427200
         AGO   .R7                                                 @L4A 00427300
.R6      DC    A(0)                   . 4th word - ECBKEY, SERRET  @L4A 00427400
.R7      ANOP                                                      @L4A 00427500
         OILH  1,X'8000'              . TURN ON HIGH BIT           @02A 00427700
         AGO   .SVC                                                     00427900
.********************************************************************** 00428000
.*                                                                      00428100
.*  BRANCH ENTRY FORM                                                   00428200
.*                                                                      00428300
.BRAN    ANOP                                                      @D1A 00429000
.*                                                                 @D1A 00430000
.*                                                                 @D1A 00431000
.*  ECB ADDRESS IN R11                                             @D1A 00432000
.B2      ANOP                                                      @D1A 00433000
         AIF   ('&ECB'(1,1) NE '(').B2A                            @D1A 00434000
         AIF   ('&ECB(1)' EQ '11').B2B                             @D1A 00435000
         LR    11,&ECB(1)             . ECB ADDRESS                @D1A 00436000
         AGO   .B2B                                                @D1A 00437000
.B2A     LA    11,&ECB                . ECB ADDRESS                @D1A 00438000
.B2B     ANOP                                                           00439000
         AIF   (&SYSALVL GT 1).ALVL2A                              @L5A 00439100
         LA    15,X'800'(0,0)                                      @D1A 00439700
         SLL   15,20(0)                                            @D1A 00440000
         OR    11,15                  . SET CROSS ADDR BIT         @D1A 00441000
         AGO   .ALVL2B                                             @L5A 00441100
.ALVL2A  ANOP                                                      @L5A 00441200
         OILH  11,X'8000'             . SET CROSS ADDR BIT         @L5A 00441300
.ALVL2B  ANOP                                                      @L5A 00441400
.*                                                                 @D1A 00442000
.*  ASCB ADDR IN R13                                               @D1A 00443000
.B3      AIF   (T'&ASCB EQ 'O').B5                                 @D1A 00444000
         AIF   ('&ASCB'(1,1) NE '(').B3A                           @D1A 00445000
         LR    13,&ASCB(1)            . ASCB ADDRESS               @D1A 00446000
         AGO   .B4                                                 @D1A 00447000
.B3A     LA    13,&ASCB               . ASCB ADDRESS               @D1A 00448000
.*                                                                 @D1A 00449000
.*  ERRET IN R12                                                   @D1A 00450000
.B4      AIF   ('&ERRET'(1,1) NE '(').B4A                          @D1A 00451000
         LA    12,0(,&ERRET(1))       . ERRET IN R12               @D2A 00452000
         AGO   .B6                                                 @D1A 00453000
.B4A     ANOP                                                           00454000
         &LA   12,&ERRET              . ERRET IN R12               @D1A 00454200
.B6      AIF   ('&MEMREL' NE 'NO').B5                              @D2A 00455000
         AIF   (&SYSALVL GT 1).ALVL3A                              @L5A 00455100
         OR    12,15                  . NOT MEMORY RELATED         @D2A 00456000
         AGO   .ALVL3B                                             @L5A 00456100
.ALVL3A  ANOP                                                      @L5A 00456200
         OILH  12,X'8000'             . NOT MEMORY RELATED         @L5A 00456300
.ALVL3B  ANOP                                                      @L5A 00456400
.*                                                                 @D1A 00457000
.*  ECBKEY IN R0                                                   @D1A 00458000
.B5      AIF   (T'&ECBKEY EQ 'O').SVC                              @D1A 00459000
         AIF   ('&ECBKEY'(1,1) EQ '(').B5B                         @D1A 00460000
         AIF   ('&ECBKEY' EQ 'YES').ERR9                           @D1A 00461000
         AIF   (T'&ECBKEY NE 'N').B5A                              @D1A 00462000
         AIF   (&ECBKEY GT 15).ERR9                                @D1A 00463000
.B5A     LA    0,&SHIFT&ECBKEY        . ECBKEY IN R0               @D1A 00464000
         AGO   .B5C                                                @D1A 00465000
.B5B     LR    0,&ECBKEY(1)           . ECBKEY IN R0               @D1A 00466000
.B5C     ANOP                                                           00467000
         AIF   (&SYSALVL GT 1).ALVL4A                              @L5A 00467100
         OR    10,15                  . SET ECBKEY FLAG BIT        @D1A 00467700
         AGO   .ALVL4B                                             @L5A 00467800
.ALVL4A  ANOP                                                      @L5A 00467900
         OILH  10,X'8000'             . SET ECBKEY FLAG BIT        @L5A 00468000
.ALVL4B  ANOP                                                      @L5A 00468200
         AGO   .SVC                                                @D1A 00468300
.********************************************************************** 00469000
.*                                                                      00470000
.*  INTERREGIONAL LIST FORM                                             00471000
.*                                                                      00472000
.LIST1   AIF   ('&CODE' NE '').ERR4     CC NOT ALLOWED IN LIST          00473000
         AIF   ('&LINKVAL' EQ 'BRANCH').ERR10                      @L1C 00474000
         AIF   ('&MEMREL' NE '').ERR8B                             @D2A 00475000
.L1A     AIF   (T'&ASCB EQ 'O').L1B                                     00476000
         AIF   ('&ASCB'(1,1) EQ '(').ERR5                               00477000
.L1B     AIF   (T'&ERRET EQ 'O').L1B1                              @L4C 00478000
         AIF   ('&ERRET'(1,1) EQ '(').ERR5                              00479000
.L1B1    AIF   (T'&SERRET EQ 'O').L1C                              @L4A 00480000
         AIF   ('&SERRET'(1,1) EQ '(').ERR5                        @L4A 00481000
.L1C     AIF   (T'&ECBKEY EQ 'O').L1D                          @ZA15373 00482000
         AIF   ('&ECBKEY'(1,1) EQ '(').ERR5                    @ZA15373 00483000
.L1D     AIF   ('&ECB' EQ '').L2                                        00484000
         AIF   ('&ECB'(1,1) EQ '(').ERR5                                00485000
&LABEL   DC    A(&ECB)                . 1ST WORD - ECB ADDRESS          00486000
         AGO   .L3                                                      00487000
.L2      ANOP                                                           00488000
&LABEL   DC    A(0)                   . 1ST WORD - ECB ADDRESS          00489000
.L3      AIF   ('&ASCB' EQ '').L4                                       00490000
         DC    A(&ASCB)               . 2ND WORD - ASCB ADDRESS         00491000
         AGO   .L5                                                      00492000
.L4      DC    A(0)                   . 2ND WORD - ASCB ADDRESS         00493000
.L5      AIF   ('&ERRET' EQ '' AND '&SERRET' EQ '').L6             @L4C 00494000
         AIF   ('&SERRET' EQ 'YES').L6                             @L4A 00495000
         DC    A(&ERRET&SERRET)       . 3RD WORD - ERRET ADDRESS   @L4C 00496000
         AGO   .L7                                                      00497000
.L6      DC    A(0)                   . 3RD WORD - ERRET ADDRESS        00498000
.L7      AIF   ('&ECBKEY' NE '').L7A                           @ZA15373 00499000
         AIF   ('&SERRET' NE '').L7B                               @L4A 00500000
         MEXIT                                                 @ZA15373 00501000
.L7A     AIF   ('&ECBKEY'(1,3) NE 'YES').ERR9                  @ZA15373 00502000
.L7B     AIF   ('&SERRET' NE '').L7C                               @L4A 00503000
         DC    A(0)                   . 4TH WORD - BYTE0,ECBKEY@ZA15373 00504000
         AGO   .L7D                                                @L4A 00505000
.L7C     DC    A(X'00800000')         . 4th word - ECBKEY, SERRET  @L4A 00506000
.L7D     ANOP                                                      @L4A 00507000
         MEXIT                                                          00508000
.********************************************************************** 00509000
.*                                                                      00510000
.*  INTERREGIONAL EXECUTE FORM                                          00511000
.*                                                                      00512000
.EXECUTE AIF   ('&MF'(1,1) NE '(').ERR6                                 00513000
         AIF   ('&MF(1)' NE 'E').ERR6                                   00514000
         AIF   (N'&MF NE 2).ERR6                                        00515000
         AIF   ('&LINKVAL' EQ 'BRANCH').ERR11                      @L1C 00516000
         AIF   ('&MEMREL' NE '').ERR8B                             @D2A 00517000
.*   LIST PARAMETER                                                     00518000
         AIF   ('&MF(2)'(1,1) EQ '(').X1   CHECK LIST IN A REG   YM1995 00519000
&NX      SETC  '+'                             'PLUS' A LABEL           00520000
&LISTA   SETC   '&MF(2)'                                         YM1995 00521000
         AGO   .X2                                               YM1995 00522000
.X1      ANOP                                                    YM1995 00523000
&A       SETA  K'&MF-6                                           YM1995 00524000
&LISTA   SETC  '&MF'(5,&A)                                       YM1995 00525000
&LISTA   SETC  '(&LISTA)'                                      @ZA49183 00526000
.*                                                                      00527000
.*   ECB PARAMETER                                                      00528000
.X2      AIF   ('&ECB' EQ '').X4                                        00529000
         AIF   ('&ECB'(1,1) EQ '(').X3                                  00530000
         LA    15,&ECB               . ADDRESS OF ECB                   00531000
         ST    15,0&NX&LISTA         . STORE ECB ADDRESS         YM1995 00532000
         AGO   .X4                                                      00533000
.X3      ST    &ECB(1),0&NX&LISTA    . STORE ECB ADDRESS         YM1995 00534000
.*                                                                      00535000
.*   ASCB AND (S)ERRET PARAMETERS                                  @L4C 00536000
.X4      AIF   ('&ASCB' EQ '').X6                                       00537000
         AIF   ('&ASCB'(1,1) EQ '(').X5                                 00538000
         LA    15,&ASCB              . ADDRESS OF ASCB                  00539000
         ST    15,4&NX&LISTA         . STORE ASCB ADDRESS        YM1995 00540000
         AGO   .X6                                                      00541000
.X5      ST    &ASCB(1),4&NX&LISTA   . STORE ASCB ADDRESS        YM1995 00542000
.X6      AIF   ('&SERRET' NE '').X7A                               @L4C 00543000
         AIF   ('&ERRET' EQ '').X8                                      00544000
         AIF   ('&ERRET'(1,1) EQ '(').X7                                00545000
         &LA   15,&ERRET               . ADDRESS OF ERRET               00546000
         ST    15,8&NX&LISTA         . STORE ERRET ADDRESS       YM1995 00547000
         AGO   .X8                                                      00548000
.X7      ST    &ERRET(1),8&NX&LISTA    . STORE ERRET ADDRESS     YM1995 00549000
         AGO   .X8                                                 @L4A 00550000
.X7A     ANOP                                                      @L4A 00551000
         AIF   ('&SERRET' EQ 'YES').ERR9A                          @L4A 00552000
         AIF   ('&SERRET'(1,1) EQ '(').X7B                         @L4A 00553000
         &LA   15,&SERRET              . ADDRESS OF SERRET         @L4A 00554000
         ST    15,8&NX&LISTA         . STORE SERRET ADDRESS        @L4A 00555000
         OI    13&NX&LISTA,X'80'     . Indicate SERRET             @L4A 00556000
         AGO   .X8                                                 @L4A 00557000
.X7B     ST    &SERRET(1),8&NX&LISTA   . STORE SERRET ADDRESS      @L4A 00558000
         OI    13&NX&LISTA,X'80'     . Indicate SERRET             @L4A 00559000
         AGO   .X8                                                 @L4A 00560000
.*                                                             @ZA15373 00561000
.*  ECBKEY PARAMETER                                           @ZA15373 00562000
.X8      AIF   ('&ECBKEY' EQ '').X9                            @ZA15373 00563000
         AIF   ('&ECBKEY'(1,1) EQ '(').X8B                     @ZA15373 00564000
         AIF   ('&ECBKEY' EQ 'YES').ERR9                       @ZA15373 00565000
         AIF   (T'&ECBKEY NE 'N').X8A                          @ZA15373 00566000
         AIF   (&ECBKEY GT 15).ERR9                            @ZA15373 00567000
.X8A     ANOP                                                  @ZA15373 00568000
         MVI   12&NX&LISTA,&SHIFT&ECBKEY . STORE ECBKEY        @ZA15373 00569000
         AGO   .X8C                                            @ZA15373 00570000
.X8B     STC   &ECBKEY,12&NX&LISTA    . STORE ECBKEY           @ZA15373 00571000
.X8C     ANOP                                                           00572000
         AIF   (&SYSALVL GT 1).ALVL5A                              @L5A 00572100
         O     0,&MASK                . SET ECBKEY BIT         @ZA15373 00572200
         AGO   .ALVL5B                                             @L5A 00572300
.ALVL5A  ANOP                                                      @L5A 00572400
         OILH  0,X'8000'              . SET ECBKEY BIT             @L5A 00572500
.ALVL5B  ANOP                                                      @L5A 00572600
.*                                                                      00573000
.*  ADDRESS LIST AND SET ON HIGH ORDER BIT                              00574000
.X9      AIF   ('&MF(2)'(1,1) EQ '(').X9A                               00575000
         LA    1,&MF(2)               . ADDRESS LIST                    00576000
         AGO   .X10                                                     00577000
.X9A     IHBINNRR &MF(2)              . SET REG 1                       00578000
.X10     ANOP                                                           00579000
         AIF   (&SYSALVL GT 1).ALVL6A                              @L5A 00579100
         CNOP  0,4                                                      00579200
         O     1,&MASK                . SET LIST FORM INDICATOR         00580000
         B     *+8                    . BRANCH AROUND MASK              00581000
&MASK    DC    X'80000000'                                              00582000
         AGO   .ALVL6B                                             @L5A 00582100
.ALVL6A  ANOP                                                      @L5A 00582200
         OILH  1,X'8000'              . SET ECBKEY BIT             @L5A 00582300
.ALVL6B  ANOP                                                      @L5A 00582400
.*                                                                      00583000
.*  GENERATE LINKAGE                                                    00584000
.*                                                                      00585000
.SVC     ANOP                                                      @D1A 00586000
         AIF   ('&LINKVAL' EQ 'SVC').RSVC       SVC linkage        @L1C 00587000
         AIF   ('&LINKVAL' EQ 'SYSTEM').PCLINK  PC linkage         @L1A 00588000
         AIF   ('&ASCB' NE '' OR '&ECBKEY' EQ '').BRL15            @L2A 00589000
.********************************************************************** 00590000
.*                                                                      00591000
.*  LINKAGE=BRANCH WITH ECBKEY SUPPLIED ON LOCAL POST                   00592000
.*       R00 CONTAINS THE ECBKEY                                        00593000
.*       R10 HIGH BIT ON INDICATES ECBKEY SUPPLIED                      00594000
.*                                                                      00595000
         AIF   (T'&ECBKEY EQ 'O').BRL15                            @L2A 00596000
         AIF   ('&ECBKEY'(1,1) EQ '(').BRECBR                      @L2A 00597000
         AIF   ('&ECBKEY' EQ 'YES').ERR9                           @L2A 00598000
         AIF   (T'&ECBKEY NE 'N').BRECBN                           @L2A 00599000
         AIF   (&ECBKEY GT 15).ERR9                                @L2A 00600000
.BRECBN  ANOP                                                           00601000
         LA    0,&SHIFT&ECBKEY        . ECBKEY IN R0               @L2A 00602000
         AGO   .BRECBO                                             @L2A 00603000
.BRECBR  ANOP                                                           00604000
         LR    0,&ECBKEY(1)           . ECBKEY IN R0               @L2A 00605000
.BRECBO  ANOP                                                           00606000
         AIF   (&SYSALVL GT 1).ALVL7A                              @L5A 00606100
         LA    15,X'800'(0,0)                                      @L2A 00607000
         SLL   15,20(0)               . MASK TO SET HIGH ORDER BIT @L2A 00608000
         OR    10,15                  . SET ECBKEY FLAG BIT        @L2A 00609000
         AGO   .ALVL7B                                             @L5A 00609100
.ALVL7A  ANOP                                                      @L5A 00609200
         OILH  10,X'8000'             . SET ECBKEY FLAG BIT        @L5A 00609300
.ALVL7B  ANOP                                                      @L5A 00609500
.*                                                                      00610000
.*                                                                      00611000
.********************************************************************** 00612000
.BRL15   ANOP                                                      @L2A 00613000
         AIF    ('&SYSAM64' NE 'YES').AM642                        @NXA 00614000
       MNOTE 8,'POST ---> LINKAGE=BRANCH IS NOT VALID IN AMODE 64' @MXA 00615000
.AM642   ANOP                                                      @MXA 00616000
         L     15,16(0,0)                                          @D1A 00617000
         L     15,CVT0PT01-CVTMAP(0,15)                            @D1A 00618000
         BALR  14,15                  . BRANCH ENTRY               @D1A 00619000
         MEXIT                                                     @D1A 00620000
.RSVC    SVC   2                      . ISSUE THE POST SVC         @D1A 00621000
         MEXIT                                                          00622000
.PCLINK  ANOP  ,                                                   @L1A 00623000
.*  Leave Reg 15 alone if execute form or if cross memory requested.    00624000
         AIF   ('&MF' NE 'I' OR '&ASCB' NE '').PC2                 @D3A 00625000
.*  Clear Reg 15 if no ERRET supplied.                                  00626000
         AIF   ('&ERRET' EQ '' AND '&SERRET' EQ '').NOERRET        @L4C 00627000
         AIF   ('&SERRET' NE '').PC1A                              @L4A 00628000
.*  Error if ERRET specified improperly.                                00629000
         AIF   ('&ERRET'(1,1) EQ '(' AND N'&ERRET GT 1).ERR3       @D3A 00630000
.*  Use LR if ERRET in a register.                                      00631000
         AIF   ('&ERRET'(1,1) EQ '(').PC1                          @D3A 00632000
         &LA   15,&ERRET                ERRET ADDRESS                   00633000
         AGO   .PC2                                                @D3A 00634000
.PC1     ANOP  ,                                                   @D3A 00634100
         LR    15,&ERRET(1)             ERRET ADDRESS                   00634300
         AGO   .PC2                                                @D3A 00634400
.PC1A    ANOP  ,                                                   @L4A 00634500
         AIF   ('&SERRET'(1,1) EQ '(' AND N'&SERRET GT 1).ERR3     @L4A 00634600
         AIF   ('&SERRET' EQ 'YES').ERR9A                          @L4A 00634700
.*  Use LR if SERRET in a register.                                @L4A 00634800
         AIF   ('&SERRET'(1,1) EQ '(').PC1B                        @L4A 00634900
         &LA   15,&SERRET               SERRET ADDRESS             @L4A 00635100
         AGO   .PC2                                                @L4A 00635700
.PC1B    ANOP  ,                                                   @L4A 00636000
         LR    15,&SERRET(1)            SERRET ADDRESS             @L4A 00637000
         AGO   .PC2                                                @L4A 00638000
.NOERRET ANOP  ,                                                   @D3A 00639000
         SR    15,15                    CLEAR REG 15                    00640000
.PC2     ANOP  ,                                                   @D3A 00641000
         &L    14,16(0,0)               CVT ADDRESS                @L1A 00642000
         L     14,772(,14)              SYSTEM FUNCTION TABLE ADDR @L1A 00643000
         L     14,&OSFT.(,14)           GET LX/EX FROM SFT         @L1A 00644000
         PC    0(14)                    PC TO POST SERVICE ROUTINE @L1A 00645000
         MEXIT                                                     @L1A 00646000
.*                                                                      00647000
.*  ERROR EXITS                                                         00648000
.*                                                                      00649000
.ERR1    ANOP                                                           00650000
         IHBERMAC  1010,ASCB,ERRET_OR_SERRET ASCB requires ERRET   @L4C 00651000
         MEXIT                                                          00652000
.ERR2    ANOP                                                           00653000
         IHBERMAC  11                   ECB MISSING                     00654000
         MEXIT                                                          00655000
.ERR3    ANOP                                                           00656000
         IHBERMAC  203                  REGISTER SPECIFICATION INVALID  00657000
         MEXIT                                                          00658000
.ERR4    ANOP                                                           00659000
         IHBERMAC  1009                 NO CC ALLOWED IN LIST FORM      00660000
         MEXIT                                                          00661000
.ERR5    ANOP                                                           00662000
         IHBERMAC  69                   INVALID REG SPEC WITH MF=L      00663000
         MEXIT                                                          00664000
.ERR6    ANOP                                                           00665000
         IHBERMAC  35,,&MF              EXECUTE FORM MF= ERROR          00666000
         MEXIT                                                          00667000
.ERR7    ANOP                                                           00668000
         IHBERMAC    1010,ERRET_OR_SERRET,ASCB (S)ERRET requires ASCB  *00669000
                                                                   @L4C 00670000
         MEXIT                                                 @ZA15373 00671000
.ERR7A   ANOP                                                           00672000
         IHBERMAC    1010,SERRET,LINKAGE_SYSTEM                    @L4A 00673000
         MEXIT                                                 @ZA15373 00674000
.ERR8    IHBERMAC    1010,ECBKEY,ASCB   ECBKEY OP REQUIRES ASCB@ZA15373 00675000
         MEXIT                                                 @ZA15373 00676000
.*                     MEMORY RELATED OP REQUIRES ASCB,BRANCH      @D2A 00677000
.ERR8B   MNOTE 8,'MEMREL OPERAND SPECIFIED WITHOUT ASCB AND LINKAGE=BRAx00678000
               NCH OPERAND.'                                       @L1C 00679000
         MEXIT                                                     @D2A 00680000
.ERR9    IHBERMAC    1007,ECBKEY        INVALID ECBKEY OPERAND @ZA15373 00681000
         MEXIT                                                          00682000
.ERR9A   IHBERMAC    1007,SERRET        INVALID SERRET OPERAND     @L4A 00683000
         MEXIT                                                          00684000
.*             LINKAGE=BRANCH NOT ALLOWED WITH LIST FORM           @L1C 00685000
.ERR10   IHBERMAC    1020,LINKAGE,LIST-FORM                        @L1C 00686000
         MEXIT                                                     @D1A 00687000
.*             LINKAGE=BRANCH NOT ALLOWED WITH EXECUTE FORM        @L1C 00688000
.ERR11   IHBERMAC    1020,"LINKAGE=BRANCH",EXECUTE-FORM            @D3C 00689000
         MEXIT                                                     @D1A 00690000
.ERR12   IHBERMAC    1007,BRANCH        INVALID BRANCH OPERAND     @D1A 00691000
         MNOTE 0,'USE LINKAGE PARAMETER INSTEAD OF BRANCH.'        @L1A 00692000
         MEXIT                                                     @D2A 00693000
.ERR13   IHBERMAC    1007,MEMREL        INVALID MEMREL OPERAND     @D2A 00694000
         MEXIT                                                     @L1A 00695000
.ERR14   MNOTE 8,'BRANCH AND LINKAGE ARE MUTUALLY EXCLUSIVE. USE LINKAGx00696000
               E PARAMETER.'                                       @L1A 00697000
         MEXIT                                                     @L1A 00698000
.ERR14A  MNOTE 8,'ERRET AND SERRET ARE MUTUALLY EXCLUSIVE.'        @L4A 00699000
         MEXIT                                                     @L1A 00700000
.ERR15   IHBERMAC    1007,LINKAGE       INVALID LINKAGE OPERAND    @L1A 00701000
         MEXIT                                                     @L1A 00702000
.ERR16   MNOTE 8,'ECBKEY IS REQUIRED WITH ASCB AND LINKAGE=SYSTEM' @L1A 00703000
         MEND                                                           00704000
**/                                                                     00705000
* POST: /* PL/S VERSION OF POST MACRO                                */ 00706000
*/********************************************************************/ 00707000
*  MACRO                                                                00708000
*    KEYS(ASCB,                    /* ADDRESS OF ASCB                */ 00709000
*        ERRET,                    /* ADDRESS OF ERROR RETURN ENTRY  */ 00710000
*        SERRET,                   /* LINKAGE=SYSTEM ERRET       @L4A*/ 00711000
*        ECBKEY,                   /* ECB STORAGE PROT KEY   @ZA15373*/ 00712000
*        BRANCH,                   /* BRANCH ENTRY INDICATOR     @D1A*/ 00713000
*        LINKAGE,                  /* LINKAGE INDICATOR          @L1A*/ 00714000
*        MEMREL,                   /* MEMORY RELATED XMPOST      @D2A*/ 00715000
*        RELATED,                                                       00716000
*        MF);                      /* INTERREGIONAL POST REQUEST     */ 00717000
*        ANS('?'!!MACLABEL!!'POSTP '!!MACLIST!!MACKEYS!!';');           00718000
*% END;                                                                 00719000
