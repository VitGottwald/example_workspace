*                                                                               
* %DCL BCFZCRYP_INCLUDED CHAR EXT;                                              
* %DEACTIVATE BCFZCRYP_INCLUDED;                                                
* %IF BCFZCRYP_INCLUDED = '' %THEN                                              
* %DO;                                                                          
*/* Macro made bi-lingual on 19211. CBGEN compile date 19044         */         
*% /*                                                                           
         MACRO                                                                  
         BCFZCRYP &DSECT=YES,&LIST=YES,&TITLE=YES,&CRYPI=YES,          *        
               &CRYPV=YES,&CRYP_RS_MAPPING=YES,&CRYPWA=YES                      
         GBLC  &BCFZCRYP_INCLUDED                                               
         GBLC  &ZCBPRINT                                                        
&BCFZCRYP_INCLUDED SETC 'YES'                                                   
         AIF   ('&LIST' EQ 'NONE').P0                                           
         AIF   ('&TITLE' EQ 'NO').P5                                            
 TITLE   'BCFZCRYP  - Encryption service parm block'                            
.P5      ANOP                                                                   
**/ BCFZCRYP_1:;                                                                
*/*START OF SPECIFICATIONS********************************************/         
*/*                                                                  */         
*/*01* PROPRIETARY STATEMENT =                                       */         
*/*      LICENSED MATERIALS - PROPERTY OF IBM                        */         
*/*      5650-ZOS COPYRIGHT IBM CORP. 2017                           */         
*/*                                                                  */         
*/*01* STATUS = HBB77B0                                              */         
*/*                                                                  */         
*/*01* EXTERNAL CLASSIFICATION:                                      */         
*/*02*        NOTPI:BASE                                             */         
*/*02*           PI:FIELDS                                           */         
*/*                  CRYPI_ID                                        */         
*/*                  CRYPI_VER                                       */         
*/*                  CRYPI_LEN                                       */         
*/*                  CRYPI_MODE                                      */         
*/*                  CRYPI_KEY1_LEN                                  */         
*/*                  CRYPI_KEY2_LEN                                  */         
*/*                  CRYPI_KEY1                                      */         
*/*                  CRYPI_KEY2                                      */         
*/*                  CRYPV_ID                                        */         
*/*                  CRYPV_VER                                       */         
*/*                  CRYPV_LEN                                       */         
*/*                  CRYPV_CRYPI@                                    */         
*/*                  CRYPV_GR0_FC                                    */         
*/*                  CRYPV_TEXT_LEN                                  */         
*/*                  CRYPV_INPUT_ADDR                                */         
*/*                  CRYPV_INPUT_ALET                                */         
*/*                  CRYPV_OUTPUT_ALET                               */         
*/*                  CRYPV_OUTPUT_ADDR                               */         
*/*                  CRYPV_ADDT_ADDR                                 */         
*/*                  CRYPV_ADDT_LEN                                  */         
*/*                  CRYPV_ADDT_ALET                                 */         
*/*                  CRYPV_CHAIN_DATA                                */         
*/*                  CRYPV_XTS_TweakVal                              */         
*/*                  CRYPV_AES_CHAIN                                 */         
*/*                  CRYP_RS_Mapping                                 */         
*/*                  CRYP_CodeLoc                                    */         
*/*                  CRYP_ReasonCode                                 */         
*/*                                                                  */         
*/*01* END OF EXTERNAL CLASSIFICATION:                               */         
*/*                                                                  */         
*/*01* DESCRIPTIVE NAME = Encryption service parm block              */         
*/*02*  ACRONYM:  BCFZCRYP                                           */         
*/*                                                                  */         
*/*01* MACRO NAME = BCFZCRYP                                         */         
*/*                                                                  */         
*/*01* DSECT NAME:                                                   */         
*/*     CRYPI                                                        */         
*/*     CRYPV                                                        */         
*/*     CRYP_RS_MAPPING                                              */         
*/*     CRYPWA                                                       */         
*/*                                                                  */         
*/*01* COMPONENT = Basic Cryptographic Functions (BCF)               */         
*/*                                                                  */         
*/*01* EYE-CATCHER: CRYI and CRYV                                    */         
*/*02*   OFFSET: 0                                                   */         
*/*02*   LENGTH: 4                                                   */         
*/*                                                                  */         
*/*01* STORAGE ATTRIBUTES:                                           */         
*/*02*  SUBPOOL:  Any (see notes)                                    */         
*/*02*  KEY:  Any (see notes)                                        */         
*/*02*  RESIDENCY:  Any (see notes)                                  */         
*/*02*  MAIN STORAGE:  Any                                           */         
*/*02*  VIRTUAL STORAGE:  Any                                        */         
*/*                                                                  */         
*/*01* SIZE:                                                         */         
*/*     CRYPI_LEN_C, CRYPV_LEN_C, CRYP_WORKA_SIZE                    */         
*/*                                                                  */         
*/*01* FUNCTION =                                                    */         
*/*    This macro defines structures, constants, and a work area for */         
*/*    the BCFCRYPT service. See the sample flow in BCFXCRYP for how */         
*/*    the blocks should be used.                                    */         
*/*                                                                  */         
*/*01* CREATED BY:                                                   */         
*/*     Caller. CRYPI, CRYPV, and CRYPWA contain sensitive data and  */         
*/*     should be allocated in private fetch-protected storage.      */         
*/*                                                                  */         
*/*01* POINTED TO BY:                                                */         
*/*     Caller                                                       */         
*/*                                                                  */         
*/*01* DELETED BY:                                                   */         
*/*     Caller (CRYPI and CRYPWA should be zeroed before deletion)   */         
*/*                                                                  */         
*/*01* SERIALIZATION:                                                */         
*/*     CRYPI should be allocated and initialized and then not       */         
*/*     modified by the caller again until it is zeroed and deleted. */         
*/*     One CRYPV and one CRYPWA should be allocated and initialized */         
*/*     per task, thus no serialization is required.                 */         
*/*                                                                  */         
*/*01* METHOD OF ACCESS =                                            */         
*/*02*  ASM:                                                         */         
*/*02*    DSECTs are produced unless DSECT=NO is specified.          */         
*/*       USING on each DSECT gives addressability for all symbols.  */         
*/*       Specify LIST=YES on Macro call for listing.                */         
*/*                                                                  */         
*/*02*  PL/X:                                                        */         
*/*      %INCLUDE SYSLIB(BCFZCRYP)                                   */         
*/*                                                                  */         
*/*      CRYPI is normally declared as 'Based'.                      */         
*/*      To change the basing, use %CRYPI_BASE.                      */         
*/*      CRYPV is normally declared as 'Based'.                      */         
*/*      To change the basing, use %CRYPV_BASE.                      */         
*/*      CRYP_WORKA_SIZE DCL is always produced.                     */         
*/*      CRYPWA is only declared if %CRYPWA_DCL = 'YES'.             */         
*/*      The default basing (if declared) is 'Automatic'             */         
*/*      To change the basing, use %CRYPWA_BASE.                     */         
*/*                                                                  */         
*/*01* DISTRIBUTION LIBRARY: AMACLIB                                 */         
*/*                                                                  */         
*/*01* CHANGE-ACTIVITY:                                              */         
*/*                                                                  */         
*/* $L0=BCFPROT  HBB77B0,161017, PDER: Prot-key services             */         
*/* $A1=OA53400  HBB77B0,170808, PDER: Crypto stats/better perf      */         
*/*                                    (no change flags)             */         
*/* $A2=OA58246  HBB77C0,190730, PDER: Make bilingual                */         
*/*                                                                  */         
*/****END OF SPECIFICATIONS*******************************************/         
*% /*                                                                           
.P0      ANOP                                                                   
         AIF   ('&ZCBPRINT' EQ 'NO').P1                                         
         AIF   ('&LIST' EQ 'YES').P2                                            
.P1      ANOP                                                                   
         PUSH  PRINT                                                            
         PRINT OFF                                                              
.P2      ANOP                                                                   
         AIF   ('&CRYPI' EQ 'NO').L0002                                         
         AIF   ('&DSECT' EQ 'YES').L0003                                        
         AIF   ('&CRYPI' NE 'YES').L0002                                        
.L0003   ANOP                                                                   
*                                                                               
* ********************************************************************          
* * All CRYPI fields are filled in when the CRYPI is created.        *          
* ********************************************************************          
*                                                                               
*                                                                               
         AIF   ('&DSECT' EQ 'YES').L0004                                        
CRYPI                 DS  0D                                                    
         AGO   .L0005                                                           
.L0004   ANOP                                                                   
CRYPI                 DSECT                                                     
.L0005   ANOP                                                                   
CRYPI_HDR               DS  CL8          CRYPI header                           
                        ORG CRYPI_HDR                                           
CRYPI_ID                  DS  CL4        Eyecatcher                             
CRYPI_VER                 DS  CL2        Version number                         
CRYPI_LEN                 DS  H          Length of block                        
*   ******************************************************************          
*   * CRYPI_CallerInfo is where a caller selects the mode and saves  *          
*   * key information.                                               *          
*   ******************************************************************          
CRYPI_CallerInfo        DS  CL328                                               
                        ORG CRYPI_CallerInfo                                    
*     ****************************************************************          
*     * Mode information                                             *          
*     ****************************************************************          
CRYPI_MODE                DS  X          Requested mode                         
                          DS  CL7        reserved                               
*     ****************************************************************          
*     * Key material                                                 *          
*     * These fields are filled in with either the output from       *          
*     * CSNBKRR2/CSNEKRR2 or with clear key material when the CRYPI  *          
*     * is created. Both the length and the actual key material are  *          
*     * returned on that call.                                       *          
*     *                                                              *          
*     * XTS is currently the only mode that uses KEY2, so KEY2 is    *          
*     * ignored for all other modes.                                 *          
*     *                                                              *          
*     * NOTES: 1) Currently in XTS, the same key is used for both    *          
*     *           CRYPI_KEY1 and CRYPI_KEY2, which means that the    *          
*     *           caller has to duplicate the information.           *          
*     *       2) In the future, we expect the protected key blobs to *          
*     *          increase in size, so we reserve enough space now to *          
*     *          try to avoid increasing the size later.             *          
*     ****************************************************************          
CRYPI_KEY1_LEN            DS  F                                                 
CRYPI_KEY2_LEN            DS  F                                                 
CRYPI_KEY1                DS  CL140                                             
CRYPI_KEY2                DS  CL140                                             
                          DS  CL32       reserved                               
*   ******************************************************************          
*   * CRYPI_INTERNAL is where BCFCRYPT keeps status and other data.  *          
*   *----------------------------------------------------------------*          
*   * USAGE: Never change any fields in this section except when     *          
*   *        clearing the entire CRYPI block at initialization.      *          
*   ******************************************************************          
CRYPI_INTERNAL          DS  CL40                                                
                        ORG CRYPI_INTERNAL                                      
*     ****************************************************************          
*     * CRYPI_Flags contains flags for special processing.           *          
*     ****************************************************************          
CRYPI_Flags               DS  BL4        Flags for special behavior             
                          ORG CRYPI_FLAGS                                       
CRYPI_Flags1               DS  B                                                
CRYPI_F_InitQuery           EQU X'80'    Perform initial query                  
*                                        (No encryption performed)              
CRYPI_F_ForceRec            EQU X'40'    Force CPACF count recording            
*                                        (No encryption performed)              
                          ORG CRYPI_FLAGS+4                                     
CRYPI_INSTR_CNT           DS  F          Count of CPACF instructions            
CRYPI_CPACF_QUERY         DS  BL16       KMx-Query output                       
*     ****************************************************************          
*     * Bits used in CPACF functions                                 *          
*     ****************************************************************          
CRYPI_GR0_FC              DS  B          bits 56-63 of GR0                      
*                          EQU X'80'     bit  56    of GR0 (ignored)            
CRYPI_FC                   EQU X'7F'     bits 57-63 of GR0                      
*                           EQU X'40'    bit  57    of GR0                      
CRYPI_FC_XTS                EQU X'20'    bit  58    of GR0                      
CRYPI_FC_ALG_AES            EQU X'10'    bit  59    of GR0                      
CRYPI_FC_PROTK              EQU X'08'    bit  60    of GR0                      
CRYPI_FC_KEYLEN             EQU X'07'    bits 61-63 of GR0                      
                          DS  CL15       reserved                               
*   ******************************************************************          
*   * End of the CRYPI block                                         *          
*   ******************************************************************          
CRYPI_End               DS  0C                                                  
*                                                                               
* ********************************************************************          
* * Constants for initializing the eyecatcher and version            *          
* ********************************************************************          
*                                                                               
CRYPI_ID_C              EQU C'CRYI',4,C'C'                                      
CRYPI_VER_C             EQU C'01',2,C'C'                                        
CRYPI_LEN_C             EQU CRYPI_End-CRYPI,2,C'F'                              
*                                                                               
* ********************************************************************          
* * Constants for CRYPI_MODE                                         *          
* ********************************************************************          
*                                                                               
CRYPI_MODE_CBC       EQU 1,1,C'F'                                               
CRYPI_MODE_XTS       EQU 2,1,C'F'                                               
* ]CRYPI_MODE_ECB    EQU 3,1,C'F'              Currently unsupported            
* ]CRYPI_MODE_CFB    EQU 4,1,C'F'              Currently unsupported            
* ]CRYPI_MODE_CTR    EQU 5,1,C'F'              Currently unsupported            
* ]CRYPI_MODE_GCM    EQU 6,1,C'F'              Currently unsupported            
* ]CRYPI_MODE_OFB    EQU 7,1,C'F'              Currently unsupported            
* ]CRYPI_MODE_KMAC   EQU 8,1,C'F'              Currently unsupported            
*                                                                               
* ********************************************************************          
* * Other constants                                                  *          
* ********************************************************************          
*                                                                               
CRYPI_INSTR_CNT_MAX     EQU 4096                                                
*                                                                               
.L0002   ANOP                                                                   
         AIF   ('&CRYPV' EQ 'NO').L0006                                         
         AIF   ('&DSECT' EQ 'YES').L0007                                        
         AIF   ('&CRYPV' NE 'YES').L0006                                        
CRYPV                 DS  0D                                                    
         AGO   .L0008                                                           
.L0007   ANOP                                                                   
CRYPV                 DSECT                                                     
.L0008   ANOP                                                                   
*   ******************************************************************          
*   * USAGE: CRYPV_HDR fields are filled in when CRYPV is created.   *          
*   ******************************************************************          
CRYPV_HDR               DS  CL16         CRYPV header                           
                        ORG CRYPV_HDR                                           
CRYPV_ID                  DS  CL4        Eyecatcher                             
CRYPV_VER                 DS  CL2        Version number                         
CRYPV_LEN                 DS  H          Length of block                        
CRYPV_CRYPI@              DS  AD         Pointer to CRYPI block                 
*   ******************************************************************          
*   * CRYPV_INVOKE_PARMS is where the caller selects encryption vs   *          
*   * decryption and specifies the input text, output text,          *          
*   * additional text (only for certain modes), chaining/tweak       *          
*   * information, and other parameters for the requested operation. *          
*   *                                                                *          
*   * USAGE: These fields are filled in on a per-call basis.         *          
*   *        Any fields modified by BCFCRYPT will be indicated as    *          
*   *        such. However, there are currently no fields that are   *          
*   *        modified by BCFCRYPT.                                   *          
*   ******************************************************************          
CRYPV_INVOKE_PARMS      DS  CL80                                                
                        ORG CRYPV_INVOKE_PARMS                                  
*     ****************************************************************          
*     * CRYPV_Flags contains flags to indicate processing            *          
*     ****************************************************************          
CRYPV_Flags               DS  BL4        Flags for special behavior             
                          ORG CRYPV_FLAGS                                       
                            DS  CL3      reserved                               
CRYPV_GR0_FC                DS  B                                               
CRYPV_F_DECIPH_OP            EQU X'80'   0 = encipher, 1 = decipher             
                          DS  CL4        reserved                               
*     ****************************************************************          
*     * Text Length is the length of the input text to be processed. *          
*     * For all supported modes, this is also output text length.    *          
*     ****************************************************************          
CRYPV_TEXT_LEN            DS  FL8                                               
*     ****************************************************************          
*     * Input text (clear text for encrypt, cipher text for decrypt) *          
*     * USAGE: These fields are filled in on a per-call basis.       *          
*     ****************************************************************          
CRYPV_INPUT_ADDR          DS  AD                                                
CRYPV_INPUT_ALET          DS  F                                                 
*     ****************************************************************          
*     * Output text (cipher text for encrypt, clear text for decrypt)*          
*     * USAGE: These fields are filled in on a per-call basis        *          
*     ****************************************************************          
CRYPV_OUTPUT_ALET         DS  F                                                 
CRYPV_OUTPUT_ADDR         DS  AD                                                
*     ****************************************************************          
*     * Additional text (mode-specific)                              *          
*     * USAGE: These fields are only used for GCM (ignored for all   *          
*     *        other modes). They are filled in on a per-call basis. *          
*     ****************************************************************          
CRYPV_ADDT_ADDR           DS  AD                                                
CRYPV_ADDT_LEN            DS  FL8                                               
CRYPV_ADDT_ALET           DS  F                                                 
                          DS  CL4        reserved                               
*     ****************************************************************          
*     * Chaining data/XTS parameters                                 *          
*     * USAGE: For ECB mode, these fields are ignored.               *          
*     *        On input:                                             *          
*     *        - For XTS mode, CRYPV_XTS_TweakVal is the initial     *          
*     *          tweak value. This value must never repeat for the   *          
*     *          same key material (such as for different datasets), *          
*     *          so the recommendation is to have the upper 8 bytes  *          
*     *          set to a value unique the dataset (maybe a STCK)    *          
*     *          and the lower 8 bytes set to the 64-bit relative    *          
*     *          record number.                                      *          
*     *        - For all other modes, CRYPV_AES_CHAIN is the initial *          
*     *          chaining value.                                     *          
*     *        On output, this field is unchanged, because chaining  *          
*     *        is not currently supported.                           *          
*     ****************************************************************          
CRYPV_CHAIN_DATA          DS  CL(CRYP_AES_BLOCK_SIZE)                           
CRYPV_XTS_TweakVal          EQU CRYPV_CHAIN_DATA                                
CRYPV_AES_CHAIN             EQU CRYPV_CHAIN_DATA                                
*   ******************************************************************          
*   * End of the CRYPV parm block                                    *          
*   ******************************************************************          
CRYPV_End               DS  0C                                                  
*                                                                               
* ********************************************************************          
* * Constants for initializing the eyecatcher and version            *          
* ********************************************************************          
*                                                                               
CRYPV_ID_C              EQU C'CRYV'                                             
CRYPV_VER_C             EQU C'01'                                               
CRYPV_LEN_C             EQU CRYPV_End-CRYPV,2,C'F'                              
*                                                                               
.L0006   ANOP                                                                   
         AIF   ('&CRYP_RS_MAPPING' EQ 'NO').L0009                               
         AIF   ('&DSECT' EQ 'YES').L000A                                        
         AIF   ('&CRYP_RS_MAPPING' NE 'YES').L0009                              
.L000A   ANOP                                                                   
*                                                                               
* ********************************************************************          
* * Mapping for reason code                                          *          
* ********************************************************************          
*                                                                               
         AIF   ('&DSECT' EQ 'YES').L000B                                        
CRYP_RS_Mapping        DS  0H                                                   
         AGO   .L000C                                                           
.L000B   ANOP                                                                   
CRYP_RS_Mapping        DSECT                                                    
.L000C   ANOP                                                                   
CRYP_CodeLoc             DS  H                                                  
CRYP_ReasonCode          DS  H                                                  
*                                                                               
.L0009   ANOP                                                                   
         AIF   ('&CRYPWA' NE 'YES').L000D                                       
* ********************************************************************          
* * BCFCRYPT work area size constant                                 *          
* ********************************************************************          
*                                                                               
CRYP_WORKA_SIZE         EQU 512                                                 
*                                                                               
* ********************************************************************          
* * BCFCRYPT work area declaration                                   *          
* * The CRYPWA will contain a copy of the caller's key and may       *          
* * contain a copy of the final blocks of the caller's data. It is   *          
* * strongly recommended that CRYPWA be in fetch-protected storage.  *          
* ********************************************************************          
*                                                                               
CRYPWA                 DSECT                                                    
CRYPWA_RSVD             DS  CL(CRYP_WORKA_SIZE)                                 
*                                                                               
.L000D   ANOP                                                                   
*                                                                               
* ********************************************************************          
* * Constants for return codes                                       *          
* *   CRYP_RC_OK       => everything went well                       *          
* *   CRYP_RC_APPL_ERR => something was wrong with the parms         *          
* *   CRYP_RC_ENV_ERR  => the request lacks sufficient hardware      *          
* ********************************************************************          
*                                                                               
CRYP_RC_OK               EQU 0,4,C'F'                                           
CRYP_RC_APPL_ERR         EQU 8,4,C'F'                                           
CRYP_RC_ENV_ERR          EQU 12,4,C'F'                                          
*                                                                               
* ********************************************************************          
* * Constants for reason codes                                       *          
* * Reason codes are composed of two Fixed(16) fields. The lower two *          
* * bytes are the actual reason code and the upper two bytes are for *          
* * diagnostics and debugging. See CRYP_RS_Mapping above.            *          
* * For extra ease of use, reason codes start with their RC.         *          
* ********************************************************************          
*                                                                               
* ********************************************************************          
* * RSNx  Description                                                *          
* * ----  ---------------------------------------------------------- *          
* * 0000  Everything is OK                                           *          
* ********************************************************************          
CRYP_RS_0_OK                       EQU X'0000'                                  
* ********************************************************************          
* * RSNx  Description                                                *          
* * ----  ---------------------------------------------------------- *          
* * 0801  CRYPV_TEXT_LEN is too short for the mode specified         *          
* * 0802  An output field destructively overlaps an input field      *          
* * 0803  The protected key contains an incorrect wrapping key VP    *          
* * 0804  CRYPI was passed directly, but no valid flag was set       *          
* * 0805  CRYPV was passed to BCFXCRYP with a CRYPI-only option      *          
* * 0806  KEY1 length is not valid                                   *          
* * 0807  KEY1 and KEY2 aren't the same size (XTS only)              *          
* * 0808  CRYPI referenced from CRYPV was not properly initialized   *          
* ********************************************************************          
CRYP_RS_8_INSUF_IN                 EQU X'0801'                                  
CRYP_RS_8_OVERLAP                  EQU X'0802'                                  
CRYP_RS_8_BAD_WRAP                 EQU X'0803'                                  
CRYP_RS_8_BAD_CRYPI_FLAGS          EQU X'0804'                                  
CRYP_RS_8_BAD_BCFXCRYP_OPT         EQU X'0805'                                  
CRYP_RS_8_BAD_KEY1_LENGTH          EQU X'0806'                                  
CRYP_RS_8_XTS_KEYLEN_MISMATCH      EQU X'0807'                                  
CRYP_RS_8_CRYPI_NOT_INITED         EQU X'0808'                                  
* ********************************************************************          
* * RSNx  Description                                                *          
* * ----  ---------------------------------------------------------- *          
* * 0C01  There is no MSA support on this machine                    *          
* * 0C02  The requested mode is not supported                        *          
* * 0C03  The requested key size or key format is not supported      *          
* * 0C04  Internal error occurred. Please contact IBM service.       *          
* ********************************************************************          
CRYP_RS_12_NO_CPACF                EQU X'0C01'                                  
CRYP_RS_12_UNSUP_MODE              EQU X'0C02'                                  
CRYP_RS_12_UNSUP_FC                EQU X'0C03'                                  
CRYP_RS_12_INTERNAL_ERROR          EQU X'0C04'                                  
*                                                                               
* ********************************************************************          
* * Other important algorithm constants                              *          
* ********************************************************************          
*                                      Lengths in bytes                         
CRYP_AES_BLOCK_SIZE         EQU 16                                              
CRYP_AES128_CLR_KEY_Len     EQU 16                                              
CRYP_AES192_CLR_KEY_Len     EQU 24                                              
CRYP_AES256_CLR_KEY_Len     EQU 32                                              
CRYP_AES_WKVP_LEN           EQU 32                                              
CRYP_AES128_PROT_KEY_Len    EQU 16+CRYP_AES_WKVP_LEN                            
CRYP_AES192_PROT_KEY_Len    EQU 24+CRYP_AES_WKVP_LEN                            
CRYP_AES256_PROT_KEY_Len    EQU 32+CRYP_AES_WKVP_LEN                            
*                                                                               
         AIF   ('&ZCBPRINT' EQ 'NO').P3                                         
         AIF   ('&LIST' EQ 'YES').P4                                            
.P3      ANOP                                                                   
         POP   PRINT                                                            
.P4      ANOP                                                                   
.P_EXIT  ANOP                                                                   
         MEND                                                                   
**/ BCFZCRYP_2:;                                                                
* %BCFZCRYP_INCLUDED = 'YES';                                                   
* %DCL ZCBPRINT CHAR EXT;                                                       
* %DEACTIVATE ZCBPRINT;                                                         
* %DCL BCFZCRYP_LIST CHAR EXT;                                                  
* %DEACTIVATE BCFZCRYP_LIST;                                                    
* %IF BCFZCRYP_LIST = 'NO' !                                                    
*    ZCBPRINT = 'NO' %THEN                                                      
* %DO;                                                                          
*   @LIST PUSH NOECHO;                                                          
*   @LIST NOASSEMBLE NOECHO;                                                    
*   @LIST OFF C NOECHO;                                                         
* %END;                                                                         
*/* Start of PL/X Source                                             */         
*%IF CRYPI_BASE = '' %THEN %CRYPI_BASE = 'Based';                               
*Dcl                                                                            
*/********************************************************************/         
*/* All CRYPI fields are filled in when the CRYPI is created.        */         
*/********************************************************************/         
*1 CRYPI              CRYPI_BASE Bdy(DWORD),                                    
*  3 CRYPI_HDR          Bdy(DWORD),   /* CRYPI header                */         
*    5 CRYPI_ID           Char(4),    /* Eyecatcher                  */         
*    5 CRYPI_VER          Char(2),    /* Version number              */         
*    5 CRYPI_LEN          Fixed(16),  /* Length of block             */         
*  /******************************************************************/         
*  /* CRYPI_CallerInfo is where a caller selects the mode and saves  */         
*  /* key information.                                               */         
*  /******************************************************************/         
*  3 CRYPI_CallerInfo   Bdy(DWORD),                                             
*    /****************************************************************/         
*    /* Mode information                                             */         
*    /****************************************************************/         
*    5 CRYPI_MODE         Fixed(8),   /* Requested mode              */         
*    5 *                  Char(7),    /* reserved                    */         
*    /****************************************************************/         
*    /* Key material                                                 */         
*    /* These fields are filled in with either the output from       */         
*    /* CSNBKRR2/CSNEKRR2 or with clear key material when the CRYPI  */         
*    /* is created. Both the length and the actual key material are  */         
*    /* returned on that call.                                       */         
*    /*                                                              */         
*    /* XTS is currently the only mode that uses KEY2, so KEY2 is    */         
*    /* ignored for all other modes.                                 */         
*    /*                                                              */         
*    /* NOTES: 1) Currently in XTS, the same key is used for both    */         
*    /*           CRYPI_KEY1 and CRYPI_KEY2, which means that the    */         
*    /*           caller has to duplicate the information.           */         
*    /*       2) In the future, we expect the protected key blobs to */         
*    /*          increase in size, so we reserve enough space now to */         
*    /*          try to avoid increasing the size later.             */         
*    /****************************************************************/         
*    5 CRYPI_KEY1_LEN     Fixed(32),                                            
*    5 CRYPI_KEY2_LEN     Fixed(32),                                            
*    5 CRYPI_KEY1         Char(140),                                            
*    5 CRYPI_KEY2         Char(140),                                            
*    5 *                  Char(32),   /* reserved                    */         
*  /******************************************************************/         
*  /* CRYPI_INTERNAL is where BCFCRYPT keeps status and other data.  */         
*  /*----------------------------------------------------------------*/         
*  /* USAGE: Never change any fields in this section except when     */         
*  /*        clearing the entire CRYPI block at initialization.      */         
*  /******************************************************************/         
*  3 CRYPI_INTERNAL     Bdy(DWORD),                                             
*    /****************************************************************/         
*    /* CRYPI_Flags contains flags for special processing.           */         
*    /****************************************************************/         
*    5 CRYPI_Flags        Bit(32),    /* Flags for special behavior  */         
*     6 CRYPI_Flags1       Bit(8),                                              
*      7 CRYPI_F_InitQuery  Bit(1),   /* Perform initial query                  
*                                        (No encryption performed)   */         
*      7 CRYPI_F_ForceRec   Bit(1),   /* Force CPACF count recording            
*                                        (No encryption performed)   */         
*    5 CRYPI_INSTR_CNT    Fixed(32),  /* Count of CPACF instructions */         
*    5 CRYPI_CPACF_QUERY  Bit(128),   /* KMx-Query output            */         
*    /****************************************************************/         
*    /* Bits used in CPACF functions                                 */         
*    /****************************************************************/         
*    5 CRYPI_GR0_FC       Bit(8),     /* bits 56-63 of GR0           */         
*     6 *                  Bit(1),    /* bit  56    of GR0 (ignored) */         
*     6 CRYPI_FC           Bit(7),    /* bits 57-63 of GR0           */         
*      7 *                  Bit(1),   /* bit  57    of GR0           */         
*      7 CRYPI_FC_XTS       Bit(1),   /* bit  58    of GR0           */         
*      7 CRYPI_FC_ALG_AES   Bit(1),   /* bit  59    of GR0           */         
*      7 CRYPI_FC_PROTK     Bit(1),   /* bit  60    of GR0           */         
*      7 CRYPI_FC_KEYLEN    Bit(3),   /* bits 61-63 of GR0           */         
*    5 *                  Char(15),   /* reserved                    */         
*  /******************************************************************/         
*  /* End of the CRYPI block                                         */         
*  /******************************************************************/         
*  3 CRYPI_End          Char(0) Bdy(DWORD);                                     
*                                                                               
*/********************************************************************/         
*/* Constants for initializing the eyecatcher and version            */         
*/********************************************************************/         
*Dcl                                                                            
*  CRYPI_ID_C           Char(4)   Constant('CRYI'),                             
*  CRYPI_VER_C          Char(2)   Constant('01'),                               
*  CRYPI_LEN_C          Fixed(16) Constant(Size(CRYPI));                        
*                                                                               
*/********************************************************************/         
*/* Constants for CRYPI_MODE                                         */         
*/********************************************************************/         
*Dcl                                                                            
*  CRYPI_MODE_CBC    Fixed(8)  Constant(1),                                     
*  CRYPI_MODE_XTS    Fixed(8)  Constant(2);                                     
* ]CRYPI_MODE_ECB    Fixed(8)  Constant(3), /* Currently unsupported */         
* ]CRYPI_MODE_CFB    Fixed(8)  Constant(4), /* Currently unsupported */         
* ]CRYPI_MODE_CTR    Fixed(8)  Constant(5), /* Currently unsupported */         
* ]CRYPI_MODE_GCM    Fixed(8)  Constant(6), /* Currently unsupported */         
* ]CRYPI_MODE_OFB    Fixed(8)  Constant(7), /* Currently unsupported */         
* ]CRYPI_MODE_KMAC   Fixed(8)  Constant(8); /* Currently unsupported */         
*                                                                               
*/********************************************************************/         
*/* Other constants                                                  */         
*/********************************************************************/         
*Dcl                                                                            
*  CRYPI_INSTR_CNT_MAX  Fixed(32) Constant(4096);                               
*                                                                               
*%IF CRYPV_BASE = '' %THEN %CRYPV_BASE = 'Based';                               
*Dcl                                                                            
*1 CRYPV              CRYPV_BASE Bdy(DWORD),                                    
*  /******************************************************************/         
*  /* USAGE: CRYPV_HDR fields are filled in when CRYPV is created.   */         
*  /******************************************************************/         
*  3 CRYPV_HDR          Bdy(DWORD),   /* CRYPV header                */         
*    5 CRYPV_ID           Char(4),    /* Eyecatcher                  */         
*    5 CRYPV_VER          Char(2),    /* Version number              */         
*    5 CRYPV_LEN          Fixed(16),  /* Length of block             */         
*    5 CRYPV_CRYPI@       Ptr(64),    /* Pointer to CRYPI block      */         
*  /******************************************************************/         
*  /* CRYPV_INVOKE_PARMS is where the caller selects encryption vs   */         
*  /* decryption and specifies the input text, output text,          */         
*  /* additional text (only for certain modes), chaining/tweak       */         
*  /* information, and other parameters for the requested operation. */         
*  /*                                                                */         
*  /* USAGE: These fields are filled in on a per-call basis.         */         
*  /*        Any fields modified by BCFCRYPT will be indicated as    */         
*  /*        such. However, there are currently no fields that are   */         
*  /*        modified by BCFCRYPT.                                   */         
*  /******************************************************************/         
*  3 CRYPV_INVOKE_PARMS Bdy(DWORD),                                             
*    /****************************************************************/         
*    /* CRYPV_Flags contains flags to indicate processing            */         
*    /****************************************************************/         
*    5 CRYPV_Flags        Bit(32),    /* Flags for special behavior  */         
*      7 *                  Char(3),  /* reserved                    */         
*      7 CRYPV_GR0_FC       Bit(8),                                             
*       8 CRYPV_F_DECIPH_OP  Bit(1),  /* 0 = encipher, 1 = decipher  */         
*    5 *                  Char(4),    /* reserved                    */         
*    /****************************************************************/         
*    /* Text Length is the length of the input text to be processed. */         
*    /* For all supported modes, this is also output text length.    */         
*    /****************************************************************/         
*    5 CRYPV_TEXT_LEN     Fixed(64),                                            
*    /****************************************************************/         
*    /* Input text (clear text for encrypt, cipher text for decrypt) */         
*    /* USAGE: These fields are filled in on a per-call basis.       */         
*    /****************************************************************/         
*    5 CRYPV_INPUT_ADDR   Ptr(64),                                              
*    5 CRYPV_INPUT_ALET   Fixed(32),                                            
*    /****************************************************************/         
*    /* Output text (cipher text for encrypt, clear text for decrypt)*/         
*    /* USAGE: These fields are filled in on a per-call basis        */         
*    /****************************************************************/         
*    5 CRYPV_OUTPUT_ALET  Fixed(32),                                            
*    5 CRYPV_OUTPUT_ADDR  Ptr(64),                                              
*    /****************************************************************/         
*    /* Additional text (mode-specific)                              */         
*    /* USAGE: These fields are only used for GCM (ignored for all   */         
*    /*        other modes). They are filled in on a per-call basis. */         
*    /****************************************************************/         
*    5 CRYPV_ADDT_ADDR    Ptr(64),                                              
*    5 CRYPV_ADDT_LEN     Fixed(64),                                            
*    5 CRYPV_ADDT_ALET    Fixed(32),                                            
*    5 *                  Char(4),    /* reserved                    */         
*    /****************************************************************/         
*    /* Chaining data/XTS parameters                                 */         
*    /* USAGE: For ECB mode, these fields are ignored.               */         
*    /*        On input:                                             */         
*    /*        - For XTS mode, CRYPV_XTS_TweakVal is the initial     */         
*    /*          tweak value. This value must never repeat for the   */         
*    /*          same key material (such as for different datasets), */         
*    /*          so the recommendation is to have the upper 8 bytes  */         
*    /*          set to a value unique the dataset (maybe a STCK)    */         
*    /*          and the lower 8 bytes set to the 64-bit relative    */         
*    /*          record number.                                      */         
*    /*        - For all other modes, CRYPV_AES_CHAIN is the initial */         
*    /*          chaining value.                                     */         
*    /*        On output, this field is unchanged, because chaining  */         
*    /*        is not currently supported.                           */         
*    /****************************************************************/         
*    5 CRYPV_CHAIN_DATA   Union,                                                
*      7 CRYPV_XTS_TweakVal Char(CRYP_AES_BLOCK_SIZE),                          
*      7 CRYPV_AES_CHAIN    Char(CRYP_AES_BLOCK_SIZE),                          
*  /******************************************************************/         
*  /* End of the CRYPV parm block                                    */         
*  /******************************************************************/         
*  3 CRYPV_End          Char(0) Bdy(DWORD);                                     
*                                                                               
*/********************************************************************/         
*/* Constants for initializing the eyecatcher and version            */         
*/********************************************************************/         
*Dcl                                                                            
*  CRYPV_ID_C           Char(4)   Constant('CRYV'),                             
*  CRYPV_VER_C          Char(2)   Constant('01'),                               
*  CRYPV_LEN_C          Fixed(16) Constant(Size(CRYPV));                        
*                                                                               
*/********************************************************************/         
*/* Mapping for reason code                                          */         
*/********************************************************************/         
*Dcl                                                                            
*  1 CRYP_RS_Mapping   Based,                                                   
*    3 CRYP_CodeLoc      Fixed(16),                                             
*    3 CRYP_ReasonCode   Fixed(16);                                             
*                                                                               
*/********************************************************************/         
*/* BCFCRYPT work area size constant                                 */         
*/********************************************************************/         
*Dcl                                                                            
*  CRYP_WORKA_SIZE      Fixed(32) Constant(512);                                
*                                                                               
*%IF CRYPWA_DCL ^= 'YES' %THEN %GOTO SKIP_CRYPWA_DCL;                           
*%IF CRYPWA_BASE = '' %THEN %CRYPWA_BASE = 'Automatic';                         
*/********************************************************************/         
*/* BCFCRYPT work area declaration                                   */         
*/* The CRYPWA will contain a copy of the caller's key and may       */         
*/* contain a copy of the final blocks of the caller's data. It is   */         
*/* strongly recommended that CRYPWA be in fetch-protected storage.  */         
*/********************************************************************/         
*Dcl                                                                            
*1 CRYPWA              CRYPWA_BASE Bdy(DWORD),                                  
*  3 CRYPWA_RSVD        Char(CRYP_WORKA_SIZE);                                  
*%SKIP_CRYPWA_DCL:;                                                             
*                                                                               
*/********************************************************************/         
*/* Constants for return codes                                       */         
*/*   CRYP_RC_OK       => everything went well                       */         
*/*   CRYP_RC_APPL_ERR => something was wrong with the parms         */         
*/*   CRYP_RC_ENV_ERR  => the request lacks sufficient hardware      */         
*/********************************************************************/         
*Dcl                                                                            
*  CRYP_RC_OK            Fixed(32) Constant(0),                                 
*  CRYP_RC_APPL_ERR      Fixed(32) Constant(8),                                 
*  CRYP_RC_ENV_ERR       Fixed(32) Constant(12);                                
*                                                                               
*/********************************************************************/         
*/* Constants for reason codes                                       */         
*/* Reason codes are composed of two Fixed(16) fields. The lower two */         
*/* bytes are the actual reason code and the upper two bytes are for */         
*/* diagnostics and debugging. See CRYP_RS_Mapping above.            */         
*/* For extra ease of use, reason codes start with their RC.         */         
*/********************************************************************/         
*Dcl (                                                                          
*/********************************************************************/         
*/* RSNx  Description                                                */         
*/* ----  ---------------------------------------------------------- */         
*/* 0000  Everything is OK                                           */         
*/********************************************************************/         
*  CRYP_RS_0_OK                    Constant('0000'X),                           
*/********************************************************************/         
*/* RSNx  Description                                                */         
*/* ----  ---------------------------------------------------------- */         
*/* 0801  CRYPV_TEXT_LEN is too short for the mode specified         */         
*/* 0802  An output field destructively overlaps an input field      */         
*/* 0803  The protected key contains an incorrect wrapping key VP    */         
*/* 0804  CRYPI was passed directly, but no valid flag was set       */         
*/* 0805  CRYPV was passed to BCFXCRYP with a CRYPI-only option      */         
*/* 0806  KEY1 length is not valid                                   */         
*/* 0807  KEY1 and KEY2 aren't the same size (XTS only)              */         
*/* 0808  CRYPI referenced from CRYPV was not properly initialized   */         
*/********************************************************************/         
*  CRYP_RS_8_INSUF_IN              Constant('0801'X),                           
*  CRYP_RS_8_OVERLAP               Constant('0802'X),                           
*  CRYP_RS_8_BAD_WRAP              Constant('0803'X),                           
*  CRYP_RS_8_BAD_CRYPI_FLAGS       Constant('0804'X),                           
*  CRYP_RS_8_BAD_BCFXCRYP_OPT      Constant('0805'X),                           
*  CRYP_RS_8_BAD_KEY1_LENGTH       Constant('0806'X),                           
*  CRYP_RS_8_XTS_KEYLEN_MISMATCH   Constant('0807'X),                           
*  CRYP_RS_8_CRYPI_NOT_INITED      Constant('0808'X),                           
*/********************************************************************/         
*/* RSNx  Description                                                */         
*/* ----  ---------------------------------------------------------- */         
*/* 0C01  There is no MSA support on this machine                    */         
*/* 0C02  The requested mode is not supported                        */         
*/* 0C03  The requested key size or key format is not supported      */         
*/* 0C04  Internal error occurred. Please contact IBM service.       */         
*/********************************************************************/         
*  CRYP_RS_12_NO_CPACF             Constant('0C01'X),                           
*  CRYP_RS_12_UNSUP_MODE           Constant('0C02'X),                           
*  CRYP_RS_12_UNSUP_FC             Constant('0C03'X),                           
*  CRYP_RS_12_INTERNAL_ERROR       Constant('0C04'X)                            
*    ) Fixed(16);                                                               
*/********************************************************************/         
*/* Other important algorithm constants                              */         
*/********************************************************************/         
*Dcl                                /* Lengths in bytes              */         
*  CRYP_AES_BLOCK_SIZE      Fixed(32) Constant(16),                             
*  CRYP_AES128_CLR_KEY_Len  Fixed(32) Constant(16),                             
*  CRYP_AES192_CLR_KEY_Len  Fixed(32) Constant(24),                             
*  CRYP_AES256_CLR_KEY_Len  Fixed(32) Constant(32),                             
*  CRYP_AES_WKVP_LEN        Fixed(32) Constant(32),                             
*  CRYP_AES128_PROT_KEY_Len Fixed(32) Constant(16+CRYP_AES_WKVP_LEN),           
*  CRYP_AES192_PROT_KEY_Len Fixed(32) Constant(24+CRYP_AES_WKVP_LEN),           
*  CRYP_AES256_PROT_KEY_Len Fixed(32) Constant(32+CRYP_AES_WKVP_LEN);           
*                                                                               
*%INCLUDE SYSLIB(BCFZVTAB);                                                     
*/* End of PL/X Source                                               */         
* %IF BCFZCRYP_LIST = 'NO' !                                                    
*    ZCBPRINT = 'NO' %THEN                                                      
* %DO;                                                                          
*   @LIST POP NOECHO;                                                           
* %END;                                                                         
* %END;                                                                         
