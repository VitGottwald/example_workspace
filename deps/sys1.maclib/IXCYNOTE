*                                                                       00001000
* %DCL IXCYNOTE_INCLUDED CHAR EXT;                                      00002000
* %DEACTIVATE IXCYNOTE_INCLUDED;                                        00003000
* %IF IXCYNOTE_INCLUDED = '' %THEN                                      00004000
* %DO;                                                                  00005000
*/* Macro made bi-lingual on 21235. CBGEN compile date 21138         */ 00006000
*% /*                                                                   00007000
         MACRO                                                          00008000
         IXCYNOTE &DSECT=YES,&LIST=YES,&TITLE=YES,                     *00009000
               &IXCYNOTE_TNOTEPADNAME=COND,&IXCYNOTE_TANSAREA=COND,    *00010000
               &IXCYNOTE_TWHYQUIESCED=COND,&IXCYNOTE_TWHYIMPAIRED=COND,*00011000
               &IXCYNOTE_TDETAILSRESUMED=COND,                         *00012000
               &IXCYNOTE_TDETAILSQUIESCED=COND,                        *00013000
               &IXCYNOTE_TDETAILSCONSTRAINED=COND,                     *00014000
               &IXCYNOTE_TDETAILSNOSAFAUTH=COND,                       *00015000
               &IXCYNOTE_TDETAILSNORESOURCES=COND,                     *00016000
               &IXCYNOTE_TDETAILSNOSTRUCTURES=COND,                    *00017000
               &IXCYNOTE_TDETAILSCRITERIA=COND,                        *00018000
               &IXCYNOTE_TDETAILSDELETENP=COND,                        *00019000
               &IXCYNOTE_TDETAILSACCESS=COND,                          *00020000
               &IXCYNOTE_TDETAILSNOTE=COND,                            *00021000
               &IXCYNOTE_TDETAILSNOTES=COND,                           *00022000
               &IXCYNOTE_TDETAILSBUFLEN=COND,                          *00023000
               &IXCYNOTE_TDETAILSMODIFY#NOTES=COND,                    *00024000
               &IXCYNOTE_TDATALOCATOR=COND,                            *00025000
               &IXCYNOTE_TDATALOCATORS=COND,                           *00026000
               &IXCYNOTE_TNOTEPADDATA=COND,&IXCYNOTE_TCONNECTDATA=COND,*00027000
               &IXCYNOTE_TNOTEDATA=COND,&IXCYNOTE_TSYSCONNDATA=COND,   *00028000
               &IXCYNOTE_TSELECTBYTAGRANGE=COND,                       *00029000
               &IXCYNOTE_TSELECTBYTAGMASK=COND,                        *00030000
               &IXCYNOTE_TSELECTBYCONNECTIONID=COND,                   *00031000
               &IXCYNOTE_TSELECTIONCRITERIA=COND                        00032000
         GBLC  &IXCYNOTE_INCLUDED                                       00033000
         GBLC  &ZCBPRINT                                                00034000
&IXCYNOTE_INCLUDED SETC 'YES'                                           00035000
         AIF   ('&LIST' EQ 'NONE').P0                                   00036000
         AIF   ('&TITLE' EQ 'NO').P5                                    00037000
 TITLE   'IXCYNOTE  - XCF note pad mappings                          '  00038000
.P5      ANOP                                                           00039000
**/ ;                                                                   00040000
*/* START OF SPECIFICATIONS ******************************************* 00041000
*                                                                       00042000
*01* PROPRIETARY STATEMENT =                                            00043000
*                                                                       00044000
*    Licensed Materials - Property of IBM                               00045000
*    5650-ZOS                                                           00046000
*    COPYRIGHT IBM CORP. 2013                                           00047000
*                                                                       00048000
*    US Government Users Restricted Rights - Use, duplication or        00049000
*    disclosure restricted by GSA ADP Schedule Contract with            00050000
*    IBM Corp.                                                          00051000
*                                                                       00052000
*01* STATUS = HBB7790                                                   00053000
*                                                                       00054000
*01* END OF PROPRIETARY STATEMENT                                       00055000
*                                                                       00056000
*01* EXTERNAL CLASSIFICATION: GUPI                                      00057000
*01* END OF EXTERNAL CLASSIFICATION:                                    00058000
*                                                                       00059000
*01* DESCRIPTIVE NAME:  XCF note pad mappings                           00060000
*02*  ACRONYM:  none                                                    00061000
*                                                                       00062000
*01* MACRO NAME:  IXCYNOTE                                              00063000
*                                                                       00064000
*01* DSECT NAME:                                                        00065000
*    ixcynote_tNotePadName                                              00066000
*                                                                       00067000
*01* COMPONENT:  Cross System Coupling Facility (SCXCF)                 00068000
*                                                                       00069000
*01* EYE-CATCHER:  NONE                                                 00070000
*                                                                       00071000
*01* STORAGE ATTRIBUTES:                                                00072000
*02*  SUBPOOL:  User-supplied                                           00073000
*02*  KEY:  Key User-supplied                                           00074000
*02*  RESIDENCY:  User-supplied                                         00075000
*                                                                       00076000
*01* SIZE:                                                              00077000
*            IXCYNOTE_TDETAILSMODIFY#NOTES  -- X'0020' bytes            00078000
*            IXCYNOTE_TNOTEPADNAME          -- X'0020' bytes            00079000
*            IXCYNOTE_TANSAREA              -- X'0040' bytes            00080000
*            IXCYNOTE_TWHYQUIESCED          -- X'0001' bytes            00081000
*            IXCYNOTE_TWHYIMPAIRED          -- X'0001' bytes            00082000
*            IXCYNOTE_TDETAILSRESUMED       -- X'0014' bytes            00083000
*            IXCYNOTE_TDETAILSQUIESCED      -- X'0020' bytes            00084000
*            IXCYNOTE_TDETAILSCONSTRAINED   -- X'0018' bytes            00085000
*            IXCYNOTE_TDETAILSNOSAFAUTH     -- X'0014' bytes            00086000
*            IXCYNOTE_TDETAILSNORESOURCES   -- X'0020' bytes            00087000
*            IXCYNOTE_TDETAILSNOSTRUCTURES  -- X'0008' bytes            00088000
*            IXCYNOTE_TDETAILSCRITERIA      -- X'000C' bytes            00089000
*            IXCYNOTE_TDETAILSDELETENP      -- X'0004' bytes            00090000
*            IXCYNOTE_TDETAILSACCESS        -- X'0004' bytes            00091000
*            IXCYNOTE_TDETAILSNOTE          -- X'000C' bytes            00092000
*            IXCYNOTE_TDETAILSNOTES         -- X'0010' bytes            00093000
*            IXCYNOTE_TDETAILSBUFLEN        -- X'0004' bytes            00094000
*            IXCYNOTE_TDATALOCATOR          -- X'0010' bytes            00095000
*            IXCYNOTE_TDATALOCATORS         -- X'0010' bytes            00096000
*            IXCYNOTE_TNOTEPADDATA          -- X'00E8' bytes            00097000
*            IXCYNOTE_TCONNECTDATA          -- X'00E8' bytes            00098000
*            IXCYNOTE_TNOTEDATA             -- X'0058' bytes            00099000
*            IXCYNOTE_TSYSCONNDATA          -- X'0010' bytes            00100000
*            IXCYNOTE_TSELECTBYTAGRANGE     -- X'0020' bytes            00101000
*            IXCYNOTE_TSELECTBYTAGMASK      -- X'0020' bytes            00102000
*            IXCYNOTE_TSELECTBYCONNECTIONID -- X'0020' bytes            00103000
*            IXCYNOTE_TSELECTIONCRITERIA    -- X'0024' bytes            00104000
*                                                                       00105000
*                                                                       00106000
*01* CREATED BY:                                                        00107000
*     User                                                              00108000
*                                                                       00109000
*01* POINTED TO BY:                                                     00110000
*                                                                       00111000
*01* SERIALIZATION:                                                     00112000
*     None required                                                     00113000
*                                                                       00114000
*01* FUNCTION:                                                          00115000
*02* IXCYNOTE maps the data related to the XCF note pad interface       00116000
*    (IXCNOTE).                                                         00117000
*                                                                       00118000
*01* METHOD OF ACCESS:                                                  00119000
*02*  ASM: IXCYNOTE                                                     00120000
*02*  PL/AS:                                                            00121000
*                                                                       00122000
*01* DELETED BY:  User                                                  00123000
*                                                                       00124000
*01* FREQUENCY:                                                         00125000
*                                                                       00126000
*01* DEPENDENCIES:  None.                                               00127000
*                                                                       00128000
*01* DISTRIBUTION LIBRARY:  AMACLIB                                     00129000
*                                                                       00130000
*01* CHANGE ACTIVITY:                                                   00131000
*   $L0=SAPENQ  ,HBB7790,101215,PD00BJ: XCF note pad support            00132000
*   $L1=SAPENQ  ,HBB7790,110715,PD0JES: XCF note pad support            00133000
*   $L2=OA60571 ,HBB77B0,200830,PD00C9: XCF note pad resiliency         00134000
*   $L3=OA60571 ,HBB77B0,201211,PD002F: XCF note pad resiliency         00135000
*                                                                       00136000
** END OF SPECIFICATIONS *********************************************/ 00137000
*% /*                                                                   00138000
.P0      ANOP                                                           00139000
         AIF   ('&ZCBPRINT' EQ 'NO').P1                                 00140000
         AIF   ('&LIST' EQ 'YES').P2                                    00141000
.P1      ANOP                                                           00142000
         PUSH  PRINT                                                    00143000
         PRINT OFF                                                      00144000
.P2      ANOP                                                           00145000
         AIF   ('&IXCYNOTE_TNOTEPADNAME' EQ 'NO').L0002                 00146000
         AIF   ('&DSECT' EQ 'YES').L0003                                00147000
         AIF   ('&IXCYNOTE_TNOTEPADNAME' NE 'YES').L0002                00148000
.L0003   ANOP                                                           00149000
*                                                                       00150000
* ********************************************************************  00151000
* *                                                                  *  00152000
* *  Note Pad Names                                                  *  00153000
* *                                                                  *  00154000
* *    Summary                                                       *  00155000
* *      Note pads are identified by name. The names are divided     *  00156000
* *      into sections that identify the "owner" (software vendor),  *  00157000
* *      application and function of the note pad.                   *  00158000
* *                                                                  *  00159000
* *    Usage                                                         *  00160000
* *      When invoking the IXCNOTE macro, code NOTEPAD to indicate   *  00161000
* *      the name of the note pad to be processed.                   *  00162000
* *                                                                  *  00163000
* *    Explanation                                                   *  00164000
* *      Note pads are identified by a note pad name. Note pad names *  00165000
* *      are divided into sections.  All sections of the name must   *  00166000
* *      be left justified, and appended on the right with EBCDIC    *  00167000
* *      blanks as needed.  Names can consist of the characters A-Z, *  00168000
* *      0-9, #,$,@, and _ (underscore).  Alphabetic characters must *  00169000
* *      be upper case.                                              *  00170000
* *                                                                  *  00171000
* *      The first section (npn_Owner) must not be blank and is      *  00172000
* *      intended to provide uniqueness so that applications offered *  00173000
* *      by different software vendors can be segregated from one    *  00174000
* *      another.  Most software running on the z/OS platform has a  *  00175000
* *      3 or 4 character "prefix" that is unique to that particular *  00176000
* *      application, subsystem, or component.  Use of that prefix   *  00177000
* *      in the owner section of the name will help avoid confusion  *  00178000
* *      and interference between different vendors.  It will also   *  00179000
* *      help installations and service personnel identify the       *  00180000
* *      relevant owner of the software.                             *  00181000
* *                                                                  *  00182000
* *      For example, the "owner" section of a note pad name used by *  00183000
* *      IBM software would begin with the component prefix (such    *  00184000
* *      'IXC' for XCF) or the characters "SYS".  Thus, to avoid     *  00185000
* *      names used by IBM, do not specify an "owner" name that      *  00186000
* *      begins with the letters A through I or the character string *  00187000
* *      SYS.                                                        *  00188000
* *                                                                  *  00189000
* *                                                                  *  00190000
* *      The second section (npn_Application) must not be blank and  *  00191000
* *      is intended to identify the particular vendor application   *  00192000
* *      that is using the note pad. A given vendor might offer      *  00193000
* *      different applications each of which might require its own  *  00194000
* *      note pad. Some vendors might use this section to identify   *  00195000
* *      not only the application, but a particular instance of      *  00196000
* *      the application as well.  For example, an application name  *  00197000
* *      might consist of a 3 character prefix supplied by the       *  00198000
* *      vendor followed by a 2 character suffix provided by the     *  00199000
* *      installation that might be used to distinguish a test       *  00200000
* *      version of the application from the production version      *  00201000
* *      and/or different production versions from one another.      *  00202000
* *                                                                  *  00203000
* *                                                                  *  00204000
* *      The third section (npn_Function) is intended to identify    *  00205000
* *      the function within the application to which the note pad   *  00206000
* *      is being applied.  A given application might require        *  00207000
* *      distinct note pads for different purposes. This section of  *  00208000
* *      the name can be blank.                                      *  00209000
* *                                                                  *  00210000
* *                                                                  *  00211000
* *      The fourth section (npn_Qualifier) is intended to provided  *  00212000
* *      additional qualification to allow, for example, a given     *  00213000
* *      function within an application to have multiple note pads.  *  00214000
* *      Alternatively, this section might be used to distinguish    *  00215000
* *      the note pads being used by different releases of a given   *  00216000
* *      application.  This section of the name can be blank.        *  00217000
* *                                                                  *  00218000
* *                                                                  *  00219000
* *                                                                  *  00220000
* *      Note that the owner and application sections of the note    *  00221000
* *      pad name will, in conjunction with installation             *  00222000
* *      specifications, determine the coupling facility structure   *  00223000
* *      that is to be used for the note pad. In the absence of      *  00224000
* *      installation specifications, XCF will allocate the note pad *  00225000
* *      in one of its "default" note pad structures (with names of  *  00226000
* *      the form IXCNP_SYSXCFxx).                                   *  00227000
* *                                                                  *  00228000
* *      However, the installation could activate a Coupling         *  00229000
* *      Facility Resource Management (CFRM) policy that defines a   *  00230000
* *      structure name of the form IXCNP_ownerxx where "owner" is   *  00231000
* *      the nonblank portion of the owner section of the note pad   *  00232000
* *      name and "xx" is the EBCDIC representation of a two         *  00233000
* *      character hexedecimal number in the range 00-FF.  If such   *  00234000
* *      structures are defined, XCF will allocate all note pads     *  00235000
* *      with the indicated "owner" in the indicated set of one or   *  00236000
* *      more structures.  The intended purpose of this protocol is  *  00237000
* *      to enable the installation to isolate the note pads of a    *  00238000
* *      particular "owner" from other note pads that have been      *  00239000
* *      defined in the sysplex.                                     *  00240000
* *                                                                  *  00241000
* *      ALternatively, the installation could activate a Coupling   *  00242000
* *      Facility Resource Management (CFRM) policy that defines a   *  00243000
* *      structure name of the form owner_application where "owner"  *  00244000
* *      and "application" are extracted from the note pad name. If  *  00245000
* *      "owner" has trailing blanks, XCF will substitute a single   *  00246000
* *      underscore for them all when forming the structure name.    *  00247000
* *      If "owner" has no trailing blanks, the underscore is        *  00248000
* *      omitted.  If such a structure is defined, XCF will allocate *  00249000
* *      all note pads with the indicated "owner" and "application"  *  00250000
* *      name in the indicated structure.  The intended purpose of   *  00251000
* *      this protocol is to enable the installation to isolate the  *  00252000
* *      note pads of a particular owner's application to a unique   *  00253000
* *      sructure.                                                   *  00254000
* *                                                                  *  00255000
* *      XCF will attempt to allocate a note pad in the first        *  00256000
* *      coupling facility structure it finds in the following       *  00257000
* *      search order:                                               *  00258000
* *       1 One of the structures with names like IXCNP_ownerxx      *  00259000
* *       2 One of the structures with names like IXCNP_SYSXCFxx     *  00260000
* *                                                                  *  00261000
* *      If the CFRM policy is updated to define a more preferred    *  00262000
* *      structure after a note pad has been allocated, XCF may,     *  00263000
* *      at its discretion, move the note pad to the more preferred  *  00264000
* *      structure.                                                  *  00265000
* *                                                                  *  00266000
* ********************************************************************  00267000
*                                                                       00268000
*                                                                       00269000
         AIF   ('&DSECT' EQ 'YES').L0004                                00270000
IXCYNOTE_TNOTEPADNAME DS 0X                                             00271000
         AGO   .L0005                                                   00272000
.L0004   ANOP                                                           00273000
IXCYNOTE_TNOTEPADNAME DSECT                                             00274000
.L0005   ANOP                                                           00275000
NPN_OWNER DS   CL8       Vendor/component owner                         00276000
NPN_APPLICATION DS CL8   Application using note pad                     00277000
NPN_FUNCTION DS CL8      Function within application                    00278000
NPN_QUALIFIER DS CL8     Multiple instances or release                  00279000
IXCYNOTE_TNOTEPADNAME_LEN EQU *-IXCYNOTE_TNOTEPADNAME                   00280000
.L0002   ANOP                                                           00281000
         AIF   ('&IXCYNOTE_TANSAREA' EQ 'NO').L0006                     00282000
         AIF   ('&DSECT' EQ 'YES').L0007                                00283000
         AIF   ('&IXCYNOTE_TANSAREA' NE 'YES').L0006                    00284000
.L0007   ANOP                                                           00285000
*                                                                       00286000
* ********************************************************************  00287000
* *                                                                  *  00288000
* *  Answer Area                                                     *  00289000
* *                                                                  *  00290000
* *    Summary                                                       *  00291000
* *      ixcynote_tAnsArea maps the data returned by XCF in the      *  00292000
* *      "answer area" provided by the invoker of the IXCNOTE macro. *  00293000
* *      The answer area has a "header" that may provide additional  *  00294000
* *      "details" about the request result as well as "data         *  00295000
* *      locators" that indicate where various "data records" may    *  00296000
* *      have been stored.                                           *  00297000
* *                                                                  *  00298000
* *      The header starts at offset zero in the storage area named  *  00299000
* *      by the ANSAREA keyword of the IXCNOTE macro.  Use           *  00300000
* *      information in the header to locate the data record(s) of   *  00301000
* *      interest.                                                   *  00302000
* *                                                                  *  00303000
* *    Usage                                                         *  00304000
* *      - Invoke IXCNOTE with an ANSAREA large enough for the       *  00305000
* *        answer area header and the data records expected when the *  00306000
* *        request is processed successfully.                        *  00307000
* *                                                                  *  00308000
* *      - Invoke IXCNOTE with an ANSAREA large enough for the       *  00309000
* *        answer area header but too small for the relevant data    *  00310000
* *        records.  The note pad service will store the header in   *  00311000
* *        the answer area and return with a return and reason code  *  00312000
* *        indicating that the answer area is too small.  The        *  00313000
* *        aa_AnsAreaSizeNeeded field will indicate how much storage *  00314000
* *        is needed to contain the entire answer area (with all of  *  00315000
* *        the relevant records).  Obtain storage that is at least   *  00316000
* *        as big as the indicated size and reissue the request.     *  00317000
* *                                                                  *  00318000
* *                                                                  *  00319000
* *    Explanation                                                   *  00320000
* *      The answer area provides information about the request and  *  00321000
* *      its results.  As applicable, it will indicate where related *  00322000
* *      data can be located.                                        *  00323000
* *                                                                  *  00324000
* *      For most IXCNOTE requests, the answer area is optional.     *  00325000
* *      Depending on the implementation, the user may be able to    *  00326000
* *      rely on the IXCNOTE expansion to set the necessary data in  *  00327000
* *      user supplied variables.  In cases where an answer area is  *  00328000
* *      provided, it will provide additional data that may be of    *  00329000
* *      interest to the application.                                *  00330000
* *                                                                  *  00331000
* *      If the storage area for the answer area is too small for    *  00332000
* *      the answer area header, the IXCNOTE request is rejected.    *  00333000
* *                                                                  *  00334000
* *      If the storage area for the answer area is large enough for *  00335000
* *      the answer area header, but too small for all the available *  00336000
* *      output, the request is not processed and IXCNOTE returns    *  00337000
* *      with a warning return code.  Within the answer area header, *  00338000
* *      aa_AnsAreaSizeNeeded indicates how much storage is needed   *  00339000
* *      to hold all the results.  The user is expected to obtain    *  00340000
* *      enough storage for the entire answer area and then reinvoke *  00341000
* *      IXCNOTE to process the request.                             *  00342000
* *                                                                  *  00343000
* *      When the answer area is big enough for the results, the     *  00344000
* *      answer area header potentially has two key pieces of        *  00345000
* *      information: "details" and "data locators".  If "data       *  00346000
* *      locators" are present, the answer area will contain "data   *  00347000
* *      records".  The particular details, number of data locators, *  00348000
* *      as well as number and type of data records stored in the    *  00349000
* *      answer area will depend on the particular request and its   *  00350000
* *      results.                                                    *  00351000
* *                                                                  *  00352000
* *        o Details                                                 *  00353000
* *                                                                  *  00354000
* *          In the answer area header, the field aa_DetailsFormat   *  00355000
* *          indicates whether any details were provided, and if so, *  00356000
* *          how the detail data is mapped.  If present, the field   *  00357000
* *          aa_Details contains the details.                        *  00358000
* *                                                                  *  00359000
* *          The IXCNOTE macro indicates the particular details      *  00360000
* *          stored for each applicable return and reason code.      *  00361000
* *          Thus the application writer has the choice of whether   *  00362000
* *          to use the IXCNOTE return and reason code or the        *  00363000
* *          aa_DetailsFormat field in the answer area to determine  *  00364000
* *          whether details are available, and if so, how the       *  00365000
* *          content is mapped.  Note that if using aa_DetailsFormat *  00366000
* *          to make the determination, one would need to be certain *  00367000
* *          that an answer area header had valid content before     *  00368000
* *          inspecting aa_DetailsFormat (check the return and       *  00369000
* *          reason code, or alternatively, ensure that              *  00370000
* *          aa_DetailsFormat is initialized to the value            *  00371000
* *          ixcynote_kDetailsNone before invoking IXCNOTE).         *  00372000
* *                                                                  *  00373000
* *          If the IXCNOTE macro does not explicitly indicate that  *  00374000
* *          details will be returned for a particular return and    *  00375000
* *          reason code combination, the answer area may or may not *  00376000
* *          contain details.  If details are provided, they will in *  00377000
* *          general provide diagnostic data related to intermediate *  00378000
* *          issues encountered as the request was processed.  These *  00379000
* *          details are not necessarily relevant to the final       *  00380000
* *          request result.                                         *  00381000
* *                                                                  *  00382000
* *                                                                  *  00383000
* *        o Data Locators                                           *  00384000
* *                                                                  *  00385000
* *          A data locator specifies the location within the answer *  00386000
* *          area where one or more data records of a particular     *  00387000
* *          type can be found.  That is, the data locator will      *  00388000
* *          indicate where an array of data records can be found    *  00389000
* *          within the answer area.  The data locator includes      *  00390000
* *          information to indicate the type, size, location, and   *  00391000
* *          number of records that it describes.                    *  00392000
* *                                                                  *  00393000
* *          Data locators are stored as an array of data locator    *  00394000
* *          entries.  Each entry in the data locator array is       *  00395000
* *          mapped by ixcynote_tDataLocator.  Within the answer     *  00396000
* *          area header, the field aa_#DataLocators indicates how   *  00397000
* *          many data locators were stored and the field            *  00398000
* *          aa_OffsetDataLocators indicates where the array of data *  00399000
* *          locators can be found within the answer area.  The      *  00400000
* *          mapping declared as ixcynote_tDataLocators may be of    *  00401000
* *          use when implementing code to run through the data      *  00402000
* *          locators array.                                         *  00403000
* *                                                                  *  00404000
* *          Each data locator entry locates a particular type of    *  00405000
* *          data record.  If a request returns different types of   *  00406000
* *          data records, there will be a data locator for each     *  00407000
* *          type of record.  Thus in general, the number of data    *  00408000
* *          locators returned may be less than the number of data   *  00409000
* *          records that are returned.                              *  00410000
* *                                                                  *  00411000
* *          In some cases, there may be multiple entries in the     *  00412000
* *          data locator array, each of which locates the same type *  00413000
* *          of data record.  This might be done, for example, in    *  00414000
* *          order to organize the data records into logical         *  00415000
* *          groupings.                                              *  00416000
* *                                                                  *  00417000
* *                                                                  *  00418000
* *          When successful, some requests have a "primary" data    *  00419000
* *          record that would be expected to be returned.  When the *  00420000
* *          expected record is stored in the answer area, the field *  00421000
* *          aa_OffsetDataRecord in the answer area header can be    *  00422000
* *          used to locate this primary record directly (instead of *  00423000
* *          locating the record indirectly via an entry in the data *  00424000
* *          locator array).                                         *  00425000
* *                                                                  *  00426000
* *                                                                  *  00427000
* *        o Data Records                                            *  00428000
* *                                                                  *  00429000
* *          Depending on the particular request and the results     *  00430000
* *          of that request, zero or more "data records" may be     *  00431000
* *          stored in the answer area.  The following data records  *  00432000
* *          are supported:                                          *  00433000
* *                                                                  *  00434000
* *          Data Record Mapping      Data Record Describes          *  00435000
* *          -----------------------  ----------------------------   *  00436000
* *          ixcynote_tNotePadData    Note pad                       *  00437000
* *          ixcynote_tConnectData    Connection to a note pad       *  00438000
* *          ixcynote_tNoteData       Note in a note pad             *  00439000
* *          ixcynote_tSysConnData    System connections to note pad *  00440000
* *                                                                  *  00441000
* *                                                                  *  00442000
* *          Assuming a suitable answer area is provided and the     *  00443000
* *          request is successful (IXCNOTE return code is zero),    *  00444000
* *          the indicated data records will be returned for the     *  00445000
* *          indicated requests.                                     *  00446000
* *                                                                  *  00447000
* *            In the column with the heading of '#':                *  00448000
* *              0 = no data records returned                        *  00449000
* *              1 = one data record of indicated type is returned   *  00450000
* *              N = zero or more records of the indicated type are  *  00451000
* *                  returned                                        *  00452000
* *                                                                  *  00453000
* *                                                                  *  00454000
* *                                                                  *  00455000
* *        For REQUEST=NOTEPAD                                       *  00456000
* *                                                                  *  00457000
* *          ReqType  # Data Records                                 *  00458000
* *          -------- - ------------------------                     *  00459000
* *          CREATE   1 ixcynote_tNotepadData     (1)                *  00460000
* *                                                                  *  00461000
* *  (1) Applies if note pad created or already exists               *  00462000
* *                                                                  *  00463000
* *                                                                  *  00464000
* *          QUERY    1 ixcynote_tNotepadData                        *  00465000
* *                   N ixcynote_tSysConnData                        *  00466000
* *                                                                  *  00467000
* *          DELETE   0 -                                            *  00468000
* *                                                                  *  00469000
* *                                                                  *  00470000
* *        For REQUEST=CONNECTION                                    *  00471000
* *                                                                  *  00472000
* *          ReqType  # Data Records                                 *  00473000
* *          -------- - ------------------------                     *  00474000
* *          CREATE   1 ixcynote_tConnectData                        *  00475000
* *                                                                  *  00476000
* *          DELETE   0 -                                            *  00477000
* *                                                                  *  00478000
* *          PAUSE    0 -                                            *  00479000
* *                                                                  *  00480000
* *          RESUME   0 -                                            *  00481000
* *                                                                  *  00482000
* *                                                                  *  00483000
* *      o For REQUEST=NOTE                                          *  00484000
* *                                                                  *  00485000
* *          ReqType  # Data Records                                 *  00486000
* *          -------- - -------------------------------------------  *  00487000
* *          CREATE   1 ixcynote_tNoteData for created note          *  00488000
* *          WRITE    1 ixcynote_tNoteData for resultant note        *  00489000
* *          REPLACE  1 ixcynote_tNoteData for resultant note        *  00490000
* *          READ     1 ixcynote_tNoteData for the note              *  00491000
* *          DELETE   1 ixcynote_tNoteData for the note              *  00492000
* *                                                                  *  00493000
* *                                                                  *  00494000
* *                                                                  *  00495000
* *      o For REQUEST=NOTES                                         *  00496000
* *                                                                  *  00497000
* *          ReqType  # Data Records                                 *  00498000
* *          -------- - ------------------------                     *  00499000
* *          READ     N ixcynote_tNoteData                           *  00500000
* *                                                                  *  00501000
* *          DELETE   0 -                                            *  00502000
* *                                                                  *  00503000
* *                                                                  *  00504000
* *                                                                  *  00505000
* ********************************************************************  00506000
*                                                                       00507000
*                                                                       00508000
         AIF   ('&DSECT' EQ 'YES').L0008                                00509000
IXCYNOTE_TANSAREA DS 0D  Header for AnsArea returned by IXCNOTE         00510000
         AGO   .L0009                                                   00511000
.L0008   ANOP                                                           00512000
IXCYNOTE_TANSAREA DSECT   Header for AnsArea returned by IXCNOTE        00513000
.L0009   ANOP                                                           00514000
AA_VERSION DS  X         Version of data within this header. Initially *00515000
                         zero. May be nonzero in the future to         *00516000
                         indicate presence of new or changed           *00517000
                         information in the header.                     00518000
         DS    CL1       Reserved                                       00519000
AA_DETAILSFORMAT DS H    Code to indicate what data (mapping) was      *00520000
                         stored in aa_Details. See constants whose     *00521000
                         names begin with ixcynote_kDetails.            00522000
AA_ANSAREASIZE DS F      Number of bytes stored in the answer area      00523000
AA_OFFSETDATARECORD DS F This field is nonzero if the data record      *00524000
                         "expected" for a "successful" request was     *00525000
                         returned in the answer area. If nonzero, it   *00526000
                         indicates relative to the start of the answer *00527000
                         area, the offset at which the data record was *00528000
                         stored. If nonzero, this offset will be the   *00529000
                         same offset as reported in the first entry of *00530000
                         the data locators array                       *00531000
                         (ixcynote_tDataLocators). Note that this      *00532000
                         field being zero does not necessarily imply    00533000
*                        that no data records were returned.            00534000
AA_#DATALOCATORS DS F    Number of data locators returned in           *00535000
                         aa_DataLocators.                               00536000
AA_OFFSETDATALOCATORS DS F Relative to the start of the answer area,   *00537000
                         the offset at which the array of data         *00538000
                         locators can be found. Each locator can be    *00539000
                         used to locate a data record in the answer    *00540000
                         area. Valid for use if aa_#DataLocators is    *00541000
                         nonzero.                                       00542000
AA_ANSAREASIZENEEDED DS F Number of bytes of storage needed for the    *00543000
                         answer area. For cases where some but not all *00544000
                         of the requested data records were returned,  *00545000
                         (ixcnoteRsnMoreData), this field indicates    *00546000
                         the number of bytes needed to hold all of the *00547000
                         records that could have been stored in the    *00548000
                         AnsArea had it been large enough. For cases   *00549000
                         where no data records were returned because   *00550000
                         the answer area was too small                 *00551000
                         (ixcnoteRsnAnsLenMore), this field indicates   00552000
*                        the minimum number of bytes required in order *00553000
                         to obtain the minimum required number of data *00554000
                         records. Reissuing the request with an        *00555000
                         AnsArea at least as large as this minimum     *00556000
                         size will allow some data to be returned.     *00557000
                         Depending on the request, this minimum size   *00558000
                         may not be large enough to hold all of the    *00559000
                         relevant records that could be returned. In   *00560000
                         all other cases, the content of this field is *00561000
                         undefined.                                     00562000
         DS    CL8       Reserved                                       00563000
AA_DETAILS DS  CL32      Contains additional data about the result of  *00564000
                         the request. Content will vary according to   *00565000
                         the type and result of the IXCNOTE request    *00566000
                         that was issued. A nonzero value in           *00567000
                         aa_DetailsFormat indicates that aa_Details    *00568000
                         contains data. That value also indicates      *00569000
                         which of the ixcynote_tDetails mappings       *00570000
                         should be used to interpret aa_details.        00571000
IXCYNOTE_TANSAREA_LEN EQU *-IXCYNOTE_TANSAREA                           00572000
.L0006   ANOP                                                           00573000
         AIF   ('&IXCYNOTE_TWHYQUIESCED' EQ 'NO').L000A                 00574000
         AIF   ('&DSECT' EQ 'YES').L000B                                00575000
         AIF   ('&IXCYNOTE_TWHYQUIESCED' NE 'YES').L000A                00576000
.L000B   ANOP                                                           00577000
*                                                                       00578000
*    *****************************************************************  00579000
*    *                                                               *  00580000
*    * The conditions indicated by the flags in ixcynote_tWhyQuiesced*  00581000
*    * are not necessarily inclusive of all conditions that might    *  00582000
*    * exist at a given time. For example, when a request is rejected*  00583000
*    * due to a quiescing condition, the report might only include   *  00584000
*    * the specific condition that led to rejection of the request.  *  00585000
*    * However, other applicable conditions may be included when the *  00586000
*    * information is readily available.                             *  00587000
*    *                                                               *  00588000
*    *****************************************************************  00589000
*                                                                       00590000
*                                                                       00591000
         AIF   ('&DSECT' EQ 'YES').L000C                                00592000
IXCYNOTE_TWHYQUIESCED DS 0X Flags to indicate why a connection is      *00593000
                         quiesced                                       00594000
         AGO   .L000D                                                   00595000
.L000C   ANOP                                                           00596000
IXCYNOTE_TWHYQUIESCED DSECT   Flags to indicate why a connection is    *00597000
                         quiesced                                       00598000
.L000D   ANOP                                                           00599000
WQ_BEINGCREATED EQU X'80' ON if the note pad or connection is still in *00600000
                         the midst of being created.                    00601000
WQ_NOTEPADPROCESS EQU X'40' ON if the note pad is engaged in a process *00602000
                         (such as structure rebuild) that would        *00603000
                         elongate normal response times for note       *00604000
                         requests.                                      00605000
WQ_NOTEPADACCESS EQU X'20' ON if the system does not have access to    *00606000
                         the coupling facility structure that contains *00607000
                         the note pad.                                  00608000
WQ_BEINGDELETED EQU X'10' ON if the note pad or connection is in the   *00609000
                         midst of being deleted                         00610000
WQ_CATALOGACCESS EQU X'01' ON if system does not have access to the    *00611000
                         coupling facility structure that XCF uses to  *00612000
                         manage note pads.                              00613000
         ORG   IXCYNOTE_TWHYQUIESCED+1                                  00614000
IXCYNOTE_TWHYQUIESCED_LEN EQU *-IXCYNOTE_TWHYQUIESCED                   00615000
.L000A   ANOP                                                           00616000
         AIF   ('&IXCYNOTE_TWHYIMPAIRED' EQ 'NO').L000E                 00617000
         AIF   ('&DSECT' EQ 'YES').L000F                                00618000
         AIF   ('&IXCYNOTE_TWHYIMPAIRED' NE 'YES').L000E                00619000
IXCYNOTE_TWHYIMPAIRED DS 0X Flags to indicate why a connection is      *00620000
                         impaired                                       00621000
         AGO   .L0010                                                   00622000
.L000F   ANOP                                                           00623000
IXCYNOTE_TWHYIMPAIRED DSECT   Flags to indicate why a connection is    *00624000
                         impaired                                       00625000
.L0010   ANOP                                                           00626000
WI_FORCONSTRAINTS EQU X'80' ON if the connection is impaired because   *00627000
                         XCF cannot currently provide the number of    *00628000
                         notes requested by the creator of the note    *00629000
                         pad.                                           00630000
*                                                                       00631000
*   Possible values for aa_DetailsFormat                                00632000
*                                                                       00633000
*                                                                       00634000
IXCYNOTE_KDETAILSNONE EQU 0 none provided                               00635000
IXCYNOTE_KDETAILSRESUMED EQU 1                                          00636000
IXCYNOTE_KDETAILSQUIESCED EQU 2                                         00637000
IXCYNOTE_KDETAILSCONSTRAINED EQU 3                                      00638000
IXCYNOTE_KDETAILSNOSAFAUTH EQU 4                                        00639000
IXCYNOTE_KDETAILSNORESOURCES EQU 5                                      00640000
IXCYNOTE_KDETAILSNOSTRUCTURES EQU 6                                     00641000
IXCYNOTE_KDETAILSCRITERIA EQU 7                                         00642000
IXCYNOTE_KDETAILSDELETENP EQU 8                                         00643000
IXCYNOTE_KDETAILSACCESS EQU 9                                           00644000
IXCYNOTE_KDETAILSNOTE EQU 10                                            00645000
IXCYNOTE_KDETAILSNOTES EQU 11                                           00646000
IXCYNOTE_KDETAILSBUFLEN EQU 12                                          00647000
IXCYNOTE_KDETAILSMODIFY#NOTES EQU 13                                    00648000
         ORG   IXCYNOTE_TWHYIMPAIRED+1                                  00649000
IXCYNOTE_TWHYIMPAIRED_LEN EQU *-IXCYNOTE_TWHYIMPAIRED                   00650000
.L000E   ANOP                                                           00651000
         AIF   ('&IXCYNOTE_TDETAILSRESUMED' EQ 'NO').L0011              00652000
         AIF   ('&DSECT' EQ 'YES').L0012                                00653000
         AIF   ('&IXCYNOTE_TDETAILSRESUMED' NE 'YES').L0011             00654000
.L0012   ANOP                                                           00655000
*                                                                       00656000
*   Maps aa_details REQUEST=CONNECTION REQTYPE=PAUSE RC=0               00657000
*   Maps aa_details for RC=4 RSN=ixcnoteRsnResumed                      00658000
*        aa_DetailsFormat = ixcynote_kDetailsResumed                    00659000
*                                                                       00660000
*                                                                       00661000
         AIF   ('&DSECT' EQ 'YES').L0013                                00662000
IXCYNOTE_TDETAILSRESUMED DS 0F                                          00663000
         AGO   .L0014                                                   00664000
.L0013   ANOP                                                           00665000
IXCYNOTE_TDETAILSRESUMED DSECT                                          00666000
.L0014   ANOP                                                           00667000
DR_RESUMECODE DS X       Code indicating the event that triggered the  *00668000
                         resume.                                        00669000
DR_QUIESCED DS CL1       flags to explain why connection is quiesced   *00670000
                         (1 byte)                                       00671000
DR_IMPAIRED DS CL1       flags to explain why the connection is        *00672000
                         impaired (1 byte)                              00673000
         DS    CL1       reserved                                       00674000
DR_TIMEOUTVALUE DS H     TIMEOUT value specified for the IXCNOTE       *00675000
                         REQUEST=CONNECTION, REQTYPE=PAUSE request.    *00676000
                         Zero if TIMEOUT=XCF was specified or          *00677000
                         defaulted to.                                  00678000
         DS    CL14      reserved                                       00679000
*                                                                       00680000
*   Possible values for dr_ResumeCode                                   00681000
*                                                                       00682000
*                                                                       00683000
IXCYNOTE_KRESUMENONE EQU 0                                              00684000
IXCYNOTE_KRESUMEREQUEST EQU 1 IXCNOTE RESUME                            00685000
IXCYNOTE_KRESUMENOTEPADFAILED EQU 2                                     00686000
IXCYNOTE_KRESUMEUNQUIESCED EQU 3                                        00687000
IXCYNOTE_KRESUMECONNECTORFAILED EQU 4                                   00688000
IXCYNOTE_KRESUMENOTEPADDELETED EQU 5                                    00689000
IXCYNOTE_KRESUMECONNECTORDELETED EQU 6                                  00690000
IXCYNOTE_KRESUMETIMEOUT EQU 8                                           00691000
IXCYNOTE_KRESUMESTRAVAIL EQU 9                                          00692000
IXCYNOTE_KRESUMENPAVAIL EQU 10                                          00693000
IXCYNOTE_KRESUMEBEINGDELETED EQU 11                                     00694000
IXCYNOTE_KRESUMEXCFERROR EQU 12                                         00695000
IXCYNOTE_TDETAILSRESUMED_LEN EQU *-IXCYNOTE_TDETAILSRESUMED             00696000
.L0011   ANOP                                                           00697000
         AIF   ('&IXCYNOTE_TDETAILSQUIESCED' EQ 'NO').L0015             00698000
         AIF   ('&DSECT' EQ 'YES').L0016                                00699000
         AIF   ('&IXCYNOTE_TDETAILSQUIESCED' NE 'YES').L0015            00700000
.L0016   ANOP                                                           00701000
*                                                                       00702000
*   Maps aa_details for RC=C RSN=ixcnoteRsnQuiesced                     00703000
*   Maps aa_details for REQUEST=CONNECTION REQTYPE=CREATE               00704000
*        for RC=4 RSN=ixcnoteRsnPending                                 00705000
*   Maps aa_details for REQUEST=CONNECTION REQTYPE=DELETE for some      00706000
*        rejects due to RC=4 RSN=ixcnoteRsnPending                      00707000
*                                                                       00708000
*        aa_DetailsFormat = ixcynote_kDetailsQuiesced                   00709000
*                                                                       00710000
*                                                                       00711000
         AIF   ('&DSECT' EQ 'YES').L0017                                00712000
IXCYNOTE_TDETAILSQUIESCED DS 0F                                         00713000
         AGO   .L0018                                                   00714000
.L0017   ANOP                                                           00715000
IXCYNOTE_TDETAILSQUIESCED DSECT                                         00716000
.L0018   ANOP                                                           00717000
DQ_QUIESCED DS CL1       Flags to indicate why connection is quiesced   00718000
         DS    CL31      reserved                                       00719000
IXCYNOTE_TDETAILSQUIESCED_LEN EQU *-IXCYNOTE_TDETAILSQUIESCED           00720000
.L0015   ANOP                                                           00721000
         AIF   ('&IXCYNOTE_TDETAILSCONSTRAINED' EQ 'NO').L0019          00722000
         AIF   ('&DSECT' EQ 'YES').L001A                                00723000
         AIF   ('&IXCYNOTE_TDETAILSCONSTRAINED' NE 'YES').L0019         00724000
.L001A   ANOP                                                           00725000
*                                                                       00726000
*   Maps aa_details for RC=8 RSN=ixcnoteRsn#NotesExceeded               00727000
*   Maps aa_details for RC=C RSN=ixcnoteRsnConstrained                  00728000
*                                                                       00729000
*        aa_DetailsFormat = ixcynote_kDetailsConstrained                00730000
*                                                                       00731000
*     Note that the data returned in the details does not provide an    00732000
*     atomic view of the note pad or the containing CF structure.       00733000
*     Thus the counts of notes and the counts of list entries will      00734000
*     not necessarily be self consistent.  Furthermore, the data is     00735000
*     obtained asynchronously to the operation that encountered the     00736000
*     limit on the number of notes or the constraint condition.         00737000
*                                                                       00738000
*                                                                       00739000
*                                                                       00740000
         AIF   ('&DSECT' EQ 'YES').L001B                                00741000
IXCYNOTE_TDETAILSCONSTRAINED DS 0F                                      00742000
         AGO   .L001C                                                   00743000
.L001B   ANOP                                                           00744000
IXCYNOTE_TDETAILSCONSTRAINED DSECT                                      00745000
.L001C   ANOP                                                           00746000
DC_#NOTESINUSE DS F      Number of notes that currently exist in the   *00747000
                         note pad. May include notes that are pending  *00748000
                         deletion.                                      00749000
DC_#NOTESALLOWED DS F    Maximum number of notes that the note pad is  *00750000
                         currently allowed to hold. This value will    *00751000
                         normally equal the number of notes requested  *00752000
                         by the creator of the note pad. This value    *00753000
                         may change during the life of the note pad.    00754000
DC_#ENTRIESINUSE DS F    Number of list entries in use in the list     *00755000
                         structure that contains the note pad. Zero if *00756000
                         data not provided. Some of the entries in use *00757000
                         could be used by XCF for things other than    *00758000
                         notes.                                         00759000
DC_#ENTRIESALLOWED DS F  Number of list entries that the structure can *00760000
                         hold. This value may change during the life   *00761000
                         of the structure. Zero if data not provided.  *00762000
                         Not all of the entries allowed are            *00763000
                         necessarily available for notes.               00764000
DC_#ELEMENTSINUSE DS F   Number of data elements in use in the list    *00765000
                         structure that contains the note pad. Zero if *00766000
                         data not provided. Some of the elements in    *00767000
                         use could be used by XCF for things other     *00768000
                         than notes.                                    00769000
DC_#ELEMENTSALLOWED DS F Number of data elements that the structure    *00770000
                         can hold. This value may change during the    *00771000
                         life of the structure. Zero if data not       *00772000
                         provided. Not all of the elements allowed are *00773000
                         necessarily available for notes.               00774000
IXCYNOTE_TDETAILSCONSTRAINED_LEN EQU *-IXCYNOTE_TDETAILSCONSTRAINED     00775000
.L0019   ANOP                                                           00776000
         AIF   ('&IXCYNOTE_TDETAILSNOSAFAUTH' EQ 'NO').L001D            00777000
         AIF   ('&DSECT' EQ 'YES').L001E                                00778000
         AIF   ('&IXCYNOTE_TDETAILSNOSAFAUTH' NE 'YES').L001D           00779000
.L001E   ANOP                                                           00780000
*                                                                       00781000
*   Maps aa_details for RC=8 RSN=ixcnoteRsnNoSafAuth                    00782000
*        aa_DetailsFormat = ixcynote_kDetailsNoSafAuth                  00783000
*                                                                       00784000
*                                                                       00785000
         AIF   ('&DSECT' EQ 'YES').L001F                                00786000
IXCYNOTE_TDETAILSNOSAFAUTH DS 0F                                        00787000
         AGO   .L0020                                                   00788000
.L001F   ANOP                                                           00789000
IXCYNOTE_TDETAILSNOSAFAUTH DSECT                                        00790000
.L0020   ANOP                                                           00791000
DNSA_RCSAF DS  F         Return code from SAF                           00792000
DNSA_RCRACF DS F         Return code from RACF (or equivalent security *00793000
                         product)                                       00794000
DNSA_RSRACF DS F         Reason code from RACF (or equivalent security *00795000
                         product)                                       00796000
         DS    CL8       reserved                                       00797000
IXCYNOTE_TDETAILSNOSAFAUTH_LEN EQU *-IXCYNOTE_TDETAILSNOSAFAUTH         00798000
.L001D   ANOP                                                           00799000
         AIF   ('&IXCYNOTE_TDETAILSNORESOURCES' EQ 'NO').L0021          00800000
         AIF   ('&DSECT' EQ 'YES').L0022                                00801000
         AIF   ('&IXCYNOTE_TDETAILSNORESOURCES' NE 'YES').L0021         00802000
.L0022   ANOP                                                           00803000
*                                                                       00804000
*   Maps aa_details for REQUEST=CONNECTION REQTYPE=DELETE for some      00805000
*        rejects due to RC=4 RSN=ixcnoteRsnPending                      00806000
*   Maps aa_details for REQUEST=NOTEPAD REQTYPE=MODIFY for              00807000
*        rejects due to RC=4 RSN=ixcnoteRsnPending                      00808000
*   Maps aa_details for RC=C RSN=ixcnoteRsnNoSysResources               00809000
*   Maps aa_details for RC=C RSN=ixcnoteRsnNotConfigured                00810000
*   Maps aa_details for RC=10x (in some cases)                          00811000
*                                                                       00812000
*        aa_DetailsFormat = ixcynote_kDetailsNoResources                00813000
*                                                                       00814000
*                                                                       00815000
         AIF   ('&DSECT' EQ 'YES').L0023                                00816000
IXCYNOTE_TDETAILSNORESOURCES DS 0F                                      00817000
         AGO   .L0024                                                   00818000
.L0023   ANOP                                                           00819000
IXCYNOTE_TDETAILSNORESOURCES DSECT                                      00820000
.L0024   ANOP                                                           00821000
DNR_DIAGNOSTICID DS F    Standard internal XCF diagnostic ID of        *00822000
                         provider of this data (meaningful to IBM      *00823000
                         service personnel).                            00824000
DNR_RESOURCEID DS F      Code to identify the particular resource that *00825000
                         could not be obtained.                         00826000
DNR_SERVICEID DS F       Code to identify the service routine that     *00827000
                         provided the return and reason code below.    *00828000
                         The constants whose names begin with          *00829000
                         ixcynote_kServiceID identify the service that *00830000
                         failed.                                        00831000
DNR_RETCODE DS F         Return code from service that was called to   *00832000
                         get resource                                   00833000
DNR_RSNCODE DS F         Reason code from service that was called to   *00834000
                         get resource                                   00835000
DNR_DIAGNOSTICS DS CL12  Additional diagnostic data for IBM service    *00836000
                         personnel.                                     00837000
*                                                                       00838000
*   Possible values for dnr_ServiceID.  These codes identify the        00839000
*   particular service that failed.                                     00840000
*                                                                       00841000
*                                                                       00842000
IXCYNOTE_KSERVICEID_STORAGE EQU 1 STORAGE macro                         00843000
IXCYNOTE_KSERVICEID_IEAVAPE EQU 2 IEAVAPE macro                         00844000
IXCYNOTE_KSERVICEID_IXLLSTE EQU 3 IXLLSTE macro                         00845000
IXCYNOTE_KSERVICEID_IXLLSTM EQU 4 IXLLSTM macro                         00846000
IXCYNOTE_KSERVICEID_CFRM EQU 5 CFRM policy                              00847000
IXCYNOTE_KSERVICEID_IXLFCOMP EQU 6 IXLFCOMP macro                       00848000
IXCYNOTE_KSERVICEID_IXLCONN EQU 7 IXLCONN macro                         00849000
IXCYNOTE_KSERVICEID_IXCSEND EQU 8 IXCSEND macro                         00850000
IXCYNOTE_KSERVICEID_IXCRECV EQU 9 IXCRECV macro                         00851000
IXCYNOTE_KSERVICEID_IARV64 EQU 10 IARV64 macro                          00852000
IXCYNOTE_KSERVICEID_ALESERV EQU 11 ALESERV macro                        00853000
IXCYNOTE_KSERVICEID_IXLLSTC EQU 12 IXLLSTC macro                        00854000
IXCYNOTE_KSERVICEID_IXLUSYNC EQU 13 IXLUSYNC macro                      00855000
IXCYNOTE_KSERVICEID_IXCNOTE EQU 14 IXCNOTE macro                        00856000
IXCYNOTE_KSERVICEID_NOREPLY EQU 15 XCF Note Pad server was unable to   *00857000
                         provide a reply                                00858000
IXCYNOTE_TDETAILSNORESOURCES_LEN EQU *-IXCYNOTE_TDETAILSNORESOURCES     00859000
.L0021   ANOP                                                           00860000
         AIF   ('&IXCYNOTE_TDETAILSNOSTRUCTURES' EQ 'NO').L0025         00861000
         AIF   ('&DSECT' EQ 'YES').L0026                                00862000
         AIF   ('&IXCYNOTE_TDETAILSNOSTRUCTURES' NE 'YES').L0025        00863000
.L0026   ANOP                                                           00864000
*                                                                       00865000
*   Maps aa_details for RC=C RSN=ixcnoteRsnNoStrResources               00866000
*        aa_DetailsFormat = ixcynote_kDetailsNoStructures               00867000
*                                                                       00868000
*                                                                       00869000
         AIF   ('&DSECT' EQ 'YES').L0027                                00870000
IXCYNOTE_TDETAILSNOSTRUCTURES DS 0F                                     00871000
         AGO   .L0028                                                   00872000
.L0027   ANOP                                                           00873000
IXCYNOTE_TDETAILSNOSTRUCTURES DSECT                                     00874000
.L0028   ANOP                                                           00875000
DNS_FLAGS DS   CL4                                                      00876000
         ORG   DNS_FLAGS                                                00877000
DNS_FLAGS1 DS  CL1                                                      00878000
*  Bit definitions:                                                     00879000
DNS_SYSXCFXXDEFINED EQU X'80' ON if note pad structure names of the    *00880000
                         form IXCNP_SYSXCFxx are defined in the CFRM   *00881000
                         policy.                                        00882000
DNS_OWNERXXDEFINED EQU X'40' ON if note pad structure names of the     *00883000
                         form IXCNP_ownerxx are defined in the CFRM    *00884000
                         policy, where "owner" is extracted from the   *00885000
                         first section of the note pad name.            00886000
DNS_STRNOTCONNECTED EQU X'20' ON if one or more of the candidate       *00887000
                         structures was unusable because the local     *00888000
                         system did not have connectivity to the       *00889000
                         coupling facility that contains it.            00890000
DNS_STRNOTALLOCATED EQU X'10' ON if one or more of the candidate       *00891000
                         structures was unusable because it could not  *00892000
                         be allocated by XES.                           00893000
DNS_STRMORENOTES EQU X'08' ON if one or more of the candidate          *00894000
                         structures was unusable because it did not    *00895000
                         have sufficient note space                     00896000
DNS_STRMORELISTS EQU X'04' ON if one or more of the candidate          *00897000
                         structures was unusable because it did not    *00898000
                         have sufficient lists for another note pad     00899000
DNS_STRQUIESCED EQU X'02' ON if one or more of the candidate           *00900000
                         structures was unusable because it was        *00901000
                         quiesced.                                      00902000
         ORG   DNS_FLAGS1+1                                             00903000
         DS    CL3       reserved                                       00904000
DNS_#STRUCTURES DS F     count of the number of structures considered.  00905000
IXCYNOTE_TDETAILSNOSTRUCTURES_LEN EQU *-IXCYNOTE_TDETAILSNOSTRUCTURES   00906000
.L0025   ANOP                                                           00907000
         AIF   ('&IXCYNOTE_TDETAILSCRITERIA' EQ 'NO').L0029             00908000
         AIF   ('&DSECT' EQ 'YES').L002A                                00909000
         AIF   ('&IXCYNOTE_TDETAILSCRITERIA' NE 'YES').L0029            00910000
.L002A   ANOP                                                           00911000
*                                                                       00912000
*   Maps aa_details for RC=8 RSN=ixcnoteRsnCriteriaBadVal               00913000
*        aa_DetailsFormat = ixcynote_kDetailsCriteria                   00914000
*                                                                       00915000
*                                                                       00916000
         AIF   ('&DSECT' EQ 'YES').L002B                                00917000
IXCYNOTE_TDETAILSCRITERIA DS 0F                                         00918000
         AGO   .L002C                                                   00919000
.L002B   ANOP                                                           00920000
IXCYNOTE_TDETAILSCRITERIA DSECT                                         00921000
.L002C   ANOP                                                           00922000
DC_CRITERIA# DS F        Index of the entry in the criteria array that *00923000
                         did not have valid content. Zero implies the  *00924000
                         content of ixcynote_tSelectionCriteria is not *00925000
                         valid. Indices greater than zero identify the *00926000
                         index of the criteria record that had the     *00927000
                         problem.                                       00928000
DC_CRITERIAPROBLEM DS F  Code to indicate what was wrong with the      *00929000
                         indicated entry. See constants with names     *00930000
                         beginning with ixcynote_kDCCP                  00931000
DC_ATTEMPTED# DS F       Index of the last entry in the criteria array *00932000
                         for which an attempt was made to perform the  *00933000
                         requested processing. Zero implies no notes   *00934000
                         were processed. Indices greater than zero     *00935000
                         identify the index of the criteria record     *00936000
                         that may have been processed.                  00937000
IXCYNOTE_KDCCP_BADTYPE EQU 1 sc_type invalid                            00938000
IXCYNOTE_KDCCP_BADRSVD EQU 2 reserved not zero                          00939000
IXCYNOTE_KDCCP_BAD#RECORDS EQU 3 sc_#records is 0 or exceeds maximum   *00940000
                         allowed for the specified sc_type              00941000
IXCYNOTE_KDCCP_BADTAGRANGE EQU 4 mintag > maxtag                        00942000
IXCYNOTE_KDCCP_BADCONNECTIONID EQU 5 invalid format                     00943000
IXCYNOTE_KDCCP_BADSTG EQU 6 inaccessible                                00944000
IXCYNOTE_KDCCP_BADFILTERS EQU 7 sbcid_Filters excluded all possible    *00945000
                         notes                                          00946000
IXCYNOTE_TDETAILSCRITERIA_LEN EQU *-IXCYNOTE_TDETAILSCRITERIA           00947000
.L0029   ANOP                                                           00948000
         AIF   ('&IXCYNOTE_TDETAILSDELETENP' EQ 'NO').L002D             00949000
         AIF   ('&DSECT' EQ 'YES').L002E                                00950000
         AIF   ('&IXCYNOTE_TDETAILSDELETENP' NE 'YES').L002D            00951000
.L002E   ANOP                                                           00952000
*                                                                       00953000
*   Maps aa_details for RC=8 RSN=ixcnoteRsnNotepadInUse                 00954000
*        aa_DetailsFormat = ixcynote_kDetailsDeleteNP                   00955000
*                                                                       00956000
*                                                                       00957000
         AIF   ('&DSECT' EQ 'YES').L002F                                00958000
IXCYNOTE_TDETAILSDELETENP DS 0F                                         00959000
         AGO   .L0030                                                   00960000
.L002F   ANOP                                                           00961000
IXCYNOTE_TDETAILSDELETENP DSECT                                         00962000
.L0030   ANOP                                                           00963000
DDNP_ATTRIBUTES DS CL4                                                  00964000
*  Bit definitions:                                                     00965000
DDNP_HASCONNECTIONS EQU X'80' ON if the note pad has connections        00966000
DDNP_HASNOTES EQU X'40'  ON if the note pad has notes                   00967000
         ORG   DDNP_ATTRIBUTES+4                                        00968000
IXCYNOTE_TDETAILSDELETENP_LEN EQU *-IXCYNOTE_TDETAILSDELETENP           00969000
.L002D   ANOP                                                           00970000
         AIF   ('&IXCYNOTE_TDETAILSACCESS' EQ 'NO').L0031               00971000
         AIF   ('&DSECT' EQ 'YES').L0032                                00972000
         AIF   ('&IXCYNOTE_TDETAILSACCESS' NE 'YES').L0031              00973000
.L0032   ANOP                                                           00974000
*                                                                       00975000
*   Maps aa_details for RC=8 RSN=ixcnoteRsnConnectionBadAccess          00976000
*        aa_DetailsFormat = ixcynote_kDetailsAccess                     00977000
*                                                                       00978000
*                                                                       00979000
         AIF   ('&DSECT' EQ 'YES').L0033                                00980000
IXCYNOTE_TDETAILSACCESS DS 0F                                           00981000
         AGO   .L0034                                                   00982000
.L0033   ANOP                                                           00983000
IXCYNOTE_TDETAILSACCESS DSECT                                           00984000
.L0034   ANOP                                                           00985000
DA_ATTRIBUTES DS CL4                                                    00986000
*  Bit definitions:                                                     00987000
DA_CANREAD EQU X'80'     ON if the connection has read access to the   *00988000
                         note pad. The connection can read notes.       00989000
DA_CANWRITE EQU X'40'    ON if the connection has write access to the  *00990000
                         note pad. The connection can create, write,   *00991000
                         replace, and delete notes.                     00992000
DA_MUSTBEAUTHORIZED EQU X'20' ON if the program using the connection   *00993000
                         must be running in supervisor state or with a *00994000
                         PKM allowing key 0..7. OFF implies the        *00995000
                         connection can be used by any program running *00996000
                         in the address space associated with the      *00997000
                         connection.                                    00998000
IXCYNOTE_TDETAILSACCESS_LEN EQU *-IXCYNOTE_TDETAILSACCESS               00999000
.L0031   ANOP                                                           01000000
         AIF   ('&IXCYNOTE_TDETAILSNOTE' EQ 'NO').L0035                 01001000
         AIF   ('&DSECT' EQ 'YES').L0036                                01002000
         AIF   ('&IXCYNOTE_TDETAILSNOTE' NE 'YES').L0035                01003000
.L0036   ANOP                                                           01004000
*                                                                       01005000
*   Maps aa_details for REQUEST=NOTE RC=0.                              01006000
*        aa_DetailsFormat = ixcynote_kDetailsNote                       01007000
*                                                                       01008000
*                                                                       01009000
         AIF   ('&DSECT' EQ 'YES').L0037                                01010000
IXCYNOTE_TDETAILSNOTE DS 0F                                             01011000
         AGO   .L0038                                                   01012000
.L0037   ANOP                                                           01013000
IXCYNOTE_TDETAILSNOTE DSECT                                             01014000
.L0038   ANOP                                                           01015000
DN_ATTRIBUTES DS CL4                                                    01016000
*  Bit definitions:                                                     01017000
DN_DEFERRED EQU X'80'    ON if the request was deferred. For example,  *01018000
                         a request to delete a note might be deferred  *01019000
                         in order to ensure that XCF can properly      *01020000
                         track the maximium note tag value.             01021000
DN_#NOTESINUSE DS F      This field is set for RC=0. Number of notes   *01022000
                         that currently exist in the note pad. May     *01023000
                         include notes that are pending deletion.       01024000
DN_#NOTESALLOWED DS F    This field is set for RC=0. Maximum number of *01025000
                         notes that the note pad is currently allowed  *01026000
                         to hold. This value will normally equal the   *01027000
                         number of notes requested by the creator of   *01028000
                         the note pad. This value may change during    *01029000
                         the life of the note pad.                      01030000
IXCYNOTE_TDETAILSNOTE_LEN EQU *-IXCYNOTE_TDETAILSNOTE                   01031000
.L0035   ANOP                                                           01032000
         AIF   ('&IXCYNOTE_TDETAILSNOTES' EQ 'NO').L0039                01033000
         AIF   ('&DSECT' EQ 'YES').L003A                                01034000
         AIF   ('&IXCYNOTE_TDETAILSNOTES' NE 'YES').L0039               01035000
.L003A   ANOP                                                           01036000
*                                                                       01037000
*   Maps aa_details for REQUEST=NOTES RC=0                              01038000
*   Maps aa_details for REQUEST=NOTES RC=4 RSN=ixcnoteRsnMoreNotes      01039000
*        aa_DetailsFormat = ixcynote_kDetailsNotes                      01040000
*                                                                       01041000
*                                                                       01042000
         AIF   ('&DSECT' EQ 'YES').L003B                                01043000
IXCYNOTE_TDETAILSNOTES DS 0F                                            01044000
         AGO   .L003C                                                   01045000
.L003B   ANOP                                                           01046000
IXCYNOTE_TDETAILSNOTES DSECT                                            01047000
.L003C   ANOP                                                           01048000
DNOTES_#PROCESSED DS F   The number of notes that were processed. For  *01049000
                         REQTYPE=READ, the number of note data records *01050000
                         stored in the answer area. For                *01051000
                         REQTYPE=DELETE, the number of notes known to  *01052000
                         have been deleted by the request (if the      *01053000
                         request does not run to completion, this      *01054000
                         count could be low).                           01055000
DNOTES_MAX#NOTESANSAREA DS F The maximum number of notes that can be   *01056000
                         stored in the specified ANSAREA.               01057000
DNOTES_MAX#NOTESBUFFER DS F The maximum number of notes that can be    *01058000
                         stored in the specified BUFFER, assuming each *01059000
                         note is the maximum size supported by the     *01060000
                         note pad.                                      01061000
DNOTES_NOTEANSLEN DS H   The number of bytes needed in the answer area *01062000
                         for each note (data record size).              01063000
DNOTES_NOTEBUFLEN DS H   The number of bytes needed in the BUFFER area *01064000
                         for each note (equals maximum note size       *01065000
                         supported by the note pad).                    01066000
IXCYNOTE_TDETAILSNOTES_LEN EQU *-IXCYNOTE_TDETAILSNOTES                 01067000
.L0039   ANOP                                                           01068000
         AIF   ('&IXCYNOTE_TDETAILSBUFLEN' EQ 'NO').L003D               01069000
         AIF   ('&DSECT' EQ 'YES').L003E                                01070000
         AIF   ('&IXCYNOTE_TDETAILSBUFLEN' NE 'YES').L003D              01071000
.L003E   ANOP                                                           01072000
*                                                                       01073000
*   Maps aa_details for RC=8 RSN=ixcnoteRsnBufLenBadVal                 01074000
*        aa_DetailsFormat = ixcynote_kDetailsBufLen                     01075000
*                                                                       01076000
*                                                                       01077000
*     If the request is rejected because the input BUFLEN was too       01078000
*     small to hold the note content, dn_NoteBufLen will indicate       01079000
*     the current size of the note.  Retrying the request with a        01080000
*     buffer whose BUFLEN is at least as large as the size indicated    01081000
*     by dbl_NoteBufLen will allow the request to proceed.  However,    01082000
*     the retry could fail yet again with an invalid BUFLEN value if    01083000
*     the size of the note increases before the retry request can be    01084000
*     processed.                                                        01085000
*                                                                       01086000
*                                                                       01087000
*                                                                       01088000
         AIF   ('&DSECT' EQ 'YES').L003F                                01089000
IXCYNOTE_TDETAILSBUFLEN DS 0F                                           01090000
         AGO   .L0040                                                   01091000
.L003F   ANOP                                                           01092000
IXCYNOTE_TDETAILSBUFLEN DSECT                                           01093000
.L0040   ANOP                                                           01094000
DBL_NOTEBUFLEN DS F      Content varies according to the problem       *01095000
                         detected and the type of request: If the      *01096000
                         input BUFLEN value was NOT a multiple of      *01097000
                         1024, equals the number of bytes of storage   *01098000
                         required to hold the content of the largest   *01099000
                         note supported by the note pad (the maximum   *01100000
                         note size). Otherwise: For REQUEST=NOTE with  *01101000
                         a REQTYPE of READ or DELETE, the number of    *01102000
                         bytes needed in the BUFFER area to obtain the *01103000
                         content of the designated note. For REQTYPE    01104000
*                        of CREATE, WRITE, or REPLACE, equals the      *01105000
                         maximum note size. For REQUEST=NOTES with     *01106000
                         REQTYPE=READ, the minimum number of bytes     *01107000
                         needed in the buffer to read the next note.    01108000
IXCYNOTE_TDETAILSBUFLEN_LEN EQU *-IXCYNOTE_TDETAILSBUFLEN               01109000
.L003D   ANOP                                                           01110000
         AIF   ('&IXCYNOTE_TDETAILSMODIFY#NOTES' EQ 'NO').L0041         01111000
         AIF   ('&DSECT' EQ 'YES').L0042                                01112000
         AIF   ('&IXCYNOTE_TDETAILSMODIFY#NOTES' NE 'YES').L0041        01113000
.L0042   ANOP                                                           01114000
*                                                                       01115000
*   Maps aa_details for REQUEST=NOTEPAD REQTYPE=MODIFY RC=0             01116000
*   Maps aa_details for RC=C RSN=ixcnoteRsnNo#NotesStrResources         01117000
*   Maps aa_details for RC=C RSN=ixcnoteRsn#NotesDecreaseNotValid       01118000
*        aa_DetailsFormat = ixcynote_kDetailsModify#Notes               01119000
*                                                                       01120000
*     Note that the data returned in the details does not provide an    01121000
*     atomic view of the note pad or the containing CF structure.       01122000
*     Thus the counts of notes and the counts of list entries will      01123000
*     not necessarily be self consistent.  Furthermore, the data is     01124000
*     obtained asynchronously to the operation that encountered the     01125000
*     limit on the number of notes or the constraint condition.         01126000
*                                                                       01127000
*     If the request is rejected with an IXCNOTE reason code of         01128000
*     ixcnoteRsnNo#NotesStrResources, the difference between            01129000
*     dm#n_#EntriesAllowed and dm#n_#EntriesReserved can be used to     01130000
*     approximate how many additional notes a note pad may be           01131000
*     allowed to reserve for use. Note that the returned values         01132000
*     in aa_details are based on counts obtained at the time the        01133000
*     request failed and may have changed based on subsequent           01134000
*     structure and note pad activity.                                  01135000
*                                                                       01136000
*                                                                       01137000
*                                                                       01138000
         AIF   ('&DSECT' EQ 'YES').L0043                                01139000
IXCYNOTE_TDETAILSMODIFY#NOTES DS 0F                                     01140000
         AGO   .L0044                                                   01141000
.L0043   ANOP                                                           01142000
IXCYNOTE_TDETAILSMODIFY#NOTES DSECT                                     01143000
.L0044   ANOP                                                           01144000
DM#N_#NOTESINUSE DS F    Number of notes that currently exist in the   *01145000
                         note pad. Zero if data not provided. May      *01146000
                         include notes that are pending deletion.       01147000
DM#N_#NOTESALLOWED DS F  Maximum number of notes that the note pad is  *01148000
                         currently allowed to hold as a result of the  *01149000
                         MODIFY request.                                01150000
DM#N_#ENTRIESINUSE DS F  Number of list entries in use in the list     *01151000
                         structure that contains the note pad. Zero if *01152000
                         data not provided. Some of the entries in use *01153000
                         could be used by XCF for things other than    *01154000
                         notes.                                         01155000
DM#N_#ENTRIESALLOWED DS F Number of list entries that the structure    *01156000
                         can hold. This value may change during the    *01157000
                         life of the structure. Zero if data not       *01158000
                         provided. Not all of the entries are          *01159000
                         necessarily available for notes.               01160000
DM#N_#ELEMENTSINUSE DS F Number of data elements in use in the list    *01161000
                         structure that contains the note pad. Zero if *01162000
                         data not provided. Some of the elements in    *01163000
                         use could be used by XCF for things other     *01164000
                         than notes.                                    01165000
DM#N_#ELEMENTSALLOWED DS F Number of data elements that the structure  *01166000
                         can hold. This value may change during the    *01167000
                         life of the structure. Zero if data not       *01168000
                         provided. Not all of the elements allowed are *01169000
                         necessarily available for notes.               01170000
DM#N_#NOTESREQUESTED DS F This field is set for RC=C. This is the      *01171000
                         number of notes requested by the IXCNOTE      *01172000
                         REQTYPE=MODIFY request that did not complete  *01173000
                         successfully due to an environment error      *01174000
                         identified by the returned reason code.        01175000
DM#N_#ENTRIESRESERVED DS F This field is set for RC=C. Number of data  *01176000
                         entries reserved for XCF and for note pads in *01177000
                         the list structure that contains the note pad  01178000
IXCYNOTE_TDETAILSMODIFY#NOTES_LEN EQU *-IXCYNOTE_TDETAILSMODIFY#NOTES   01179000
.L0041   ANOP                                                           01180000
         AIF   ('&IXCYNOTE_TDATALOCATOR' EQ 'NO').L0045                 01181000
         AIF   ('&DSECT' EQ 'YES').L0046                                01182000
         AIF   ('&IXCYNOTE_TDATALOCATOR' NE 'YES').L0045                01183000
IXCYNOTE_TDATALOCATOR DS 0D                                             01184000
         AGO   .L0047                                                   01185000
.L0046   ANOP                                                           01186000
IXCYNOTE_TDATALOCATOR DSECT                                             01187000
.L0047   ANOP                                                           01188000
DL_TYPE  DS    X         Code to indicate how to map the data records  *01189000
                         that can be located via this locator. See     *01190000
                         constants whose names begin with              *01191000
                         ixcynote_kData.                                01192000
DL_LEVEL DS    X         Level of data provided in the data records.   *01193000
                         Initially zero. May be nonzero in the future  *01194000
                         to indicate presence of new or changed        *01195000
                         information in the data records. Different    *01196000
                         types of data records could have different    *01197000
                         levels.                                        01198000
DL_SIZE  DS    H         Length in bytes of one data record. If more   *01199000
                         than one data record is returned, use this    *01200000
                         size to advance to the next data record.       01201000
DL_#RECORDS DS F         Number of data records available at the       *01202000
                         indicated location.                            01203000
         DS    CL4       Reserved.                                      01204000
DL_OFFSET DS   F         Relative to the start of the AnsArea          *01205000
                         (ixcynote_tAnsArea), the offset at which the  *01206000
                         first data record of this type resides.        01207000
IXCYNOTE_TDATALOCATOR_LEN EQU *-IXCYNOTE_TDATALOCATOR                   01208000
.L0045   ANOP                                                           01209000
         AIF   ('&IXCYNOTE_TDATALOCATORS' EQ 'NO').L0048                01210000
         AIF   ('&DSECT' EQ 'YES').L0049                                01211000
         AIF   ('&IXCYNOTE_TDATALOCATORS' NE 'YES').L0048               01212000
IXCYNOTE_TDATALOCATORS DS 0D                                            01213000
         AGO   .L004A                                                   01214000
.L0049   ANOP                                                           01215000
IXCYNOTE_TDATALOCATORS DSECT                                            01216000
.L004A   ANOP                                                           01217000
DLN      DS    CL16      Name by which to refer to the array of data   *01218000
                         locators returned in the answer area. Resides *01219000
                         in the answer area at: address(AnsArea) +     *01220000
                         aa_OffsetDataLocators. Each entry in the      *01221000
                         array identifies the location and type of a   *01222000
                         data record that was returned in the answer   *01223000
                         area.                                          01224000
*                                                                       01225000
*   Possible values for dl_Type (data record types)                     01226000
*                                                                       01227000
*                                                                       01228000
IXCYNOTE_KDATA_NOTEPAD EQU 1                                            01229000
IXCYNOTE_KDATA_CONNECT EQU 2                                            01230000
IXCYNOTE_KDATA_NOTE EQU 3                                               01231000
IXCYNOTE_KDATA_SYSCONN EQU 4                                            01232000
IXCYNOTE_KAA_VERSION0 EQU 0                                             01233000
IXCYNOTE_KDATALOCATORLEN EQU 16                                         01234000
IXCYNOTE_TDATALOCATORS_LEN EQU *-IXCYNOTE_TDATALOCATORS                 01235000
.L0048   ANOP                                                           01236000
         AIF   ('&IXCYNOTE_TNOTEPADDATA' EQ 'NO').L004B                 01237000
         AIF   ('&DSECT' EQ 'YES').L004C                                01238000
         AIF   ('&IXCYNOTE_TNOTEPADDATA' NE 'YES').L004B                01239000
.L004C   ANOP                                                           01240000
*                                                                       01241000
* ********************************************************************  01242000
* *                                                                  *  01243000
* *  Data Record for a note pad                                      *  01244000
* *                                                                  *  01245000
* *    Summary                                                       *  01246000
* *                                                                  *  01247000
* *    Usage                                                         *  01248000
* *                                                                  *  01249000
* *    Explanation                                                   *  01250000
* *                                                                  *  01251000
* *                                                                  *  01252000
* ********************************************************************  01253000
*                                                                       01254000
*                                                                       01255000
         AIF   ('&DSECT' EQ 'YES').L004D                                01256000
IXCYNOTE_TNOTEPADDATA DS 0D note pad data                               01257000
         AGO   .L004E                                                   01258000
.L004D   ANOP                                                           01259000
IXCYNOTE_TNOTEPADDATA DSECT   note pad data                             01260000
.L004E   ANOP                                                           01261000
         DS    CL8       Reserved (type, size, group)                   01262000
NPD_NAME DS    CL32      Name of note pad, mapped by                   *01263000
                         ixcynote_tNotePadName.                         01264000
NPD_DESCRIPTION DS CL32  Description of note pad (from IXCNOTE         *01265000
                         DESCRIPTION).                                  01266000
NPD_INFO DS    CL64      Information about the note pad provided by    *01267000
                         the creator (from IXCNOTE INFO).               01268000
NPD_REQUIRED#NOTES DS F  Number of notes required for the note pad.    *01269000
                         Initially the number of notes requested by    *01270000
                         the creator of the note pad (#NOTES). When    *01271000
                         npd_Modifying#Notes is ON, npd_Required#Notes *01272000
                         will not reflect the results of the MODIFY    *01273000
                         #NOTES request until the modify completes.    *01274000
                         (npd_Modifying#Notes OFF)                      01275000
         DS    CL4       Reserved                                       01276000
NPD_#NOTESINUSE DS F     Number of notes that currently exist in the   *01277000
                         note pad. May include notes that are pending  *01278000
                         deletion. Contains valid data if              *01279000
                         npd_Valid#Notes is ON.                         01280000
         DS    F         Reserved                                       01281000
NPD_FLAGS DS   CL4                                                      01282000
*  Bit definitions:                                                     01283000
NPD_VALID#NOTES EQU X'80' ON if npd_#NotesInUse is valid for use. OFF  *01284000
                         if the data is not available.                  01285000
NPD_VALIDMAXTAG EQU X'40' ON if npd_MaxTag field is valid for use. Off *01286000
                         if the data is not available.                  01287000
NPD_VALIDLOSSCONNDELETE EQU X'20' ON when npd_LossConnDelete is valid   01288000
NPD_ATTRIBUTES DS CL4                                                   01289000
         ORG   NPD_ATTRIBUTES                                           01290000
NPD_ATTRIBUTES1 DS CL1                                                  01291000
*  Bit definitions:                                                     01292000
NPD_MULTIWRITE EQU X'80' ON if the creator of the note pad specified   *01293000
                         MULTIWRITE=YES. OFF if MULTIWRITE=NO was      *01294000
                         specified. ON implies the note pad can be     *01295000
                         used by one or more connectors all of whom    *01296000
                         are allowed to create, write, or replace      *01297000
                         notes in the note pad (ACCESS=UPDATE). OFF    *01298000
                         implies the note pad can have at most one     *01299000
                         connector with udpate access. In either case, *01300000
                         the note pad can have multiple connectors who *01301000
                         are allowed to read notes in the note pad      01302000
*                        (ACCESS=READ).                                 01303000
NPD_TAGGINGUSER EQU X'40' ON if the creator of the note pad specified  *01304000
                         TAGGING=USER, in which case connectors are    *01305000
                         responsible for assigning note tag values.    *01306000
                         OFF if TAGGING=XCF was specified, in which    *01307000
                         case XCF assigns the note tags.                01308000
NPD_TRACKTAGCURRENT EQU X'20' ON if creator of note pad specified      *01309000
                         TRACKTAG=CURRENT.                              01310000
NPD_TRACKTAGLIFETIME EQU X'10' ON if creator of note pad specified     *01311000
                         TRACKTAG=LIFETIME.                             01312000
NPD_LOSSCONNDELETE EQU X'08' ON if creator of note pad specified       *01313000
                         LOSSCONNDELETE=YES. Valid when                *01314000
                         npd_ValidLossConnDelete is ON                  01315000
NPD_INSTCOMPREQUIRED EQU X'04' ON if creator of note pad specified     *01316000
                         INSTCOMP=REQUIRED.                             01317000
NPD_DUPLEXFAVOR EQU X'02' ON if creator of note pad specified          *01318000
                         DUPLEX=FAVOR. OFF if DUPLEX=AVOID applies.     01319000
         DS    CL3       Reserved.                                      01320000
NPD_STATUS DS  CL4                                                      01321000
         ORG   NPD_STATUS                                               01322000
NPD_STATUS_FLAGS1 DS B                                                  01323000
*  Bit definitions:                                                     01324000
NPD_CREATED EQU X'80'    OFF if the note pad is in the midst of being  *01325000
                         created. ON if the note pad was successfully  *01326000
                         created.                                       01327000
NPD_HASCONNECTIONS EQU X'40' ON if the note pad has at least one       *01328000
                         connection.                                    01329000
NPD_QUIESCED EQU X'20'   ON if note pad is currently quiesced. For     *01330000
                         example, the CF structure containing the note *01331000
                         pad is in the midst of rebuild processing.    *01332000
                         While quiesced, no connection will be able to *01333000
                         access the note pad. OFF does not necessarily *01334000
                         imply that any given connection can access    *01335000
                         the note pad as there might be local issues   *01336000
                         (such as a lack of connectivity to the CF     *01337000
                         containing the note pad) that might prevent   *01338000
                         such access.                                   01339000
NPD_CONSTRAINED EQU X'10' ON if note pad is constrained. XCF cannot    *01340000
                         guarantee that the number of notes requested  *01341000
                         by the creator of the note pad will be        *01342000
                         available to the connectors.                   01343000
NPD_MODIFYING#NOTES EQU X'08' ON if the note pad #NOTES is in the      *01344000
                         midst of being modified. OFF if no MODIFY     *01345000
                         request is in progress.                        01346000
NPD_STATUS_FLAGS2 DS B   Reserved.                                      01347000
NPD_STATUS_FLAGS3 DS B   Reserved.                                      01348000
NPD_STATUS_FLAGS4 DS B                                                  01349000
*  Bit definitions:                                                     01350000
NPD_DELETED EQU X'01'    ON if note pad is in the midst of being       *01351000
                         deleted.                                       01352000
         ORG   NPD_STATUS+4                                             01353000
NPD_MAXTAG DS  CL16      Maximum note TAG value for the note pad. If   *01354000
                         npd_TrackTagCurrent=ON, equals the maximum    *01355000
                         tag value assigned to any note that currently *01356000
                         exists in the note pad. If                    *01357000
                         npd_TrackTagLifetime=ON, equals the maximum   *01358000
                         tag value assigned to any note that ever      *01359000
                         existed in the note pad. Contains valid data  *01360000
                         if npd_ValidMaxTag is ON.                      01361000
NPD_ETODWHENCREATED DS CL16 Extended TOD when the note pad was         *01362000
                         created. This ETOD can be used to identify    *01363000
                         the "logical" instance of the note pad which  *01364000
                         persists from the time the note pad is first  *01365000
                         created until it is deleted. It is not        *01366000
                         changed even if XCF allocates a new physical  *01367000
                         instance of the note pad.                      01368000
NPD_ETODWHENALLOCATED DS CL16 Extended TOD when the current physical   *01369000
                         instantiation of the note pad was allocated.  *01370000
                         Equals npd_ETodWhenCreated when the note pad  *01371000
                         is first created. If XCF allocates a new      *01372000
                         physical instance of the logical note pad     *01373000
                         instance, this ETOD is updated to indicate    *01374000
                         that a new physical instance of the logical   *01375000
                         note pad was allocated. Exploiters that       *01376000
                         record the physical location of the note pad  *01377000
                         (structure name and list number) will need to  01378000
*                        update their data when this value changes.     01379000
NPD_STRNAME DS CL16      Name of the coupling facility structure where *01380000
                         the note pad is currently allocated. Contains *01381000
                         EBCDIC blanks if the structure name is not    *01382000
                         available. Note that structure name can       *01383000
                         change over the life of the note pad.          01384000
NPD_LISTNUM DS F         Within the indicated structure, the list      *01385000
                         number of the list being used for the note    *01386000
                         pad. Note that the list number can change     *01387000
                         over the life of the note pad. Zero if the    *01388000
                         data is not available.                         01389000
IXCYNOTE_TNOTEPADDATA_LEN EQU *-IXCYNOTE_TNOTEPADDATA                   01390000
.L004B   ANOP                                                           01391000
         AIF   ('&IXCYNOTE_TCONNECTDATA' EQ 'NO').L004F                 01392000
         AIF   ('&DSECT' EQ 'YES').L0050                                01393000
         AIF   ('&IXCYNOTE_TCONNECTDATA' NE 'YES').L004F                01394000
.L0050   ANOP                                                           01395000
*                                                                       01396000
* ********************************************************************  01397000
* *                                                                  *  01398000
* *  Data Record for a Connection to a note pad                      *  01399000
* *                                                                  *  01400000
* *    Summary                                                       *  01401000
* *                                                                  *  01402000
* *    Usage                                                         *  01403000
* *                                                                  *  01404000
* *    Explanation                                                   *  01405000
* *                                                                  *  01406000
* *                                                                  *  01407000
* ********************************************************************  01408000
*                                                                       01409000
*                                                                       01410000
         AIF   ('&DSECT' EQ 'YES').L0051                                01411000
IXCYNOTE_TCONNECTDATA DS 0D Describes a connection to a note pad        01412000
         AGO   .L0052                                                   01413000
.L0051   ANOP                                                           01414000
IXCYNOTE_TCONNECTDATA DSECT   Describes a connection to a note pad      01415000
.L0052   ANOP                                                           01416000
         DS    CL8       Reserved (type, size, group)                   01417000
CD_DESCRIPTION DS CL32   Description of the connection provided by the *01418000
                         creator of the connection via the IXCNOTE     *01419000
                         keyword DESCRIPTION.                           01420000
CD_INFO  DS    CL64      Information about the connection as provided  *01421000
                         by the creator of the connection via the      *01422000
                         IXCNOTE keyword INFO.                          01423000
CD_SYSNAME DS  CL8       Name of system where connector resides.        01424000
CD_SYSID DS    F         XCF system ID of the system where connector   *01425000
                         resides.                                       01426000
         ORG   CD_SYSID                                                 01427000
CD_SYSNUM DS   X         System slot number                             01428000
         ORG   CD_SYSID+4                                               01429000
CD_ATTRIBUTES DS CL4                                                    01430000
*  Bit definitions:                                                     01431000
CD_CANREAD EQU X'80'     ON if the connection has read access to the   *01432000
                         note pad. The connection can read notes.       01433000
CD_CANWRITE EQU X'40'    ON if the connection has write access to the  *01434000
                         note pad. The connection can create, write,   *01435000
                         replace, and delete notes.                     01436000
CD_MUSTBEAUTHORIZED EQU X'20' ON if the program using the connection   *01437000
                         must be running in supervisor state or with a *01438000
                         PKM allowing key 0..7. OFF implies that the   *01439000
                         program can be running in any state with any  *01440000
                         key.                                           01441000
CD_TASKSCOPE EQU X'10'   ON if the connection has task scope. OFF if   *01442000
                         the connection has address space scope.        01443000
CD_SERVERCONNECTION EQU X'08' ON if USAGE=SERVER was specified when    *01444000
                         connection created.                            01445000
CD_CLIENTCONNECTION EQU X'04' ON if USAGE=SERVER was specified when    *01446000
                         connection created.                            01447000
         DS    BL.026    Unused (zero)                                  01448000
         ORG   CD_ATTRIBUTES+4                                          01449000
CD_STATUS DS   CL4                                                      01450000
         ORG   CD_STATUS                                                01451000
CD_STATUS_FLAGS1 DS B                                                   01452000
*  Bit definitions:                                                     01453000
CD_PAUSED EQU  X'80'     ON if connection is currently paused as the   *01454000
                         result of an IXCNOTE REQUEST=CONNECTION       *01455000
                         REQTYPE=PAUSE request.                         01456000
CD_STATUS_FLAGS2 DS B                                                   01457000
         ORG   CD_STATUS_FLAGS2                                         01458000
         DS    B         reserved                                       01459000
CD_QUIESCED DS CL1       Flags to explain why connection is quiesced.  *01460000
                         Zero if not quiesced (1 byte)                  01461000
CD_IMPAIRED DS CL1       Flags to explain why connection is impaired.  *01462000
                         Non-zero if the connection is impaired (1     *01463000
                         byte)                                          01464000
CD_USERASID DS H         Address space identifier of the address space *01465000
                         that created the connection.                   01466000
CD_TERMASID DS H         Address space identifier of the address space *01467000
                         to which the connection is associated.         01468000
CD_JOBNAME DS  CL8       Name of job that created the connection.       01469000
CD_USERTTOKEN DS CL16    TTOKEN of the work unit that created the      *01470000
                         connection. If created by an SRB, only the    *01471000
                         STOKEN portion of the TTOKEN is valid.         01472000
CD_TERMTTOKEN DS CL16    TTOKEN of the task with which the connection  *01473000
                         is associated (per TERMINATOR specification). *01474000
                         The connection will be deleted if the task    *01475000
                         terminates. Hex zero if not known.             01476000
CD_ETODWHENCREATED DS CL16 Extended TOD when the connection was        *01477000
                         created                                        01478000
CD_CONNECTIONID DS CL12  XCF assigned identifier for the connection.    01479000
         DS    CL4       Reserved                                       01480000
CD_ETODWHENNPALLOCATED DS CL16 Extended TOD when the physical          *01481000
                         instantiation of the note pad was most        *01482000
                         recently allocated. If a note pad connector   *01483000
                         is monitoring the physical placement of the   *01484000
                         note pad, it should query the note pad to     *01485000
                         refresh its data when it observes changes to  *01486000
                         this value. This field contains the same      *01487000
                         value as reported in npd_ETodWhenAllocated.    01488000
CD_ETODWHENNPCREATED DS CL16 Extended TOD when the note pad was        *01489000
                         logically created. This ETOD uniquely         *01490000
                         identifies an instance of a note pad. It      *01491000
                         remains fixed for the life of the note pad.    01492000
IXCYNOTE_TCONNECTDATA_LEN EQU *-IXCYNOTE_TCONNECTDATA                   01493000
.L004F   ANOP                                                           01494000
         AIF   ('&IXCYNOTE_TNOTEDATA' EQ 'NO').L0053                    01495000
         AIF   ('&DSECT' EQ 'YES').L0054                                01496000
         AIF   ('&IXCYNOTE_TNOTEDATA' NE 'YES').L0053                   01497000
.L0054   ANOP                                                           01498000
*                                                                       01499000
* ********************************************************************  01500000
* *                                                                  *  01501000
* *  Data Record for a Note in a note pad                            *  01502000
* *                                                                  *  01503000
* *    Summary                                                       *  01504000
* *                                                                  *  01505000
* *    Usage                                                         *  01506000
* *                                                                  *  01507000
* *    Explanation                                                   *  01508000
* *                                                                  *  01509000
* *                                                                  *  01510000
* ********************************************************************  01511000
*                                                                       01512000
*                                                                       01513000
         AIF   ('&DSECT' EQ 'YES').L0055                                01514000
IXCYNOTE_TNOTEDATA DS 0D Note data                                      01515000
         AGO   .L0056                                                   01516000
.L0055   ANOP                                                           01517000
IXCYNOTE_TNOTEDATA DSECT   Note data                                    01518000
.L0056   ANOP                                                           01519000
         DS    CL8       Reserved                                       01520000
ND_NAME  DS    CL8       Name of note                                   01521000
ND_TAG   DS    CL16      Note tag                                       01522000
ND_ETODWHENWRITTEN DS CL16 ETOD when note was most recently created or *01523000
                         replaced.                                      01524000
ND_INSTANCE# DS CL8      XCF assigned number that identifies a         *01525000
                         particular instance of a note. Normally       *01526000
                         nonzero. May be zero when the note data       *01527000
                         record is returned for a delete note request  *01528000
                         that was deferred.                             01529000
ND_CONNECTIONID DS CL12  XCF assigned identifier indicating which      *01530000
                         connection last wrote the note.                01531000
ND_ATTRIBUTES DS CL4                                                    01532000
*  Bit definitions:                                                     01533000
ND_KEPTNOTE EQU X'80'    OFF if the note will be deleted when the      *01534000
                         associated connection is deleted. ON if the   *01535000
                         note will be kept.                             01536000
ND_NOTESIZE DS F         Length in bytes of the note content.           01537000
ND_FLAGS DS    CL1                                                      01538000
*  Bit definitions:                                                     01539000
ND_INBUFFER EQU X'80'    ON if the note content was stored at the      *01540000
                         indicated offset within the buffer. OFF if    *01541000
                         the note has no content, or no content was    *01542000
                         stored in the buffer, or no buffer was        *01543000
                         provided.                                      01544000
         DS    CL3       Reserved                                       01545000
ND_OFFSETBUFFER64 DS CL8 Offset within the BUFFER area where the note  *01546000
                         content resides. Valid for use if nd_InBuffer *01547000
                         is ON.                                         01548000
         ORG   ND_OFFSETBUFFER64                                        01549000
         DS    CL4       Reserved (high word of 64 bit offset)          01550000
ND_OFFSETBUFFER32 DS F   Offset for 31 bit programs                     01551000
IXCYNOTE_TNOTEDATA_LEN EQU *-IXCYNOTE_TNOTEDATA                         01552000
.L0053   ANOP                                                           01553000
         AIF   ('&IXCYNOTE_TSYSCONNDATA' EQ 'NO').L0057                 01554000
         AIF   ('&DSECT' EQ 'YES').L0058                                01555000
         AIF   ('&IXCYNOTE_TSYSCONNDATA' NE 'YES').L0057                01556000
.L0058   ANOP                                                           01557000
*                                                                       01558000
* ********************************************************************  01559000
* *                                                                  *  01560000
* *  Data Record describing system with connection to a note pad     *  01561000
* *                                                                  *  01562000
* *    Summary                                                       *  01563000
* *                                                                  *  01564000
* *    Usage                                                         *  01565000
* *                                                                  *  01566000
* *    Explanation                                                   *  01567000
* *                                                                  *  01568000
* *                                                                  *  01569000
* ********************************************************************  01570000
*                                                                       01571000
*                                                                       01572000
         AIF   ('&DSECT' EQ 'YES').L0059                                01573000
IXCYNOTE_TSYSCONNDATA DS 0D Summary of system with connections to a    *01574000
                         note pad                                       01575000
         AGO   .L005A                                                   01576000
.L0059   ANOP                                                           01577000
IXCYNOTE_TSYSCONNDATA DSECT   Summary of system with connections to a  *01578000
                         note pad                                       01579000
.L005A   ANOP                                                           01580000
SCD_SYSNAME DS CL8       Name of system                                 01581000
SCD_SYSID DS   F         XCF Token for subject system                   01582000
         ORG   SCD_SYSID                                                01583000
SCD_SNUM DS    X         System slot number                             01584000
SCD_SSEQ DS    FL3       System sequence number                         01585000
SCD_STATE DS   CL4                                                      01586000
         ORG   SCD_STATE                                                01587000
SCD_STATE1 DS  CL1                                                      01588000
*  Bit definitions:                                                     01589000
SCD_REPORTER EQU X'80'   ON if the subject system is the one that      *01590000
                         reported the data.                             01591000
SCD_NPNOTACCESSIBLE EQU X'40' ON if the subject system does not appear *01592000
                         to have access to the note pad. OFF does not  *01593000
                         necessarily imply that the system has access.  01594000
SCD_HASNPCONNECTORS EQU X'20' ON if the subject system appears to have *01595000
                         connections to the note pad.                   01596000
SCD_NMWISWRITER EQU X'10' ON if the subject system has the one         *01597000
                         connection permitted to make updates to a     *01598000
                         note pad created with MULTIWRITE=NO. The      *01599000
                         system may or may not have read only          *01600000
                         connections too.                               01601000
SCD_NMWREADONLY EQU X'08' ON if the subject system has read only       *01602000
                         connections to a note pad created with        *01603000
                         MULTIWRITE=NO. The system does not have the   *01604000
                         connection with write access.                  01605000
         DS    CL3       reserved                                       01606000
IXCYNOTE_TSYSCONNDATA_LEN EQU *-IXCYNOTE_TSYSCONNDATA                   01607000
.L0057   ANOP                                                           01608000
         AIF   ('&IXCYNOTE_TSELECTBYTAGRANGE' EQ 'NO').L005B            01609000
         AIF   ('&DSECT' EQ 'YES').L005C                                01610000
         AIF   ('&IXCYNOTE_TSELECTBYTAGRANGE' NE 'YES').L005B           01611000
.L005C   ANOP                                                           01612000
*                                                                       01613000
* ********************************************************************  01614000
* *                                                                  *  01615000
* *  Note Selection Criteria                                         *  01616000
* *                                                                  *  01617000
* *    Summary:                                                      *  01618000
* *      Maps information that will be used to choose the set of     *  01619000
* *      notes that are to be processed by an IXCNOTE REQUEST=NOTES  *  01620000
* *      request.                                                    *  01621000
* *                                                                  *  01622000
* *    Usage:                                                        *  01623000
* *      - Code the CRITERIA keyword when invoking IXCNOTE to        *  01624000
* *        process a collection of notes.  The storage area          *  01625000
* *        identified by CRITERIA is a selection criteria entry      *  01626000
* *        which is mapped by ixcynote_tSelectionCriteria.           *  01627000
* *        The selection criteria entry indicates the type of        *  01628000
* *        selection criteria to be applied, how many selection      *  01629000
* *        records of that type are included, and an array of        *  01630000
* *        selection records.                                        *  01631000
* *                                                                  *  01632000
* *    Explanation:                                                  *  01633000
* *      When processing a collection of notes, the selection        *  01634000
* *      criteria identify which notes in the note pad are to be     *  01635000
* *      processed.                                                  *  01636000
* *                                                                  *  01637000
* *      Notes can be chosen using one of the following different    *  01638000
* *      types of selection criteria:                                *  01639000
* *                                                                  *  01640000
* *           Type       Max#  Selects                               *  01641000
* *       -------------  ----  ------------------------------------- *  01642000
* *       Tag Range         1  Notes with tags in indicated range    *  01643000
* *       Tag Mask          1  Notes whose masked tag matches filter *  01644000
* *       Connection ID     1  Notes written by indicated connection *  01645000
* *                                                                  *  01646000
* *                                                                  *  01647000
* *      Only one type of selection criteria can be provided.        *  01648000
* *      Only one selection record can be specified per criteria.    *  01649000
* *                                                                  *  01650000
* *      To preserve the integrity of the selection, the content     *  01651000
* *      of the specified criteria must be preserved until the       *  01652000
* *      IXCNOTE service returns to the caller.                      *  01653000
* *                                                                  *  01654000
* ********************************************************************  01655000
*                                                                       01656000
*                                                                       01657000
         AIF   ('&DSECT' EQ 'YES').L005D                                01658000
IXCYNOTE_TSELECTBYTAGRANGE DS 0F Select notes whose tag value          *01659000
                         satisfies the inequality MinTag <= tag <=     *01660000
                         MaxTag.                                        01661000
         AGO   .L005E                                                   01662000
.L005D   ANOP                                                           01663000
IXCYNOTE_TSELECTBYTAGRANGE DSECT   Select notes whose tag value        *01664000
                         satisfies the inequality MinTag <= tag <=     *01665000
                         MaxTag.                                        01666000
.L005E   ANOP                                                           01667000
SBT_MINTAG DS  CL16      Lower bound of tag values.                     01668000
SBT_MAXTAG DS  CL16      Upper bound of tag values.                     01669000
IXCYNOTE_TSELECTBYTAGRANGE_LEN EQU *-IXCYNOTE_TSELECTBYTAGRANGE         01670000
.L005B   ANOP                                                           01671000
         AIF   ('&IXCYNOTE_TSELECTBYTAGMASK' EQ 'NO').L005F             01672000
         AIF   ('&DSECT' EQ 'YES').L0060                                01673000
         AIF   ('&IXCYNOTE_TSELECTBYTAGMASK' NE 'YES').L005F            01674000
IXCYNOTE_TSELECTBYTAGMASK DS 0F Select notes whose tag value equals    *01675000
                         the specified filter value when the indicated *01676000
                         mask is applied.                               01677000
         AGO   .L0061                                                   01678000
.L0060   ANOP                                                           01679000
IXCYNOTE_TSELECTBYTAGMASK DSECT   Select notes whose tag value equals  *01680000
                         the specified filter value when the indicated *01681000
                         mask is applied.                               01682000
.L0061   ANOP                                                           01683000
SBT_TAGFILTER DS CL16    Tag value to match after mask is applied.      01684000
SBT_TAGMASK DS CL16      Mask indicating which bits in the note tag    *01685000
                         are to be compared to bits in the tag filter. *01686000
                         A given note will be selected, if for every   *01687000
                         bit that is ON in the mask, both of the       *01688000
                         corresponding bits in the note tag and the    *01689000
                         tag filter have the same value. If a mask bit *01690000
                         is OFF, the corresponding bits in the note    *01691000
                         tag and tag filter will not be compared. A    *01692000
                         mask where all the bits are zero implies that *01693000
                         all notes will be selected. A mask where all   01694000
*                        the bits are one implies that any note whose  *01695000
                         tag equals the filter will be selected.        01696000
IXCYNOTE_TSELECTBYTAGMASK_LEN EQU *-IXCYNOTE_TSELECTBYTAGMASK           01697000
.L005F   ANOP                                                           01698000
         AIF   ('&IXCYNOTE_TSELECTBYCONNECTIONID' EQ 'NO').L0062        01699000
         AIF   ('&DSECT' EQ 'YES').L0063                                01700000
         AIF   ('&IXCYNOTE_TSELECTBYCONNECTIONID' NE 'YES').L0062       01701000
.L0063   ANOP                                                           01702000
*                                                                       01703000
*    Selecting notes by Connection ID:                                  01704000
*                                                                       01705000
*      Set sbcid_ConnectionID to indicate the set of connections whose  01706000
*      notes are to be selected:                                        01707000
*        - Binary zeroes for all connections                            01708000
*        - XCF System Slot number for any connection that ever          01709000
*          existed on any instance of a system                          01710000
*        - XCF System ID for any connection that ever existed on the    01711000
*          indicated system instance                                    01712000
*        - The connection ID of a specific note pad connector           01713000
*                                                                       01714000
*      When setting system information, one should first set the        01715000
*      sbcid_ConnectionID to binary zeroes and then set the desired     01716000
*      system specifications.                                           01717000
*                                                                       01718000
*      One must then specify "filters" to indicate which notes are      01719000
*      to be included.  If no filters are specified, no notes will      01720000
*      be selected.                                                     01721000
*                                                                       01722000
*      Note that the deletion of a connection is not an atomic          01723000
*      operation.  During the window where a connection is being        01724000
*      deleted, the connection will not be able to manipulate any       01725000
*      notes.  However, until XCF finishes the delete process,          01726000
*      a request that selects notes by Connection ID, may encounter     01727000
*      KEEPNOTE=NO notes that have not yet been deleted.                01728000
*                                                                       01729000
*                                                                       01730000
*                                                                       01731000
         AIF   ('&DSECT' EQ 'YES').L0064                                01732000
IXCYNOTE_TSELECTBYCONNECTIONID DS 0F Select notes associated with the  *01733000
                         indicated connection identifier                01734000
         AGO   .L0065                                                   01735000
.L0064   ANOP                                                           01736000
IXCYNOTE_TSELECTBYCONNECTIONID DSECT   Select notes associated with    *01737000
                         the indicated connection identifier            01738000
.L0065   ANOP                                                           01739000
SBCID_CONNECTIONID DS CL12 Identifier of connection whose notes are to *01740000
                         be selected. If zero, notes from all          *01741000
                         connectors are to be selected.                 01742000
         ORG   SBCID_CONNECTIONID                                       01743000
SBCID_SYSID DS F         XCF system ID. Notes from connections on that *01744000
                         specific system instance are to be selected.   01745000
         ORG   SBCID_SYSID                                              01746000
SBCID_SYSNUM DS X        XCF system slot number. Notes from            *01747000
                         connections associated with any instance of   *01748000
                         the indicated system are to be selected.       01749000
SBCID_SYSSEQ DS FL3      System sequence number                         01750000
         ORG   SBCID_CONNECTIONID+12                                    01751000
SBCID_FILTERS DS CL1     Which notes to include:                        01752000
*  Bit definitions:                                                     01753000
SBCID_INCLUDEKEEPNO EQU X'80' If ON, a note is selected if the         *01754000
                         connector specified KEEPNOTE=NO. If OFF, such *01755000
                         notes will not be selected.                    01756000
SBCID_INCLUDEKEEPYES EQU X'40' If ON, a note is selected if the        *01757000
                         connector specified KEEPNOTE=YES. If OFF,     *01758000
                         such notes will not be selected.               01759000
         DS    CL19      reserved, must be zero                         01760000
IXCYNOTE_TSELECTBYCONNECTIONID_LEN EQU *-IXCYNOTE_TSELECTBYCONNECTIONID*01761000
                                                                        01762000
.L0062   ANOP                                                           01763000
         AIF   ('&IXCYNOTE_TSELECTIONCRITERIA' EQ 'NO').L0066           01764000
         AIF   ('&DSECT' EQ 'YES').L0067                                01765000
         AIF   ('&IXCYNOTE_TSELECTIONCRITERIA' NE 'YES').L0066          01766000
IXCYNOTE_TSELECTIONCRITERIA DS 0F Describes the notes to be selected    01767000
         AGO   .L0068                                                   01768000
.L0067   ANOP                                                           01769000
IXCYNOTE_TSELECTIONCRITERIA DSECT   Describes the notes to be selected  01770000
.L0068   ANOP                                                           01771000
SC_TYPE  DS    X         Indicates the type of selection criteria      *01772000
                         records being provided within sc_Content. See *01773000
                         ixcynote_kScType constants below.              01774000
         DS    CL1       reserved, must be zero                         01775000
SC_#RECORDS DS H         Number of selection criteria records provided *01776000
                         within sc_Content. sc_type determines the     *01777000
                         maximum permitted number of records.           01778000
SC_CONTENT DS  CL32      specific criteria go here                      01779000
         ORG   SC_CONTENT                                               01780000
SC_BYTAGRANGE DS CL32                                                   01781000
         ORG   SC_CONTENT                                               01782000
SC_BYTAGMASK DS CL32                                                    01783000
         ORG   SC_CONTENT                                               01784000
SC_BYCONNECTIONID DS CL32                                               01785000
IXCYNOTE_KSCTYPEBYTAGRANGE EQU 1                                        01786000
IXCYNOTE_KSCTYPEBYTAGMASK EQU 2                                         01787000
IXCYNOTE_KSCTYPEBYCONNECTIONID EQU 4                                    01788000
IXCYNOTE_TSELECTIONCRITERIA_LEN EQU *-IXCYNOTE_TSELECTIONCRITERIA       01789000
.L0066   ANOP                                                           01790000
         AIF   ('&ZCBPRINT' EQ 'NO').P3                                 01791000
         AIF   ('&LIST' EQ 'YES').P4                                    01792000
.P3      ANOP                                                           01793000
         POP   PRINT                                                    01794000
.P4      ANOP                                                           01795000
.P_EXIT  ANOP                                                           01796000
         MEND                                                           01797000
**/ ;                                                                   01798000
* %IXCYNOTE_INCLUDED = 'YES';                                           01799000
* %DCL ZCBPRINT CHAR EXT;                                               01800000
* %DEACTIVATE ZCBPRINT;                                                 01801000
* %DCL IXCYNOTE_LIST CHAR EXT;                                          01802000
* %DEACTIVATE IXCYNOTE_LIST;                                            01803000
* %IF IXCYNOTE_LIST = 'NO' !                                            01804000
*    ZCBPRINT = 'NO' %THEN                                              01805000
* %DO;                                                                  01806000
*   @LIST PUSH NOECHO;                                                  01807000
*   @LIST NOASSEMBLE NOECHO;                                            01808000
*   @LIST OFF C NOECHO;                                                 01809000
* %END;                                                                 01810000
*/* Start of PL/X Source                                             */ 01811000
*                                                                       01812000
*                                                                       01813000
*%If CbGenNoIsa = 'YES' %Then                                           01814000
*  %Do;                                                                 01815000
*    %isaNpName       = 'Char(Size(ixcynote_tNotepadName)) ';           01816000
*    %isaDataLocator  = 'Char(Size(ixcynote_tDataLocator)) ';           01817000
*    %isaByTagRange   = 'Char(Size(ixcynote_tSelectByTagRange)) ';      01818000
*    %isaByTagMask    = 'Char(Size(ixcynote_tSelectByTagMask)) ';       01819000
*    %isaByConnectionID =                                               01820000
*            'Char(Size(ixcynote_tSelectByConnectionID)) ';             01821000
*    %isaWhyQuiesced =                                                  01822000
*            'Char(Size(ixcynote_tWhyQuiesced)) ';                      01823000
*    %isaWhyImpaired =                                                  01824000
*            'Char(Size(ixcynote_tWhyImpaired)) ';                      01825000
*  %End;                            /*                               */ 01826000
*%Else                              /*                               */ 01827000
*  %Do;                             /*                               */ 01828000
*    %isaNpName      = 'isa(ixcynote_tNotepadName) ';                   01829000
*    %isaDataLocator = 'IsA(ixcynote_tDataLocator) ';                   01830000
*    %isaByTagRange  = 'isa(ixcynote_tSelectByTagRange) ';              01831000
*    %isaByTagMask   = 'isa(ixcynote_tSelectByTagMask) ';               01832000
*    %isaByConnectionID = 'isa(ixcynote_tSelectByConnectionID) ';       01833000
*    %isaWhyQuiesced    = 'isa(ixcynote_tWhyQuiesced) ';                01834000
*    %isaWhyImpaired    = 'isa(ixcynote_tWhyImpaired) ';                01835000
*  %End;                            /*                               */ 01836000
*                                                                       01837000
*/********************************************************************/ 01838000
*/*                                                                  */ 01839000
*/*  Note Pad Names                                                  */ 01840000
*/*                                                                  */ 01841000
*/*    Summary                                                       */ 01842000
*/*      Note pads are identified by name. The names are divided     */ 01843000
*/*      into sections that identify the "owner" (software vendor),  */ 01844000
*/*      application and function of the note pad.                   */ 01845000
*/*                                                                  */ 01846000
*/*    Usage                                                         */ 01847000
*/*      When invoking the IXCNOTE macro, code NOTEPAD to indicate   */ 01848000
*/*      the name of the note pad to be processed.                   */ 01849000
*/*                                                                  */ 01850000
*/*    Explanation                                                   */ 01851000
*/*      Note pads are identified by a note pad name. Note pad names */ 01852000
*/*      are divided into sections.  All sections of the name must   */ 01853000
*/*      be left justified, and appended on the right with EBCDIC    */ 01854000
*/*      blanks as needed.  Names can consist of the characters A-Z, */ 01855000
*/*      0-9, #,$,@, and _ (underscore).  Alphabetic characters must */ 01856000
*/*      be upper case.                                              */ 01857000
*/*                                                                  */ 01858000
*/*      The first section (npn_Owner) must not be blank and is      */ 01859000
*/*      intended to provide uniqueness so that applications offered */ 01860000
*/*      by different software vendors can be segregated from one    */ 01861000
*/*      another.  Most software running on the z/OS platform has a  */ 01862000
*/*      3 or 4 character "prefix" that is unique to that particular */ 01863000
*/*      application, subsystem, or component.  Use of that prefix   */ 01864000
*/*      in the owner section of the name will help avoid confusion  */ 01865000
*/*      and interference between different vendors.  It will also   */ 01866000
*/*      help installations and service personnel identify the       */ 01867000
*/*      relevant owner of the software.                             */ 01868000
*/*                                                                  */ 01869000
*/*      For example, the "owner" section of a note pad name used by */ 01870000
*/*      IBM software would begin with the component prefix (such    */ 01871000
*/*      'IXC' for XCF) or the characters "SYS".  Thus, to avoid     */ 01872000
*/*      names used by IBM, do not specify an "owner" name that      */ 01873000
*/*      begins with the letters A through I or the character string */ 01874000
*/*      SYS.                                                        */ 01875000
*/*                                                                  */ 01876000
*/*                                                                  */ 01877000
*/*      The second section (npn_Application) must not be blank and  */ 01878000
*/*      is intended to identify the particular vendor application   */ 01879000
*/*      that is using the note pad. A given vendor might offer      */ 01880000
*/*      different applications each of which might require its own  */ 01881000
*/*      note pad. Some vendors might use this section to identify   */ 01882000
*/*      not only the application, but a particular instance of      */ 01883000
*/*      the application as well.  For example, an application name  */ 01884000
*/*      might consist of a 3 character prefix supplied by the       */ 01885000
*/*      vendor followed by a 2 character suffix provided by the     */ 01886000
*/*      installation that might be used to distinguish a test       */ 01887000
*/*      version of the application from the production version      */ 01888000
*/*      and/or different production versions from one another.      */ 01889000
*/*                                                                  */ 01890000
*/*                                                                  */ 01891000
*/*      The third section (npn_Function) is intended to identify    */ 01892000
*/*      the function within the application to which the note pad   */ 01893000
*/*      is being applied.  A given application might require        */ 01894000
*/*      distinct note pads for different purposes. This section of  */ 01895000
*/*      the name can be blank.                                      */ 01896000
*/*                                                                  */ 01897000
*/*                                                                  */ 01898000
*/*      The fourth section (npn_Qualifier) is intended to provided  */ 01899000
*/*      additional qualification to allow, for example, a given     */ 01900000
*/*      function within an application to have multiple note pads.  */ 01901000
*/*      Alternatively, this section might be used to distinguish    */ 01902000
*/*      the note pads being used by different releases of a given   */ 01903000
*/*      application.  This section of the name can be blank.        */ 01904000
*/*                                                                  */ 01905000
*/*                                                                  */ 01906000
*/*                                                                  */ 01907000
*/*      Note that the owner and application sections of the note    */ 01908000
*/*      pad name will, in conjunction with installation             */ 01909000
*/*      specifications, determine the coupling facility structure   */ 01910000
*/*      that is to be used for the note pad. In the absence of      */ 01911000
*/*      installation specifications, XCF will allocate the note pad */ 01912000
*/*      in one of its "default" note pad structures (with names of  */ 01913000
*/*      the form IXCNP_SYSXCFxx).                                   */ 01914000
*/*                                                                  */ 01915000
*/*      However, the installation could activate a Coupling         */ 01916000
*/*      Facility Resource Management (CFRM) policy that defines a   */ 01917000
*/*      structure name of the form IXCNP_ownerxx where "owner" is   */ 01918000
*/*      the nonblank portion of the owner section of the note pad   */ 01919000
*/*      name and "xx" is the EBCDIC representation of a two         */ 01920000
*/*      character hexedecimal number in the range 00-FF.  If such   */ 01921000
*/*      structures are defined, XCF will allocate all note pads     */ 01922000
*/*      with the indicated "owner" in the indicated set of one or   */ 01923000
*/*      more structures.  The intended purpose of this protocol is  */ 01924000
*/*      to enable the installation to isolate the note pads of a    */ 01925000
*/*      particular "owner" from other note pads that have been      */ 01926000
*/*      defined in the sysplex.                                     */ 01927000
*/*                                                                  */ 01928000
*/*      ALternatively, the installation could activate a Coupling   */ 01929000
*/*      Facility Resource Management (CFRM) policy that defines a   */ 01930000
*/*      structure name of the form owner_application where "owner"  */ 01931000
*/*      and "application" are extracted from the note pad name. If  */ 01932000
*/*      "owner" has trailing blanks, XCF will substitute a single   */ 01933000
*/*      underscore for them all when forming the structure name.    */ 01934000
*/*      If "owner" has no trailing blanks, the underscore is        */ 01935000
*/*      omitted.  If such a structure is defined, XCF will allocate */ 01936000
*/*      all note pads with the indicated "owner" and "application"  */ 01937000
*/*      name in the indicated structure.  The intended purpose of   */ 01938000
*/*      this protocol is to enable the installation to isolate the  */ 01939000
*/*      note pads of a particular owner's application to a unique   */ 01940000
*/*      sructure.                                                   */ 01941000
*/*                                                                  */ 01942000
*/*      XCF will attempt to allocate a note pad in the first        */ 01943000
*/*      coupling facility structure it finds in the following       */ 01944000
*/*      search order:                                               */ 01945000
*/*       1 One of the structures with names like IXCNP_ownerxx      */ 01946000
*/*       2 One of the structures with names like IXCNP_SYSXCFxx     */ 01947000
*/*                                                                  */ 01948000
*/*      If the CFRM policy is updated to define a more preferred    */ 01949000
*/*      structure after a note pad has been allocated, XCF may,     */ 01950000
*/*      at its discretion, move the note pad to the more preferred  */ 01951000
*/*      structure.                                                  */ 01952000
*/*                                                                  */ 01953000
*/********************************************************************/ 01954000
*                                                                       01955000
* Declare                           /* mapping of note pad name      */ 01956000
*  1 ixcynote_tNotepadName TYPE char(32),                               01957000
*    3 npn_Owner       char(8),     /* Vendor/component owner        */ 01958000
*    3 npn_Application char(8),     /* Application using note pad    */ 01959000
*    3 npn_Function    char(8),     /* Function within application   */ 01960000
*    3 npn_Qualifier   char(8),     /* Multiple instances or release */ 01961000
*    3 * char(0);                                                       01962000
*                                                                       01963000
*                                                                       01964000
*/********************************************************************/ 01965000
*/*                                                                  */ 01966000
*/*  Answer Area                                                     */ 01967000
*/*                                                                  */ 01968000
*/*    Summary                                                       */ 01969000
*/*      ixcynote_tAnsArea maps the data returned by XCF in the      */ 01970000
*/*      "answer area" provided by the invoker of the IXCNOTE macro. */ 01971000
*/*      The answer area has a "header" that may provide additional  */ 01972000
*/*      "details" about the request result as well as "data         */ 01973000
*/*      locators" that indicate where various "data records" may    */ 01974000
*/*      have been stored.                                           */ 01975000
*/*                                                                  */ 01976000
*/*      The header starts at offset zero in the storage area named  */ 01977000
*/*      by the ANSAREA keyword of the IXCNOTE macro.  Use           */ 01978000
*/*      information in the header to locate the data record(s) of   */ 01979000
*/*      interest.                                                   */ 01980000
*/*                                                                  */ 01981000
*/*    Usage                                                         */ 01982000
*/*      - Invoke IXCNOTE with an ANSAREA large enough for the       */ 01983000
*/*        answer area header and the data records expected when the */ 01984000
*/*        request is processed successfully.                        */ 01985000
*/*                                                                  */ 01986000
*/*      - Invoke IXCNOTE with an ANSAREA large enough for the       */ 01987000
*/*        answer area header but too small for the relevant data    */ 01988000
*/*        records.  The note pad service will store the header in   */ 01989000
*/*        the answer area and return with a return and reason code  */ 01990000
*/*        indicating that the answer area is too small.  The        */ 01991000
*/*        aa_AnsAreaSizeNeeded field will indicate how much storage */ 01992000
*/*        is needed to contain the entire answer area (with all of  */ 01993000
*/*        the relevant records).  Obtain storage that is at least   */ 01994000
*/*        as big as the indicated size and reissue the request.     */ 01995000
*/*                                                                  */ 01996000
*/*                                                                  */ 01997000
*/*    Explanation                                                   */ 01998000
*/*      The answer area provides information about the request and  */ 01999000
*/*      its results.  As applicable, it will indicate where related */ 02000000
*/*      data can be located.                                        */ 02001000
*/*                                                                  */ 02002000
*/*      For most IXCNOTE requests, the answer area is optional.     */ 02003000
*/*      Depending on the implementation, the user may be able to    */ 02004000
*/*      rely on the IXCNOTE expansion to set the necessary data in  */ 02005000
*/*      user supplied variables.  In cases where an answer area is  */ 02006000
*/*      provided, it will provide additional data that may be of    */ 02007000
*/*      interest to the application.                                */ 02008000
*/*                                                                  */ 02009000
*/*      If the storage area for the answer area is too small for    */ 02010000
*/*      the answer area header, the IXCNOTE request is rejected.    */ 02011000
*/*                                                                  */ 02012000
*/*      If the storage area for the answer area is large enough for */ 02013000
*/*      the answer area header, but too small for all the available */ 02014000
*/*      output, the request is not processed and IXCNOTE returns    */ 02015000
*/*      with a warning return code.  Within the answer area header, */ 02016000
*/*      aa_AnsAreaSizeNeeded indicates how much storage is needed   */ 02017000
*/*      to hold all the results.  The user is expected to obtain    */ 02018000
*/*      enough storage for the entire answer area and then reinvoke */ 02019000
*/*      IXCNOTE to process the request.                             */ 02020000
*/*                                                                  */ 02021000
*/*      When the answer area is big enough for the results, the     */ 02022000
*/*      answer area header potentially has two key pieces of        */ 02023000
*/*      information: "details" and "data locators".  If "data       */ 02024000
*/*      locators" are present, the answer area will contain "data   */ 02025000
*/*      records".  The particular details, number of data locators, */ 02026000
*/*      as well as number and type of data records stored in the    */ 02027000
*/*      answer area will depend on the particular request and its   */ 02028000
*/*      results.                                                    */ 02029000
*/*                                                                  */ 02030000
*/*        o Details                                                 */ 02031000
*/*                                                                  */ 02032000
*/*          In the answer area header, the field aa_DetailsFormat   */ 02033000
*/*          indicates whether any details were provided, and if so, */ 02034000
*/*          how the detail data is mapped.  If present, the field   */ 02035000
*/*          aa_Details contains the details.                        */ 02036000
*/*                                                                  */ 02037000
*/*          The IXCNOTE macro indicates the particular details      */ 02038000
*/*          stored for each applicable return and reason code.      */ 02039000
*/*          Thus the application writer has the choice of whether   */ 02040000
*/*          to use the IXCNOTE return and reason code or the        */ 02041000
*/*          aa_DetailsFormat field in the answer area to determine  */ 02042000
*/*          whether details are available, and if so, how the       */ 02043000
*/*          content is mapped.  Note that if using aa_DetailsFormat */ 02044000
*/*          to make the determination, one would need to be certain */ 02045000
*/*          that an answer area header had valid content before     */ 02046000
*/*          inspecting aa_DetailsFormat (check the return and       */ 02047000
*/*          reason code, or alternatively, ensure that              */ 02048000
*/*          aa_DetailsFormat is initialized to the value            */ 02049000
*/*          ixcynote_kDetailsNone before invoking IXCNOTE).         */ 02050000
*/*                                                                  */ 02051000
*/*          If the IXCNOTE macro does not explicitly indicate that  */ 02052000
*/*          details will be returned for a particular return and    */ 02053000
*/*          reason code combination, the answer area may or may not */ 02054000
*/*          contain details.  If details are provided, they will in */ 02055000
*/*          general provide diagnostic data related to intermediate */ 02056000
*/*          issues encountered as the request was processed.  These */ 02057000
*/*          details are not necessarily relevant to the final       */ 02058000
*/*          request result.                                         */ 02059000
*/*                                                                  */ 02060000
*/*                                                                  */ 02061000
*/*        o Data Locators                                           */ 02062000
*/*                                                                  */ 02063000
*/*          A data locator specifies the location within the answer */ 02064000
*/*          area where one or more data records of a particular     */ 02065000
*/*          type can be found.  That is, the data locator will      */ 02066000
*/*          indicate where an array of data records can be found    */ 02067000
*/*          within the answer area.  The data locator includes      */ 02068000
*/*          information to indicate the type, size, location, and   */ 02069000
*/*          number of records that it describes.                    */ 02070000
*/*                                                                  */ 02071000
*/*          Data locators are stored as an array of data locator    */ 02072000
*/*          entries.  Each entry in the data locator array is       */ 02073000
*/*          mapped by ixcynote_tDataLocator.  Within the answer     */ 02074000
*/*          area header, the field aa_#DataLocators indicates how   */ 02075000
*/*          many data locators were stored and the field            */ 02076000
*/*          aa_OffsetDataLocators indicates where the array of data */ 02077000
*/*          locators can be found within the answer area.  The      */ 02078000
*/*          mapping declared as ixcynote_tDataLocators may be of    */ 02079000
*/*          use when implementing code to run through the data      */ 02080000
*/*          locators array.                                         */ 02081000
*/*                                                                  */ 02082000
*/*          Each data locator entry locates a particular type of    */ 02083000
*/*          data record.  If a request returns different types of   */ 02084000
*/*          data records, there will be a data locator for each     */ 02085000
*/*          type of record.  Thus in general, the number of data    */ 02086000
*/*          locators returned may be less than the number of data   */ 02087000
*/*          records that are returned.                              */ 02088000
*/*                                                                  */ 02089000
*/*          In some cases, there may be multiple entries in the     */ 02090000
*/*          data locator array, each of which locates the same type */ 02091000
*/*          of data record.  This might be done, for example, in    */ 02092000
*/*          order to organize the data records into logical         */ 02093000
*/*          groupings.                                              */ 02094000
*/*                                                                  */ 02095000
*/*                                                                  */ 02096000
*/*          When successful, some requests have a "primary" data    */ 02097000
*/*          record that would be expected to be returned.  When the */ 02098000
*/*          expected record is stored in the answer area, the field */ 02099000
*/*          aa_OffsetDataRecord in the answer area header can be    */ 02100000
*/*          used to locate this primary record directly (instead of */ 02101000
*/*          locating the record indirectly via an entry in the data */ 02102000
*/*          locator array).                                         */ 02103000
*/*                                                                  */ 02104000
*/*                                                                  */ 02105000
*/*        o Data Records                                            */ 02106000
*/*                                                                  */ 02107000
*/*          Depending on the particular request and the results     */ 02108000
*/*          of that request, zero or more "data records" may be     */ 02109000
*/*          stored in the answer area.  The following data records  */ 02110000
*/*          are supported:                                          */ 02111000
*/*                                                                  */ 02112000
*/*          Data Record Mapping      Data Record Describes          */ 02113000
*/*          -----------------------  ----------------------------   */ 02114000
*/*          ixcynote_tNotePadData    Note pad                       */ 02115000
*/*          ixcynote_tConnectData    Connection to a note pad       */ 02116000
*/*          ixcynote_tNoteData       Note in a note pad             */ 02117000
*/*          ixcynote_tSysConnData    System connections to note pad */ 02118000
*/*                                                                  */ 02119000
*/*                                                                  */ 02120000
*/*          Assuming a suitable answer area is provided and the     */ 02121000
*/*          request is successful (IXCNOTE return code is zero),    */ 02122000
*/*          the indicated data records will be returned for the     */ 02123000
*/*          indicated requests.                                     */ 02124000
*/*                                                                  */ 02125000
*/*            In the column with the heading of '#':                */ 02126000
*/*              0 = no data records returned                        */ 02127000
*/*              1 = one data record of indicated type is returned   */ 02128000
*/*              N = zero or more records of the indicated type are  */ 02129000
*/*                  returned                                        */ 02130000
*/*                                                                  */ 02131000
*/*                                                                  */ 02132000
*/*                                                                  */ 02133000
*/*        For REQUEST=NOTEPAD                                       */ 02134000
*/*                                                                  */ 02135000
*/*          ReqType  # Data Records                                 */ 02136000
*/*          -------- - ------------------------                     */ 02137000
*/*          CREATE   1 ixcynote_tNotepadData     (1)                */ 02138000
*/*                                                                  */ 02139000
*/*  (1) Applies if note pad created or already exists               */ 02140000
*/*                                                                  */ 02141000
*/*                                                                  */ 02142000
*/*          QUERY    1 ixcynote_tNotepadData                        */ 02143000
*/*                   N ixcynote_tSysConnData                        */ 02144000
*/*                                                                  */ 02145000
*/*          DELETE   0 -                                            */ 02146000
*/*                                                                  */ 02147000
*/*                                                                  */ 02148000
*/*        For REQUEST=CONNECTION                                    */ 02149000
*/*                                                                  */ 02150000
*/*          ReqType  # Data Records                                 */ 02151000
*/*          -------- - ------------------------                     */ 02152000
*/*          CREATE   1 ixcynote_tConnectData                        */ 02153000
*/*                                                                  */ 02154000
*/*          DELETE   0 -                                            */ 02155000
*/*                                                                  */ 02156000
*/*          PAUSE    0 -                                            */ 02157000
*/*                                                                  */ 02158000
*/*          RESUME   0 -                                            */ 02159000
*/*                                                                  */ 02160000
*/*                                                                  */ 02161000
*/*      o For REQUEST=NOTE                                          */ 02162000
*/*                                                                  */ 02163000
*/*          ReqType  # Data Records                                 */ 02164000
*/*          -------- - -------------------------------------------  */ 02165000
*/*          CREATE   1 ixcynote_tNoteData for created note          */ 02166000
*/*          WRITE    1 ixcynote_tNoteData for resultant note        */ 02167000
*/*          REPLACE  1 ixcynote_tNoteData for resultant note        */ 02168000
*/*          READ     1 ixcynote_tNoteData for the note              */ 02169000
*/*          DELETE   1 ixcynote_tNoteData for the note              */ 02170000
*/*                                                                  */ 02171000
*/*                                                                  */ 02172000
*/*                                                                  */ 02173000
*/*      o For REQUEST=NOTES                                         */ 02174000
*/*                                                                  */ 02175000
*/*          ReqType  # Data Records                                 */ 02176000
*/*          -------- - ------------------------                     */ 02177000
*/*          READ     N ixcynote_tNoteData                           */ 02178000
*/*                                                                  */ 02179000
*/*          DELETE   0 -                                            */ 02180000
*/*                                                                  */ 02181000
*/*                                                                  */ 02182000
*/*                                                                  */ 02183000
*/********************************************************************/ 02184000
*                                                                       02185000
* Declare                                                               02186000
*     1 ixcynote_tAnsArea TYPE bdy(dword), /* Header for AnsArea        02187000
*                                      returned by IXCNOTE           */ 02188000
*       3 aa_Version fixed(8),      /* Version of data within this      02189000
*                                      header.  Initially zero.  May    02190000
*                                      be nonzero in the future to      02191000
*                                      indicate presence of new or      02192000
*                                      changed information in the       02193000
*                                      header.                       */ 02194000
*       3 * char(1),                /* Reserved                      */ 02195000
*       3 aa_DetailsFormat fixed(16), /* Code to indicate what data     02196000
*                                      (mapping) was stored in          02197000
*                                      aa_Details.  See constants       02198000
*                                      whose names begin with           02199000
*                                      ixcynote_kDetails.            */ 02200000
*       3 aa_AnsAreaSize   fixed(32), /* Number of bytes stored         02201000
*                                      in the answer area            */ 02202000
*       3 aa_OffsetDataRecord fixed, /* This field is nonzero if the    02203000
*                                      data record "expected" for a     02204000
*                                      "successful" request was         02205000
*                                      returned in the answer area.     02206000
*                                      If nonzero, it indicates         02207000
*                                      relative to the start of the     02208000
*                                      answer area, the offset at       02209000
*                                      which the data record was        02210000
*                                      stored.  If nonzero, this        02211000
*                                      offset will be the same offset   02212000
*                                      as reported in the first entry   02213000
*                                      of the data locators array       02214000
*                                      (ixcynote_tDataLocators).  Note  02215000
*                                      that this field being zero does  02216000
*                                      not necessarily imply that no    02217000
*                                      data records were returned.   */ 02218000
*       3 aa_#DataLocators fixed(32), /* Number of data locators        02219000
*                                      returned in aa_DataLocators.  */ 02220000
*       3 aa_OffsetDataLocators fixed, /* Relative to the start of the  02221000
*                                      answer area, the offset at       02222000
*                                      which the array of data          02223000
*                                      locators can be found.  Each     02224000
*                                      locator can be used to locate a  02225000
*                                      data record in the answer area.  02226000
*                                      Valid for use if                 02227000
*                                      aa_#DataLocators is nonzero.  */ 02228000
*                                                                       02229000
*       3 aa_AnsAreaSizeNeeded fixed, /* Number of bytes of storage     02230000
*                                      needed for the answer area.      02231000
*                                                                       02232000
*                                      For cases where some but not     02233000
*                                      all of the requested data        02234000
*                                      records were returned,           02235000
*                                      (ixcnoteRsnMoreData), this       02236000
*                                      field indicates the number of    02237000
*                                      bytes needed to hold all of the  02238000
*                                      records that could have been     02239000
*                                      stored in the AnsArea had it     02240000
*                                      been large enough.               02241000
*                                                                       02242000
*                                      For cases where no data records  02243000
*                                      were returned because the        02244000
*                                      answer area was too small        02245000
*                                      (ixcnoteRsnAnsLenMore), this     02246000
*                                      field indicates the minimum      02247000
*                                      number of bytes required in      02248000
*                                      order to obtain the minimum      02249000
*                                      required number of data          02250000
*                                      records.  Reissuing the request  02251000
*                                      with an AnsArea at least as      02252000
*                                      large as this minimum size will  02253000
*                                      allow some data to be returned.  02254000
*                                      Depending on the request, this   02255000
*                                      minimum size may not be large    02256000
*                                      enough to hold all of the        02257000
*                                      relevant records that could be   02258000
*                                      returned.                        02259000
*                                                                       02260000
*                                      In all other cases, the content  02261000
*                                      of this field is undefined.   */ 02262000
*       3 * char(8),                /* Reserved                      */ 02263000
*       3 aa_Details char(32) bdy(word), /* Contains additional data    02264000
*                                      about the result of the          02265000
*                                      request.  Content will vary      02266000
*                                      according to the type and        02267000
*                                      result of the IXCNOTE request    02268000
*                                      that was issued.  A nonzero      02269000
*                                      value in aa_DetailsFormat        02270000
*                                      indicates that aa_Details        02271000
*                                      contains data.  That value also  02272000
*                                      indicates which of the           02273000
*                                      ixcynote_tDetails mappings       02274000
*                                      should be used to interpret      02275000
*                                      aa_details.                   */ 02276000
*       3 * char(0);                                                    02277000
*                                                                       02278000
*    /* The conditions indicated by the flags in ixcynote_tWhyQuiesced  02279000
*       are not necessarily inclusive of all conditions that might      02280000
*       exist at a given time.  For example, when a request is          02281000
*       rejected due to a quiescing condition, the report might only    02282000
*       include the specific condition that led to rejection of the     02283000
*       request.  However, other applicable conditions may be included  02284000
*       when the information is readily available.                   */ 02285000
*                                                                       02286000
*Declare                                                                02287000
*  1 ixcynote_tWhyQuiesced TYPE char(1), /* Flags to indicate why a     02288000
*                                      connection is quiesced        */ 02289000
*    3 wq_BeingCreated bit,         /* ON if the note pad or            02290000
*                                      connection is still in the       02291000
*                                      midst of being created.       */ 02292000
*    3 wq_NotepadProcess bit,       /* ON if the note pad is engaged in 02293000
*                                      a process (such as structure     02294000
*                                      rebuild) that would elongate     02295000
*                                      normal response times for note   02296000
*                                      requests.                     */ 02297000
*    3 wq_NotepadAccess bit,        /* ON if the system does not have   02298000
*                                      access to the coupling facility  02299000
*                                      structure that contains the      02300000
*                                      note pad.                     */ 02301000
*    3 wq_BeingDeleted bit,         /* ON if the note pad or            02302000
*                                      connection is in the midst of    02303000
*                                      being deleted                 */ 02304000
*    3 * bit(3),                    /* reserved                      */ 02305000
*    3 wq_CatalogAccess bit;        /* ON if system does not have       02306000
*                                      access to the coupling facility  02307000
*                                      structure that XCF uses to       02308000
*                                      manage note pads.             */ 02309000
*                                                                       02310000
*Declare                                                                02311000
*  1 ixcynote_tWhyImpaired TYPE char(1), /* Flags to indicate why a     02312000
*                                      connection is impaired        */ 02313000
*    3 wi_ForConstraints bit,       /* ON if the connection is          02314000
*                                      impaired because XCF cannot      02315000
*                                      currently provide the number of  02316000
*                                      notes requested by the creator   02317000
*                                      of the note pad.              */ 02318000
*    3 * bit(7);                    /* reserved                      */ 02319000
*                                                                       02320000
*/* Possible values for aa_DetailsFormat                             */ 02321000
*Declare                                                                02322000
*  ixcynote_kDetailsNone         constant('00'x) /* none provided    */ 02323000
* ,ixcynote_kDetailsResumed      constant('01'x)                        02324000
* ,ixcynote_kDetailsQuiesced     constant('02'x)                        02325000
* ,ixcynote_kDetailsConstrained  constant('03'x)                        02326000
* ,ixcynote_kDetailsNoSafAuth    constant('04'x)                        02327000
* ,ixcynote_kDetailsNoResources  constant('05'x)                        02328000
* ,ixcynote_kDetailsNoStructures constant('06'x)                        02329000
* ,ixcynote_kDetailsCriteria     constant('07'x)                        02330000
* ,ixcynote_kDetailsDeleteNP     constant('08'x)                        02331000
* ,ixcynote_kDetailsAccess       constant('09'x)                        02332000
* ,ixcynote_kDetailsNote         constant('0A'x)                        02333000
* ,ixcynote_kDetailsNotes        constant('0B'x)                        02334000
* ,ixcynote_kDetailsBufLen       constant('0C'x)                        02335000
* ,ixcynote_kDetailsModify#Notes constant('0D'x)   /*            @L2A*/ 02336000
* ;                                                                     02337000
*                                                                       02338000
*/* Maps aa_details REQUEST=CONNECTION REQTYPE=PAUSE RC=0            */ 02339000
*/* Maps aa_details for RC=4 RSN=ixcnoteRsnResumed                   */ 02340000
*/*      aa_DetailsFormat = ixcynote_kDetailsResumed                 */ 02341000
*Declare                                                                02342000
*  1 ixcynote_tDetailsResumed TYPE bdy(word),                           02343000
*    3 dr_ResumeCode fixed(8),      /* Code indicating the event that   02344000
*                                      triggered the resume.         */ 02345000
*    3 dr_Quiesced isaWhyQuiesced,  /* flags to explain                 02346000
*                                      why connection is quiesced       02347000
*                                      (1 byte)                      */ 02348000
*    3 dr_Impaired isaWhyImpaired,  /* flags to explain why             02349000
*                                      the connection is impaired       02350000
*                                      (1 byte)                      */ 02351000
*    3 * char(1),                   /* reserved                      */ 02352000
*    3 dr_TimeOutValue fixed(16),   /* TIMEOUT value specified for the  02353000
*                                      IXCNOTE REQUEST=CONNECTION,      02354000
*                                      REQTYPE=PAUSE request.  Zero if  02355000
*                                      TIMEOUT=XCF was specified or     02356000
*                                      defaulted to.                 */ 02357000
*    3 * char(14),                  /* reserved                      */ 02358000
*    3 * char(0);                                                       02359000
*                                                                       02360000
*/* Possible values for dr_ResumeCode                                */ 02361000
*Declare                                                                02362000
*  ixcynote_kResumeNone             constant('00'x)                     02363000
* ,ixcynote_kResumeRequest          constant('01'x) /*IXCNOTE RESUME */ 02364000
* ,ixcynote_kResumeNotePadFailed    constant('02'x)                     02365000
* ,ixcynote_kResumeUnQuiesced       constant('03'x)                     02366000
* ,ixcynote_kResumeConnectorFailed  constant('04'x)                     02367000
* ,ixcynote_kResumeNotePadDeleted   constant('05'x)                     02368000
* ,ixcynote_kResumeConnectorDeleted constant('06'x)                     02369000
*                                                                       02370000
* ,ixcynote_kResumeTimeOut          constant('08'x)                     02371000
* ,ixcynote_kResumeStrAvail         constant('09'x)                     02372000
* ,ixcynote_kResumeNpAvail          constant('0A'x)                     02373000
* ,ixcynote_kResumeBeingDeleted     constant('0B'x)                     02374000
* ,ixcynote_kResumeXcfError         constant('0C'x)                     02375000
* ;                                                                     02376000
*                                                                       02377000
*/* Maps aa_details for RC=C RSN=ixcnoteRsnQuiesced                  */ 02378000
*/* Maps aa_details for REQUEST=CONNECTION REQTYPE=CREATE            */ 02379000
*/*      for RC=4 RSN=ixcnoteRsnPending                              */ 02380000
*/* Maps aa_details for REQUEST=CONNECTION REQTYPE=DELETE for some   */ 02381000
*/*      rejects due to RC=4 RSN=ixcnoteRsnPending                   */ 02382000
*/*                                                                  */ 02383000
*/*      aa_DetailsFormat = ixcynote_kDetailsQuiesced                */ 02384000
*Declare                                                                02385000
*  1 ixcynote_tDetailsQuiesced TYPE bdy(word),                          02386000
*    3 DQ_Quiesced isaWhyQuiesced,  /* Flags to indicate                02387000
*                                      why connection is quiesced    */ 02388000
*    3 * char(31),                  /* reserved                      */ 02389000
*    3 * char(0);                                                       02390000
*                                                                       02391000
*/* Maps aa_details for RC=8 RSN=ixcnoteRsn#NotesExceeded            */ 02392000
*/* Maps aa_details for RC=C RSN=ixcnoteRsnConstrained               */ 02393000
*/*                                                                  */ 02394000
*/*      aa_DetailsFormat = ixcynote_kDetailsConstrained             */ 02395000
*/*                                                                  */ 02396000
*/*   Note that the data returned in the details does not provide an */ 02397000
*/*   atomic view of the note pad or the containing CF structure.    */ 02398000
*/*   Thus the counts of notes and the counts of list entries will   */ 02399000
*/*   not necessarily be self consistent.  Furthermore, the data is  */ 02400000
*/*   obtained asynchronously to the operation that encountered the  */ 02401000
*/*   limit on the number of notes or the constraint condition.      */ 02402000
*/*                                                                  */ 02403000
*Declare                                                                02404000
*  1 ixcynote_tDetailsConstrained TYPE bdy(word),                       02405000
*    3 dc_#NotesInUse fixed(32),    /* Number of notes that currently   02406000
*                                      exist in the note pad.  May      02407000
*                                      include notes that are pending   02408000
*                                      deletion.                     */ 02409000
*    3 dc_#NotesAllowed fixed(32),  /* Maximum number of notes that     02410000
*                                      the note pad is currently        02411000
*                                      allowed to hold.  This value     02412000
*                                      will normally equal the number   02413000
*                                      of notes requested by the        02414000
*                                      creator of the note pad.  This   02415000
*                                      value may change during the      02416000
*                                      life of the note pad.     @L2C*/ 02417000
*    3 dc_#EntriesInUse fixed(32),  /* Number of list entries in use    02418000
*                                      in the list structure that       02419000
*                                      contains the note pad.           02420000
*                                      Zero if data not provided.       02421000
*                                      Some of the entries in use could 02422000
*                                      be used by XCF for things other  02423000
*                                      than notes.                   */ 02424000
*    3 dc_#EntriesAllowed fixed(32), /* Number of list entries that     02425000
*                                      the structure can hold.  This    02426000
*                                      value may change during the      02427000
*                                      life of the structure.           02428000
*                                      Zero if data not provided.       02429000
*                                      Not all of the entries allowed   02430000
*                                      are necessarily available for    02431000
*                                      notes.                        */ 02432000
*    3 dc_#ElementsInUse fixed(32), /* Number of data elements in use   02433000
*                                      in the list structure that       02434000
*                                      contains the note pad.           02435000
*                                      Zero if data not provided.       02436000
*                                      Some of the elements in use      02437000
*                                      could be used by XCF for things  02438000
*                                      other than notes.             */ 02439000
*    3 dc_#ElementsAllowed fixed(32), /* Number of data elements that   02440000
*                                      the structure can hold.  This    02441000
*                                      value may change during the      02442000
*                                      life of the structure.           02443000
*                                      Zero if data not provided.       02444000
*                                      Not all of the elements allowed  02445000
*                                      are necessarily available for    02446000
*                                      notes.                        */ 02447000
*    3 * char(0);                                                       02448000
*                                                                       02449000
*/* Maps aa_details for RC=8 RSN=ixcnoteRsnNoSafAuth                 */ 02450000
*/*      aa_DetailsFormat = ixcynote_kDetailsNoSafAuth               */ 02451000
*Declare                                                                02452000
*  1 ixcynote_tDetailsNoSafAuth TYPE bdy(word),                         02453000
*    3 dnsa_RcSAF fixed,            /* Return code from SAF          */ 02454000
*    3 dnsa_RcRACF fixed,           /* Return code from RACF (or        02455000
*                                      equivalent security product)  */ 02456000
*    3 dnsa_RsRACF fixed,           /* Reason code from RACF (or        02457000
*                                      equivalent security product)  */ 02458000
*    3 * char(8),                   /* reserved                      */ 02459000
*    3 * char(0);                                                       02460000
*                                                                       02461000
*/* Maps aa_details for REQUEST=CONNECTION REQTYPE=DELETE for some   */ 02462000
*/*      rejects due to RC=4 RSN=ixcnoteRsnPending                   */ 02463000
*/* Maps aa_details for REQUEST=NOTEPAD REQTYPE=MODIFY for       @L2A*/ 02464000
*/*      rejects due to RC=4 RSN=ixcnoteRsnPending                   */ 02465000
*/* Maps aa_details for RC=C RSN=ixcnoteRsnNoSysResources            */ 02466000
*/* Maps aa_details for RC=C RSN=ixcnoteRsnNotConfigured             */ 02467000
*/* Maps aa_details for RC=10x (in some cases)                       */ 02468000
*/*                                                                  */ 02469000
*/*      aa_DetailsFormat = ixcynote_kDetailsNoResources             */ 02470000
*Declare                                                                02471000
*  1 ixcynote_tDetailsNoResources TYPE bdy(word),                       02472000
*    3 dnr_DiagnosticID fixed(32),  /* Standard internal XCF            02473000
*                                      diagnostic ID of provider of     02474000
*                                      this data (meaningful to IBM     02475000
*                                      service personnel).       @L1C*/ 02476000
*    3 dnr_ResourceID fixed,        /* Code to identify the particular  02477000
*                                      resource that could not be       02478000
*                                      obtained.                     */ 02479000
*    3 dnr_ServiceID fixed,         /* Code to identify the service     02480000
*                                      routine that provided the        02481000
*                                      return and reason code below.    02482000
*                                      The constants whose names begin  02483000
*                                      with ixcynote_kServiceID         02484000
*                                      identify the service that        02485000
*                                      failed.                       */ 02486000
*    3 dnr_RetCode fixed,           /* Return code from service that    02487000
*                                      was called to get resource    */ 02488000
*    3 dnr_RsnCode fixed,           /* Reason code from service that    02489000
*                                      was called to get resource    */ 02490000
*    3 dnr_Diagnostics char(12),    /* Additional diagnostic data for   02491000
*                                      IBM service personnel.        */ 02492000
*    3 * char(0);                                                       02493000
*                                                                       02494000
*/* Possible values for dnr_ServiceID.  These codes identify the        02495000
*   particular service that failed.                                  */ 02496000
*Declare                                                                02497000
*  ixcynote_kServiceID_Storage  constant(1) /* STORAGE macro         */ 02498000
* ,ixcynote_kServiceID_Ieavape  constant(2) /* IEAVAPE macro         */ 02499000
* ,ixcynote_kServiceID_IXLLSTE  constant(3) /* IXLLSTE macro         */ 02500000
* ,ixcynote_kServiceID_IXLLSTM  constant(4) /* IXLLSTM macro         */ 02501000
* ,ixcynote_kServiceID_CFRM     constant(5) /* CFRM policy           */ 02502000
* ,ixcynote_kServiceID_IXLFCOMP constant(6) /* IXLFCOMP macro        */ 02503000
* ,ixcynote_kServiceID_IXLCONN  constant(7) /* IXLCONN macro         */ 02504000
* ,ixcynote_kServiceID_IXCSEND  constant(8) /* IXCSEND macro         */ 02505000
* ,ixcynote_kServiceID_IXCRECV  constant(9) /* IXCRECV macro         */ 02506000
* ,ixcynote_kServiceID_IARV64   constant(0Ax) /* IARV64 macro        */ 02507000
* ,ixcynote_kServiceID_ALESERV  constant(0Bx) /* ALESERV macro       */ 02508000
* ,ixcynote_kServiceID_IXLLSTC  constant(0Cx) /* IXLLSTC macro       */ 02509000
* ,ixcynote_kServiceID_IXLUSYNC constant(0Dx) /* IXLUSYNC macro      */ 02510000
* ,ixcynote_kServiceID_IXCNOTE  constant(0Ex) /* IXCNOTE macro       */ 02511000
* ,ixcynote_kServiceID_NoReply  constant(0Fx) /* XCF Note Pad server    02512000
*                                      was unable to provide a reply */ 02513000
*;                                                                      02514000
*                                                                       02515000
*                                                                       02516000
*/* Maps aa_details for RC=C RSN=ixcnoteRsnNoStrResources            */ 02517000
*/*      aa_DetailsFormat = ixcynote_kDetailsNoStructures            */ 02518000
*Declare                                                                02519000
*  1 ixcynote_tDetailsNoStructures TYPE bdy(word),                      02520000
*    3 dns_Flags char(4),                                               02521000
*      5 dns_Flags1 char(1),                                            02522000
*        7 dns_SYSXCFxxDefined bit, /* ON if note pad structure names   02523000
*                                      of the form IXCNP_SYSXCFxx are   02524000
*                                      defined in the CFRM policy.   */ 02525000
*        7 dns_OWNERxxDefined bit, /* ON if note pad structure names    02526000
*                                      of the form IXCNP_ownerxx are    02527000
*                                      defined in the CFRM policy,      02528000
*                                      where "owner" is extracted       02529000
*                                      from the first section of the    02530000
*                                      note pad name.                */ 02531000
*        7 dns_StrNotConnected bit, /* ON if one or more of the         02532000
*                                      candidate structures was         02533000
*                                      unusable because the local       02534000
*                                      system did not have              02535000
*                                      connectivity to the coupling     02536000
*                                      facility that contains it.    */ 02537000
*        7 dns_StrNotAllocated bit, /* ON if one or more of the         02538000
*                                      candidate structures was         02539000
*                                      unusable because it could not    02540000
*                                      be allocated by XES.          */ 02541000
*        7 dns_StrMoreNotes bit,    /* ON if one or more of the         02542000
*                                      candidate structures was         02543000
*                                      unusable because it did not have 02544000
*                                      sufficient note space        */  02545000
*        7 dns_StrMoreLists bit,    /* ON if one or more of the         02546000
*                                      candidate structures was         02547000
*                                      unusable because it did not have 02548000
*                                      sufficient lists for another     02549000
*                                      note pad                      */ 02550000
*        7 dns_StrQuiesced bit,     /* ON if one or more of the         02551000
*                                      candidate structures was         02552000
*                                      unusable because it was          02553000
*                                      quiesced.                     */ 02554000
*        7 * bit(1),                /* reserved                      */ 02555000
*      5 * char(3),                 /* reserved                      */ 02556000
*    3 dns_#Structures fixed,       /* count of the number of           02557000
*                                      structures considered.        */ 02558000
*    3 * char(0);                                                       02559000
*                                                                       02560000
*/* Maps aa_details for RC=8 RSN=ixcnoteRsnCriteriaBadVal            */ 02561000
*/*      aa_DetailsFormat = ixcynote_kDetailsCriteria                */ 02562000
*Declare                                                                02563000
*  1 ixcynote_tDetailsCriteria TYPE bdy(word),                          02564000
*    3 dc_Criteria# fixed(32),      /* Index of the entry in the        02565000
*                                      criteria array that did not      02566000
*                                      have valid content.  Zero        02567000
*                                      implies the content of           02568000
*                                      ixcynote_tSelectionCriteria is   02569000
*                                      not valid.  Indices greater      02570000
*                                      than zero identify the index of  02571000
*                                      the criteria record that had     02572000
*                                      the problem.                  */ 02573000
*    3 dc_CriteriaProblem fixed,    /* Code to indicate what was wrong  02574000
*                                      with the indicated entry. See    02575000
*                                      constants with names beginning   02576000
*                                      with ixcynote_kDCCP           */ 02577000
*    3 dc_Attempted# fixed(32),     /* Index of the last entry in the   02578000
*                                      criteria array for which an      02579000
*                                      attempt was made to perform      02580000
*                                      the requested processing.  Zero  02581000
*                                      implies no notes were processed. 02582000
*                                      Indices greater than zero        02583000
*                                      identify the index of            02584000
*                                      the criteria record that may     02585000
*                                      have been processed.          */ 02586000
*    3 * char(0);                                                       02587000
*                                                                       02588000
*Declare                            /* Values for dc_CriteriaProblem */ 02589000
*  ixcynote_kDCCP_BadType          constant(1), /* sc_type invalid   */ 02590000
*  ixcynote_kDCCP_BadRsvd          constant(2), /* reserved not zero */ 02591000
*  ixcynote_kDCCP_Bad#Records      constant(3), /* sc_#records is 0     02592000
*                                      or exceeds maximum allowed       02593000
*                                      for the specified sc_type     */ 02594000
*  ixcynote_kDCCP_BadTagRange      constant(4), /* mintag > maxtag   */ 02595000
*  ixcynote_kDCCP_BadConnectionID  constant(5), /* invalid format    */ 02596000
*  ixcynote_kDCCP_BadStg           constant(6), /* inaccessible      */ 02597000
*  ixcynote_kDCCP_BadFilters       constant(7); /* sbcid_Filters        02598000
*                                      excluded all possible notes   */ 02599000
*                                                                       02600000
*                                                                       02601000
*/* Maps aa_details for RC=8 RSN=ixcnoteRsnNotepadInUse              */ 02602000
*/*      aa_DetailsFormat = ixcynote_kDetailsDeleteNP                */ 02603000
*Declare                                                                02604000
*  1 ixcynote_tDetailsDeleteNP TYPE bdy(word),                          02605000
*    3 ddnp_Attributes char(4),                                         02606000
*      5 ddnp_HasConnections bit,   /* ON if the note pad has           02607000
*                                      connections                   */ 02608000
*      5 ddnp_HasNotes bit,         /* ON if the note pad has notes  */ 02609000
*    3 * char(0);                                                       02610000
*                                                                       02611000
*/* Maps aa_details for RC=8 RSN=ixcnoteRsnConnectionBadAccess       */ 02612000
*/*      aa_DetailsFormat = ixcynote_kDetailsAccess                  */ 02613000
*Declare                                                                02614000
*  1 ixcynote_tDetailsAccess TYPE bdy(word),                            02615000
*    3 da_Attributes char(4),                                           02616000
*      5 da_CanRead bit,            /* ON if the connection has read    02617000
*                                      access to the note pad. The      02618000
*                                      connection can read notes.    */ 02619000
*      5 da_CanWrite bit,           /* ON if the connection has write   02620000
*                                      access to the note pad. The      02621000
*                                      connection can create, write,    02622000
*                                      replace, and delete notes.    */ 02623000
*      5 da_MustBeAuthorized bit,   /* ON if the program using the      02624000
*                                      connection must be running in    02625000
*                                      supervisor state or with a PKM   02626000
*                                      allowing key 0..7.  OFF implies  02627000
*                                      the connection can be used by    02628000
*                                      any program running in the       02629000
*                                      address space associated with    02630000
*                                      the connection.               */ 02631000
*    3 * char(0);                                                       02632000
*                                                                       02633000
*/* Maps aa_details for REQUEST=NOTE RC=0.                           */ 02634000
*/*      aa_DetailsFormat = ixcynote_kDetailsNote                    */ 02635000
*Declare                                                                02636000
*  1 ixcynote_tDetailsNote TYPE bdy(word),                              02637000
*    3 dn_Attributes char(4),                                           02638000
*      5 dn_Deferred bit,           /* ON if the request was deferred.  02639000
*                                      For example, a request to        02640000
*                                      delete a note might be deferred  02641000
*                                      in order to ensure that XCF can  02642000
*                                      properly track the maximium      02643000
*                                      note tag value.               */ 02644000
*    3 dn_#NotesInUse fixed(32),    /* This field is set for RC=0.      02645000
*                                      Number of notes that currently   02646000
*                                      exist in the note pad.  May      02647000
*                                      include notes that are pending   02648000
*                                      deletion.                     */ 02649000
*    3 dn_#NotesAllowed fixed(32),  /* This field is set for RC=0.      02650000
*                                      Maximum number of notes that     02651000
*                                      the note pad is currently        02652000
*                                      allowed to hold.  This value     02653000
*                                      will normally equal the number   02654000
*                                      of notes requested by the        02655000
*                                      creator of the note pad.  This   02656000
*                                      value may change during the      02657000
*                                      life of the note pad.     @L2A*/ 02658000
*    3 * char(0);                                                       02659000
*                                                                       02660000
*/* Maps aa_details for REQUEST=NOTES RC=0                           */ 02661000
*/* Maps aa_details for REQUEST=NOTES RC=4 RSN=ixcnoteRsnMoreNotes   */ 02662000
*/*      aa_DetailsFormat = ixcynote_kDetailsNotes                   */ 02663000
*Declare                                                                02664000
*  1 ixcynote_tDetailsNotes TYPE bdy(word),                             02665000
*    3 dnotes_#Processed fixed(32), /* The number of notes that were    02666000
*                                      processed.  For REQTYPE=READ,    02667000
*                                      the number of note data records  02668000
*                                      stored in the answer area.       02669000
*                                      For REQTYPE=DELETE, the number   02670000
*                                      of notes known to have been      02671000
*                                      deleted by the request (if the   02672000
*                                      request does not run to          02673000
*                                      completion, this count could     02674000
*                                      be low).                      */ 02675000
*    3 dnotes_Max#NotesAnsArea fixed(32), /* The maximum number of      02676000
*                                      notes that can be stored in the  02677000
*                                      specified ANSAREA.            */ 02678000
*    3 dnotes_Max#NotesBuffer fixed(32), /* The maximum number of       02679000
*                                      notes that can be stored in the  02680000
*                                      specified BUFFER, assuming each  02681000
*                                      note is the maximum size         02682000
*                                      supported by the note pad.    */ 02683000
*    3 dnotes_NoteAnsLen      fixed(16), /* The number of bytes needed  02684000
*                                      in the answer area for each      02685000
*                                      note (data record size).     */  02686000
*    3 dnotes_NoteBufLen      fixed(16), /* The number of bytes needed  02687000
*                                      in the BUFFER area for each      02688000
*                                      note (equals maximum note size   02689000
*                                      supported by the note pad).   */ 02690000
*    3 * char(0);                                                       02691000
*                                                                       02692000
*/* Maps aa_details for RC=8 RSN=ixcnoteRsnBufLenBadVal              */ 02693000
*/*      aa_DetailsFormat = ixcynote_kDetailsBufLen                  */ 02694000
*/*                                                                  */ 02695000
*/*                                                                  */ 02696000
*/*   If the request is rejected because the input BUFLEN was too    */ 02697000
*/*   small to hold the note content, dn_NoteBufLen will indicate    */ 02698000
*/*   the current size of the note.  Retrying the request with a     */ 02699000
*/*   buffer whose BUFLEN is at least as large as the size indicated */ 02700000
*/*   by dbl_NoteBufLen will allow the request to proceed.  However, */ 02701000
*/*   the retry could fail yet again with an invalid BUFLEN value if */ 02702000
*/*   the size of the note increases before the retry request can be */ 02703000
*/*   processed.                                                     */ 02704000
*/*                                                                  */ 02705000
*Declare                                                                02706000
*  1 ixcynote_tDetailsBufLen TYPE bdy(word),                            02707000
*    3 dbl_NoteBufLen fixed,        /* Content varies according to the  02708000
*                                      problem detected and the type    02709000
*                                      of request:                      02710000
*                                                                       02711000
*                                        If the input BUFLEN value was  02712000
*                                        NOT a multiple of 1024,        02713000
*                                        equals the number of bytes of  02714000
*                                        storage required to hold the   02715000
*                                        content of the largest note    02716000
*                                        supported by the note pad      02717000
*                                        (the maximum note size).       02718000
*                                                                       02719000
*                                      Otherwise:                       02720000
*                                                                       02721000
*                                        For REQUEST=NOTE with a        02722000
*                                        REQTYPE of READ or DELETE,     02723000
*                                        the number of bytes needed in  02724000
*                                        the BUFFER area to obtain the  02725000
*                                        content of the designated      02726000
*                                        note.                          02727000
*                                                                       02728000
*                                        For REQTYPE of CREATE, WRITE,  02729000
*                                        or REPLACE, equals the         02730000
*                                        maximum note size.             02731000
*                                                                       02732000
*                                        For REQUEST=NOTES with         02733000
*                                        REQTYPE=READ, the minimum      02734000
*                                        number of bytes needed in the  02735000
*                                        buffer to read the next note.  02736000
*                                                                    */ 02737000
*    3 * char(0);                                                       02738000
*                                                                       02739000
*/* Maps aa_details for REQUEST=NOTEPAD REQTYPE=MODIFY RC=0      @L2A*/ 02740000
*/* Maps aa_details for RC=C RSN=ixcnoteRsnNo#NotesStrResources  @L2A*/ 02741000
*/* Maps aa_details for RC=C RSN=ixcnoteRsn#NotesDecreaseNotValid    */ 02742000
*/*      aa_DetailsFormat = ixcynote_kDetailsModify#Notes        @L2A*/ 02743000
*/*                                                                  */ 02744000
*/*   Note that the data returned in the details does not provide an */ 02745000
*/*   atomic view of the note pad or the containing CF structure.    */ 02746000
*/*   Thus the counts of notes and the counts of list entries will   */ 02747000
*/*   not necessarily be self consistent.  Furthermore, the data is  */ 02748000
*/*   obtained asynchronously to the operation that encountered the  */ 02749000
*/*   limit on the number of notes or the constraint condition.  @L2A*/ 02750000
*/*                                                                  */ 02751000
*/*   If the request is rejected with an IXCNOTE reason code of      */ 02752000
*/*   ixcnoteRsnNo#NotesStrResources, the difference between         */ 02753000
*/*   dm#n_#EntriesAllowed and dm#n_#EntriesReserved can be used to  */ 02754000
*/*   approximate how many additional notes a note pad may be        */ 02755000
*/*   allowed to reserve for use. Note that the returned values      */ 02756000
*/*   in aa_details are based on counts obtained at the time the     */ 02757000
*/*   request failed and may have changed based on subsequent        */ 02758000
*/*   structure and note pad activity.                           @L2A*/ 02759000
*/*                                                                  */ 02760000
*Declare                                                                02761000
*  1 ixcynote_tDetailsModify#Notes TYPE Bdy(Word),           /*  @L2A*/ 02762000
*    3 dm#n_#NotesInUse fixed(32),   /* Number of notes that currently  02763000
*                                       exist in the note pad.          02764000
*                                       Zero if data not provided. May  02765000
*                                       include notes that are pending  02766000
*                                       deletion.                @L2A*/ 02767000
*    3 dm#n_#NotesAllowed fixed(32), /* Maximum number of notes that    02768000
*                                       the note pad is currently       02769000
*                                       allowed to hold as a result of  02770000
*                                       the MODIFY request.      @L2A*/ 02771000
*    3 dm#n_#EntriesInUse fixed(32), /* Number of list entries in use   02772000
*                                       in the list structure that      02773000
*                                       contains the note pad.          02774000
*                                       Zero if data not provided. Some 02775000
*                                       of the entries in use could     02776000
*                                       be used by XCF for things       02777000
*                                       other than notes.        @L2A*/ 02778000
*    3 dm#n_#EntriesAllowed fixed(32), /* Number of list entries that   02779000
*                                       the structure can hold. This    02780000
*                                       value may change during the     02781000
*                                       life of the structure.          02782000
*                                       Zero if data not provided.      02783000
*                                       Not all of the entries are      02784000
*                                       necessarily available for       02785000
*                                       notes.                   @L2A*/ 02786000
*    3 dm#n_#ElementsInUse fixed(32), /* Number of data elements in use 02787000
*                                       in the list structure that      02788000
*                                       contains the note pad.          02789000
*                                       Zero if data not provided.      02790000
*                                       Some of the elements in use     02791000
*                                       could be used by XCF for        02792000
*                                       things other than notes. @L2A*/ 02793000
*    3 dm#n_#ElementsAllowed fixed(32), /* Number of data elements that 02794000
*                                       the structure can hold.  This   02795000
*                                       value may change during the     02796000
*                                       life of the structure.          02797000
*                                       Zero if data not provided. Not  02798000
*                                       all of the elements allowed     02799000
*                                       are necessarily available for   02800000
*                                       notes.                   @L2A*/ 02801000
*    3 dm#n_#NotesRequested fixed(32), /* This field is set for RC=C.   02802000
*                                         This is the number of notes   02803000
*                                         requested by the IXCNOTE      02804000
*                                         REQTYPE=MODIFY request that   02805000
*                                         did not complete successfully 02806000
*                                         due to an environment error   02807000
*                                         identified by the returned    02808000
*                                         reason code.           @L2A*/ 02809000
*    3 dm#n_#EntriesReserved fixed(32), /* This field is set for RC=C.  02810000
*                                          Number of data entries       02811000
*                                          reserved for XCF and for     02812000
*                                          note pads in the list        02813000
*                                          structure that contains      02814000
*                                          the note pad          @L2A*/ 02815000
*    3 * char(0);                      /*                        @L2A*/ 02816000
*                                                                       02817000
*Declare                                                                02818000
*  1 ixcynote_tDataLocator TYPE bdy(dword),                             02819000
*    3 dl_Type fixed(8),            /* Code to indicate how to map the  02820000
*                                      data records that can be         02821000
*                                      located via this locator.        02822000
*                                      See constants whose names begin  02823000
*                                      with ixcynote_kData.          */ 02824000
*    3 dl_Level fixed(8),           /* Level of data provided in the    02825000
*                                      data records.  Initially zero.   02826000
*                                      May be nonzero in the future to  02827000
*                                      indicate presence of new or      02828000
*                                      changed information in the       02829000
*                                      data records.  Different types   02830000
*                                      of data records could have       02831000
*                                      different levels.             */ 02832000
*    3 dl_Size fixed(16),           /* Length in bytes of one data      02833000
*                                      record.  If more than one data   02834000
*                                      record is returned, use this     02835000
*                                      size to advance to the next      02836000
*                                      data record.                  */ 02837000
*    3 dl_#Records fixed(32),       /* Number of data records           02838000
*                                      available at the indicated       02839000
*                                      location.                     */ 02840000
*    3 * char(4),                   /* Reserved.                     */ 02841000
*    3 dl_Offset fixed,             /* Relative to the start of the     02842000
*                                      AnsArea (ixcynote_tAnsArea),     02843000
*                                      the offset at which the first    02844000
*                                      data record of this type         02845000
*                                      resides.                      */ 02846000
*    3 * char(0);                                                       02847000
*                                                                       02848000
*Declare                                                                02849000
*  1 ixcynote_tDataLocators TYPE bdy(dword),                            02850000
*    3 DLN(*) isaDataLocator;       /* Name by which to refer to the    02851000
*                                      array of data locators returned  02852000
*                                      in the answer area.  Resides in  02853000
*                                      the answer area at:              02854000
*                                        address(AnsArea) +             02855000
*                                          aa_OffsetDataLocators.       02856000
*                                                                       02857000
*                                      Each entry in the array          02858000
*                                      identifies the location and      02859000
*                                      type of a data record that was   02860000
*                                      returned in the answer area.  */ 02861000
*                                                                       02862000
*/* Possible values for dl_Type (data record types)                  */ 02863000
*Declare                                                                02864000
*  ixcynote_kData_Notepad       constant('01'x)                         02865000
* ,ixcynote_kData_Connect       constant('02'x)                         02866000
* ,ixcynote_kData_Note          constant('03'x)                         02867000
* ,ixcynote_kData_SysConn       constant('04'x)                         02868000
*;                                                                      02869000
*                                                                       02870000
* Declare                           /* values for aa_Version         */ 02871000
*  ixcynote_kAA_Version0 constant(0);                                   02872000
*                                                                       02873000
* Declare                           /* length of a data locator      */ 02874000
*  ixcynote_kDataLocatorLen constant(length(ixcynote_tDataLocator));    02875000
*                                                                       02876000
*/********************************************************************/ 02877000
*/*                                                                  */ 02878000
*/*  Data Record for a note pad                                      */ 02879000
*/*                                                                  */ 02880000
*/*    Summary                                                       */ 02881000
*/*                                                                  */ 02882000
*/*    Usage                                                         */ 02883000
*/*                                                                  */ 02884000
*/*    Explanation                                                   */ 02885000
*/*                                                                  */ 02886000
*/*                                                                  */ 02887000
*/********************************************************************/ 02888000
*                                                                       02889000
* Declare                                                               02890000
*  1 ixcynote_tNotepadData TYPE bdy(dword), /* note pad data         */ 02891000
*    3 * char(8),                   /* Reserved (type, size, group)  */ 02892000
*    3 npd_Name isaNpName,          /* Name of note pad, mapped by      02893000
*                                      ixcynote_tNotePadName.        */ 02894000
*    3 npd_Description char(32),    /* Description of note pad (from    02895000
*                                      IXCNOTE DESCRIPTION).         */ 02896000
*    3 npd_Info char(64),           /* Information about the note pad   02897000
*                                      provided by the creator (from    02898000
*                                      IXCNOTE INFO).                */ 02899000
*    3 npd_Required#Notes fixed(32), /* Number of notes required for    02900000
*                                      the note pad. Initially the      02901000
*                                      number of notes requested by     02902000
*                                      the creator of the note pad      02903000
*                                      (#NOTES).                        02904000
*                                      When npd_Modifying#Notes is ON,  02905000
*                                      npd_Required#Notes will not      02906000
*                                      reflect the results of the       02907000
*                                      MODIFY #NOTES request until      02908000
*                                      the modify completes.            02909000
*                                      (npd_Modifying#Notes OFF) @L2C*/ 02910000
*    3 * char(4),                   /* Reserved                      */ 02911000
*    3 npd_#NotesInUse fixed(32),   /* Number of notes that currently   02912000
*                                      exist in the note pad. May       02913000
*                                      include notes that are pending   02914000
*                                      deletion.                        02915000
*                                      Contains valid data if           02916000
*                                      npd_Valid#Notes is ON.        */ 02917000
*    3 * fixed(32),                 /* Reserved                      */ 02918000
*    3 npd_flags    char(4),        /*                               */ 02919000
*      5 npd_Valid#Notes bit,       /* ON if npd_#NotesInUse is valid   02920000
*                                      for use.  OFF if the data is     02921000
*                                      not available.                */ 02922000
*      5 npd_ValidMaxTag bit,       /* ON if npd_MaxTag field is        02923000
*                                      valid for use.  Off if the       02924000
*                                      data is not available.        */ 02925000
*      5 npd_ValidLossConnDelete bit,/* ON when npd_LossConnDelete      02926000
*                                      is valid                  @L3A*/ 02927000
*    3 npd_Attributes char(4),      /*                               */ 02928000
*     4 npd_Attributes1 char(1),                                        02929000
*      5 npd_MultiWrite bit,        /* ON if the creator of the         02930000
*                                      note pad specified               02931000
*                                      MULTIWRITE=YES.  OFF if          02932000
*                                      MULTIWRITE=NO was specified.     02933000
*                                                                       02934000
*                                      ON implies the note pad can be   02935000
*                                      used by one or more connectors   02936000
*                                      all of whom are allowed to       02937000
*                                      create, write, or replace notes  02938000
*                                      in the note pad (ACCESS=UPDATE). 02939000
*                                      OFF implies the note pad can     02940000
*                                      have at most one connector with  02941000
*                                      udpate access.                   02942000
*                                                                       02943000
*                                      In either case, the note pad can 02944000
*                                      have multiple connectors who     02945000
*                                      are allowed to read notes in     02946000
*                                      the note pad (ACCESS=READ).   */ 02947000
*      5 npd_TaggingUser bit,       /* ON if the creator of the note    02948000
*                                      pad specified TAGGING=USER, in   02949000
*                                      which case connectors are        02950000
*                                      responsible for assigning note   02951000
*                                      tag values.  OFF if TAGGING=XCF  02952000
*                                      was specified, in which case     02953000
*                                      XCF assigns the note tags.    */ 02954000
*      5 npd_TrackTagCurrent bit,   /* ON if creator of note pad        02955000
*                                      specified TRACKTAG=CURRENT.   */ 02956000
*      5 npd_TrackTagLifetime bit,  /* ON if creator of note pad        02957000
*                                      specified TRACKTAG=LIFETIME.  */ 02958000
*      5 npd_LossConnDelete bit,    /* ON if creator of note pad        02959000
*                                      specified LOSSCONNDELETE=YES.    02960000
*                                      Valid when                       02961000
*                                      npd_ValidLossConnDelete is ON    02962000
*                                                                @L3A*/ 02963000
*      5 npd_InstCompRequired bit,  /* ON if creator of note pad        02964000
*                                      specified INSTCOMP=REQUIRED.  */ 02965000
*      5 npd_DuplexFavor bit,       /* ON if creator of note pad        02966000
*                                      specified DUPLEX=FAVOR.          02967000
*                                      OFF if DUPLEX=AVOID applies.  */ 02968000
*      5 * bit(1),                  /* Reserved.                     */ 02969000
*     4 * char(3),                  /* Reserved.                     */ 02970000
*                                                                       02971000
*    3 npd_Status char(4),          /*                               */ 02972000
*      5 npd_Status_Flags1 bit(8),  /*                               */ 02973000
*        7 npd_Created bit,         /* OFF if the note pad is in the    02974000
*                                      midst of being created.  ON      02975000
*                                      if the note pad was successfully 02976000
*                                      created.                      */ 02977000
*        7 npd_HasConnections bit,  /* ON if the note pad has at least  02978000
*                                      one connection.               */ 02979000
*        7 npd_Quiesced bit,        /* ON if note pad is currently      02980000
*                                      quiesced.  For example, the CF   02981000
*                                      structure containing the note    02982000
*                                      pad is in the midst of rebuild   02983000
*                                      processing.  While quiesced, no  02984000
*                                      connection will be able to       02985000
*                                      access the note pad.  OFF does   02986000
*                                      not necessarily imply that any   02987000
*                                      given connection can access the  02988000
*                                      note pad as there might be       02989000
*                                      local issues (such as a lack of  02990000
*                                      connectivity to the CF           02991000
*                                      containing the note pad) that    02992000
*                                      might prevent such access.    */ 02993000
*        7 npd_Constrained bit,     /* ON if note pad is constrained.   02994000
*                                      XCF cannot guarantee that the    02995000
*                                      number of notes requested by     02996000
*                                      the creator of the note pad      02997000
*                                      will be available to the         02998000
*                                      connectors.                   */ 02999000
*        7 npd_Modifying#Notes bit, /* ON if the note pad #NOTES is     03000000
*                                      in the midst of being modified.  03001000
*                                      OFF if no MODIFY request is      03002000
*                                      in progress.              @L2A*/ 03003000
*        7 * bit(3),                /* Reserved.                     */ 03004000
*      5 npd_Status_Flags2 bit(8),  /* Reserved.                     */ 03005000
*      5 npd_Status_Flags3 bit(8),  /* Reserved.                     */ 03006000
*      5 npd_Status_Flags4 bit(8),  /*                               */ 03007000
*        7 * bit(7),                /* Reserved.                     */ 03008000
*        7 npd_Deleted bit,         /* ON if note pad is in the midst   03009000
*                                      of being deleted.             */ 03010000
*    3 npd_MaxTag char(16),         /* Maximum note TAG value for the   03011000
*                                      note pad.                        03012000
*                                      If npd_TrackTagCurrent=ON,       03013000
*                                      equals the maximum tag value     03014000
*                                      assigned to any note that        03015000
*                                      currently exists in the          03016000
*                                      note pad.                        03017000
*                                      If npd_TrackTagLifetime=ON,      03018000
*                                      equals the maximum tag value     03019000
*                                      assigned to any note that ever   03020000
*                                      existed in the note pad.         03021000
*                                                                       03022000
*                                      Contains valid data if           03023000
*                                      npd_ValidMaxTag is ON.        */ 03024000
*    3 npd_ETodWhenCreated char(16), /* Extended TOD when the note pad  03025000
*                                      was created.  This ETOD can be   03026000
*                                      used to identify the "logical"   03027000
*                                      instance of the note pad which   03028000
*                                      persists from the time the       03029000
*                                      note pad is first created until  03030000
*                                      it is deleted.  It is not        03031000
*                                      changed even if XCF allocates    03032000
*                                      a new physical instance of the   03033000
*                                      note pad.                     */ 03034000
*    3 npd_ETodWhenAllocated char(16), /* Extended TOD when the         03035000
*                                      current physical instantiation   03036000
*                                      of the note pad was allocated.   03037000
*                                      Equals npd_ETodWhenCreated when  03038000
*                                      the note pad is first created.   03039000
*                                      If XCF allocates a new physical  03040000
*                                      instance of the logical note pad 03041000
*                                      instance, this ETOD is updated   03042000
*                                      to indicate that a new physical  03043000
*                                      instance of the logical note pad 03044000
*                                      was allocated.  Exploiters that  03045000
*                                      record the physical location of  03046000
*                                      the note pad (structure name and 03047000
*                                      list number) will need to        03048000
*                                      update their data when this      03049000
*                                      value changes.                */ 03050000
*    3 npd_StrName char(16),        /* Name of the coupling facility    03051000
*                                      structure where the note pad is  03052000
*                                      currently allocated.  Contains   03053000
*                                      EBCDIC blanks if the structure   03054000
*                                      name is not available.  Note     03055000
*                                      that structure name can change   03056000
*                                      over the life of the note pad.   03057000
*                                                                    */ 03058000
*    3 npd_ListNum fixed(32),       /* Within the indicated structure,  03059000
*                                      the list number of the list      03060000
*                                      being used for the note pad.     03061000
*                                      Note that the list number can    03062000
*                                      change over the life of the      03063000
*                                      note pad. Zero if the data is    03064000
*                                      not available.                */ 03065000
*    3 * char(0);                                                       03066000
*                                                                       03067000
*/********************************************************************/ 03068000
*/*                                                                  */ 03069000
*/*  Data Record for a Connection to a note pad                      */ 03070000
*/*                                                                  */ 03071000
*/*    Summary                                                       */ 03072000
*/*                                                                  */ 03073000
*/*    Usage                                                         */ 03074000
*/*                                                                  */ 03075000
*/*    Explanation                                                   */ 03076000
*/*                                                                  */ 03077000
*/*                                                                  */ 03078000
*/********************************************************************/ 03079000
* Declare                                                               03080000
*  1 ixcynote_tConnectData TYPE bdy(dword), /* Describes a              03081000
*                                      connection to a note pad      */ 03082000
*    3 * char(8),                   /* Reserved (type, size, group)  */ 03083000
*    3 cd_Description char(32),     /* Description of the connection    03084000
*                                      provided by the creator of the   03085000
*                                      connection via the IXCNOTE       03086000
*                                      keyword DESCRIPTION.          */ 03087000
*    3 cd_Info char(64),            /* Information about the            03088000
*                                      connection as provided by the    03089000
*                                      creator of the connection via    03090000
*                                      the IXCNOTE keyword INFO.     */ 03091000
*    3 cd_SysName char(8),          /* Name of system where connector   03092000
*                                      resides.                      */ 03093000
*    3 cd_SysID   fixed(32),        /* XCF system ID of the system      03094000
*                                      where connector resides.      */ 03095000
*      5 cd_SysNum fixed(8),        /* System slot number            */ 03096000
*    3 cd_Attributes char(4),       /*                               */ 03097000
*      5 cd_CanRead bit,            /* ON if the connection has read    03098000
*                                      access to the note pad. The      03099000
*                                      connection can read notes.    */ 03100000
*      5 cd_CanWrite bit,           /* ON if the connection has write   03101000
*                                      access to the note pad. The      03102000
*                                      connection can create, write,    03103000
*                                      replace, and delete notes.    */ 03104000
*      5 cd_MustBeAuthorized bit,   /* ON if the program using the      03105000
*                                      connection must be running in    03106000
*                                      supervisor state or with a PKM   03107000
*                                      allowing key 0..7.  OFF implies  03108000
*                                      that the program can be running  03109000
*                                      in any state with any key.    */ 03110000
*      5 cd_TaskScope bit,          /* ON if the connection has         03111000
*                                      task scope.  OFF if the          03112000
*                                      connection has address space     03113000
*                                      scope.                        */ 03114000
*      5 cd_ServerConnection bit,   /* ON if USAGE=SERVER was specified 03115000
*                                      when connection created.      */ 03116000
*      5 cd_ClientConnection bit,   /* ON if USAGE=SERVER was specified 03117000
*                                      when connection created.      */ 03118000
*      5 * bit(26),                 /* Unused (zero)                 */ 03119000
*    3 cd_Status char(4),           /*                               */ 03120000
*      5 cd_Status_Flags1 bit(8),   /*                               */ 03121000
*        7 cd_Paused bit,           /* ON if connection is currently    03122000
*                                      paused as the result of an       03123000
*                                      IXCNOTE REQUEST=CONNECTION       03124000
*                                      REQTYPE=PAUSE request.        */ 03125000
*        7 * bit(7),                /* reserved                      */ 03126000
*      5 cd_Status_Flags2 bit(8),   /*                               */ 03127000
*        7 * bit(8),                /* reserved                      */ 03128000
*      5 cd_Quiesced isaWhyQuiesced, /* Flags to explain                03129000
*                                      why connection is quiesced.      03130000
*                                      Zero if not quiesced (1 byte) */ 03131000
*      5 cd_Impaired isaWhyImpaired, /* Flags to explain                03132000
*                                      why connection is impaired.      03133000
*                                      Non-zero if the connection is    03134000
*                                      impaired (1 byte)             */ 03135000
*    3 cd_UserASID fixed(15),       /* Address space identifier of the  03136000
*                                      address space that created the   03137000
*                                      connection.                   */ 03138000
*    3 cd_TermASID fixed(15),       /* Address space identifier of the  03139000
*                                      address space to which the       03140000
*                                      connection is associated.     */ 03141000
*    3 cd_JobName char(8),          /* Name of job that created the     03142000
*                                      connection.                   */ 03143000
*    3 cd_UserTTOKEN char(16),      /* TTOKEN of the work unit that     03144000
*                                      created the connection.  If      03145000
*                                      created by an SRB, only the      03146000
*                                      STOKEN portion of the TTOKEN     03147000
*                                      is valid.                     */ 03148000
*    3 cd_TermTTOKEN char(16),      /* TTOKEN of the task with which    03149000
*                                      the connection is associated     03150000
*                                      (per TERMINATOR specification).  03151000
*                                      The connection will be deleted   03152000
*                                      if the task terminates.          03153000
*                                      Hex zero if not known.        */ 03154000
*    3 cd_ETodWhenCreated char(16), /* Extended TOD when the connection 03155000
*                                      was created                   */ 03156000
*    3 cd_ConnectionID char(12),    /* XCF assigned identifier for the  03157000
*                                      connection.                   */ 03158000
*    3 * char(4),                   /* Reserved                      */ 03159000
*    3 cd_ETodWhenNpAllocated char(16), /* Extended TOD when the        03160000
*                                      physical instantiation of the    03161000
*                                      note pad was most recently       03162000
*                                      allocated.  If a note pad        03163000
*                                      connector is monitoring the      03164000
*                                      physical placement of the        03165000
*                                      note pad, it should query the    03166000
*                                      note pad to refresh its data     03167000
*                                      when it observes changes to      03168000
*                                      this value.  This field          03169000
*                                      contains the same value as       03170000
*                                      reported in                      03171000
*                                      npd_ETodWhenAllocated.        */ 03172000
*    3 cd_ETodWhenNpCreated char(16), /* Extended TOD when the note     03173000
*                                      pad was logically created.       03174000
*                                      This ETOD uniquely identifies    03175000
*                                      an instance of a note pad.  It   03176000
*                                      remains fixed for the life of    03177000
*                                      the note pad.             @L1A*/ 03178000
*    3 * char(0);                                                       03179000
*                                                                       03180000
*/********************************************************************/ 03181000
*/*                                                                  */ 03182000
*/*  Data Record for a Note in a note pad                            */ 03183000
*/*                                                                  */ 03184000
*/*    Summary                                                       */ 03185000
*/*                                                                  */ 03186000
*/*    Usage                                                         */ 03187000
*/*                                                                  */ 03188000
*/*    Explanation                                                   */ 03189000
*/*                                                                  */ 03190000
*/*                                                                  */ 03191000
*/********************************************************************/ 03192000
*                                                                       03193000
* Declare                                                               03194000
*  1 ixcynote_tNoteData TYPE bdy(dword), /* Note data                */ 03195000
*    3 * char(8),                   /* Reserved                      */ 03196000
*    3 nd_Name char(8),             /* Name of note                  */ 03197000
*    3 nd_Tag char(16),             /* Note tag                      */ 03198000
*    3 nd_EtodWhenWritten char(16), /* ETOD when note was most          03199000
*                                      recently created or replaced. */ 03200000
*    3 nd_Instance# char(8),        /* XCF assigned number that         03201000
*                                      identifies a particular          03202000
*                                      instance of a note.  Normally    03203000
*                                      nonzero.  May be zero when the   03204000
*                                      note data record is returned     03205000
*                                      for a delete note request that   03206000
*                                      was deferred.                 */ 03207000
*    3 nd_ConnectionID char(12),    /* XCF assigned identifier          03208000
*                                      indicating which connection      03209000
*                                      last wrote the note.          */ 03210000
*    3 nd_Attributes char(4),                                           03211000
*      5 nd_KeptNote bit,           /* OFF if the note will be deleted  03212000
*                                      when the associated connection   03213000
*                                      is deleted.  ON if the note      03214000
*                                      will be kept.                 */ 03215000
*                                                                       03216000
*    3 nd_NoteSize fixed(32),       /* Length in bytes of the note      03217000
*                                      content.                      */ 03218000
*    3 nd_Flags char(1),            /*                               */ 03219000
*      5 nd_InBuffer bit,           /* ON if the note content was       03220000
*                                      stored at the indicated offset   03221000
*                                      within the buffer.               03222000
*                                      OFF if the note has no content,  03223000
*                                      or no content was stored in      03224000
*                                      the buffer, or no buffer was     03225000
*                                      provided.                     */ 03226000
*    3 * char(3),                   /* Reserved                      */ 03227000
*    3 nd_OffsetBuffer64 char(8) bdy(dword), /* Offset within the       03228000
*                                      BUFFER area where the note       03229000
*                                      content resides.  Valid for use  03230000
*                                      if nd_InBuffer is ON.         */ 03231000
*      5 * char(4),                 /* Reserved (high word of 64 bit    03232000
*                                      offset)                       */ 03233000
*      5 nd_OffsetBuffer32 fixed,   /* Offset for 31 bit programs    */ 03234000
*                                                                       03235000
*    3 * char(0);                                                       03236000
*                                                                       03237000
*/********************************************************************/ 03238000
*/*                                                                  */ 03239000
*/*  Data Record describing system with connection to a note pad     */ 03240000
*/*                                                                  */ 03241000
*/*    Summary                                                       */ 03242000
*/*                                                                  */ 03243000
*/*    Usage                                                         */ 03244000
*/*                                                                  */ 03245000
*/*    Explanation                                                   */ 03246000
*/*                                                                  */ 03247000
*/*                                                                  */ 03248000
*/********************************************************************/ 03249000
*                                                                       03250000
* Declare                                                               03251000
*  1 ixcynote_tSysConnData TYPE bdy(dword), /* Summary of system with   03252000
*                                      connections to a note pad     */ 03253000
*    3 scd_SysName char(8),         /* Name of system                */ 03254000
*    3 scd_SysID fixed(32),         /* XCF Token for subject system  */ 03255000
*      5 scd_SNUM fixed(8),         /* System slot number            */ 03256000
*      5 scd_SSEQ fixed(24),        /* System sequence number        */ 03257000
*    3 scd_State char(4),           /*                               */ 03258000
*      5 scd_State1 char(1),                                            03259000
*        7 scd_Reporter bit,        /* ON if the subject system is the  03260000
*                                      one that reported the data.   */ 03261000
*        7 scd_NpNotAccessible bit, /* ON if the subject system does    03262000
*                                      not appear to have access to     03263000
*                                      the note pad. OFF does not       03264000
*                                      necessarily imply that the       03265000
*                                      system has access.            */ 03266000
*        7 scd_HasNpConnectors bit, /* ON if the subject system appears 03267000
*                                      to have connections to the       03268000
*                                      note pad.                     */ 03269000
*        7 scd_nmwIsWriter bit,     /* ON if the subject system has     03270000
*                                      the one connection permitted to  03271000
*                                      make updates to a note pad       03272000
*                                      created with MULTIWRITE=NO.      03273000
*                                      The system may or may not have   03274000
*                                      read only connections too.    */ 03275000
*        7 scd_nmwReadOnly bit,     /* ON if the subject system has     03276000
*                                      read only connections to a       03277000
*                                      note pad created with            03278000
*                                      MULTIWRITE=NO.  The system does  03279000
*                                      not have the connection with     03280000
*                                      write access.                 */ 03281000
*        7 * bit(3),                /* reserved                      */ 03282000
*      5 * char(3),                 /* reserved                      */ 03283000
*    3 * char(0);                                                       03284000
*                                                                       03285000
*                                                                       03286000
*                                                                       03287000
*/********************************************************************/ 03288000
*/*                                                                  */ 03289000
*/*  Note Selection Criteria                                         */ 03290000
*/*                                                                  */ 03291000
*/*    Summary:                                                      */ 03292000
*/*      Maps information that will be used to choose the set of     */ 03293000
*/*      notes that are to be processed by an IXCNOTE REQUEST=NOTES  */ 03294000
*/*      request.                                                    */ 03295000
*/*                                                                  */ 03296000
*/*    Usage:                                                        */ 03297000
*/*      - Code the CRITERIA keyword when invoking IXCNOTE to        */ 03298000
*/*        process a collection of notes.  The storage area          */ 03299000
*/*        identified by CRITERIA is a selection criteria entry      */ 03300000
*/*        which is mapped by ixcynote_tSelectionCriteria.           */ 03301000
*/*        The selection criteria entry indicates the type of        */ 03302000
*/*        selection criteria to be applied, how many selection      */ 03303000
*/*        records of that type are included, and an array of        */ 03304000
*/*        selection records.                                        */ 03305000
*/*                                                                  */ 03306000
*/*    Explanation:                                                  */ 03307000
*/*      When processing a collection of notes, the selection        */ 03308000
*/*      criteria identify which notes in the note pad are to be     */ 03309000
*/*      processed.                                                  */ 03310000
*/*                                                                  */ 03311000
*/*      Notes can be chosen using one of the following different    */ 03312000
*/*      types of selection criteria:                                */ 03313000
*/*                                                                  */ 03314000
*/*           Type       Max#  Selects                               */ 03315000
*/*       -------------  ----  ------------------------------------- */ 03316000
*/*       Tag Range         1  Notes with tags in indicated range    */ 03317000
*/*       Tag Mask          1  Notes whose masked tag matches filter */ 03318000
*/*       Connection ID     1  Notes written by indicated connection */ 03319000
*/*                                                                  */ 03320000
*/*                                                                  */ 03321000
*/*      Only one type of selection criteria can be provided.        */ 03322000
*/*      Only one selection record can be specified per criteria.    */ 03323000
*/*                                                                  */ 03324000
*/*      To preserve the integrity of the selection, the content     */ 03325000
*/*      of the specified criteria must be preserved until the       */ 03326000
*/*      IXCNOTE service returns to the caller.                      */ 03327000
*/*                                                                  */ 03328000
*/********************************************************************/ 03329000
*                                                                       03330000
* Declare                                                               03331000
*  1 ixcynote_tSelectByTagRange TYPE bdy(word), /* Select notes whose   03332000
*                                      tag value satisfies the          03333000
*                                      inequality MinTag <= tag <=      03334000
*                                      MaxTag.                       */ 03335000
*    3 sbt_MinTag char(16),         /* Lower bound of tag values.    */ 03336000
*    3 sbt_MaxTag char(16),         /* Upper bound of tag values.    */ 03337000
*    3 * char(0);                                                       03338000
*                                                                       03339000
* Declare                                                               03340000
*  1 ixcynote_tSelectByTagMask TYPE bdy(word), /* Select notes whose    03341000
*                                      tag value equals the specified   03342000
*                                      filter value when the indicated  03343000
*                                      mask is applied.              */ 03344000
*    3 sbt_TagFilter char(16),      /* Tag value to match after mask    03345000
*                                      is applied.                   */ 03346000
*    3 sbt_TagMask   char(16),      /* Mask indicating which bits in    03347000
*                                      the note tag are to be compared  03348000
*                                      to bits in the tag filter.  A    03349000
*                                      given note will be selected, if  03350000
*                                      for every bit that is ON in the  03351000
*                                      mask, both of the corresponding  03352000
*                                      bits in the note tag and the     03353000
*                                      tag filter have the same value.  03354000
*                                      If a mask bit is OFF, the        03355000
*                                      corresponding bits in the note   03356000
*                                      tag and tag filter will not be   03357000
*                                      compared.  A mask where all the  03358000
*                                      bits are zero implies that all   03359000
*                                      notes will be selected.  A mask  03360000
*                                      where all the bits are one       03361000
*                                      implies that any note whose tag  03362000
*                                      equals the filter will be        03363000
*                                      selected.                     */ 03364000
*    3 * char(0);                                                       03365000
*                                                                       03366000
*                                                                       03367000
* /* Selecting notes by Connection ID:                                  03368000
*                                                                       03369000
*      Set sbcid_ConnectionID to indicate the set of connections whose  03370000
*      notes are to be selected:                                        03371000
*        - Binary zeroes for all connections                            03372000
*        - XCF System Slot number for any connection that ever          03373000
*          existed on any instance of a system                          03374000
*        - XCF System ID for any connection that ever existed on the    03375000
*          indicated system instance                                    03376000
*        - The connection ID of a specific note pad connector           03377000
*                                                                       03378000
*      When setting system information, one should first set the        03379000
*      sbcid_ConnectionID to binary zeroes and then set the desired     03380000
*      system specifications.                                           03381000
*                                                                       03382000
*      One must then specify "filters" to indicate which notes are      03383000
*      to be included.  If no filters are specified, no notes will      03384000
*      be selected.                                                     03385000
*                                                                       03386000
*      Note that the deletion of a connection is not an atomic          03387000
*      operation.  During the window where a connection is being        03388000
*      deleted, the connection will not be able to manipulate any       03389000
*      notes.  However, until XCF finishes the delete process,          03390000
*      a request that selects notes by Connection ID, may encounter     03391000
*      KEEPNOTE=NO notes that have not yet been deleted.                03392000
*                                                                    */ 03393000
*                                                                       03394000
* Declare                                                               03395000
*  1 ixcynote_tSelectByConnectionID TYPE bdy(word), /* Select notes     03396000
*                                      associated with the indicated    03397000
*                                      connection identifier         */ 03398000
*    3 sbcid_ConnectionID char(12) bdy(word), /* Identifier of          03399000
*                                      connection whose notes are to    03400000
*                                      be selected.  If zero, notes     03401000
*                                      from all connectors are to be    03402000
*                                      selected.                     */ 03403000
*      5 sbcid_SysID fixed(32),     /* XCF system ID.  Notes from       03404000
*                                      connections on that specific     03405000
*                                      system instance are to be        03406000
*                                      selected.                     */ 03407000
*        7 sbcid_SysNum fixed(8),   /* XCF system slot number.  Notes   03408000
*                                      from connections associated with 03409000
*                                      any instance of the indicated    03410000
*                                      system are to be selected.    */ 03411000
*        7 sbcid_SysSeq fixed(24),  /* System sequence number        */ 03412000
*                                                                       03413000
*    3 sbcid_Filters char(1),       /* Which notes to include:       */ 03414000
*      5 sbcid_IncludeKeepNo  bit,  /* If ON, a note is selected        03415000
*                                      if the connector specified       03416000
*                                      KEEPNOTE=NO.  If OFF, such       03417000
*                                      notes will not be selected.   */ 03418000
*      5 sbcid_IncludeKeepYes bit,  /* If ON, a note is selected        03419000
*                                      if the connector specified       03420000
*                                      KEEPNOTE=YES.  If OFF, such      03421000
*                                      notes will not be selected.   */ 03422000
*      5 * bit(6),                  /* reserved, must be zero        */ 03423000
*    3 * char(19),                  /* reserved, must be zero        */ 03424000
*    3 * char(0);                                                       03425000
*                                                                       03426000
*                                                                       03427000
* Declare                                                               03428000
*  1 ixcynote_tSelectionCriteria TYPE bdy(word), /* Describes the       03429000
*                                      notes to be selected          */ 03430000
*    3 sc_Type fixed(8),            /* Indicates the type of selection  03431000
*                                      criteria records being provided  03432000
*                                      within sc_Content.  See          03433000
*                                      ixcynote_kScType constants       03434000
*                                      below.                        */ 03435000
*    3 * char(1),                   /* reserved, must be zero        */ 03436000
*    3 sc_#Records fixed(16),       /* Number of selection criteria     03437000
*                                      records provided within          03438000
*                                      sc_Content.  sc_type determines  03439000
*                                      the maximum permitted number     03440000
*                                      of records.                   */ 03441000
*    3 sc_Content UNION bdy(word) char(32), /* specific criteria go     03442000
*                                      here                          */ 03443000
*      5 sc_ByTagRange isaByTagRange,                                   03444000
*      5 sc_ByTagMask isaByTagMask,                                     03445000
*      5 sc_ByConnectionID isaByConnectionID,                           03446000
*    3 * char(0);                                                       03447000
*                                                                       03448000
* Declare                           /* valid values for sc_type      */ 03449000
*   ixcynote_kScTypeByTagRange         constant(1),                     03450000
*   ixcynote_kScTypeByTagMask          constant(2),                     03451000
*   ixcynote_kScTypeByConnectionID     constant(4);                     03452000
*                                                                       03453000
* @Logic;                                                               03454000
* #PRAGMA TOOL=CBGEN.                                                   03455000
* #FIRSTDSECTCOND.                                                      03456000
* #LINE.%CbGenNoIsa = 'YES';                                            03457000
* #LINE.%Include Syslib(ixcynote);                                      03458000
* #EPRAGMA.                                                             03459000
* @EndLogic;                                                            03460000
*/* End of PL/X Source                                               */ 03461000
* %IF IXCYNOTE_LIST = 'NO' !                                            03462000
*    ZCBPRINT = 'NO' %THEN                                              03463000
* %DO;                                                                  03464000
*   @LIST POP NOECHO;                                                   03465000
* %END;                                                                 03466000
* %END;                                                                 03467000
