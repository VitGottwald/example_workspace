*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IEAARR                                 -11/29/17-<> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  ARR call service                              * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5650-ZOS COPYRIGHT IBM CORP. 2000, 2019                         * 00001200
*                                                                     * 00001300
* STATUS= HBB77C0                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      IEAARR allows you to request that the system establish an      * 00002100
*      associated recovery routine (ARR) while calling a target       * 00002200
*      routine.                                                       * 00002300
*                                                                     * 00002400
*01* EXTERNAL CLASSIFICATION:                                         * 00002500
*                                                                     * 00002600
*02* GUPI: BASE                                                       * 00002700
*                                                                     * 00002800
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00002900
*                                                                     * 00003000
*01* ENVIRONMENT:                                                     * 00003100
*                                                                     * 00003200
*                                                                     * 00003300
*      Minimum authorization:                                         * 00003400
*                                                                     * 00003500
*                        The minimum authority for IEAARR is problem  * 00003600
*                        state and PSW key 8-15.                      * 00003700
*                                                                     * 00003800
*      Dispatchable unit mode: Task mode.                             * 00003900
*                                                                     * 00004000
*      Cross Memory Mode: Any PASN, any HASN, any SASN.               * 00004100
*                                                                     * 00004200
*      AMODE:            31- or 64-bit.                               * 00004300
*                                                                     * 00004400
*      ASC mode:         Primary or Access Register.                  * 00004500
*                                                                     * 00004600
*      Interrupt status: Enabled or disabled for I/O and external     * 00004700
*                        interrupts.                                  * 00004800
*                                                                     * 00004900
*      Locks:            The caller is not required to hold any locks * 00005000
*                        on entry.  The caller may hold the local,    * 00005100
*                        CMS, or CPU lock.                            * 00005200
*                                                                     * 00005300
*      Control parameters: None.                                      * 00005400
*                                                                     * 00005500
*                                                                     * 00005600
*                                                                     * 00005700
*01* PROGRAMMING REQUIREMENTS:                                        * 00005800
*                                                                     * 00005900
*    The caller must include the IHAECVT mapping macro.               * 00006000
*                                                                     * 00006100
*01* RESTRICTIONS:                                                    * 00006200
*                                                                     * 00006300
*    IEAARR must not be issued while a functional recovery routine    * 00006400
*    (FRR) is established.                                            * 00006500
*                                                                     * 00006600
*    TARGETSTATE=PROB should only be issued by a caller currently     * 00006700
*    running in problem state.  TARGETSTATE=SUP should only be issued * 00006800
*    by a caller currently running in supervisor state.               * 00006900
*                                                                     * 00007000
*01* INPUT REGISTER INFORMATION:                                      * 00007100
*                                                                     * 00007200
*    Before issuing the IEAARR macro, the caller does not have to     * 00007300
*    place any information into any general purpose register (GPR) or * 00007400
*    access register (AR) unless using it in register notation for a  * 00007500
*    particular parameter, or using it as a base register.            * 00007600
*                                                                     * 00007700
*01* OUTPUT REGISTER INFORMATION:                                     * 00007800
*                                                                     * 00007900
*    When control returns to the caller, the GPRs contain:            * 00008000
*                                                                     * 00008100
*                                                                     * 00008200
*    REGISTER    CONTENTS                                             * 00008300
*                                                                     * 00008400
*    0           The value placed in register 0 by the target routine * 00008500
*                prior to its returning to the system.                * 00008600
*                                                                     * 00008700
*    1           The value placed in register 1 by the target routine * 00008800
*                prior to its returning to the system.                * 00008900
*                                                                     * 00009000
*    2-13        Unchanged                                            * 00009100
*                                                                     * 00009200
*    14          Used as a work register by the system                * 00009300
*                                                                     * 00009400
*    15          The value placed in register 15 by the target        * 00009500
*                routine prior to its returning to the system.        * 00009600
*                                                                     * 00009700
*                                                                     * 00009800
*                                                                     * 00009900
*    When control returns to the caller, the ARs contain:             * 00010000
*                                                                     * 00010100
*                                                                     * 00010200
*    REGISTER    CONTENTS                                             * 00010300
*                                                                     * 00010400
*    0           The value placed in access register 0 by the target  * 00010500
*                routine prior to its returning to the system.        * 00010600
*                                                                     * 00010700
*    1           The value placed in access register 1 by the target  * 00010800
*                routine prior to its returning to the system.        * 00010900
*                                                                     * 00011000
*    2-13        Unchanged                                            * 00011100
*                                                                     * 00011200
*    14          Used as a work register by the system                * 00011300
*                                                                     * 00011400
*    15          The value placed in access register 15 by the target * 00011500
*                routine prior to its returning to the system.        * 00011600
*                                                                     * 00011700
*                                                                     * 00011800
*                                                                     * 00011900
*    Some callers depend on register contents remaining the same      * 00012000
*    before and after issuing a service.  If the system changes the   * 00012100
*    contents of registers on which the caller depends, the caller    * 00012200
*    must save them before issuing the service, and restore them      * 00012300
*    after the system returns control.                                * 00012400
*                                                                     * 00012500
*01* PERFORMANCE IMPLICATIONS:                                        * 00012600
*    None.                                                            * 00012700
*                                                                     * 00012800
*01* SYNTAX:                                                          * 00012900
*                                                                     * 00013000
*Ýxlabel¨  IEAARR  ÐÝ DYNSTORAGE=AVAIL                                * 00013100
*                  !     ,ARRPTR=xarrptr                              * 00013200
*                  !   Ð ,ARRPARAMPTR=xarrparamptr                    * 00013300
*                  !   ¿ ,ARRPARAMPTR64=xarrparamptr64                * 00013400
*                  !   Ð ,PARAMPTR=xparamptr                          * 00013500
*                  !   ¿ ,PARAMPTR64=xparamptr64                      * 00013600
*                  !     ,TARGETPTR=xtargetptr¨                       * 00013700
*                  ¿Ý,DYNSTORAGE=NOTAVAIL                             * 00013800
*                        ,ARR=xarr                                    * 00013900
*                      Ð ,ARRPARAM=xarrparam                          * 00014000
*                      ¿ ,ARRPARAM64=xarrparam64                      * 00014100
*                      Ð ,PARAM=xparam                                * 00014200
*                      ¿ ,PARAM64=xparam64                            * 00014300
*                        ,TARGET=xtarget¨                             * 00014400
*                  Ð ,TARGETSTATE=PROB                                * 00014500
*                  ¿ ,TARGETSTATE=SUP                                 * 00014600
*                  ÐÝ,ASYNCH=NO¨                                      * 00014700
*                  ¿Ý,ASYNCH=YES¨                                     * 00014800
*                                                                     * 00014900
*                                                                     * 00015000
*      Where:                                                         * 00015100
*                                                                     * 00015200
*                                                                     * 00015300
*      Ýxlabel¨                                                       * 00015400
*          is an optional symbol, starting in column 1, that is the   * 00015500
*          name on the IEAARR macro invocation.  The name must        * 00015600
*          conform to the rules for an ordinary assembler language    * 00015700
*          symbol.                                                    * 00015800
*          DEFAULT: No name.                                          * 00015900
*                                                                     * 00016000
*                                                                     * 00016100
*                                                                     * 00016200
*                                                                     * 00016300
*      ÝDYNSTORAGE=»AVAIL!NOTAVAILº¨                                  * 00016400
*          is an optional keyword input that indicates whether this   * 00016500
*          routine is sensitive to your having dynamic storage.       * 00016600
*          DEFAULT: AVAIL                                             * 00016700
*                                                                     * 00016800
*                                                                     * 00016900
*          ÝDYNSTORAGE=AVAIL                                          * 00017000
*              indicates that you have dynamic storage available.     * 00017100
*                                                                     * 00017200
*                                                                     * 00017300
*              ARRPTR=xarrptr                                         * 00017400
*                  is the name (RX-type), or address in register      * 00017500
*                  (2)-(12), of a required 4 byte input that contains * 00017600
*                  the address of the associated recovery routine.    * 00017700
*                  This routine gets control from RTM according to    * 00017800
*                  normal OS/390 recovery protocols.  As it is an     * 00017900
*                  ARR, it will get control in AMODE 31 if the issuer * 00018000
*                  of IEAARR is AMODE 24 or 31, and in AMODE 64 if    * 00018100
*                  the issuer is AMODE 64.                            * 00018200
*                                                                     * 00018300
*                                                                     * 00018400
*                                                                     * 00018500
*                                                                     * 00018600
*              The following is a set of mutually exclusive keys.     * 00018700
*              This set is required; only one key must be specified.  * 00018800
*                                                                     * 00018900
*                                                                     * 00019000
*              ARRPARAMPTR=xarrparamptr                               * 00019100
*                  belongs to a set of mutually exclusive keys. It is * 00019200
*                  the name (RX-type), or address in register         * 00019300
*                  (2)-(12), of a 4 byte input that contains the      * 00019400
*                  address of the parameter area to be passed to the  * 00019500
*                  ARR upon error.  The address is placed in the      * 00019600
*                  first four bytes of the area pointed to by         * 00019700
*                  SDWAPARM.  Note that the second four bytes of that * 00019800
*                  area will not contain interface information.  This * 00019900
*                  parameter is allowed only when not in AMODE 64 as  * 00020000
*                  indicated by the SYSSTATE macro.                   * 00020100
*                                                                     * 00020200
*              ARRPARAMPTR64=xarrparamptr64                           * 00020300
*                  belongs to a set of mutually exclusive keys. It is * 00020400
*                  the name (RX-type), or address in register         * 00020500
*                  (2)-(12), of an 8 byte input that contains the     * 00020600
*                  address of the parameter area to be passed to the  * 00020700
*                  ARR upon error.  The address is placed in the      * 00020800
*                  eight byte area pointed to by SDWAPARM and in      * 00020900
*                  64-bit GPR 2.  This parameter is allowed only when * 00021000
*                  in AMODE 64 as indicated by the SYSSTATE macro.    * 00021100
*                                                                     * 00021200
*                                                                     * 00021300
*                                                                     * 00021400
*              End of a set of mutually exclusive required keys.      * 00021500
*                                                                     * 00021600
*                                                                     * 00021700
*                                                                     * 00021800
*              The following is a set of mutually exclusive keys.     * 00021900
*              This set is required; only one key must be specified.  * 00022000
*                                                                     * 00022100
*                                                                     * 00022200
*              PARAMPTR=xparamptr                                     * 00022300
*                  belongs to a set of mutually exclusive keys. It is * 00022400
*                  the name (RX-type), or address in register         * 00022500
*                  (2)-(12), of a 4 byte input that contains the      * 00022600
*                  address of a parameter that is to be passed to the * 00022700
*                  target routine in GPR 1.  This parameter is        * 00022800
*                  allowed only when not in AMODE 64 as indicated by  * 00022900
*                  the SYSSTATE macro.                                * 00023000
*                                                                     * 00023100
*              PARAMPTR64=xparamptr64                                 * 00023200
*                  belongs to a set of mutually exclusive keys. It is * 00023300
*                  the name (RX-type), or address in register         * 00023400
*                  (2)-(12), of an 8 byte input that contains the     * 00023500
*                  address of a parameter that is to be passed to the * 00023600
*                  target routine in 64-bit GPR 1.  This parameter is * 00023700
*                  allowed only when in AMODE 64 as indicated by the  * 00023800
*                  SYSSTATE macro.                                    * 00023900
*                                                                     * 00024000
*                                                                     * 00024100
*                                                                     * 00024200
*              End of a set of mutually exclusive required keys.      * 00024300
*                                                                     * 00024400
*                                                                     * 00024500
*                                                                     * 00024600
*              TARGETPTR=xtargetptr¨                                  * 00024700
*                  is the name (RX-type), or address in register      * 00024800
*                  (2)-(12), of a required 4 byte input that contains * 00024900
*                  the address of the routine to which the system is  * 00025000
*                  to branch after establishing the ARR.  The target  * 00025100
*                  routine will get control in the same key and state * 00025200
*                  as the IEAARR caller, in AMODE 31 if the issuer is * 00025300
*                  AMODE 24 or 31 or in AMODE 64 if the issuer is     * 00025400
*                  AMODE 64, with the following input registers:      * 00025500
*                                                                     * 00025600
*                  General Purpose Registers:                         * 00025700
*                                                                     * 00025800
*                                                                     * 00025900
*                  REGISTER  CONTENTS                                 * 00026000
*                                                                     * 00026100
*                  0         Not part of the intended interface       * 00026200
*                                                                     * 00026300
*                  1         Address of parameter area provided by    * 00026400
*                            IEAARR caller                            * 00026500
*                                                                     * 00026600
*                  2-13      Unchanged from the IEAARR caller         * 00026700
*                                                                     * 00026800
*                  14        Tne return address                       * 00026900
*                                                                     * 00027000
*                  15        The address of the target routine        * 00027100
*                                                                     * 00027200
*                                                                     * 00027300
*                                                                     * 00027400
*                  Access Registers:                                  * 00027500
*                                                                     * 00027600
*                                                                     * 00027700
*                  REGISTER  CONTENTS                                 * 00027800
*                                                                     * 00027900
*                  0-1       Not part of the intended interface       * 00028000
*                                                                     * 00028100
*                  2-13      Unchanged from the IEAARR caller         * 00028200
*                                                                     * 00028300
*                  14        Not part of the intended interface       * 00028400
*                                                                     * 00028500
*                  15        Not part of the intended interface       * 00028600
*                                                                     * 00028700
*                                                                     * 00028800
*                                                                     * 00028900
*                  The target routine gets control with one more      * 00029000
*                  entry on the linkage stack than existed when       * 00029100
*                  IEAARR was called. That linkage stack entry        * 00029200
*                  contains the caller's registers 2-13 which can be  * 00029300
*                  extracted using the EREG instruction if needed.    * 00029400
*                                                                     * 00029500
*                  The target routine need not save any registers,    * 00029600
*                  but is expected to return to the address provided  * 00029700
*                  in GPR 14 on entry. The target routine can pass    * 00029800
*                  information back to the caller of IEAARR by        * 00029900
*                  placing it in GPR/AR 0, 1, and/or 15.  The IEAARR  * 00030000
*                  caller will resume immediately after the IEAARR    * 00030100
*                  macro expansion.                                   * 00030200
*                                                                     * 00030300
*                  The target routine gets control with its primary   * 00030400
*                  and secondary ASNs both the same as the primary    * 00030500
*                  ASN when IEAARR was invoked.                       * 00030600
*                                                                     * 00030700
*                                                                     * 00030800
*                                                                     * 00030900
*          ÝDYNSTORAGE=NOTAVAIL                                       * 00031000
*              indicates that you do not have dynamic storage         * 00031100
*              available.  The parameters are defined so that you can * 00031200
*              place each parameter value in a register and in so     * 00031300
*              doing avoid the need to place parameter values into    * 00031400
*              dynamic storage.                                       * 00031500
*                                                                     * 00031600
*                                                                     * 00031700
*              ARR=xarr                                               * 00031800
*                  is a required input.  It is the name (RX-type), or * 00031900
*                  address in register (2)-(12), that is the          * 00032000
*                  associated recovery routine. This routine gets     * 00032100
*                  control from RTM according to normal OS/390        * 00032200
*                  recovery protocols.  As it is an ARR, it will get  * 00032300
*                  control in AMODE 31 if the issuer of IEAARR is     * 00032400
*                  AMODE 24 or 31, and in AMODE 64 if the issuer is   * 00032500
*                  AMODE 64.                                          * 00032600
*                                                                     * 00032700
*                                                                     * 00032800
*                                                                     * 00032900
*                                                                     * 00033000
*              The following is a set of mutually exclusive keys.     * 00033100
*              This set is required; only one key must be specified.  * 00033200
*                                                                     * 00033300
*                                                                     * 00033400
*              ARRPARAM=xarrparam                                     * 00033500
*                  belongs to a set of mutually exclusive keys. It is * 00033600
*                  an input.  It is the name (RX-type), or address in * 00033700
*                  register (2)-(12), that is the parameter area to   * 00033800
*                  be passed to the ARR upon error.  The address is   * 00033900
*                  placed in the first four bytes of the area pointed * 00034000
*                  to by SDWAPARM.  Note that the second four bytes   * 00034100
*                  of that area will not contain interface            * 00034200
*                  information.  This parameter is allowed only when  * 00034300
*                  not in AMODE 64 as indicated by the SYSSTATE       * 00034400
*                  macro.                                             * 00034500
*                                                                     * 00034600
*              ARRPARAM64=xarrparam64                                 * 00034700
*                  belongs to a set of mutually exclusive keys. It is * 00034800
*                  an input.  It is the name (RX-type), or address in * 00034900
*                  register (2)-(12), that is the parameter area to   * 00035000
*                  be passed to the ARR upon error.  The address is   * 00035100
*                  placed in the eight byte area pointed to by        * 00035200
*                  SDWAPARM and in 64-bit GPR 2.  This parameter is   * 00035300
*                  allowed only when in AMODE 64 as indicated by the  * 00035400
*                  SYSSTATE macro.                                    * 00035500
*                                                                     * 00035600
*                                                                     * 00035700
*                                                                     * 00035800
*              End of a set of mutually exclusive required keys.      * 00035900
*                                                                     * 00036000
*                                                                     * 00036100
*                                                                     * 00036200
*              The following is a set of mutually exclusive keys.     * 00036300
*              This set is required; only one key must be specified.  * 00036400
*                                                                     * 00036500
*                                                                     * 00036600
*              PARAM=xparam                                           * 00036700
*                  belongs to a set of mutually exclusive keys. It is * 00036800
*                  an input.  It is the name (RX-type), or address in * 00036900
*                  register (2)-(12), that is a parameter that is to  * 00037000
*                  be passed to the target routine in GPR 1.  This    * 00037100
*                  parameter is allowed only when not in AMODE 64 as  * 00037200
*                  indicated by the SYSSTATE macro.                   * 00037300
*                                                                     * 00037400
*              PARAM64=xparam64                                       * 00037500
*                  belongs to a set of mutually exclusive keys. It is * 00037600
*                  an input.  It is the name (RX-type), or address in * 00037700
*                  register (2)-(12), that is a parameter that is to  * 00037800
*                  be passed to the target routine in 64-bit GPR 1.   * 00037900
*                  This parameter is allowed only when in AMODE 64 as * 00038000
*                  indicated by the SYSSTATE macro.                   * 00038100
*                                                                     * 00038200
*                                                                     * 00038300
*                                                                     * 00038400
*              End of a set of mutually exclusive required keys.      * 00038500
*                                                                     * 00038600
*                                                                     * 00038700
*                                                                     * 00038800
*              TARGET=xtarget¨                                        * 00038900
*                  is a required input.  It is the name (RX-type), or * 00039000
*                  address in register (2)-(12), that is the routine  * 00039100
*                  to which the system is to branch after             * 00039200
*                  establishing the ARR.  The target routine will get * 00039300
*                  control in the same key and state as the IEAARR    * 00039400
*                  caller, in AMODE 31 if the issuer is AMODE 24 or   * 00039500
*                  31 or in AMODE 64 if the issuer is AMODE 64, with  * 00039600
*                  the following input registers:                     * 00039700
*                                                                     * 00039800
*                  General Purpose Registers:                         * 00039900
*                                                                     * 00040000
*                                                                     * 00040100
*                  REGISTER  CONTENTS                                 * 00040200
*                                                                     * 00040300
*                  0         Not part of the intended interface       * 00040400
*                                                                     * 00040500
*                  1         Address of parameter area provided by    * 00040600
*                            IEAARR caller                            * 00040700
*                                                                     * 00040800
*                  2-13      Unchanged from the IEAARR caller         * 00040900
*                                                                     * 00041000
*                  14        Tne return address                       * 00041100
*                                                                     * 00041200
*                  15        The address of the target routine        * 00041300
*                                                                     * 00041400
*                                                                     * 00041500
*                                                                     * 00041600
*                  Access Registers:                                  * 00041700
*                                                                     * 00041800
*                                                                     * 00041900
*                  REGISTER  CONTENTS                                 * 00042000
*                                                                     * 00042100
*                  0-1       Not part of the intended interface       * 00042200
*                                                                     * 00042300
*                  2-13      Unchanged from the IEAARR caller         * 00042400
*                                                                     * 00042500
*                  14        Not part of the intended interface       * 00042600
*                                                                     * 00042700
*                  15        Not part of the intended interface       * 00042800
*                                                                     * 00042900
*                                                                     * 00043000
*                                                                     * 00043100
*                  The target routine gets control with one more      * 00043200
*                  entry on the linkage stack than existed when       * 00043300
*                  IEAARR was called. That linkage stack entry        * 00043400
*                  contains the caller's registers 2-13 which can be  * 00043500
*                  extracted using the EREG instruction if needed.    * 00043600
*                                                                     * 00043700
*                  The target routine need not save any registers,    * 00043800
*                  but is expected to return to the address provided  * 00043900
*                  in GPR 14 on entry. The target routine can pass    * 00044000
*                  information back to the caller of IEAARR by        * 00044100
*                  placing it in GPR/AR 0, 1, and/or 15.  The IEAARR  * 00044200
*                  caller will resume immediately after the IEAARR    * 00044300
*                  macro expansion.                                   * 00044400
*                                                                     * 00044500
*                                                                     * 00044600
*                                                                     * 00044700
*                                                                     * 00044800
*                                                                     * 00044900
*                                                                     * 00045000
*                                                                     * 00045100
*                                                                     * 00045200
*      TARGETSTATE=»PROB!SUPº                                         * 00045300
*          is a required keyword input that indicates the requested   * 00045400
*          PSW state of the target routine.                           * 00045500
*                                                                     * 00045600
*                                                                     * 00045700
*          TARGETSTATE=PROB                                           * 00045800
*              indicates the target routine is to get control in      * 00045900
*              problem state.  This should only be used by a caller   * 00046000
*              currently in problem state.                            * 00046100
*                                                                     * 00046200
*          TARGETSTATE=SUP                                            * 00046300
*              indicates the target routine is to get control in      * 00046400
*              supervisor state.  This should only be used by a       * 00046500
*              caller currently in supervisor state.                  * 00046600
*                                                                     * 00046700
*                                                                     * 00046800
*                                                                     * 00046900
*                                                                     * 00047000
*                                                                     * 00047100
*                                                                     * 00047200
*      ÝASYNCH=»NO!YESº¨                                              * 00047300
*          is an optional keyword input that identifies the ASYNCH    * 00047400
*          attribute for the ARR. The definition of the ASYNCH        * 00047500
*          attribute can be found in the ESTAEX section.              * 00047600
*          DEFAULT: NO                                                * 00047700
*                                                                     * 00047800
*                                                                     * 00047900
*          ÝASYNCH=NO¨                                                * 00048000
*              indicates that the ARR is to have the ASYNCH=NO        * 00048100
*              attribute.                                             * 00048200
*                                                                     * 00048300
*          ÝASYNCH=YES¨                                               * 00048400
*              indicates that the ARR is to have the ASYNCH=YES       * 00048500
*              attribute.                                             * 00048600
*                                                                     * 00048700
*                                                                     * 00048800
*                                                                     * 00048900
*                                                                     * 00049000
*                                                                     * 00049100
*01* ABEND CODES:  None.                                              * 00049200
*                                                                     * 00049300
*       The caller may get the following abend code:                  * 00049400
*                                                                     * 00049500
*                                                                     * 00049600
*       0C2-02          TARGETSTATE=SUP was requested by a caller     * 00049700
*                       currently running in problems tate.           * 00049800
*                                                                     * 00049900
*                                                                     * 00050000
*                                                                     * 00050100
*01* RETURN CODES:                                                    * 00050200
*                                                                     * 00050300
*                                                                     * 00050400
*                 None                                                * 00050500
*                                                                     * 00050600
*                                                                     * 00050700
*                                                                     * 00050800
*01* REASON CODES:  None.                                             * 00050900
*                                                                     * 00051000
*01* MODULE TYPE:  ASSEM MACRO                                        * 00051100
*                                                                     * 00051200
*02*   PROCESSOR:  ASSEM                                              * 00051300
*                                                                     * 00051400
*01* COMPONENT:  SCRTM                                                * 00051500
*                                                                     * 00051600
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00051700
*                                                                     * 00051800
*01* EXAMPLES:                                                        * 00051900
*                                                                     * 00052000
*    Example 1                                                        * 00052100
*                                                                     * 00052200
*    Operation:                                                       * 00052300
*                                                                     * 00052400
*                                                                     * 00052500
*    1.  Branch to the target routine pointed to by field TP, and     * 00052600
*        establish as an ARR the routine pointed to by field AP.      * 00052700
*        Pass to the target area in register 1 the contents of field  * 00052800
*        PP.  Make sure that the ARR will get access to the contents  * 00052900
*        of field APP (which ordinarily would contain the address of  * 00053000
*        a parameter area).  Make sure that the target routine gets   * 00053100
*        control in problem state (which implies that the caller of   * 00053200
*        IEARR should currently be running in problem state).         * 00053300
*                                                                     * 00053400
*                                                                     * 00053500
*                                                                     * 00053600
*    The code is as follows.                                          * 00053700
*                                                                     * 00053800
*          IEAARR TARGETPTR=TP,ARRPTR=AP,PARAMPTR=PP,                 * 00053900
*                ARRPARAMPTR=APP,TARGETSTATE=PROB                     * 00054000
*             ...                                                     * 00054100
*                                                                     * 00054200
*                                                                     * 00054300
*    Example 2                                                        * 00054400
*                                                                     * 00054500
*    Operation:                                                       * 00054600
*                                                                     * 00054700
*                                                                     * 00054800
*    1.  Same as example one, but no dynamic storage is to be used.   * 00054900
*                                                                     * 00055000
*                                                                     * 00055100
*                                                                     * 00055200
*    The code is as follows.                                          * 00055300
*                                                                     * 00055400
*          LA    Reg_T,the_Target                                     * 00055500
*          LA    Reg_A,the_ARR                                        * 00055600
*          LA    Reg_P,the_param                                      * 00055700
*          LA    Reg_AP,the_arr_param                                 * 00055800
*          IEAARR TARGET=(Reg_T),ARR=(Reg_A),PARAM=(Reg_P),           * 00055900
*                ARRPARAM=(Reg_AP),TARGETSTATE=PROB                   * 00056000
*             ...                                                     * 00056100
*                                                                     * 00056200
*                                                                     * 00056300
*01* MACRO USAGE NOTES:                                               * 00056400
*                                                                     * 00056500
*                                                                     * 00056600
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00056700
*        global macro variable.  Any value other than 'NO' will       * 00056800
*        result in the macro expansion being printed.  The default is * 00056900
*        'YES'.  The following examples illustrate how the ZPRINT     * 00057000
*        variable should be set.                                      * 00057100
*                                                                     * 00057200
*                    GBLC &ZPRINT                                     * 00057300
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00057400
*                                                                     * 00057500
*                                                                     * 00057600
*                                                                     * 00057700
*01* CHANGE ACTIVITY:                                                 * 00057800
*                                                                     * 00057900
*   Flag LineItem  FMID    Date   ID    Comment                       * 00058000
*                                                                     * 00058100
*    $L0=CICSOAMG JBB6609 980825 PD00XB:  CICS OTE                    * 00058200
*    $L1=CICSORTM JBB6609 980825 PD00XB:  CICS OTE                    * 00058300
*    $L2=DONAULT  HBB7740 060325 PD00XB:  CICS OTE                    * 00058400
*    $01=OA23010  HBB7740 071025 PD00KD:  Correct Assembly after L2   * 00058500
*    $L3=ME17909  HBB7770 091116 PD00KD:  DYNSTORAGE=NOTAVAIL         * 00058600
*    $P1=ME26660  HBB77A0 130917 PD00KD:  Missing '&'                 * 00058700
*    $L4=W213454  HBB77C0 171128 PD00XB:  IEAARR_FLOWS                * 00058800
*    $L5=W213454  HBB77C0 171128 PD00XB:  ASYNCH                      * 00058900
****** END OF SPECIFICATIONS *****************************************/ 00059000
*/********************************************************************* 00059100
         MACRO                                                          00059200
&XLABEL  IEAARR &DYNSTORAGE=,&ARRPTR=,&ARRPARAMPTR=,&ARRPARAMPTR64=,   *00059300
               &PARAMPTR=,&PARAMPTR64=,&TARGETPTR=,&ARR=,&ARRPARAM=,   *00059400
               &ARRPARAM64=,&PARAM=,&PARAM64=,&TARGET=,&TARGETSTATE=,  *00059500
               &ASYNCH=                                                 00059600
.*                                                                      00059700
*                   MACDATE -11/29/17-<0>                               00059800
.*                                                                      00059900
.*******************************************************************    00060000
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00060100
.*******************************************************************    00060200
                   GBLC  &ZPRINT     YES=PRINT NO=NO PRINT              00060300
                   GBLC  &ZTEST      YES=TEST NO=NO TEST                00060400
                   GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX        00060500
.*                                                                      00060600
                   GBLC  &ZIEAARR    YES=MACRO USED AT LEAST ONCE       00060700
.*******************************************************************    00060800
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00060900
.*******************************************************************    00061000
                   LCLC  &ZMS        ERROR MESSAGE WORK AREA            00061100
                   LCLC  &ZCNDX      SYSNDX CHARACTERS                  00061200
                   LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED         00061300
                   LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR        00061400
                   LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE        00061500
                   LCLA  &ZAWRK      USED AS A WORK AREA                00061600
                   LCLA  &ZASIZ      USED FOR SIZE OF VALUE             00061700
                   LCLA  &ZN         NUMERIC WORK VARIABLE              00061800
                   LCLC  &ZC         CHARACTER WORK VARIABLE            00061900
                   LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE        00062000
                   LCLA  &ZTLA       VALUE TOO LONG VARIABLE            00062100
                   LCLC  &ZMAC_G     "G" or null                        00062200
&ZMAC_G            SETC  ''                                             00062300
                   LCLC  &ZMAC_LR                                       00062400
&ZMAC_LR           SETC  'LR'                                           00062500
                   LCLC  &ZMAC_L                                        00062600
&ZMAC_L            SETC  'L'                                            00062700
                   LCLC  &ZMAC_ST                                       00062800
&ZMAC_ST           SETC  'ST'                                           00062900
                   LCLC  &ZMAC_LLGT                                     00063000
&ZMAC_LLGT         SETC  'L'                                            00063100
                   LCLC  &ZMAC_LGR                                      00063200
&ZMAC_LGR          SETC  'LR'                                           00063300
                   LCLC  &ZMAC_LG                                       00063400
&ZMAC_LG           SETC  'L'                                            00063500
                   LCLC  &ZMAC_STG                                      00063600
&ZMAC_STG          SETC  'ST'                                           00063700
                   LCLA  &ZMACRET    MACRO RETURN CODE                  00063800
&ZMACRET           SETA  0           ASSUME NO ERRORS                   00063900
.*                                                                      00064000
                   LCLC  &ZCSYSLIST(255)        NONXKEY, POS ARRAY      00064100
                   LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()         00064200
                   LCLA  &ZPLLEN     PARAMETER LIST LENGTH              00064300
                   LCLC  &ZENDBASEPL            End of base PL          00064400
.********************************************************************   00064500
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00064600
.********************************************************************   00064700
                   GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL            00064800
                   GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE     00064900
                   GBLA  &SYSALVL    SYSSTATE ARCHLVL                   00065000
                   GBLC  &SYSAM64    SYSSTATE AMODE64                   00065100
.*                                                                      00065200
                   AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED     00065300
                   AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED      00065400
                   SPLEVEL  TEST                                        00065500
.ZSYS2             ANOP  ,                                              00065600
                   AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1          00065700
                   AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1          00065800
                   SYSSTATE TEST                                        00065900
                   AGO   .ZSYS4                                         00066000
.ZSYS3             ANOP  ,                                              00066100
&SYSASCE           SETC  'P'         ASSUME SYSSTATE PRIMARY            00066200
.ZSYS4             ANOP  ,                                              00066300
                   AIF   ('&SYSAM64' NE 'YES').ZSYSN64                  00066400
&ZMAC_LLGT         SETC 'LLGT'                                          00066500
&ZMAC_LGR          SETC 'LGR'                                           00066600
&ZMAC_LG           SETC 'LG'                                            00066700
&ZMAC_STG          SETC 'STG'                                           00066800
.ZSYSN64           ANOP  ,                                              00066900
.*******************************************************************    00067000
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00067100
.*******************************************************************    00067200
                   LCLC  &XDYNSTORAGE           ++ VALUE                00067300
                   LCLC  &XARRPTR    ++ NAME                            00067400
                   LCLC  &XDUMMY1    ++ NAME                            00067500
                   LCLC  &XARRPARAMPTR          ++ NAME                 00067600
                   LCLC  &XARRPARAMPTR64        ++ NAME                 00067700
                   LCLC  &XDUMMY2    ++ NAME                            00067800
                   LCLC  &XPARAMPTR  ++ NAME                            00067900
                   LCLC  &XPARAMPTR64           ++ NAME                 00068000
                   LCLC  &XTARGETPTR            ++ NAME                 00068100
                   LCLC  &XARR       ++ NAME                            00068200
                   LCLC  &XARRPARAM  ++ NAME                            00068300
                   LCLC  &XARRPARAM64           ++ NAME                 00068400
                   LCLC  &XPARAM     ++ NAME                            00068500
                   LCLC  &XPARAM64   ++ NAME                            00068600
                   LCLC  &XTARGET    ++ NAME                            00068700
                   LCLC  &XTARGETSTATE          ++ VALUE                00068800
                   LCLC  &XASYNCH    ++ VALUE                           00068900
.*******************************************************************    00069000
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00069100
.*******************************************************************    00069200
                   LCLC  &ZXDYNSTORAGE          ++ INPUT VALUE          00069300
                   LCLC  &ZXARRPTR   ++ INPUT NAME                      00069400
                   LCLC  &ZXDUMMY1   ++ INPUT NAME                      00069500
                   LCLC  &ZXARRPARAMPTR         ++ INPUT NAME           00069600
                   LCLC  &ZXARRPARAMPTR64       ++ INPUT NAME           00069700
                   LCLC  &ZXDUMMY2   ++ INPUT NAME                      00069800
                   LCLC  &ZXPARAMPTR            ++ INPUT NAME           00069900
                   LCLC  &ZXPARAMPTR64          ++ INPUT NAME           00070000
                   LCLC  &ZXTARGETPTR           ++ INPUT NAME           00070100
                   LCLC  &ZXARR      ++ INPUT NAME                      00070200
                   LCLC  &ZXARRPARAM            ++ INPUT NAME           00070300
                   LCLC  &ZXARRPARAM64          ++ INPUT NAME           00070400
                   LCLC  &ZXPARAM    ++ INPUT NAME                      00070500
                   LCLC  &ZXPARAM64  ++ INPUT NAME                      00070600
                   LCLC  &ZXTARGET   ++ INPUT NAME                      00070700
                   LCLC  &ZXTARGETSTATE         ++ INPUT VALUE          00070800
                   LCLC  &ZXASYNCH   ++ INPUT VALUE                     00070900
.********************************************************************   00071000
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00071100
.********************************************************************   00071200
                   ACTR  10000                                          00071300
.*------------------------------------------------------------------    00071400
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00071500
&XDYNSTORAGE       SETC  ''          INITIALIZE XVARIABLE               00071600
.*-------------------------------------------------------------------   00071700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00071800
.ZG3               ANOP  ,                                              00071900
                   AIF   (K'&DYNSTORAGE(1) LE 0).ZG3A                   00072000
&ZTLC              SETC 'AVAIL'                                         00072100
                   AIF   ('&DYNSTORAGE(1)' NE '&ZTLC').ZG18             00072200
&XDYNSTORAGE       SETC  'AVAIL'     SET KEYWORD                        00072300
                   AIF   (N'&DYNSTORAGE LE 1).ZG3A  CK NUM              00072400
&ZMS               SETC  '"DYNSTORAGE='                                 00072500
&ZMS               SETC  '&ZMS.&DYNSTORAGE"'                            00072600
&ZMS               SETC  '&ZMS "DYNSTORAGE"'                            00072700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00072800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00072900
.ZG3A              ANOP  ,                                              00073000
.*------------------------------------------------------------------    00073100
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00073200
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00073300
.ZG3A0             AIF   (K'&ARR LE 0).ZG3A1    OK                      00073400
&ZCVAL             SETC '&ZCVAL ARR'            INCORRECT KEY USED      00073500
.ZG3A1             AIF   (K'&ARRPARAM LE 0).ZG3A2  OK                   00073600
&ZCVAL             SETC '&ZCVAL ARRPARAM'       INCORRECT KEY USED      00073700
.ZG3A2             AIF   (K'&ARRPARAM64 LE 0).ZG3A3  OK                 00073800
&ZCVAL             SETC '&ZCVAL ARRPARAM64'     INCORRECT KEY USED      00073900
.ZG3A3             AIF   (K'&PARAM LE 0).ZG3A4  OK                      00074000
&ZCVAL             SETC '&ZCVAL PARAM'          INCORRECT KEY USED      00074100
.ZG3A4             AIF   (K'&PARAM64 LE 0).ZG3A5  OK                    00074200
&ZCVAL             SETC '&ZCVAL PARAM64'        INCORRECT KEY USED      00074300
.ZG3A5             AIF   (K'&TARGET LE 0).ZG3A6  OK                     00074400
&ZCVAL             SETC '&ZCVAL TARGET'         INCORRECT KEY USED      00074500
.ZG3A6             AIF   (K'&ZCVAL LE 0).ZG3A7  OK                      00074600
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00074700
&ZMS               SETC  '"DYNSTORAGE'                                  00074800
&ZMS               SETC  '&ZMS.=&DYNSTORAGE"'                           00074900
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00075000
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00075100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00075200
.ZG3A7             ANOP  ,                                              00075300
.*----------------------------------------------------------------***   00075400
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00075500
                   AIF   (N'&ARRPTR LE 1).ZG5A  CK NUM                  00075600
&ZMS               SETC  '"ARRPTR='                                     00075700
&ZMS               SETC  '&ZMS.&ARRPTR"'                                00075800
&ZMS               SETC  '&ZMS "ARRPTR"'                                00075900
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00076000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00076100
.ZG5A              ANOP  ,                                              00076200
.*-------------------------------------------------------------------   00076300
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00076400
&ZXARRPTR          SETC  'INPUT'     SET IN/OUTPUT                      00076500
&XARRPTR           SETC  '&ARRPTR(1)'           SET XVARIABLE           00076600
                   AIF   (N'&ARRPTR GT 1).ZG5B  MULTI                   00076700
&XARRPTR           SETC  '&ARRPTR'   SET XVARIABLE                      00076800
.ZG5B              AIF   (K'&ARRPTR(1) GT 0).ZG5C                       00076900
&ZXARRPTR          SETC  ''          RESET IN/OUTPUT                    00077000
&ZMS               SETC  'WHEN "AVAIL" IS SPECIFIED'                    00077100
&ZMS               SETC  '&ZMS , "ARRPTR" KEY AND ITS'                  00077200
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00077300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00077400
.ZG5C              ANOP  ,                                              00077500
.*-------------------------------------------------------------------   00077600
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00077700
                   AIF   (K'&ZXARRPTR LE 0).ZG5R  NOT I/O               00077800
                   AIF   ('&XARRPTR'(1,1) NE '(').ZG5R                  00077900
&ZCGPR             SETC  '&XARRPTR'(2,K'&XARRPTR-2)                     00078000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                    00078100
                   AIF   (K'&ZCGPR GT 2).ZG5Q                           00078200
                   AIF   ('&ZCGPR' EQ '0').ZG5Q                         00078300
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00078400
                   AIF   (T'&ZCGPR NE 'N').ZG5Q  INVALID REG NAME       00078500
.ZG5P              ANOP  ,                                              00078600
                   AIF   (T'&ZCGPR NE 'N').ZG5R  NON NUMERIC            00078700
                   AIF   ('&ZCGPR' LT '2').ZG5Q                         00078800
                   AIF   ('&ZCGPR' LE '12').ZG5R                        00078900
.ZG5Q              ANOP  ,                                              00079000
&ZMS               SETC  '"ARRPTR='                                     00079100
&ZMS               SETC  '&ZMS.&ARRPTR"'                                00079200
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00079300
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00079400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00079500
.ZG5R              ANOP  ,                                              00079600
.*----------------------------------------------------------------***   00079700
.***AG.KMEKY01 NAME, OPT RQD INPUT, ME KEYS -XVARIABLE                  00079800
&XDUMMY1           SETC  ''          INITIALIZE XVARIABLE               00079900
                   AIF   (K'&ARRPARAMPTR LE 0).ZG8C                     00080000
&ZXDUMMY1          SETC  'INPUT'     SET IN/OUTPUT                      00080100
&XDUMMY1           SETC  'ARRPARAMPTR'          SET XVARIABLE           00080200
&ZXARRPARAMPTR     SETC  'INPUT'     SET IN/OUTPUT                      00080300
&XARRPARAMPTR      SETC  '&ARRPARAMPTR(1)'      SET XVARIABLE PARM      00080400
                   AIF   (N'&ARRPARAMPTR GT 1).ZG8A                     00080500
&XARRPARAMPTR      SETC  '&ARRPARAMPTR'         SET XVARIABLE PARM      00080600
.ZG8A              AIF   (N'&ARRPARAMPTR LE 1).ZG8B  CK NUM             00080700
&ZMS               SETC  '"ARRPARAMPTR='                                00080800
&ZMS               SETC  '&ZMS.&ARRPARAMPTR"'                           00080900
&ZMS               SETC  '&ZMS "ARRPARAMPTR"'                           00081000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00081100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00081200
.ZG8B              AIF   (K'&XARRPARAMPTR GT 0).ZG8C  ONE PARM          00081300
&ZXDUMMY1          SETC  ''          RESET IN/OUTPUT                    00081400
&ZXARRPARAMPTR     SETC  ''          RESET IN/OUTPUT                    00081500
&ZMS               SETC  'WHEN "AVAIL" IS SPECIFIED'                    00081600
&ZMS               SETC  '&ZMS , "ARRPARAMPTR" KEY AND ITS'             00081700
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00081800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00081900
.ZG8C              ANOP  ,                                              00082000
.*----------------------------------------------------------------***   00082100
.***AG.KMEKY02 NAME, OPT RQD INPUT, ME KEYS -XVARIABLE                  00082200
                   AIF   (K'&ARRPARAMPTR64 LE 0).ZG9D  NO ME KEY        00082300
                   AIF   (N'&ARRPARAMPTR64 LE 1).ZG9A  CK NUM           00082400
&ZMS               SETC  '"ARRPARAMPTR64='                              00082500
&ZMS               SETC  '&ZMS.&ARRPARAMPTR64"'                         00082600
&ZMS               SETC  '&ZMS "ARRPARAMPTR64"'                         00082700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00082800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00082900
.ZG9A              AIF   (K'&XDUMMY1 LE 0).ZG9B                         00083000
&ZMS               SETC  '"ARRPARAMPTR64'                               00083100
&ZMS               SETC  '&ZMS.=&ARRPARAMPTR64"'                        00083200
&ZMS               SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'          00083300
&ZMS               SETC  '&ZMS "&XDUMMY1"'                              00083400
                   MNOTE 8,' &ZMS KEY.'                                 00083500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00083600
                   AGO   .ZG9D                                          00083700
.*                                                                      00083800
.ZG9B              ANOP  ,                                              00083900
&ZXDUMMY1          SETC  'INPUT'     SET IN/OUTPUT                      00084000
&XDUMMY1           SETC  'ARRPARAMPTR64'        SET XVARIABLE           00084100
&ZXARRPARAMPTR64   SETC  'INPUT'     SET IN/OUTPUT                      00084200
&XARRPARAMPTR64    SETC  '&ARRPARAMPTR64(1)'    SET XVARIABLE PARM      00084300
                   AIF   (N'&ARRPARAMPTR64 GT 1).ZG9C                   00084400
&XARRPARAMPTR64    SETC  '&ARRPARAMPTR64'       SET XVARIABLE PARM      00084500
.ZG9C              AIF   (K'&XARRPARAMPTR64 GT 0).ZG9D  ONE PARM        00084600
&ZXDUMMY1          SETC  ''          RESET IN/OUTPUT                    00084700
&ZXARRPARAMPTR64   SETC  ''          RESET IN/OUTPUT                    00084800
&ZMS               SETC  'WHEN "AVAIL" IS SPECIFIED'                    00084900
&ZMS               SETC  '&ZMS , "ARRPARAMPTR64" KEY AND ITS'           00085000
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00085100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00085200
.ZG9D              ANOP  ,                                              00085300
.*------------------------------------------------------------------    00085400
.***AG.KME4Y09 NAME, OPT RQD INPUT, ME KEYS -CHECK IF KEY ENTERED       00085500
                   AIF   (K'&XDUMMY1 GT 0).ZG10B                        00085600
&ZXDUMMY1          SETC  ''          RESET IN/OUTPUT                    00085700
&ZXARRPARAMPTR     SETC  ''          RESET IN/OUTPUT                    00085800
&XDUMMY1           SETC  ''          ENSURE NULL                        00085900
&XARRPARAMPTR      SETC  ''          ENSURE NULL                        00086000
&ZMS               SETC  'ONE OF THE FOLLOWING'                         00086100
&ZMS               SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'            00086200
&ZMS               SETC  '&ZMS REQUIRED:'                               00086300
&ZMS               SETC  '&ZMS "ARRPARAMPTR"'   VALID ME KEY            00086400
&ZMS               SETC  '&ZMS OR "ARRPARAMPTR64".'  VALID ME KEY       00086500
                   MNOTE 8,' &ZMS '                                     00086600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00086700
.ZG10B             ANOP  ,                                              00086800
.*-------------------------------------------------------------------   00086900
.***AG.KMEKY13 NAME, OPT RQD INPUT, ME KEYS -PROCESS DEPENDENCIES       00087000
.ZG8ZY  AIF    ('&XDUMMY1' NE 'ARRPARAMPTR').ZG9ZY                      00087100
.*-------------------------------------------------------------------   00087200
.***AG.KCK02 NAME, OPT RQD INPUT, ME KEYS -GPR OUT OF RANGE             00087300
                   AIF   (K'&ZXARRPARAMPTR LE 0).ZG8R  NOT I/O          00087400
                   AIF   ('&XARRPARAMPTR'(1,1) NE '(').ZG8R             00087500
&ZCGPR             SETC  '&XARRPARAMPTR'(2,K'&XARRPARAMPTR-2)           00087600
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                    00087700
                   AIF   (K'&ZCGPR GT 2).ZG8Q                           00087800
                   AIF   ('&ZCGPR' EQ '0').ZG8Q                         00087900
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00088000
                   AIF   (T'&ZCGPR NE 'N').ZG8Q  INVALID REG NAME       00088100
.ZG8P              ANOP  ,                                              00088200
                   AIF   (T'&ZCGPR NE 'N').ZG8R  NON NUMERIC            00088300
                   AIF   ('&ZCGPR' LT '2').ZG8Q                         00088400
                   AIF   ('&ZCGPR' LE '12').ZG8R                        00088500
.ZG8Q              ANOP  ,                                              00088600
&ZMS               SETC  '"ARRPARAMPTR='                                00088700
&ZMS               SETC  '&ZMS.&ARRPARAMPTR"'                           00088800
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00088900
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00089000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00089100
.ZG8R              ANOP  ,                                              00089200
.*-------------------------------------------------------------------   00089300
.***AG.KMEKY13 NAME, OPT RQD INPUT, ME KEYS -PROCESS DEPENDENCIES       00089400
.ZG9ZY  AIF    ('&XDUMMY1' NE 'ARRPARAMPTR64').ZG10ZY                   00089500
.*-------------------------------------------------------------------   00089600
.***AG.KCK02 NAME, OPT RQD INPUT, ME KEYS -GPR OUT OF RANGE             00089700
                   AIF   (K'&ZXARRPARAMPTR64 LE 0).ZG9R  NOT I/O        00089800
                   AIF   ('&XARRPARAMPTR64'(1,1) NE '(').ZG9R           00089900
&ZCGPR             SETC  '&XARRPARAMPTR64'(2,K'&XARRPARAMPTR64-2)       00090000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG9P                    00090100
                   AIF   (K'&ZCGPR GT 2).ZG9Q                           00090200
                   AIF   ('&ZCGPR' EQ '0').ZG9Q                         00090300
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00090400
                   AIF   (T'&ZCGPR NE 'N').ZG9Q  INVALID REG NAME       00090500
.ZG9P              ANOP  ,                                              00090600
                   AIF   (T'&ZCGPR NE 'N').ZG9R  NON NUMERIC            00090700
                   AIF   ('&ZCGPR' LT '2').ZG9Q                         00090800
                   AIF   ('&ZCGPR' LE '12').ZG9R                        00090900
.ZG9Q              ANOP  ,                                              00091000
&ZMS               SETC  '"ARRPARAMPTR64='                              00091100
&ZMS               SETC  '&ZMS.&ARRPARAMPTR64"'                         00091200
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00091300
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00091400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00091500
.ZG9R              ANOP  ,                                              00091600
.*-------------------------------------------------------------------   00091700
.***AG.KMEKY15 NAME, OPT RQD INPUT, ME KEYS -END                        00091800
.ZG10ZY            ANOP ,            END MUTUALLY EXCLUSIVE KEYS        00091900
.*----------------------------------------------------------------***   00092000
.***AG.KMEKY01 NAME, OPT RQD INPUT, ME KEYS -XVARIABLE                  00092100
&XDUMMY2           SETC  ''          INITIALIZE XVARIABLE               00092200
                   AIF   (K'&PARAMPTR LE 0).ZG12C                       00092300
&ZXDUMMY2          SETC  'INPUT'     SET IN/OUTPUT                      00092400
&XDUMMY2           SETC  'PARAMPTR'  SET XVARIABLE                      00092500
&ZXPARAMPTR        SETC  'INPUT'     SET IN/OUTPUT                      00092600
&XPARAMPTR         SETC  '&PARAMPTR(1)'         SET XVARIABLE PARM      00092700
                   AIF   (N'&PARAMPTR GT 1).ZG12A                       00092800
&XPARAMPTR         SETC  '&PARAMPTR'            SET XVARIABLE PARM      00092900
.ZG12A             AIF   (N'&PARAMPTR LE 1).ZG12B  CK NUM               00093000
&ZMS               SETC  '"PARAMPTR='                                   00093100
&ZMS               SETC  '&ZMS.&PARAMPTR"'                              00093200
&ZMS               SETC  '&ZMS "PARAMPTR"'                              00093300
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00093400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00093500
.ZG12B             AIF   (K'&XPARAMPTR GT 0).ZG12C  ONE PARM            00093600
&ZXDUMMY2          SETC  ''          RESET IN/OUTPUT                    00093700
&ZXPARAMPTR        SETC  ''          RESET IN/OUTPUT                    00093800
&ZMS               SETC  'WHEN "AVAIL" IS SPECIFIED'                    00093900
&ZMS               SETC  '&ZMS , "PARAMPTR" KEY AND ITS'                00094000
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00094100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00094200
.ZG12C             ANOP  ,                                              00094300
.*----------------------------------------------------------------***   00094400
.***AG.KMEKY02 NAME, OPT RQD INPUT, ME KEYS -XVARIABLE                  00094500
                   AIF   (K'&PARAMPTR64 LE 0).ZG13D  NO ME KEY          00094600
                   AIF   (N'&PARAMPTR64 LE 1).ZG13A  CK NUM             00094700
&ZMS               SETC  '"PARAMPTR64='                                 00094800
&ZMS               SETC  '&ZMS.&PARAMPTR64"'                            00094900
&ZMS               SETC  '&ZMS "PARAMPTR64"'                            00095000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00095100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00095200
.ZG13A             AIF   (K'&XDUMMY2 LE 0).ZG13B                        00095300
&ZMS               SETC  '"PARAMPTR64'                                  00095400
&ZMS               SETC  '&ZMS.=&PARAMPTR64"'                           00095500
&ZMS               SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'          00095600
&ZMS               SETC  '&ZMS "&XDUMMY2"'                              00095700
                   MNOTE 8,' &ZMS KEY.'                                 00095800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00095900
                   AGO   .ZG13D                                         00096000
.*                                                                      00096100
.ZG13B             ANOP  ,                                              00096200
&ZXDUMMY2          SETC  'INPUT'     SET IN/OUTPUT                      00096300
&XDUMMY2           SETC  'PARAMPTR64'           SET XVARIABLE           00096400
&ZXPARAMPTR64      SETC  'INPUT'     SET IN/OUTPUT                      00096500
&XPARAMPTR64       SETC  '&PARAMPTR64(1)'       SET XVARIABLE PARM      00096600
                   AIF   (N'&PARAMPTR64 GT 1).ZG13C                     00096700
&XPARAMPTR64       SETC  '&PARAMPTR64'          SET XVARIABLE PARM      00096800
.ZG13C             AIF   (K'&XPARAMPTR64 GT 0).ZG13D  ONE PARM          00096900
&ZXDUMMY2          SETC  ''          RESET IN/OUTPUT                    00097000
&ZXPARAMPTR64      SETC  ''          RESET IN/OUTPUT                    00097100
&ZMS               SETC  'WHEN "AVAIL" IS SPECIFIED'                    00097200
&ZMS               SETC  '&ZMS , "PARAMPTR64" KEY AND ITS'              00097300
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00097400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00097500
.ZG13D             ANOP  ,                                              00097600
.*------------------------------------------------------------------    00097700
.***AG.KME4Y09 NAME, OPT RQD INPUT, ME KEYS -CHECK IF KEY ENTERED       00097800
                   AIF   (K'&XDUMMY2 GT 0).ZG14B                        00097900
&ZXDUMMY2          SETC  ''          RESET IN/OUTPUT                    00098000
&ZXPARAMPTR        SETC  ''          RESET IN/OUTPUT                    00098100
&XDUMMY2           SETC  ''          ENSURE NULL                        00098200
&XPARAMPTR         SETC  ''          ENSURE NULL                        00098300
&ZMS               SETC  'ONE OF THE FOLLOWING'                         00098400
&ZMS               SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'            00098500
&ZMS               SETC  '&ZMS REQUIRED:'                               00098600
&ZMS               SETC  '&ZMS "PARAMPTR"'      VALID ME KEY            00098700
&ZMS               SETC  '&ZMS OR "PARAMPTR64".'  VALID ME KEY          00098800
                   MNOTE 8,' &ZMS '                                     00098900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00099000
.ZG14B             ANOP  ,                                              00099100
.*-------------------------------------------------------------------   00099200
.***AG.KMEKY13 NAME, OPT RQD INPUT, ME KEYS -PROCESS DEPENDENCIES       00099300
.ZG12ZY  AIF    ('&XDUMMY2' NE 'PARAMPTR').ZG13ZY                       00099400
.*-------------------------------------------------------------------   00099500
.***AG.KCK02 NAME, OPT RQD INPUT, ME KEYS -GPR OUT OF RANGE             00099600
                   AIF   (K'&ZXPARAMPTR LE 0).ZG12R  NOT I/O            00099700
                   AIF   ('&XPARAMPTR'(1,1) NE '(').ZG12R               00099800
&ZCGPR             SETC  '&XPARAMPTR'(2,K'&XPARAMPTR-2)                 00099900
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG12P                   00100000
                   AIF   (K'&ZCGPR GT 2).ZG12Q                          00100100
                   AIF   ('&ZCGPR' EQ '0').ZG12Q                        00100200
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00100300
                   AIF   (T'&ZCGPR NE 'N').ZG12Q  INVALID REG NAME      00100400
.ZG12P             ANOP  ,                                              00100500
                   AIF   (T'&ZCGPR NE 'N').ZG12R  NON NUMERIC           00100600
                   AIF   ('&ZCGPR' LT '2').ZG12Q                        00100700
                   AIF   ('&ZCGPR' LE '12').ZG12R                       00100800
.ZG12Q             ANOP  ,                                              00100900
&ZMS               SETC  '"PARAMPTR='                                   00101000
&ZMS               SETC  '&ZMS.&PARAMPTR"'                              00101100
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00101200
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00101300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00101400
.ZG12R             ANOP  ,                                              00101500
.*-------------------------------------------------------------------   00101600
.***AG.KMEKY13 NAME, OPT RQD INPUT, ME KEYS -PROCESS DEPENDENCIES       00101700
.ZG13ZY  AIF    ('&XDUMMY2' NE 'PARAMPTR64').ZG14ZY                     00101800
.*-------------------------------------------------------------------   00101900
.***AG.KCK02 NAME, OPT RQD INPUT, ME KEYS -GPR OUT OF RANGE             00102000
                   AIF   (K'&ZXPARAMPTR64 LE 0).ZG13R  NOT I/O          00102100
                   AIF   ('&XPARAMPTR64'(1,1) NE '(').ZG13R             00102200
&ZCGPR             SETC  '&XPARAMPTR64'(2,K'&XPARAMPTR64-2)             00102300
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG13P                   00102400
                   AIF   (K'&ZCGPR GT 2).ZG13Q                          00102500
                   AIF   ('&ZCGPR' EQ '0').ZG13Q                        00102600
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00102700
                   AIF   (T'&ZCGPR NE 'N').ZG13Q  INVALID REG NAME      00102800
.ZG13P             ANOP  ,                                              00102900
                   AIF   (T'&ZCGPR NE 'N').ZG13R  NON NUMERIC           00103000
                   AIF   ('&ZCGPR' LT '2').ZG13Q                        00103100
                   AIF   ('&ZCGPR' LE '12').ZG13R                       00103200
.ZG13Q             ANOP  ,                                              00103300
&ZMS               SETC  '"PARAMPTR64='                                 00103400
&ZMS               SETC  '&ZMS.&PARAMPTR64"'                            00103500
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00103600
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00103700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00103800
.ZG13R             ANOP  ,                                              00103900
.*-------------------------------------------------------------------   00104000
.***AG.KMEKY15 NAME, OPT RQD INPUT, ME KEYS -END                        00104100
.ZG14ZY            ANOP ,            END MUTUALLY EXCLUSIVE KEYS        00104200
.*----------------------------------------------------------------***   00104300
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00104400
                   AIF   (N'&TARGETPTR LE 1).ZG16A  CK NUM              00104500
&ZMS               SETC  '"TARGETPTR='                                  00104600
&ZMS               SETC  '&ZMS.&TARGETPTR"'                             00104700
&ZMS               SETC  '&ZMS "TARGETPTR"'                             00104800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00104900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00105000
.ZG16A             ANOP  ,                                              00105100
.*-------------------------------------------------------------------   00105200
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00105300
&ZXTARGETPTR       SETC  'INPUT'     SET IN/OUTPUT                      00105400
&XTARGETPTR        SETC  '&TARGETPTR(1)'        SET XVARIABLE           00105500
                   AIF   (N'&TARGETPTR GT 1).ZG16B  MULTI               00105600
&XTARGETPTR        SETC  '&TARGETPTR'           SET XVARIABLE           00105700
.ZG16B             AIF   (K'&TARGETPTR(1) GT 0).ZG16C                   00105800
&ZXTARGETPTR       SETC  ''          RESET IN/OUTPUT                    00105900
&ZMS               SETC  'WHEN "AVAIL" IS SPECIFIED'                    00106000
&ZMS               SETC  '&ZMS , "TARGETPTR" KEY AND ITS'               00106100
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00106200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00106300
.ZG16C             ANOP  ,                                              00106400
.*-------------------------------------------------------------------   00106500
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00106600
                   AIF   (K'&ZXTARGETPTR LE 0).ZG16R  NOT I/O           00106700
                   AIF   ('&XTARGETPTR'(1,1) NE '(').ZG16R              00106800
&ZCGPR             SETC  '&XTARGETPTR'(2,K'&XTARGETPTR-2)               00106900
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG16P                   00107000
                   AIF   (K'&ZCGPR GT 2).ZG16Q                          00107100
                   AIF   ('&ZCGPR' EQ '0').ZG16Q                        00107200
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00107300
                   AIF   (T'&ZCGPR NE 'N').ZG16Q  INVALID REG NAME      00107400
.ZG16P             ANOP  ,                                              00107500
                   AIF   (T'&ZCGPR NE 'N').ZG16R  NON NUMERIC           00107600
                   AIF   ('&ZCGPR' LT '2').ZG16Q                        00107700
                   AIF   ('&ZCGPR' LE '12').ZG16R                       00107800
.ZG16Q             ANOP  ,                                              00107900
&ZMS               SETC  '"TARGETPTR='                                  00108000
&ZMS               SETC  '&ZMS.&TARGETPTR"'                             00108100
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00108200
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00108300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00108400
.ZG16R             ANOP  ,                                              00108500
.*-------------------------------------------------------------------   00108600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00108700
.ZG18              ANOP  ,                                              00108800
&ZTLC              SETC 'NOTAVAIL'                                      00108900
                   AIF   ('&DYNSTORAGE(1)' NE '&ZTLC').ZG33             00109000
&XDYNSTORAGE       SETC  'NOTAVAIL'  SET KEYWORD                        00109100
                   AIF   (N'&DYNSTORAGE LE 1).ZG18A  CK NUM             00109200
&ZMS               SETC  '"DYNSTORAGE='                                 00109300
&ZMS               SETC  '&ZMS.&DYNSTORAGE"'                            00109400
&ZMS               SETC  '&ZMS "DYNSTORAGE"'                            00109500
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00109600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00109700
.ZG18A             ANOP  ,                                              00109800
.*------------------------------------------------------------------    00109900
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00110000
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00110100
.ZG18A0            AIF   (K'&ARRPTR LE 0).ZG18A1  OK                    00110200
&ZCVAL             SETC '&ZCVAL ARRPTR'         INCORRECT KEY USED      00110300
.ZG18A1            AIF   (K'&ARRPARAMPTR LE 0).ZG18A2  OK               00110400
&ZCVAL             SETC '&ZCVAL ARRPARAMPTR'    INCORRECT KEY USED      00110500
.ZG18A2            AIF   (K'&ARRPARAMPTR64 LE 0).ZG18A3  OK             00110600
&ZCVAL             SETC '&ZCVAL ARRPARAMPTR64'  INCORRECT KEY USED      00110700
.ZG18A3            AIF   (K'&PARAMPTR LE 0).ZG18A4  OK                  00110800
&ZCVAL             SETC '&ZCVAL PARAMPTR'       INCORRECT KEY USED      00110900
.ZG18A4            AIF   (K'&PARAMPTR64 LE 0).ZG18A5  OK                00111000
&ZCVAL             SETC '&ZCVAL PARAMPTR64'     INCORRECT KEY USED      00111100
.ZG18A5            AIF   (K'&TARGETPTR LE 0).ZG18A6  OK                 00111200
&ZCVAL             SETC '&ZCVAL TARGETPTR'      INCORRECT KEY USED      00111300
.ZG18A6            AIF   (K'&ZCVAL LE 0).ZG18A7  OK                     00111400
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00111500
&ZMS               SETC  '"DYNSTORAGE'                                  00111600
&ZMS               SETC  '&ZMS.=&DYNSTORAGE"'                           00111700
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00111800
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00111900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00112000
.ZG18A7            ANOP  ,                                              00112100
.*----------------------------------------------------------------***   00112200
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00112300
                   AIF   (N'&ARR LE 1).ZG20A    CK NUM                  00112400
&ZMS               SETC  '"ARR='                                        00112500
&ZMS               SETC  '&ZMS.&ARR"'                                   00112600
&ZMS               SETC  '&ZMS "ARR"'                                   00112700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00112800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00112900
.ZG20A             ANOP  ,                                              00113000
.*-------------------------------------------------------------------   00113100
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00113200
&ZXARR             SETC  'INPUT'     SET IN/OUTPUT                      00113300
&XARR              SETC  '&ARR(1)'   SET XVARIABLE                      00113400
                   AIF   (N'&ARR GT 1).ZG20B    MULTI                   00113500
&XARR              SETC  '&ARR'      SET XVARIABLE                      00113600
.ZG20B             AIF   (K'&ARR(1) GT 0).ZG20C                         00113700
&ZXARR             SETC  ''          RESET IN/OUTPUT                    00113800
&ZMS               SETC  'WHEN "NOTAVAIL" IS SPECIFIED'                 00113900
&ZMS               SETC  '&ZMS , "ARR" KEY AND ITS'                     00114000
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00114100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00114200
.ZG20C             ANOP  ,                                              00114300
.*-------------------------------------------------------------------   00114400
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00114500
                   AIF   (K'&ZXARR LE 0).ZG20R  NOT I/O                 00114600
                   AIF   ('&XARR'(1,1) NE '(').ZG20R                    00114700
&ZCGPR             SETC  '&XARR'(2,K'&XARR-2)                           00114800
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG20P                   00114900
                   AIF   (K'&ZCGPR GT 2).ZG20Q                          00115000
                   AIF   ('&ZCGPR' EQ '0').ZG20Q                        00115100
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00115200
                   AIF   (T'&ZCGPR NE 'N').ZG20Q  INVALID REG NAME      00115300
.ZG20P             ANOP  ,                                              00115400
                   AIF   (T'&ZCGPR NE 'N').ZG20R  NON NUMERIC           00115500
                   AIF   ('&ZCGPR' LT '2').ZG20Q                        00115600
                   AIF   ('&ZCGPR' LE '12').ZG20R                       00115700
.ZG20Q             ANOP  ,                                              00115800
&ZMS               SETC  '"ARR='                                        00115900
&ZMS               SETC  '&ZMS.&ARR"'                                   00116000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00116100
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00116200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00116300
.ZG20R             ANOP  ,                                              00116400
.*----------------------------------------------------------------***   00116500
.***AG.KMEKY01 NAME, OPT RQD INPUT, ME KEYS -XVARIABLE                  00116600
&XDUMMY1           SETC  ''          INITIALIZE XVARIABLE               00116700
                   AIF   (K'&ARRPARAM LE 0).ZG23C                       00116800
&ZXDUMMY1          SETC  'INPUT'     SET IN/OUTPUT                      00116900
&XDUMMY1           SETC  'ARRPARAM'  SET XVARIABLE                      00117000
&ZXARRPARAM        SETC  'INPUT'     SET IN/OUTPUT                      00117100
&XARRPARAM         SETC  '&ARRPARAM(1)'         SET XVARIABLE PARM      00117200
                   AIF   (N'&ARRPARAM GT 1).ZG23A                       00117300
&XARRPARAM         SETC  '&ARRPARAM'            SET XVARIABLE PARM      00117400
.ZG23A             AIF   (N'&ARRPARAM LE 1).ZG23B  CK NUM               00117500
&ZMS               SETC  '"ARRPARAM='                                   00117600
&ZMS               SETC  '&ZMS.&ARRPARAM"'                              00117700
&ZMS               SETC  '&ZMS "ARRPARAM"'                              00117800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00117900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00118000
.ZG23B             AIF   (K'&XARRPARAM GT 0).ZG23C  ONE PARM            00118100
&ZXDUMMY1          SETC  ''          RESET IN/OUTPUT                    00118200
&ZXARRPARAM        SETC  ''          RESET IN/OUTPUT                    00118300
&ZMS               SETC  'WHEN "NOTAVAIL" IS SPECIFIED'                 00118400
&ZMS               SETC  '&ZMS , "ARRPARAM" KEY AND ITS'                00118500
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00118600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00118700
.ZG23C             ANOP  ,                                              00118800
.*----------------------------------------------------------------***   00118900
.***AG.KMEKY02 NAME, OPT RQD INPUT, ME KEYS -XVARIABLE                  00119000
                   AIF   (K'&ARRPARAM64 LE 0).ZG24D  NO ME KEY          00119100
                   AIF   (N'&ARRPARAM64 LE 1).ZG24A  CK NUM             00119200
&ZMS               SETC  '"ARRPARAM64='                                 00119300
&ZMS               SETC  '&ZMS.&ARRPARAM64"'                            00119400
&ZMS               SETC  '&ZMS "ARRPARAM64"'                            00119500
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00119600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00119700
.ZG24A             AIF   (K'&XDUMMY1 LE 0).ZG24B                        00119800
&ZMS               SETC  '"ARRPARAM64'                                  00119900
&ZMS               SETC  '&ZMS.=&ARRPARAM64"'                           00120000
&ZMS               SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'          00120100
&ZMS               SETC  '&ZMS "&XDUMMY1"'                              00120200
                   MNOTE 8,' &ZMS KEY.'                                 00120300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00120400
                   AGO   .ZG24D                                         00120500
.*                                                                      00120600
.ZG24B             ANOP  ,                                              00120700
&ZXDUMMY1          SETC  'INPUT'     SET IN/OUTPUT                      00120800
&XDUMMY1           SETC  'ARRPARAM64'           SET XVARIABLE           00120900
&ZXARRPARAM64      SETC  'INPUT'     SET IN/OUTPUT                      00121000
&XARRPARAM64       SETC  '&ARRPARAM64(1)'       SET XVARIABLE PARM      00121100
                   AIF   (N'&ARRPARAM64 GT 1).ZG24C                     00121200
&XARRPARAM64       SETC  '&ARRPARAM64'          SET XVARIABLE PARM      00121300
.ZG24C             AIF   (K'&XARRPARAM64 GT 0).ZG24D  ONE PARM          00121400
&ZXDUMMY1          SETC  ''          RESET IN/OUTPUT                    00121500
&ZXARRPARAM64      SETC  ''          RESET IN/OUTPUT                    00121600
&ZMS               SETC  'WHEN "NOTAVAIL" IS SPECIFIED'                 00121700
&ZMS               SETC  '&ZMS , "ARRPARAM64" KEY AND ITS'              00121800
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00121900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00122000
.ZG24D             ANOP  ,                                              00122100
.*------------------------------------------------------------------    00122200
.***AG.KME4Y09 NAME, OPT RQD INPUT, ME KEYS -CHECK IF KEY ENTERED       00122300
                   AIF   (K'&XDUMMY1 GT 0).ZG25B                        00122400
&ZXDUMMY1          SETC  ''          RESET IN/OUTPUT                    00122500
&ZXARRPARAM        SETC  ''          RESET IN/OUTPUT                    00122600
&XDUMMY1           SETC  ''          ENSURE NULL                        00122700
&XARRPARAM         SETC  ''          ENSURE NULL                        00122800
&ZMS               SETC  'ONE OF THE FOLLOWING'                         00122900
&ZMS               SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'            00123000
&ZMS               SETC  '&ZMS REQUIRED:'                               00123100
&ZMS               SETC  '&ZMS "ARRPARAM"'      VALID ME KEY            00123200
&ZMS               SETC  '&ZMS OR "ARRPARAM64".'  VALID ME KEY          00123300
                   MNOTE 8,' &ZMS '                                     00123400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00123500
.ZG25B             ANOP  ,                                              00123600
.*-------------------------------------------------------------------   00123700
.***AG.KMEKY13 NAME, OPT RQD INPUT, ME KEYS -PROCESS DEPENDENCIES       00123800
.ZG23ZY  AIF    ('&XDUMMY1' NE 'ARRPARAM').ZG24ZY                       00123900
.*-------------------------------------------------------------------   00124000
.***AG.KCK02 NAME, OPT RQD INPUT, ME KEYS -GPR OUT OF RANGE             00124100
                   AIF   (K'&ZXARRPARAM LE 0).ZG23R  NOT I/O            00124200
                   AIF   ('&XARRPARAM'(1,1) NE '(').ZG23R               00124300
&ZCGPR             SETC  '&XARRPARAM'(2,K'&XARRPARAM-2)                 00124400
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG23P                   00124500
                   AIF   (K'&ZCGPR GT 2).ZG23Q                          00124600
                   AIF   ('&ZCGPR' EQ '0').ZG23Q                        00124700
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00124800
                   AIF   (T'&ZCGPR NE 'N').ZG23Q  INVALID REG NAME      00124900
.ZG23P             ANOP  ,                                              00125000
                   AIF   (T'&ZCGPR NE 'N').ZG23R  NON NUMERIC           00125100
                   AIF   ('&ZCGPR' LT '2').ZG23Q                        00125200
                   AIF   ('&ZCGPR' LE '12').ZG23R                       00125300
.ZG23Q             ANOP  ,                                              00125400
&ZMS               SETC  '"ARRPARAM='                                   00125500
&ZMS               SETC  '&ZMS.&ARRPARAM"'                              00125600
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00125700
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00125800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00125900
.ZG23R             ANOP  ,                                              00126000
.*-------------------------------------------------------------------   00126100
.***AG.KMEKY13 NAME, OPT RQD INPUT, ME KEYS -PROCESS DEPENDENCIES       00126200
.ZG24ZY  AIF    ('&XDUMMY1' NE 'ARRPARAM64').ZG25ZY                     00126300
.*-------------------------------------------------------------------   00126400
.***AG.KCK02 NAME, OPT RQD INPUT, ME KEYS -GPR OUT OF RANGE             00126500
                   AIF   (K'&ZXARRPARAM64 LE 0).ZG24R  NOT I/O          00126600
                   AIF   ('&XARRPARAM64'(1,1) NE '(').ZG24R             00126700
&ZCGPR             SETC  '&XARRPARAM64'(2,K'&XARRPARAM64-2)             00126800
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG24P                   00126900
                   AIF   (K'&ZCGPR GT 2).ZG24Q                          00127000
                   AIF   ('&ZCGPR' EQ '0').ZG24Q                        00127100
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00127200
                   AIF   (T'&ZCGPR NE 'N').ZG24Q  INVALID REG NAME      00127300
.ZG24P             ANOP  ,                                              00127400
                   AIF   (T'&ZCGPR NE 'N').ZG24R  NON NUMERIC           00127500
                   AIF   ('&ZCGPR' LT '2').ZG24Q                        00127600
                   AIF   ('&ZCGPR' LE '12').ZG24R                       00127700
.ZG24Q             ANOP  ,                                              00127800
&ZMS               SETC  '"ARRPARAM64='                                 00127900
&ZMS               SETC  '&ZMS.&ARRPARAM64"'                            00128000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00128100
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00128200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00128300
.ZG24R             ANOP  ,                                              00128400
.*-------------------------------------------------------------------   00128500
.***AG.KMEKY15 NAME, OPT RQD INPUT, ME KEYS -END                        00128600
.ZG25ZY            ANOP ,            END MUTUALLY EXCLUSIVE KEYS        00128700
.*----------------------------------------------------------------***   00128800
.***AG.KMEKY01 NAME, OPT RQD INPUT, ME KEYS -XVARIABLE                  00128900
&XDUMMY2           SETC  ''          INITIALIZE XVARIABLE               00129000
                   AIF   (K'&PARAM LE 0).ZG27C                          00129100
&ZXDUMMY2          SETC  'INPUT'     SET IN/OUTPUT                      00129200
&XDUMMY2           SETC  'PARAM'     SET XVARIABLE                      00129300
&ZXPARAM           SETC  'INPUT'     SET IN/OUTPUT                      00129400
&XPARAM            SETC  '&PARAM(1)'            SET XVARIABLE PARM      00129500
                   AIF   (N'&PARAM GT 1).ZG27A                          00129600
&XPARAM            SETC  '&PARAM'    SET XVARIABLE PARM                 00129700
.ZG27A             AIF   (N'&PARAM LE 1).ZG27B  CK NUM                  00129800
&ZMS               SETC  '"PARAM='                                      00129900
&ZMS               SETC  '&ZMS.&PARAM"'                                 00130000
&ZMS               SETC  '&ZMS "PARAM"'                                 00130100
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00130200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00130300
.ZG27B             AIF   (K'&XPARAM GT 0).ZG27C  ONE PARM               00130400
&ZXDUMMY2          SETC  ''          RESET IN/OUTPUT                    00130500
&ZXPARAM           SETC  ''          RESET IN/OUTPUT                    00130600
&ZMS               SETC  'WHEN "NOTAVAIL" IS SPECIFIED'                 00130700
&ZMS               SETC  '&ZMS , "PARAM" KEY AND ITS'                   00130800
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00130900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00131000
.ZG27C             ANOP  ,                                              00131100
.*----------------------------------------------------------------***   00131200
.***AG.KMEKY02 NAME, OPT RQD INPUT, ME KEYS -XVARIABLE                  00131300
                   AIF   (K'&PARAM64 LE 0).ZG28D  NO ME KEY             00131400
                   AIF   (N'&PARAM64 LE 1).ZG28A  CK NUM                00131500
&ZMS               SETC  '"PARAM64='                                    00131600
&ZMS               SETC  '&ZMS.&PARAM64"'                               00131700
&ZMS               SETC  '&ZMS "PARAM64"'                               00131800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00131900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00132000
.ZG28A             AIF   (K'&XDUMMY2 LE 0).ZG28B                        00132100
&ZMS               SETC  '"PARAM64'                                     00132200
&ZMS               SETC  '&ZMS.=&PARAM64"'                              00132300
&ZMS               SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'          00132400
&ZMS               SETC  '&ZMS "&XDUMMY2"'                              00132500
                   MNOTE 8,' &ZMS KEY.'                                 00132600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00132700
                   AGO   .ZG28D                                         00132800
.*                                                                      00132900
.ZG28B             ANOP  ,                                              00133000
&ZXDUMMY2          SETC  'INPUT'     SET IN/OUTPUT                      00133100
&XDUMMY2           SETC  'PARAM64'   SET XVARIABLE                      00133200
&ZXPARAM64         SETC  'INPUT'     SET IN/OUTPUT                      00133300
&XPARAM64          SETC  '&PARAM64(1)'          SET XVARIABLE PARM      00133400
                   AIF   (N'&PARAM64 GT 1).ZG28C                        00133500
&XPARAM64          SETC  '&PARAM64'  SET XVARIABLE PARM                 00133600
.ZG28C             AIF   (K'&XPARAM64 GT 0).ZG28D  ONE PARM             00133700
&ZXDUMMY2          SETC  ''          RESET IN/OUTPUT                    00133800
&ZXPARAM64         SETC  ''          RESET IN/OUTPUT                    00133900
&ZMS               SETC  'WHEN "NOTAVAIL" IS SPECIFIED'                 00134000
&ZMS               SETC  '&ZMS , "PARAM64" KEY AND ITS'                 00134100
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00134200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00134300
.ZG28D             ANOP  ,                                              00134400
.*------------------------------------------------------------------    00134500
.***AG.KME4Y09 NAME, OPT RQD INPUT, ME KEYS -CHECK IF KEY ENTERED       00134600
                   AIF   (K'&XDUMMY2 GT 0).ZG29B                        00134700
&ZXDUMMY2          SETC  ''          RESET IN/OUTPUT                    00134800
&ZXPARAM           SETC  ''          RESET IN/OUTPUT                    00134900
&XDUMMY2           SETC  ''          ENSURE NULL                        00135000
&XPARAM            SETC  ''          ENSURE NULL                        00135100
&ZMS               SETC  'ONE OF THE FOLLOWING'                         00135200
&ZMS               SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'            00135300
&ZMS               SETC  '&ZMS REQUIRED:'                               00135400
&ZMS               SETC  '&ZMS "PARAM"'         VALID ME KEY            00135500
&ZMS               SETC  '&ZMS OR "PARAM64".'   VALID ME KEY            00135600
                   MNOTE 8,' &ZMS '                                     00135700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00135800
.ZG29B             ANOP  ,                                              00135900
.*-------------------------------------------------------------------   00136000
.***AG.KMEKY13 NAME, OPT RQD INPUT, ME KEYS -PROCESS DEPENDENCIES       00136100
.ZG27ZY  AIF    ('&XDUMMY2' NE 'PARAM').ZG28ZY                          00136200
.*-------------------------------------------------------------------   00136300
.***AG.KCK02 NAME, OPT RQD INPUT, ME KEYS -GPR OUT OF RANGE             00136400
                   AIF   (K'&ZXPARAM LE 0).ZG27R  NOT I/O               00136500
                   AIF   ('&XPARAM'(1,1) NE '(').ZG27R                  00136600
&ZCGPR             SETC  '&XPARAM'(2,K'&XPARAM-2)                       00136700
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG27P                   00136800
                   AIF   (K'&ZCGPR GT 2).ZG27Q                          00136900
                   AIF   ('&ZCGPR' EQ '0').ZG27Q                        00137000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00137100
                   AIF   (T'&ZCGPR NE 'N').ZG27Q  INVALID REG NAME      00137200
.ZG27P             ANOP  ,                                              00137300
                   AIF   (T'&ZCGPR NE 'N').ZG27R  NON NUMERIC           00137400
                   AIF   ('&ZCGPR' LT '2').ZG27Q                        00137500
                   AIF   ('&ZCGPR' LE '12').ZG27R                       00137600
.ZG27Q             ANOP  ,                                              00137700
&ZMS               SETC  '"PARAM='                                      00137800
&ZMS               SETC  '&ZMS.&PARAM"'                                 00137900
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00138000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00138100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00138200
.ZG27R             ANOP  ,                                              00138300
.*-------------------------------------------------------------------   00138400
.***AG.KMEKY13 NAME, OPT RQD INPUT, ME KEYS -PROCESS DEPENDENCIES       00138500
.ZG28ZY  AIF    ('&XDUMMY2' NE 'PARAM64').ZG29ZY                        00138600
.*-------------------------------------------------------------------   00138700
.***AG.KCK02 NAME, OPT RQD INPUT, ME KEYS -GPR OUT OF RANGE             00138800
                   AIF   (K'&ZXPARAM64 LE 0).ZG28R  NOT I/O             00138900
                   AIF   ('&XPARAM64'(1,1) NE '(').ZG28R                00139000
&ZCGPR             SETC  '&XPARAM64'(2,K'&XPARAM64-2)                   00139100
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG28P                   00139200
                   AIF   (K'&ZCGPR GT 2).ZG28Q                          00139300
                   AIF   ('&ZCGPR' EQ '0').ZG28Q                        00139400
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00139500
                   AIF   (T'&ZCGPR NE 'N').ZG28Q  INVALID REG NAME      00139600
.ZG28P             ANOP  ,                                              00139700
                   AIF   (T'&ZCGPR NE 'N').ZG28R  NON NUMERIC           00139800
                   AIF   ('&ZCGPR' LT '2').ZG28Q                        00139900
                   AIF   ('&ZCGPR' LE '12').ZG28R                       00140000
.ZG28Q             ANOP  ,                                              00140100
&ZMS               SETC  '"PARAM64='                                    00140200
&ZMS               SETC  '&ZMS.&PARAM64"'                               00140300
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00140400
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00140500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00140600
.ZG28R             ANOP  ,                                              00140700
.*-------------------------------------------------------------------   00140800
.***AG.KMEKY15 NAME, OPT RQD INPUT, ME KEYS -END                        00140900
.ZG29ZY            ANOP ,            END MUTUALLY EXCLUSIVE KEYS        00141000
.*----------------------------------------------------------------***   00141100
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00141200
                   AIF   (N'&TARGET LE 1).ZG31A  CK NUM                 00141300
&ZMS               SETC  '"TARGET='                                     00141400
&ZMS               SETC  '&ZMS.&TARGET"'                                00141500
&ZMS               SETC  '&ZMS "TARGET"'                                00141600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00141700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00141800
.ZG31A             ANOP  ,                                              00141900
.*-------------------------------------------------------------------   00142000
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00142100
&ZXTARGET          SETC  'INPUT'     SET IN/OUTPUT                      00142200
&XTARGET           SETC  '&TARGET(1)'           SET XVARIABLE           00142300
                   AIF   (N'&TARGET GT 1).ZG31B  MULTI                  00142400
&XTARGET           SETC  '&TARGET'   SET XVARIABLE                      00142500
.ZG31B             AIF   (K'&TARGET(1) GT 0).ZG31C                      00142600
&ZXTARGET          SETC  ''          RESET IN/OUTPUT                    00142700
&ZMS               SETC  'WHEN "NOTAVAIL" IS SPECIFIED'                 00142800
&ZMS               SETC  '&ZMS , "TARGET" KEY AND ITS'                  00142900
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00143000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00143100
.ZG31C             ANOP  ,                                              00143200
.*-------------------------------------------------------------------   00143300
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00143400
                   AIF   (K'&ZXTARGET LE 0).ZG31R  NOT I/O              00143500
                   AIF   ('&XTARGET'(1,1) NE '(').ZG31R                 00143600
&ZCGPR             SETC  '&XTARGET'(2,K'&XTARGET-2)                     00143700
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG31P                   00143800
                   AIF   (K'&ZCGPR GT 2).ZG31Q                          00143900
                   AIF   ('&ZCGPR' EQ '0').ZG31Q                        00144000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00144100
                   AIF   (T'&ZCGPR NE 'N').ZG31Q  INVALID REG NAME      00144200
.ZG31P             ANOP  ,                                              00144300
                   AIF   (T'&ZCGPR NE 'N').ZG31R  NON NUMERIC           00144400
                   AIF   ('&ZCGPR' LT '2').ZG31Q                        00144500
                   AIF   ('&ZCGPR' LE '12').ZG31R                       00144600
.ZG31Q             ANOP  ,                                              00144700
&ZMS               SETC  '"TARGET='                                     00144800
&ZMS               SETC  '&ZMS.&TARGET"'                                00144900
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00145000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00145100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00145200
.ZG31R             ANOP  ,                                              00145300
.*------------------------------------------------------------------    00145400
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00145500
.ZG33              ANOP  ,                                              00145600
&ZXDYNSTORAGE      SETC  'INPUT'     SET IN/OUTPUT                      00145700
                   AIF   (K'&XDYNSTORAGE GT 0).ZG33E  VALID ARG         00145800
                   AIF   (T'&DYNSTORAGE EQ 'O').ZG33D  OMITTED          00145900
&ZASYSLNDX         SETA  0                                              00146000
.ZG33A             ANOP  ,           POSITIONAL MACRO KEY               00146100
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   00146200
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG33C               00146300
&ZTLC              SETC 'DYNSTORAGE'                                    00146400
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG33A      00146500
.ZG33B             ANOP  ,                                              00146600
&ZXDYNSTORAGE      SETC  ''          RESET IN/OUTPUT                    00146700
&ZMS               SETC  'THE "DYNSTORAGE" KEY'                         00146800
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        00146900
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               00147000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00147100
                   AGO   .ZG33E                                         00147200
.ZG33C             ANOP  ,                                              00147300
&ZXDYNSTORAGE      SETC  ''          RESET IN/OUTPUT                    00147400
&ZMS               SETC  '"DYNSTORAGE='                                 00147500
&ZMS               SETC  '&ZMS.&DYNSTORAGE"'                            00147600
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00147700
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00147800
&ZMS               SETC  '&ZMS "AVAIL"'                                 00147900
&ZMS               SETC  '&ZMS OR "NOTAVAIL".'                          00148000
                   MNOTE 8,' &ZMS '                                     00148100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00148200
                   AGO   .ZG33E                                         00148300
.ZG33D             ANOP  ,                                              00148400
&XDYNSTORAGE       SETC  'AVAIL'     SET DEFAULT KEYWORD                00148500
.ZG33E             ANOP  ,                                              00148600
.*------------------------------------------------------------------    00148700
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00148800
&XTARGETSTATE      SETC  ''          INITIALIZE XVARIABLE               00148900
.*-------------------------------------------------------------------   00149000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00149100
.ZG36              ANOP  ,                                              00149200
                   AIF   (K'&TARGETSTATE(1) LE 0).ZG36A                 00149300
&ZTLC              SETC 'PROB'                                          00149400
                   AIF   ('&TARGETSTATE(1)' NE '&ZTLC').ZG37            00149500
&XTARGETSTATE      SETC  'PROB'      SET KEYWORD                        00149600
                   AIF   (N'&TARGETSTATE LE 1).ZG36A  CK NUM            00149700
&ZMS               SETC  '"TARGETSTATE='                                00149800
&ZMS               SETC  '&ZMS.&TARGETSTATE"'                           00149900
&ZMS               SETC  '&ZMS "TARGETSTATE"'                           00150000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00150100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00150200
.ZG36A             ANOP  ,                                              00150300
.*-------------------------------------------------------------------   00150400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00150500
.ZG37              ANOP  ,                                              00150600
&ZTLC              SETC 'SUP'                                           00150700
                   AIF   ('&TARGETSTATE(1)' NE '&ZTLC').ZG38            00150800
&XTARGETSTATE      SETC  'SUP'       SET KEYWORD                        00150900
                   AIF   (N'&TARGETSTATE LE 1).ZG37A  CK NUM            00151000
&ZMS               SETC  '"TARGETSTATE='                                00151100
&ZMS               SETC  '&ZMS.&TARGETSTATE"'                           00151200
&ZMS               SETC  '&ZMS "TARGETSTATE"'                           00151300
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00151400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00151500
.ZG37A             ANOP  ,                                              00151600
.*------------------------------------------------------------------    00151700
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00151800
.ZG38              ANOP  ,                                              00151900
&ZXTARGETSTATE     SETC  'INPUT'     SET IN/OUTPUT                      00152000
                   AIF   (K'&XTARGETSTATE GT 0).ZG38E  VALID ARG        00152100
                   AIF   (T'&TARGETSTATE EQ 'O').ZG38D  OMITTED         00152200
&ZASYSLNDX         SETA  0                                              00152300
.ZG38A             ANOP  ,           POSITIONAL MACRO KEY               00152400
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   00152500
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG38C               00152600
&ZTLC              SETC 'TARGETSTATE'                                   00152700
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG38A      00152800
.ZG38B             ANOP  ,                                              00152900
&ZXTARGETSTATE     SETC  ''          RESET IN/OUTPUT                    00153000
&ZMS               SETC  'THE "TARGETSTATE" KEY'                        00153100
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        00153200
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               00153300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00153400
                   AGO   .ZG38E                                         00153500
.ZG38C             ANOP  ,                                              00153600
&ZXTARGETSTATE     SETC  ''          RESET IN/OUTPUT                    00153700
&ZMS               SETC  '"TARGETSTATE='                                00153800
&ZMS               SETC  '&ZMS.&TARGETSTATE"'                           00153900
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00154000
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00154100
&ZMS               SETC  '&ZMS "PROB"'                                  00154200
&ZMS               SETC  '&ZMS OR "SUP".'                               00154300
                   MNOTE 8,' &ZMS '                                     00154400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00154500
                   AGO   .ZG38E                                         00154600
.ZG38D             ANOP  ,                                              00154700
&XTARGETSTATE      SETC  'PROB'      SET DEFAULT KEYWORD                00154800
.ZG38E             ANOP  ,                                              00154900
.*------------------------------------------------------------------    00155000
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00155100
                   AIF   (K'&TARGETSTATE(1) GT 0).ZG38F  PARM           00155200
&XTARGETSTATE      SETC  ''          ENSURE NULL KEYWORD                00155300
&ZXTARGETSTATE     SETC  ''          RESET IN/OUTPUT                    00155400
&ZMS               SETC  'THE'                                          00155500
&ZMS               SETC  '&ZMS "TARGETSTATE" KEY AND ITS'               00155600
&ZMS               SETC  '&ZMS ARGUMENT ARE REQUIRED.'                  00155700
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00155800
&ZMS               SETC  '&ZMS "PROB"'                                  00155900
&ZMS               SETC  '&ZMS OR "SUP".'                               00156000
                   MNOTE 8,' &ZMS '                                     00156100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00156200
.ZG38F             ANOP  ,                                              00156300
.*------------------------------------------------------------------    00156400
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00156500
&XASYNCH           SETC  ''          INITIALIZE XVARIABLE               00156600
.*-------------------------------------------------------------------   00156700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00156800
.ZG41              ANOP  ,                                              00156900
                   AIF   (K'&ASYNCH(1) LE 0).ZG41A                      00157000
&ZTLC              SETC 'NO'                                            00157100
                   AIF   ('&ASYNCH(1)' NE '&ZTLC').ZG42                 00157200
&XASYNCH           SETC  'NO'        SET KEYWORD                        00157300
                   AIF   (N'&ASYNCH LE 1).ZG41A  CK NUM                 00157400
&ZMS               SETC  '"ASYNCH='                                     00157500
&ZMS               SETC  '&ZMS.&ASYNCH"'                                00157600
&ZMS               SETC  '&ZMS "ASYNCH"'                                00157700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00157800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00157900
.ZG41A             ANOP  ,                                              00158000
.*-------------------------------------------------------------------   00158100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00158200
.ZG42              ANOP  ,                                              00158300
&ZTLC              SETC 'YES'                                           00158400
                   AIF   ('&ASYNCH(1)' NE '&ZTLC').ZG43                 00158500
&XASYNCH           SETC  'YES'       SET KEYWORD                        00158600
                   AIF   (N'&ASYNCH LE 1).ZG42A  CK NUM                 00158700
&ZMS               SETC  '"ASYNCH='                                     00158800
&ZMS               SETC  '&ZMS.&ASYNCH"'                                00158900
&ZMS               SETC  '&ZMS "ASYNCH"'                                00159000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00159100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00159200
.ZG42A             ANOP  ,                                              00159300
.*------------------------------------------------------------------    00159400
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00159500
.ZG43              ANOP  ,                                              00159600
&ZXASYNCH          SETC  'INPUT'     SET IN/OUTPUT                      00159700
                   AIF   (K'&XASYNCH GT 0).ZG43E  VALID ARG             00159800
                   AIF   (T'&ASYNCH EQ 'O').ZG43D  OMITTED              00159900
&ZASYSLNDX         SETA  0                                              00160000
.ZG43A             ANOP  ,           POSITIONAL MACRO KEY               00160100
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   00160200
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG43C               00160300
&ZTLC              SETC 'ASYNCH'                                        00160400
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG43A      00160500
.ZG43B             ANOP  ,                                              00160600
&ZXASYNCH          SETC  ''          RESET IN/OUTPUT                    00160700
&ZMS               SETC  'THE "ASYNCH" KEY'                             00160800
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        00160900
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               00161000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00161100
                   AGO   .ZG43E                                         00161200
.ZG43C             ANOP  ,                                              00161300
&ZXASYNCH          SETC  ''          RESET IN/OUTPUT                    00161400
&ZMS               SETC  '"ASYNCH='                                     00161500
&ZMS               SETC  '&ZMS.&ASYNCH"'                                00161600
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00161700
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00161800
&ZMS               SETC  '&ZMS "NO"'                                    00161900
&ZMS               SETC  '&ZMS OR "YES".'                               00162000
                   MNOTE 8,' &ZMS '                                     00162100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00162200
                   AGO   .ZG43E                                         00162300
.ZG43D             ANOP  ,                                              00162400
&XASYNCH           SETC  'NO'        SET DEFAULT KEYWORD                00162500
.ZG43E             ANOP  ,                                              00162600
.******************************************************************     00162700
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00162800
.******************************************************************     00162900
                   ACTR  10000                                          00163000
.*----------------------------------------------------------------***   00163100
.***AH.P02 EXTRA POSITIONALS                                            00163200
                   AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS           00163300
                   AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL           00163400
                   AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL       00163500
                   AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL        00163600
.ZGLISTX1          ANOP  ,                                              00163700
&ZCVAL             SETC  ''          ERROR FIELD                        00163800
&ZAWRK             SETA  0           POSITIONAL NUMBER                  00163900
.ZGLIST2           ANOP  ,                                              00164000
&ZAWRK             SETA  &ZAWRK+1    NEXT POSITIONAL                    00164100
                   AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE           00164200
&ZCVAL             SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                00164300
                   AGO   .ZGLIST2                                       00164400
.*                                                                      00164500
.ZGLIST3           ANOP  ,                                              00164600
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)  STRIP COMMA             00164700
&ZMS               SETC  'POSITIONAL ARGUMENT(S),'                      00164800
&ZMS               SETC  '&ZMS "&ZCVAL"'                                00164900
&ZMS               SETC  '&ZMS CANNOT BE USED.'                         00165000
&ZMS               SETC  '&ZMS NO POSITIONAL ARGUMENTS'                 00165100
                   MNOTE 8,' &ZMS ARE ALLOWED.'                         00165200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00165300
.ZGLISTX           ANOP  ,                                              00165400
&ZASYSLNDX         SETA  0                                              00165500
.*******************************************************************    00165600
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00165700
.*******************************************************************    00165800
                   AIF   (&ZMACRET NE 0).ZLX2   ERROR DETECTED          00165900
.*******************************************************************    00166000
.***AE.01  START OF IEAARR MACRO CODE                                   00166100
.*******************************************************************    00166200
                   LCLC  &M0M0001                 NAME                  00166300
&M0M0001           SETC  '&XLABEL'                SET NAME              00166400
                   AIF   (K'&XLABEL NE 0).XLAB2                         00166500
&M0M0001           SETC  'M00M&SYSNDX'            DEFAULT NAME          00166600
.*                                                                      00166700
.XLAB2             ANOP  ,                                              00166800
&M0M0001 DS    0H                             IEAARR-0                  00166900
.*******************************************************************    00167000
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00167100
.*******************************************************************    00167200
              PUSH  PRINT                                               00167300
                   AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON     00167400
                   PRINT OFF         ++ PR01                            00167500
                   AGO   .ZPRNTXX                                       00167600
.ZPRINTX           PRINT ON                                             00167700
.ZPRNTXX           ANOP  ,                                              00167800
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00167900
         AIF   ('&ARRPARAMPTR' EQ '').NOARRPARAMPTR                @L2A 00168000
         AIF   ('&SYSAM64' NE 'YES').NOARRPARAMPTR                 @L2A 00168100
&ZMS     SETC  'ARRPARAMPTR IS VALID ONLY WHEN NOT AMODE 64'       @L2A 00168200
         MNOTE 8,'&ZMS'                                            @L2A 00168300
         POP   PRINT                                               @L2A 00168400
         MEXIT                                                     @L2A 00168500
.NOARRPARAMPTR ANOP                                                @L2A 00168600
         AIF   ('&PARAMPTR' EQ '').NOPARAMPTR                      @L2A 00168700
         AIF   ('&SYSAM64' NE 'YES').NOPARAMPTR                    @L2A 00168800
&ZMS     SETC  'PARAMPTR IS VALID ONLY WHEN NOT AMODE 64'          @L2A 00168900
         MNOTE 8,'&ZMS'                                            @L2A 00169000
         POP   PRINT                                               @L2A 00169100
         MEXIT                                                     @L2A 00169200
.NOPARAMPTR ANOP                                                   @L2A 00169300
         AIF   ('&ARRPARAMPTR64' EQ '').NOARRPARAMPTR64            @L2A 00169400
         AIF   ('&SYSAM64' EQ 'YES').NOARRPARAMPTR64               @L2A 00169500
&ZMS     SETC  'ARRPARAMPTR64 IS VALID IN AMODE 64 ONLY'           @L2A 00169600
         MNOTE 8,'&ZMS'                                            @L2A 00169700
         POP   PRINT                                               @L2A 00169800
         MEXIT                                                     @L2A 00169900
.NOARRPARAMPTR64 ANOP                                              @L2A 00170000
         AIF   ('&PARAMPTR64' EQ '').NOPARAMPTR64                  @L2A 00170100
         AIF   ('&SYSAM64' EQ 'YES').NOPARAMPTR64                  @L2A 00170200
&ZMS     SETC  'PARAMPTR64 IS VALID IN AMODE 64 ONLY'              @L2A 00170300
         MNOTE 8,'&ZMS'                                            @L2A 00170400
         POP   PRINT                                               @L2A 00170500
         MEXIT                                                     @L2A 00170600
.NOPARAMPTR64 ANOP                                                 @L2A 00170700
         AIF   ('&ARRPARAM' EQ '').NOARRPARAM                      @L3A 00170800
         AIF   ('&SYSAM64' NE 'YES').NOARRPARAM                    @L3A 00170900
&ZMS     SETC  'ARRPARAM IS VALID ONLY WHEN NOT AMODE 64'          @L3A 00171000
         MNOTE 8,'&ZMS'                                            @L3A 00171100
         POP   PRINT                                               @L3A 00171200
         MEXIT                                                     @L3A 00171300
.NOARRPARAM ANOP                                                   @L3A 00171400
         AIF   ('&PARAM' EQ '').NOPARAM                            @L3A 00171500
         AIF   ('&SYSAM64' NE 'YES').NOPARAM                       @L3A 00171600
&ZMS     SETC  'PARAM IS VALID ONLY WHEN NOT AMODE 64'             @L3A 00171700
         MNOTE 8,'&ZMS'                                            @L3A 00171800
         POP   PRINT                                               @L3A 00171900
         MEXIT                                                     @L3A 00172000
.NOPARAM ANOP                                                      @L3A 00172100
         AIF   ('&ARRPARAM64' EQ '').NOARRPARAM64                  @L3A 00172200
         AIF   ('&SYSAM64' EQ 'YES').NOARRPARAM64                  @L3A 00172300
&ZMS     SETC  'ARRPARAM64 IS VALID IN AMODE 64 ONLY'              @L3A 00172400
         MNOTE 8,'&ZMS'                                            @L3A 00172500
         POP   PRINT                                               @L3A 00172600
         MEXIT                                                     @L3A 00172700
.NOARRPARAM64 ANOP                                                 @L3A 00172800
         AIF   ('&PARAM64' EQ '').NOPARAM64                        @L3A 00172900
         AIF   ('&SYSAM64' EQ 'YES').NOPARAM64                     @L3A 00173000
&ZMS     SETC  'PARAM64 IS VALID IN AMODE 64 ONLY'                 @L3A 00173100
         MNOTE 8,'&ZMS'                                            @L3A 00173200
         POP   PRINT                                               @L3A 00173300
         MEXIT                                                     @L3A 00173400
.NOPARAM64 ANOP                                                    @L3A 00173500
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00173600
.********************************************************************   00173700
.***AL.A01  INTERNAL ARRAY TO PRODUCE FORMATTED CODE                    00173800
.********************************************************************   00173900
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00174000
                      LCLA  &ZOPN1         INVOCATION INDEX             00174100
                      LCLC  &ZOPL(4095)    LABEL                        00174200
                      LCLC  &ZOPO(4095)    OPERATION                    00174300
                      LCLC  &ZOPV(4095)    VALUE                        00174400
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00174500
.*                                                                      00174600
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00174700
.*-------------------------------------------------------------------   00174800
&ZOPN1                SETA &ZOPN                                        00174900
.*******************************************************************    00175000
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00175100
.*******************************************************************    00175200
                      ACTR  10000                                       00175300
.*                                                                      00175400
                      LCLA  &ZLC           COLUMN POSITION              00175500
                      LCLA  &ZOPX          LIST TABLE INDEX             00175600
                      LCLC  &ZLL           LABEL                        00175700
                      LCLC  &ZLOP          OPERATION                    00175800
                      LCLC  &ZLV           VALUE                        00175900
                      LCLC  &ZLD           DESCRIPTION                  00176000
.*                                                                      00176100
&ZOPX                 SETA  1                                           00176200
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00176300
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00176400
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00176500
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00176600
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00176700
                      AIF   (K'&ZLD LE 0).ZL5                           00176800
&ZLC                  SETA  35             COMMENT COLUMN               00176900
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00177000
&ZLC                  SETA  33             COMMMENT COLUMN              00177100
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00177200
&ZLV                  SETC  '&ZLV'.' '                                  00177300
                      AGO   .ZL3                                        00177400
.*                                                                      00177500
.ZL4                  ANOP  ,                                           00177600
&ZLV                  SETC  '&ZLV'.' '                                  00177700
.ZL5                  ANOP  ,                                           00177800
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00177900
.*                                                                      00178000
&ZLL     &ZLOP &ZLV                                                     00178100
.*                                                                      00178200
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00178300
                      AGO   .ZL2           CONTINUE LOOPING             00178400
.*                                                                      00178500
.ZLX                  ANOP  ,                                           00178600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00178700
         AIF   ('&XDYNSTORAGE' NE 'AVAIL').NODYN1A                 @L3A 00178800
         AIF   ('&SYSAM64' EQ 'YES').AM640                         @L2A 00178900
         AIF   ('&ARRPTR'(1,1) EQ '(').ARRPAREN                    @L1A 00179000
         L     1,&ARRPTR               Pass ARR address            @L1A 00179100
         AGO   .ARREND                                             @L1A 00179200
.ARRPAREN  ANOP                                                    @L1A 00179300
&ZC      SETC  '&ARRPTR'(2,K'&ARRPTR-2)                            @L1A 00179400
         L     1,0(,&ZC)               Pass ARR address            @L1A 00179500
         AGO   .ARREND                                             @L2A 00179600
.AM640   ANOP                                                           00179700
         AIF   ('&ARRPTR'(1,1) EQ '(').ARR64PAREN                  @L2A 00179800
.* In this path we use "L/SAR" rather than "LAM" in case the            00179900
.* user specified an RX-type address                                    00180000
         L     0,&ARRPTR               Get ARR address             @L2A 00180100
         SAR   0,0                     Pass ARR address            @L2A 00180200
         AGO   .ARREND                                             @L2A 00180300
.ARR64PAREN ANOP                                                   @L2A 00180400
&ZC      SETC  '&ARRPTR'(2,K'&ARRPTR-2)                            @L2A 00180500
         LAM   0,0,0(&ZC)              Pass ARR address            @L2A 00180600
.ARREND  ANOP                                                      @L1A 00180700
         AIF   ('&ARRPARAMPTR' EQ '').ARRPARAMPTREND               @L2A 00180800
         AIF   ('&ARRPARAMPTR'(1,1) EQ '(').ARRPARAMPTRPAREN       @L1A 00180900
         L     0,&ARRPARAMPTR          Pass ARRPARAM address       @L1A 00181000
         AGO   .ARRPARAMPTREND                                     @L1A 00181100
.ARRPARAMPTRPAREN ANOP                                             @L1A 00181200
&ZC      SETC  '&ARRPARAMPTR'(2,K'&ARRPARAMPTR-2)                  @L1A 00181300
         L     0,0(0,&ZC)              Pass ARRPARAM address       @L1A 00181400
.ARRPARAMPTREND ANOP                                               @L1A 00181500
         AIF   ('&ARRPARAMPTR64' EQ '').ARRPARAMPTR64END           @L2A 00181600
         AIF   ('&ARRPARAMPTR64'(1,1) EQ '(').ARRPARAMPTR64PAREN   @L2A 00181700
         LG    0,&ARRPARAMPTR64        Pass ARRPARAM address       @L2A 00181800
         AGO   .ARRPARAMPTR64END                                   @L2A 00181900
.ARRPARAMPTR64PAREN ANOP                                           @L2A 00182000
&ZC      SETC  '&ARRPARAMPTR64'(2,K'&ARRPARAMPTR64-2)              @L2A 00182100
         LG    0,0(0,&ZC)              Pass ARRPARAM address       @L2A 00182200
.ARRPARAMPTR64END ANOP                                             @L1A 00182300
         AIF   ('&PARAMPTR' EQ '').PARAMPTREND                     @L2A 00182400
         AIF   ('&PARAMPTR'(1,1) EQ '(').PARAMPTRPAREN             @L1A 00182500
         L     14,&PARAMPTR            Get parameter address       @L1A 00182600
         SAR   0,14                    Pass parameter address      @L1A 00182700
         AGO   .PARAMPTREND                                        @L1A 00182800
.PARAMPTRPAREN ANOP                                                @L1A 00182900
&ZC      SETC  '&PARAMPTR'(2,K'&PARAMPTR-2)                        @L1A 00183000
         L     14,0(0,&ZC)             Get parameter address       @L1A 00183100
         SAR   0,14                    Pass parameter address      @L1A 00183200
.PARAMPTREND ANOP                                                  @L1A 00183300
         AIF   ('&PARAMPTR64' EQ '').PARAMPTR64END                 @L2A 00183400
         AIF   ('&PARAMPTR64'(1,1) EQ '(').PARAMPTR64PAREN         @L2A 00183500
         LG    1,&PARAMPTR64           Pass parameter address      @L2A 00183600
         AGO   .PARAMPTR64END                                      @L2A 00183700
.PARAMPTR64PAREN ANOP                                              @L2A 00183800
&ZC      SETC  '&PARAMPTR64'(2,K'&PARAMPTR64-2)                    @L2A 00183900
         LG    1,0(0,&ZC)              Pass parameter address      @L2A 00184000
.PARAMPTR64END ANOP                                                @L2A 00184100
         AIF   ('&TARGETPTR'(1,1) EQ '(').TARGETPTRPAREN           @L1A 00184200
         L     15,&TARGETPTR           Pass target address         @L1A 00184300
         AGO   .TARGETPTREND                                       @L1A 00184400
.TARGETPTRPAREN ANOP                                               @L1A 00184500
&ZC      SETC  '&TARGETPTR'(2,K'&TARGETPTR-2)                      @L1A 00184600
         L     15,0(0,&ZC)             Pass target address         @L1A 00184700
.TARGETPTREND ANOP                                                 @L1A 00184800
         AGO   .DYN1A                                              @L3A 00184900
.NODYN1A ANOP                                                      @L3A 00185000
         AIF   ('&SYSAM64' EQ 'YES').AM6401                        @L3A 00185100
         AIF   ('&ARR'(1,1) EQ '(').ARRPAREN1                      @L3A 00185200
         LA    1,&ARR                  Pass ARR address            @L3A 00185300
         AGO   .ARREND1                                            @L3A 00185400
.ARRPAREN1 ANOP                                                    @L3A 00185500
&ZC      SETC  '&ARR'(2,K'&ARR-2)                                  @L3A 00185600
         LR    1,&ZC                   Pass ARR address            @L3A 00185700
         AGO   .ARREND1                                            @L3A 00185800
.AM6401  ANOP                                                           00185900
         AIF   ('&ARR'(1,1) EQ '(').ARR64PAREN1                    @L3A 00186000
         LA    0,&ARR                  Get ARR address             @L3A 00186100
         SAR   0,0                     Pass ARR address            @L3A 00186200
         AGO   .ARREND1                                            @L3A 00186300
.ARR64PAREN1 ANOP                                                  @L3A 00186400
&ZC      SETC  '&ARR'(2,K'&ARR-2)                                  @L3A 00186500
         SAR   0,&ZC                   Pass ARR address            @L3A 00186600
.ARREND1 ANOP                                                      @L3A 00186700
         AIF   ('&ARRPARAM' EQ '').ARRPARAMEND1                    @L3A 00186800
         AIF   ('&ARRPARAM'(1,1) EQ '(').ARRPARAMPAREN1            @L3A 00186900
         LA    0,&ARRPARAM             Pass ARRPARAM address       @L3A 00187000
         AGO   .ARRPARAMEND1                                       @L3A 00187100
.ARRPARAMPAREN1 ANOP                                               @L3A 00187200
&ZC      SETC  '&ARRPARAM'(2,K'&ARRPARAM-2)                        @L3A 00187300
         LR    0,&ZC                   Pass ARRPARAM address       @L3A 00187400
.ARRPARAMEND1 ANOP                                                 @L3A 00187500
         AIF   ('&ARRPARAM64' EQ '').ARRPARAM64END1                @L3A 00187600
         AIF   ('&ARRPARAM64'(1,1) EQ '(').ARRPARAM64PAREN1        @L3A 00187700
         LA    0,&ARRPARAM64           Pass ARRPARAM address       @L3A 00187800
         AGO   .ARRPARAM64END1                                     @L3A 00187900
.ARRPARAM64PAREN1 ANOP                                             @L3A 00188000
&ZC      SETC  '&ARRPARAM64'(2,K'&ARRPARAM64-2)                    @L3A 00188100
         LGR   0,&ZC                   Pass ARRPARAM address       @L3A 00188200
.ARRPARAM64END1 ANOp                                               @L3A 00188300
         AIF   ('&PARAM' EQ '').PARAMEND1                          @L3A 00188400
         AIF   ('&PARAM'(1,1) EQ '(').PARAMPAREN1                  @L3A 00188500
         LA    14,&PARAM               Get parameter address       @L3A 00188600
         SAR   0,14                    Pass parameter address      @L3A 00188700
         AGO   .PARAMEND1                                          @L3A 00188800
.PARAMPAREN1 ANOP                                                  @L3A 00188900
&ZC      SETC  '&PARAM'(2,K'&PARAM-2)                              @L3A 00189000
         SAR   0,&ZC                   Pass parameter address      @L3A 00189100
.PARAMEND1 ANOP                                                    @L3A 00189200
         AIF   ('&PARAM64' EQ '').PARAM64END1                      @L3A 00189300
         AIF   ('&PARAM64'(1,1) EQ '(').PARAM64PAREN1              @L3A 00189400
         LA    1,&PARAM64              Pass parameter address      @L3A 00189500
         AGO   .PARAM64END1                                        @L3A 00189600
.PARAM64PAREN1 ANOP                                                @L3A 00189700
&ZC      SETC  '&PARAM64'(2,K'&PARAM64-2)                          @L3A 00189800
         LGR   1,&ZC                   Pass parameter address      @L3A 00189900
.PARAM64END1 ANOP                                                  @L3A 00190000
         AIF   ('&TARGET'(1,1) EQ '(').TARGETPAREN1                @L3A 00190100
         LA    15,&TARGET              Pass target address         @L3A 00190200
         AGO   .TARGETEND1                                         @L3A 00190300
.TARGETPAREN1 ANOP                                                 @L3A 00190400
&ZC      SETC  '&TARGET'(2,K'&TARGET-2)                            @L3A 00190500
         LR    15,&ZC                  Pass target address         @L3A 00190600
.TARGETEND1 ANOP                                                   @L3A 00190700
.DYN1A   ANOP                                                      @L3A 00190800
         AIF   ('&SYSAM64' EQ 'YES').AM641A                        @P1C 00190900
         L     14,16(0,0)              GET CVT ADDRESS             @L1A 00191000
         AGO   .AM641B                                             @L2A 00191100
.AM641A  ANOP                                                      @L2A 00191200
         LG    14,72(0,0)              GET CVT ADDRESS             @L2A 00191300
.AM641B  ANOP                                                      @L2A 00191400
         L     14,772(14,0)            GET SFT ADDRESS             @L1A 00191500
         AIF   ('&SYSAM64' EQ 'YES').AM641                         @L2A 00191600
         AIF   ('&TARGETSTATE' EQ 'SUP').DOSUP                     @L1A 00191700
         AIF   ('&XASYNCH' EQ 'YES').PROBASYNCH                    @L5A 00191800
         L     14,500(14,0)            GET LX/EX FOR SERVICE RTN   @L1A 00191900
         PC    0(14)                                               @L1A 00192000
         AGO   .DONE                                               @L1A 00192100
.PROBASYNCH ANOP                       SFT slot 161                @L5A 00192200
         L     14,640(14,0)            GET LX/EX FOR SERVICE RTN   @L5A 00192300
         PC    0(14)                                               @L5A 00192400
         AGO   .DONE                                               @L5A 00192500
.DOSUP   ANOP                                                      @L1A 00192600
         AIF   ('&XASYNCH' EQ 'YES').SUPASYNCH                     @L5A 00192700
         L     14,504(14,0)            GET LX/EX FOR SERVICE RTN   @L1A 00192800
         PC    0(14)                                               @L1A 00192900
         AGO   .DONE                                               @L2A 00193000
.SUPASYNCH ANOP                        SFT slot 162                @L5A 00193100
         L     14,644(14,0)            GET LX/EX FOR SERVICE RTN   @L5A 00193200
         PC    0(14)                                               @L5A 00193300
         AGO   .DONE                                               @L5A 00193400
.AM641   ANOP                                                      @L2A 00193500
         AIF   ('&TARGETSTATE' EQ 'SUP').DOSUP2                    @01C 00193600
         AIF   ('&XASYNCH' EQ 'YES').AMODE64PROBASYNCH             @L5A 00193700
         L     14,580(14,0)            GET LX/EX FOR SERVICE RTN   @L2A 00193800
         PC    0(14)                                               @L2A 00193900
         AGO   .DONE                                               @L2A 00194000
.AMODE64PROBASYNCH ANOP                SFT slot 163                @L5A 00194100
         L     14,648(14,0)            GET LX/EX FOR SERVICE RTN   @L5A 00194200
         PC    0(14)                                               @L5A 00194300
         AGO   .DONE                                               @L5A 00194400
.DOSUP2  ANOP                                                      @01C 00194500
         AIF   ('&XASYNCH' EQ 'YES').AMODE64SUPASYNCH              @L5A 00194600
         L     14,588(14,0)            GET LX/EX FOR SERVICE RTN   @L2A 00194700
         PC    0(14)                                               @L2A 00194800
         AGO   .DONE                                               @L2A 00194900
.AMODE64SUPASYNCH ANOP                 SFT slot 164                @L5A 00195000
         L     14,652(14,0)            GET LX/EX FOR SERVICE RTN   @L5A 00195100
         PC    0(14)                                               @L5A 00195200
         AGO   .DONE                                               @L5A 00195300
.DONE    ANOP                                                      @L1A 00195400
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00195500
.*******************************************************************    00195600
.***AP.X01  FORMAT GENERATED CODE                                       00195700
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00195800
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00195900
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00196000
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00196100
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00196200
                      AIF   (K'&ZLD LE 0).ZL51                          00196300
&ZLC                  SETA  35             COMMENT COLUMN               00196400
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00196500
&ZLC                  SETA  33             COMMENT COLUMN               00196600
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00196700
&ZLV                  SETC  '&ZLV'.' '                                  00196800
                      AGO   .ZL31                                       00196900
.*                                                                      00197000
.ZL41                 ANOP  ,                                           00197100
&ZLV                  SETC  '&ZLV'.' '                                  00197200
.ZL51                 ANOP  ,                                           00197300
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00197400
.*                                                                      00197500
&ZLL     &ZLOP &ZLV                                                     00197600
.*                                                                      00197700
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00197800
                      AGO   .ZL21          CONTINUE LOOPING             00197900
.*                                                                      00198000
.ZLX1                 ANOP  ,                                           00198100
.*******************************************************************    00198200
.***AP.X02  END OF IEAARR MACRO                                         00198300
&ZIEAARR              SETC  'YES'          SET IEAARR USED              00198400
         POP   PRINT                                                    00198500
*                                            IEAARR-0                   00198600
         SPACE 1                                                        00198700
.ZLX2                 ANOP  ,                                           00198800
         MEND                                                           00198900
**********************************************************************/ 00199000
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00199100
*%IEAARR: MACRO KEYS(DYNSTORAGE,ARRPTR,ARRPARAMPTR,ARRPARAMPTR64,       00199200
*                 PARAMPTR,PARAMPTR64,TARGETPTR,ARR,ARRPARAM,           00199300
*                 ARRPARAM64,PARAM,PARAM64,TARGET,TARGETSTATE,ASYNCH);  00199400
*  ANS('?'!!MACLABEL!!' '!!'IEAARRP '!!MACLIST!!                        00199500
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              00199600
*%END IEAARR;                                                           00199700
