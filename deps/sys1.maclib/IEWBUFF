*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IEWBUFF                               -13/06/06-<0> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  Binder Parameter Buffer Services Macro        * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5650-ZOS COPYRIGHT IBM CORP. 1998, 2015                         * 00001200
*                                                                     * 00001300
* STATUS= HPM77A0                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*      Obtain, initialize, map and free standard Binder parameter     * 00002000
*      buffers.  These buffers are passed as parameters on the        * 00002100
*      IEWBIND macro which generates calls to the Binder.             * 00002200
*                                                                     * 00002300
*01* SYNTAX:                                                          * 00002400
*                                                                     * 00002500
*Ýxlabel¨  IEWBUFF  Ð  FUNC=MAPBUF                                    * 00002600
*                   !   Ð ,SIZE=xsize                                 * 00002700
*                   !   ¿ ,BYTES=xbytes                               * 00002800
*                   !    Ý,HEADREG=»xheadreg!USERHEADREGº¨            * 00002900
*                   !    Ý,ENTRYREG=»xentryreg!USERENTRYREGº¨         * 00003000
*                   !    Ý,VERSION=»1!2!3!4!5!6!7º¨                   * 00003100
*                   Ô ,FUNC=GETBUF                                    * 00003200
*                   !    Ý,GM_RETCODE=xgm_retcode¨                    * 00003300
*                   Ô ,FUNC=INITBUF                                   * 00003400
*                   ¿ ,FUNC=FREEBUF                                   * 00003500
*                        Ý,FM_RETCODE=xfm_retcode¨                    * 00003600
*                     ,TYPE=»ESD!RLD!IDRU!IDRL!IDRZ!IDRB!             * 00003700
*                            SYM!TEXT!NAME!XTLST!MAP!PINIT!PMAR!CUI!  * 00003800
*                            LIBº                                     * 00003900
*                    Ý,PREFIX=»xprefix!0º¨                            * 00004000
*                                                                     * 00004100
*                                                                     * 00004200
*      Where:                                                         * 00004300
*                                                                     * 00004400
*                                                                     * 00004500
*      Ýxlabel¨                                                       * 00004600
*          is an optional symbol, starting in column 1, that is the   * 00004700
*          name on the IEWBUFF macro invocation.  The name must       * 00004800
*          conform to the rules for an ordinary assembler language    * 00004900
*          symbol.                                                    * 00005000
*          DEFAULT: No name.                                          * 00005100
*                                                                     * 00005200
*                                                                     * 00005300
*                                                                     * 00005400
*                                                                     * 00005500
*      FUNC=»MAPBUF!GETBUF!INITBUF!FREEBUFº                           * 00005600
*          is a required keyword input which indicates the type of    * 00005700
*          processing to perform.  FUNC=MAPBUF must be used once only * 00005800
*          for each type of buffer.  The normal sequence of using the * 00005900
*          IEWBUFF functions would be FUNC=GETBUF followed by         * 00006000
*          FUNC=INITBUF followed by usage of the buffer and finally   * 00006100
*          FUNC=FREEBUF. GETBUF and FREEBUF are not necessary if the  * 00006200
*          user provides storage for the buffer.                      * 00006300
*                                                                     * 00006400
*                                                                     * 00006500
*          FUNC=MAPBUF                                                * 00006600
*              Generate declarations for the buffer header and its    * 00006700
*              entries.  FUNC=MAPBUF is required if any other IEWBUFF * 00006800
*              functions are used.  FUNC=MAPBUF may be specified only * 00006900
*              once per module and it is required by all the other    * 00007000
*              IEWBUFF functions.                                     * 00007100
*                                                                     * 00007200
*                                                                     * 00007300
*              The following is a set of mutually exclusive keys.     * 00007400
*              This set is required; only one key must be specified.  * 00007500
*                                                                     * 00007600
*                                                                     * 00007700
*              SIZE=xsize                                             * 00007800
*                  belongs to a set of mutually exclusive keys. It is * 00007900
*                  a fullword input decimal value which is the number * 00008000
*                  of entries in the buffer.  The amount of storage   * 00008100
*                  occupied by the buffer will be equal to the length * 00008200
*                  of the buffer header plus the length of the Binder * 00008300
*                  names list area plus the number of bytes needed    * 00008400
*                  for the buffer entries.                            * 00008500
*                                                                     * 00008600
*              BYTES=xbytes                                           * 00008700
*                  belongs to a set of mutually exclusive keys. It is * 00008800
*                  a fullword input decimal value which is the        * 00008900
*                  maximum number of bytes available for the buffer.  * 00009000
*                  BYTES must include the space required for the      * 00009100
*                  buffer header and the Binder names list area as    * 00009200
*                  well as space for at least one buffer entry.       * 00009300
*                                                                     * 00009400
*                                                                     * 00009500
*                                                                     * 00009600
*              End of a set of mutually exclusive required keys.      * 00009700
*                                                                     * 00009800
*                                                                     * 00009900
*                                                                     * 00010000
*              ÝHEADREG=»xheadreg!USERHEADREGº¨                       * 00010100
*                  is an optional 32 character input which is the     * 00010200
*                  register number or assembler language symbol for   * 00010300
*                  IEWBUFF FUNC=MAPBUF to equate to the base register * 00010400
*                  named "IEWBxyz_BASE" which IEWBUFF uses for the    * 00010500
*                  buffer header DSECT.  A GETBUF request sets the    * 00010600
*                  register to point to newly acquired buffer header  * 00010700
*                  storage.  The user must preserve the contents of   * 00010800
*                  the register for INITBUF and FREEBUF requests.  A  * 00010900
*                  FREEBUF request zeroes the register.               * 00011000
*                  DEFAULT: USERHEADREG meaning that IEWBUFF will not * 00011100
*                  use a specific register to base the buffer header  * 00011200
*                  DSECT.  In assembler language, the user must       * 00011300
*                  define the symbol named "IEWBxyz_BASE" for IEWBUFF * 00011400
*                  to use as a base register for the buffer header    * 00011500
*                  DSECT.                                             * 00011600
*                                                                     * 00011700
*                                                                     * 00011800
*                                                                     * 00011900
*                                                                     * 00012000
*              ÝENTRYREG=»xentryreg!USERENTRYREGº¨                    * 00012100
*                  is an optional 32 character input which is the     * 00012200
*                  register number or assembler language symbol for   * 00012300
*                  IEWBUFF to equate to the base register "xyz_BASE"  * 00012400
*                  which IEWBUFF uses for the buffer entry DSECT.  A  * 00012500
*                  GETBUF request sets the register to point to the   * 00012600
*                  first buffer entry slot in the newly acquired      * 00012700
*                  buffer storage. The user alters to register to     * 00012800
*                  point to different buffer entries as needed.  A    * 00012900
*                  FREEBUF request zeroes the register.               * 00013000
*                  DEFAULT: USERENTRYREG meaning that IEWBUFF will    * 00013100
*                  not use a specific register to base the buffer     * 00013200
*                  entry DSECT.  In assembler language, the user must * 00013300
*                  define the symbol named "xyz_BASE" for IEWBUFF to  * 00013400
*                  use as a base register for the buffer entry DSECT. * 00013500
*                                                                     * 00013600
*                                                                     * 00013700
*                                                                     * 00013800
*                                                                     * 00013900
*              ÝVERSION=»1!2!3!4!5!6!7º¨                              * 00014000
*                  is an optional keyword input which is the version  * 00014100
*                  of parameter buffer to be generated.               * 00014200
*                  DEFAULT: 1                                         * 00014300
*                                                                     * 00014400
*                                                                     * 00014500
*                  VERSION=1                                          * 00014600
*                      Although buffer version 1 is the default it is * 00014700
*                      not compatible with a number of features found * 00014800
*                      in more recent program objects.                * 00014900
*                                                                     * 00015000
*                  VERSION=2                                          * 00015100
*                      Buffer version 2 corresponds with program      * 00015200
*                      object level 2, but is compatible with all     * 00015300
*                      load module and program object levels.         * 00015400
*                      Several features found in more recent program  * 00015500
*                      object levels are ignored because this buffer  * 00015600
*                      format does not have corresponding fields.     * 00015700
*                                                                     * 00015800
*                  VERSION=3                                          * 00015900
*                      Buffer version 3 corresponds with program      * 00016000
*                      object level 3 as introduced in DFSMS/MVS      * 00016100
*                      Version 1 Release 4.  There are additional ESD * 00016200
*                      and RLD flags, new fields at the end of the    * 00016300
*                      ESD and RLD buffers, and a new PARTINIT        * 00016400
*                      buffer.  Buffer format 3 is compatible with    * 00016500
*                      all load module and program object levels      * 00016600
*                      except that a few features found in more       * 00016700
*                      recent program object levels are ignored as    * 00016800
*                      noted below.                                   * 00016900
*                                                                     * 00017000
*                  VERSION=4                                          * 00017100
*                      Buffer version 4 corresponds with OS/390       * 00017200
*                      Version 2 Release 10, and is identical to      * 00017300
*                      buffer version 3 except for three additional   * 00017400
*                      fields in the name list buffer.  It is         * 00017500
*                      compatible with all load module and program    * 00017600
*                      object levels, except that any features added  * 00017700
*                      in more recent program object levels are       * 00017800
*                      ignored.                                       * 00017900
*                                                                     * 00018000
*                  VERSION=5                                          * 00018100
*                      Buffer version 5 corresponds with program      * 00018200
*                      object format 4, introduced in zOS Version 1   * 00018300
*                      Release 3.  It is identical to buffer version  * 00018400
*                      4 except for a new ESD attributes field and a  * 00018500
*                      new PMAR buffer.  It is compatible with all    * 00018600
*                      load module and program object levels.         * 00018700
*                                                                     * 00018800
*                  VERSION=6                                          * 00018900
*                      Buffer version 6 corresponds with z/OS Version * 00019000
*                      1 Release 5.  It is identical to buffer        * 00019100
*                      version 5 except for some updates in the NAME  * 00019200
*                      buffer and a new CUI buffer.  It is compatible * 00019300
*                      with all load module and program object        * 00019400
*                      levels.                                        * 00019500
*                                                                     * 00019600
*                  VERSION=7                                          * 00019700
*                      Buffer version 7 was introduced in z/OS        * 00019800
*                      Version 1 Release 10.  It is identical to      * 00019900
*                      buffer version 6 except for some updates in    * 00020000
*                      the IDRL buffer It is compatible with all load * 00020100
*                      module and program object levels.              * 00020200
*                                                                     * 00020300
*                                                                     * 00020400
*                                                                     * 00020500
*                                                                     * 00020600
*                                                                     * 00020700
*          FUNC=GETBUF                                                * 00020800
*              Obtain storage for the Binder buffer, map the section  * 00020900
*              where the header will go and map the slot where the    * 00021000
*              first buffer entry will go.                            * 00021100
*                                                                     * 00021200
*                                                                     * 00021300
*              ÝGM_RETCODE=xgm_retcode¨                               * 00021400
*                  is the name (RS-type), or address in register      * 00021500
*                  (2)-(12), of an optional fullword output which is  * 00021600
*                  the return code from the conditional GETMAIN       * 00021700
*                  request used by IEWBUFF to obtain the buffer's     * 00021800
*                  storage.  If GM_RETCODE is omitted, IEWBUFF will   * 00021900
*                  generate an unconditional GETMAIN for the buffer   * 00022000
*                  storage.  If the unconditional GETMAIN fails,      * 00022100
*                  GETMAIN will abend with a meaningful abend and     * 00022200
*                  reason code.                                       * 00022300
*                                                                     * 00022400
*                                                                     * 00022500
*                                                                     * 00022600
*          FUNC=INITBUF                                               * 00022700
*              Initialize the header section of the Binder buffer.    * 00022800
*                                                                     * 00022900
*          FUNC=FREEBUF                                               * 00023000
*              Free the storage occupied by the Binder buffer and     * 00023100
*              zero the base pointers for the buffer mappings.        * 00023200
*                                                                     * 00023300
*                                                                     * 00023400
*              ÝFM_RETCODE=xfm_retcode¨                               * 00023500
*                  is the name (RS-type), or address in register      * 00023600
*                  (2)-(12), of an optional fullword output which is  * 00023700
*                  the return code from the conditional FREEMAIN      * 00023800
*                  request used by IEWBUFF to obtain the buffer's     * 00023900
*                  storage.  If GM_RETCODE is omitted, IEWBUFF will   * 00024000
*                  generate an unconditional FREEMAIN for the buffer  * 00024100
*                  storage.  If the unconditional FREEMAIN fails,     * 00024200
*                  FREEMAIN will abend with a meaningful abend and    * 00024300
*                  reason code.                                       * 00024400
*                                                                     * 00024500
*                                                                     * 00024600
*                                                                     * 00024700
*                                                                     * 00024800
*                                                                     * 00024900
*                                                                     * 00025000
*                                                                     * 00025100
*                                                                     * 00025200
*      TYPE=»ESD!RLD!IDRU!IDRL!IDRZ!IDRB!SYM!TEXT!NAME!XTLST!MAP!PINI * 00025300
*          T!PMAR!CUI!LIBº                                            * 00025400
*          is a required keyword input which is the type of data      * 00025500
*          which the buffer is to contain.                            * 00025600
*                                                                     * 00025700
*          IEWBUFF generates a three character name for each type of  * 00025800
*          data.  For buffer type "xyz", IEWBUFF generates a mapping  * 00025900
*          of the buffer header named "IEWBxyz", a mapping of a       * 00026000
*          buffer entry named "xyz_ENTRY", base pointers              * 00026100
*          "IEWBxyx_BASE" and "xyz_BASE" for the two mappings, a      * 00026200
*          structure containing initial values for the header named   * 00026300
*          "xyzI_INIT_VALUES", and for some types, based variables    * 00026400
*          named "xyz_xxxx" which provide alternative mappings for    * 00026500
*          certain fields.                                            * 00026600
*                                                                     * 00026700
*                                                                     * 00026800
*          TYPE=ESD                                                   * 00026900
*              The buffer entries are to contain the Binder's @ESD    * 00027000
*              class of data.  Constants used as codes in ESD_ENTRY   * 00027100
*              fields are declared by macro IEWBCES.                  * 00027200
*                                                                     * 00027300
*          TYPE=RLD                                                   * 00027400
*              The buffer entries are to contain the Binder's @RLD    * 00027500
*              class of data.  Constants used as codes in RLD_ENTRY   * 00027600
*              fields are declared by macro IEWBCRL.                  * 00027700
*                                                                     * 00027800
*          TYPE=IDRU                                                  * 00027900
*              The buffer entries are to contain the Binder's IDRU    * 00028000
*              class of data.  IDRU data is user specified            * 00028100
*              identification data.                                   * 00028200
*                                                                     * 00028300
*          TYPE=IDRL                                                  * 00028400
*              The buffer entries are to contain the Binder's IDRL    * 00028500
*              class of data.  IDRL data is language specified        * 00028600
*              identification data.                                   * 00028700
*                                                                     * 00028800
*          TYPE=IDRZ                                                  * 00028900
*              The buffer entries are to contain the Binder's IDRZ    * 00029000
*              class of data.  IDRZ data is identification data       * 00029100
*              specified by HMASPZAP.                                 * 00029200
*                                                                     * 00029300
*          TYPE=IDRB                                                  * 00029400
*              The buffer entries are to contain the Binder's IDRB    * 00029500
*              class of data.  IDRB data is identification data       * 00029600
*              specified by the Binder.                               * 00029700
*                                                                     * 00029800
*          TYPE=SYM                                                   * 00029900
*              The buffer entries are to contain the Binder's SYM     * 00030000
*              class of data.                                         * 00030100
*                                                                     * 00030200
*          TYPE=TEXT                                                  * 00030300
*              The buffer is to contain module text data.             * 00030400
*                                                                     * 00030500
*          TYPE=NAME                                                  * 00030600
*              The buffer is a Binder name list, whose entries will   * 00030700
*              contain names.                                         * 00030800
*                                                                     * 00030900
*          TYPE=XTLST                                                 * 00031000
*              The buffer is to receive extent list data from a       * 00031100
*              IEWBIND FUNC=LOADWMOD request.                         * 00031200
*                                                                     * 00031300
*          TYPE=MAP                                                   * 00031400
*              The buffer is to contain map class data                * 00031500
*                                                                     * 00031600
*          TYPE=PINIT                                                 * 00031700
*              The buffer is to contain the part initializers for the * 00031800
*              module.                                                * 00031900
*                                                                     * 00032000
*          TYPE=PMAR                                                  * 00032100
*              The buffer is to contain PMAR data.                    * 00032200
*                                                                     * 00032300
*          TYPE=CUI                                                   * 00032400
*              The buffer is to contain compile unit data.            * 00032500
*                                                                     * 00032600
*          TYPE=LIB                                                   * 00032700
*              The buffer is to contain library path data.            * 00032800
*                                                                     * 00032900
*                                                                     * 00033000
*                                                                     * 00033100
*                                                                     * 00033200
*                                                                     * 00033300
*                                                                     * 00033400
*      ÝPREFIX=»xprefix!0º¨                                           * 00033500
*          is an optional 32 character input which is the text prefix * 00033600
*          of each label in a mapping expansion.                      * 00033700
*                                                                     * 00033800
*          If this parameter is specified in the MAP function of      * 00033900
*          IEWBUFF, the macro will use the value of PREFIX to append  * 00034000
*          it to the beginning of each of the mapping labels.   For   * 00034100
*          instance, if the value of PREFIX is 'V1', and the TYPE is  * 00034200
*          'ESD', the macro will prefix all ESD mapping labels with   * 00034300
*          the string 'V1_' (no quotes).                              * 00034400
*                                                                     * 00034500
*          PREFIX may be any string of length up to 32 characters.    * 00034600
*          DEFAULT: 0      NULL string                                * 00034700
*                                                                     * 00034800
*                                                                     * 00034900
*                                                                     * 00035000
*01* RETURN CODES:  None.                                             * 00035100
*                                                                     * 00035200
*01* REASON CODES:  None.                                             * 00035300
*                                                                     * 00035400
*01* MODULE TYPE:  ASSEM MACRO                                        * 00035500
*                                                                     * 00035600
*02*   PROCESSOR:  ASSEM                                              * 00035700
*                                                                     * 00035800
*01* COMPONENT:  PMB01                                                * 00035900
*                                                                     * 00036000
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00036100
*                                                                     * 00036200
*01* MACRO USAGE NOTES:                                               * 00036300
*                                                                     * 00036400
*                                                                     * 00036500
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00036600
*        global macro variable.  Any value other than 'NO' will       * 00036700
*        result in the macro expansion being printed.  The default is * 00036800
*        'YES'.  The following examples illustrate how the ZPRINT     * 00036900
*        variable should be set.                                      * 00037000
*                                                                     * 00037100
*                    GBLC &ZPRINT                                     * 00037200
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00037300
*                                                                     * 00037400
*                                                                     * 00037500
*                                                                     * 00037600
*01* CHANGE ACTIVITY:                                                 * 00037700
*                                                                     * 00037800
*   Flag LineItem  FMID    Date   ID    Comment                       * 00037900
*                                                                     * 00038000
*    $P6=KMM2451  JDZ1110 920520 SJPLLDB:                             * 00038100
*    $P7=KMM3167  JDZ1110 920831 SJPLLDB:                             * 00038200
*    $P8=OY60825  JDZ1110 930113 SJPLLDB:                             * 00038300
*    $P9=OY61831  JDZ1110 930115 SJPLLDB:                             * 00038400
*    $01=OW17155  HDZ11C0 960108 SJPLSML:                             * 00038500
*    $L3=PM3ITER1 HDZ11C0 960108 SJPLSML:                             * 00038600
*    $L5=XPLINK   HDZ11F0 981018 SJPLELA:                             * 00038700
*    $L6=XPLINK   HDZ11F0 990811 STLRWT:  Class offset in segment,    * 00038800
*                                         version cleanup             * 00038900
*    $L7=XPLINK   HDZ11F0 991008 STLRWT:  Clean AMG compile, version  * 00039000
*                                         cleanup                     * 00039100
*    $PA=K161091  HDZ11F0 000222 STLLB:  Move XPLINK flag, add        * 00039200
*                                         padding bit, Correct V4     * 00039300
*                                         expansion of BNL for PLX    * 00039400
*    $PB=K161148  HDZ11F0 000303 STLEA:  Add missing semicolon to     * 00039500
*                                         version 3 ESD declare       * 00039600
*    $L9=PM4ITER2 HPM7706 000726 STLNW:  PM4 ITERATION 2              * 00039700
*    $LA=PM4ITER2 HPM7706 000914 SVLNW:  Support PMAR                 * 00039800
*    $LB=PM4ITER2 HPM7706 001110 SVLRT:  Buffer format 4 & 5 support  * 00039900
*    $PC=K640103  HPM7706 010226 SVLNW:  Add PMAR keyword             * 00040000
*    $LC=PM4ITER3 HPM7706 010402 SVLRT:  No BNL_PAD1 in V4+           * 00040100
*                                         conflicting with V1-3       * 00040200
*    $LD=PM4ITER3 HPM7706 010501 SVLEA:  add dup_sev to ESD buffer    * 00040300
*    $LE=PM4ITER3 HPM7706 010504 SVLRT:  Auto integration of AMG      * 00040400
*    $PD=K640122  HPM7706 010531 SVLNW:  Fix dup error                * 00040500
*    $05=OW48279  HDZ11F0 010607 SVLRT:  Fails if called from RSECT   * 00040600
*    $06=OW50303  HDZ11F0 010715 SVLEA:  Fix entry length for IDRZ    * 00040700
*                                         buffer                      * 00040800
*    $LF=DCRA595  HPM7708 011112 SVLNW:  Buffer format 6 support      * 00040900
*    $07=OW52579  HPM7708 020708 SVLEA:  Fix alignment on assembler   * 00041000
*                                         version of pinit            * 00041100
*    $PE=MG01062  HPM7708 020722 SVLNW:  Fix IEWBCUI buffer           * 00041200
*    $PF=MG01071  HPM7708 020725 SVLNW:  Fix IEWBCUI buffer           * 00041300
*    $PG=MG01084  HPM7708 020826 SVLNW:  Remove wrap around seq num   * 00041400
*    $PH=MG01205  HPM7708 020905 SVLNW:  Fix buffers                  * 00041500
*    $PI=MG01082  HPM7708 021118 SVLRT:  Change V1R6 to V1R5          * 00041600
*    $08=MG01838  HPM7708 030304 SVLNW:  Change END label for PTI     * 00041700
*    $PJ=MG05875  HPM7730 050809 PMBRT:  Disallow regs for PREFIX     * 00041800
*    $09=OA12080  HPM7730 050809 PMBRT:  Make MAPBUF,TYPE=XTLST work  * 00041900
*    $PK=MG06186  HPM7730 050818 PMBRT:  Colon on tags in prolog      * 00042000
*                                         confuses Build/390          * 00042100
*    $PL=MG06461  HPM7730 051013 PMBAD:  Add REMOVABLE flag           * 00042200
*    $PM=MG06660  HPM7730 051116 PMBAD:  Fix syntax from MG06600      * 00042300
*    $PN=OA13331  HPM7730 051205 PMBBL:  Better reflect PTI_DATA len  * 00042400
*    $PO=MG07160  HPM7740 060815 PMBRT:  Macro label may be           * 00042500
*                                         misaligned                  * 00042600
*    $PP=MG08768  HPM7740 070309 PMBRT:  Back off MG07160, which      * 00042700
*                                         fixed a small problem for   * 00042800
*                                         non-reentrant programs, but * 00042900
*                                         caused a large problem for  * 00043000
*                                         executable expansions.      * 00043100
*    $LG=DB24500  HPM7750 070213 PMBLB:  Don't allocate string area   * 00043200
*                                         for text buffers            * 00043300
*    $LH=DB22901  HPM7750 070511 PMBLB:  New IDRL format              * 00043400
*    $LI=DB24300  HPM7750 070722 PMBBL:  Unsigned length for partinit * 00043500
*    $LJ=DB24304  HPM7750 070705 PMBLB:  New namelist buffer format   * 00043600
*    $PQ=MG09481  HPM7750 070814 PMBLB:  Correct MAP buffer mapping   * 00043700
*    $PR=OA26831  HPM7760 081107 PMBNW:  Correct BNL_LF_DEFER mapping * 00043800
*    $LK=DB95400  HPM7780 100513 PMBNW:  New RLD flag for COBOL       * 00043900
*    $PS=MG15407  HPM7780 101130 PMBSM:  CONDSEQ flag in PLX mapping  * 00044000
*    $PT=MG14081  HPM77A0 130606 PMBIY:  Correct ESD buffer mapping   * 00044100
****** END OF SPECIFICATIONS *****************************************/ 00044200
*/********************************************************************* 00044300
         MACRO                                                          00044400
&XLABEL  IEWBUFF &FUNC=,&SIZE=,&BYTES=,&HEADREG=,&ENTRYREG=,&VERSION=, *00044500
               &GM_RETCODE=,&FM_RETCODE=,&TYPE=,&PREFIX=                00044600
.*                                                                      00044700
*                MACDATE -13/06/06-<0>                                  00044800
.*                                                                      00044900
.*******************************************************************    00045000
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00045100
.*******************************************************************    00045200
                GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                 00045300
                GBLC  &ZTEST      YES=TEST NO=NO TEST                   00045400
                GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX           00045500
.*                                                                      00045600
                GBLC  &ZIEWBUFF   YES=MACRO USED AT LEAST ONCE          00045700
.*******************************************************************    00045800
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00045900
.*******************************************************************    00046000
                LCLC  &ZMS        ERROR MESSAGE WORK AREA               00046100
                LCLC  &ZCNDX      SYSNDX CHARACTERS                     00046200
                LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED            00046300
                LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR           00046400
                LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE           00046500
                LCLA  &ZAWRK      USED AS A WORK AREA                   00046600
                LCLA  &ZASIZ      USED FOR SIZE OF VALUE                00046700
                LCLA  &ZN         NUMERIC WORK VARIABLE                 00046800
                LCLC  &ZC         CHARACTER WORK VARIABLE               00046900
                LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE           00047000
                LCLA  &ZTLA       VALUE TOO LONG VARIABLE               00047100
                LCLC  &ZMAC_G     "G" or null                           00047200
&ZMAC_G         SETC  ''                                                00047300
                LCLC  &ZMAC_LR                                          00047400
&ZMAC_LR        SETC  'LR'                                              00047500
                LCLC  &ZMAC_L                                           00047600
&ZMAC_L         SETC  'L'                                               00047700
                LCLC  &ZMAC_ST                                          00047800
&ZMAC_ST        SETC  'ST'                                              00047900
                LCLC  &ZMAC_LLGT                                        00048000
&ZMAC_LLGT      SETC  'L'                                               00048100
                LCLC  &ZMAC_LGR                                         00048200
&ZMAC_LGR       SETC  'LR'                                              00048300
                LCLC  &ZMAC_LG                                          00048400
&ZMAC_LG        SETC  'L'                                               00048500
                LCLC  &ZMAC_STG                                         00048600
&ZMAC_STG       SETC  'ST'                                              00048700
                LCLA  &ZMACRET    MACRO RETURN CODE                     00048800
&ZMACRET        SETA  0           ASSUME NO ERRORS                      00048900
.*                                                                      00049000
                LCLC  &ZCSYSLIST(255)           NONXKEY, POS ARRAY      00049100
                LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()            00049200
                LCLA  &ZPLLEN     PARAMETER LIST LENGTH                 00049300
                LCLC  &ZENDBASEPL               End of base PL          00049400
.*******************************************************************    00049500
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00049600
.*******************************************************************    00049700
                LCLC  &XFUNC      ++ VALUE                              00049800
                LCLC  &XSZORBYT   ++ VALUE                              00049900
                LCLC  &XSIZE      ++ VALUE                              00050000
                LCLC  &XBYTES     ++ VALUE                              00050100
                LCLC  &XHEADREG   ++ VALUE                              00050200
                LCLC  &XENTRYREG  ++ VALUE                              00050300
                LCLC  &XVERSION   ++ VALUE                              00050400
                LCLC  &XGM_RETCODE              ++ NAME                 00050500
                LCLC  &XFM_RETCODE              ++ NAME                 00050600
                LCLC  &XTYPE      ++ VALUE                              00050700
                LCLC  &XPREFIX    ++ VALUE                              00050800
.*******************************************************************    00050900
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00051000
.*******************************************************************    00051100
                LCLC  &ZXFUNC     ++ INPUT VALUE                        00051200
                LCLC  &ZXSZORBYT  ++ INPUT VALUE                        00051300
                LCLC  &ZXSIZE     ++ INPUT VALUE                        00051400
                LCLC  &ZXBYTES    ++ INPUT VALUE                        00051500
                LCLC  &ZXHEADREG  ++ INPUT VALUE                        00051600
                LCLC  &ZXENTRYREG               ++ INPUT VALUE          00051700
                LCLC  &ZXVERSION  ++ INPUT VALUE                        00051800
                LCLC  &ZXGM_RETCODE             ++ OUTPUT NAME          00051900
                LCLC  &ZXFM_RETCODE             ++ OUTPUT NAME          00052000
                LCLC  &ZXTYPE     ++ INPUT VALUE                        00052100
                LCLC  &ZXPREFIX   ++ INPUT VALUE                        00052200
.********************************************************************   00052300
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00052400
.********************************************************************   00052500
                ACTR  10000                                             00052600
.*------------------------------------------------------------------    00052700
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00052800
&XFUNC          SETC  ''          INITIALIZE XVARIABLE                  00052900
.*-------------------------------------------------------------------   00053000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00053100
.ZG3            ANOP  ,                                                 00053200
                AIF   (K'&FUNC(1) LE 0).ZG3A                            00053300
&ZTLC           SETC 'MAPBUF'                                           00053400
                AIF   ('&FUNC(1)' NE '&ZTLC').ZG24                      00053500
&XFUNC          SETC  'MAPBUF'    SET KEYWORD                           00053600
                AIF   (N'&FUNC LE 1).ZG3A       CK NUM                  00053700
&ZMS            SETC  '"FUNC='                                          00053800
&ZMS            SETC  '&ZMS.&FUNC"'                                     00053900
&ZMS            SETC  '&ZMS "FUNC"'                                     00054000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00054100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00054200
.ZG3A           ANOP  ,                                                 00054300
.*------------------------------------------------------------------    00054400
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00054500
&ZCVAL          SETC ''           CLEAR ERROR KEY ACCUMULATOR           00054600
.ZG3A0          AIF   (K'&GM_RETCODE LE 0).ZG3A1  OK                    00054700
&ZCVAL          SETC '&ZCVAL GM_RETCODE'        INCORRECT KEY USED      00054800
.ZG3A1          AIF   (K'&FM_RETCODE LE 0).ZG3A2  OK                    00054900
&ZCVAL          SETC '&ZCVAL FM_RETCODE'        INCORRECT KEY USED      00055000
.ZG3A2          AIF   (K'&ZCVAL LE 0).ZG3A3     OK                      00055100
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)                             00055200
&ZMS            SETC  '"FUNC'                                           00055300
&ZMS            SETC  '&ZMS.=&FUNC"'                                    00055400
&ZMS            SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'              00055500
                MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'              00055600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00055700
.ZG3A3          ANOP  ,                                                 00055800
.*----------------------------------------------------------------***   00055900
.***AG.KMEKY01 VALUE, RQD INPUT, ME KEYS -XVARIABLE                     00056000
&XSZORBYT       SETC  ''          INITIALIZE XVARIABLE                  00056100
                AIF   (K'&SIZE LE 0).ZG5C                               00056200
&ZXSZORBYT      SETC  'INPUT'     SET IN/OUTPUT                         00056300
&XSZORBYT       SETC  'SIZE'      SET XVARIABLE                         00056400
&ZXSIZE         SETC  'INPUT'     SET IN/OUTPUT                         00056500
&XSIZE          SETC  '&SIZE(1)'  SET XVARIABLE PARM                    00056600
                AIF   (N'&SIZE GT 1).ZG5A                               00056700
&XSIZE          SETC  '&SIZE'     SET XVARIABLE PARM                    00056800
.ZG5A           AIF   (N'&SIZE LE 1).ZG5B       CK NUM                  00056900
&ZMS            SETC  '"SIZE='                                          00057000
&ZMS            SETC  '&ZMS.&SIZE"'                                     00057100
&ZMS            SETC  '&ZMS "SIZE"'                                     00057200
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00057300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00057400
.ZG5B           AIF   (K'&XSIZE GT 0).ZG5C      ONE PARM                00057500
&ZXSZORBYT      SETC  ''          RESET IN/OUTPUT                       00057600
&ZXSIZE         SETC  ''          RESET IN/OUTPUT                       00057700
&ZMS            SETC  ' '                                               00057800
&ZMS            SETC  '&ZMS "SIZE" KEY AND ITS'                         00057900
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  00058000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00058100
.ZG5C           ANOP  ,                                                 00058200
.*----------------------------------------------------------------***   00058300
.***AG.KMEKY02 VALUE, RQD INPUT, ME KEYS -XVARIABLE                     00058400
                AIF   (K'&BYTES LE 0).ZG6D      NO ME KEY               00058500
                AIF   (N'&BYTES LE 1).ZG6A      CK NUM                  00058600
&ZMS            SETC  '"BYTES='                                         00058700
&ZMS            SETC  '&ZMS.&BYTES"'                                    00058800
&ZMS            SETC  '&ZMS "BYTES"'                                    00058900
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00059000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00059100
.ZG6A           AIF   (K'&XSZORBYT LE 0).ZG6B                           00059200
&ZMS            SETC  '"BYTES'                                          00059300
&ZMS            SETC  '&ZMS.=&BYTES"'                                   00059400
&ZMS            SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'             00059500
&ZMS            SETC  '&ZMS "&XSZORBYT"'                                00059600
                MNOTE 8,' &ZMS KEY.'                                    00059700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00059800
                AGO   .ZG6D                                             00059900
.*                                                                      00060000
.ZG6B           ANOP  ,                                                 00060100
&ZXSZORBYT      SETC  'INPUT'     SET IN/OUTPUT                         00060200
&XSZORBYT       SETC  'BYTES'     SET XVARIABLE                         00060300
&ZXBYTES        SETC  'INPUT'     SET IN/OUTPUT                         00060400
&XBYTES         SETC  '&BYTES(1)'               SET XVARIABLE PARM      00060500
                AIF   (N'&BYTES GT 1).ZG6C                              00060600
&XBYTES         SETC  '&BYTES'    SET XVARIABLE PARM                    00060700
.ZG6C           AIF   (K'&XBYTES GT 0).ZG6D     ONE PARM                00060800
&ZXSZORBYT      SETC  ''          RESET IN/OUTPUT                       00060900
&ZXBYTES        SETC  ''          RESET IN/OUTPUT                       00061000
&ZMS            SETC  ' '                                               00061100
&ZMS            SETC  '&ZMS "BYTES" KEY AND ITS'                        00061200
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  00061300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00061400
.ZG6D           ANOP  ,                                                 00061500
.*------------------------------------------------------------------    00061600
.***AG.KME4Y09 VALUE, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED          00061700
                AIF   (K'&XSZORBYT GT 0).ZG7B                           00061800
&ZXSZORBYT      SETC  ''          RESET IN/OUTPUT                       00061900
&ZXSIZE         SETC  ''          RESET IN/OUTPUT                       00062000
&XSZORBYT       SETC  ''          ENSURE NULL                           00062100
&XSIZE          SETC  ''          ENSURE NULL                           00062200
&ZMS            SETC  'ONE OF THE FOLLOWING'                            00062300
&ZMS            SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'               00062400
&ZMS            SETC  '&ZMS REQUIRED:'                                  00062500
&ZMS            SETC  '&ZMS "SIZE"'             VALID ME KEY            00062600
&ZMS            SETC  '&ZMS OR "BYTES".'        VALID ME KEY            00062700
                MNOTE 8,' &ZMS '                                        00062800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00062900
.ZG7B           ANOP  ,                                                 00063000
.*-------------------------------------------------------------------   00063100
.***AG.KMEKY13 VALUE, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES          00063200
.ZG5ZY  AIF    ('&XSZORBYT' NE 'SIZE').ZG6ZY                            00063300
.*-------------------------------------------------------------------   00063400
.***AG.KCK01 VALUE, RQD INPUT, ME KEYS -GPR NOT ALLOWED                 00063500
                AIF   (K'&ZXSIZE LE 0).ZG5P     NOT I/O                 00063600
                AIF   ('&XSIZE'(1,1) NE '(').ZG5P                       00063700
&ZXSIZE         SETC  ''          RESET IN/OUTPUT                       00063800
&ZMS            SETC  '"SIZE='                                          00063900
&ZMS            SETC  '&ZMS.&SIZE"'                                     00064000
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00064100
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00064200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00064300
.ZG5P           ANOP  ,                                                 00064400
.*-------------------------------------------------------------------   00064500
.***AG.KCK05 VALUE, RQD INPUT, ME KEYS -KMG RANGE                       00064600
                AIF   (K'&ZXSIZE LE 0).ZG5U     NOT I/O                 00064700
                AIF   ('&XSIZE'(1,1) EQ '(').ZG5U  IN GPR               00064800
&ZASIZ          SETA  1           INITIALIZE ZASIZ                      00064900
                AIF   (T'&XSIZE NE 'N').ZG5RR   NUMBER                  00065000
&ZAWRK          SETA  &XSIZE      INITIALIZE ZAWRK                      00065100
&ZCVAL          SETC  '&XSIZE'    INITIALIZE ZCVAL                      00065200
                AGO   .ZG5SS                                            00065300
.ZG5RR          ANOP  ,                                                 00065400
&ZCLNG          SETC  '&XSIZE'(1,K'&XSIZE-1)                            00065500
                AIF   (T'&ZCLNG NE 'N').ZG5T    NUMERIC ERR             00065600
&ZAWRK          SETA  &ZCLNG      CONVERT                               00065700
&ZCGPR          SETC  '&XSIZE'(K'&XSIZE,1)                              00065800
&ZASIZ          SETA  1024                                              00065900
                AIF   ('&ZCGPR' EQ 'K').ZG5S    K FACTOR                00066000
&ZASIZ          SETA  1024*1024                                         00066100
                AIF   ('&ZCGPR' EQ 'M').ZG5S    M FACTOR                00066200
&ZASIZ          SETA  1024*1024*1024                                    00066300
                AIF   ('&ZCGPR' NE 'G').ZG5T    NOT G FACTOR            00066400
.ZG5S           ANOP  ,                                                 00066500
&ZCVAL          SETC  '&ZAWRK*&ZASIZ'           EQUIVALENT NUMBER       00066600
.ZG5SS          ANOP  ,                                                 00066700
&ZN             SETA  2147483647/&ZASIZ         CONVERT                 00066800
                AIF   (&ZN LT 0).ZG5T           TOO LOW                 00066900
                AIF   (&ZAWRK GT &ZN).ZG5T      TOO HIGH                00067000
&XSIZE          SETC '&ZCVAL'     SET XVARIABLE NUMBER                  00067100
                AGO   .ZG5U                                             00067200
.*                                                                      00067300
.ZG5T           ANOP  ,                                                 00067400
&ZXSIZE         SETC  ''          RESET IN/OUTPUT                       00067500
&ZMS            SETC  '"SIZE='                                          00067600
&ZMS            SETC  '&ZMS.&SIZE"'                                     00067700
&ZMS            SETC  '&ZMS THE RANGE IS "0-2147483647"'                00067800
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00067900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00068000
.ZG5U           ANOP  ,                                                 00068100
.*-------------------------------------------------------------------   00068200
.***AG.KMEKY13 VALUE, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES          00068300
.ZG6ZY  AIF    ('&XSZORBYT' NE 'BYTES').ZG7ZY                           00068400
.*-------------------------------------------------------------------   00068500
.***AG.KCK01 VALUE, RQD INPUT, ME KEYS -GPR NOT ALLOWED                 00068600
                AIF   (K'&ZXBYTES LE 0).ZG6P    NOT I/O                 00068700
                AIF   ('&XBYTES'(1,1) NE '(').ZG6P                      00068800
&ZXBYTES        SETC  ''          RESET IN/OUTPUT                       00068900
&ZMS            SETC  '"BYTES='                                         00069000
&ZMS            SETC  '&ZMS.&BYTES"'                                    00069100
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00069200
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00069300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00069400
.ZG6P           ANOP  ,                                                 00069500
.*-------------------------------------------------------------------   00069600
.***AG.KCK05 VALUE, RQD INPUT, ME KEYS -KMG RANGE                       00069700
                AIF   (K'&ZXBYTES LE 0).ZG6U    NOT I/O                 00069800
                AIF   ('&XBYTES'(1,1) EQ '(').ZG6U  IN GPR              00069900
&ZASIZ          SETA  1           INITIALIZE ZASIZ                      00070000
                AIF   (T'&XBYTES NE 'N').ZG6RR  NUMBER                  00070100
&ZAWRK          SETA  &XBYTES     INITIALIZE ZAWRK                      00070200
&ZCVAL          SETC  '&XBYTES'   INITIALIZE ZCVAL                      00070300
                AGO   .ZG6SS                                            00070400
.ZG6RR          ANOP  ,                                                 00070500
&ZCLNG          SETC  '&XBYTES'(1,K'&XBYTES-1)                          00070600
                AIF   (T'&ZCLNG NE 'N').ZG6T    NUMERIC ERR             00070700
&ZAWRK          SETA  &ZCLNG      CONVERT                               00070800
&ZCGPR          SETC  '&XBYTES'(K'&XBYTES,1)                            00070900
&ZASIZ          SETA  1024                                              00071000
                AIF   ('&ZCGPR' EQ 'K').ZG6S    K FACTOR                00071100
&ZASIZ          SETA  1024*1024                                         00071200
                AIF   ('&ZCGPR' EQ 'M').ZG6S    M FACTOR                00071300
&ZASIZ          SETA  1024*1024*1024                                    00071400
                AIF   ('&ZCGPR' NE 'G').ZG6T    NOT G FACTOR            00071500
.ZG6S           ANOP  ,                                                 00071600
&ZCVAL          SETC  '&ZAWRK*&ZASIZ'           EQUIVALENT NUMBER       00071700
.ZG6SS          ANOP  ,                                                 00071800
&ZN             SETA  2147483647/&ZASIZ         CONVERT                 00071900
                AIF   (&ZN LT 0).ZG6T           TOO LOW                 00072000
                AIF   (&ZAWRK GT &ZN).ZG6T      TOO HIGH                00072100
&XBYTES         SETC '&ZCVAL'     SET XVARIABLE NUMBER                  00072200
                AGO   .ZG6U                                             00072300
.*                                                                      00072400
.ZG6T           ANOP  ,                                                 00072500
&ZXBYTES        SETC  ''          RESET IN/OUTPUT                       00072600
&ZMS            SETC  '"BYTES='                                         00072700
&ZMS            SETC  '&ZMS.&BYTES"'                                    00072800
&ZMS            SETC  '&ZMS THE RANGE IS "0-2147483647"'                00072900
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00073000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00073100
.ZG6U           ANOP  ,                                                 00073200
.*-------------------------------------------------------------------   00073300
.***AG.KMEKY15 VALUE, RQD INPUT, ME KEYS -END                           00073400
.ZG7ZY          ANOP ,            END MUTUALLY EXCLUSIVE KEYS           00073500
.*----------------------------------------------------------------***   00073600
.***AG.KXVAR05 VALUE, OPT INPUT, KEYS -XVARIABLE KEY                    00073700
                AIF   (N'&HEADREG LE 1).ZG9A    CK NUM                  00073800
&ZMS            SETC  '"HEADREG='                                       00073900
&ZMS            SETC  '&ZMS.&HEADREG"'                                  00074000
&ZMS            SETC  '&ZMS "HEADREG"'                                  00074100
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00074200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00074300
.ZG9A           ANOP  ,                                                 00074400
.*-------------------------------------------------------------------   00074500
.***AG.KXVAR13 VALUE, OPT INPUT, KEYS -XVARIABLE                        00074600
&ZXHEADREG      SETC  'INPUT'     SET IN/OUTPUT                         00074700
&XHEADREG       SETC  'USERHEADREG'                                     00074800
                AIF   (K'&HEADREG(1) LE 0).ZG9B  PARM                   00074900
&XHEADREG       SETC  '&HEADREG(1)'             SET XVARIABLE           00075000
                AIF   (N'&HEADREG GT 1).ZG9B    MULTI                   00075100
&XHEADREG       SETC  '&HEADREG'  SET XVARIABLE                         00075200
.ZG9B           ANOP  ,                                                 00075300
.*-------------------------------------------------------------------   00075400
.***AG.KCK01 VALUE, OPT INPUT, KEYS -GPR NOT ALLOWED                    00075500
                AIF   (K'&ZXHEADREG LE 0).ZG9P  NOT I/O                 00075600
                AIF   ('&XHEADREG' EQ 'USERHEADREG').ZG9P               00075700
                AIF   ('&XHEADREG'(1,1) NE '(').ZG9P                    00075800
&ZXHEADREG      SETC  ''          RESET IN/OUTPUT                       00075900
&ZMS            SETC  '"HEADREG='                                       00076000
&ZMS            SETC  '&ZMS.&HEADREG"'                                  00076100
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00076200
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00076300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00076400
.ZG9P           ANOP  ,                                                 00076500
.*-------------------------------------------------------------------   00076600
.***AG.KCK03 VALUE, OPT INPUT, KEYS -CHARACTER LENGTH                   00076700
                AIF   (K'&ZXHEADREG LE 0).ZG9S  NOT I/O                 00076800
                AIF   ('&XHEADREG' EQ 'USERHEADREG').ZG9S               00076900
                AIF   (K'&XHEADREG LE 32).ZG9S  LNG OK                  00077000
&ZXHEADREG      SETC  ''          RESET IN/OUTPUT                       00077100
&ZMS            SETC  '"HEADREG='                                       00077200
&ZMS            SETC  '&ZMS.&HEADREG"'                                  00077300
&ZMS            SETC  '&ZMS ARGUMENT 1 EXCEEDS THE MAXIMUM'             00077400
                MNOTE 8,' &ZMS LENGTH OF 32 CHARACTERS.'                00077500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00077600
.ZG9S           ANOP  ,                                                 00077700
.*----------------------------------------------------------------***   00077800
.***AG.KXVAR05 VALUE, OPT INPUT, KEYS -XVARIABLE KEY                    00077900
                AIF   (N'&ENTRYREG LE 1).ZG12A  CK NUM                  00078000
&ZMS            SETC  '"ENTRYREG='                                      00078100
&ZMS            SETC  '&ZMS.&ENTRYREG"'                                 00078200
&ZMS            SETC  '&ZMS "ENTRYREG"'                                 00078300
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00078400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00078500
.ZG12A          ANOP  ,                                                 00078600
.*-------------------------------------------------------------------   00078700
.***AG.KXVAR13 VALUE, OPT INPUT, KEYS -XVARIABLE                        00078800
&ZXENTRYREG     SETC  'INPUT'     SET IN/OUTPUT                         00078900
&XENTRYREG      SETC  'USERENTRYREG'                                    00079000
                AIF   (K'&ENTRYREG(1) LE 0).ZG12B  PARM                 00079100
&XENTRYREG      SETC  '&ENTRYREG(1)'            SET XVARIABLE           00079200
                AIF   (N'&ENTRYREG GT 1).ZG12B  MULTI                   00079300
&XENTRYREG      SETC  '&ENTRYREG'               SET XVARIABLE           00079400
.ZG12B          ANOP  ,                                                 00079500
.*-------------------------------------------------------------------   00079600
.***AG.KCK01 VALUE, OPT INPUT, KEYS -GPR NOT ALLOWED                    00079700
                AIF   (K'&ZXENTRYREG LE 0).ZG12P  NOT I/O               00079800
                AIF   ('&XENTRYREG' EQ 'USERENTRYREG').ZG12P            00079900
                AIF   ('&XENTRYREG'(1,1) NE '(').ZG12P                  00080000
&ZXENTRYREG     SETC  ''          RESET IN/OUTPUT                       00080100
&ZMS            SETC  '"ENTRYREG='                                      00080200
&ZMS            SETC  '&ZMS.&ENTRYREG"'                                 00080300
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00080400
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00080500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00080600
.ZG12P          ANOP  ,                                                 00080700
.*-------------------------------------------------------------------   00080800
.***AG.KCK03 VALUE, OPT INPUT, KEYS -CHARACTER LENGTH                   00080900
                AIF   (K'&ZXENTRYREG LE 0).ZG12S  NOT I/O               00081000
                AIF   ('&XENTRYREG' EQ 'USERENTRYREG').ZG12S            00081100
                AIF   (K'&XENTRYREG LE 32).ZG12S  LNG OK                00081200
&ZXENTRYREG     SETC  ''          RESET IN/OUTPUT                       00081300
&ZMS            SETC  '"ENTRYREG='                                      00081400
&ZMS            SETC  '&ZMS.&ENTRYREG"'                                 00081500
&ZMS            SETC  '&ZMS ARGUMENT 1 EXCEEDS THE MAXIMUM'             00081600
                MNOTE 8,' &ZMS LENGTH OF 32 CHARACTERS.'                00081700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00081800
.ZG12S          ANOP  ,                                                 00081900
.*----------------------------------------------------------------***   00082000
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00082100
                AIF   (N'&VERSION LE 1).ZG15A   CK NUM                  00082200
&ZMS            SETC  '"VERSION='                                       00082300
&ZMS            SETC  '&ZMS.&VERSION"'                                  00082400
&ZMS            SETC  '&ZMS "VERSION"'                                  00082500
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00082600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00082700
.ZG15A          ANOP  ,                                                 00082800
.*-------------------------------------------------------------------   00082900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00083000
&XVERSION       SETC  ''          INITIALIZE XVARIABLE                  00083100
.ZG16A   AIF   ('&VERSION(1)' NE '1').ZG17A                             00083200
&XVERSION       SETC  '1'         SET KEYWORD                           00083300
.*-------------------------------------------------------------------   00083400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00083500
.ZG17A   AIF   ('&VERSION(1)' NE '2').ZG18A                             00083600
&XVERSION       SETC  '2'         SET KEYWORD                           00083700
.*-------------------------------------------------------------------   00083800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00083900
.ZG18A   AIF   ('&VERSION(1)' NE '3').ZG19A                             00084000
&XVERSION       SETC  '3'         SET KEYWORD                           00084100
.*-------------------------------------------------------------------   00084200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00084300
.ZG19A   AIF   ('&VERSION(1)' NE '4').ZG20A                             00084400
&XVERSION       SETC  '4'         SET KEYWORD                           00084500
.*-------------------------------------------------------------------   00084600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00084700
.ZG20A   AIF   ('&VERSION(1)' NE '5').ZG21A                             00084800
&XVERSION       SETC  '5'         SET KEYWORD                           00084900
.*-------------------------------------------------------------------   00085000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00085100
.ZG21A   AIF   ('&VERSION(1)' NE '6').ZG22A                             00085200
&XVERSION       SETC  '6'         SET KEYWORD                           00085300
.*-------------------------------------------------------------------   00085400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00085500
.ZG22A   AIF   ('&VERSION(1)' NE '7').ZG23A                             00085600
&XVERSION       SETC  '7'         SET KEYWORD                           00085700
.*-------------------------------------------------------------------   00085800
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00085900
.ZG23A          AIF   (K'&XVERSION GT 0).ZG23C  KEYWORD                 00086000
                AIF   (K'&VERSION(1) LE 0).ZG23B                        00086100
&ZMS            SETC  '"VERSION='                                       00086200
&ZMS            SETC  '&ZMS.&VERSION"'                                  00086300
&ZMS            SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '         00086400
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00086500
&ZMS            SETC  '&ZMS "1",'                                       00086600
&ZMS            SETC  '&ZMS "2",'                                       00086700
&ZMS            SETC  '&ZMS "3",'                                       00086800
&ZMS            SETC  '&ZMS "4",'                                       00086900
&ZMS            SETC  '&ZMS "5",'                                       00087000
&ZMS            SETC  '&ZMS "6",'                                       00087100
&ZMS            SETC  '&ZMS OR "7".'                                    00087200
                MNOTE 8,' &ZMS '                                        00087300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00087400
.ZG23B          ANOP  ,                                                 00087500
&XVERSION       SETC  '1'         SET DEFAULT KEYWORD                   00087600
.ZG23C          ANOP  ,                                                 00087700
&ZXVERSION      SETC  'INPUT'     SET IN/OUTPUT                         00087800
.*-------------------------------------------------------------------   00087900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00088000
.ZG24           ANOP  ,                                                 00088100
&ZTLC           SETC 'GETBUF'                                           00088200
                AIF   ('&FUNC(1)' NE '&ZTLC').ZG28                      00088300
&XFUNC          SETC  'GETBUF'    SET KEYWORD                           00088400
                AIF   (N'&FUNC LE 1).ZG24A      CK NUM                  00088500
&ZMS            SETC  '"FUNC='                                          00088600
&ZMS            SETC  '&ZMS.&FUNC"'                                     00088700
&ZMS            SETC  '&ZMS "FUNC"'                                     00088800
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00088900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00089000
.ZG24A          ANOP  ,                                                 00089100
.*------------------------------------------------------------------    00089200
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00089300
&ZCVAL          SETC ''           CLEAR ERROR KEY ACCUMULATOR           00089400
.ZG24A0         AIF   (K'&SIZE LE 0).ZG24A1     OK                      00089500
&ZCVAL          SETC '&ZCVAL SIZE'              INCORRECT KEY USED      00089600
.ZG24A1         AIF   (K'&BYTES LE 0).ZG24A2    OK                      00089700
&ZCVAL          SETC '&ZCVAL BYTES'             INCORRECT KEY USED      00089800
.ZG24A2         AIF   (K'&HEADREG LE 0).ZG24A3  OK                      00089900
&ZCVAL          SETC '&ZCVAL HEADREG'           INCORRECT KEY USED      00090000
.ZG24A3         AIF   (K'&ENTRYREG LE 0).ZG24A4  OK                     00090100
&ZCVAL          SETC '&ZCVAL ENTRYREG'          INCORRECT KEY USED      00090200
.ZG24A4         AIF   (K'&VERSION LE 0).ZG24A5  OK                      00090300
&ZCVAL          SETC '&ZCVAL VERSION'           INCORRECT KEY USED      00090400
.ZG24A5         AIF   (K'&FM_RETCODE LE 0).ZG24A6  OK                   00090500
&ZCVAL          SETC '&ZCVAL FM_RETCODE'        INCORRECT KEY USED      00090600
.ZG24A6         AIF   (K'&ZCVAL LE 0).ZG24A7    OK                      00090700
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)                             00090800
&ZMS            SETC  '"FUNC'                                           00090900
&ZMS            SETC  '&ZMS.=&FUNC"'                                    00091000
&ZMS            SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'              00091100
                MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'              00091200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00091300
.ZG24A7         ANOP  ,                                                 00091400
.*----------------------------------------------------------------***   00091500
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00091600
                AIF   (N'&GM_RETCODE LE 1).ZG26A  CK NUM                00091700
&ZMS            SETC  '"GM_RETCODE='                                    00091800
&ZMS            SETC  '&ZMS.&GM_RETCODE"'                               00091900
&ZMS            SETC  '&ZMS "GM_RETCODE"'                               00092000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00092100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00092200
.ZG26A          ANOP  ,                                                 00092300
.*-------------------------------------------------------------------   00092400
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00092500
                AIF   (K'&GM_RETCODE(1) LE 0).ZG26C  NO PARM            00092600
&ZXGM_RETCODE   SETC  'OUTPUT'    SET OUTPUT                            00092700
&XGM_RETCODE    SETC  '&GM_RETCODE(1)'          SET XVARIABLE           00092800
                AIF   (N'&GM_RETCODE GT 1).ZG26C                        00092900
&XGM_RETCODE    SETC  '&GM_RETCODE'             SET XVARIABLE           00093000
.ZG26C          ANOP  ,                                                 00093100
.*-------------------------------------------------------------------   00093200
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00093300
                AIF   (K'&ZXGM_RETCODE LE 0).ZG26R  NOT I/O             00093400
                AIF   ('&XGM_RETCODE'(1,1) NE '(').ZG26R                00093500
&ZCGPR          SETC  '&XGM_RETCODE'(2,K'&XGM_RETCODE-2)                00093600
                AIF   ('&ZCGPR'(1,1) NE '0').ZG26P                      00093700
                AIF   (K'&ZCGPR GT 2).ZG26Q                             00093800
                AIF   ('&ZCGPR' EQ '0').ZG26Q                           00093900
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00094000
                AIF   (T'&ZCGPR NE 'N').ZG26Q   INVALID REG NAME        00094100
.ZG26P          ANOP  ,                                                 00094200
                AIF   (T'&ZCGPR NE 'N').ZG26R   NON NUMERIC             00094300
                AIF   ('&ZCGPR' LT '2').ZG26Q                           00094400
                AIF   ('&ZCGPR' LE '12').ZG26R                          00094500
.ZG26Q          ANOP  ,                                                 00094600
&ZMS            SETC  '"GM_RETCODE='                                    00094700
&ZMS            SETC  '&ZMS.&GM_RETCODE"'                               00094800
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00094900
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00095000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00095100
.ZG26R          ANOP  ,                                                 00095200
.*-------------------------------------------------------------------   00095300
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00095400
.ZG28           ANOP  ,                                                 00095500
&ZTLC           SETC 'INITBUF'                                          00095600
                AIF   ('&FUNC(1)' NE '&ZTLC').ZG29                      00095700
&XFUNC          SETC  'INITBUF'   SET KEYWORD                           00095800
                AIF   (N'&FUNC LE 1).ZG28A      CK NUM                  00095900
&ZMS            SETC  '"FUNC='                                          00096000
&ZMS            SETC  '&ZMS.&FUNC"'                                     00096100
&ZMS            SETC  '&ZMS "FUNC"'                                     00096200
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00096300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00096400
.ZG28A          ANOP  ,                                                 00096500
.*------------------------------------------------------------------    00096600
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00096700
&ZCVAL          SETC ''           CLEAR ERROR KEY ACCUMULATOR           00096800
.ZG28A0         AIF   (K'&SIZE LE 0).ZG28A1     OK                      00096900
&ZCVAL          SETC '&ZCVAL SIZE'              INCORRECT KEY USED      00097000
.ZG28A1         AIF   (K'&BYTES LE 0).ZG28A2    OK                      00097100
&ZCVAL          SETC '&ZCVAL BYTES'             INCORRECT KEY USED      00097200
.ZG28A2         AIF   (K'&HEADREG LE 0).ZG28A3  OK                      00097300
&ZCVAL          SETC '&ZCVAL HEADREG'           INCORRECT KEY USED      00097400
.ZG28A3         AIF   (K'&ENTRYREG LE 0).ZG28A4  OK                     00097500
&ZCVAL          SETC '&ZCVAL ENTRYREG'          INCORRECT KEY USED      00097600
.ZG28A4         AIF   (K'&VERSION LE 0).ZG28A5  OK                      00097700
&ZCVAL          SETC '&ZCVAL VERSION'           INCORRECT KEY USED      00097800
.ZG28A5         AIF   (K'&GM_RETCODE LE 0).ZG28A6  OK                   00097900
&ZCVAL          SETC '&ZCVAL GM_RETCODE'        INCORRECT KEY USED      00098000
.ZG28A6         AIF   (K'&FM_RETCODE LE 0).ZG28A7  OK                   00098100
&ZCVAL          SETC '&ZCVAL FM_RETCODE'        INCORRECT KEY USED      00098200
.ZG28A7         AIF   (K'&ZCVAL LE 0).ZG28A8    OK                      00098300
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)                             00098400
&ZMS            SETC  '"FUNC'                                           00098500
&ZMS            SETC  '&ZMS.=&FUNC"'                                    00098600
&ZMS            SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'              00098700
                MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'              00098800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00098900
.ZG28A8         ANOP  ,                                                 00099000
.*-------------------------------------------------------------------   00099100
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00099200
.ZG29           ANOP  ,                                                 00099300
&ZTLC           SETC 'FREEBUF'                                          00099400
                AIF   ('&FUNC(1)' NE '&ZTLC').ZG33                      00099500
&XFUNC          SETC  'FREEBUF'   SET KEYWORD                           00099600
                AIF   (N'&FUNC LE 1).ZG29A      CK NUM                  00099700
&ZMS            SETC  '"FUNC='                                          00099800
&ZMS            SETC  '&ZMS.&FUNC"'                                     00099900
&ZMS            SETC  '&ZMS "FUNC"'                                     00100000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00100100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00100200
.ZG29A          ANOP  ,                                                 00100300
.*------------------------------------------------------------------    00100400
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00100500
&ZCVAL          SETC ''           CLEAR ERROR KEY ACCUMULATOR           00100600
.ZG29A0         AIF   (K'&SIZE LE 0).ZG29A1     OK                      00100700
&ZCVAL          SETC '&ZCVAL SIZE'              INCORRECT KEY USED      00100800
.ZG29A1         AIF   (K'&BYTES LE 0).ZG29A2    OK                      00100900
&ZCVAL          SETC '&ZCVAL BYTES'             INCORRECT KEY USED      00101000
.ZG29A2         AIF   (K'&HEADREG LE 0).ZG29A3  OK                      00101100
&ZCVAL          SETC '&ZCVAL HEADREG'           INCORRECT KEY USED      00101200
.ZG29A3         AIF   (K'&ENTRYREG LE 0).ZG29A4  OK                     00101300
&ZCVAL          SETC '&ZCVAL ENTRYREG'          INCORRECT KEY USED      00101400
.ZG29A4         AIF   (K'&VERSION LE 0).ZG29A5  OK                      00101500
&ZCVAL          SETC '&ZCVAL VERSION'           INCORRECT KEY USED      00101600
.ZG29A5         AIF   (K'&GM_RETCODE LE 0).ZG29A6  OK                   00101700
&ZCVAL          SETC '&ZCVAL GM_RETCODE'        INCORRECT KEY USED      00101800
.ZG29A6         AIF   (K'&ZCVAL LE 0).ZG29A7    OK                      00101900
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)                             00102000
&ZMS            SETC  '"FUNC'                                           00102100
&ZMS            SETC  '&ZMS.=&FUNC"'                                    00102200
&ZMS            SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'              00102300
                MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'              00102400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00102500
.ZG29A7         ANOP  ,                                                 00102600
.*----------------------------------------------------------------***   00102700
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00102800
                AIF   (N'&FM_RETCODE LE 1).ZG31A  CK NUM                00102900
&ZMS            SETC  '"FM_RETCODE='                                    00103000
&ZMS            SETC  '&ZMS.&FM_RETCODE"'                               00103100
&ZMS            SETC  '&ZMS "FM_RETCODE"'                               00103200
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00103300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00103400
.ZG31A          ANOP  ,                                                 00103500
.*-------------------------------------------------------------------   00103600
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00103700
                AIF   (K'&FM_RETCODE(1) LE 0).ZG31C  NO PARM            00103800
&ZXFM_RETCODE   SETC  'OUTPUT'    SET OUTPUT                            00103900
&XFM_RETCODE    SETC  '&FM_RETCODE(1)'          SET XVARIABLE           00104000
                AIF   (N'&FM_RETCODE GT 1).ZG31C                        00104100
&XFM_RETCODE    SETC  '&FM_RETCODE'             SET XVARIABLE           00104200
.ZG31C          ANOP  ,                                                 00104300
.*-------------------------------------------------------------------   00104400
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00104500
                AIF   (K'&ZXFM_RETCODE LE 0).ZG31R  NOT I/O             00104600
                AIF   ('&XFM_RETCODE'(1,1) NE '(').ZG31R                00104700
&ZCGPR          SETC  '&XFM_RETCODE'(2,K'&XFM_RETCODE-2)                00104800
                AIF   ('&ZCGPR'(1,1) NE '0').ZG31P                      00104900
                AIF   (K'&ZCGPR GT 2).ZG31Q                             00105000
                AIF   ('&ZCGPR' EQ '0').ZG31Q                           00105100
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00105200
                AIF   (T'&ZCGPR NE 'N').ZG31Q   INVALID REG NAME        00105300
.ZG31P          ANOP  ,                                                 00105400
                AIF   (T'&ZCGPR NE 'N').ZG31R   NON NUMERIC             00105500
                AIF   ('&ZCGPR' LT '2').ZG31Q                           00105600
                AIF   ('&ZCGPR' LE '12').ZG31R                          00105700
.ZG31Q          ANOP  ,                                                 00105800
&ZMS            SETC  '"FM_RETCODE='                                    00105900
&ZMS            SETC  '&ZMS.&FM_RETCODE"'                               00106000
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00106100
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00106200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00106300
.ZG31R          ANOP  ,                                                 00106400
.*------------------------------------------------------------------    00106500
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00106600
.ZG33           ANOP  ,                                                 00106700
&ZXFUNC         SETC  'INPUT'     SET IN/OUTPUT                         00106800
                AIF   (K'&XFUNC GT 0).ZG33E     VALID ARG               00106900
                AIF   (T'&FUNC EQ 'O').ZG33D    OMITTED                 00107000
&ZASYSLNDX      SETA  0                                                 00107100
.ZG33A          ANOP  ,           POSITIONAL MACRO KEY                  00107200
&ZASYSLNDX      SETA  &ZASYSLNDX+1                                      00107300
                AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG33C                  00107400
&ZTLC           SETC 'FUNC'                                             00107500
                AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG33A         00107600
.ZG33B          ANOP  ,                                                 00107700
&ZXFUNC         SETC  ''          RESET IN/OUTPUT                       00107800
&ZMS            SETC  'THE "FUNC" KEY'                                  00107900
&ZMS            SETC  '&ZMS MUST CONTAIN ONE'                           00108000
                MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                  00108100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00108200
                AGO   .ZG33E                                            00108300
.ZG33C          ANOP  ,                                                 00108400
&ZXFUNC         SETC  ''          RESET IN/OUTPUT                       00108500
&ZMS            SETC  '"FUNC='                                          00108600
&ZMS            SETC  '&ZMS.&FUNC"'                                     00108700
&ZMS            SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '         00108800
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00108900
&ZMS            SETC  '&ZMS "MAPBUF",'                                  00109000
&ZMS            SETC  '&ZMS "GETBUF",'                                  00109100
&ZMS            SETC  '&ZMS "INITBUF",'                                 00109200
&ZMS            SETC  '&ZMS OR "FREEBUF".'                              00109300
                MNOTE 8,' &ZMS '                                        00109400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00109500
                AGO   .ZG33E                                            00109600
.ZG33D          ANOP  ,                                                 00109700
&XFUNC          SETC  'MAPBUF'    SET DEFAULT KEYWORD                   00109800
.ZG33E          ANOP  ,                                                 00109900
.*------------------------------------------------------------------    00110000
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00110100
                AIF   (K'&FUNC(1) GT 0).ZG33F   PARM                    00110200
&XFUNC          SETC  ''          ENSURE NULL KEYWORD                   00110300
&ZXFUNC         SETC  ''          RESET IN/OUTPUT                       00110400
&ZMS            SETC  'THE'                                             00110500
&ZMS            SETC  '&ZMS "FUNC" KEY AND ITS'                         00110600
&ZMS            SETC  '&ZMS ARGUMENT ARE REQUIRED.'                     00110700
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00110800
&ZMS            SETC  '&ZMS "MAPBUF",'                                  00110900
&ZMS            SETC  '&ZMS "GETBUF",'                                  00111000
&ZMS            SETC  '&ZMS "INITBUF",'                                 00111100
&ZMS            SETC  '&ZMS OR "FREEBUF".'                              00111200
                MNOTE 8,' &ZMS '                                        00111300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00111400
.ZG33F          ANOP  ,                                                 00111500
.*----------------------------------------------------------------***   00111600
.***AG.KKWRD01 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             00111700
                AIF   (N'&TYPE LE 1).ZG35A      CK NUM                  00111800
&ZMS            SETC  '"TYPE='                                          00111900
&ZMS            SETC  '&ZMS.&TYPE"'                                     00112000
&ZMS            SETC  '&ZMS "TYPE"'                                     00112100
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00112200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00112300
.ZG35A          ANOP  ,                                                 00112400
.*-------------------------------------------------------------------   00112500
.***AG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             00112600
&XTYPE          SETC  ''          INITIALIZE XVARIABLE                  00112700
.ZG36A   AIF   ('&TYPE(1)' NE 'ESD').ZG37A                              00112800
&XTYPE          SETC  'ESD'       SET KEYWORD                           00112900
.*-------------------------------------------------------------------   00113000
.***AG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             00113100
.ZG37A   AIF   ('&TYPE(1)' NE 'RLD').ZG38A                              00113200
&XTYPE          SETC  'RLD'       SET KEYWORD                           00113300
.*-------------------------------------------------------------------   00113400
.***AG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             00113500
.ZG38A   AIF   ('&TYPE(1)' NE 'IDRU').ZG39A                             00113600
&XTYPE          SETC  'IDRU'      SET KEYWORD                           00113700
.*-------------------------------------------------------------------   00113800
.***AG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             00113900
.ZG39A   AIF   ('&TYPE(1)' NE 'IDRL').ZG40A                             00114000
&XTYPE          SETC  'IDRL'      SET KEYWORD                           00114100
.*-------------------------------------------------------------------   00114200
.***AG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             00114300
.ZG40A   AIF   ('&TYPE(1)' NE 'IDRZ').ZG41A                             00114400
&XTYPE          SETC  'IDRZ'      SET KEYWORD                           00114500
.*-------------------------------------------------------------------   00114600
.***AG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             00114700
.ZG41A   AIF   ('&TYPE(1)' NE 'IDRB').ZG42A                             00114800
&XTYPE          SETC  'IDRB'      SET KEYWORD                           00114900
.*-------------------------------------------------------------------   00115000
.***AG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             00115100
.ZG42A   AIF   ('&TYPE(1)' NE 'SYM').ZG43A                              00115200
&XTYPE          SETC  'SYM'       SET KEYWORD                           00115300
.*-------------------------------------------------------------------   00115400
.***AG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             00115500
.ZG43A   AIF   ('&TYPE(1)' NE 'TEXT').ZG44A                             00115600
&XTYPE          SETC  'TEXT'      SET KEYWORD                           00115700
.*-------------------------------------------------------------------   00115800
.***AG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             00115900
.ZG44A   AIF   ('&TYPE(1)' NE 'NAME').ZG45A                             00116000
&XTYPE          SETC  'NAME'      SET KEYWORD                           00116100
.*-------------------------------------------------------------------   00116200
.***AG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             00116300
.ZG45A   AIF   ('&TYPE(1)' NE 'XTLST').ZG46A                            00116400
&XTYPE          SETC  'XTLST'     SET KEYWORD                           00116500
.*-------------------------------------------------------------------   00116600
.***AG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             00116700
.ZG46A   AIF   ('&TYPE(1)' NE 'MAP').ZG47A                              00116800
&XTYPE          SETC  'MAP'       SET KEYWORD                           00116900
.*-------------------------------------------------------------------   00117000
.***AG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             00117100
.ZG47A   AIF   ('&TYPE(1)' NE 'PINIT').ZG48A                            00117200
&XTYPE          SETC  'PINIT'     SET KEYWORD                           00117300
.*-------------------------------------------------------------------   00117400
.***AG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             00117500
.ZG48A   AIF   ('&TYPE(1)' NE 'PMAR').ZG49A                             00117600
&XTYPE          SETC  'PMAR'      SET KEYWORD                           00117700
.*-------------------------------------------------------------------   00117800
.***AG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             00117900
.ZG49A   AIF   ('&TYPE(1)' NE 'CUI').ZG50A                              00118000
&XTYPE          SETC  'CUI'       SET KEYWORD                           00118100
.*-------------------------------------------------------------------   00118200
.***AG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             00118300
.ZG50A   AIF   ('&TYPE(1)' NE 'LIB').ZG51A                              00118400
&XTYPE          SETC  'LIB'       SET KEYWORD                           00118500
.*-------------------------------------------------------------------   00118600
.***AG.KKWRD03 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             00118700
.ZG51A          AIF   (K'&XTYPE GT 0).ZG51C     KEYWORD                 00118800
                AIF   (K'&TYPE(1) LE 0).ZG51B                           00118900
&ZMS            SETC  '"TYPE='                                          00119000
&ZMS            SETC  '&ZMS.&TYPE"'                                     00119100
&ZMS            SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '         00119200
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00119300
&ZMS            SETC  '&ZMS "ESD",'                                     00119400
&ZMS            SETC  '&ZMS "RLD",'                                     00119500
&ZMS            SETC  '&ZMS "IDRU",'                                    00119600
&ZMS            SETC  '&ZMS "IDRL",'                                    00119700
&ZMS            SETC  '&ZMS "IDRZ",'                                    00119800
&ZMS            SETC  '&ZMS "IDRB",'                                    00119900
&ZMS            SETC  '&ZMS "SYM",'                                     00120000
&ZMS            SETC  '&ZMS "TEXT",'                                    00120100
&ZMS            SETC  '&ZMS "NAME",'                                    00120200
&ZMS            SETC  '&ZMS "XTLST",'                                   00120300
&ZMS            SETC  '&ZMS "MAP",'                                     00120400
&ZMS            SETC  '&ZMS "PINIT",'                                   00120500
&ZMS            SETC  '&ZMS "PMAR",'                                    00120600
&ZMS            SETC  '&ZMS "CUI",'                                     00120700
&ZMS            SETC  '&ZMS OR "LIB".'                                  00120800
                MNOTE 8,' &ZMS '                                        00120900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00121000
.ZG51B          ANOP  ,                                                 00121100
&XTYPE          SETC  'ESD'       SET DEFAULT KEYWORD                   00121200
.ZG51C          ANOP  ,                                                 00121300
&ZXTYPE         SETC  'INPUT'     SET IN/OUTPUT                         00121400
.*-------------------------------------------------------------------   00121500
.***AG.KKWRD04 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             00121600
                AIF   (K'&TYPE(1) GT 0).ZG51D   VALID                   00121700
&ZXTYPE         SETC  ''          RESET IN/OUTPUT                       00121800
&ZMS            SETC  'THE'                                             00121900
&ZMS            SETC  '&ZMS "TYPE" KEY AND ITS'                         00122000
&ZMS            SETC  '&ZMS ARGUMENT ARE REQUIRED.'                     00122100
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00122200
&ZMS            SETC  '&ZMS "ESD",'                                     00122300
&ZMS            SETC  '&ZMS "RLD",'                                     00122400
&ZMS            SETC  '&ZMS "IDRU",'                                    00122500
&ZMS            SETC  '&ZMS "IDRL",'                                    00122600
&ZMS            SETC  '&ZMS "IDRZ",'                                    00122700
&ZMS            SETC  '&ZMS "IDRB",'                                    00122800
&ZMS            SETC  '&ZMS "SYM",'                                     00122900
&ZMS            SETC  '&ZMS "TEXT",'                                    00123000
&ZMS            SETC  '&ZMS "NAME",'                                    00123100
&ZMS            SETC  '&ZMS "XTLST",'                                   00123200
&ZMS            SETC  '&ZMS "MAP",'                                     00123300
&ZMS            SETC  '&ZMS "PINIT",'                                   00123400
&ZMS            SETC  '&ZMS "PMAR",'                                    00123500
&ZMS            SETC  '&ZMS "CUI",'                                     00123600
&ZMS            SETC  '&ZMS OR "LIB".'                                  00123700
                MNOTE 8,' &ZMS '                                        00123800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00123900
.ZG51D          ANOP  ,                                                 00124000
.*----------------------------------------------------------------***   00124100
.***AG.KXVAR05 VALUE, OPT INPUT, KEYS -XVARIABLE KEY                    00124200
                AIF   (N'&PREFIX LE 1).ZG53A    CK NUM                  00124300
&ZMS            SETC  '"PREFIX='                                        00124400
&ZMS            SETC  '&ZMS.&PREFIX"'                                   00124500
&ZMS            SETC  '&ZMS "PREFIX"'                                   00124600
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00124700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00124800
.ZG53A          ANOP  ,                                                 00124900
.*-------------------------------------------------------------------   00125000
.***AG.KXVAR13 VALUE, OPT INPUT, KEYS -XVARIABLE                        00125100
&ZXPREFIX       SETC  'INPUT'     SET IN/OUTPUT                         00125200
&XPREFIX        SETC  '0'                                               00125300
                AIF   (K'&PREFIX(1) LE 0).ZG53B  PARM                   00125400
&XPREFIX        SETC  '&PREFIX(1)'              SET XVARIABLE           00125500
                AIF   (N'&PREFIX GT 1).ZG53B    MULTI                   00125600
&XPREFIX        SETC  '&PREFIX'   SET XVARIABLE                         00125700
.ZG53B          ANOP  ,                                                 00125800
.*-------------------------------------------------------------------   00125900
.***AG.KCK01 VALUE, OPT INPUT, KEYS -GPR NOT ALLOWED                    00126000
                AIF   (K'&ZXPREFIX LE 0).ZG53P  NOT I/O                 00126100
                AIF   ('&XPREFIX' EQ '0').ZG53P                         00126200
                AIF   ('&XPREFIX'(1,1) NE '(').ZG53P                    00126300
&ZXPREFIX       SETC  ''          RESET IN/OUTPUT                       00126400
&ZMS            SETC  '"PREFIX='                                        00126500
&ZMS            SETC  '&ZMS.&PREFIX"'                                   00126600
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00126700
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00126800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00126900
.ZG53P          ANOP  ,                                                 00127000
.*-------------------------------------------------------------------   00127100
.***AG.KCK03 VALUE, OPT INPUT, KEYS -CHARACTER LENGTH                   00127200
                AIF   (K'&ZXPREFIX LE 0).ZG53S  NOT I/O                 00127300
                AIF   ('&XPREFIX' EQ '0').ZG53S                         00127400
                AIF   (K'&XPREFIX LE 32).ZG53S  LNG OK                  00127500
&ZXPREFIX       SETC  ''          RESET IN/OUTPUT                       00127600
&ZMS            SETC  '"PREFIX='                                        00127700
&ZMS            SETC  '&ZMS.&PREFIX"'                                   00127800
&ZMS            SETC  '&ZMS ARGUMENT 1 EXCEEDS THE MAXIMUM'             00127900
                MNOTE 8,' &ZMS LENGTH OF 32 CHARACTERS.'                00128000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00128100
.ZG53S          ANOP  ,                                                 00128200
.******************************************************************     00128300
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00128400
.******************************************************************     00128500
                ACTR  10000                                             00128600
.*----------------------------------------------------------------***   00128700
.***AH.P02 EXTRA POSITIONALS                                            00128800
                AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS              00128900
                AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL              00129000
                AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL          00129100
                AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL           00129200
.ZGLISTX1       ANOP  ,                                                 00129300
&ZCVAL          SETC  ''          ERROR FIELD                           00129400
&ZAWRK          SETA  0           POSITIONAL NUMBER                     00129500
.ZGLIST2        ANOP  ,                                                 00129600
&ZAWRK          SETA  &ZAWRK+1    NEXT POSITIONAL                       00129700
                AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE              00129800
&ZCVAL          SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                   00129900
                AGO   .ZGLIST2                                          00130000
.*                                                                      00130100
.ZGLIST3        ANOP  ,                                                 00130200
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)     STRIP COMMA             00130300
&ZMS            SETC  'POSITIONAL ARGUMENT(S),'                         00130400
&ZMS            SETC  '&ZMS "&ZCVAL"'                                   00130500
&ZMS            SETC  '&ZMS CANNOT BE USED.'                            00130600
&ZMS            SETC  '&ZMS NO POSITIONAL ARGUMENTS'                    00130700
                MNOTE 8,' &ZMS ARE ALLOWED.'                            00130800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00130900
.ZGLISTX        ANOP  ,                                                 00131000
&ZASYSLNDX      SETA  0                                                 00131100
.*******************************************************************    00131200
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00131300
.*******************************************************************    00131400
                AIF   (&ZMACRET NE 0).ZLX2      ERROR DETECTED          00131500
.*******************************************************************    00131600
.***AE.01  START OF IEWBUFF MACRO CODE                                  00131700
.*******************************************************************    00131800
                LCLC  &M0M0001                 NAME                     00131900
&M0M0001        SETC  '&XLABEL'                SET NAME                 00132000
                AIF   (K'&XLABEL NE 0).XLAB2                            00132100
&M0M0001        SETC  'M00M&SYSNDX'            DEFAULT NAME             00132200
.*                                                                      00132300
.XLAB2          ANOP  ,                                                 00132400
&M0M0001 DS    0H                             IEWBUFF-0                 00132500
.*******************************************************************    00132600
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00132700
.*******************************************************************    00132800
              PUSH  PRINT                                               00132900
                AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON        00133000
                PRINT OFF         ++ PR01                               00133100
                AGO   .ZPRNTXX                                          00133200
.ZPRINTX        PRINT ON                                                00133300
.ZPRNTXX        ANOP  ,                                                 00133400
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00133500
.********************************************************************** 00133600
.* AMG inserts the following BAL macro statements into the            * 00133700
.* IEWBUFF macro. AMG requires .li on/off to be coded around          * 00133800
.* the BAL macro statements.                                          * 00133900
.*                                                                    * 00134000
.* AMG has validated all the keyword syntax and placed the            * 00134100
.* actual or default values in macro variables named &Xkeyword.       * 00134200
.* AMG has not created defaults for absent OUTPUT arguments.          * 00134300
.********************************************************************** 00134400
.*-----Local variables------------------------------------------------  00134500
         LCLA  &ENTRYLEN                 Length of one buffer entry     00134600
         LCLC  &ENTRYLENC                Character form of ENTRYLEN     00134700
         LCLA  &ENTRYCOUNT               Number of entries in buffer    00134800
         LCLC  &ENTRYCOUNTC              Character form of ENTRYCOUNT   00134900
         LCLA  &BUFLEN                   Total length of buffer         00135000
         LCLA  &BUFHDRLEN                Length of a buffer header      00135100
         LCLA  &PTIENTHDRLEN             Length of PINIT entry hdr @PNA 00135200
         LCLA  &BUFLSTLEN                Length of names list area      00135300
.*-----Variables to handle PREFIX (specified or not) ---------- 3@01A   00135400
         LCLA  &PFIXLEN                                                 00135500
         LCLC  &PFX                                                     00135600
         LCLC  &DSECTLBL                                                00135700
.*-----Initializes variables------------------------------------------  00135800
&BUFHDRLEN SETA 32                  Standard header length              00135900
&PTIENTHDRLEN SETA 22               PINIT entry header len         @PNA 00136000
.*     Sets TYPE to a standard 3 character form. TYPE is required.      00136100
         AIF   (K'&XTYPE EQ 3).TYPOK                                    00136200
&XTYPE   SETC  'IDB'                     Short form of IDRB name        00136300
         AIF   ('&TYPE' EQ 'IDRB').TYPOK                                00136400
&XTYPE   SETC  'IDL'                     Short form of IDRL name        00136500
         AIF   ('&TYPE' EQ 'IDRL').TYPOK                                00136600
&XTYPE   SETC  'IDU'                     Short form of IDRU name        00136700
         AIF   ('&TYPE' EQ 'IDRU').TYPOK                                00136800
&XTYPE   SETC  'IDZ'                     Short form of IDRZ name        00136900
         AIF   ('&TYPE' EQ 'IDRZ').TYPOK                                00137000
&XTYPE   SETC  'TXT'                     Short form of TEXT name        00137100
         AIF   ('&TYPE' EQ 'TEXT').TYPOK                                00137200
&XTYPE   SETC  'BNL'                     Short form of NAME name        00137300
         AIF   ('&TYPE' EQ 'NAME').TYPOK                                00137400
&XTYPE   SETC  'PMR'                     Short form of PMAR name  @LAA  00137500
         AIF   ('&TYPE' EQ 'PMAR').TYPOK                          @LAA  00137600
&XTYPE   SETC  'CUI'                     Short form of CUI  name  @LFA  00137700
         AIF   ('&TYPE' EQ 'CUI').TYPOK                           @LFA  00137800
&XTYPE   SETC  'LIB'                     Short form of LIB  name  @LFA  00137900
         AIF   ('&TYPE' EQ 'LIB').TYPOK                           @LFA  00138000
&XTYPE   SETC  'XTL'                     Short form of XTLST name       00138100
         AIF   ('&TYPE' EQ 'XTLST').TYPOK                         @L3A  00138200
&XTYPE   SETC  'PTI'                     Short form of PINIT name @L3A  00138300
.TYPOK   ANOP  ,                                                        00138400
.*-----Validates FUNC(MAPBUF) keys------------------------------------  00138500
         AIF   ('&XFUNC' NE 'MAPBUF').NOTMAPBF                     @09C 00138600
.*-----Calculates length of the buffer entries------------------------  00138700
&BUFLSTLEN SETA 512                 Size of area for names list    @L6M 00138800
         AIF   ('&XVERSION' EQ '1').TXTLEN                         @LGC 00138900
&BUFLSTLEN  SETA 1024         Size of area for names list v2       @L6M 00139000
.TXTLEN  ANOP  ,                                                   @LGA 00139100
         AIF   ('&XTYPE' NE 'TXT').ESDLEN                          @LGA 00139200
&BUFLSTLEN  SETA 0            No symbols in text buffer            @LGA 00139300
.ESDLEN  ANOP  ,                                                   @L6A 00139400
&ENTRYLENC SETC '56'                  V1 Length of ESD buffer entry@L6M 00139500
         AIF   ('&XVERSION' EQ '1').ESDDONE                        @L6C 00139600
.*                                                                2@L6D 00139700
&ENTRYLENC SETC '80'                  V2 Length of ESD buffer entry@L6M 00139800
         AIF   ('&XVERSION' EQ '2').ESDDONE                        @L6C 00139900
.*                                                                2@06D 00140000
&ENTRYLENC SETC '96'                  V3 Length of ESD buffer entry@L4C 00140100
.ESDDONE ANOP  ,                                                   @L1A 00140200
         AIF   ('&XTYPE' EQ 'ESD').DONELEN                              00140300
&ENTRYLENC SETC '116'                    Length of IDB buffer entry     00140400
         AIF   ('&XTYPE' EQ 'IDB').DONELEN                              00140500
&ENTRYLENC SETC '28'                     Length of IDL buffer entry     00140600
         AIF   ('&XVERSION' LT '7').IDLDONE                        @LHA 00140700
&ENTRYLENC SETC '36'                     Length of IDL buffer entry@LHA 00140800
.IDLDONE ANOP  , @LHA                                              @LHA 00140900
         AIF   ('&XTYPE' EQ 'IDL').DONELEN                              00141000
&ENTRYLENC SETC '96'                     Length of IDU buffer entry     00141100
         AIF   ('&XTYPE' EQ 'IDU').DONELEN                              00141200
&ENTRYLENC SETC '24'                     Length of IDZ buffer entry     00141300
         AIF   ('&XTYPE' EQ 'IDZ').DONELEN                         @06A 00141400
&ENTRYLENC SETC '32'                     Length of RLD buffer entry     00141500
         AIF   ('&XVERSION' EQ '1').RLDDONE                        @L7M 00141600
&ENTRYLENC SETC '44'                     Length of RLD buffer entry@L1A 00141700
         AIF   ('&XVERSION' EQ '2').RLDDONE                        @L7M 00141800
&ENTRYLENC SETC '52'                     Length of RLD buffer entry@L1A 00141900
.RLDDONE ANOP  ,                                                        00142000
         AIF   ('&XTYPE' EQ 'RLD').DONELEN                              00142100
&ENTRYLENC SETC '96'                     Length of SYM buffer entry     00142200
         AIF   ('&XTYPE' EQ 'SYM').DONELEN                              00142300
&ENTRYLENC SETC '1'                      Length of TXT buffer entry     00142400
         AIF   ('&XTYPE' EQ 'TXT').DONELEN                              00142500
&ENTRYLENC SETC '8'                      Length of BNL buffer entry@L6M 00142600
         AIF   ('&XVERSION' EQ '1').BNLLEN                         @L6A 00142700
&ENTRYLENC SETC '16'                     Length of BNL buffer entry@L6M 00142800
         AIF   ('&XVERSION' EQ '2').BNLLEN                         @L6C 00142900
         AIF   ('&XVERSION' EQ '3').BNLLEN                         @L6C 00143000
&ENTRYLENC SETC '24'                     Length of BNL buffer entry@L6A 00143100
.*                                                                2@L6D 00143200
.BNLLEN  AIF   ('&XTYPE' EQ 'BNL').DONELEN                         @L6C 00143300
&ENTRYLENC SETC '1'                      Length of PMR buffer entry@PCC 00143400
         AIF   ('&XTYPE' EQ 'PMR').DONELEN                         @LAA 00143500
&ENTRYLENC SETC '80'                     Length of CUI buffer entry@LFA 00143600
         AIF   ('&XTYPE' EQ 'CUI').DONELEN                         @LFA 00143700
&ENTRYLENC SETC '1'                      Length of LIB buffer entry@LFA 00143800
         AIF   ('&XTYPE' EQ 'LIB').DONELEN                         @LFA 00143900
&ENTRYLENC SETC '8'                      Length of XTL buffer entry     00144000
         AIF   ('&XTYPE' EQ 'XTL').DONELEN                              00144100
&ENTRYLENC SETC '32'                     Length of MAP buffer entry@L1C 00144200
         AIF   ('&XTYPE' EQ 'MAP').DONELEN                         @L3A 00144300
&ENTRYLENC SETC '01'                     Length of Part Init entry @L4C 00144400
.DONELEN ANOP  ,                                                        00144500
&ENTRYLEN SETA &ENTRYLENC                                               00144600
.*------Calculates number of entries in buffer from BYTES or SIZE----   00144700
         AIF   (K'&XBYTES LE 0).USESIZE                                 00144800
&ENTRYCOUNT SETA (&XBYTES-(&BUFHDRLEN+&BUFLSTLEN))/&ENTRYLEN  @L2C,@03C 00144900
         AIF   ('&XTYPE' NE 'PTI').NOTPTI2                         @PNA 00145000
&ENTRYCOUNT SETA (&ENTRYCOUNT-&PTIENTHDRLEN)                       @PNA 00145100
.NOTPTI2 ANOP ,                                                    @PNA 00145200
         AIF   (&ENTRYCOUNT GT 0).GOTCOUNT                              00145300
         MNOTE 8,'IEWBUFF01E - BYTES is too small '                    X00145400
               'for a single entry buffer'                              00145500
         MEXIT                                                          00145600
.USESIZE ANOP  ,                                                        00145700
&ENTRYCOUNT SETA &XSIZE                  Use value passed in            00145800
.GOTCOUNT ANOP ,                                                        00145900
&BUFLEN  SETA (&BUFHDRLEN+&BUFLSTLEN)+(&ENTRYLEN*&ENTRYCOUNT) @L2C,@02A 00146000
         AIF   (&BUFLEN LE 1073741984).DONEBUFL   (=2**30+header)       00146100
         MNOTE 8,'IEWBUFF02E - Buffer length would exceed 1GB'          00146200
         MEXIT                                                          00146300
.DONEBUFL ANOP ,                                                        00146400
&XBYTES  SETC  '&BUFLEN'                 Character form of BUFLEN       00146500
.*                                                              @09D    00146600
.*-----Generates code for FUNC(MAPBUF)------------------------------    00146700
.*                                                             2@09D    00146800
.*                                                                      00146900
.*---------------------------------------------------------  16@01A     00147000
&PFX      SETC  '&XTYPE'.'_'                                            00147100
&DSECTLBL SETC  'IEWB'.'&XTYPE'                                         00147200
&PFIXLEN  SETA K'&XPREFIX                                               00147300
.* If PREFIX was not specified, it gets defaulted '0', and its length=1 00147400
.* In such case, each label will be prefixed with a three-character     00147500
.* record type, followed by '_' (e.g., ESD_ ).                          00147600
.* Also,  the DSECT label would be  IEWBrectype (e.g. IEWBESD )         00147700
          AIF  ((&PFIXLEN EQ 1) AND ('&XPREFIX' EQ '0')).PFIXOK    @L7C 00147800
.* If PREFIX was specified, each label will be prefixed with            00147900
.* the PREFIX value, followed by '_', followed by a three-character     00148000
.* record type, followed by '_' (e.g., V1_ESD_ ).                       00148100
.* Also, the DSECT label would be of the form                           00148200
.* prefix_IEWBrectype (e.g., V1_IEWBESD)                                00148300
&PFX      SETC  '&XPREFIX'.'_'.'&XTYPE'.'_'                             00148400
&DSECTLBL SETC  '&XPREFIX'.'_IEWB'.'&XTYPE'                             00148500
.PFIXOK   ANOP                                                          00148600
.*-----Declares mapping of the buffer header------------------------    00148700
         PRINT  OFF                                                     00148800
         MACRO                                                          00148900
         IEWBUFHD &BP=,&BUFHENTL=,&BUFHENTC=,                          X00149000
               &BUFHBUFL=,&BUFHVER=,&BUFHCSCT=,                        X00149100
               &BUFHHREG=,&BUFHEREG=                                    00149200
.*********************************************************************  00149300
.* Inner macro to declare the buffer header.                            00149400
.*                                                                      00149500
.* The invoker must code the header's DSECT statement along with any    00149600
.* descriptive comments.  An inner macro is required so that            00149700
.* assembler comments, coded by the invoker, can include the name of    00149800
.* the type of buffer.  The macro processor does not substitute for     00149900
.* symbols which appear in comments.                                    00150000
.*                                                                      00150100
.* The parameters are:                                                  00150200
.*             &BP       = Buffer fields' prefix (&PFX)                 00150300
.*             &BUFHENTL = Length of each entry (&ENTRYLEN)             00150400
.*             &BUFHENTC = Number of entries (&ENTRYCOUNT)              00150500
.*             &BUFHBUFL = Length of the buffer (&BUFLEN)               00150600
.*             &BUFHVER  = Buffer version (&XVERSION)                   00150700
.*             &BUFHCSCT = CSECT (name,type): (&SYSECT,&SYSSTYP)   @05C 00150800
.*             &BUFHHREG = Register name for header base                00150900
.*             &BUFHEREG = Register name for entry base                 00151000
.*********************************************************************  00151100
.*                                                                      00151200
.*------------------------------------------------------    24@01A      00151300
.* Local variable declarations for the header's (possible)  PREFIX      00151400
          LCLA  &LEN1                                                   00151500
          LCLA  &LEN2                                                   00151600
          LCLA  &BPPLEN                                                 00151700
          LCLC  &BPP                                                    00151800
          LCLC  &DSCTLB                                                 00151900
          LCLC  &RECTYPE                                                00152000
.* Modify &PFX (take out the last '_') to fit our buffer-header label   00152100
.* convention                                                           00152200
&BPPLEN   SETA  K'&BP-1                                                 00152300
&BPP      SETC  '&BP'(1,&BPPLEN)                                        00152400
.* Create the DSECT label:  prefix_IEWBrectype  (e.g., V1_IEWBESD),     00152500
.* or if no prefix, IEWBrectype (e.g, IEWBESD)                          00152600
.* This will be used to define the pointer basings for DSECTs           00152700
          AIF   ('&BPPLEN' GT '3').LB1                                  00152800
&DSCTLB   SETC  'IEWB'.'&BPP'                                           00152900
&RECTYPE  SETC  '&BPP'                                                  00153000
          AGO   .DSCTLBOK                                               00153100
.LB1      ANOP                                                          00153200
&LEN1     SETA   &BPPLEN-2                                              00153300
&LEN2     SETA   &BPPLEN-4                                              00153400
&RECTYPE  SETC  '&BPP'(&LEN1,3)                                         00153500
&DSCTLB   SETC   '&BPP'(1,&LEN2).'_IEWB'.'&RECTYPE'                     00153600
.DSCTLBOK ANOP                                                          00153700
* A Binder buffer consists of a header section, followed by             00153800
* a table of fixed size entries and an area for symbol names.           00153900
* Each name in the names list area consists of a halfword               00154000
* length followed by up to 64 characters.                               00154100
*                                                                       00154200
.*  NOTE: All variables defined from now on which contain the           00154300
.*  &BPP appendage, have been modified per change  @01 (see prolog)     00154400
.*                                                                      00154500
.*------Declares buffer header---------------------------------------   00154600
&BPP.H_START          DS    0F   1st byte of header.                    00154700
&BPP.H_BUFFER_ID      DS    CL8  Buffer eyecatcher.                     00154800
&BPP.H_BUFFER_LENG    DS    F    Buffer length, including this          00154900
*                               header, the buffer entries, and         00155000
*                               the names list area.                    00155100
&BPP.H_VERSION        DS    AL1  Version of buffer.                     00155200
                      DS    AL3  Reserved. Must be zero.                00155300
&BPP.H_ENTRY_LENG     DS    F    Length of each buffer entry.           00155400
&BPP.H_ENTRY_COUNT    DS    F    Number of slots for entries.           00155500
&BPP.H_NAMEPTR_ADJ    DS    F    Offset of name in names list area.     00155600
&BPP.H_STRING_PTR     DS    F    Address of Binder names list area.     00155700
&BPP.H_END            DS    0F   Beginning of 1st buffer entry.         00155800
                      ORG   &BPP.H_START                                00155900
&BPP.H_HEADER         DS    CL(&BPP.H_END-&BPP.H_START)                 00156000
&BPP.H_LENG           EQU   *-&BPP.H_HEADER Length of buffer header.    00156100
.*                                                                      00156200
.*------Declares base registers for buffer header and entry DSECTs---   00156300
         AIF   ('&BUFHHREG' EQ 'USERHEADREG').NOHREG                    00156400
&DSCTLB._BASE EQU &BUFHHREG     Base pointer for the mapping of         00156500
*                               the header of the Binder buffer.        00156600
*                               IEWBUFF FUNC=GETBUFF initializes        00156700
*                               this pointer when it obtains the        00156800
*                               storage for the buffer.                 00156900
.NOHREG  ANOP  ,                                                        00157000
         AIF   ('&BUFHEREG' EQ 'USERENTRYREG').NOEREG                   00157100
&BPP._BASE EQU &BUFHEREG        Base pointer for the mapping of         00157200
*                               one entry in the Binder buffer.         00157300
*                               IEWBUFF FUNC=GETBUF initializes         00157400
*                               this pointer to point to the first      00157500
*                               entry slot when it obtains the          00157600
*                               storage for the buffer.                 00157700
.NOEREG  ANOP  ,                                                        00157800
.*                                                                      00157900
.*------Declares buffer constants to initialize the buffer header----   00158000
&BUFHCSCT(1) &BUFHCSCT(2) ,     Resume CSECT (or RSECT)           @05C  00158100
                     DS    0F   Start on fullword boundary        @P9A  00158200
&BPP.I_INIT_VALUES   DS    CL(&BPP.H_LENG) Initial values for the       00158300
*                               buffer header.                          00158400
                     ORG   &BPP.I_INIT_VALUES                           00158500
&BPP.I_BUFFER_ID     DC    CL8'IEWB&RECTYPE ' Buffer eyecatcher.        00158600
&BPP.I_BUFFER_LENG   DC    A(&BUFHBUFL) Buffer length, including this   00158700
*                               header, the buffer entries, and         00158800
*                               the names list area.                    00158900
&BPP.I_VERSION        DC    AL1(&BUFHVER) Version of buffer.            00159000
                      DC    AL3(0) Reserved. Must be zero.              00159100
&BPP.I_ENTRY_LENG     DC    F'&BUFHENTL' Length of each buffer entry.   00159200
&BPP.I_ENTRY_COUNT    DC    F'&BUFHENTC' Number of slots for entries.   00159300
&BPP.I_NAMEPTR_ADJ    DC    F'0' Offset of name in names list area.     00159400
&BPP.I_STRING_PTR     DC    F'0' Address of names list area.            00159500
&BPP.I_END            DS    0F   End+1 of buffer header.                00159600
                      MEND                                              00159700
           PRINT  ON                                                    00159800
.*                                                                      00159900
.* NOTE: All variables defined from now on which contain the            00160000
.* following appendages have been modified per change @01 (see prolog): 00160100
.*                                                                      00160200
.*     &DSECTLBL                                                        00160300
.*     &PFX                                                             00160400
.*                                                                      00160500
.*-----Declares mapping of an ESD entry------------------------------   00160600
         AIF   ('&XTYPE' NE 'ESD').NOTESD                               00160700
&DSECTLBL  DSECT                                                        00160800
*                               Binder ESD buffer header.               00160900
*                               This DSECT is based on a register       00161000
*                               equated to the symbol named             00161100
*                               IEWBESD_BASE.                           00161200
          IEWBUFHD BP=&PFX,                                            X00161300
               BUFHENTL=&ENTRYLEN,                                     X00161400
               BUFHENTC=&ENTRYCOUNT,                                   X00161500
               BUFHBUFL=&BUFLEN,                                       X00161600
               BUFHVER=&XVERSION,                                      X00161700
               BUFHHREG=&XHEADREG,                                     X00161800
               BUFHEREG=&XENTRYREG,                                    X00161900
               BUFHCSCT=(&SYSECT,&SYSSTYP)                        @05C  00162000
&PFX.ENTRY DSECT                                                        00162100
*                               ESD buffer entry. Repeated the          00162200
*                               number of times specified by            00162300
*                               ESDH_ENTRY_COUNT.                       00162400
*                               This DSECT is based on a                00162500
*                               register equated to the                 00162600
*                               symbol ESD_BASE.                        00162700
         AIF   ('&XVERSION' NE '1').ESD2MAP                       @L7C  00162800
&PFX.WORD0            DS    F                                           00162900
                      ORG   &PFX.WORD0                                  00163000
&PFX.TYPE             DS    CL2  Type of ESD entry.                     00163100
&PFX.SCOPE            DS    CL1  Scope of the symbol (where it          00163200
*                                is known or searched for).             00163300
&PFX.TEXT             DS    CL1  Type of program code                   00163400
*                                described by symbol.                   00163500
&PFX.WORD1            DS    F                                           00163600
                      ORG   &PFX.WORD1                                  00163700
&PFX.ALIGN            DS    XL1  Alignment specification.               00163800
*                                Applies to all section                 00163900
*                                definitions and pseudo                 00164000
*                                registers.                             00164100
&PFX.STORAGE          DS    XL1  Storage specification of               00164200
*                                section definition.                    00164300
                      DS    XL2  Reserved. Must be zero.                00164400
&PFX.WORD2            DS    F                                           00164500
                      ORG   &PFX.WORD2                                  00164600
&PFX.USABILITY        DS    XL1  Reusability of section                 00164700
*                                definition.                            00164800
&PFX.RMODE            DS    XL1  Residence mode of section              00164900
*                                definition.                            00165000
&PFX.AMODE            DS    XL1  Addressing mode of section             00165100
*                                definition.                            00165200
                      DS    XL1  Reserved. Must be zero.                00165300
&PFX.WORD3            DS    F                                           00165400
                      ORG   &PFX.WORD3                                  00165500
&PFX.AUTOCALL         DS    XL1  Autocall specification of              00165600
*                                reference.                             00165700
&PFX.STATUS           DS    XL1  Status of reference.                   00165800
                      DS    XL2  Reserved. Must be zero.                00165900
&PFX.REGION           DS    H    Overlay region number of               00166000
*                                section.                               00166100
&PFX.SEGMENT          DS    H    Overlay segment number of              00166200
*                                section.                               00166300
&PFX.LENG             DS    F    Length of defined object.              00166400
*                                Applies to section definitions         00166500
*                                and pseudo registers.                  00166600
&PFX.SECTION_OFFSET   DS    A    Offset of the symbol in                00166700
*                                the section.                           00166800
&PFX.MODULE_OFFSET    DS    A    Offset of the symbol in                00166900
*                                the module.                            00167000
                      DS    H    Reserved. Must be zero.                00167100
&PFX.NAME_CHARS       DS    H    Length of the name.                    00167200
&PFX.NAME_PTR         DS    A    Points to the name of the              00167300
*                                symbol (blank name is valid for        00167400
*                                private code and common).              00167500
                      DS    H    Reserved. Must be zero.                00167600
&PFX.TARGET_CHARS     DS    H    Length of the target.                  00167700
&PFX.TARGET_PTR       DS    F    Points to the name of                  00167800
*                                the section in which the               00167900
*                                definition of referenced               00168000
*                                symbol resides. Applies to             00168100
*                                external references.                   00168200
                      DS    H    Reserved. Must be zero.                00168300
&PFX.RESIDENT_CHARS   DS    H    Length of the resident.                00168400
&PFX.RESIDENT_PTR     DS    F    Points to the name of the              00168500
*                                section in which this                  00168600
*                                specification of the                   00168700
*                                symbol resides. Applies                00168800
*                                to label definitions and               00168900
*                                pseudo registers.                      00169000
&PFX.END              DS    0F   End+1 of ESD entry.                    00169100
          AGO   .ESDDONE2                                         @L2A  00169200
.ESD2MAP AIF   ('&XVERSION' NE '2').ESD3MAP                       @L7C  00169300
&PFX.WORD0            DS    F                                           00169400
                      ORG   &PFX.WORD0                                  00169500
&PFX.TYPE             DS    CL2  Type of ESD entry.               @04A  00169600
&PFX.TYPE_QUAL        DS    CL2  ESD record type qualifier        @04A  00169700
&PFX.NAME_SPACE       DS    CL1  Name space of symbol             @04A  00169800
&PFX.SCOPE            DS    CL1  Scope of the symbol (where it    @04A  00169900
*                                is known or searched for).             00170000
&PFX.NAME             DS    CL6  Symbol represented by ESD record @04A  00170100
                      ORG   &PFX.NAME                                   00170200
&PFX.NAME_CHARS       DS    H    Length of the name.              @04A  00170300
&PFX.NAME_PTR         DS    A    Points to the name of the        @04A  00170400
*                                symbol (blank name is valid for        00170500
*                                private code and common).              00170600
                      DS    CL2  Reserved                         @LBC  00170700
&PFX.RES_SECTION      DS    CL6  Name of owning or containing     @04A  00170800
*                                section                                00170900
                      ORG   &PFX.RES_SECTION                            00171000
&PFX.RESIDENT_CHARS   DS    H    Length of the resident.          @04A  00171100
&PFX.RESIDENT_PTR     DS    A    Points to the name of the        @04A  00171200
*                                section in which this                  00171300
*                                specification of the                   00171400
*                                symbol resides. Applies                00171500
*                                to label definitions and               00171600
*                                pseudo registers.                      00171700
&PFX.LENG             DS    F    Length of Defined element        @04A  00171800
&PFX.ALIGN            DS    XL1  Alignment specification.         @04A  00171900
*                                Applies to all section                 00172000
*                                definitions and pseudo                 00172100
*                                registers.                             00172200
&PFX.USABILITY        DS    XL1  Reusability of section           @04A  00172300
*                                definition.                            00172400
&PFX.AMODE            DS    XL1  Addressing mode of section       @04A  00172500
*                                definition.                            00172600
&PFX.RMODE            DS    XL1  Residence mode of section        @04A  00172700
*                                definition.                            00172800
&PFX.RECORD_FMT       DS    H    Record format for class          @04A  00172900
&PFX.LOAD_FLAGS       DS    BL1  Load attributes                  @04A  00173000
&PFX.RO         EQU   X'80'      Read-Only                              00173100
&PFX.NL         EQU   X'40'      Do not load with module                00173200
&PFX.MOVE       EQU   X'20'      Moveable                               00173300
&PFX.SHR        EQU   X'10'      Shareable                              00173400
&PFX.BIND_FLAGS       DS    BL1  Bind attributes                  @04A  00173500
&PFX.GEND       EQU   X'80'      Binder-Generated                       00173600
&PFX.NO_CLASS   EQU   X'40'      No class data available                00173700
&PFX.VL         EQU   X'20'      Variable length records                00173800
&PFX.DESCR      EQU   X'10'      Descriptive data                       00173900
*                                                                 @LBD  00174000
&PFX.BIND_CNTL        DS    BL1  Type of program code described   @04A  00174100
*                                by symbol                              00174200
&PFX.REMOVABLE  EQU   X'80'      Can safely be deleted            @PLA  00174300
&PFX.RES1       EQU   X'40'      Reserved                         @PLC  00174400
&PFX.METH       EQU   X'30'      Binding Method                         00174500
*                               '00'B = Catenate                        00174600
*                               '01'B = Merge                           00174700
*                               '1-'B = Reserved                        00174800
&PFX.TEXT_TYPE  EQU   X'0F'      Text type                              00174900
*                               '0000'B = Unspecified                   00175000
*                               '0001'B = Instructions                  00175100
*                               '0010'B = Data                          00175200
*                               '0011'B = Translator defn               00175300
                      DS    BL1  Reserved                         @LBC  00175400
*                                                                4@LBD  00175500
&PFX.XATTR_CLS_CHARS  DS    H    Length of XATTR class name       @04A  00175600
&PFX.XATTR_CLS_PTR    DS    A    Extended attributes class        @04A  00175700
&PFX.XATTR_OFFSET     DS    F    Extended attributes              @04A  00175800
&PFX.SEGMENT          DS    H    Overlay segment number of        @04A  00175900
*                                section.                               00176000
&PFX.REGION           DS    H    Overlay region number of         @04A  00176100
*                                section.                               00176200
&PFX.SIGNATURE        DS    CL8  Interface signature              @04A  00176300
&PFX.AUTOCALL         DS    BL1  Autocall specification -         @04A  00176400
*                                applies to references                  00176500
&PFX.NEVERCALL  EQU   X'80'      NEVERCALL was specified                00176600
&PFX.MINOR      EQU   X'40'      Autocalled from LPA                    00176700
&PFX.STATUS           DS    BL1  Status                           @04A  00176800
&PFX.RESOLVED   EQU   X'80'      Symbol is resolved                     00176900
&PFX.AC_PROC    EQU   X'40'      Processed by AUTOCALL                  00177000
&PFX.INCLUDE    EQU   X'20'      INCLUDE attempted                      00177100
&PFX.NOT_FOUND  EQU   X'10'      Member not found                       00177200
&PFX.EXTERNAL   EQU   X'08'      Resolved outside module                00177300
&PFX.NOCALL     EQU   X'04'      NOCALL/NEVERCALL                       00177400
&PFX.NO_REFS    EQU   X'02'      No strong references                   00177500
&PFX.LIBRARY    EQU   X'01'      Special call library requested         00177600
&PFX.TARGET_CHARS     DS    H    Length of the target.            @04A  00177700
&PFX.TARGET_PTR       DS    A    Points to the name of            @04A  00177800
*                                the section in which the               00177900
*                                definition of referenced               00178000
*                                symbol resides. Applies to             00178100
*                                external references.                   00178200
                      DS    H    Reserved. Must be zero.          @04A  00178300
&PFX.RES_CLASS_CHARS  DS    H    Length of the class              @04A  00178400
&PFX.RES_CLASS_PTR    DS    A    Points to name of containing class     00178500
&PFX.ELEM_OFFSET      DS    F    Offset within the class element  @04A  00178600
&PFX.CLASS_OFFSET     DS    F    Offset within the class segment  @04A  00178700
&PFX.END              DS    0F   End+1 of Version2 ESD entry.     @04A  00178800
          AGO   .ESDDONE2                                         @04A  00178900
.*.................Map ESD Buffer formats 3 and higher.............@LBA 00179000
.ESD3MAP ANOP  ,                                                  @04C  00179100
&PFX.WORD0            DS    F                                           00179200
                      ORG   &PFX.WORD0                                  00179300
&PFX.TYPE             DS    CL2  Type of ESD entry.                     00179400
&PFX.TYPE_QUAL        DS    CL2  ESD record type qualifier              00179500
&PFX.NAME_SPACE       DS    CL1  Name space of symbol                   00179600
&PFX.SCOPE            DS    CL1  Scope of the symbol (where it          00179700
*                                is known or searched for).             00179800
&PFX.NAME             DS    CL6  Symbol represented by ESD record       00179900
                      ORG   &PFX.NAME                                   00180000
&PFX.NAME_CHARS       DS    H    Length of the name.                    00180100
&PFX.NAME_PTR         DS    A    Points to the name of the              00180200
*                                symbol (blank name is valid for        00180300
*                                private code and common).              00180400
&PFX.SYMBOL_ATTR      DS    BL1  FILL char                         @L3A 00180500
&PFX.STRONG     EQU   X'80'      ON=Strong reference or definition @L3A 00180600
&PFX.RENAMEABLE EQU   X'40'      This symbol is mapped,not renamed@P10A 00180700
&PFX.DESCRIPTOR EQU   X'20'      Symbol defines or references a    @L5A 00180800
*                                linkage block (descriptor)        @L5A 00180900
&PFX.MANGLED    EQU   X'10'      Name may be mangled               @PAA 00181000
.* NOTE: Following two flags actually introduced in 1F0, but have  @LBA 00181100
.*       been retrofitted to buffer format 3.                      @LBA 00181200
&PFX.XPLINK     EQU   X'08'      Uses XPLINK linkage conventions   @PAA 00181300
&PFX.ADA_EXISTS EQU   X'04'      Associated data exists            @PBA 00181400
&PFX.FILL_CHAR        DS    CL1  FILL char                         @L3C 00181500
&PFX.RES_SECTION      DS    CL6  Name of owning or containing           00181600
*                                section                                00181700
                      ORG   &PFX.RES_SECTION                            00181800
&PFX.RESIDENT_CHARS   DS    H    Length of the resident.                00181900
&PFX.RESIDENT_PTR     DS    A    Points to the name of the              00182000
*                                section in which this                  00182100
*                                specification of the                   00182200
*                                symbol resides. Applies                00182300
*                                to label definitions and               00182400
*                                pseudo registers.                      00182500
&PFX.LENG             DS    F    Length of Defined element              00182600
&PFX.ALIGN            DS    XL1  Alignment specification.               00182700
*                                Applies to all section                 00182800
*                                definitions and pseudo                 00182900
*                                registers.                             00183000
&PFX.USABILITY        DS    XL1  Reusability of section                 00183100
*                                definition.                            00183200
&PFX.AMODE            DS    XL1  Addressing mode of section             00183300
*                                definition.                            00183400
&PFX.RMODE            DS    XL1  Residence mode of section              00183500
*                                definition.                            00183600
&PFX.RECORD_FMT       DS    H    Record format for class                00183700
&PFX.LOAD_FLAGS       DS    BL1  Load attributes                        00183800
&PFX.RO         EQU   X'80'      Read-Only                              00183900
&PFX.NL         EQU   X'40'      Do not load with module                00184000
&PFX.MOVE       EQU   X'20'      Moveable                               00184100
&PFX.SHR        EQU   X'10'      Shareable                              00184200
&PFX.DEFER      EQU   X'08'      Deferred load                  @L3A    00184300
&PFX.BIND_FLAGS       DS    BL1  Bind attributes                        00184400
&PFX.GEND       EQU   X'80'      Binder-Generated                       00184500
&PFX.NO_CLASS   EQU   X'40'      No class data available                00184600
&PFX.VL         EQU   X'20'      Variable length records                00184700
&PFX.DESCR      EQU   X'10'      Descriptive data                       00184800
.* NOTE: Following flag was actually introduced in 1F0, but has   @LBA  00184900
.*       been retrofitted to buffer format 3.                     @LBA  00185000
&PFX.INIT        EQU   X'08'     Has part initializers                  00185100
.* NOTE: Following flag was originally (and incorrectly)          @LBA  00185200
.*       introduced at X'08'.  It has always been returned as     @LBA  00185300
.*       X'04' and its mapping was changed to that in 1F0.        @LBA  00185400
&PFX.FILL_EXISTS EQU   X'04'     FILL has been set               @L3A   00185500
.* NOTE: Following flag was actually provided, though not listed, @LBA  00185600
.*       in 1F0, and has now been retrofitted to buffer format 3. @LBA  00185700
&PFX.PADDING     EQU   X'02'     Class has padding at start    @PAC     00185800
.ESD3XST ANOP  ,                                                 @LBA   00185900
&PFX.BIND_CNTL        DS    BL1  Type of program code described         00186000
*                                by symbol                              00186100
&PFX.REMOVABLE  EQU   X'80'      Can safely be deleted            @PLA  00186200
&PFX.RES1       EQU   X'40'      Reserved                         @PLC  00186300
&PFX.METH       EQU   X'30'      Binding Method                         00186400
*                               '00'B = Catenate                        00186500
*                               '01'B = Merge                           00186600
*                               '1-'B = Reserved                        00186700
&PFX.TEXT_TYPE  EQU   X'0F'      Text type                              00186800
*                               '0000'B = Unspecified                   00186900
*                               '0001'B = Instructions                  00187000
*                               '0010'B = Data                          00187100
*                               '0011'B = Translator defn               00187200
         AIF   ('&XVERSION' GT '4').ESD5ATR                       @LBA  00187300
                      DS    XL1  Reserved                         @LBA  00187400
         AGO   .ESD3ATR                                           @LBA  00187500
.ESD5ATR ANOP  ,                                                  @LBA  00187600
&PFX.ATTRIBUTES       DS    BL1  LE attributes                    @L9C  00187700
&PFX.SYSTEM_LE       EQU X'80'   System_le                        @L9A  00187800
.*                                                               1@PTD  00187900
&PFX.DUP_ERROR       EQU X'0C'   error severity for dups          @PDC  00188000
*                                B'00' - I-level                  @PDC  00188100
*                                B'01' - W-level                  @LDA  00188200
*                                B'10' - E-level                  @LDA  00188300
*                                B'11' - S-level                  @LDA  00188400
&PFX.INIT_TEXT       EQU X'02'   Init text ^= fill char           @L9A  00188500
*                                the other bits are reserved      @L9A  00188600
.ESD3ATR ANOP  ,                                                  @LBA  00188700
&PFX.XATTR_CLS_CHARS  DS    H    Length of XATTR class name             00188800
&PFX.XATTR_CLS_PTR    DS    A    Extended attributes class              00188900
&PFX.XATTR_OFFSET     DS    F    Extended attributes                    00189000
&PFX.SEGMENT          DS    H    Overlay segment number of              00189100
*                                section.                               00189200
&PFX.REGION           DS    H    Overlay region number of               00189300
*                                section.                               00189400
&PFX.SIGNATURE        DS    CL8  Interface signature               @L2A 00189500
&PFX.AUTOCALL         DS    BL1  Autocall specification -               00189600
*                                applies to references                  00189700
&PFX.NEVERCALL  EQU   X'80'      NEVERCALL was specified           @L3A 00189800
&PFX.MINOR      EQU   X'40'      Autocalled from LPA               @L3A 00189900
&PFX.STATUS           DS    BL1  Status                                 00190000
&PFX.RESOLVED   EQU   X'80'      Symbol is resolved                @L3A 00190100
&PFX.AC_PROC    EQU   X'40'      Processed by AUTOCALL             @L3A 00190200
&PFX.INCLUDE    EQU   X'20'      INCLUDE attempted                 @L3A 00190300
&PFX.NOT_FOUND  EQU   X'10'      Member not found                  @L3A 00190400
&PFX.EXTERNAL   EQU   X'08'      Resolved outside module           @L3A 00190500
&PFX.NOCALL     EQU   X'04'      NOCALL/NEVERCALL                  @L3A 00190600
&PFX.NO_REFS    EQU   X'02'      No strong references              @L3A 00190700
&PFX.LIBRARY    EQU   X'01'      Special call library requested    @L3A 00190800
&PFX.TARGET_CHARS     DS    H    Length of the target.                  00190900
&PFX.TARGET_PTR       DS    A    Points to the name of                  00191000
*                                the section in which the               00191100
*                                definition of referenced               00191200
*                                symbol resides. Applies to             00191300
*                                external references.                   00191400
                      DS    H    Reserved. Must be zero.                00191500
&PFX.RES_CLASS_CHARS  DS    H    Length of the class                    00191600
&PFX.RES_CLASS_PTR    DS    A    Points to name of containing class     00191700
&PFX.ELEM_OFFSET      DS    F    Offset within the class element        00191800
&PFX.CLASS_OFFSET     DS    F    Offset within the class segment        00191900
         AIF   ('&XVERSION' GT '3').ESD4ADA                       @LBA  00192000
                      DS    3F   Reserved                         @LBA  00192100
         AGO   .ESD3ADA                                           @LBA  00192200
.ESD4ADA ANOP  ,                                                  @LBA  00192300
                      DS    H    Reserved. Must be zero.                00192400
&PFX.ADA_LL           DS    H    Associated Data Leng           @L5A    00192500
&PFX.ADA_PTR          DS    A    Points to Associated data      @L5A    00192600
                      DS    1F   Reserved. Must be zero.        @L5C    00192700
.ESD3ADA ANOP  ,                                                  @LBA  00192800
&PFX.PRIORITY         DS    F    Binding sequence                @L4A   00192900
&PFX.END              DS    0F   End+1 of Version2 ESD entry.           00193000
.ESDDONE2 ANOP  ,                                                @L2A   00193100
.*                                                               @05D   00193200
         AGO   .TOCSECT                                          @05C   00193300
.NOTESD  ANOP  ,                                                        00193400
.*                                                                      00193500
.*-----Declares mapping of an RLD entry------------------------------   00193600
         AIF   ('&XTYPE' NE 'RLD').NOTRLD                               00193700
&DSECTLBL  DSECT                                                        00193800
*                               Binder RLD buffer header.               00193900
*                               This DSECT is based on a register       00194000
*                               equated to the symbol named             00194100
*                               IEWBRLD_BASE.                           00194200
          IEWBUFHD BP=&PFX,                                            X00194300
               BUFHENTL=&ENTRYLEN,                                     X00194400
               BUFHENTC=&ENTRYCOUNT,                                   X00194500
               BUFHBUFL=&BUFLEN,                                       X00194600
               BUFHVER=&XVERSION,                                      X00194700
               BUFHHREG=&XHEADREG,                                     X00194800
               BUFHEREG=&XENTRYREG,                                    X00194900
               BUFHCSCT=(&SYSECT,&SYSSTYP)                        @05C  00195000
&PFX.ENTRY            DSECT                                             00195100
*                                RLD buffer entry. Repeated the         00195200
*                                number of times specified by           00195300
*                                RLDH_ENTRY_COUNT.                      00195400
*                                This DSECT is based on a               00195500
*                                register equated to the                00195600
*                                symbol RLD_BASE.                       00195700
          AIF   ('&XVERSION' NE '1').RLD2MAP                       @L7C 00195800
&PFX.WORD1            DS    F                                           00195900
                      ORG   &PFX.WORD1                                  00196000
&PFX.TYPE             DS    XL1  ADCON type.                            00196100
&PFX.STATUS           DS    XL1  ADCON relocation status.               00196200
&PFX.ADCON_BDY        DS    XL1  ADCON boundary specification.          00196300
&PFX.ADCON_DIRECTION  DS    XL1  ADCON relocation direction.            00196400
&PFX.WORD2            DS    F                                           00196500
                      ORG   &PFX.WORD2                                  00196600
&PFX.ADCON_LENG       DS    H    Length of the ADCON.                   00196700
                      DS    H    Reserved. Must be zero.                00196800
&PFX.SECTION_OFFSET   DS    A    Offset of the address                  00196900
*                                constant within the                    00197000
*                                resident section.                      00197100
&PFX.MODULE_OFFSET    DS    A    Offset of the address                  00197200
*                                constant within the module.            00197300
                      DS    H    Reserved. Must be zero.                00197400
&PFX.TARGET_CHARS     DS    H    Length of the target.                  00197500
&PFX.TARGET_PTR       DS    A    Points to the name of                  00197600
*                                the symbol to which the ADCON          00197700
*                                points.                                00197800
                      DS    H    Reserved. Must be zero.                00197900
&PFX.RESIDENT_CHARS   DS    H    Length of the resident.                00198000
&PFX.RESIDENT_PTR     DS    A    Points to the name of section          00198100
*                                in which the ADCON resides             00198200
*                                (ignored on input).                    00198300
&PFX.END              DS    0F   End+1 of the RLD entry.                00198400
         AGO   .RLDDONE2                                         @L2A   00198500
.RLD2MAP  AIF   ('&XVERSION' NE '2').RLD3MAP                       @L7C 00198600
&PFX.WORD1            DS    F                                           00198700
                      ORG   &PFX.WORD1                                  00198800
&PFX.TYPE             DS    XL1  ADCON type.                            00198900
&PFX.STATUS           DS    XL1  ADCON relocation status.               00199000
&PFX.RESIDENT_CHARS   DS    H    Length of the resident.                00199100
&PFX.RESIDENT_PTR     DS    A    Points to the name of section          00199200
*                                in which the ADCON resides             00199300
&PFX.ADCON_LENG       DS    H    Length of the ADCON.                   00199400
&PFX.CLASS_CHARS      DS    H    Length of the resident class name      00199500
&PFX.CLASS_PTR        DS    A    Points to the name of class            00199600
*                                in which the ADCON resides             00199700
&PFX.ELEM_OFFSET      DS    F    Offset of the address constant         00199800
*                                within the containing element          00199900
&PFX.CLASS_OFFSET     DS    F    Offset of the address                  00200000
*                                within class segment                   00200100
&PFX.ADCON_BDY        DS    XL1  ADCON boundary specification.          00200200
&PFX.BIND_ATTR        DS    BL1  ADCON Boundary status                  00200300
&PFX.DIRECTION  EQU   X'80'      Relocation sign                        00200400
*                                  '0' = Positive                       00200500
*                                  '1' = Negative                       00200600
&PFX.HOBSET     EQU   X'40'      Set high order bit from                00200700
*                                AMODE of target.                       00200800
&PFX.INT_EXT    EQU   X'20'      Internal/External                      00200900
*                                  '0' = Internal                       00201000
*                                  '1' = External                       00201100
&PFX.HOBCHG     EQU   X'10'      High order bit changed by Binder       00201200
&PFX.XATTR_CLASS_CHARS DS   H    Length of extended attr class name     00201300
&PFX.XATTR_CLASS_PTR  DS    A    Points to the extended attributes      00201400
*                                class name                             00201500
&PFX.XATTR_OFFSET     DS    F    Offset of the extended attributes      00201600
*                                in the element                         00201700
&PFX.NAME_SPACE       DS    XL1  Name space of reference                00201800
&PFX.SEGM_ID          DS    XL1  Segment ID of target class        @LBA 00201900
&PFX.TARGET_CHARS     DS    H    Length of the target name              00202000
&PFX.TARGET_PTR       DS    A    Points to the name of                  00202100
*                                the symbol to which the ADCON          00202200
*                                points.                                00202300
&PFX.END              DS    0F   End+1 of the RLD entry.                00202400
         AGO   .RLDDONE2                                         @L2A   00202500
.*.................Map RLD Buffer formats 3 and higher.............@LBA 00202600
.RLD3MAP ANOP  ,                                                 @L2A   00202700
&PFX.WORD1            DS    F                                           00202800
                      ORG   &PFX.WORD1                                  00202900
&PFX.TYPE             DS    XL1  ADCON type.                            00203000
&PFX.STATUS           DS    XL1  ADCON relocation status.               00203100
&PFX.RESIDENT_CHARS   DS    H    Length of the resident.                00203200
&PFX.RESIDENT_PTR     DS    A    Points to the name of section          00203300
*                                in which the ADCON resides             00203400
&PFX.ADCON_LENG       DS    H    Length of the ADCON.                   00203500
&PFX.RES_CLASS_CHARS  DS    H    Length of the resident class name      00203600
&PFX.RES_CLASS_PTR    DS    A    Points to the name of class            00203700
*                                in which the ADCON resides             00203800
&PFX.RES_OFFSET       DS    F    Offset of the address constant         00203900
*                                within the containing element          00204000
*                                or part:                               00204100
*                                If RES_PART_LL=0 then Element          00204200
*                                If RES_PART_LL>0 then Part             00204300
&PFX.CLASS_OFFSET     DS    F    Offset of the address                  00204400
*                                within class segment                   00204500
                      DS    XL1  Reserved                          @LBC 00204600
&PFX.BIND_ATTR        DS    BL1  ADCON Boundary status                  00204700
&PFX.DIRECTION  EQU   X'80'      Relocation sign                        00204800
*                                  '0' = Positive                       00204900
*                                  '1' = Negative                       00205000
&PFX.HOBSET     EQU   X'40'      Set high order bit from                00205100
*                                AMODE of target.                       00205200
&PFX.INT_EXT    EQU   X'20'      Internal/External                      00205300
*                                  '0' = Internal                       00205400
*                                  '1' = External                       00205500
&PFX.HOBCHG     EQU   X'10'      High order bit changed by Binder       00205600
&PFX.PARTRES    EQU   X'08'      Adcon loc in part                      00205700
*               EQU   X'04'      Reserved                          @LBA 00205800
.* NOTE: Following flag was actually introduced in 1F0, but has    @LBA 00205900
.*       been retrofitted to buffer format 3.                      @LBA 00206000
&PFX.XPLINK     EQU   X'02'      XPLINK used for target def or ref @LBA 00206100
&PFX.CONDSEQ    EQU   X'01'      Group of cond sequential adcons   @LKA 00206200
.*                                                                 @L7D 00206300
&PFX.XATTR_CLASS_CHARS DS   H    Length of extended attr class name     00206400
&PFX.XATTR_CLASS_PTR  DS    A    Points to the extended attributes      00206500
*                                class name                             00206600
&PFX.XATTR_OFFSET     DS    F    Offset of the extended attributes      00206700
*                                in the element                         00206800
&PFX.NAME_SPACE       DS    XL1  Name space of reference                00206900
                      DS    XL1  Reserved                          @LBC 00207000
&PFX.TARGET_CHARS     DS    H    Length of the target name              00207100
&PFX.TARGET_PTR       DS    A    Points to the name of                  00207200
*                                the symbol to which the ADCON          00207300
*                                points.                                00207400
&PFX.PAD1             DS    XL2  Reserved                               00207500
&PFX.RES_PART_LL      DS    H    Resident part length                   00207600
&PFX.RES_PART_PTR     DS    A    Resident part pointer                  00207700
&PFX.END              DS    0F   End+1 of the RLD entry.                00207800
.RLDDONE2 ANOP  ,                                                @L2A   00207900
.*                                                               @05D   00208000
         AGO   .TOCSECT                                          @05C   00208100
.NOTRLD  ANOP  ,                                                        00208200
.*-----Declares mapping of a TXT entry ------------------------------   00208300
         AIF   ('&XTYPE' NE 'TXT').NOTTXT                               00208400
&DSECTLBL  DSECT                                                        00208500
*                               Binder TXT buffer header.               00208600
*                               This DSECT is based on a register       00208700
*                               equated to the symbol named             00208800
*                               IEWBTXT_BASE.                           00208900
          IEWBUFHD BP=&PFX,                                            X00209000
               BUFHENTL=&ENTRYLEN,                                     X00209100
               BUFHENTC=&ENTRYCOUNT,                                   X00209200
               BUFHBUFL=&BUFLEN,                                       X00209300
               BUFHVER=&XVERSION,                                      X00209400
               BUFHHREG=&XHEADREG,                                     X00209500
               BUFHEREG=&XENTRYREG,                                    X00209600
               BUFHCSCT=(&SYSECT,&SYSSTYP)                        @05C  00209700
&PFX.ENTRY            DSECT                                             00209800
*                               TXT buffer entry. Repeated the          00209900
*                               number of times specified by            00210000
*                               TXTH_ENTRY_COUNT.                       00210100
*                               This DSECT is based on a                00210200
*                               register equated to the                 00210300
*                               symbol TXT_BASE.                        00210400
&PFX.BYTE             DS    &ENTRYCOUNT.CL1  Text bytes            @LBC 00210500
.*                                                               @05D   00210600
         AGO   .TOCSECT                                          @05C   00210700
.NOTTXT  ANOP  ,                                                        00210800
.*-----Declares mapping of a SYM entry ------------------------------   00210900
         AIF   ('&XTYPE' NE 'SYM').NOTSYM                               00211000
&DSECTLBL  DSECT                                                        00211100
*                               Binder SYM buffer header.               00211200
*                               This DSECT is based on a register       00211300
*                               equated to the symbol named             00211400
*                               IEWBSYM_BASE.                           00211500
          IEWBUFHD BP=&PFX,                                            X00211600
               BUFHENTL=&ENTRYLEN,                                     X00211700
               BUFHENTC=&ENTRYCOUNT,                                   X00211800
               BUFHBUFL=&BUFLEN,                                       X00211900
               BUFHVER=&XVERSION,                                      X00212000
               BUFHHREG=&XHEADREG,                                     X00212100
               BUFHEREG=&XENTRYREG,                                    X00212200
               BUFHCSCT=(&SYSECT,&SYSSTYP)                        @05C  00212300
&PFX.ENTRY            DSECT                                             00212400
*                                SYM buffer entry. Repeated the         00212500
*                                number of times specified by           00212600
*                                SYMH_ENTRY_COUNT.                      00212700
*                                This DSECT is based on a               00212800
*                                register equated to the                00212900
*                                symbol SYM_BASE.                       00213000
&PFX.CREATE_DATE      DS    CL7  Date the SYM data was created.         00213100
                      DS    XL1  Reserved. Must be zero.                00213200
&PFX.DATA_CHARS       DS    H    Length of data in SYM_DATA.            00213300
&PFX.DATA             DS    CL80 Symbol data.                           00213400
&PFX.RESIDENT_CHARS   DS    H    Length of the resident.                00213500
&PFX.RESIDENT_PTR     DS    AL4  Points to the name of the              00213600
*                                section containing this                00213700
*                                symbol (ignored on input).             00213800
&PFX.END              DS    0F   End+1 of SYM entry.                    00213900
.*                                                               @05D   00214000
         AGO   .TOCSECT                                          @05C   00214100
.NOTSYM  ANOP  ,                                                        00214200
.*-----Declares mapping of a IDRB entry -----------------------------   00214300
         AIF   ('&XTYPE' NE 'IDB').NOTIDB                               00214400
&DSECTLBL  DSECT                                                        00214500
*                               Binder IDB buffer header.               00214600
*                               This DSECT is based on a register       00214700
*                               equated to the symbol named             00214800
*                               IEWBIDB_BASE.                           00214900
          IEWBUFHD BP=&PFX,                                            X00215000
               BUFHENTL=&ENTRYLEN,                                     X00215100
               BUFHENTC=&ENTRYCOUNT,                                   X00215200
               BUFHBUFL=&BUFLEN,                                       X00215300
               BUFHVER=&XVERSION,                                      X00215400
               BUFHHREG=&XHEADREG,                                     X00215500
               BUFHEREG=&XENTRYREG,                                    X00215600
               BUFHCSCT=(&SYSECT,&SYSSTYP)                        @05C  00215700
&PFX.ENTRY            DSECT                                             00215800
*                                IDB buffer entry. Repeated the         00215900
*                                number of times specified by           00216000
*                                IDBH_ENTRY_COUNT.                      00216100
*                                This DSECT is based on a               00216200
*                                register equated to the                00216300
*                                symbol IDB_BASE.                       00216400
&PFX.BINDER_ID        DS    CL10 Binder identification characters.      00216500
&PFX.VERSION          DS    CL2  Version of the Binder.                 00216600
&PFX.RELEASE          DS    CL2  Release of the Binder.                 00216700
&PFX.DATE_BOUND       DS    CL7  Date of Binding (YYYYDDD).             00216800
&PFX.TIME_BOUND       DS    CL6  Time of Binding (HHMMSS).              00216900
                      DS    XL1  Reserved. Must be zero.                00217000
&PFX.MODULE_SIZE      DS    F    Length of program text data.           00217100
&PFX.CALLERID_CHARS   DS    H    Number of significant characters       00217200
*                                in IDB_CALLERID (ignored on input).    00217300
&PFX.CALLERID         DS    CL80 Caller identification (ignored         00217400
*                                on input).                             00217500
&PFX.PAD1             DS    H    2 byte pad for boundary alignment.     00217600
&PFX.END              DS    0F   End+1 of IDB entry.                    00217700
.*                                                               @05D   00217800
         AGO   .TOCSECT                                          @05C   00217900
.NOTIDB  ANOP  ,                                                        00218000
.*-----Declares mapping of a IDRL entry -----------------------------   00218100
         AIF   ('&XTYPE' NE 'IDL').NOTIDL                               00218200
&DSECTLBL  DSECT                                                        00218300
*                               Binder IDL buffer header.               00218400
*                               This DSECT is based on a register       00218500
*                               equated to the symbol named             00218600
*                               IEWBIDL_BASE.                           00218700
          IEWBUFHD BP=&PFX,                                            X00218800
               BUFHENTL=&ENTRYLEN,                                     X00218900
               BUFHENTC=&ENTRYCOUNT,                                   X00219000
               BUFHBUFL=&BUFLEN,                                       X00219100
               BUFHVER=&XVERSION,                                      X00219200
               BUFHHREG=&XHEADREG,                                     X00219300
               BUFHEREG=&XENTRYREG,                                    X00219400
               BUFHCSCT=(&SYSECT,&SYSSTYP)                        @05C  00219500
         AIF   ('&XVERSION' GT '6').IDL7                           @LHA 00219600
&PFX.ENTRY            DSECT                                             00219700
*                                IDL buffer entry. Repeated the         00219800
*                                number of times specified by           00219900
*                                IDLH_ENTRY_COUNT.                      00220000
*                                This DSECT is based on a               00220100
*                                register equated to the                00220200
*                                symbol IDL_BASE.                       00220300
&PFX.PID_ID           DS    CL10 Processor identification (PID          00220400
*                                order number).                         00220500
&PFX.VERSION          DS    CL2  Processor version  number.             00220600
&PFX.MOD_LEVEL        DS    CL2  Processor modification level.          00220700
&PFX.DATE_PROCESSED   DS    CL7  Date of compilation or assembly        00220800
*                                (YYYYDDD).                             00220900
                      DS    XL1  Reserved. Must be zero.                00221000
&PFX.RESIDENT_CHARS   DS    H    Length of the resident.                00221100
&PFX.RESIDENT_PTR     DS    AL4  Points to the name of the section      00221200
*                                to which this identification data      00221300
*                                applies.                               00221400
&PFX.END              DS    0F   End+1 of IDL entry.                    00221500
.*                                                               @05D   00221600
         AGO   .TOCSECT                                            @LHA 00221700
.IDL7    ANOP  ,                                                   @LHA 00221800
&PFX.ENTRY            DSECT                                             00221900
*                                IDL buffer entry. Repeated the         00222000
*                                number of times specified by           00222100
*                                IDLH_ENTRY_COUNT.                      00222200
*                                This DSECT is based on a               00222300
*                                register equated to the                00222400
*                                symbol IDL_BASE.                  @LHA 00222500
&PFX.PID_ID           DS    CL10 Processor identification (PID          00222600
*                                order number).                    @LHA 00222700
&PFX.VERSION          DS    CL2  Processor version  number.        @LHA 00222800
&PFX.MOD_LEVEL        DS    CL2  Processor modification level.     @LHA 00222900
&PFX.DATE_PROCESSED   DS    CL7  Date of compilation or assembly        00223000
*                                (YYYYDDD).                        @LHA 00223100
&PFX.TIME_PROCESSED   DS    CL9  Time of compilation or assembly        00223200
*                                (HHMMSSTTT)                       @LHA 00223300
&PFX.RESIDENT_CHARS   DS    H    Length of the resident.           @LHA 00223400
&PFX.RESIDENT_PTR     DS    AL4  Points to the name of the section      00223500
*                                to which this identification data      00223600
*                                applies.                          @LHA 00223700
&PFX.END              DS    0F   End+1 of IDL entry.                    00223800
.*                                                               @05D   00223900
         AGO   .TOCSECT                                          @05C   00224000
.NOTIDL  ANOP  ,                                                        00224100
.*-----Declares mapping of a IDRU entry -----------------------------   00224200
         AIF   ('&XTYPE' NE 'IDU').NOTIDU                               00224300
&DSECTLBL  DSECT                                                        00224400
*                               Binder IDU buffer header.               00224500
*                               This DSECT is based on a register       00224600
*                               equated to the symbol named             00224700
*                               IEWBIDU_BASE.                           00224800
          IEWBUFHD BP=&PFX,                                            X00224900
               BUFHENTL=&ENTRYLEN,                                     X00225000
               BUFHENTC=&ENTRYCOUNT,                                   X00225100
               BUFHBUFL=&BUFLEN,                                       X00225200
               BUFHVER=&XVERSION,                                      X00225300
               BUFHHREG=&XHEADREG,                                     X00225400
               BUFHEREG=&XENTRYREG,                                    X00225500
               BUFHCSCT=(&SYSECT,&SYSSTYP)                        @05C  00225600
&PFX.ENTRY            DSECT                                             00225700
*                                IDU buffer entry. Repeated the         00225800
*                                number of times specified by           00225900
*                                IDUH_ENTRY_COUNT.                      00226000
*                                This DSECT is based on a               00226100
*                                register equated to the                00226200
*                                symbol IDU_BASE.                       00226300
&PFX.CREATE_DATE      DS    CL7  Date the IDRU data was created.        00226400
                      DS    XL1  Reserved. Must be zero.                00226500
&PFX.DATA_CHARS       DS    H    Number of significant characters       00226600
*                                in IDU_DATA.                           00226700
&PFX.DATA             DS    CL80 User identification data.              00226800
&PFX.RESIDENT_CHARS   DS    H    Length of resident.                    00226900
&PFX.RESIDENT_PTR     DS    AL4  Points to the name of the section      00227000
*                                to which this identification data      00227100
*                                applies.                               00227200
&PFX.END              DS    0F   End+1 of IDU entry.                    00227300
.*                                                               @05D   00227400
         AGO   .TOCSECT                                          @05C   00227500
.NOTIDU  ANOP  ,                                                        00227600
.*-----Declares mapping of a IDRZ entry -----------------------------   00227700
         AIF   ('&XTYPE' NE 'IDZ').NOTIDZ                               00227800
&DSECTLBL  DSECT                                                        00227900
*                               Binder IDZ buffer header.               00228000
*                               This DSECT is based on a register       00228100
*                               equated to the symbol named             00228200
*                               IEWBIDZ_BASE.                           00228300
          IEWBUFHD BP=&PFX,                                            X00228400
               BUFHENTL=&ENTRYLEN,                                     X00228500
               BUFHENTC=&ENTRYCOUNT,                                   X00228600
               BUFHBUFL=&BUFLEN,                                       X00228700
               BUFHVER=&XVERSION,                                      X00228800
               BUFHHREG=&XHEADREG,                                     X00228900
               BUFHEREG=&XENTRYREG,                                    X00229000
               BUFHCSCT=(&SYSECT,&SYSSTYP)                        @05C  00229100
&PFX.ENTRY            DSECT                                             00229200
*                                IDZ buffer entry. Repeated the         00229300
*                                number of times specified by           00229400
*                                IDZH_ENTRY_COUNT.                      00229500
*                                This DSECT is based on a               00229600
*                                register equated to the                00229700
*                                symbol IDZ_BASE.                       00229800
&PFX.DATE             DS    CL7  Date the zap was applied (YYYYDDD).    00229900
&PFX.ZAP_DATA         DS    CL8  PTF number or other ZAP                00230000
*                                identification data.                   00230100
                      DS    XL3  Reserved. Must be zero.                00230200
&PFX.RESIDENT_CHARS   DS    H    Length of resident.                    00230300
&PFX.RESIDENT_PTR     DS    AL4  Points to the name of the section      00230400
*                                to which this ZAP data applies         00230500
*                                (ignored on input).                    00230600
&PFX.END              DS    0F   End+1 of IDZ entry.                    00230700
.*                                                               @05D   00230800
         AGO   .TOCSECT                                          @05C   00230900
.NOTIDZ  ANOP  ,                                                        00231000
.*-----Declares mapping of a NAME entry -----------------------------   00231100
         AIF   ('&XTYPE' NE 'BNL').NOTBNL                               00231200
.*                                                               2@L6D  00231300
&DSECTLBL  DSECT                                                        00231400
*                               Binder BNL buffer header.               00231500
*                               This DSECT is based on a register       00231600
*                               equated to the symbol named             00231700
*                               IEWBBNL_BASE.                           00231800
          IEWBUFHD BP=&PFX,                                            X00231900
               BUFHENTL=&ENTRYLEN,                                     X00232000
               BUFHENTC=&ENTRYCOUNT,                                   X00232100
               BUFHBUFL=&BUFLEN,                                       X00232200
               BUFHVER=&XVERSION,                                      X00232300
               BUFHHREG=&XHEADREG,                                     X00232400
               BUFHEREG=&XENTRYREG,                                    X00232500
               BUFHCSCT=(&SYSECT,&SYSSTYP)                        @05C  00232600
&PFX.ENTRY            DSECT                                             00232700
*                                Binder name list (BNL)                 00232800
*                                buffer entry. Repeated the             00232900
*                                number of times specified              00233000
*                                by BNLH_ENTRY_COUNT.                   00233100
*                                This DSECT is based on a               00233200
*                                register equated to the                00233300
*                                symbol BNL_BASE.                       00233400
         AIF   ('&XVERSION' NE '1').BNL2                          @L6A  00233500
&PFX.NAME_CHARS       DS    H    Number of significant characters in    00233600
*                                BNL_SECTION_V (ignored on input)  @P6C 00233700
&PFX.PAD1             DS    H    2 byte pad for boundary alignment @P6C 00233800
&PFX.NAME_PTR         DS    AL4  Pointer to class or section name  @P6C 00233900
&PFX.END              DS    0F   End+1 of the BNL entry.                00234000
.*                                                               @05D   00234100
         AGO   .TOCSECT                                          @05C   00234200
.BNL2    AIF   ('&XVERSION' GT '3').BNL4                           @L2A 00234300
.*                                                               22@L6D 00234400
&PFX.CLS_LENGTH       DS    F    Class length (for class names)    @L2A 00234500
*                                                                       00234600
&PFX.BIND_FLAGS       DS    XL1  Flag bits                         @L2A 00234700
&PFX.BF_GEND          EQU   X'80'  Generated by Binder             @L6A 00234800
&PFX.BF_EMPTY         EQU   X'40'  No data present                 @L6A 00234900
&PFX.BF_VL            EQU   X'20'  Varying length records          @L6A 00235000
&PFX.BF_DESCR         EQU   X'10'  Descriptive data (non-text)     @L6A 00235100
&PFX.BF_INIT          EQU   X'08'  Class has initial data          @L6A 00235200
&PFX.BF_FILL          EQU   X'04'  Fill character specified        @L6A 00235300
&PFX.BF_ERROR         EQU   X'01'  Class validation error          @L6A 00235400
*                                                                       00235500
&PFX.PAD1             DS    XL1  1 byte pad for boundary alignment @L2C 00235600
&PFX.NAME_CHARS       DS    H    Number of significant characters in    00235700
*                                BNL_SECTION_V (ignored on input)  @P6C 00235800
&PFX.NAME_PTR         DS    AL4  Pointer to class or section name  @P6C 00235900
&PFX.ELEM_COUNT       DS    F    Number elements in class or sect  @L2A 00236000
&PFX.END              DS    0F   End+1 of the BNL entry.                00236100
.*                                                               @05D   00236200
         AGO   .TOCSECT                                          @05C   00236300
.BNL4    ANOP  ,                                                   @L6A 00236400
         AIF   ('&XVERSION' LT '6').BNL5                           @LFA 00236500
&PFX.SECT_CU          DS    0F   Compile unit number               @LFA 00236600
.BNL5    ANOP  ,                                                   @LFA 00236700
&PFX.CLS_LENGTH       DS    F    Class length (for class names)    @L6A 00236800
*                                                                       00236900
&PFX.BIND_FLAGS       DS    XL1  Flag bits                         @L6A 00237000
&PFX.BF_GEND          EQU   X'80'  Generated by Binder             @L6A 00237100
&PFX.BF_EMPTY         EQU   X'40'  No data present                 @L6A 00237200
&PFX.BF_VL            EQU   X'20'  Varying length records          @L6A 00237300
&PFX.BF_DESCR         EQU   X'10'  Descriptive data (non-text)     @L6A 00237400
&PFX.BF_INIT          EQU   X'08'  Class has initial data          @L6A 00237500
&PFX.BF_FILL          EQU   X'04'  Fill character specified        @L6A 00237600
&PFX.BF_ERROR         EQU   X'01'  Class validation error          @L6A 00237700
*                                                                       00237800
&PFX.LOAD_FLAGS       DS    XL1  Flag bits                         @L6A 00237900
&PFX.LF_RO            EQU   X'80'  Read Only                       @L6A 00238000
&PFX.LF_DEFER         EQU   X'20'  Deferred load                   @PRC 00238100
&PFX.LF_NOLOAD        EQU   X'40'  No Load                         @L6A 00238200
&PFX.LF_SHARE         EQU   X'10'  Sharable                        @L6A 00238300
&PFX.LF_MOVE          EQU   X'08'  Moveable (AdCon free)           @L6A 00238400
         AIF   ('&XVERSION' LT '7').BNL6                           @LJA 00238500
&PFX.METH             EQU   X'03'      Binding Method              @LJA 00238600
*                               '00'B = Catenate                   @LJA 00238700
*                               '01'B = Merge                      @LJA 00238800
.BNL6    ANOP  ,                                                   @LJA 00238900
*                                                                  @LJA 00239000
&PFX.NAME_CHARS       DS    H    Number of significant characters  @L6A 00239100
*                                in name (ignored on input)        @L6A 00239200
&PFX.NAME_PTR         DS    AL4  Pointer to class or section name  @L6A 00239300
&PFX.ELEM_COUNT       DS    F    Number elements in class or sect  @L6A 00239400
&PFX.SEGM_ID          DS    H    Segment ID                        @L6A 00239500
         AIF   ('&XVERSION' LT '7').BNL6A                          @LJA 00239600
&PFX.ATTR             DS    XL1                                    @LJA 00239700
&PFX.ALIGN            EQU   X'F8'                                  @LJA 00239800
&PFX.RMODE            EQU   X'07'                                  @LJA 00239900
&PFX.NAMESPACE        DS    XL1                                    @LJA 00240000
         AGO   .BNL6B                                              @LJA 00240100
.BNL6A   ANOP  ,                                                   @LJA 00240200
                      DS    H    *RESERVED*                        @LCC 00240300
.BNL6B   ANOP  ,                                                   @LJA 00240400
&PFX.SEGM_OFF         DS    F    Class offset from start of segment@L6A 00240500
&PFX.END              DS    0F   End+1 of the BNL entry.           @L6A 00240600
.*                                                               @05D6A 00240700
         AGO   .TOCSECT                                          @05C6A 00240800
.NOTBNL  ANOP  ,                                                        00240900
.*-----Declares mapping of a MAP  entry -----------------------------   00241000
         AIF   ('&XTYPE' NE 'MAP').NOTMAP                          @L2A 00241100
&DSECTLBL  DSECT                                                   @L2A 00241200
*                               Binder MAP buffer header.          @L2A 00241300
*                               This DSECT is based on a register  @L2A 00241400
*                               equated to the symbol named        @L2A 00241500
*                               IEWBMAP_BASE.                      @L2A 00241600
          IEWBUFHD BP=&PFX,                                            X00241700
               BUFHENTL=&ENTRYLEN,                                     X00241800
               BUFHENTC=&ENTRYCOUNT,                                   X00241900
               BUFHBUFL=&BUFLEN,                                       X00242000
               BUFHVER=&XVERSION,                                      X00242100
               BUFHHREG=&XHEADREG,                                     X00242200
               BUFHEREG=&XENTRYREG,                                    X00242300
               BUFHCSCT=(&SYSECT,&SYSSTYP)                        @05C  00242400
&PFX.ENTRY            DSECT                                             00242500
*                                Binder map (MAP)                       00242600
*                                buffer entry. Repeated the             00242700
*                                number of times specified              00242800
*                                by MAPH_ENTRY_COUNT.                   00242900
*                                This DSECT is based on a               00243000
*                                register equated to the                00243100
*                                symbol MAP_BASE.                       00243200
&PFX.NEXT             DS    F    Offset of sibling entry                00243300
&PFX.TYPE             DS    C    Type of map entry                      00243400
&PFX.FLAGS            DS    XL1  Flags                                  00243500
&PFX.SINGLE     EQU   X'80'      Single extent assumed                  00243600
&PFX.LOADABLE   EQU   X'40'      Loadable CLASS (for 'C' type)          00243700
&PFX.DESCR      EQU   X'20'      Text CLASS (for 'C' type)              00243800
&PFX.NAME_CHARS       DS    H    Number of significant characters in    00243900
*                                name of mapped element            @L2A 00244000
&PFX.NAME_PTR         DS    A    Address of name of mapped element @L2A 00244100
                      ORG   &PFX.NAME_PTR                               00244200
&PFX.REGION           DS    H    Overlay region (type 'O')         @PQA 00244300
&PFX.SEGMENT          DS    H    Overlay segment (type 'O')        @PQA 00244400
&PFX.OFFSET           DS    F    Class or section offset           @L2A 00244500
&PFX.QUANTITY         DS    F    Length/Qty                             00244600
*                                 -- Length of all CLASSes (type 'M')   00244700
*                                 -- Qty of records (type 'C')          00244800
&PFX.NAME_SPACE       DS    XL1  Name space for name                    00244900
                      DS    XL1  Reserved                               00245000
&PFX.RECORD_FMT       DS    H                                           00245100
                      DS    XL8  Reserved                               00245200
&PFX.END              DS    0F   End+1 of the MAP entry.           @PGD 00245300
.*                                                               @05D   00245400
         AGO   .TOCSECT                                          @05C   00245500
.NOTMAP  ANOP  ,                                                   @L2A 00245600
.*-----Declares mapping of a PMAR  entry  ---------------------------   00245700
         AIF   ('&XTYPE' NE 'PMR').NOTPMR                          @LAA 00245800
&DSECTLBL  DSECT                                                        00245900
*                               Binder PMR buffer header.               00246000
*                               This DSECT is based on a register       00246100
*                               equated to the symbol named             00246200
*                               IEWBPMR_BASE.                           00246300
          IEWBUFHD BP=&PFX,                                            X00246400
               BUFHENTL=&ENTRYLEN,                                     X00246500
               BUFHENTC=&ENTRYCOUNT,                                   X00246600
               BUFHBUFL=&BUFLEN,                                       X00246700
               BUFHVER=&XVERSION,                                      X00246800
               BUFHHREG=&XHEADREG,                                     X00246900
               BUFHEREG=&XENTRYREG,                                    X00247000
               BUFHCSCT=(&SYSECT,&SYSSTYP)                      @PHC    00247100
&PFX.ENTRY            DSECT                                             00247200
*                                PMR buffer entry. Repeated the         00247300
*                                number of times specified by           00247400
*                                PMRH_ENTRY_COUNT.                      00247500
*                                This DSECT is based on a               00247600
*                                register equated to the                00247700
*                                symbol PMR_BASE.                       00247800
&PFX.PMAR_BUFFER      DS   &ENTRYCOUNT.CL1   PMAR buffer           @LBA 00247900
&PFX.END              DS    0F   End+1 of the PMR entry.                00248000
.*                                                                 @PHD 00248100
         AGO   .TOCSECT                                            @PHC 00248200
.NOTPMR  ANOP  ,                                                   @PCC 00248300
.*-----Declares mapping of a Compiler Unit --------------------------   00248400
         AIF   ('&XTYPE' NE 'CUI').NOTCUI                          @LFA 00248500
&DSECTLBL  DSECT                                                        00248600
*                               Binder CUI buffer header.               00248700
*                               This DSECT is based on a register       00248800
*                               equated to the symbol named             00248900
*                               IEWBCUI_BASE.                           00249000
          IEWBUFHD BP=&PFX,                                            X00249100
               BUFHENTL=&ENTRYLEN,                                     X00249200
               BUFHENTC=&ENTRYCOUNT,                                   X00249300
               BUFHBUFL=&BUFLEN,                                       X00249400
               BUFHVER=&XVERSION,                                      X00249500
               BUFHHREG=&XHEADREG,                                     X00249600
               BUFHEREG=&XENTRYREG,                                    X00249700
               BUFHCSCT=(&SYSECT,&SYSSTYP)                    @PHC      00249800
&PFX.ENTRY            DSECT                                             00249900
*                                CUI buffer entry. Repeated the         00250000
*                                number of times specified by           00250100
*                                CUIH_ENTRY_COUNT.                      00250200
*                                This DSECT is based on a               00250300
*                                register equated to the                00250400
*                                symbol CUI_BASE.                       00250500
&PFX.CU               DS    F    Compile unit number.                   00250600
&PFX.SOURCE_CU        DS    F    Source of compile unit.                00250700
                      DS    H    Reserved, must be zero.                00250800
&PFX.MEMBER_LEN       DS    H    Length of member name.                 00250900
&PFX.MEMBER_PTR       DS    A    Address of member name.                00251000
                      DS    H    Reserved, must be zero.                00251100
&PFX.PATH_LEN         DS    H    Length of path name.                   00251200
&PFX.PATH_PTR         DS    A    Address of path name.                  00251300
                      DS    H    Reserved, must be zero.                00251400
&PFX.DSNAME_LEN       DS    H    Length of dataset name.                00251500
&PFX.DSNAME_PTR       DS    A    Address of dateset name.               00251600
&PFX.DDNAME           DS    CL8  DDname.                                00251700
                      DS    H    Reserved, must be zero.                00251800
&PFX.CONCAT           DS    FL1  DD concatenatoin number.               00251900
&PFX.TYPE             DS    XL1  Source type.                           00252000
                      DS    F    Reserved, must be zero.                00252100
                      DS    H    Reserved, must be zero.                00252200
&PFX.C_MEMBER_LEN     DS    H    Original length of member name.        00252300
&PFX.C_MEMBER_PTR     DS    A    Original address of member name.       00252400
                      DS    H    Reserved, must be zero.                00252500
&PFX.C_PATH_LEN       DS    H    Original length of path name.          00252600
&PFX.C_PATH_PTR       DS    A    Original address of path name.         00252700
                      DS    H    Reserved, must be zero.                00252800
&PFX.C_DSNAME_LEN     DS    H    Original length of dataset name.       00252900
&PFX.C_DSNAME_PTR     DS    A    Original address of dateset name.      00253000
                      DS    CL3  Reserved, must be zero.                00253100
&PFX.C_TYPE           DS    XL1  Original source type.                  00253200
&PFX.C_SEQ            DS    F    Original sequence number.              00253300
&PFX.END              DS    0F   End+1 of the CUI entry.                00253400
.*                                                              @PHD    00253500
         AGO   .TOCSECT                                         @PHC    00253600
.NOTCUI  ANOP  ,                                                @PHC    00253700
.*-----Declares mapping of a LIB   entry  ---------------------------   00253800
         AIF   ('&XTYPE' NE 'LIB').NOTLIB                          @LFA 00253900
&DSECTLBL  DSECT                                                        00254000
*                               Binder LIB buffer header.               00254100
*                               This DSECT is based on a register       00254200
*                               equated to the symbol named             00254300
*                               IEWBLIB_BASE.                           00254400
          IEWBUFHD BP=&PFX,                                            X00254500
               BUFHENTL=&ENTRYLEN,                                     X00254600
               BUFHENTC=&ENTRYCOUNT,                                   X00254700
               BUFHBUFL=&BUFLEN,                                       X00254800
               BUFHVER=&XVERSION,                                      X00254900
               BUFHHREG=&XHEADREG,                                     X00255000
               BUFHEREG=&XENTRYREG,                                    X00255100
               BUFHCSCT=(&SYSECT,&SYSSTYP)                     @PHC     00255200
&PFX.ENTRY            DSECT                                             00255300
*                                LIB buffer entry. Repeated the         00255400
*                                number of times specified by           00255500
*                                LIBH_ENTRY_COUNT.                      00255600
*                                This DSECT is based on a               00255700
*                                register equated to the                00255800
*                                symbol LIB_BASE.                       00255900
&PFX.LIB_BUFFER       DS   &ENTRYCOUNT.CL1   LIB  buffer           @LFA 00256000
&PFX.END              DS    0F   End+1 of the LIB entry.                00256100
.*                                                                 @PHD 00256200
         AGO   .TOCSECT                                            @PHC 00256300
.NOTLIB  ANOP  ,                                                   @LFA 00256400
.*-----Declares mapping of an Extent List ---------------------------   00256500
         AIF   ('&XTYPE' NE 'XTL').NOTXTL                          @L2A 00256600
&DSECTLBL  DSECT                                                        00256700
*                               Binder XTL buffer header.               00256800
*                               This DSECT is based on a register       00256900
*                               equated to the symbol named             00257000
*                               IEWBXTL_BASE.                           00257100
          IEWBUFHD BP=&PFX,                                            X00257200
               BUFHENTL=&ENTRYLEN,                                     X00257300
               BUFHENTC=&ENTRYCOUNT,                                   X00257400
               BUFHBUFL=&BUFLEN,                                       X00257500
               BUFHVER=&XVERSION,                                      X00257600
               BUFHHREG=&XHEADREG,                                     X00257700
               BUFHEREG=&XENTRYREG,                                    X00257800
               BUFHCSCT=(&SYSECT,&SYSSTYP)                        @05C  00257900
&PFX.ENTRY            DSECT                                             00258000
*                                XTL buffer entry. Repeated the         00258100
*                                number of times specified by           00258200
*                                XTLH_ENTRY_COUNT.                      00258300
*                                This DSECT is based on a               00258400
*                                register equated to the                00258500
*                                symbol XTL_BASE.                       00258600
&PFX.LOAD_POINT       DS    F    Load point address for the extent.     00258700
&PFX.EXTENT_LENG      DS    F    Length of the extent.                  00258800
&PFX.END              DS    0F   End+1 of the XTL entry.                00258900
.*                                                              @09D    00259000
         AGO   .TOCSECT                                         @09A    00259100
.NOTXTL  ANOP                                                   @L3A    00259200
.*-----Declares mapping of a Part Initializer -----------------------   00259300
         AIF   ('&XTYPE' NE 'PTI').NOTPTI                       @L3A    00259400
&DSECTLBL  DSECT                                                        00259500
*                               Binder Part Init (PTI) buffer header.   00259600
*                               This DSECT is based on a register       00259700
*                               equated to the symbol named             00259800
*                               IEWBPTI_BASE.                   @L3A    00259900
          IEWBUFHD BP=&PFX,                                            X00260000
               BUFHENTL=&ENTRYLEN,                                     X00260100
               BUFHENTC=&ENTRYCOUNT,                                   X00260200
               BUFHBUFL=&BUFLEN,                                       X00260300
               BUFHVER=&XVERSION,                                      X00260400
               BUFHHREG=&XHEADREG,                                     X00260500
               BUFHEREG=&XENTRYREG,                                    X00260600
               BUFHCSCT=(&SYSECT,&SYSSTYP)                        @05C  00260700
&PFX.ENTRY DSECT                                                        00260800
*                               PTI buffer entry. Repeated the  16@L3A  00260900
*                               number of times specified by            00261000
*                               PTIH_ENTRY_COUNT.                       00261100
*                               This DSECT is based on a                00261200
*                               register equated to the                 00261300
*                               symbol PTI_BASE.                        00261400
&PFX.DATA_LENG        DS    H    Record length                          00261500
&PFX.DATA_REP         DS    H    Repetition Factor                      00261600
                      DS    H    Reserved                               00261700
&PFX.DATA_CLASS_LL    DS    H    Class name length                      00261800
&PFX.DATA_CLASS_PTR   DS    F    Class name ptr                         00261900
&PFX.DATA_NAME_LL     DS    H    Name length                            00262000
&PFX.DATA_NAME_PTR    DS    FL4  Name pointer                      @07C 00262100
&PFX.DATA_OFFSET      DS    FL4  Data placement within part @07C        00262200
&PFX.DATA_BYTE        DS   &ENTRYCOUNT.CL1   Initialization data   @LBA 00262300
&PFX.END_ENTRY        DS    0F   End+1 of the PTI entry.           @08C 00262400
   MNOTE *,' &PFX.END intentionally removed. @08A'                      00262500
   MNOTE *,' Addition of &PFX.DATA_BYTE would change its offset. @08A'  00262600
.*                                                               @05D   00262700
         AGO   .TOCSECT                                          @05C   00262800
.NOTPTI  ANOP  ,                                                 @09C   00262900
.*                                                               @09A   00263000
.*** Insert additional XTYPE support here                        @09A   00263100
.*                                                               @09A   00263200
.*-----Unsupported XTYPE value slipped through-------------------@09A   00263300
         MNOTE 8,'XTYPE=&XTYPE MACRO LOGIC ERROR. CONTACT IBM.'  @09A   00263400
         MEXIT                                                   @09A   00263500
.*-----Common exit for MAPBUF types------------------------------@09A   00263600
.TOCSECT ANOP  ,                                                 @09M   00263700
&SYSECT &SYSSTYP ,              Resume CSECT (or RSECT)          @09M   00263800
         AGO   .ALLDONE                                          @09A   00263900
.*                                                               @09A   00264000
.NOTMAPBF ANOP ,                                                 @09A   00264100
         AIF   ('&XFUNC' NE 'GETBUF').NOTGET                     @09A   00264200
.********************************************************************** 00264300
.*                                                                    * 00264400
.*         FUNC = GETBUF                                              * 00264500
.*                                                                    * 00264600
.********************************************************************** 00264700
.GENGET  ANOP  ,                                                        00264800
.*  ---- Verify presence of PREFIX  ------------------------   19@01A   00264900
&PFX      SETC  '&XTYPE'                                                00265000
&DSECTLBL SETC  'IEWB'.'&XTYPE'                                         00265100
&PFIXLEN  SETA K'&XPREFIX                                               00265200
.* If PREFIX was not specified, it defaults to '0', and its length to 1 00265300
.* In such case, each label will be prefixed with a three-character     00265400
.* record type (e.g., ESD).                                             00265500
.* Also,  the DSECT label will be  IEWBrectype (e.g. IEWBESD )          00265600
          AIF  ((&PFIXLEN EQ 1) AND ('&XPREFIX' EQ '0')).PFIXOK2   @L7C 00265700
.* If PREFIX was specified, each label will be prefixed with            00265800
.* the PREFIX value, followed by '_', followed by a three-character     00265900
.* record type (e.g., V1_ESD ).                                         00266000
.* Also, the DSECT label will be of the form                            00266100
.* prefix_IEWBrectype (e.g. V1_IEWBESD)                                 00266200
.* Additionally, the ENTRY label will be generated as prefix_rectype    00266300
.* (e.g. V1_ESD)                                                        00266400
&PFX      SETC  '&XPREFIX'.'_'.'&XTYPE'                                 00266500
&DSECTLBL SETC  '&XPREFIX'.'_IEWB'.'&XTYPE'                             00266600
.PFIXOK2  ANOP                                                          00266700
*                               Gets storage for the Binder buffer.     00266800
&IEWLAB1 SETC  'IEW&SYSNDX'       Label for getmain failed              00266900
         AIF   (K'&XGM_RETCODE LE 0).GMUNCOND                           00267000
.*   fix getmain                                                 @P8A   00267100
         L     15,&PFX.I_BUFFER_LENG  Get actual length                 00267200
         GETMAIN RC,LV=(15)                                             00267300
         ST    15,&XGM_RETCODE    Sets getmain rc parameter             00267400
         LTR   15,15              Tests getmain result.                 00267500
         BNZ   &IEWLAB1           Skips over set up of base pointers.   00267600
         AGO   .GMOK                                                    00267700
.GMUNCOND ANOP ,                                                        00267800
.*   fix getmain                                                 @P8A   00267900
         L     0,&PFX.I_BUFFER_LENG  Get actual length            @L7C  00268000
         GETMAIN RU,LV=(0)                                        @L7C  00268100
.GMOK    ANOP  ,                                                        00268200
         LR    &DSECTLBL._BASE,1 Sets base register for header DSECT    00268300
         USING &DSECTLBL,&DSECTLBL._BASE    Maps the header.            00268400
         LA    &PFX._BASE,&PFX.H_END        Sets register for 1st entry 00268500
         USING &PFX._ENTRY,&PFX._BASE       Maps an entry.              00268600
&IEWLAB1 EQU   *                                                        00268700
         AGO   .ALLDONE                                                 00268800
.NOTGET  AIF   ('&XFUNC' NE 'INITBUF').NOTINIT                          00268900
.********************************************************************** 00269000
.*                                                                    * 00269100
.*         FUNC = INITBUF                                             * 00269200
.*                                                                    * 00269300
.********************************************************************** 00269400
.GENINIT ANOP                                                           00269500
.*  ---- Verify presence of PREFIX  ------------------------  19@01A    00269600
&PFX      SETC  '&XTYPE'                                                00269700
&DSECTLBL SETC  'IEWB'.'&XTYPE'                                         00269800
&PFIXLEN  SETA K'&XPREFIX                                               00269900
.* If PREFIX was not specified, it defaults to '0', and its length to 1 00270000
.* In such case, each label will be prefixed with a three-character     00270100
.* record type (e.g., ESD).                                             00270200
.* Also,  the DSECT label will be  IEWBrectype (e.g. IEWBESD )          00270300
          AIF  ((&PFIXLEN EQ 1) AND ('&XPREFIX' EQ '0')).PFIXOK3   @L7C 00270400
.* If PREFIX was specified, each label will be prefixed with            00270500
.* the PREFIX value, followed by '_', followed by a three-character     00270600
.* record type (e.g., V1_ESD ).                                         00270700
.* Also, the DSECT label will be of the form                            00270800
.* prefix_IEWBrectype (e.g. V1_IEWBESD)                                 00270900
.* Additionally, the ENTRY label will be generated as prefix_rectype    00271000
.* (e.g. V1_ESD)                                                        00271100
&PFX      SETC  '&XPREFIX'.'_'.'&XTYPE'                                 00271200
&DSECTLBL SETC  '&XPREFIX'.'_IEWB'.'&XTYPE'                             00271300
.PFIXOK3  ANOP                                                          00271400
*                               Initializes the buffer header.          00271500
         USING &DSECTLBL,&DSECTLBL._BASE     Maps the header.           00271600
         USING &PFX._ENTRY,&PFX._BASE        Maps an entry.             00271700
         MVC   &DSECTLBL.(&PFX.H_LENG),&PFX.I_INIT_VALUES               00271800
         AGO   .ALLDONE                                                 00271900
.NOTINIT ANOP  ,                                                 @09C   00272000
         AIF   ('&XFUNC' NE 'FREEBUF').NOTFREE                   @09A   00272100
.********************************************************************** 00272200
.*                                                                    * 00272300
.*         FUNC = FREEBUF                                             * 00272400
.*                                                                    * 00272500
.********************************************************************** 00272600
.*                                                              @09D    00272700
.*  ---- Verify presence of PREFIX  ------------------------  19@01A    00272800
&PFX      SETC  '&XTYPE'                                                00272900
&DSECTLBL SETC  'IEWB'.'&XTYPE'                                         00273000
&PFIXLEN  SETA K'&XPREFIX                                               00273100
.* If PREFIX was not specified, it defaults to '0', and its length to 1 00273200
.* In such case, each label will be prefixed with a three-character     00273300
.* record type (e.g., ESD ).                                            00273400
.* Also,  the DSECT label would be  IEWBrectype (e.g. IEWBESD )         00273500
          AIF  ((&PFIXLEN EQ 1) AND ('&XPREFIX' EQ '0')).PFIXOK4   @L7C 00273600
.* If PREFIX was specified, each label will be prefixed with            00273700
.* the PREFIX value, followed by '_', followed by a three-character     00273800
.* record type (e.g., V1_ESD ).                                         00273900
.* Also, the DSECT label will be of the form                            00274000
.* prefix_IEWBrectype (e.g. V1_IEWBESD)                                 00274100
.* Additionally, the ENTRY label will be generated as prefix_rectype    00274200
.* (e.g. V1_ESD)                                                        00274300
&PFX      SETC  '&XPREFIX'.'_'.'&XTYPE'                                 00274400
&DSECTLBL SETC  '&XPREFIX'.'_IEWB'.'&XTYPE'                             00274500
.PFIXOK4  ANOP                                                          00274600
*                               Frees the buffer storage.               00274700
         USING &DSECTLBL,&DSECTLBL._BASE    Maps the header.            00274800
         USING &PFX._ENTRY,&PFX._BASE       Maps an entry.              00274900
         SLR   &PFX._BASE,&PFX._BASE        Zeroes entry base.          00275000
         LR    1,&DSECTLBL._BASE            Keeps storage address.      00275100
         SLR   &DSECTLBL._BASE,&DSECTLBL._BASE Zeroes header base.      00275200
         AIF   (K'&XFM_RETCODE LE 0).FMUNCOND                           00275300
.*   fix freemain                                                @P8A   00275400
         L     15,&PFX.I_BUFFER_LENG    Get actual length               00275500
         FREEMAIN RC,LV=(15),A=((1))                                    00275600
         ST    15,&XFM_RETCODE          Sets freemain rc parameter      00275700
         AGO   .FMDONE                                                  00275800
.FMUNCOND ANOP ,                                                        00275900
.*   fix freemain                                                @P8A   00276000
         L     15,&PFX.I_BUFFER_LENG    Get actual length               00276100
         FREEMAIN RU,LV=(15),A=((1))                                    00276200
.FMDONE  ANOP  ,                                                        00276300
         AGO   .ALLDONE                                                 00276400
.NOTFREE ANOP  ,                                                 @09A   00276500
.*                                                               @09A   00276600
.*** Insert additional XFUNC support here                        @09A   00276700
.*                                                               @09A   00276800
.*-----Unsupported XFUNC value slipped through-------------------@09A   00276900
         MNOTE 8,'XFUNC=&XFUNC MACRO LOGIC ERROR. CONTACT IBM.'  @09A   00277000
         MEXIT                                                   @09A   00277100
.*                                                               @09A   00277200
.ALLDONE ANOP  ,                                                        00277300
.********************************************************************** 00277400
.* End of BAL macro code to be added to IEWBUFF.                      * 00277500
.********************************************************************** 00277600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00277700
.********************************************************************   00277800
.***AL.A01  INTERNAL ARRAY TO PRODUCE FORMATTED CODE                    00277900
.********************************************************************   00278000
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00278100
                      LCLA  &ZOPN1         INVOCATION INDEX             00278200
                      LCLC  &ZOPL(4095)    LABEL                        00278300
                      LCLC  &ZOPO(4095)    OPERATION                    00278400
                      LCLC  &ZOPV(4095)    VALUE                        00278500
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00278600
.*                                                                      00278700
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00278800
.*******************************************************************    00278900
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00279000
.*******************************************************************    00279100
                      ACTR  10000                                       00279200
.*                                                                      00279300
                      LCLA  &ZLC           COLUMN POSITION              00279400
                      LCLA  &ZOPX          LIST TABLE INDEX             00279500
                      LCLC  &ZLL           LABEL                        00279600
                      LCLC  &ZLOP          OPERATION                    00279700
                      LCLC  &ZLV           VALUE                        00279800
                      LCLC  &ZLD           DESCRIPTION                  00279900
.*                                                                      00280000
&ZOPX                 SETA  1                                           00280100
.*******************************************************************    00280200
.***AP.X01  FORMAT GENERATED CODE                                       00280300
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00280400
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00280500
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00280600
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00280700
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00280800
                      AIF   (K'&ZLD LE 0).ZL51                          00280900
&ZLC                  SETA  35             COMMENT COLUMN               00281000
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00281100
&ZLC                  SETA  33             COMMENT COLUMN               00281200
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00281300
&ZLV                  SETC  '&ZLV'.' '                                  00281400
                      AGO   .ZL31                                       00281500
.*                                                                      00281600
.ZL41                 ANOP  ,                                           00281700
&ZLV                  SETC  '&ZLV'.' '                                  00281800
.ZL51                 ANOP  ,                                           00281900
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00282000
.*                                                                      00282100
&ZLL     &ZLOP &ZLV                                                     00282200
.*                                                                      00282300
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00282400
                      AGO   .ZL21          CONTINUE LOOPING             00282500
.*                                                                      00282600
.ZLX1                 ANOP  ,                                           00282700
.*******************************************************************    00282800
.***AP.X02  END OF IEWBUFF MACRO                                        00282900
&ZIEWBUFF             SETC  'YES'          SET IEWBUFF USED             00283000
         POP   PRINT                                                    00283100
*                                            IEWBUFF-0                  00283200
         SPACE 1                                                        00283300
.ZLX2                 ANOP  ,                                           00283400
         MEND                                                           00283500
**********************************************************************/ 00283600
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00283700
*%IEWBUFF: MACRO KEYS(FUNC,SIZE,BYTES,HEADREG,ENTRYREG,VERSION,         00283800
*                 GM_RETCODE,FM_RETCODE,TYPE,PREFIX);                   00283900
*  ANS('?'!!MACLABEL!!' '!!'IEWBUFFP '!!MACLIST!!                       00284000
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              00284100
*%END IEWBUFF;                                                          00284200
