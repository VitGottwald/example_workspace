*                                                                       00001000
* %DCL IXLZSTRB_INCLUDED CHAR EXT;                                      00002000
* %DEACTIVATE IXLZSTRB_INCLUDED;                                        00003000
* %IF IXLZSTRB_INCLUDED = '' %THEN                                      00004000
* %DO;                                                                  00005000
*/* Macro made bi-lingual on 20162. CBGEN compile date 20027         */ 00006000
*% /*                                                                   00007000
         MACRO                                                          00008000
         IXLZSTRB &DSECT=YES,&LIST=YES,&TITLE=YES,&STRBHEADER=YES,     *00009000
               &STRBSTRSUMMARY=COND,&STRBSUMMARY=COND,                 *00010000
               &STRBSTRDETAIL=COND,&STRBSTRDETAIL1=COND,               *00011000
               &STRBSTRDETAIL2=COND,&STRBDETAIL=COND,                  *00012000
               &STRBEMCDETAIL=COND,&STRBENTRY=COND                      00013000
         GBLC  &IXLZSTRB_INCLUDED                                       00014000
         GBLC  &ZCBPRINT                                                00015000
&IXLZSTRB_INCLUDED SETC 'YES'                                           00016000
         AIF   ('&LIST' EQ 'NONE').P0                                   00017000
         AIF   ('&TITLE' EQ 'NO').P5                                    00018000
 TITLE   'IXLZSTRB  - IXLZSTR Macro Service ANSAREA Mappings         '  00019000
.P5      ANOP                                                           00020000
**/ IXLZSTRB_1:;                                                        00021000
*/* START OF SPECIFICATIONS ******************************************* 00022000
*                                                                       00023000
*01* PROPRIETARY STATEMENT =                                            00024000
*                                                                       00025000
*    Licensed Materials - Property of IBM                               00026000
*    5650-ZOS COPYRIGHT IBM CORP. 1993, 2017                            00027000
*                                                                       00028000
*                                                                       00029000
*    STATUS = FMID HBB77B0                                              00030000
*                                                                       00031000
*02* ACRONYM:  STRB                                                     00032000
*                                                                       00033000
*01* DESCRIPTIVE NAME:  IXLZSTR Macro Service ANSAREA Mappings          00034000
*                                                                       00035000
*01* MACRO NAME:  IXLZSTRB                                              00036000
*                                                                       00037000
*01* DSECT NAME:                                                        00038000
*     StrBHeader                                                        00039000
*     StrBStrSummary                                                    00040000
*     StrBSummary                                                       00041000
*     StrBStrDetail                                                     00042000
*     StrBStrDetail1                                               @L4A 00043000
*     StrBStrDetail2                                               @03A 00044000
*     StrBDetail                                                        00045000
*     StrBEMCDetail                                                     00046000
*     StrBEntry                                                         00047000
*                                                                       00048000
*01* COMPONENT:  Cross System Extended Services (SCIXL)                 00049000
*                                                                       00050000
*01* EYE-CATCHER:  None                                                 00051000
*02*  OFFSET:  N/A                                                      00052000
*02*  LENGTH:  N/A                                                      00053000
*                                                                       00054000
*01* STORAGE ATTRIBUTES:                                                00055000
*02*  SUBPOOL:  User Defined                                            00056000
*02*  KEY:  User Defined                                                00057000
*02*  RESIDENCY:  User Defined                                          00058000
*                                                                       00059000
*01* SIZE:                                                              00060000
*                STRBSTRDETAIL2 -- X'004C' bytes                        00061000
*                STRBSTRDETAIL1 -- X'0044' bytes                        00062000
*                STRBHEADER     -- X'0088' bytes                        00063000
*                STRBSTRSUMMARY -- X'0068' bytes                        00064000
*                STRBSUMMARY    -- X'000C' bytes                        00065000
*                STRBSTRDETAIL  -- X'003C' bytes                        00066000
*                STRBDETAIL     -- X'0024' bytes                        00067000
*                STRBEMCDETAIL  -- X'0020' bytes                        00068000
*                STRBENTRY      -- X'0038' bytes                        00069000
*                                                                       00070000
*01* CREATED BY:  The IXLZSTR CF Structure Data Access Service in the   00071000
*                 user defined ANSAREA                                  00072000
*                                                                       00073000
*01* POINTED TO BY:  User                                               00074000
*                                                                       00075000
*01* SERIALIZATION: No requirement                                      00076000
*                                                                       00077000
*01* FUNCTION:                                                          00078000
*02*  This macro maps the ANSAREA data that was requested on the        00079000
*     IXLZSTR macro and provides constants to interpret any return and  00080000
*     reason codes issued.  This macro will map the contents of the     00081000
*     ANSAREA for all IXLZSTR requests, with the exception of the       00082000
*     user control and lock index requests.  In the case where the      00083000
*     user control information is returned from the IXLZSTR             00084000
*     service, the DLccb mapping found in IXLYDDIB will map the         00085000
*     answer area entries if the structure requested is a cache         00086000
*     structure or the DLucb mapping found in IXLYDDIB will map         00087000
*     the answer area entries if the structure is a list structure.     00088000
*     In the case where lock table entries are requested, the DLte      00089000
*     mapping found in IXLYDDIB will map the answer area entries.       00090000
*                                                                       00091000
*    NOTE: To determine the length of each individual StrBEntry         00092000
*          entry, perform the following calculation:                    00093000
*                                                                       00094000
*          StrBTableEntryLen + StrBEntryAdjLen + StrBEntryEDataLen +    00095000
*          StrBEntryCntlLen                                             00096000
*                                                                       00097000
*          This calculation will always give the correct length.        00098000
*          The reason this should be done for each individual StrBEntry 00099000
*          is that there may be times when some or all of the           00100000
*          entries may not contain adjunct data or entry data, even     00101000
*          though it was requested.  By performing this calculation,    00102000
*          the user is insured that movement to the next entry in       00103000
*          the ANSAREA will be correct.                                 00104000
*                                                                       00105000
*    NOTE: To interpret the dump reason code, include the IXLYSTRC      00106000
*          mapping in your program.                                     00107000
*                                                                       00108000
*01* EXTERNAL CLASSIFICATION: GUPI                                      00109000
*01* END OF EXTERNAL CLASSIFICATION:                                    00110000
*                                                                       00111000
*01* METHOD OF ACCESS:                                                  00112000
*     ASM:   IXLZSTRB                                                   00113000
*     PL/AS:                                                            00114000
*         %DCL STRBHEADER_ATTR      CHAR                                00115000
*         %DCL STRBSUMMARY_ATTR     CHAR                                00116000
*         %DCL STRBDETAIL_ATTR      CHAR                                00117000
*         %DCL STRBEMCDETAIL_ATTR   CHAR                                00118000
*         %DCL STRBENTRY_ATTR       CHAR                                00119000
*         %DCL STRBSTRSUMMARY_ATTR  CHAR                                00120000
*         %DCL STRBSTRDETAIL_ATTR   CHAR                                00121000
*         %STRBHEADER_ATTR          = 'based/defined/via attributes'    00122000
*         %STRBSUMMARY_ATTR         = 'based/defined/via attributes'    00123000
*         %STRBDETAIL_ATTR          = 'based/defined/via attributes'    00124000
*         %STRBEMCDETAIL_ATTR       = 'based/defined/via attributes'    00125000
*         %STRBENTRY_ATTR           = 'based/defined/via attributes'    00126000
*         %STRBSTRSUMMARY_ATTR      = 'based/defined/via attributes'    00127000
*         %STRBSTRDETAIL_ATTR       = 'based/defined/via attributes'    00128000
*         %INCLUDE SYSLIB(IXLZSTRB)                                     00129000
*                                                                       00130000
*  Where:                                                               00131000
*                                                                       00132000
*    STRBHEADER_ATTR is associated with the StrBHeader mapping          00133000
*    STRBSUMMARY_ATTR is associated with the StrBSummary mapping        00134000
*    STRBDETAIL_ATTR is associated with the StrBDetail mapping          00135000
*    STRBEMCDETAIL_ATTR is associated with the StrBEMCDetail mapping    00136000
*    STRBENTRY_ATTR is associated with the StrBEntry mapping            00137000
*    STRBSTRSUMMARY_ATTR is associated with the StrBStrSummary mapping  00138000
*    STRBSTRDETAIL_ATTR is associated with the StrBStrDetail,           00139000
*       StrBStrDetail1, and StrBStrDetail2 mappings                @03C 00140000
*                                                                       00141000
*     If any of the above variables is not set,                         00142000
*     the associated mapping will declared as BASED.                    00143000
*                                                                       00144000
*01* DELETED BY: Issuer of the Coupling Facility Structure Data         00145000
*                Access Service                                         00146000
*                                                                       00147000
*01* FREQUENCY:                                                         00148000
*     N/A                                                               00149000
*                                                                       00150000
*01* DEPENDENCIES:  None                                                00151000
*                                                                       00152000
*01* DISTRIBUTION LIBRARY: AMACLIB                                      00153000
*                                                                       00154000
*01* CHANGE ACTIVITY:                                                   00155000
*                                                                       00156000
*   Flag LineItem    FMID     Date     ID    Comment                    00157000
*                                                                       00158000
*    $L0=SYSLKDFM   HBB5510  921112  PD00LA: XES Initial Release        00159000
*    $D1=DIG0042    HBB5510  930520  PD00LA: ARB support                00160000
*    $D2=DIG0044    HBB5510  930520  PD00LA: Structure Dump ID Support  00161000
*    $D3=DIG0076    HBB5510  930520  PD00LA: Rebuild Support            00162000
*    $P1=PIG1693    HBB5510  930520  PD00LA: Change inconsistent        00163000
*                                            keywords LOCKINDEX         00164000
*                                            and USER                   00165000
*    $D4=DIG0108    HBB5510  930720  PD00LA: CF Name Change             00166000
*    $L1=DMPMG      HBB5510  930715  PD00LA: Incident Token Support     00167000
*    $P2=PIG3505    HBB5510  931104  PD00LA: Add Structure type         00168000
*                                            constants                  00169000
*    $P3=PIG3508    HBB5510  931104  PD00LA: Do not add the adjunct     00170000
*                                            length to the              00171000
*                                            StrBTableEntryLen          00172000
*    $P4=PIG3526    HBB5510  931104  PD00LA: StrBStrInfo length not     00173000
*                                            correct in ASM version of  00174000
*                                            the macro                  00175000
*    $P5=PIG3582    HBB5510  931109  PD00NT: Do not add entry control   00176000
*                                            length to the              00177000
*                                            StrBTableEntryLen          00178000
*    $P6=PIG5495    HBB5510  940722  PD00EA: Add CFLEVEL                00179000
*    $01=OW24532    HBB5520  970220  PD00XM: EMC Dumping Support        00180000
*    $02=OW28460    HBB6603  970801  PDXM: User managed duplexing       00181000
*    $L2=AUTOR      HBB6608  980831  PD00GW: Auto Rebuild               00182000
*    $L3=DUPLX      HBB7705  000823  PD00GW: CF Duplexing               00183000
*    $P7=ME01016    HBB7720  040624  PD002F: Eliminate duplicate        00184000
*                                            labels in the assembler    00185000
*                                            using CBGEN PRAGMA         00186000
*    $L4=CFFLASH    HBB7790  120301  PD00C9: Cf Flash                   00187000
*    $L5=CFCRYPT    HBB77B0  160311  PD00C9: CF Data Encryption         00188000
*    $03=OA52716    HBB77B0  170510  PD00OF: Report on USC2             00189000
*    $L6=OA56774    HBB77A0  190425  PD00C9: CF task monopolization     00190000
*                                                                       00191000
* END OF SPECIFICATIONS *********************************************/  00192000
*% /*                                                                   00193000
.P0      ANOP                                                           00194000
         AIF   ('&ZCBPRINT' EQ 'NO').P1                                 00195000
         AIF   ('&LIST' EQ 'YES').P2                                    00196000
.P1      ANOP                                                           00197000
         PUSH  PRINT                                                    00198000
         PRINT OFF                                                      00199000
.P2      ANOP                                                           00200000
         AIF   ('&STRBHEADER' EQ 'NO').L0002                            00201000
         AIF   ('&DSECT' EQ 'YES').L0003                                00202000
         AIF   ('&STRBHEADER' NE 'YES').L0002                           00203000
.L0003   ANOP                                                           00204000
*                                                                       00205000
* ********************************************************************  00206000
* *                                                                  *  00207000
* *               Mapping for the ANSAREA Header                     *  00208000
* *                                                                  *  00209000
* ********************************************************************  00210000
*                                                                       00211000
*                                                                       00212000
         AIF   ('&DSECT' EQ 'YES').L0004                                00213000
STRBHEADER DS  0F        Mapping for the header section of the answer  *00214000
                         area                                           00215000
         AGO   .L0005                                                   00216000
.L0004   ANOP                                                           00217000
STRBHEADER DSECT         Mapping for the header section of the answer  *00218000
                         area                                           00219000
.L0005   ANOP                                                           00220000
STRBNUMTABLEENTRIES DS F Number of table entries                        00221000
STRBTABLEENTRYLEN DS F   Length of the table entry. For table entries  *00222000
                         that point to other areas of the answer area, *00223000
                         i.e. control information, the length of the   *00224000
                         area that is pointed to is included in the    *00225000
                         table entry length NOTE - If the ENTRYDATA    *00226000
                         keyword is specified on the IXLZSTR macro,    *00227000
                         this field will not include the length of the *00228000
                         entry data in the total length. The reason    *00229000
                         for this is that two different entries in the *00230000
                         answer area could have two different           00231000
*                        entrydata lengths, thus invalidating this     *00232000
                         field. To obtain the length of the entrydata  *00233000
                         in the answer area, see StrbEntryEDataLen in  *00234000
                         the StrbEntry entry. If the ADJUNCT keyword   *00235000
                         is specified on the IXLZSTR macro, this field *00236000
                         will not include the length of the adjunct    *00237000
                         data. The reason for this is that the adjunct *00238000
                         data may be requested, but not in the dump.   *00239000
                         To obtain the length of the adjunct data in   *00240000
                         the answer area, see STRbEntryAdjLen in the    00241000
*                        StrbEntry                                      00242000
STRBFIRSTTABLEENTRY@ DS A Pointer to the first table entry in the      *00243000
                         answer area                                    00244000
STRBTABLEENTRYTYPE DS F  Type of entries that are mapped in the answer *00245000
                         area                                           00246000
STRBSTRINFO DS CL104     Summary information about the structure that  *00247000
                         was specified on the IXLZSTR request. This    *00248000
                         area will not be filled in when the request   *00249000
                         is TYPE(STRUCTURE) STRLEVEL(SUMMARY) request. *00250000
                         This area can be mapped by the StrBStrSummary *00251000
                         mapping                                        00252000
STRBSTARTRANGE DS F      If the StrbPosRange bit is off, this variable *00253000
                         will hold the start of a range of CLASS,      *00254000
                         LISTNUM, LOCKENTRIES, USERCNTLS, EMCONTROLS,  *00255000
                         or EVENTQS object values specified on the     *00256000
                         IXLZSTR macro. If the StrbPosRange bit is on, *00257000
                         this variable will hold the start of a        *00258000
                         position range within a requested CLASS or    *00259000
                         LISTNUM value. This value can be found in     *00260000
                         StrBEntryValue NOTE - This field will only be *00261000
                         valid if the TYPE parameter on the IXLZSTR     00262000
*                        macro is CLASS, LISTNUM, LOCKENTRIES,         *00263000
                         USERCNTLS, EMCONTROLS, or EVENTQS and the     *00264000
                         StrBHeaderAll bit is off                       00265000
STRBENDRANGE DS F        If the StrbPosRange bit is off, this variable *00266000
                         will hold the end of a range of CLASS,        *00267000
                         LISTNUM, LOCKENTRIES, USERCNTLS, EMCONTROLS,  *00268000
                         or EVENTQS object values specified on the     *00269000
                         IXLZSTR macro. If the StrbPosRange bit is on, *00270000
                         this variable will hold the end of a position *00271000
                         range within a requested CLASS or LISTNUM     *00272000
                         value. This value can be found in             *00273000
                         StrBEntryValue NOTE - This field will only be *00274000
                         valid if the TYPE parameter on the IXLZSTR     00275000
*                        macro is CLASS, LISTNUM, LOCKENTRIES,         *00276000
                         USERCNTLS, EMCONTROLS, or EVENTQS and the     *00277000
                         StrBHeaderAll bit is off                       00278000
STRBHEADEROBJECTVALUE DS F Value of the object the entries were        *00279000
                         attempted to be retrieved from. See           *00280000
                         StrBHeaderFlags and StrBHeaderFlags2 to       *00281000
                         determine whether this value is a storage     *00282000
                         class, castout class, list number, or         *00283000
                         connection id. NOTE: This field is only valid *00284000
                         if the request was a TYPE(CLASS)              *00285000
                         CLASSLEVEL(ENTRY) request, a TYPE(LISTNUM)    *00286000
                         LISTNUMLEVEL(ENTRY) request, a                *00287000
                         TYPE(EMCONTROLS) EMCLEVEL(EMC) request, or a   00288000
*                        TYPE(EVENTQS) EQLEVEL(EMC) request             00289000
STRBHEADERFLAGS DS B     Flag Byte                                      00290000
*  Bit definitions:                                                     00291000
STRBHEADERALL EQU X'80'  0 => Indicates a range was specified 1 =>     *00292000
                         Indicates that all of a class, listnum,       *00293000
                         usercntls, lockentries, emcontrols or eventqs *00294000
                         was specified. NOTE - This bit will only be   *00295000
                         valid if the TYPE parameter on the IXLZSTR    *00296000
                         macro is CLASS, LISTNUM, LOCKENTRIES,         *00297000
                         USERCNTLS, EMCONTROLS, or EVENTQS              00298000
STRBPOSRANGE EQU X'40'   0 => Indicates that SUMMARY or DETAIL level   *00299000
                         information was requested or STARTVAL and or  *00300000
                         ENDVAL were specified or defaulted to on the  *00301000
                         IXLZSTR macro. StrBStartRange, StrBEndRange,  *00302000
                         and StrBHeaderAll bits are referencing ranges *00303000
                         of CLASS (when StrBObjRngCoc or StrBObjRngStg *00304000
                         are set), LISTNUM (when StrBObjRngLnm is      *00305000
                         set), LOCKENTRIES, USERCNTLS, EMCONTROLS      *00306000
                         (when StrBObjRngEmc is set) or EVENTQS (when  *00307000
                         StrBObjRncEqc is set). 1 => Indicates that     00308000
*                        ENTRY level, or ENTRY level with STARTPOS and *00309000
                         optionally ENDPOS, or EMC level information,  *00310000
                         was requested for the object value specified  *00311000
                         in StrBHeaderObjectValue. For ENTRY level     *00312000
                         information, StrBStartRange, StrBEndRange,    *00313000
                         and StrBHeaderAll bits are referencing ranges *00314000
                         of entry positions within a CLASS (when       *00315000
                         StrBHeaderCoc or StrBHeaderStg is set) or a   *00316000
                         LISTNUM (when StrbHeaderLnm is set). For EMC  *00317000
                         level information (StrBHeaderEmc or            00318000
*                        StrBHeaderEqc is set), StrBHeaderAll will be  *00319000
                         set and StrBStartRange and StrBEndRange do    *00320000
                         not apply.                                     00321000
STRBTAILORDPROB EQU X'20' If ENTRYKEY and ORDER(TAIL) were specified   *00322000
                         on the IXLZSTR macro and the dump of the      *00323000
                         entries was partial, this bit bit will be set *00324000
                         to indicate that the dump of the entrykey may *00325000
                         be partial because the last entry dumped for  *00326000
                         this object had the requested entrykey         00327000
*                                                                       00328000
*   The following 3 bits only apply for TYPE(CLASS) CLASSLEVEL(ENTRY)   00329000
*   requests and for TYPE(LISTNUM) LISTNUMLEVEL(ENTRY) requests.        00330000
*   The object value these bits identify is located in the field        00331000
*   StrBHeaderObjectValue                                               00332000
*                                                                       00333000
*                                                                       00334000
STRBHEADERCOC EQU X'10'  0 => This object value in the                 *00335000
                         StrBHeaderObjectValue field is not a castout  *00336000
                         class 1 => This object value in the           *00337000
                         StrBHeaderObjectValue field is a castout      *00338000
                         class                                          00339000
STRBHEADERSTG EQU X'08'  0 => This object value in the                 *00340000
                         StrBHeaderObjectValue field is not a storage  *00341000
                         class 1 => This object value in the           *00342000
                         StrBHeaderObjectValue field is a storage      *00343000
                         class                                          00344000
STRBHEADERLNM EQU X'04'  0 => This object value in the                 *00345000
                         StrBHeaderObjectValue field is not a list     *00346000
                         number 1 => This object value in the          *00347000
                         StrBHeaderObjectValue field is a list number   00348000
STRBTAILPOSRANGE EQU X'02' 0 => The position range specified is going  *00349000
                         from head to tail order 1 => The position     *00350000
                         range specified is going from tail to head    *00351000
                         order NOTE: This bit is valid only if the     *00352000
                         StrBPosRange bit is set                        00353000
STRBHEADERFLAGS2 DS B    Flag Byte2                                     00354000
*                                                                       00355000
*   The following 3 bits only apply for TYPE(CLASS)                     00356000
*   CLASSLEVEL(SUMMARY) or CLASSLEVEL(DETAIL                            00357000
*   requests and for TYPE(LISTNUM)                                      00358000
*   LISTNUMLEVEL(SUMMARY) or LISTNUMLEVEL(DETAIL) requests.             00359000
*   The object ranges these bits identify are located in                00360000
*   StrBHeaderAll if all was requested or in StrBStartRange and         00361000
*   StrBEndRange if a range was requested                               00362000
*                                                                       00363000
*                                                                       00364000
*  Bit definitions:                                                     00365000
STRBOBJRNGCOC EQU X'80'  0 => The range requested is not a castout     *00366000
                         class 1 => The range requested is a castout   *00367000
                         class                                          00368000
STRBOBJRNGSTG EQU X'40'  0 => The range requested is not a storage     *00369000
                         class 1 => The range requested is a storage   *00370000
                         class                                          00371000
STRBOBJRNGLNM EQU X'20'  0 => The range requested is not a list number *00372000
                         1 => The range requested is a list number      00373000
*                                                                       00374000
*   The following 2 bits only apply for TYPE(EMCONTROLS)                00375000
*   EMCLEVEL(EMC) or TYPE(EVENTQS) EQLEVEL(EMC) requests.               00376000
*   The object value these bits identify is located in the field        00377000
*   StrBHeaderObjectValue                                               00378000
*                                                                       00379000
*                                                                       00380000
STRBHEADEREMC EQU X'10'  0 => The object value in the                  *00381000
                         StrBHeaderObjectValue field is not a list     *00382000
                         number 1 => This object value in the          *00383000
                         StrBHeaderObjectValue field is a list number   00384000
STRBHEADEREQC EQU X'08'  0 => The object value in the                  *00385000
                         StrBHeaderObjectValue field is not a          *00386000
                         connection id 1 => This object value in the   *00387000
                         StrBHeaderObjectValue field is a connection   *00388000
                         id                                             00389000
*                                                                       00390000
*   The following 2 bits only apply for TYPE(EMCONTROLS)                00391000
*   EMCLEVEL(SUMMARY) or TYPE(EVENTQS) EQLEVEL(DETAIL) requests.        00392000
*   The object ranges these bits identify are located in                00393000
*   StrBHeaderAll if all was requested or in StrBStartRange and         00394000
*   StrBEndRange if a range was requested                               00395000
*                                                                       00396000
*                                                                       00397000
STRBOBJRNGEMC EQU X'04'  0 => The range requested is not a list number *00398000
                         1 => The range requested is a list number      00399000
STRBOBJRNGEQC EQU X'02'  0 => The range requested is not a connection  *00400000
                         id 1 => The range requested is a connection   *00401000
                         id                                             00402000
         DS    CL2                                                      00403000
*                                                                       00404000
* ****************************************************************** *  00405000
* *                                                                  *  00406000
* *     Constants for the table entry                                *  00407000
* *     These constants will be used in StrBTableEntryType           *  00408000
* *                                                                  *  00409000
* ****************************************************************** *  00410000
*                                                                       00411000
*                                                                       00412000
STRBTABLEENTRYSTRSUMMARY EQU 1 TYPE=STRUCTURE STRLEVEL=SUMMARY entries *00413000
                         are in the answer area                         00414000
STRBTABLEENTRYSTRDETAIL EQU 2 TYPE=STRUCTURE STRLEVEL=DETAIL entries   *00415000
                         are in the answer area                         00416000
STRBTABLEENTRYSUMMARY EQU 3 TYPE=CLASS CLASSLEVEL=SUMMARY or           *00417000
                         TYPE=LISTNUM LISTNUMLEVEL=SUMMARY or          *00418000
                         TYPE=EMCONTROLS EMCLEVEL=SUMMARY entries are  *00419000
                         in the answer area                             00420000
STRBTABLEENTRYDETAIL EQU 4 TYPE=CLASS CLASSLEVEL=DETAIL or             *00421000
                         TYPE=LISTNUM LISTNUMLEVEL=DETAIL or           *00422000
                         TYPE=EVENTQS EMCLEVEL=DETAIL entries are in   *00423000
                         the answer area                                00424000
STRBTABLEENTRYENTRY EQU 5 TYPE=CLASS CLASSLEVEL=ENTRY, TYPE=LISTNUM    *00425000
                         LISTNUMLEVEL=ENTRY, or TYPE=ENTRY entries are *00426000
                         in the answer area                             00427000
STRBTABLEENTRYLOCK EQU 6 TYPE=LOCKENTRIES entries are in the answer    *00428000
                         area - Use the DLte mapping in IXLYDDIB to    *00429000
                         map the entries                                00430000
STRBTABLEENTRYDLUCB EQU 7 TYPE=USERCNTLS entries are in the answer     *00431000
                         area and the structure requested is a list    *00432000
                         structure - Use the DLucb mapping in IXLYDDIB *00433000
                         to map the entries                             00434000
STRBTABLEENTRYDLCCB EQU 8 TYPE=USERCNTLS entries are in the answer     *00435000
                         area and the structure requested is a cache   *00436000
                         structure - Use the DLccb mapping in IXLYDDIB *00437000
                         to map the entries                             00438000
STRBTABLEENTRYEMCDETAIL EQU 9 TYPE=EMCONTROLS EMCLEVEL=EMC or          *00439000
                         TYPE=EVENTQS EMCLEVEL=EMC entries are in the  *00440000
                         answer area                                    00441000
STRBHEADER_LEN EQU *-STRBHEADER                                         00442000
.L0002   ANOP                                                           00443000
         AIF   ('&STRBSTRSUMMARY' EQ 'NO').L0006                        00444000
         AIF   ('&DSECT' EQ 'YES').L0007                                00445000
         AIF   ('&STRBSTRSUMMARY' NE 'YES').L0006                       00446000
.L0007   ANOP                                                           00447000
*                                                                       00448000
* ****************************************************************** *  00449000
* *                                                                  *  00450000
* *             Mapping of the table entry for:                      *  00451000
* *                                                                  *  00452000
* *             TYPE(STRUCTURE) STRLEVEL(SUMMARY)                    *  00453000
* *                                                                  *  00454000
* *  Use this mapping when                                           *  00455000
* *        StrBTableEntryType = StrBTableEntryStrSummary             *  00456000
* *                                                                  *  00457000
* ****************************************************************** *  00458000
*                                                                       00459000
*                                                                       00460000
         AIF   ('&DSECT' EQ 'YES').L0008                                00461000
STRBSTRSUMMARY DS 0F                                                    00462000
         AGO   .L0009                                                   00463000
.L0008   ANOP                                                           00464000
STRBSTRSUMMARY DSECT                                                    00465000
.L0009   ANOP                                                           00466000
STRBSTRSUMMARYNAME DS CL16 Structure name                               00467000
STRBSTRSUMMARYTYPE DS X  Structure type                                 00468000
         DS    CL1       reserved                                       00469000
STRBSTRSUMMARYSTRDUMPID DS H Structure Dump ID                          00470000
STRBSTRSUMMARYDUMPRSN DS F Reason code, if dump status is other than   *00471000
                         complete - the dump reason codes are defined  *00472000
                         in the IXLYSTRC mapping                        00473000
STRBSTRSUMMARYHDWND DS CL32 Facility Node descriptor                    00474000
STRBSTRSUMMARYCFNAME DS CL8 Facility Name                               00475000
STRBSTRSUMMARYINCIDENTTOKEN DS CL32 Incident token                      00476000
STRBSTRSUMMARYFLAGS DS B Flag Byte                                      00477000
*  Bit definitions:                                                     00478000
STRBSTRSUMMARYFLGCOMPLETE EQU X'80' Indicates that the dump of the     *00479000
                         lock table or the user controls was complete  *00480000
                         NOTE: This field only applies when a user     *00481000
                         requests LOCKENTRIES or USERCNTLS information  00482000
STRBSTRSUMMARYSTRINREBLD EQU X'40' Indicates that the the structure is *00483000
                         in the process of rebuild                      00484000
STRBSTRSUMMARYREBLDOLDSTR EQU X'20' Indicates that the structure       *00485000
                         information pertains to the OLD structure     *00486000
                         NOTE: Bit is only valid if the                *00487000
                         StrBStrSummaryStrInRebld is set                00488000
STRBSTRSUMMARYREBLDNEWSTR EQU X'10' Indicates that the structure       *00489000
                         information pertains to the NEW structure     *00490000
                         NOTE: Bit is only valid if the                *00491000
                         StrBStrSummaryStrInRebld is set                00492000
STRBSTRSUMMARYREBLDDUPLEXSTR EQU X'08' ON indicates the structure      *00493000
                         rebuild is a duplexing rebuild. OFF indicates *00494000
                         the structure rebuild is a normal rebuild.    *00495000
                         NOTE: Bit is only valid if the                *00496000
                         StrBStrSummaryStrInRebld is set                00497000
STRBSTRSUMMARYREBLDMETHODSTR EQU X'04' ON indicates the structure      *00498000
                         rebuild is system managed. OFF indicates the  *00499000
                         structure rebuild is user managed. NOTE: Bit  *00500000
                         is only valid if the StrBStrSummaryStrInRebld *00501000
                         is set                                         00502000
STRBSTRSUMMARYSTRENCRYPTED EQU X'02' ON indicates that data in this    *00503000
                         structure instance is encrypted                00504000
         DS    CL3       Reserved                                       00505000
STRBSTRSUMMARYCFLEVEL DS F Coupling facility operational level of      *00506000
                         facility in which structure is allocated       00507000
STRBSTRSUMMARY_LEN EQU *-STRBSTRSUMMARY                                 00508000
.L0006   ANOP                                                           00509000
         AIF   ('&STRBSUMMARY' EQ 'NO').L000A                           00510000
         AIF   ('&DSECT' EQ 'YES').L000B                                00511000
         AIF   ('&STRBSUMMARY' NE 'YES').L000A                          00512000
.L000B   ANOP                                                           00513000
*                                                                       00514000
* ****************************************************************** *  00515000
* *                                                                  *  00516000
* *             Mapping of the table entry for:                      *  00517000
* *                                                                  *  00518000
* *             TYPE(CLASS)     CLASSLEVEL(SUMMARY)                  *  00519000
* *             TYPE(LISTNUM)   LISTNUMLEVEL(SUMMARY)                *  00520000
* *             TYPE(EMCONTROLS)  EMCLEVEL(SUMMARY)             @01A *  00521000
* *                                                                  *  00522000
* *  Use this mapping when                                           *  00523000
* *        StrBTableEntryType = StrBTableEntrySummary                *  00524000
* *                                                                  *  00525000
* ****************************************************************** *  00526000
*                                                                       00527000
*                                                                       00528000
         AIF   ('&DSECT' EQ 'YES').L000C                                00529000
STRBSUMMARY DS 0F                                                       00530000
         AGO   .L000D                                                   00531000
.L000C   ANOP                                                           00532000
STRBSUMMARY DSECT                                                       00533000
.L000D   ANOP                                                           00534000
STRBSUMMARYVALUE DS F    Value of the CLASS or LISTNUM or EMCONTROLS.  *00535000
                         See StrbSummaryFlags to determine if this     *00536000
                         value is a storage class, castout class, or   *00537000
                         list number value                              00538000
STRBSUMMARYFLAGS DS B                                                   00539000
*  Bit definitions:                                                     00540000
STRBSUMMARYCOMPLETE EQU X'80' Indicates that dump is complete for all  *00541000
                         the entries in the CLASS or LISTNUM or all    *00542000
                         the event monitor controls (EMCONTROLS)       *00543000
                         associated with the list number.               00544000
STRBSUMMARYCOC EQU X'40' 0 => This is not a castout class entry 1 =>   *00545000
                         This is a castout class entry                  00546000
STRBSUMMARYSTG EQU X'20' 0 => This is not a storage class entry 1 =>   *00547000
                         This is a storage class entry                  00548000
STRBSUMMARYLNM EQU X'10' 0 => This is not a list number entry 1 =>     *00549000
                         This is a list number entry                    00550000
STRBSUMMARYEMC EQU X'08' 0 => This is not an event monitor controls    *00551000
                         entry. 1 => This is an event monitor controls *00552000
                         (EMCONTROLS) entry                             00553000
         DS    CL3       reserved                                       00554000
         DS    CL4       reserved for alignment                         00555000
STRBSUMMARY_LEN EQU *-STRBSUMMARY                                       00556000
.L000A   ANOP                                                           00557000
         AIF   ('&STRBSTRDETAIL' EQ 'NO').L000E                         00558000
         AIF   ('&DSECT' EQ 'YES').L000F                                00559000
         AIF   ('&STRBSTRDETAIL' NE 'YES').L000E                        00560000
.L000F   ANOP                                                           00561000
*                                                                       00562000
* ****************************************************************** *  00563000
* *                                                                  *  00564000
* *             Mapping of the table entry for:                      *  00565000
* *                                                                  *  00566000
* *             TYPE(STRUCTURE)  STRLEVEL(DETAIL)                    *  00567000
* *                                                                  *  00568000
* *  Use this mapping when                                           *  00569000
* *        StrBTableEntryType = StrBTableEntryStrDetail              *  00570000
* *                                                                  *  00571000
* ****************************************************************** *  00572000
*                                                                       00573000
*                                                                       00574000
         AIF   ('&DSECT' EQ 'YES').L0010                                00575000
STRBSTRDETAIL DS 0F                                                     00576000
         AGO   .L0011                                                   00577000
.L0010   ANOP                                                           00578000
STRBSTRDETAIL DSECT                                                     00579000
.L0011   ANOP                                                           00580000
STRBSTRDETAILCNTL@ DS A  Pointer to the structure controls in the      *00581000
                         answer area. The controls can be mapped by    *00582000
                         the DCac mapping found in IXLYDCAC if the     *00583000
                         structure is a cache structure, or the        *00584000
                         controls can be mapped by the DLic mapping    *00585000
                         found in IXLYDLIC if the structure is a list  *00586000
                         structure                                      00587000
STRBSTRDETAILCNTLLEN DS F Length of the structure controls              00588000
STRBSTRDETAILARB@ DS A   Pointer to the ARB in the answer area. The    *00589000
                         ARB can be mapped by the ARB mapping found in *00590000
                         IHAARB. The length of the ARB is always one   *00591000
                         page. If the ARB is not present in the dump,  *00592000
                         this pointer will be zero                      00593000
STRBSTRDETAILARBLEN DS F The length of the ARB                          00594000
STRBSTRDETAILARBNUMRANGES DS F The number of ranges that are in the    *00595000
                         ARB. This number should be used to index      *00596000
                         through the ARB ranges                         00597000
STRBSTRDETAILARBLASTRNGPROC DS F The index of the last range that was  *00598000
                         processed in the ARB                           00599000
STRBSTRDETAILCONNAME DS CL16 name of connected user whose registry     *00600000
                         information was gathered                       00601000
STRBSTRDETAILCONID DS H  Connection ID                                  00602000
STRBSTRDETAILFLAGS DS B  Structure Detail Flags                         00603000
*  Bit definitions:                                                     00604000
STRBSTRDETAILCONNOTFOUND EQU X'80' Indicates that the conname or       *00605000
                         contoken specified for this structure could   *00606000
                         not be found in the policy when the structure *00607000
                         was dumped                                     00608000
STRBSTRDETAILSTRMONOPSTATE EQU X'40' ON indicates that the structure   *00609000
                         was in the monopolizing state at the          *00610000
                         beginning of the dumping process               00611000
         DS    CL1       Reserved                                       00612000
STRBSTRDETAILSCC@ DS A   Pointer to the structure copy controls in the *00613000
                         answer area.                                   00614000
STRBSTRDETAILSCCLEN DS F The length of the structure copy controls      00615000
STRBSTRDETAILDUPCON@ DS A Pointer to the duplexing controls data in    *00616000
                         the answer area.                               00617000
STRBSTRDETAILDUPCONLEN DS F The length of the duplexing controls        00618000
STRBSTRDETAIL_LEN EQU *-STRBSTRDETAIL                                   00619000
.L000E   ANOP                                                           00620000
         AIF   ('&STRBSTRDETAIL1' EQ 'NO').L0012                        00621000
         AIF   ('&DSECT' EQ 'YES').L0013                                00622000
         AIF   ('&STRBSTRDETAIL1' NE 'YES').L0012                       00623000
STRBSTRDETAIL1 DS 0F                                                    00624000
         AGO   .L0014                                                   00625000
.L0013   ANOP                                                           00626000
STRBSTRDETAIL1 DSECT                                                    00627000
.L0014   ANOP                                                           00628000
         DS    CL60      Mapped by StrBStrDetail                        00629000
STRBSTRDETAILEXTSTRCNTL@ DS A Pointer to the extended structure        *00630000
                         controls in the answer area. The controls can *00631000
                         be mapped by the DlicExtStructureControls     *00632000
                         mapping found in IXLYDLIC if the structure is *00633000
                         a list structure and by the                   *00634000
                         DcacExtStructureControls mapping found in     *00635000
                         IXLYDCAC if the structure is a cache          *00636000
                         structure                                      00637000
STRBSTRDETAILEXTSTRCNTLLEN DS F Length of the extended structure       *00638000
                         controls                                       00639000
STRBSTRDETAIL1_LEN EQU *-STRBSTRDETAIL1                                 00640000
.L0012   ANOP                                                           00641000
         AIF   ('&STRBSTRDETAIL2' EQ 'NO').L0015                        00642000
         AIF   ('&DSECT' EQ 'YES').L0016                                00643000
         AIF   ('&STRBSTRDETAIL2' NE 'YES').L0015                       00644000
STRBSTRDETAIL2 DS 0F                                                    00645000
         AGO   .L0017                                                   00646000
.L0016   ANOP                                                           00647000
STRBSTRDETAIL2 DSECT                                                    00648000
.L0017   ANOP                                                           00649000
         DS    CL68      Mapped by StrbStrDetail1                       00650000
STRBSTRDETAILUSRSTRCNTL2@ DS A Pointer to the user structure controls  *00651000
                         2.                                             00652000
STRBSTRDETAILUSRSTRCNTL2LEN DS F Length of the user structure controls *00653000
                         2. Or zero if the user structure controls are *00654000
                         not applicable or not requested.               00655000
STRBSTRDETAIL2_LEN EQU *-STRBSTRDETAIL2                                 00656000
.L0015   ANOP                                                           00657000
         AIF   ('&STRBDETAIL' EQ 'NO').L0018                            00658000
         AIF   ('&DSECT' EQ 'YES').L0019                                00659000
         AIF   ('&STRBDETAIL' NE 'YES').L0018                           00660000
.L0019   ANOP                                                           00661000
*                                                                       00662000
* ****************************************************************** *  00663000
* *                                                                  *  00664000
* *             Mapping of the table entry for:                      *  00665000
* *                                                                  *  00666000
* *             TYPE(CLASS)     CLASSLEVEL(DETAIL)                   *  00667000
* *             TYPE(LISTNUM)   LISTNUMLEVEL(DETAIL)                 *  00668000
* *             TYPE(EVENTQS)      EQLEVEL(DETAIL)              @01A *  00669000
* *                                                                  *  00670000
* *  Use this mapping when                                           *  00671000
* *        StrBTableEntryType = StrBTableEntryDetail                 *  00672000
* *                                                                  *  00673000
* ****************************************************************** *  00674000
*                                                                       00675000
*                                                                       00676000
         AIF   ('&DSECT' EQ 'YES').L001A                                00677000
STRBDETAIL DS  0F                                                       00678000
         AGO   .L001B                                                   00679000
.L001A   ANOP                                                           00680000
STRBDETAIL DSECT                                                        00681000
.L001B   ANOP                                                           00682000
STRBDETAILVALUE DS F     Value of the CLASS, LISTNUM or EVENTQS. See   *00683000
                         StrbDetailFlags to determine if this value is *00684000
                         a storage class, castout class, list number   *00685000
                         value or connection id.                        00686000
STRBDETAILNUMENTRIES DS F Number of entries dumped for the CLASS,      *00687000
                         LISTNUM or EVENTQS. NOTE: If the              *00688000
                         STRBDETAILCOMPLETE bit is not set, this       *00689000
                         number will not be valid                       00690000
STRBDETAILFLAGS DS B                                                    00691000
*  Bit definitions:                                                     00692000
STRBDETAILCOMPLETE EQU X'80' Indicates that all the entries were       *00693000
                         dumped for the CLASS, LISTNUM, or all of the  *00694000
                         event monitor controls were dumped for an     *00695000
                         event queue                                    00696000
STRBDETAILCOC EQU X'40'  0 => This is not a castout class entry 1 =>   *00697000
                         This is a castout class entry                  00698000
STRBDETAILSTG EQU X'20'  0 => This is not a storage class entry 1 =>   *00699000
                         This is a storage class entry                  00700000
STRBDETAILLNM EQU X'10'  0 => This is not a list number entry 1 =>     *00701000
                         This is a list number entry                    00702000
STRBDETAILEQC EQU X'08'  0 => This is not an event queue (EVENTQS)     *00703000
                         entry 1 => This is an event queue (EVENTQS)   *00704000
                         entry                                          00705000
         DS    CL3       reserved                                       00706000
         DS    F         Reserved                                       00707000
STRBDETAILCNTL@ DS A     Pointer to the CLASS, LISTNUM or event queue  *00708000
                         controls found in the answer area. The        *00709000
                         controls can be mapped by the Dccc mapping    *00710000
                         found in IXLYDCCC if the controls are cast    *00711000
                         out class controls. The controls can be       *00712000
                         mapped by the Dscc mapping found in IXLYDSCC  *00713000
                         if the controls are storage class controls.   *00714000
                         The controls can be mapped by the Dlc mapping *00715000
                         found in IXLYDLC if the controls are list     *00716000
                         controls. The controls can be mapped by the    00717000
*                        Deqc mapping found in IXLYDEQC if the         *00718000
                         controls are event queue controls.             00719000
STRBDETAILCNTLLEN DS F   Length of the controls                         00720000
         DS    CL12      reserved for alignment                         00721000
STRBDETAIL_LEN EQU *-STRBDETAIL                                         00722000
.L0018   ANOP                                                           00723000
         AIF   ('&STRBEMCDETAIL' EQ 'NO').L001C                         00724000
         AIF   ('&DSECT' EQ 'YES').L001D                                00725000
         AIF   ('&STRBEMCDETAIL' NE 'YES').L001C                        00726000
.L001D   ANOP                                                           00727000
*                                                                       00728000
* ****************************************************************** *  00729000
* *                                                                  *  00730000
* *             Mapping of the table entry for:                      *  00731000
* *                                                                  *  00732000
* *             TYPE(EMCONTROLS) EMCLEVEL(EMC)                       *  00733000
* *             TYPE(EVENTQS)     EQLEVEL(EMC)                       *  00734000
* *                                                                  *  00735000
* *  Use this mapping when                                           *  00736000
* *        StrBTableEntryType =  StrBTableEntryEMCDetail             *  00737000
* *                                                                  *  00738000
* ****************************************************************** *  00739000
*                                                                       00740000
*                                                                       00741000
         AIF   ('&DSECT' EQ 'YES').L001E                                00742000
STRBEMCDETAIL DS 0F                                                     00743000
         AGO   .L001F                                                   00744000
.L001E   ANOP                                                           00745000
STRBEMCDETAIL DSECT                                                     00746000
.L001F   ANOP                                                           00747000
STRBEMCDETAILVALUE DS F  Value of the connection id or the list number *00748000
                         associated with event monitor controls. See   *00749000
                         StrBEMCDetailFlags to determine if this value *00750000
                         is a connection id or a list number value      00751000
STRBEMCDETAILNUMENTRIES DS F Number of event monitor controls dumped   *00752000
                         for the connection id or the list number. If  *00753000
                         the StrBEMCDetailComplete bit is not set,     *00754000
                         this number will not be valid                  00755000
STRBEMCDETAILFLAGS DS B                                                 00756000
*  Bit definitions:                                                     00757000
STRBEMCDETAILCOMPLETE EQU X'80' 1 indicates that all the event monitor *00758000
                         controls were dumped for the connection id or *00759000
                         list number                                    00760000
STRBEMCDETAILEMC EQU X'40' 0 => This is not an event monitor controls  *00761000
                         (EMCONTROLS) entry 1 => This is an event      *00762000
                         monitor controls (EMCONTROLS) entry            00763000
STRBEMCDETAILEQC EQU X'20' 0 => This is not an event queue (EVENTQS)   *00764000
                         entry 1 => This is an event queue (EVENTQS)   *00765000
                         entry                                          00766000
         DS    CL3       reserved                                       00767000
         DS    F         Reserved                                       00768000
STRBEMCDETAILEMC@ DS A   Pointer to event monitor controls in the      *00769000
                         answer area mapped by DEmc mapping found in   *00770000
                         IXLYDDIB                                       00771000
STRBEMCDETAILEMCLEN DS F Length of the event monitor controls           00772000
         DS    CL8       reserved for alignment                         00773000
STRBEMCDETAIL_LEN EQU *-STRBEMCDETAIL                                   00774000
.L001C   ANOP                                                           00775000
         AIF   ('&STRBENTRY' EQ 'NO').L0020                             00776000
         AIF   ('&DSECT' EQ 'YES').L0021                                00777000
         AIF   ('&STRBENTRY' NE 'YES').L0020                            00778000
.L0021   ANOP                                                           00779000
*                                                                       00780000
* ****************************************************************** *  00781000
* *                                                                  *  00782000
* *             Mapping of the table entry for:                      *  00783000
* *                                                                  *  00784000
* *             TYPE(CLASS)     CLASSLEVEL(ENTRY)                    *  00785000
* *             TYPE(LISTNUM)   LISTNUMLEVEL(ENTRY)                  *  00786000
* *             TYPE(ENTRY)                                          *  00787000
* *                                                                  *  00788000
* *  Use this mapping when                                           *  00789000
* *        StrBTableEntryType = StrBTableEntryEntry                  *  00790000
* *                                                                  *  00791000
* ****************************************************************** *  00792000
*                                                                       00793000
*                                                                       00794000
         AIF   ('&DSECT' EQ 'YES').L0022                                00795000
STRBENTRY DS   0F                                                       00796000
         AGO   .L0023                                                   00797000
.L0022   ANOP                                                           00798000
STRBENTRY DSECT                                                         00799000
.L0023   ANOP                                                           00800000
STRBENTRYCNTL@ DS A      Pointer to the entry control information in   *00801000
                         the answer area. The entry control            *00802000
                         information can be mapped by the DDil mapping *00803000
                         in the IXLYDDIB macro if the structure is a   *00804000
                         list structure or by the DDic mapping in the  *00805000
                         IXLYDDIB macro if the structure is a cache    *00806000
                         structure.                                     00807000
STRBENTRYCNTLLEN DS F    Length of the entry control information        00808000
STRBENTRYEDATA@ DS A     Pointer to the entry's entry data in the      *00809000
                         answer area NOTE: IF no entry data was        *00810000
                         returned, the pointer to the entry data in    *00811000
                         the answer area will be zero                   00812000
STRBENTRYTOTALEDATALEN DS F Total length of entry data                  00813000
STRBENTRYEDATALEN DS F   Length of the entry data returned NOTE: If no *00814000
                         entry data was returned, the length will be   *00815000
                         set to zero                                    00816000
STRBENTRYEDATALENLEFT2PROC DS F Length of entry data left to process   *00817000
                         to retrieve all of the entry data associated  *00818000
                         with this entry. This variable can be used to *00819000
                         allocate a bigger answer area so that the     *00820000
                         remainder of this entry's entry data can be   *00821000
                         returned all at once before proceeding to the *00822000
                         next entry, if one exists                      00823000
STRBENTRYADJ@ DS A       Pointer to the entry's adjunct information in *00824000
                         the answer area NOTE: IF no adjunct data was  *00825000
                         returned, the pointer to the adjunct data in  *00826000
                         the answer area will be zero                   00827000
STRBENTRYADJLEN DS F     Length of the adjunct data NOTE: If no        *00828000
                         adjunct data was returned, the length will be *00829000
                         set to zero                                    00830000
STRBENTRYPOSVALUE DS F   Entry position of the entry in the class or   *00831000
                         listnum. If the StrBKeyPosValue is On, this   *00832000
                         is the entry position of the entry within the *00833000
                         requested entrykey NOTE: If this is from a    *00834000
                         TYPE(ENTRY) request, the field is invalid      00835000
STRBENTRYFLAGS DS B                                                     00836000
*  Bit definitions:                                                     00837000
STRBENTRYEDATASERIALIZED EQU X'80' Indicates whether the entry data    *00838000
                         was dumped serialized                          00839000
STRBENTRYADJDSERIALIZED EQU X'40' Indicates whether the adjunct data   *00840000
                         was dumped serialized                          00841000
STRBPARTENTRYDATA EQU X'20' 0 => All of the entry data that could fit  *00842000
                         did make it out into the answer area 1 => All *00843000
                         of the entry data was not able to be put into *00844000
                         the answer area The reason for this is        *00845000
                         because there was an access error while       *00846000
                         retrieving the entry data. NOTE: this bit     *00847000
                         will only be valid if StrBEntryEDataReq is on  00848000
STRBENTRYEDATAREQ EQU X'10' Indicates whether the entry data was       *00849000
                         requested to be returned on the IXLZSTR macro *00850000
                         NOTE: Entry data may be partially returned    *00851000
                         due to insufficient space in the answer area  *00852000
                         or not returned due to failure to get the     *00853000
                         entry data written out to the dump data set.  *00854000
                         Please check the return code and reason codes *00855000
                         from the IXLZSTR service and the fields in    *00856000
                         this mapping, StrBEntry, to check that state  *00857000
                         of the entrydata retrieval                     00858000
STRBENTRYADJDREQ EQU X'08' Indicates whether the adjunct data was      *00859000
                         requested to be returned on the IXLZSTR macro *00860000
                         NOTE: Adjunct data may not be returned due to *00861000
                         a failure to get it written out to the dump   *00862000
                         data set. Please check the fields in this     *00863000
                         mapping, StrBEntry, to insure that the        *00864000
                         adjunct data was returned                      00865000
STRBENTRYONSCM EQU X'04' For a TYPE(LISTNUM) request, indicates        *00866000
                         whether the entry resides in coupling         *00867000
                         facility real storage or storage class        *00868000
                         memory. 0 => the entry represented by this    *00869000
                         StrBEntry table entry resides in coupling     *00870000
                         facility real storage. 1 => the entry         *00871000
                         represented by this StrBEntry table entry     *00872000
                         resides in coupling facility storage class    *00873000
                         memory. No entry control information, adjunct *00874000
                         data or entry data is returned                 00875000
STRBENTRYEDATADECRYPTERR EQU X'02' Indicates whether encrypted entry   *00876000
                         data was decrypted. Valid when                *00877000
                         StrBEntryEDataReq and                         *00878000
                         StrBStrSummaryStrEncrypted are set to 1. 0 => *00879000
                         Entry data decryption was successful 1 =>     *00880000
                         Entry data decryption failed. Entry data is   *00881000
                         not returned in the answer area for the entry *00882000
                         when decryption failed                         00883000
STRBENTRYADJDDECRYPTERR EQU X'01' Indicates whether encrypted adjunct  *00884000
                         data was decrypted. Valid when                *00885000
                         StrBEntryAdjDReq and                          *00886000
                         StrBStrSummaryStrEncrypted are set to 1. 0 => *00887000
                         Adjunct data decryption was successful 1 =>   *00888000
                         Adjunct data decryption failed. Adjunct data  *00889000
                         is not returned for the entry in the answer   *00890000
                         area when decryption failed                    00891000
STRBENTRYFLAGS2 DS B     Flag Byte 2 - NOTE: If this is from a         *00892000
                         TYPE(ENTRY) request, the field is invalid      00893000
*  Bit definitions:                                                     00894000
STRBKEYPOSVALUE EQU X'80' 0 => Entry position found in the             *00895000
                         StrBEntryPosValue is the entry position in    *00896000
                         the total list of entries 1 => Entry position *00897000
                         found in the StrBEntryPosValue is the entry   *00898000
                         position in the list of entries with the      *00899000
                         requested entrykey NOTE: To find the entrykey *00900000
                         that was requested, map the DDil mapping on   *00901000
                         the pointer to the entry controls in this     *00902000
                         entry and look at the value of the            *00903000
                         DDilLstEntKey field                            00904000
         DS    CL2       reserved for alignment                         00905000
         DS    CL16      reserved for expansion                         00906000
*                                                                       00907000
* ****************************************************************** *  00908000
* *                                                                  *  00909000
* *            Structure Type Constants                         @P2A *  00910000
* *                                                                  *  00911000
* ****************************************************************** *  00912000
*                                                                       00913000
*                                                                       00914000
STRBSTRTYPELIST EQU X'03' List Structure - External                     00915000
STRBSTRTYPECACHE EQU X'04' Cache Structure - External                   00916000
*                                                                       00917000
* ****************************************************************** *  00918000
* *                                                                  *  00919000
* *            Length constants for the mappings                     *  00920000
* *                                                                  *  00921000
* ****************************************************************** *  00922000
*                                                                       00923000
*                                                                       00924000
STRBRETCODESUCC EQU 0    Successful Completion - IXLZSTR returned all  *00925000
                         requested data                                 00926000
STRBRETCODEMOREDATA EQU 4 Successful Completion - Additional data      *00927000
                         available but not returned                     00928000
STRBRETCODENODATA EQU 8  No data returned in ANSAREA                    00929000
STRBRETCODEENVERR EQU 12 Environmental Error                            00930000
STRBRETCODEFAIL EQU 16   Failure in IXLZSTR Processing                  00931000
*                                                                       00932000
* ********************************************************************  00933000
* *                                                                  *  00934000
* *          Reason Codes from the IXLZSTR Macro Service             *  00935000
* *          for when the return code is StrBRetCodeSucc             *  00936000
* *                                                                  *  00937000
* ********************************************************************  00938000
*                                                                       00939000
*                                                                       00940000
STRBRSNCODESUCC EQU 0    Successful Completion - IXLZSTR returned all  *00941000
                         requested data                                 00942000
*                                                                       00943000
* ********************************************************************  00944000
* *                                                                  *  00945000
* *          Reason Codes from the IXLZSTR Macro Service             *  00946000
* *        for when the return code is StrBRetCodeMoreData           *  00947000
* *                                                                  *  00948000
* ********************************************************************  00949000
*                                                                       00950000
*                                                                       00951000
STRBRSNCODEANSANOTLGE EQU 4 ANSAREA was not large enough to contain    *00952000
                         the data to be returned by IXLZSTR. To        *00953000
                         retrieve the remainder of the data, invoke    *00954000
                         IXLZSTR again with the same keywords and the  *00955000
                         RESTOKEN as input to the macro                 00956000
*                                                                       00957000
* ********************************************************************  00958000
* *                                                                  *  00959000
* *          Reason Codes from the IXLZSTR Macro Service             *  00960000
* *         for when the return code is StrBRetCodeNoData            *  00961000
* *                                                                  *  00962000
* ********************************************************************  00963000
*                                                                       00964000
*                                                                       00965000
STRBRSNCODENOSTRNAME EQU 4 The STRNAME specified on the IXLZSTR macro  *00966000
                         does not appear in the dump                    00967000
STRBRSNCODENOSTRDUMPID EQU 8 The STRNAME specified on the IXLZSTR      *00968000
                         macro does appear in the dump, but the        *00969000
                         STRDUMPID does not appear in the dump          00970000
STRBRSNCODENOFACDATA EQU 12 No coupling facility data appears in the   *00971000
                         dump                                           00972000
STRBRSNCODENOTMINSTOR EQU 16 ANSAREA specified on the IXLZSTR macro    *00973000
                         does not meet the minimum storage requirement *00974000
                         for the request                                00975000
STRBRSNCODENOATTRSTR EQU 20 The data does not appear in the dump       *00976000
                         because the attributes of the requested data  *00977000
                         does not match the attributes of the          *00978000
                         structure type                                 00979000
STRBRSNCODEINVALIDRGE EQU 24 The range specification on the IXLZSTR    *00980000
                         macro is invalid. The starting value is       *00981000
                         greater than the ending value                  00982000
*                                                                       00983000
* ********************************************************************  00984000
* *                                                                  *  00985000
* *          Reason Codes from the IXLZSTR Macro Service             *  00986000
* *         for when the return code is StrBRetCodeEnvErr            *  00987000
* *                                                                  *  00988000
* ********************************************************************  00989000
*                                                                       00990000
*                                                                       00991000
STRBRSNCODENOSTOR EQU 4  Unable to obtain system storage                00992000
*                                                                       00993000
* ********************************************************************  00994000
* *                                                                  *  00995000
* *          Reason Codes from the IXLZSTR Macro Service             *  00996000
* *          for when the return code is StrBRetCodeFail             *  00997000
* *                                                                  *  00998000
* ********************************************************************  00999000
*                                                                       01000000
*                                                                       01001000
STRBRSNCODENOREADS EQU 4 Some data could not be accessed in the dump   *01002000
                         data set                                       01003000
STRBENTRY_LEN EQU *-STRBENTRY                                           01004000
.L0020   ANOP                                                           01005000
         AIF   ('&ZCBPRINT' EQ 'NO').P3                                 01006000
         AIF   ('&LIST' EQ 'YES').P4                                    01007000
.P3      ANOP                                                           01008000
         POP   PRINT                                                    01009000
.P4      ANOP                                                           01010000
.P_EXIT  ANOP                                                           01011000
         MEND                                                           01012000
**/ IXLZSTRB_2:;                                                        01013000
* %IXLZSTRB_INCLUDED = 'YES';                                           01014000
* %DCL ZCBPRINT CHAR EXT;                                               01015000
* %DEACTIVATE ZCBPRINT;                                                 01016000
* %DCL IXLZSTRB_LIST CHAR EXT;                                          01017000
* %DEACTIVATE IXLZSTRB_LIST;                                            01018000
* %IF IXLZSTRB_LIST = 'NO' !                                            01019000
*    ZCBPRINT = 'NO' %THEN                                              01020000
* %DO;                                                                  01021000
*   @LIST PUSH NOECHO;                                                  01022000
*   @LIST NOASSEMBLE NOECHO;                                            01023000
*   @LIST OFF C NOECHO;                                                 01024000
* %END;                                                                 01025000
*/* Start of PL/X Source                                             */ 01026000
*                                                                       01027000
* %IF STRBHEADER_ATTR = '' %THEN                                        01028000
*   %STRBHEADER_ATTR = 'BASED';                                         01029000
*                                                                       01030000
* %IF STRBSUMMARY_ATTR = '' %THEN                                       01031000
*   %STRBSUMMARY_ATTR = 'BASED';                                        01032000
*                                                                       01033000
* %IF STRBDETAIL_ATTR = '' %THEN                                        01034000
*   %STRBDETAIL_ATTR = 'BASED';                                         01035000
*                                                                       01036000
* %IF STRBEMCDETAIL_ATTR = '' %THEN     /*                       @01A*/ 01037000
*   %STRBEMCDETAIL_ATTR = 'BASED';      /*                       @01A*/ 01038000
*                                                                       01039000
* %IF STRBENTRY_ATTR = '' %THEN                                         01040000
*   %STRBENTRY_ATTR = 'BASED';                                          01041000
*                                                                       01042000
* %IF STRBSTRSUMMARY_ATTR = '' %THEN                                    01043000
*   %STRBSTRSUMMARY_ATTR = 'BASED';                                     01044000
*                                                                       01045000
* %IF STRBSTRDETAIL_ATTR = '' %THEN                                     01046000
*   %STRBSTRDETAIL_ATTR = 'BASED';                                      01047000
*                                                                       01048000
*/********************************************************************/ 01049000
*/*                                                                  */ 01050000
*/*               Mapping for the ANSAREA Header                     */ 01051000
*/*                                                                  */ 01052000
*/********************************************************************/ 01053000
*                                                                       01054000
* Dcl 1 StrBHeader STRBHEADER_ATTR,     /* Mapping for the header       01055000
*                                          section of the answer area   01056000
*                                                                  */   01057000
*      3 StrBNumTableEntries fixed(32), /* Number of table entries */   01058000
*      3 StrBTableEntryLen fixed(32),   /* Length of the table entry.   01059000
*                                          For table entries that       01060000
*                                          point to other areas of the  01061000
*                                          answer area, i.e. control    01062000
*                                          information, the length      01063000
*                                          of the area that is pointed  01064000
*                                          to is included in the table  01065000
*                                          entry length                 01066000
*                                          NOTE - If the ENTRYDATA      01067000
*                                          keyword is specified on the  01068000
*                                          IXLZSTR macro, this field    01069000
*                                          will not include the length  01070000
*                                          of the entry data in the     01071000
*                                          total length.  The reason    01072000
*                                          for this is that two         01073000
*                                          different entries in the     01074000
*                                          answer area could have two   01075000
*                                          different entrydata lengths, 01076000
*                                          thus invalidating this       01077000
*                                          field.  To obtain the length 01078000
*                                          of the entrydata in the      01079000
*                                          answer area, see             01080000
*                                          StrbEntryEDataLen            01081000
*                                          in the StrbEntry entry.      01082000
*                                          If the ADJUNCT keyword is    01083000
*                                          specified on the IXLZSTR     01084000
*                                          macro, this field will not   01085000
*                                          include the length of the    01086000
*                                          adjunct data.  The reason    01087000
*                                          for this is that the         01088000
*                                          adjunct data may be          01089000
*                                          requested, but not in the    01090000
*                                          dump.  To obtain the length  01091000
*                                          of the adjunct data in the   01092000
*                                          answer area, see             01093000
*                                          STRbEntryAdjLen in the       01094000
*                                          StrbEntry            @P3C*/  01095000
*      3 StrBFirstTableEntry@ ptr(31),  /* Pointer to the first table   01096000
*                                          entry in the answer area */  01097000
*      3 StrBTableEntryType fixed(32),  /* Type of entries that are     01098000
*                                          mapped in the answer area */ 01099000
*      3 StrBStrInfo Char(StrBStrSummary_Len),                          01100000
*                                       /* Summary information about    01101000
*                                          the structure that was       01102000
*                                          specified on the IXLZSTR     01103000
*                                          request.                     01104000
*                                          This area will not be filled 01105000
*                                          in when the request is       01106000
*                                          TYPE(STRUCTURE)              01107000
*                                          STRLEVEL(SUMMARY) request.   01108000
*                                          This area can be mapped by   01109000
*                                          the StrBStrSummary mapping   01110000
*                                                                    */ 01111000
*      3 StrBStartRange  fixed(32),     /* If the StrbPosRange bit is   01112000
*                                          off, this variable will hold 01113000
*                                          the start of a range of      01114000
*                                          CLASS, LISTNUM, LOCKENTRIES, 01115000
*                                          USERCNTLS, EMCONTROLS, or    01116000
*                                          EVENTQS object values        01117000
*                                          specified on the IXLZSTR     01118000
*                                          macro.  If the StrbPosRange  01119000
*                                          bit is on, this variable     01120000
*                                          will hold the start of a     01121000
*                                          position range within a      01122000
*                                          requested CLASS or LISTNUM   01123000
*                                          value.  This value can be    01124000
*                                          found in StrBEntryValue      01125000
*                                          NOTE - This field will       01126000
*                                          only be valid if the TYPE    01127000
*                                          parameter on the IXLZSTR     01128000
*                                          macro is CLASS, LISTNUM,     01129000
*                                          LOCKENTRIES, USERCNTLS,      01130000
*                                          EMCONTROLS, or EVENTQS and   01131000
*                                          the StrBHeaderAll bit is     01132000
*                                          off                   @01C*/ 01133000
*      3 StrBEndRange    fixed(32),     /* If the StrbPosRange bit is   01134000
*                                          off, this variable will hold 01135000
*                                          the end of a range of        01136000
*                                          CLASS, LISTNUM, LOCKENTRIES, 01137000
*                                          USERCNTLS, EMCONTROLS, or    01138000
*                                          EVENTQS object values        01139000
*                                          specified on the IXLZSTR     01140000
*                                          macro.  If the StrbPosRange  01141000
*                                          bit is on, this variable     01142000
*                                          will hold the end of a       01143000
*                                          position range within a      01144000
*                                          requested CLASS or LISTNUM   01145000
*                                          value.  This value can be    01146000
*                                          found in StrBEntryValue      01147000
*                                          NOTE - This field will       01148000
*                                          only be valid if the TYPE    01149000
*                                          parameter on the IXLZSTR     01150000
*                                          macro is CLASS, LISTNUM,     01151000
*                                          LOCKENTRIES, USERCNTLS,      01152000
*                                          EMCONTROLS, or EVENTQS and   01153000
*                                          the StrBHeaderAll bit is     01154000
*                                          off                   @01C*/ 01155000
*      3 StrBHeaderObjectValue                                          01156000
*                       fixed(32), /* Value of the object the entries   01157000
*                                     were attempted to be retrieved    01158000
*                                     from.  See StrBHeaderFlags and    01159000
*                                     StrBHeaderFlags2 to determine     01160000
*                                     whether this value is a storage   01161000
*                                     class, castout class, list        01162000
*                                     number, or connection id.         01163000
*                                     NOTE: This field is only valid if 01164000
*                                     the request was a TYPE(CLASS)     01165000
*                                     CLASSLEVEL(ENTRY) request, a      01166000
*                                     TYPE(LISTNUM) LISTNUMLEVEL(ENTRY) 01167000
*                                     request, a TYPE(EMCONTROLS)       01168000
*                                     EMCLEVEL(EMC) request, or a       01169000
*                                     TYPE(EVENTQS) EQLEVEL(EMC)        01170000
*                                     request                    @01C*/ 01171000
*                                                                       01172000
*      3 StrbHeaderFlags   bit(8),      /* Flag Byte               */   01173000
*        5 StrbHeaderAll     bit(1),    /* 0 => Indicates a range was   01174000
*                                          specified                    01175000
*                                          1 => Indicates that all      01176000
*                                          of a class, listnum,         01177000
*                                          usercntls, lockentries,      01178000
*                                          emcontrols or eventqs was    01179000
*                                          specified.                   01180000
*                                          NOTE - This bit will         01181000
*                                          only be valid if the TYPE    01182000
*                                          parameter on the IXLZSTR     01183000
*                                          macro is CLASS, LISTNUM,     01184000
*                                          LOCKENTRIES, USERCNTLS,      01185000
*                                          EMCONTROLS, or EVENTQS       01186000
*                                                                @01C*/ 01187000
*        5 StrBPosRange      bit(1),  /* 0 => Indicates that SUMMARY    01188000
*                                        or DETAIL level information    01189000
*                                        was requested or STARTVAL      01190000
*                                        and or ENDVAL were specified   01191000
*                                        or defaulted to on the         01192000
*                                        IXLZSTR macro.                 01193000
*                                        StrBStartRange, StrBEndRange,  01194000
*                                        and StrBHeaderAll bits are     01195000
*                                        referencing ranges of CLASS    01196000
*                                        (when                          01197000
*                                        StrBObjRngCoc or StrBObjRngStg 01198000
*                                        are set), LISTNUM (when        01199000
*                                        StrBObjRngLnm is set),         01200000
*                                        LOCKENTRIES, USERCNTLS,        01201000
*                                        EMCONTROLS (when StrBObjRngEmc 01202000
*                                        is set) or EVENTQS (when       01203000
*                                        StrBObjRncEqc is set).         01204000
*                                        1 => Indicates that ENTRY      01205000
*                                        level, or ENTRY level          01206000
*                                        with STARTPOS and optionally   01207000
*                                        ENDPOS, or EMC level           01208000
*                                        information, was requested     01209000
*                                        for the object value specified 01210000
*                                        in StrBHeaderObjectValue.      01211000
*                                        For ENTRY level information,   01212000
*                                        StrBStartRange, StrBEndRange,  01213000
*                                        and StrBHeaderAll bits are     01214000
*                                        referencing ranges of entry    01215000
*                                        positions within a CLASS       01216000
*                                        (when StrBHeaderCoc or         01217000
*                                        StrBHeaderStg is set) or a     01218000
*                                        LISTNUM (when StrbHeaderLnm    01219000
*                                        is set).  For EMC level        01220000
*                                        information (StrBHeaderEmc     01221000
*                                        or StrBHeaderEqc is set),      01222000
*                                        StrBHeaderAll will be set      01223000
*                                        and StrBStartRange and         01224000
*                                        StrBEndRange do not apply.     01225000
*                                                                @01C*/ 01226000
*        5 StrBTailOrdProb bit(1),    /* If ENTRYKEY and ORDER(TAIL)    01227000
*                                        were specified on the IXLZSTR  01228000
*                                        macro and the dump of the      01229000
*                                        entries was partial, this bit  01230000
*                                        bit will be set to indicate    01231000
*                                        that the dump of the entrykey  01232000
*                                        may be partial because the     01233000
*                                        last entry dumped for this     01234000
*                                        object had the requested       01235000
*                                        entrykey                  */   01236000
*                                                                       01237000
*/* The following 3 bits only apply for TYPE(CLASS) CLASSLEVEL(ENTRY)*/ 01238000
*/* requests and for TYPE(LISTNUM) LISTNUMLEVEL(ENTRY) requests.     */ 01239000
*/* The object value these bits identify is located in the field     */ 01240000
*/* StrBHeaderObjectValue                                            */ 01241000
*                                                                       01242000
*        5 StrBHeaderCoc bit(1),      /* 0 => This object value in the  01243000
*                                        StrBHeaderObjectValue field is 01244000
*                                        not a castout class            01245000
*                                        1 => This object value in the  01246000
*                                        StrBHeaderObjectValue field is 01247000
*                                        a castout class             */ 01248000
*        5 StrBHeaderStg bit(1),      /* 0 => This object value in the  01249000
*                                        StrBHeaderObjectValue field is 01250000
*                                        not a storage class            01251000
*                                        1 => This object value in the  01252000
*                                        StrBHeaderObjectValue field is 01253000
*                                        a storage class             */ 01254000
*        5 StrBHeaderLnm bit(1),      /* 0 => This object value in the  01255000
*                                        StrBHeaderObjectValue field is 01256000
*                                        not a list number              01257000
*                                        1 => This object value in the  01258000
*                                        StrBHeaderObjectValue field is 01259000
*                                        a list number               */ 01260000
*        5 StrBTailPosRange bit(1),   /* 0 => The position range        01261000
*                                        specified is going from head   01262000
*                                        to tail order                  01263000
*                                        1 => The position range        01264000
*                                        specified is going from tail   01265000
*                                        to head order                  01266000
*                                        NOTE: This bit is valid only   01267000
*                                        if the StrBPosRange bit is     01268000
*                                        set                       */   01269000
*        5 *                 bit(1),    /* Reserved                */   01270000
*      3 StrbHeaderFlags2  bit(8),      /* Flag Byte2              */   01271000
*                                                                       01272000
*/* The following 3 bits only apply for TYPE(CLASS)                  */ 01273000
*/* CLASSLEVEL(SUMMARY) or CLASSLEVEL(DETAIL                         */ 01274000
*/* requests and for TYPE(LISTNUM)                                   */ 01275000
*/* LISTNUMLEVEL(SUMMARY) or LISTNUMLEVEL(DETAIL) requests.          */ 01276000
*/* The object ranges these bits identify are located in             */ 01277000
*/* StrBHeaderAll if all was requested or in StrBStartRange and      */ 01278000
*/* StrBEndRange if a range was requested                            */ 01279000
*                                                                       01280000
*        5 StrBObjRngCoc bit(1),      /* 0 => The range requested is    01281000
*                                        not a castout class            01282000
*                                        1 => The range requested is    01283000
*                                        a castout class             */ 01284000
*        5 StrBObjRngStg bit(1),      /* 0 => The range requested is    01285000
*                                        not a storage class            01286000
*                                        1 => The range requested is    01287000
*                                        a storage class             */ 01288000
*        5 StrBObjRngLnm bit(1),      /* 0 => The range requested is    01289000
*                                        not a list number              01290000
*                                        1 => The range requested is    01291000
*                                        a list number               */ 01292000
*                                                                       01293000
*/* The following 2 bits only apply for TYPE(EMCONTROLS)             */ 01294000
*/* EMCLEVEL(EMC) or TYPE(EVENTQS) EQLEVEL(EMC) requests.            */ 01295000
*/* The object value these bits identify is located in the field     */ 01296000
*/* StrBHeaderObjectValue                                            */ 01297000
*                                                                       01298000
*        5 StrBHeaderEmc bit(1),      /* 0 => The object value in the   01299000
*                                        StrBHeaderObjectValue field is 01300000
*                                        not a list number              01301000
*                                        1 => This object value in the  01302000
*                                        StrBHeaderObjectValue field is 01303000
*                                        a list number           @01A*/ 01304000
*        5 StrBHeaderEqc bit(1),      /* 0 => The object value in the   01305000
*                                        StrBHeaderObjectValue field is 01306000
*                                        not a connection id            01307000
*                                        1 => This object value in the  01308000
*                                        StrBHeaderObjectValue field is 01309000
*                                        a connection id         @01A*/ 01310000
*                                                                       01311000
*/* The following 2 bits only apply for TYPE(EMCONTROLS)             */ 01312000
*/* EMCLEVEL(SUMMARY) or TYPE(EVENTQS) EQLEVEL(DETAIL) requests.     */ 01313000
*/* The object ranges these bits identify are located in             */ 01314000
*/* StrBHeaderAll if all was requested or in StrBStartRange and      */ 01315000
*/* StrBEndRange if a range was requested                            */ 01316000
*                                                                       01317000
*        5 StrBObjRngEmc bit(1),      /* 0 => The range requested is    01318000
*                                        not a list number              01319000
*                                        1 => The range requested is    01320000
*                                        a list number           @01A*/ 01321000
*        5 StrBObjRngEqc bit(1),      /* 0 => The range requested is    01322000
*                                        not a connection id            01323000
*                                        1 => The range requested is    01324000
*                                        a connection id         @01A*/ 01325000
*        5 *                 bit(1),    /* Reserved              @01C*/ 01326000
*      3 * char(2),                                                     01327000
*      3 * char(0);                                                     01328000
*                                                                       01329000
*/*******************************************************************/  01330000
*/*                                                                 */  01331000
*/*     Constants for the table entry                               */  01332000
*/*     These constants will be used in StrBTableEntryType          */  01333000
*/*                                                                 */  01334000
*/*******************************************************************/  01335000
*                                                                       01336000
*Dcl StrBTableEntryStrSummary                                           01337000
*                  fixed(32) constant(1);  /* TYPE=STRUCTURE            01338000
*                                             STRLEVEL=SUMMARY entries  01339000
*                                             are in the answer area */ 01340000
*Dcl StrBTableEntryStrDetail                                            01341000
*                  fixed(32) constant(2); /* TYPE=STRUCTURE             01342000
*                                            STRLEVEL=DETAIL entries    01343000
*                                            are in the answer area  */ 01344000
*Dcl StrBTableEntrySummary                                              01345000
*                  fixed(32) constant(3); /* TYPE=CLASS                 01346000
*                                            CLASSLEVEL=SUMMARY or      01347000
*                                            TYPE=LISTNUM               01348000
*                                            LISTNUMLEVEL=SUMMARY or    01349000
*                                            TYPE=EMCONTROLS            01350000
*                                            EMCLEVEL=SUMMARY           01351000
*                                            entries are in the answer  01352000
*                                            area                @01C*/ 01353000
*Dcl StrBTableEntryDetail                                               01354000
*                  fixed(32) constant(4); /* TYPE=CLASS                 01355000
*                                            CLASSLEVEL=DETAIL or       01356000
*                                            TYPE=LISTNUM               01357000
*                                            LISTNUMLEVEL=DETAIL or     01358000
*                                            TYPE=EVENTQS               01359000
*                                            EMCLEVEL=DETAIL            01360000
*                                            entries are in the answer  01361000
*                                            area                @01C*/ 01362000
*Dcl StrBTableEntryEntry                                                01363000
*                  fixed(32) constant(5); /* TYPE=CLASS                 01364000
*                                            CLASSLEVEL=ENTRY,          01365000
*                                            TYPE=LISTNUM               01366000
*                                            LISTNUMLEVEL=ENTRY, or     01367000
*                                            TYPE=ENTRY entries are     01368000
*                                            in the answer area      */ 01369000
*Dcl StrBTableEntryLock                                                 01370000
*                  fixed(32) constant(6); /* TYPE=LOCKENTRIES           01371000
*                                            entries are                01372000
*                                            in the answer area - Use   01373000
*                                            the DLte mapping in        01374000
*                                            IXLYDDIB to map the        01375000
*                                            entries                 */ 01376000
*Dcl StrBTableEntryDLucb                                                01377000
*                  fixed(32) constant(7); /* TYPE=USERCNTLS entries     01378000
*                                            are in                     01379000
*                                            the answer area and the    01380000
*                                            structure requested is a   01381000
*                                            list structure - Use the   01382000
*                                            DLucb mapping in IXLYDDIB  01383000
*                                            to map the entries      */ 01384000
*Dcl StrBTableEntryDLccb                                                01385000
*                  fixed(32) constant(8);  /* TYPE=USERCNTLS entries    01386000
*                                            are in                     01387000
*                                            the answer area and the    01388000
*                                            structure requested is a   01389000
*                                            cache structure - Use the  01390000
*                                            DLccb mapping in IXLYDDIB  01391000
*                                            to map the entries      */ 01392000
*Dcl StrBTableEntryEMCDetail                                            01393000
*                  fixed(32) constant(9); /* TYPE=EMCONTROLS            01394000
*                                            EMCLEVEL=EMC or            01395000
*                                            TYPE=EVENTQS               01396000
*                                            EMCLEVEL=EMC               01397000
*                                            entries are in the answer  01398000
*                                            area                @01A*/ 01399000
*                                                                       01400000
*/*******************************************************************/  01401000
*/*                                                                 */  01402000
*/*             Mapping of the table entry for:                     */  01403000
*/*                                                                 */  01404000
*/*             TYPE(STRUCTURE) STRLEVEL(SUMMARY)                   */  01405000
*/*                                                                 */  01406000
*/*  Use this mapping when                                          */  01407000
*/*        StrBTableEntryType = StrBTableEntryStrSummary            */  01408000
*/*                                                                 */  01409000
*/*******************************************************************/  01410000
*                                                                       01411000
*Dcl                                                                    01412000
*  1 StrBStrSummary STRBSTRSUMMARY_ATTR,                                01413000
*    3 StrBStrSummaryName char(16),    /* Structure name             */ 01414000
*    3 StrBStrSummaryType fixed(8),    /* Structure type             */ 01415000
*    3 * char(1),                      /* reserved               @D2C*/ 01416000
*    3 StrBStrSummaryStrDumpID fixed(16), /* Structure Dump ID   @D2A*/ 01417000
*    3 StrBStrSummaryDumpRsn fixed(32), /* Reason code, if dump         01418000
*                                         status is other than          01419000
*                                         complete - the dump reason    01420000
*                                         codes are defined in the      01421000
*                                         IXLYSTRC mapping           */ 01422000
*    3 StrBStrSummaryHdwNd char(32),   /* Facility Node descriptor   */ 01423000
*    3 StrBStrSummaryCFName char(8),   /* Facility Name          @D4C*/ 01424000
*    3 StrBStrSummaryIncidentToken char(32), /* Incident token   @L1A*/ 01425000
*    3 StrBStrSummaryFlags Bit(8),     /* Flag Byte                  */ 01426000
*      5 StrBStrSummaryFlgComplete bit(1),/* Indicates that the dump of 01427000
*                                         the lock table or the user    01428000
*                                         controls was complete         01429000
*                                         NOTE:  This field only        01430000
*                                         applies when a user requests  01431000
*                                         LOCKENTRIES or USERCNTLS      01432000
*                                         information                */ 01433000
*      5 StrBStrSummaryStrInRebld  bit(1), /* Indicates that the        01434000
*                                             the structure is in       01435000
*                                             the process of rebuild    01436000
*                                                                @D3A*/ 01437000
*      5 StrBStrSummaryRebldOldStr bit(1), /* Indicates that the        01438000
*                                            structure information      01439000
*                                            pertains to the OLD        01440000
*                                            structure                  01441000
*                                            NOTE: Bit is only valid if 01442000
*                                            the                        01443000
*                                            StrBStrSummaryStrInRebld   01444000
*                                            is set              @D3A*/ 01445000
*      5 StrBStrSummaryRebldNewStr bit(1), /* Indicates that the        01446000
*                                            structure information      01447000
*                                            pertains to the NEW        01448000
*                                            structure                  01449000
*                                            NOTE: Bit is only valid if 01450000
*                                            the                        01451000
*                                            StrBStrSummaryStrInRebld   01452000
*                                            is set              @D3A*/ 01453000
*      5 StrBStrSummaryRebldDuplexStr bit(1), /* ON indicates the       01454000
*                                            structure rebuild is a     01455000
*                                            duplexing rebuild. OFF     01456000
*                                            indicates the structure    01457000
*                                            rebuild is a normal        01458000
*                                            rebuild.                   01459000
*                                            NOTE: Bit is only valid if 01460000
*                                            the                        01461000
*                                            StrBStrSummaryStrInRebld   01462000
*                                            is set              @02A*/ 01463000
*      5 StrBStrSummaryRebldMethodStr bit(1), /* ON indicates the       01464000
*                                            structure rebuild is       01465000
*                                            system managed. OFF        01466000
*                                            indicates the structure    01467000
*                                            rebuild is user managed.   01468000
*                                            NOTE: Bit is only valid if 01469000
*                                            the                        01470000
*                                            StrBStrSummaryStrInRebld   01471000
*                                            is set              @L2A*/ 01472000
*      5 StrBStrSummaryStrEncrypted Bit(1), /* ON indicates that data   01473000
*                                            in this structure instance 01474000
*                                            is encrypted        @L5A*/ 01475000
*      5 *  bit(1),                    /* Reserved               @L5C*/ 01476000
*    3 * char(3),                      /* Reserved                   */ 01477000
*    3 StrBStrSummaryCflevel fixed(32),   /* Coupling facility          01478000
*                                            operational level of       01479000
*                                            facility in which          01480000
*                                            structure is allocated     01481000
*                                                                @P6C*/ 01482000
*    3 * char(0);                                                       01483000
*                                                                       01484000
*/*******************************************************************/  01485000
*/*                                                                 */  01486000
*/*             Mapping of the table entry for:                     */  01487000
*/*                                                                 */  01488000
*/*             TYPE(CLASS)     CLASSLEVEL(SUMMARY)                 */  01489000
*/*             TYPE(LISTNUM)   LISTNUMLEVEL(SUMMARY)               */  01490000
*/*             TYPE(EMCONTROLS)  EMCLEVEL(SUMMARY)             @01A*/  01491000
*/*                                                                 */  01492000
*/*  Use this mapping when                                          */  01493000
*/*        StrBTableEntryType = StrBTableEntrySummary               */  01494000
*/*                                                                 */  01495000
*/*******************************************************************/  01496000
*                                                                       01497000
*Dcl 1 StrBSummary STRBSUMMARY_ATTR,                                    01498000
*      3 StrBSummaryValue fixed(32),  /* Value of the CLASS or          01499000
*                                        LISTNUM or EMCONTROLS.         01500000
*                                        See StrbSummaryFlags           01501000
*                                        to determine if this value is  01502000
*                                        a storage class, castout       01503000
*                                        class, or list number value */ 01504000
*      3 StrBSummaryFlags bit(8),                                       01505000
*        5 StrBSummaryComplete bit(1), /* Indicates that dump is        01506000
*                                        complete for all the entries   01507000
*                                        in the CLASS or LISTNUM        01508000
*                                        or all the event monitor       01509000
*                                        controls (EMCONTROLS)          01510000
*                                        associated with the list       01511000
*                                        number.                 @01C*/ 01512000
*        5 StrBSummaryCoc bit(1),     /* 0 => This is not a castout     01513000
*                                        class entry                    01514000
*                                        1 => This is a castout class   01515000
*                                        entry                   */     01516000
*        5 StrBSummaryStg bit(1),     /* 0 => This is not a storage     01517000
*                                        class entry                    01518000
*                                        1 => This is a storage class   01519000
*                                        entry                   */     01520000
*        5 StrBSummaryLnm bit(1),     /* 0 => This is not a list number 01521000
*                                        entry                          01522000
*                                        1 => This is a list number     01523000
*                                        entry                   */     01524000
*        5 StrBSummaryEmc bit(1),     /* 0 => This is not an event      01525000
*                                        monitor controls entry.        01526000
*                                        1 => This is an event          01527000
*                                        monitor controls               01528000
*                                        (EMCONTROLS) entry      @01A*/ 01529000
*        5 *           bit(3),        /* Reserved                @01C*/ 01530000
*      3 * char(3),                   /* reserved                  */   01531000
*      3 * char(4),                   /* reserved for alignment    */   01532000
*      3 * char(0);                                                     01533000
*                                                                       01534000
*/*******************************************************************/  01535000
*/*                                                                 */  01536000
*/*             Mapping of the table entry for:                     */  01537000
*/*                                                                 */  01538000
*/*             TYPE(STRUCTURE)  STRLEVEL(DETAIL)                   */  01539000
*/*                                                                 */  01540000
*/*  Use this mapping when                                          */  01541000
*/*        StrBTableEntryType = StrBTableEntryStrDetail             */  01542000
*/*                                                                 */  01543000
*/*******************************************************************/  01544000
*                                                                       01545000
*Dcl 1 StrBStrDetail STRBSTRDETAIL_ATTR,                                01546000
*      3 StrBStrDetailCntl@ ptr(31),     /* Pointer to the structure    01547000
*                                         controls in the answer area.  01548000
*                                         The                           01549000
*                                         controls can be mapped by the 01550000
*                                         DCac mapping found in         01551000
*                                         IXLYDCAC if the structure is  01552000
*                                         a cache structure, or the     01553000
*                                         controls can be mapped by the 01554000
*                                         DLic mapping found in         01555000
*                                         IXLYDLIC if the structure is  01556000
*                                         a list structure          */  01557000
*      3 StrBStrDetailCntlLen fixed(32), /* Length of the structure     01558000
*                                         controls                  */  01559000
*      3 StrBStrDetailARB@    ptr(31),   /* Pointer to the ARB in the   01560000
*                                           answer area.  The ARB can   01561000
*                                           be mapped by the ARB        01562000
*                                           mapping found in IHAARB.    01563000
*                                           The length of the ARB is    01564000
*                                           always one page.  If the    01565000
*                                           ARB is not present in the   01566000
*                                           dump, this pointer will be  01567000
*                                           zero                 @D1A*/ 01568000
*      3 StrBStrDetailARBLen  fixed(32), /* The length of the ARB       01569000
*                                                                @D1A*/ 01570000
*      3 StrBStrDetailARBNumRanges                                      01571000
*                             fixed(32), /* The number of ranges that   01572000
*                                           are in the ARB.  This       01573000
*                                           number should be used to    01574000
*                                           index through the ARB       01575000
*                                           ranges               @D1A*/ 01576000
*      3 StrBStrDetailARBLastRngProc                                    01577000
*                             fixed(32), /* The index of the last range 01578000
*                                           that was processed in the   01579000
*                                           ARB                  @D1A*/ 01580000
*      3 StrBStrDetailConname  char(16), /* name of connected user      01581000
*                                         whose registry information    01582000
*                                         was gathered              */  01583000
*      3 StrBStrDetailConID   fixed(16), /* Connection ID           */  01584000
*      3 StrBStrDetailFlags   Bit(8),    /* Structure Detail Flags  */  01585000
*        5  StrBStrDetailConNotFound                                    01586000
*                                 Bit(1),/* Indicates that the conname  01587000
*                                           or contoken specified for   01588000
*                                           this structure could not be 01589000
*                                           found in the policy when    01590000
*                                           the structure was dumped    01591000
*                                                                   */  01592000
*        5 StrBStrDetailStrMonopState Bit(1), /* ON indicates that the  01593000
*                                           structure was in the        01594000
*                                           monopolizing state at the   01595000
*                                           beginning of the dumping    01596000
*                                           process              @L6A*/ 01597000
*        5  *                     Bit(6),/* Reserved             @L6C*/ 01598000
*      3 *                     Char(1),  /* Reserved                */  01599000
*      3 StrBStrDetailScc@    ptr(31),   /* Pointer to the structure    01600000
*                                           copy controls in the answer 01601000
*                                           area.               @L2A*/  01602000
*      3 StrBStrDetailSccLen  fixed(32), /* The length of the structure 01603000
*                                           copy controls        @L2A*/ 01604000
*      3 StrBStrDetailDupCon@ ptr(31),   /* Pointer to the duplexing    01605000
*                                           controls data in the answer 01606000
*                                           area.               @L3A*/  01607000
*      3 StrBStrDetailDupConLen fixed(32), /* The length of the         01608000
*                                           duplexing controls   @L3A*/ 01609000
*      3 * char(0);                                                     01610000
*                                                                       01611000
*Dcl 1 StrBStrDetail1 STRBSTRDETAIL_ATTR,  /*                    @L4A*/ 01612000
*      3 * Char(Length(StrBStrDetail)),    /* Mapped by                 01613000
*                                             StrBStrDetail      @L4A*/ 01614000
*      3 StrBStrDetailExtStrCntl@ ptr(31), /* Pointer to the extended   01615000
*                                             structure controls in the 01616000
*                                             answer area. The controls 01617000
*                                             can be mapped by the      01618000
*                                             DlicExtStructureControls  01619000
*                                             mapping found in IXLYDLIC 01620000
*                                             if the structure is a     01621000
*                                             list structure and by the 01622000
*                                             DcacExtStructureControls  01623000
*                                             mapping found in IXLYDCAC 01624000
*                                             if the structure is a     01625000
*                                             cache structure    @L4A*/ 01626000
*      3 StrBStrDetailExtStrCntlLen  fixed(32), /* Length of the        01627000
*                                             extended structure        01628000
*                                             controls           @L4A*/ 01629000
*      3 * char(0);                                                     01630000
*   DECLARE                                                             01631000
*     1    StrbStrDetail2 STRBSTRDETAIL_ATTR, /*                 @03A*/ 01632000
*       3    *        CHAR(SIZE(StrbStrDetail1)), /* Mapped by          01633000
*                                      StrbStrDetail1            @03A*/ 01634000
*       3    StrbStrDetailUsrStrCntl2@ PTR(31), /* Pointer to the       01635000
*                                      user structure controls 2.       01636000
*                                                                @03A*/ 01637000
*       3    StrbStrDetailUsrStrCntl2Len UNSIGNED FIXED(31), /*         01638000
*                                      Length of the user structure     01639000
*                                      controls 2. Or zero if the       01640000
*                                      user structure controls are      01641000
*                                      not applicable or not            01642000
*                                      requested.                @03A*/ 01643000
*       3    *        CHAR(0);      /* End StrbStrDetail2        @03A*/ 01644000
*                                                                       01645000
*/*******************************************************************/  01646000
*/*                                                                 */  01647000
*/*             Mapping of the table entry for:                     */  01648000
*/*                                                                 */  01649000
*/*             TYPE(CLASS)     CLASSLEVEL(DETAIL)                  */  01650000
*/*             TYPE(LISTNUM)   LISTNUMLEVEL(DETAIL)                */  01651000
*/*             TYPE(EVENTQS)      EQLEVEL(DETAIL)              @01A*/  01652000
*/*                                                                 */  01653000
*/*  Use this mapping when                                          */  01654000
*/*        StrBTableEntryType = StrBTableEntryDetail                */  01655000
*/*                                                                 */  01656000
*/*******************************************************************/  01657000
*                                                                       01658000
*Dcl 1 StrBDetail STRBDETAIL_ATTR,                                      01659000
*      3 StrBDetailValue fixed(32),   /* Value of the CLASS, LISTNUM    01660000
*                                        or EVENTQS.                    01661000
*                                        See StrbDetailFlags            01662000
*                                        to determine if this value is  01663000
*                                        a storage class, castout       01664000
*                                        class, list number value       01665000
*                                        or connection id.       @01C*/ 01666000
*      3 StrBDetailNumEntries Fixed(32), /* Number of entries dumped    01667000
*                                        for the CLASS, LISTNUM or      01668000
*                                        EVENTQS.  NOTE: If the         01669000
*                                        STRBDETAILCOMPLETE bit is not  01670000
*                                        set, this number will not be   01671000
*                                        valid                   @01A*/ 01672000
*      3 StrBDetailFlags bit(8),                                        01673000
*        5 StrBDetailComplete bit(1),   /* Indicates that all the       01674000
*                                        entries were dumped for the    01675000
*                                        CLASS, LISTNUM, or all of      01676000
*                                        the event monitor controls     01677000
*                                        were dumped for an             01678000
*                                        event queue             @01C*/ 01679000
*        5 StrBDetailCoc bit(1),      /* 0 => This is not a castout     01680000
*                                        class entry                    01681000
*                                        1 => This is a castout class   01682000
*                                        entry                       */ 01683000
*        5 StrBDetailStg bit(1),      /* 0 => This is not a storage     01684000
*                                        class entry                    01685000
*                                        1 => This is a storage class   01686000
*                                        entry                       */ 01687000
*        5 StrBDetailLnm bit(1),      /* 0 => This is not a list number 01688000
*                                        entry                          01689000
*                                        1 => This is a list number     01690000
*                                        entry                       */ 01691000
*        5 StrBDetailEqc bit(1),      /* 0 => This is not an event      01692000
*                                        queue (EVENTQS) entry          01693000
*                                        1 => This is an event queue    01694000
*                                        (EVENTQS) entry         @01A*/ 01695000
*        5 *             bit(3),      /* Reserved                @01C*/ 01696000
*      3 * char(3),                   /* reserved                    */ 01697000
*      3 *                 fixed(32), /* Reserved                    */ 01698000
*      3 StrBDetailCntl@ ptr(31),     /* Pointer to the CLASS, LISTNUM  01699000
*                                        or event queue controls        01700000
*                                        found in the answer            01701000
*                                        area. The controls can be      01702000
*                                        mapped by the Dccc mapping     01703000
*                                        found in IXLYDCCC if the       01704000
*                                        controls are cast out class    01705000
*                                        controls.  The controls can be 01706000
*                                        mapped by the Dscc mapping     01707000
*                                        found in IXLYDSCC if the       01708000
*                                        controls are storage class     01709000
*                                        controls. The controls can be  01710000
*                                        mapped by the Dlc mapping      01711000
*                                        found in IXLYDLC if the        01712000
*                                        controls are list controls.    01713000
*                                        The controls can be mapped by  01714000
*                                        the Deqc mapping found in      01715000
*                                        IXLYDEQC if the controls are   01716000
*                                        event queue controls.   @01C*/ 01717000
*      3 StrBDetailCntlLen fixed(32), /* Length of the controls      */ 01718000
*      3 * char(12),                  /* reserved for alignment      */ 01719000
*      3 * char(0);                                                     01720000
*                                                                       01721000
*                                                                       01722000
*                                                                       01723000
*/*******************************************************************/  01724000
*/*                                                                 */  01725000
*/*             Mapping of the table entry for:                     */  01726000
*/*                                                                 */  01727000
*/*             TYPE(EMCONTROLS) EMCLEVEL(EMC)                      */  01728000
*/*             TYPE(EVENTQS)     EQLEVEL(EMC)                      */  01729000
*/*                                                                 */  01730000
*/*  Use this mapping when                                          */  01731000
*/*        StrBTableEntryType =  StrBTableEntryEMCDetail            */  01732000
*/*                                                                 */  01733000
*/*******************************************************************/  01734000
*                                                                       01735000
*Dcl 1 StrBEMCDetail STRBEMCDETAIL_ATTR,  /*                     @01A*/ 01736000
*      3 StrBEMCDetailValue      fixed(32), /* Value of the             01737000
*                                        connection id or the list      01738000
*                                        number associated with event   01739000
*                                        monitor controls.              01740000
*                                        See StrBEMCDetailFlags         01741000
*                                        to determine if this value is  01742000
*                                        a connection id or a list      01743000
*                                        number value            @01A*/ 01744000
*      3 StrBEMCDetailNumEntries fixed(32), /* Number of event monitor  01745000
*                                        controls dumped for the        01746000
*                                        connection id or the list      01747000
*                                        number.  If the                01748000
*                                        StrBEMCDetailComplete          01749000
*                                        bit is not set, this           01750000
*                                        number will not be valid       01751000
*                                                                @01A*/ 01752000
*      3 StrBEMCDetailFlags bit(8),   /*                         @01A*/ 01753000
*        5 StrBEMCDetailComplete bit(1), /* 1 indicates that all the    01754000
*                                        event monitor controls were    01755000
*                                        dumped for the connection id   01756000
*                                        or list number          @01A*/ 01757000
*        5 StrBEMCDetailEmc bit(1),   /* 0 => This is not an event      01758000
*                                        monitor controls (EMCONTROLS)  01759000
*                                        entry                          01760000
*                                        1 => This is an event monitor  01761000
*                                        controls (EMCONTROLS)          01762000
*                                        entry                   @01A*/ 01763000
*        5 StrBEMCDetailEqc bit(1),   /* 0 => This is not an event      01764000
*                                        queue (EVENTQS) entry          01765000
*                                        1 => This is an event queue    01766000
*                                        (EVENTQS) entry         @01A*/ 01767000
*        5 *                bit(5),   /* reserved                @01A*/ 01768000
*      3 * char(3),                   /* reserved                @01A*/ 01769000
*      3 *                 fixed(32), /* Reserved                @01A*/ 01770000
*      3 StrBEMCDetailEMC@ ptr(31),   /* Pointer to event monitor       01771000
*                                        controls in the answer         01772000
*                                        area mapped by DEmc mapping    01773000
*                                        found in IXLYDDIB       @01A*/ 01774000
*      3 StrBEMCDetailEMCLen fixed(32), /* Length of the event monitor  01775000
*                                        controls                @01A*/ 01776000
*      3 * char(8),                   /* reserved for alignment  @01A*/ 01777000
*      3 * char(0);                                                     01778000
*                                                                       01779000
*                                                                       01780000
*                                                                       01781000
*/*******************************************************************/  01782000
*/*                                                                 */  01783000
*/*             Mapping of the table entry for:                     */  01784000
*/*                                                                 */  01785000
*/*             TYPE(CLASS)     CLASSLEVEL(ENTRY)                   */  01786000
*/*             TYPE(LISTNUM)   LISTNUMLEVEL(ENTRY)                 */  01787000
*/*             TYPE(ENTRY)                                         */  01788000
*/*                                                                 */  01789000
*/*  Use this mapping when                                          */  01790000
*/*        StrBTableEntryType = StrBTableEntryEntry                 */  01791000
*/*                                                                 */  01792000
*/*******************************************************************/  01793000
*                                                                       01794000
*Dcl 1 StrBEntry STRBENTRY_ATTR,                                        01795000
*      3 StrBEntryCntl@ ptr(31),   /* Pointer to the entry control      01796000
*                                     information in the answer area.   01797000
*                                     The entry control information     01798000
*                                     can be mapped by the DDil         01799000
*                                     mapping in the IXLYDDIB macro if  01800000
*                                     the structure is a list           01801000
*                                     structure or by the DDic mapping  01802000
*                                     in the IXLYDDIB macro if the      01803000
*                                     structure is a cache              01804000
*                                     structure.                @L4C*/  01805000
*      3 StrBEntryCntlLen fixed(32), /* Length of the entry control     01806000
*                                     information                   */  01807000
*      3 StrBEntryEData@ ptr(31),   /* Pointer to the entry's entry     01808000
*                                     data in the answer area           01809000
*                                     NOTE: IF no entry data was        01810000
*                                     returned, the pointer to the      01811000
*                                     entry data in the answer area     01812000
*                                     will be zero                  */  01813000
*      3 StrBEntryTotalEDataLen                                         01814000
*                         fixed(32),/* Total length of entry data   */  01815000
*      3 StrBEntryEDataLen fixed(32),/* Length of the entry data        01816000
*                                      returned                         01817000
*                                     NOTE: If no entry data was        01818000
*                                     returned, the length will be set  01819000
*                                     to zero                        */ 01820000
*      3 StrBEntryEDataLenLeft2Proc                                     01821000
*                         fixed(32),/* Length of entry data left        01822000
*                                      to process to retrieve all of    01823000
*                                      the entry data associated with   01824000
*                                      this entry.  This variable can   01825000
*                                      be used to allocate a bigger     01826000
*                                      answer area so that the          01827000
*                                      remainder of this entry's entry  01828000
*                                      data can be returned all at      01829000
*                                      once before proceeding to the    01830000
*                                      next entry, if one exists     */ 01831000
*      3 StrBEntryAdj@ ptr(31),    /* Pointer to the entry's adjunct    01832000
*                                     information in the answer area    01833000
*                                     NOTE: IF no adjunct data was      01834000
*                                     returned, the pointer to the      01835000
*                                     adjunct data in the answer area   01836000
*                                     will be zero                  */  01837000
*      3 StrBEntryAdjLen fixed(32), /* Length of the adjunct            01838000
*                                     data                              01839000
*                                     NOTE: If no adjunct data was      01840000
*                                     returned, the length will be set  01841000
*                                     to zero                        */ 01842000
*      3 StrBEntryPosValue Fixed(32), /* Entry position of the entry    01843000
*                                     in the class or listnum.  If the  01844000
*                                     StrBKeyPosValue is On, this is    01845000
*                                     the entry position of the entry   01846000
*                                     within the requested entrykey     01847000
*                                     NOTE: If this is from a           01848000
*                                     TYPE(ENTRY) request, the field is 01849000
*                                     invalid                       */  01850000
*      3 StrBEntryFlags bit(8),                                         01851000
*        5 StrBEntryEDataSerialized bit(1),/* Indicates whether the     01852000
*                                        entry data was dumped          01853000
*                                        serialized                 */  01854000
*        5 StrBEntryAdjDSerialized bit(1),/* Indicates whether the      01855000
*                                        adjunct data was dumped        01856000
*                                        serialized                 */  01857000
*        5 StrBPartEntryData bit(1),  /* 0 => All of the entry data     01858000
*                                        that could fit did make it     01859000
*                                        out into the answer area       01860000
*                                        1 => All of the entry data     01861000
*                                        was not able                   01862000
*                                        to be put into the answer area 01863000
*                                        The reason for this is because 01864000
*                                        there was an access error      01865000
*                                        while                          01866000
*                                        retrieving the entry data.     01867000
*                                        NOTE: this bit will only be    01868000
*                                        valid if StrBEntryEDataReq is  01869000
*                                        on                          */ 01870000
*        5 StrBEntryEDataReq bit(1),   /* Indicates whether the         01871000
*                                        entry data was requested to    01872000
*                                        be returned on the IXLZSTR     01873000
*                                        macro                          01874000
*                                        NOTE: Entry data may be        01875000
*                                        partially returned due to      01876000
*                                        insufficient space in the      01877000
*                                        answer area or                 01878000
*                                        not returned due               01879000
*                                        to failure to get              01880000
*                                        the entry data                 01881000
*                                        written out to the dump data   01882000
*                                        set. Please check the return   01883000
*                                        code and reason codes from the 01884000
*                                        IXLZSTR service and the        01885000
*                                        fields in this mapping,        01886000
*                                        StrBEntry, to check that state 01887000
*                                        of the entrydata retrieval  */ 01888000
*        5 StrBEntryAdjDReq  bit(1),   /* Indicates whether the         01889000
*                                        adjunct data was requested to  01890000
*                                        be returned on the IXLZSTR     01891000
*                                        macro                          01892000
*                                        NOTE: Adjunct data may not be  01893000
*                                        returned due to a failure to   01894000
*                                        get it written out to the dump 01895000
*                                        data set.  Please check the    01896000
*                                        fields in this mapping,        01897000
*                                        StrBEntry, to insure that the  01898000
*                                        adjunct data was returned  */  01899000
*        5 StrBEntryOnSCM    bit(1),   /* For a TYPE(LISTNUM) request,  01900000
*                                         indicates whether the entry   01901000
*                                         resides in coupling facility  01902000
*                                         real storage or storage       01903000
*                                         class memory.                 01904000
*                                         0 => the entry represented    01905000
*                                         by this StrBEntry table entry 01906000
*                                         resides in coupling facility  01907000
*                                         real storage.                 01908000
*                                         1 => the entry represented by 01909000
*                                         this StrBEntry table entry    01910000
*                                         resides in coupling facility  01911000
*                                         storage class memory. No      01912000
*                                         entry control information,    01913000
*                                         adjunct data or entry data is 01914000
*                                         returned               @L4A*/ 01915000
*        5 StrBEntryEDataDecryptErr Bit(1),  /*  Indicates whether      01916000
*                                         encrypted entry data was      01917000
*                                         decrypted. Valid              01918000
*                                         when StrBEntryEDataReq and    01919000
*                                         StrBStrSummaryStrEncrypted    01920000
*                                         are set to 1.                 01921000
*                                         0 => Entry data decryption    01922000
*                                         was successful                01923000
*                                         1 => Entry data decryption    01924000
*                                         failed. Entry data is not     01925000
*                                         returned in the answer area   01926000
*                                         for the entry when            01927000
*                                         decryption failed      @L5A*/ 01928000
*        5 StrBEntryAdjDDecryptErr Bit(1),   /*  Indicates whether      01929000
*                                         encrypted adjunct data was    01930000
*                                         decrypted. Valid              01931000
*                                         when StrBEntryAdjDReq and     01932000
*                                         StrBStrSummaryStrEncrypted    01933000
*                                         are set to 1.                 01934000
*                                         0 => Adjunct data decryption  01935000
*                                         was successful                01936000
*                                         1 => Adjunct data decryption  01937000
*                                         failed. Adjunct data is not   01938000
*                                         returned for the entry in     01939000
*                                         the answer area when          01940000
*                                         decryption failed      @L5A*/ 01941000
*      3 StrbEntryFlags2 bit(8),      /* Flag Byte 2 -                  01942000
*                                     NOTE: If this is from a           01943000
*                                     TYPE(ENTRY) request, the field is 01944000
*                                     invalid                       */  01945000
*        5 StrBKeyPosValue   bit(1),  /* 0 => Entry position found in   01946000
*                                        the StrBEntryPosValue is the   01947000
*                                        entry position in the total    01948000
*                                        list of entries                01949000
*                                        1 => Entry position found in   01950000
*                                        the StrBEntryPosValue is the   01951000
*                                        entry position in the list of  01952000
*                                        entries with the requested     01953000
*                                        entrykey                       01954000
*                                  NOTE: To find the entrykey that was  01955000
*                                  requested, map the DDil mapping on   01956000
*                                  the pointer to the  entry controls   01957000
*                                  in this entry and look at the value  01958000
*                                  of the DDilLstEntKey field       */  01959000
*        5 *            bit(7),    /* reserved                      */  01960000
*      3 * char(2),                /* reserved for alignment        */  01961000
*      3 * char(16),               /* reserved for expansion        */  01962000
*      3 * char(0);                                                     01963000
*                                                                       01964000
*/*******************************************************************/  01965000
*/*                                                                 */  01966000
*/*            Structure Type Constants                         @P2A*/  01967000
*/*                                                                 */  01968000
*/*******************************************************************/  01969000
*                                                                       01970000
* DCL                                                                   01971000
*  StrBStrTypeList BIT(8) CONSTANT('03'X),  /* List Structure -         01972000
*                                              External          @P2A*/ 01973000
*  StrBStrTypeCache BIT(8) CONSTANT('04'X); /* Cache Structure -        01974000
*                                              External          @P2A*/ 01975000
*/*******************************************************************/  01976000
*/*                                                                 */  01977000
*/*            Length constants for the mappings                    */  01978000
*/*                                                                 */  01979000
*/*******************************************************************/  01980000
*                                                                       01981000
*Dcl StrBHeader_Len    Fixed(32) Constant(length(StrBHeader)), /*       01982000
*                                  Length of StrBHeader mapping     */  01983000
*                                                                       01984000
*    StrBStrSummary_Len Fixed(32) Constant(length(StrBStrSummary)), /*  01985000
*                                  Length of StrBStrSummary mapping */  01986000
*                                                                       01987000
*    StrBSummary_Len   Fixed(32) Constant(length(StrBSummary)), /*      01988000
*                                  Length of StrBSummary mapping    */  01989000
*                                                                       01990000
*    StrBStrDetail_Len Fixed(32) Constant(length(StrBStrDetail)), /*    01991000
*                                  Length of StrBStrDetail mapping  */  01992000
*                                                                       01993000
*    StrBStrDetail1_Len Fixed(32)                                       01994000
*                       Constant(length(StrBStrDetail1)), /*  Length of 01995000
*                                  StrBStrDetail1 mapping        @L4A*/ 01996000
*                                                                       01997000
*    StrBStrDetail2_Len UNSIGNED FIXED(31) /*                        */ 01998000
*         CONSTANT(SIZE(StrBStrDetail2)), /* Length of StrBStrDetail2   01999000
*                                      mapping                   @03A*/ 02000000
*                                                                       02001000
*    StrBDetail_Len    Fixed(32) Constant(length(StrBDetail)), /*       02002000
*                                  Length of StrBDetail mapping     */  02003000
*                                                                       02004000
*    StrBEMCDetail_Len Fixed(32) Constant(length(StrBEMCDetail)), /*    02005000
*                                  Length of StrBEMCDetail mapping      02006000
*                                                               @01A*/  02007000
*                                                                       02008000
*    StrBEntry_Len  Fixed(32) Constant(length(StrBEntry)); /*           02009000
*                                  Length of StrBEntry mapping      */  02010000
*                                                                       02011000
*/********************************************************************/ 02012000
*/*                                                                  */ 02013000
*/*          Return Codes from the IXLZSTR Macro Service             */ 02014000
*/*                                                                  */ 02015000
*/********************************************************************/ 02016000
* DCL StrBRetCodeSucc fixed(32)                                         02017000
*                            Constant(0), /* Successful Completion -    02018000
*                                            IXLZSTR returned all       02019000
*                                            requested data         */  02020000
*     StrBRetCodeMoreData fixed(32)                                     02021000
*                            Constant(4), /* Successful Completion -    02022000
*                                            Additional data available  02023000
*                                            but not returned       */  02024000
*     StrBRetCodeNoData  fixed(32)                                      02025000
*                            Constant(8), /* No data returned in        02026000
*                                            ANSAREA                */  02027000
*     StrBRetCodeEnvErr fixed(32)                                       02028000
*                           Constant(12), /* Environmental Error    */  02029000
*     StrBRetCodeFail fixed(32)                                         02030000
*                           Constant(16); /* Failure in IXLZSTR         02031000
*                                            Processing             */  02032000
*                                                                       02033000
*/********************************************************************/ 02034000
*/*                                                                  */ 02035000
*/*          Reason Codes from the IXLZSTR Macro Service             */ 02036000
*/*          for when the return code is StrBRetCodeSucc             */ 02037000
*/*                                                                  */ 02038000
*/********************************************************************/ 02039000
* DCL StrBRsnCodeSucc fixed(32)                                         02040000
*                            Constant(0); /* Successful Completion -    02041000
*                                            IXLZSTR returned all       02042000
*                                            requested data         */  02043000
*                                                                       02044000
*/********************************************************************/ 02045000
*/*                                                                  */ 02046000
*/*          Reason Codes from the IXLZSTR Macro Service             */ 02047000
*/*        for when the return code is StrBRetCodeMoreData           */ 02048000
*/*                                                                  */ 02049000
*/********************************************************************/ 02050000
* DCL StrBRsnCodeAnsANotLge fixed(32)                                   02051000
*                            Constant(4); /* ANSAREA was not large      02052000
*                                            enough to contain the      02053000
*                                            data to be returned by     02054000
*                                            IXLZSTR.  To retrieve the  02055000
*                                            remainder of the data,     02056000
*                                            invoke IXLZSTR again with  02057000
*                                            the same keywords and the  02058000
*                                            RESTOKEN as input to the   02059000
*                                            macro                   */ 02060000
*                                                                       02061000
*/********************************************************************/ 02062000
*/*                                                                  */ 02063000
*/*          Reason Codes from the IXLZSTR Macro Service             */ 02064000
*/*         for when the return code is StrBRetCodeNoData            */ 02065000
*/*                                                                  */ 02066000
*/********************************************************************/ 02067000
* DCL StrBRsnCodeNoStrName fixed(32)                                    02068000
*                           Constant(4),  /* The STRNAME specified on   02069000
*                                            the IXLZSTR macro does not 02070000
*                                            appear in the dump      */ 02071000
*     StrBRsnCodeNoStrDumpID fixed(32)                                  02072000
*                           Constant(8),  /* The STRNAME specified on   02073000
*                                            the IXLZSTR macro does     02074000
*                                            appear in the dump, but    02075000
*                                            the STRDUMPID does not     02076000
*                                            appear in the dump  @D2A*/ 02077000
*     StrBRsnCodeNoFacData fixed(32)                                    02078000
*                           Constant(12), /* No coupling facility data  02079000
*                                            appears in the dump     */ 02080000
*     StrBRsnCodeNotMinStor fixed(32)                                   02081000
*                           Constant(16), /* ANSAREA specified on the   02082000
*                                            IXLZSTR macro does not     02083000
*                                            meet the minimum storage   02084000
*                                            requirement for the        02085000
*                                            request                 */ 02086000
*     StrBRsnCodeNoAttrStr fixed(32)                                    02087000
*                           Constant(20), /* The data does not appear   02088000
*                                            in the dump because the    02089000
*                                            attributes of the          02090000
*                                            requested data does not    02091000
*                                            match the attributes of    02092000
*                                            the structure type      */ 02093000
*     StrBRsnCodeInvalidRge fixed(32)                                   02094000
*                           Constant(24); /* The range specification    02095000
*                                            on the IXLZSTR macro is    02096000
*                                            invalid.  The starting     02097000
*                                            value is greater than the  02098000
*                                            ending value            */ 02099000
*                                                                       02100000
*/********************************************************************/ 02101000
*/*                                                                  */ 02102000
*/*          Reason Codes from the IXLZSTR Macro Service             */ 02103000
*/*         for when the return code is StrBRetCodeEnvErr            */ 02104000
*/*                                                                  */ 02105000
*/********************************************************************/ 02106000
* DCL StrBRsnCodeNoStor fixed(32)                                       02107000
*                            Constant(4); /* Unable to obtain system    02108000
*                                            storage                 */ 02109000
*                                                                       02110000
*/********************************************************************/ 02111000
*/*                                                                  */ 02112000
*/*          Reason Codes from the IXLZSTR Macro Service             */ 02113000
*/*          for when the return code is StrBRetCodeFail             */ 02114000
*/*                                                                  */ 02115000
*/********************************************************************/ 02116000
* DCL StrBRsnCodeNoReads fixed(32)                                      02117000
*                            Constant(4); /* Some data could not be     02118000
*                                            accessed in the dump data  02119000
*                                            set                     */ 02120000
*                                                                       02121000
* @LOGIC;                                                     /* @P7A*/ 02122000
* #PRAGMA TOOL=CBGEN.                                                   02123000
* #DELETE.StrBHeader_Len                                                02124000
* #DELETE.StrBStrSummary_Len                                            02125000
* #DELETE.StrBSummary_Len                                               02126000
* #DELETE.StrBStrDetail_Len                                             02127000
* #DELETE.StrBStrDetail1_Len                                            02128000
* #DELETE.StrBStrDetail2_Len                                            02129000
* #DELETE.StrBDetail_Len                                                02130000
* #DELETE.StrBEMCDetail_Len                                             02131000
* #DELETE.StrBEntry_Len                                                 02132000
* #EPRAGMA.                                                             02133000
* @ENDLOGIC;                                                  /* @P7A*/ 02134000
*/* End of PL/X Source                                               */ 02135000
* %IF IXLZSTRB_LIST = 'NO' !                                            02136000
*    ZCBPRINT = 'NO' %THEN                                              02137000
* %DO;                                                                  02138000
*   @LIST POP NOECHO;                                                   02139000
* %END;                                                                 02140000
* %END;                                                                 02141000
