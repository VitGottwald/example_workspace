*                                                                       00001000
* %DCL IHALOCKI_INCLUDED CHAR EXT;                                      00002000
* %DEACTIVATE IHALOCKI_INCLUDED;                                        00003000
* %IF IHALOCKI_INCLUDED = '' %THEN                                      00004000
* %DO;                                                                  00005000
*/* Macro made bi-lingual on 17004. CBGEN compile date 15295         */ 00006000
*% /*                                                                   00007000
         MACRO                                                          00008000
         IHALOCKI &DSECT=YES,&LIST=YES,&TITLE=YES,&LockInst_Comm=YES,  *00009000
               &LockInst_Uniq_CML=COND                                  00010000
                      GBLC  &IHALOCKI_INCLUDED                          00011000
                      GBLC  &ZCBPRINT                                   00012000
&IHALOCKI_INCLUDED    SETC  'YES'                                       00013000
                      AIF   ('&LIST' EQ 'NONE').P0                      00014000
                      AIF   ('&TITLE' EQ 'NO').P5                       00015000
 TITLE                'IHALOCKI  - Lock Instrumentation Data           *00016000
                      '                                                 00017000
.P5                   ANOP                                              00018000
**/ IHALOCKI_1:;                                                        00019000
*/* START OF SPECIFICATIONS ******************************************/ 00020000
*/*                                                                  */ 00021000
*/*01* Descriptive name:  Lock Instrumentation Data                  */ 00022000
*/*02* Acronym:  LockInst                                            */ 00023000
*/*                                                                  */ 00024000
*/*01* Macro Name:  IHALOCKI                                         */ 00025000
*/*                                                                  */ 00026000
*/*01* EXTERNAL CLASSIFICATION: PI                                   */ 00027000
*/*01* END OF EXTERNAL CLASSIFICATION:                               */ 00028000
*/*                                                                  */ 00029000
*/*01* PROPRIETARY_STATEMENT *****************************************/ 00030000
*/*                                                                  */ 00031000
*/*      Licensed Materials - Property of IBM                        */ 00032000
*/*      5694-A01 Copyright IBM Corp. 2010                           */ 00033000
*/*                                                                  */ 00034000
*/*01* STATUS:  HBB7770                                              */ 00035000
*/*                                                                  */ 00036000
*/*01* END_OF_PROPRIETARY_STATEMENT **********************************/ 00037000
*/*                                                                  */ 00038000
*/*01* Dsect Name: LockInst_Comm, LockInst_Uniq_CML                  */ 00039000
*/*01* Eye-Catcher: LKCM, LKUN                                       */ 00040000
*/*01* Offset:  0, 0                                                 */ 00041000
*/*01* Length:  4, 4                                                 */ 00042000
*/*                                                                  */ 00043000
*/*01* Component:  Supervisor Control (SC1C5)                        */ 00044000
*/*                                                                  */ 00045000
*/*01* Storage Attributes:                                           */ 00046000
*/*02*  Main Storage: ESQA / ENUCLEUS                                */ 00047000
*/*02*  Virtual Storage: ESQA / ENUCLEUS                             */ 00048000
*/*02*  Auxiliary Storage: N/A                                       */ 00049000
*/*02*  Data Space: N/A                                              */ 00050000
*/*02*  Subpool: 245 / NA                                            */ 00051000
*/*02*  Key:  0                                                      */ 00052000
*/*02*  Residency:  31 bit.                                          */ 00053000
*/*                                                                  */ 00054000
*/*01* Size:                                                         */ 00055000
*/*       LockInst_Comm      -- X'0028' bytes                        */ 00056000
*/*       LockInst_Uniq_CML  -- X'0040' bytes                        */ 00057000
*/*                                                                  */ 00058000
*/*01* Created By:                                                   */ 00059000
*/*      IEAVEMRQ                                                    */ 00060000
*/*      IEAMSWCB                                                    */ 00061000
*/*      IEAVESLA                                                    */ 00062000
*/*                                                                  */ 00063000
*/*01* Pointed To By:                                                */ 00064000
*/*      LockInst_Comm is pointed to by:                             */ 00065000
*/*        ASSB_SMFCMS_LockInst_Addr                                 */ 00066000
*/*        ASSB_ENQDEQ_CMS_LockInst_Addr                             */ 00067000
*/*        ASSB_LATCH_CMS_LockInst_Addr                              */ 00068000
*/*        ASSB_CMS_LockInst_Addr                                    */ 00069000
*/*        ASSB_Local_LockInst_Addr                                  */ 00070000
*/*        ECVT_SMF_CMS_LockInst_Addr                                */ 00071000
*/*        ECVT_ENQDEQ_CMS_LockInst_Addr                             */ 00072000
*/*        ECVT_LATCH_CMS_LockInst_Addr                              */ 00073000
*/*        ECVT_CMS_LockInst_Addr                                    */ 00074000
*/*      LockInst_Uniq_CML is pointed to by:                         */ 00075000
*/*        LockInst_Comm_Unique_Lock_Data_Addr when                  */ 00076000
*/*          LockInst_Comm_LockType = LockInst_LockType_Local        */ 00077000
*/*                                                                  */ 00078000
*/*01* Internal Use Pointed To By:                                   */ 00079000
*/*      LockInst_Comm is pointed to by:                             */ 00080000
*/*        SLACMS_SMF_LockInst_Data                                  */ 00081000
*/*        SLACMS_ENQ_DEQ_LockInst_Data                              */ 00082000
*/*        SLACMS_LATCHING_LockInst_Data                             */ 00083000
*/*        SLACMS_GENERAL_LockInst_Data                              */ 00084000
*/*                                                                  */ 00085000
*/*01* Serialization:  Data updates to the lock instrumentation      */ 00086000
*/*      blocks are serialized by one of the following mechanisms:   */ 00087000
*/*                                                                  */ 00088000
*/*        The lock the instrumentation block represents.            */ 00089000
*/*                                                                  */ 00090000
*/*        Compare and Swap                                          */ 00091000
*/*                                                                  */ 00092000
*/*      See individual fields for how updates are serialized.       */ 00093000
*/*                                                                  */ 00094000
*/*      Data reads should be done unserialized.                     */ 00095000
*/*                                                                  */ 00096000
*/*01* Function:  Maps suspend lock instrumentation data.            */ 00097000
*/*                                                                  */ 00098000
*/*01* Method of Access:                                             */ 00099000
*/*02*  ASM:                                                         */ 00100000
*/*       IHALOCKI                                                   */ 00101000
*/*         DSECT=YES!NO  -- Request DSECT definition                */ 00102000
*/*         LockInst_Comm=YES!NO!COND - Request Header record        */ 00103000
*/*                          mapping.                                */ 00104000
*/*                          USING on LockInst_Comm                  */ 00105000
*/*         LockInst_Uniq_CML=YES!NO!COND - Request Header record    */ 00106000
*/*                          mapping.                                */ 00107000
*/*                          USING on LockInst_Uniq_CML              */ 00108000
*/*   Default: DSECT=YES,LockInst_Comm=YES,LockInst_Uniq_CML=COND    */ 00109000
*/*   Notes: name=YES  => expand                                     */ 00110000
*/*          name=NO   => do not expand                              */ 00111000
*/*          name=COND => expand only if DSECT=YES                   */ 00112000
*/*                                                                  */ 00113000
*/*02*  PL/X:                                                        */ 00114000
*/*                                                                  */ 00115000
*/*              %INCLUDE SYSLIB(IHALOCKI)                           */ 00116000
*/*                                                                  */ 00117000
*/*              Set %IHALOCKI_Include_CMS_ASSB_Offsets='YES'        */ 00118000
*/*               to get the lock offsets into the ASSB.  Requires   */ 00119000
*/*               IHAASSB to be included.                            */ 00120000
*/*                                                                  */ 00121000
*/*               Default: %IHALOCKI_Include_CMS_ASSB_Offsets='NO'   */ 00122000
*/*                                                                  */ 00123000
*/*01* Deleted By:                                                   */ 00124000
*/*      IEAVEMDL                                                    */ 00125000
*/*                                                                  */ 00126000
*/*01* Frequency:                                                    */ 00127000
*/*                                                                  */ 00128000
*/*      LockInst_Comm - 1 per system suspend lock per address       */ 00129000
*/*                        space.                                    */ 00130000
*/*                      1 global block for each CMS lock.           */ 00131000
*/*      LockInst_Uniq_CML - 1 per address space.                    */ 00132000
*/*                                                                  */ 00133000
*/*01* Dependencies: None.                                           */ 00134000
*/*                                                                  */ 00135000
*/*01* Distribution Library: AMACLIB                                 */ 00136000
*/*                                                                  */ 00137000
*/*01* Usage:                                                        */ 00138000
*/*                                                                  */ 00139000
*/*      The version number in the common lock instrumentation       */ 00140000
*/*      block (LockInst_Comm_Version) and the unique lock           */ 00141000
*/*      instrumentation block (LockInst_Uniq_CML) indicates         */ 00142000
*/*      the minimum version level required to access a              */ 00143000
*/*      given field.  For example, to access:                       */ 00144000
*/*                                                                  */ 00145000
*/*        LockInst_Comm_Suspends, LockInst_Comm_Version must        */ 00146000
*/*          be greater than or equal to                             */ 00147000
*/*          LockInst_Comm_Version_Number1.                          */ 00148000
*/*                                                                  */ 00149000
*/*        LockInst_Uniq_CML_Suspends, LockInst_Uniq_CML_Version     */ 00150000
*/*          must be greater than or equal to                        */ 00151000
*/*          LockInst_Uniq_CML_Version_Number1.                      */ 00152000
*/*                                                                  */ 00153000
*/*      Should additional lock instrumentation data be added        */ 00154000
*/*      in the future, the version number of the block will         */ 00155000
*/*      indicate whether or not the new information is available    */ 00156000
*/*      in the lock instrumentation block.                          */ 00157000
*/*                                                                  */ 00158000
*/*01* Notes:                                                        */ 00159000
*/*                                                                  */ 00160000
*/*      SYS1.SBLSCLI0(IEAVSULK) is a REXX exec which reports        */ 00161000
*/*      suspend lock instrumentation data for the system.           */ 00162000
*/*      It can be issued under CMS, IPCS, or TSO.  See              */ 00163000
*/*      SYS1.SBLSCLI0(IEAVSULK) for more information.               */ 00164000
*/*                                                                  */ 00165000
*/*      Any future enhancements to the system suspend lock          */ 00166000
*/*      instrumentation data must also make appropriate updates     */ 00167000
*/*      to the IEAVSULK REXX exec.                                  */ 00168000
*/*                                                                  */ 00169000
*/*01* CHANGE ACTIVITY:                                              */ 00170000
*/*  $L0=PERFSERV HBB7770 080926 PD00D0: Perf Serviceability         */ 00171000
*/*  $01=OA48571  HBB77A0 160330 PD00JI: HFTS support                */ 00172000
*/*                                                                  */ 00173000
*/*                                                                  */ 00174000
*/* END OF SPECIFICATIONS ********************************************/ 00175000
*% /*                                                                   00176000
.P0                   ANOP                                              00177000
                      AIF   ('&ZCBPRINT' EQ 'NO').P1                    00178000
                      AIF   ('&LIST' EQ 'YES').P2                       00179000
.P1                   ANOP                                              00180000
                      PUSH  PRINT                                       00181000
                      PRINT OFF                                         00182000
.P2                   ANOP                                              00183000
                      AIF   ('&LockInst_Comm' EQ 'NO').L0002            00184000
                      AIF   ('&DSECT' EQ 'YES').L0003                   00185000
                      AIF   ('&LockInst_Comm' NE 'YES').L0002           00186000
LockInst_Comm         DS    0D                                          00187000
                      AGO   .L0004                                      00188000
.L0003                ANOP                                              00189000
LockInst_Comm         DSECT                                             00190000
.L0004                ANOP                                              00191000
LockInst_Comm_Acronym DS    CL4    Acronym                              00192000
LockInst_Comm_Version DS    F      Version number                       00193000
LockInst_Comm_Length  DS    H      Length of block                      00194000
LockInst_Comm_LockType DS   H      The type of lock this lock          *00195000
                                   instrumentation block represents.   *00196000
                                   See EQUs for LockInst_LockType_*.   *00197000
                                   Available with version              *00198000
                                   LockInst_Comm_Version_Number1 and   *00199000
                                   above. Serialization: N/A (none)     00200000
LockInst_Comm_Unique_Lock_Data_Addr DS A A pointer to an area which    *00201000
                                   contains information unique to the  *00202000
                                   lock represented by this            *00203000
                                   LockInst_Comm block. If there is no *00204000
                                   data associated with this lock,     *00205000
                                   this pointer will be zero.          *00206000
                                   Available with version              *00207000
                                   LockInst_Comm_Version_Number1 and   *00208000
                                   above Serialization: N/A (none)      00209000
LockInst_Comm_LockStats DS  CL24   Lock statistics                      00210000
                      ORG   LockInst_Comm_LockStats                     00211000
LockInst_Comm_Suspends DS   FL8    The number of times a unit of work  *00212000
                                   was suspended on this lock.         *00213000
                                   Available with version              *00214000
                                   LockInst_Comm_Version_Number1 and   *00215000
                                   above Serialization: Lock this      *00216000
                                   instrumentation block represents.    00217000
LockInst_Comm_Already_Suspended DS FL8 The number of times a unit of   *00218000
                                   work was suspended on this lock     *00219000
                                   when there was already at least 1   *00220000
                                   other unit of work suspended for    *00221000
                                   for the lock. Available with        *00222000
                                   version                             *00223000
                                   LockInst_Comm_Version_Number1 and   *00224000
                                   above. Serialization: Lock this     *00225000
                                   instrumentation block represents.    00226000
LockInst_Comm_Cont_Time DS  CL8    The amount of time in a TOD clock   *00227000
                                   format of all units of work that    *00228000
                                   were suspended on this lock. If Wn  *00229000
                                   represents the time each unit of    *00230000
                                   work was suspended, this field      *00231000
                                   contains: W1 + W2 + W3 + ... + Wn.  *00232000
                                   Available with version              *00233000
                                   LockInst_Comm_Version_Number1 and   *00234000
                                   above. Serialization: Lock this     *00235000
                                   instrumentation block represents.    00236000
LockInst_LockType_Min EQU   1      Note the LockInst_LockType_Min can  *00237000
                                   change from release to release.     *00238000
                                   LockInst_LockType_Min is the lowest *00239000
                                   lock type supported for a given     *00240000
                                   release.                             00241000
LockInst_LockType_SMFCMS EQU 1                                          00242000
LockInst_LockType_ENQDEQCMS EQU 2                                       00243000
LockInst_LockType_LatchCMS EQU 3                                        00244000
LockInst_LockType_CMS EQU   4                                           00245000
LockInst_LockType_Local EQU 5                                           00246000
LockInst_LockType_Max EQU   5      Note the LockInst_LockType_Max can  *00247000
                                   change from release to release.     *00248000
                                   LockInst_LockType_Max is the        *00249000
                                   largest lock type supported for a   *00250000
                                   given release. **********************00251000
                                   *************************************00252000
                                   **** If the number of CMS locks or  *00253000
                                   local locks changes, please update  *00254000
                                   IHAHW981. ***************************00255000
                                   ***********************************  00256000
LockInst_Comm_Acronym_Chars EQU C'LKCM'                                 00257000
LockInst_Comm_Curr_Version_Number EQU 1                                 00258000
LockInst_Comm_Version_Number1 EQU 1                                     00259000
LockInst_ASSB_SMFCMS_Offset EQU 744                                     00260000
LockInst_ASSB_ENQDEQ_Offset EQU 748                                     00261000
LockInst_ASSB_LATCH_Offset EQU 752                                      00262000
LockInst_ASSB_CMS_Offset EQU 756                                        00263000
LockInst_ASSB_LOCAL_Offset EQU 760                                      00264000
LockInst_Comm_Len     EQU   *-LockInst_Comm                             00265000
.L0002                ANOP                                              00266000
                      AIF   ('&LockInst_Uniq_CML' EQ 'NO').L0005        00267000
                      AIF   ('&DSECT' EQ 'YES').L0006                   00268000
                      AIF   ('&LockInst_Uniq_CML' NE 'YES').L0005       00269000
.L0006                ANOP                                              00270000
*                                                                       00271000
* ********************************************************************  00272000
* *                                                                  *  00273000
* * For every address space, the common local lock instrumentation   *  00274000
* * block points to a unique CML lock instrumentation block.         *  00275000
* * Rememember the following:                                        *  00276000
* *                                                                  *  00277000
* *   o All local lock requests where the lock owner and lock        *  00278000
* *     requestor are in the same address space will be              *  00279000
* *     tracked in the common local lock instrumentation block.      *  00280000
* *                                                                  *  00281000
* *   o All CML lock requests have the lock owner and requestor      *  00282000
* *     running in different address spaces.                         *  00283000
* *     All CML lock data will be tracked in the unique CML          *  00284000
* *     lock instrumentation block.                                  *  00285000
* *                                                                  *  00286000
* * For every address space, the unique CML lock instrumentation     *  00287000
* * block contains instrumentation data regarding the following:     *  00288000
* *                                                                  *  00289000
* *   o The address space that owns the lock.  Lock instrumentation  *  00290000
* *     data is recorded for units of work that get suspended        *  00291000
* *     on a CML lock in the address space that owns the lock.       *  00292000
* *                                                                  *  00293000
* *   o The address space that requests the lock.  Lock              *  00294000
* *     instrumentation data is recorded for all units of work in    *  00295000
* *     a given address space that get suspended for some other      *  00296000
* *     address space's CML lock.                                    *  00297000
* *                                                                  *  00298000
* * Let's say a thread in address space A requests address space     *  00299000
* * B's CML lock and the lock is unavailable.  When the thread       *  00300000
* * receives the lock, the following is updated:                     *  00301000
* *                                                                  *  00302000
* *   o The following data is updated in the address space B         *  00303000
* *     (address space that owns the lock)                           *  00304000
* *                                                                  *  00305000
* *     - LockInst_Uniq_CML_Suspends                                 *  00306000
* *     - LockInst_Uniq_CML_Already_Suspended (when appropriate)     *  00307000
* *     - LockInst_Uniq_CML_Cont_Time                                *  00308000
* *                                                                  *  00309000
* *   o The following data is updated in the address space A         *  00310000
* *     (address space that requested the lock)                      *  00311000
* *                                                                  *  00312000
* *     - LockInst_Uniq_CML_Suspends_Src                             *  00313000
* *     - LockInst_Uniq_CML_Already_Suspended_Src (when appropriate) *  00314000
* *     - LockInst_Uniq_CML_Cont_Time_Src                            *  00315000
* *                                                                  *  00316000
* ********************************************************************  00317000
*                                                                       00318000
*                                                                       00319000
                      AIF   ('&DSECT' EQ 'YES').L0007                   00320000
LockInst_Uniq_CML     DS    0D                                          00321000
                      AGO   .L0008                                      00322000
.L0007                ANOP                                              00323000
LockInst_Uniq_CML     DSECT                                             00324000
.L0008                ANOP                                              00325000
LockInst_Uniq_CML_Acronym DS CL4   Acronym                              00326000
LockInst_Uniq_CML_Version DS F     Version number                       00327000
LockInst_Uniq_CML_Length DS H      Length of block                      00328000
LockInst_Uniq_CML_LockType DS H    The type of unique lock this lock   *00329000
                                   instrumentation block represents.   *00330000
                                   The LockType between                *00331000
                                   LockInst_Comm_LockType and          *00332000
                                   LockInst_Uniq_CML_LockType are      *00333000
                                   equal. See EQUs for                 *00334000
                                   LockInst_Uniq_LockType_Local.       *00335000
                                   Available with version LockIns      *00336000
                                   t_Uniq_CML_Version_Number1 and      *00337000
                                   above. Serialization: N/A (none)     00338000
                      DS    CL4    Reserved                             00339000
LockInst_Uniq_CML_LockStats DS CL24 Lock statistics                     00340000
                      ORG   LockInst_Uniq_CML_LockStats                 00341000
LockInst_Uniq_CML_Suspends DS FL8  The number of times a unit of work  *00342000
                                   from some other address space was   *00343000
                                   suspended for this address space's  *00344000
                                   local lock. This count represents   *00345000
                                   the cumulative number of times a    *00346000
                                   unit of work from another address   *00347000
                                   space was suspended when requesting *00348000
                                   the CML lock of this address space. *00349000
                                   LockInst_Comm_Suspends +            *00350000
                                   LockInst_Uniq_CML_Suspends is the    00351000
*                                  total number of suspends on this    *00352000
                                   address space's local lock.         *00353000
                                   Available with version              *00354000
                                   LockInst_Uniq_CML _Version_Number1  *00355000
                                   and above. Serialization: Lock this *00356000
                                   instrumentation block represents.    00357000
LockInst_Uniq_CML_Already_Suspended DS FL8 The number of times a unit  *00358000
                                   of work from some other address     *00359000
                                   space was suspended for this        *00360000
                                   address space's local lock. This    *00361000
                                   count represents the cummulative    *00362000
                                   number of times a unit of work from *00363000
                                   another address space was suspended *00364000
                                   and there was already another unit  *00365000
                                   of work waiting for that lock.      *00366000
                                   LockIns t_Comm_Already_Suspended +   00367000
*                                  Loc kInst_Uniq_CML_Already_Suspend  *00368000
                                   ed is the total number of times a   *00369000
                                   unit of work was supended for this  *00370000
                                   address space's local lock and      *00371000
                                   there was already another unit of   *00372000
                                   work waiting for the lock.          *00373000
                                   Available with version LockIns      *00374000
                                   t_Uniq_CML_Version_Number1 and      *00375000
                                   above. Serialization: Lock this     *00376000
                                   instrumentation block represents.    00377000
LockInst_Uniq_CML_Cont_Time DS CL8 The cummulative amount of time in a *00378000
                                   TOD clock format a unit of work     *00379000
                                   from some other address space was   *00380000
                                   suspended for this address space's  *00381000
                                   local lock. If Wn represents the    *00382000
                                   time each unit of work was          *00383000
                                   suspended, this field contains: W1  *00384000
                                   + W2 + W3 + ... + Wn.               *00385000
                                   LockInst_Comm_Cont_Time +           *00386000
                                   LockInst_Uniq_CML_Cont_Time is the   00387000
*                                  total time suspended on this        *00388000
                                   address space's local lock.         *00389000
                                   Available with version L            *00390000
                                   ockInst_Uniq_CML_Version_Numbe r1   *00391000
                                   and above. Serialization: Lock this *00392000
                                   instrumentation block represents.    00393000
LockInst_Uniq_CML_Suspends_Src DS FL8 The cumulative number of times a *00394000
                                   unit of work from this address      *00395000
                                   space (source) was suspended for    *00396000
                                   another address space's local lock. *00397000
                                   This count represents the           *00398000
                                   cumulative number of times a unit   *00399000
                                   of work from this address space was *00400000
                                   suspended when requesting the CML   *00401000
                                   lock of another address space.      *00402000
                                   Available with version               00403000
*                                  LockInst_Uniq_CML_Version_Numb er1  *00404000
                                   and above. Serialization: CS         00405000
LockInst_Uniq_CML_Already_Suspended_Src DS FL8 The cumulative number   *00406000
                                   of times a unit of work from this   *00407000
                                   address space (source) was          *00408000
                                   suspended for another address       *00409000
                                   space's local lock and there was    *00410000
                                   another unit of work already        *00411000
                                   suspended on that lock. This count  *00412000
                                   represents the cumulative number of *00413000
                                   times a unit of work from this      *00414000
                                   address space was suspended when     00415000
*                                  requesting the CML lock of another  *00416000
                                   address space and there was already *00417000
                                   a unit of work suspnded on that CML *00418000
                                   lock. Available with version L      *00419000
                                   ockInst_Uniq_CML_Version_Numbe r1   *00420000
                                   and above. Serialization: CS         00421000
LockInst_Uniq_CML_Cont_Time_Src DS CL8 The cumulative amount of time   *00422000
                                   in a TOD clock format of all units  *00423000
                                   of work that originated from this   *00424000
                                   address space and were suspended on *00425000
                                   a different address space's local   *00426000
                                   lock. This time represents the      *00427000
                                   total time units of work from this  *00428000
                                   address space were suspended for    *00429000
                                   requesting the CML lock of another  *00430000
                                   address space. If Wn represents the  00431000
*                                  time each unit of work was          *00432000
                                   suspended, this field contains: W1  *00433000
                                   + W2 + W3 + ... + Wn. Available     *00434000
                                   with version LockInst_Uniq_CML_Vers *00435000
                                   ion_Number1 and above.              *00436000
                                   Serialization: CS                    00437000
LockInst_Uniq_LockType_Min EQU 5   Note the LockInst_Uniq_LockType_Min *00438000
                                   can change from release to release. *00439000
                                   LockInst_Uniq_LockType_Min is the   *00440000
                                   lowest lock type supported for a    *00441000
                                   given release.                       00442000
LockInst_Uniq_LockType_Local EQU 5                                      00443000
LockInst_Uniq_LockType_Max EQU 5   Note the LockInst_Uniq_LockType_Max *00444000
                                   can change from release to release. *00445000
                                   LockInst_Uniq_LockType_Max is the   *00446000
                                   largest lock type supported for a   *00447000
                                   given release.                       00448000
LockInst_Uniq_CML_Acronym_Chars EQU C'LKUN'                             00449000
LockInst_Uniq_CML_Curr_Version_Number EQU 1                             00450000
LockInst_Uniq_CML_Version_Number1 EQU 1                                 00451000
LockInst_Num_CMSLocks EQU   4      Number of CMS locks                  00452000
LockInst_Num_LocalLocks EQU 1      Number of local locks                00453000
LockInst_Num_UniqueCMLLocks EQU 1  Number of unique CML locks           00454000
LockInst_Uniq_CML_Len EQU   *-LockInst_Uniq_CML                         00455000
.L0005                ANOP                                              00456000
                      AIF   ('&ZCBPRINT' EQ 'NO').P3                    00457000
                      AIF   ('&LIST' EQ 'YES').P4                       00458000
.P3                   ANOP                                              00459000
                      POP   PRINT                                       00460000
.P4                   ANOP                                              00461000
.P_EXIT               ANOP                                              00462000
                      MEND                                              00463000
**/ IHALOCKI_2:;                                                        00464000
* %IHALOCKI_INCLUDED = 'YES';                                           00465000
* %DCL ZCBPRINT CHAR EXT;                                               00466000
* %DEACTIVATE ZCBPRINT;                                                 00467000
* %DCL IHALOCKI_LIST CHAR EXT;                                          00468000
* %DEACTIVATE IHALOCKI_LIST;                                            00469000
* %IF IHALOCKI_LIST ^= 'NO' &                                           00470000
*    ZCBPRINT ^= 'NO' %THEN                                             00471000
*   %GOTO IHALOCKI_3;                                                   00472000
*   @LIST PUSH NOECHO;                                                  00473000
*   @LIST NOASSEMBLE NOECHO;                                            00474000
*   @LIST OFF C NOECHO;                                                 00475000
* %IHALOCKI_3:;                                                         00476000
*/* Start of PL/X Source                                             */ 00477000
*                                                                       00478000
*  ?AsaAdMac Name(ASAREUCO);                                            00479000
*                                                                       00480000
*  Dcl 1 LockInst_Comm Type BDY(DWord)                                  00481000
*       ,3 LockInst_Comm_Acronym  Char(4) /* Acronym                 */ 00482000
*       ,3 LockInst_Comm_Version  Fixed(31) /* Version number        */ 00483000
*       ,3 LockInst_Comm_Length   Fixed(15) /* Length of block       */ 00484000
*       ,3 LockInst_Comm_LockType Isa(LockInst_LockType) /* The         00485000
*               type of lock this lock instrumentation block            00486000
*               represents.  See EQUs for LockInst_LockType_*.          00487000
*               Available with version                                  00488000
*               LockInst_Comm_Version_Number1 and above.                00489000
*               Serialization:  N/A (none)                           */ 00490000
*       ,3 LockInst_Comm_Unique_Lock_Data_Addr Ptr(31) /* A pointer     00491000
*               to an area which contains information unique to         00492000
*               the lock represented by this LockInst_Comm block.       00493000
*               If there is no data associated with this lock,          00494000
*               this pointer will be zero.  Available with version      00495000
*               LockInst_Comm_Version_Number1 and above                 00496000
*               Serialization:  N/A (none)                           */ 00497000
*       ,3 LockInst_Comm_LockStats     /* Lock statistics            */ 00498000
*         ,5 LockInst_Comm_Suspends Fixed(64) /* The                    00499000
*               number of times a unit of work was suspended on this    00500000
*               lock.  Available with version                           00501000
*               LockInst_Comm_Version_Number1 and above                 00502000
*               Serialization:  Lock this instrumentation block         00503000
*                               represents.                          */ 00504000
*         ,5 LockInst_Comm_Already_Suspended Fixed(64) /* The           00505000
*               number of times a unit of work was suspended            00506000
*               on this lock when there was already at least 1 other    00507000
*               unit of work suspended for for the lock.                00508000
*               Available with version LockInst_Comm_Version_Number1    00509000
*               and above.                                              00510000
*               Serialization:  Lock this instrumentation block         00511000
*                               represents.                          */ 00512000
*         ,5 LockInst_Comm_Cont_Time Isa(AsaTimeStamp) Bdy(DWord) /*    00513000
*               The amount of time in a TOD clock format of all units   00514000
*               of work that were suspended on this lock.  If Wn        00515000
*               represents the time each unit of work was suspended,    00516000
*               this field contains:                                    00517000
*                       W1 + W2 + W3 + ... + Wn.                        00518000
*               Available with version LockInst_Comm_Version_Number1    00519000
*               and above.                                              00520000
*               Serialization:  Lock this instrumentation block         00521000
*                               represents.                             00522000
*                                                                    */ 00523000
*                                                                       00524000
*       ,3 * Char(0) Bdy(DWord)     /* End on double word boundary      00525000
*                                                                    */ 00526000
*     ;                                                                 00527000
*                                                                       00528000
*                                                                       00529000
* ] /*****************************************************************/ 00530000
* ] /*                                                               */ 00531000
* ] /* All common lock instrumentation block are assigned a          */ 00532000
* ] /* LockInst_LockType which indicates what type of lock           */ 00533000
* ] /* is represented by the common lock instrumentation block.      */ 00534000
* ] /*                                                               */ 00535000
* ] /* Any common lock instrumentation blocks that have a            */ 00536000
* ] /* unique instrumentation block must have the same               */ 00537000
* ] /* locktype between the common and unique block.                 */ 00538000
* ] /*                                                               */ 00539000
* ] /*****************************************************************/ 00540000
*                                                                       00541000
*  Dcl LockInst_LockType           Fixed(15) Type                       00542000
*     ,LockInst_LockType_Min       Isa(LockInst_LockType)               00543000
*                                 Constant(LockInst_LockType_SMFCMS) /* 00544000
*           Note the LockInst_LockType_Min can change from release      00545000
*           to release.  LockInst_LockType_Min is the lowest lock       00546000
*           type supported for a given release.                      */ 00547000
*     ,LockInst_LockType_FirstCMSLock Isa(LockInst_LockType)            00548000
*                                 Constant(LockInst_LockType_SMFCMS) /* 00549000
*           Only available in PL/X to serve as an easy way to know      00550000
*           which code to change if a CMS lock is removed.           */ 00551000
*     ,LockInst_LockType_SMFCMS    Isa(LockInst_LockType)               00552000
*                                  Constant(1)                          00553000
*     ,LockInst_LockType_ENQDEQCMS Isa(LockInst_LockType)               00554000
*                                  Constant(2)                          00555000
*     ,LockInst_LockType_LatchCMS  Isa(LockInst_LockType)               00556000
*                                  Constant(3)                          00557000
*     ,LockInst_LockType_CMS       Isa(LockInst_LockType)               00558000
*                                  Constant(4)                          00559000
*     ,LockInst_LockType_Local     Isa(LockInst_LockType)               00560000
*                                  Constant(5)                          00561000
*     ,LockInst_LockType_LastCMSLock Isa(LockInst_LockType)             00562000
*                                  Constant(LockInst_LockType_CMS) /*   00563000
*           Only available in PL/X to serve as an easy way to know      00564000
*           which code to change if another CMS lock is ever added   */ 00565000
*     ,LockInst_LockType_Max       Isa(LockInst_LockType)               00566000
*                                  Constant(LockInst_LockType_Local) /* 00567000
*           Note the LockInst_LockType_Max can change from release      00568000
*           to release.  LockInst_LockType_Max is the largest lock      00569000
*           type supported for a given release.                      */ 00570000
*        /* If the number of CMS locks or local locks changes,          00571000
*           please update IHAHW981.                                  */ 00572000
*     ;                                                                 00573000
*                                                                       00574000
*  Dcl LockInst_Comm_Acronym_Chars        Char(4)  Constant('LKCM')     00575000
*     ,LockInst_Comm_Curr_Version_Number  Fixed(31)                     00576000
*                       Constant(LockInst_Comm_Version_Number1)         00577000
*     ,LockInst_Comm_Version_Number1      Fixed(31) Constant(1)         00578000
*     ;                                                                 00579000
*                                                                       00580000
* %Dcl IHALOCKI_Include_CMS_ASSB_Offsets char ext;                      00581000
*                                                                       00582000
* %If (  translate(IHALOCKI_CBGEN) = 'YES'                              00583000
*      ! translate(IHALOCKI_Include_CMS_ASSB_Offsets) = 'YES'           00584000
*     ) %Then                                                           00585000
* %Do;                                                                  00586000
*                                                                       00587000
*  Dcl LockInst_ASSB_SMFCMS_Offset        Fixed(15)                     00588000
*               Constant(Offset(ASSB.ASSB_SMFCMS_LockInst_Addr)         00589000
*                       )                                               00590000
*     ,LockInst_ASSB_ENQDEQ_Offset        Fixed(15)                     00591000
*               Constant(Offset(ASSB.ASSB_ENQDEQ_CMS_LockInst_Addr)     00592000
*                       )                                               00593000
*     ,LockInst_ASSB_LATCH_Offset         Fixed(15)                     00594000
*               Constant(Offset(ASSB.ASSB_LATCH_CMS_LockInst_Addr)      00595000
*                       )                                               00596000
*     ,LockInst_ASSB_CMS_Offset           Fixed(15)                     00597000
*               Constant(Offset(ASSB.ASSB_CMS_LockInst_Addr)            00598000
*                       )                                               00599000
*     ,LockInst_ASSB_LOCAL_Offset         Fixed(15)                     00600000
*               Constant(Offset(ASSB.ASSB_Local_LockInst_Addr)          00601000
*                       )                                               00602000
*     ;                                                                 00603000
*                                                                       00604000
* %End;                                                                 00605000
*                                                                       00606000
*/********************************************************************/ 00607000
*/*                                                                  */ 00608000
*/* For every address space, the common local lock instrumentation   */ 00609000
*/* block points to a unique CML lock instrumentation block.         */ 00610000
*/* Rememember the following:                                        */ 00611000
*/*                                                                  */ 00612000
*/*   o All local lock requests where the lock owner and lock        */ 00613000
*/*     requestor are in the same address space will be              */ 00614000
*/*     tracked in the common local lock instrumentation block.      */ 00615000
*/*                                                                  */ 00616000
*/*   o All CML lock requests have the lock owner and requestor      */ 00617000
*/*     running in different address spaces.                         */ 00618000
*/*     All CML lock data will be tracked in the unique CML          */ 00619000
*/*     lock instrumentation block.                                  */ 00620000
*/*                                                                  */ 00621000
*/* For every address space, the unique CML lock instrumentation     */ 00622000
*/* block contains instrumentation data regarding the following:     */ 00623000
*/*                                                                  */ 00624000
*/*   o The address space that owns the lock.  Lock instrumentation  */ 00625000
*/*     data is recorded for units of work that get suspended        */ 00626000
*/*     on a CML lock in the address space that owns the lock.       */ 00627000
*/*                                                                  */ 00628000
*/*   o The address space that requests the lock.  Lock              */ 00629000
*/*     instrumentation data is recorded for all units of work in    */ 00630000
*/*     a given address space that get suspended for some other      */ 00631000
*/*     address space's CML lock.                                    */ 00632000
*/*                                                                  */ 00633000
*/* Let's say a thread in address space A requests address space     */ 00634000
*/* B's CML lock and the lock is unavailable.  When the thread       */ 00635000
*/* receives the lock, the following is updated:                     */ 00636000
*/*                                                                  */ 00637000
*/*   o The following data is updated in the address space B         */ 00638000
*/*     (address space that owns the lock)                           */ 00639000
*/*                                                                  */ 00640000
*/*     - LockInst_Uniq_CML_Suspends                                 */ 00641000
*/*     - LockInst_Uniq_CML_Already_Suspended (when appropriate)     */ 00642000
*/*     - LockInst_Uniq_CML_Cont_Time                                */ 00643000
*/*                                                                  */ 00644000
*/*   o The following data is updated in the address space A         */ 00645000
*/*     (address space that requested the lock)                      */ 00646000
*/*                                                                  */ 00647000
*/*     - LockInst_Uniq_CML_Suspends_Src                             */ 00648000
*/*     - LockInst_Uniq_CML_Already_Suspended_Src (when appropriate) */ 00649000
*/*     - LockInst_Uniq_CML_Cont_Time_Src                            */ 00650000
*/*                                                                  */ 00651000
*/********************************************************************/ 00652000
*                                                                       00653000
*  Dcl 1 LockInst_Uniq_CML Type Bdy(DWord)                              00654000
*       ,3 LockInst_Uniq_CML_Acronym Char(4) /* Acronym              */ 00655000
*       ,3 LockInst_Uniq_CML_Version Fixed(31) /* Version number     */ 00656000
*       ,3 LockInst_Uniq_CML_Length  Fixed(15) /* Length of block    */ 00657000
*       ,3 LockInst_Uniq_CML_LockType Isa(LockInst_Uniq_LockType) /*    00658000
*               The type of unique lock this lock instrumentation       00659000
*               block represents.  The LockType between                 00660000
*               LockInst_Comm_LockType and LockInst_Uniq_CML_LockType   00661000
*               are equal.  See EQUs for                                00662000
*               LockInst_Uniq_LockType_Local.  Available with version   00663000
*               LockInst_Uniq_CML_Version_Number1 and above.            00664000
*               Serialization:  N/A (none)                              00665000
*                                                                    */ 00666000
*       ,3 *                      Char(4) /* Reserved                */ 00667000
*       ,3 LockInst_Uniq_CML_LockStats  /* Lock statistics           */ 00668000
*         ,5 LockInst_Uniq_CML_Suspends Fixed(64) /* The                00669000
*               number of times a unit of work from some other          00670000
*               address space was suspended for this address            00671000
*               space's local lock.  This count represents the          00672000
*               cumulative number of times a unit of work from another  00673000
*               address space was suspended when requesting the         00674000
*               CML lock of this address space.                         00675000
*               LockInst_Comm_Suspends + LockInst_Uniq_CML_Suspends     00676000
*               is the total number of suspends on this address         00677000
*               space's local lock.  Available with version             00678000
*               LockInst_Uniq_CML_Version_Number1 and above.            00679000
*               Serialization:  Lock this instrumentation block         00680000
*                               represents.                             00681000
*                                                                    */ 00682000
*         ,5 LockInst_Uniq_CML_Already_Suspended Fixed(64) /* The       00683000
*               number of times a unit of work from some other address  00684000
*               space was suspended for this address space's local      00685000
*               lock.  This count represents the cummulative number of  00686000
*               times a unit of work from another address space was     00687000
*               suspended and there was already another unit of work    00688000
*               waiting for that lock. LockInst_Comm_Already_Suspended  00689000
*               + LockInst_Uniq_CML_Already_Suspended is the total      00690000
*               number of times a unit of work was supended             00691000
*               for this address space's local lock and there was       00692000
*               already another unit of work waiting for the lock.      00693000
*               Available with version                                  00694000
*               LockInst_Uniq_CML_Version_Number1 and above.            00695000
*               Serialization:  Lock this instrumentation block         00696000
*                               represents.                             00697000
*                                                                    */ 00698000
*         ,5 LockInst_Uniq_CML_Cont_Time Isa(AsaTimeStamp)              00699000
*                                 Bdy(DWord) /* The cummulative         00700000
*               amount of time in a TOD clock format a unit of work     00701000
*               from some other address space was suspended for this    00702000
*               address space's local lock. If Wn represents the time   00703000
*               each unit of work was suspended, this field contains:   00704000
*                       W1 + W2 + W3 + ... + Wn.                        00705000
*               LockInst_Comm_Cont_Time + LockInst_Uniq_CML_Cont_Time   00706000
*               is the total time suspended on this address space's     00707000
*               local lock.  Available with version                     00708000
*               LockInst_Uniq_CML_Version_Number1 and above.            00709000
*               Serialization:  Lock this instrumentation block         00710000
*                               represents.                             00711000
*                                                                    */ 00712000
*       ,3 LockInst_Uniq_CML_Suspends_Src Fixed(64) /* The              00713000
*               cumulative number of times a unit of work from this     00714000
*               address space (source) was suspended for another        00715000
*               address space's local lock.  This count represents the  00716000
*               cumulative number of times a unit of work from this     00717000
*               address space was suspended when requesting the CML     00718000
*               lock of another address space.  Available with version  00719000
*               LockInst_Uniq_CML_Version_Number1 and above.            00720000
*               Serialization:  CS                                      00721000
*                                                                    */ 00722000
*       ,3 LockInst_Uniq_CML_Already_Suspended_Src Fixed(64) /* The     00723000
*               cumulative number of times a unit of work from this     00724000
*               address space (source) was suspended for another        00725000
*               address space's local lock and there was another unit   00726000
*               of work already suspended on that lock.                 00727000
*               This count represents the cumulative number of times    00728000
*               a unit of work from this address space was suspended    00729000
*               when requesting the CML lock of another address space   00730000
*               and there was already a unit of work suspnded on that   00731000
*               CML lock.  Available with version                       00732000
*               LockInst_Uniq_CML_Version_Number1 and above.            00733000
*               Serialization:  CS                                      00734000
*                                                                    */ 00735000
*       ,3 LockInst_Uniq_CML_Cont_Time_Src Isa(AsaTimeStamp) /* The     00736000
*               cumulative amount of time in a TOD clock format of all  00737000
*               units of work that originated from this address space   00738000
*               and were suspended on a different address space's       00739000
*               local lock.  This time represents the total time units  00740000
*               of work from this address space were suspended for      00741000
*               requesting the CML lock of another address space.       00742000
*               If Wn represents the time each unit of work was         00743000
*               suspended, this field contains:                         00744000
*                       W1 + W2 + W3 + ... + Wn.                        00745000
*               Available with version                                  00746000
*               LockInst_Uniq_CML_Version_Number1 and above.            00747000
*               Serialization:  CS                                      00748000
*                                                                    */ 00749000
*       ,3 * Char(0) Bdy(DWord)     /* End on double word boundary      00750000
*                                                                    */ 00751000
*     ;                                                                 00752000
*                                                                       00753000
* ] /*****************************************************************/ 00754000
* ] /*                                                               */ 00755000
* ] /* All unique lock instrumentation block are assigned a          */ 00756000
* ] /* LockInst_LockType which indicates what type of lock           */ 00757000
* ] /* is represented by the common lock instrumentation block.      */ 00758000
* ] /*                                                               */ 00759000
* ] /* Any common lock instrumentation blocks that have a            */ 00760000
* ] /* unique instrumentation block must have the same               */ 00761000
* ] /* LockType between the common and unique block.                 */ 00762000
* ] /*                                                               */ 00763000
* ] /*****************************************************************/ 00764000
*                                                                       00765000
*  Dcl LockInst_Uniq_LockType             Fixed(15) Type                00766000
*     ,LockInst_Uniq_LockType_Min Isa(LockInst_Uniq_LockType)           00767000
*                             Constant(LockInst_Uniq_LockType_Local) /* 00768000
*           Note the LockInst_Uniq_LockType_Min can change from release 00769000
*           to release.  LockInst_Uniq_LockType_Min is the lowest lock  00770000
*           type supported for a given release.                      */ 00771000
*     ,LockInst_Uniq_LockType_Local Isa(LockInst_Uniq_LockType)         00772000
*                             Constant(5)                               00773000
*     ,LockInst_Uniq_LockType_Max   Isa(LockInst_Uniq_LockType)         00774000
*                             Constant(LockInst_Uniq_LockType_Local) /* 00775000
*           Note the LockInst_Uniq_LockType_Max can change from release 00776000
*           to release.  LockInst_Uniq_LockType_Max is                  00777000
*           the largest lock type supported for a given release.   */   00778000
*     ;                                                                 00779000
*                                                                       00780000
*                                                                       00781000
*  Dcl LockInst_Uniq_CML_Acronym_Chars Char(4) Constant('LKUN')         00782000
*     ,LockInst_Uniq_CML_Curr_Version_Number Fixed(31)                  00783000
*                       Constant(LockInst_Uniq_CML_Version_Number1)     00784000
*     ,LockInst_Uniq_CML_Version_Number1 Fixed(31) Constant(1)          00785000
*     ;                                                                 00786000
*                                                                       00787000
*  Dcl LockInst_Num_CMSLocks Fixed(32)                                  00788000
*               Constant(LockInst_LockType_LastCMSLock)  /*             00789000
*                                      Number of CMS locks       @01A*/ 00790000
*     ,LockInst_Num_LocalLocks Fixed(32) Constant(1)     /*             00791000
*                                      Number of local locks     @01A*/ 00792000
*     ,LockInst_Num_UniqueCMLLocks Fixed(32) Constant(1) /* Number      00793000
*                                      of unique CML locks       @01A*/ 00794000
*     ;                                                                 00795000
*                                                                       00796000
*@LOGIC;                                                                00797000
* #PRAGMA TOOL=CBGEN.                                                   00798000
* #USEORG.                                                              00799000
* #ALIGNOP.                                                             00800000
* #NOTUPPER.                                                            00801000
* #LINE.%IHALOCKI_CBGEN = 'YES';                                        00802000
* #LINE.%INCLUDE SYSLIB(IHALOCKI);                                      00803000
* #DELETE.AsaTimeStampUH                                                00804000
* #DELETE.AsaTimeStampLH                                                00805000
* #DELETE.LockInst_LockType_FirstCMSLock                                00806000
* #DELETE.LockInst_LockType_LastCMSLock                                 00807000
* #NOMAP.                                                               00808000
* #LINE.%INCLUDE SYSLIB(ASAREUCO);                                      00809000
* #LINE.Dcl ASCBASSB Ptr(31);                                           00810000
* #LINE.%INCLUDE SYSLIB(IHAASSB);                                       00811000
* #MAP.                                                                 00812000
* #EPRAGMA.                                                             00813000
*@ENDLOGIC;                                                             00814000
*/* End of PL/X Source                                               */ 00815000
* %IF IHALOCKI_LIST ^= 'NO' &                                           00816000
*    ZCBPRINT ^= 'NO' %THEN                                             00817000
*   %GOTO IHALOCKI_4;                                                   00818000
*   @LIST POP NOECHO;                                                   00819000
* %IHALOCKI_4:;                                                         00820000
* %END;                                                                 00821000
