*/**** Start of Specifications for BLSABDPL **************************/ 00010000
*/*                                                                  */ 00020000
*/* $MAC(BLSABDPL) COMP(SC132) PROD(HBB77B0): Exit parameter list    */ 00030000
*/*                                                                  */ 00040000
*/* PROPRIETARY STATEMENT =                                          */ 00050000
*/*                                                                  */ 00060000
*/*   Licensed Materials - Property of IBM                           */ 00070000
*/*   5650-ZOS Copyright IBM Corp. 1975,  2017                       */ 00080000
*/*                                                                  */ 00090000
*/*   Status = HBB77B0                                               */ 00100000
*/*                                                                  */ 00110000
*/* EXTERNAL CLASSIFICATION: PI                                      */ 00120000
*/* END OF EXTERNAL CLASSIFICATION:                                  */ 00130000
*/*                                                                  */ 00140000
*/* DESCRIPTIVE NAME: ABDUMP Parameter List for Formatters           */ 00150000
*/*   ACRONYM:  ABDPL                                                */ 00160000
*/*                                                                  */ 00170000
*/* MACRO NAME: BLSABDPL                                             */ 00180000
*/* DSECT NAME: ABDPL, ADPLEXTN, AMDCPMAP, ADPLPACC, ADPLPFMT,       */ 00190000
*/*             ADPLPFXT, ADPLPECT, ADPLPSEL, ADPLOSEL, ADPLOSNT     */ 00200000
*/* COMPONENT:  IPCS (SC132)                                         */ 00210000
*/* EYE-CATCHER: None                                                */ 00220000
*/*     OFFSET:  Not applicable                                      */ 00230000
*/*     LENGTH:  Not applicable                                      */ 00240000
*/*                                                                  */ 00250000
*/* STORAGE ATTRIBUTES:                                              */ 00260000
*/*   SUBPOOL:  78 (IPCS), 252 (SNAP)                                */ 00270000
*/*   KEY:  0 (SNAP). 8 (IPCS)                                       */ 00280000
*/*   RESIDENCY:  LOC(BELOW,ANY)                                     */ 00290000
*/*   MAIN STORAGE:  No                                              */ 00300000
*/*   AUXILIARY STORAGE:  Yes                                        */ 00310000
*/*   VIRTUAL STORAGE:  No                                           */ 00320000
*/*   DATA SPACE: No                                                 */ 00330000
*/*                                                                  */ 00340000
*/* SIZE: 96 bytes                                                   */ 00350000
*/* CREATED BY: IPCS, SNAP                                           */ 00360000
*/* POINTED TO BY: None                                              */ 00370000
*/* SERIALIZATION: None                                              */ 00380000
*/*                                                                  */ 00390000
*/* FUNCTION: BLSABDPL contains mappings of parameter blocks used    */ 00400000
*/* for communication between IPCS and SNAP dump formatting hosts    */ 00410000
*/* and the dump formatting exits invoked by them.  It is also used  */ 00420000
*/* by IPCS and SNAP when calling exits to format GTF records.       */ 00430000
*/*                                                                  */ 00440000
*/* ABDPL     is passed by IPCS or SNAP to each exit.  The same      */ 00450000
*/*           block is passed back to service routines available in  */ 00460000
*/*           the two environments.                                  */ 00470000
*/*                                                                  */ 00480000
*/* ADPLEXTN  is an extension to ABDPL, the address of which is      */ 00490000
*/*           filled in by IPCS or SNAP before invoking exits.       */ 00500000
*/*                                                                  */ 00510000
*/* AMDCPMAP  is a description of the data returned by the storage   */ 00520000
*/*           access services in response to a request for CPU       */ 00530000
*/*           STATUS information.  Note:  This is, hopefully, not    */ 00540000
*/*           to be confused with CPU STATUS records used by stand   */ 00550000
*/*           alone dump to capture the result of a processor Store  */ 00560000
*/*           Status operation for each CPU in the system being      */ 00570000
*/*           dumped.  The latter may be accessed via the IPCS       */ 00580000
*/*           Symbol and Storage Map services dump access functions. */ 00590000
*/*                                                                  */ 00600000
*/* ADPLPACC  is a description of the parameter list passed by exits */ 00610000
*/*           when they invoke the storage access service.           */ 00620000
*/*                                                                  */ 00630000
*/* ADPLPFMT  is a description of the parameter list passed by exits */ 00640000
*/*           when they invoke the control block formatter and the   */ 00650000
*/*           model processor services.                              */ 00660000
*/*                                                                  */ 00670000
*/* ADPLPFXT  is a description of an extension to ADPLPFMT that may, */ 00680000
*/*           optionally, be passed by exits to the control block    */ 00690000
*/*           formatter and the model processor services.            */ 00700000
*/*                                                                  */ 00710000
*/* ADPLPECT  is a description of the parameter list passed by exits */ 00720000
*/*           to the ECT service.                                    */ 00730000
*/*                                                                  */ 00740000
*/* ADPLPSEL  is a description of the parameter list passed by exits */ 00750000
*/*           to the select service.                                 */ 00760000
*/*                                                                  */ 00770000
*/* ADPLOSEL  is a description of the header portion of the data     */ 00780000
*/*           returned by the select service to exits.               */ 00790000
*/*                                                                  */ 00800000
*/* ADPLOSNT  is a description of one array entry, many of which     */ 00810000
*/*           may be returned by the select service to exits.        */ 00820000
*/*                                                                  */ 00830000
*/* METHOD OF ACCESS:                                                */ 00840000
*/*   Assembler:  BLSABDPL AMDEXIT=<YES!NO>,  Default is YES         */ 00850000
*/*                     AMDOSEL=<YES!NO>,     Default is YES         */ 00860000
*/*                     AMDPACC=<YES!NO>,     Default is YES         */ 00870000
*/*                     AMDPECT=<YES!NO>,     Default is YES         */ 00880000
*/*                     AMDPFMT=<YES!NO>,     Default is YES         */ 00890000
*/*                     AMDPFXT=<YES!NO>,     Default is NO          */ 00900000
*/*                     AMDPSEL=<YES!NO>,     Default is YES         */ 00910000
*/*                     DSECT=<YES!NO>        Default is YES         */ 00920000
*/*                                                                  */ 00930000
*/*   PL/X:       %INCLUDE SYSLIB(BLSABDPL)                          */ 00940000
*/*                                                                  */ 00950000
*/* DELETED BY: IPCS, SNAP                                           */ 00960000
*/* DEPENDENCIES: None                                               */ 00970000
*/* DISTRIBUTION LIBRARY: AMACLIB                                    */ 00980000
*/*                                                                  */ 00990000
*/* ================================================================ */ 01000000
*/*                                                                  */ 01010000
*/* CHANGE ACTIVITY=                                                 */ 01020000
*/*                                                                  */ 01030000
*/*   Products=                                                      */ 01040000
*/* $L0= EBB1102,EBB1102,75001,PDEP: MVS/370 base                    */ 01050000
*/* $L1= HBB2102,HBB2102,82082,PDE1: MVS/XA support                  */ 01060000
*/* $L2= SRVADFXT,JBB2220,84067,PDE4: Dump exit debugging tool       */ 01070000
*/* $L3= SRVASADA,JBB2220 84061,PD31: ANALYZE subcommand support     */ 01080000
*/* $L4= SRVAPLAS,JBB2220,84104,PDE1: Clean PL/AS compilation        */ 01090000
*/* $L5= IPCSENH,HBB3310,86057,PDE4: Formatting enhancements,        */ 01100000
*/*      New services                                                */ 01110000
*/*      Eliminate FORMAT, PRINT JOBNAME, NUCLEUS, HEADER exits      */ 01120000
*/* $L6= NAMETOK,JBB4422,91029,PDE4: NAME/TOKEN service              */ 01130000
*/*    = IPCSM,HBB4430,910325,PDE4: Withdrawn                        */ 01140000
*/* $L7= SYSLKDFM,HBB5510,920920,PDNY: IXLZSTR exit service          */ 01150000
*/* $L8= SYSLKDFM,HBB5510,92300,PDE1: IXLZSTR exit service           */ 01160000
*/*      Support parameterization of service code references         */ 01170000
*/* $L9= DMPMG,HBB5510,93048,PDE1: Enhance the following services:   */ 01180000
*/*                                                                  */ 01190000
*/*      ECT service                                                 */ 01200000
*/*        Allow exits to invoke subcommands and command procedures  */ 01210000
*/*        containing IPCS subcommands                               */ 01220000
*/*                                                                  */ 01230000
*/*      SELECT service                                              */ 01240000
*/*        Allow exits to indicate that inactive ASIDs may be        */ 01250000
*/*        specified and should be selected via the ASIDLIST option. */ 01260000
*/*        This is appropriate when the exit intends to process      */ 01270000
*/*        trace entries that may have been produced during the      */ 01280000
*/*        period that the ASIDs in question processed multiple      */ 01290000
*/*        units of work.                                            */ 01300000
*/*    = ME12207,HBB7750,07338,PDE1: Flagging cleanup                */ 01310000
*/* $LA= ME23925,HBB7790,120531,RSTLSV: Support 2 bytes in CPU ID    */ 01320000
*/* $LB= ADUPLX, HBB77A0,150731,PD00BN: ADPLESRV declared AMODE(31)  */ 01321000
*/* $LC= 127823, HBB77B0,160726,PD00Ht: Define ADPLEJNT              */ 01321101
*/*                                                                  */ 01322000
*/* ---------------------------------------------------------------- */ 01323000
*/*                                                                  */ 01324000
*/*   Design changes=                                                */ 01325000
*/* $D1= DCR0054,JBB2125,83060,PDPD: Improved services               */ 01326000
*/* $D2= DCR0054,JBB2125,83083,PDE2: Improved services               */ 01327000
*/* $D3= DCR0054,JBB2125,83083,PDE4: Improved services               */ 01328000
*/* $D4= DCR0001,JBB2214,84152,PDE4: 2 dimensional array display     */ 01329000
*/*    = DEO0098,HBB4410,89049,PDE4: SRB Q formatter, define         */ 01330000
*/*      component use fields as pointers                            */ 01340000
*/* $D5= DKB0014,HBB4430,92007,PDE1: Remove IPCSM                    */ 01350000
*/* $D6= DKB0054,HBB4430,92036,PD34EP: Add ADPLSCSI service constant */ 01360000
*/*    = DIG0016,HBB5510,92316,PDNY: Duplicate of DKB0014            */ 01370000
*/* $D7= DN70043,HBB5520,94124,PDE1: Add support for a SYMDEF exit   */ 01380000
*/*      service                                                     */ 01390000
*/*                                                                  */ 01400000
*/* ---------------------------------------------------------------- */ 01410000
*/*                                                                  */ 01420000
*/*   PTMs=                                                          */ 01430000
*/* $P1= PAJ0139,JBB2125,83207,PDE4: Report dump type from select    */ 01440000
*/* $P2= PAJ0311,JBB2125,83255,PDE1: Add initial values/symbolic     */ 01450000
*/*      lengths for each block and clean up remarks                 */ 01460000
*/* $P3= PAJ0320,JBB2125,83255,PDE1: Correct misleading remark       */ 01470000
*/* $P4= PAJ0374,JBB2125,83273,PDE1: Bring back AMDJAMAP             */ 01480000
*/* $P5= PC40247,HBB3310,86268,PDE4: Add fill char option to format  */ 01490000
*/* $P6= PC40300,HBB3310,86288,PDE4: Delete ADPLIDX field-no longer  */ 01500000
*/*      supported in this release.                                  */ 01510000
*/* $P7= PC40609,HBB3310,87029,PDE4: Report missing XDT to caller    */ 01520000
*/* $P8= PC42159,HBB3310,88027,PDE4: Relieve 1023 ASID limit from    */ 01530000
*/*      select ASID exit service.                                   */ 01540000
*/* $P9= PEO1551,HBB4410,89055,PDE4: Add pointer definitions for     */ 01550000
*/*      DCR98                                                       */ 01560000
*/* $PA= PEO1939,HBB4410,89143,PDAX: Force ADPLFXHD to a word bdy    */ 01570000
*/*    = PN71760,HBB5520,94277,PDE1: Update prolog to include        */ 01580000
*/*      current levels of SHOWHDR tags                              */ 01590000
*/* $PB= PXD0454,HBB7703,99263,PDE1: Supply a bit that indicates     */ 01600000
*/*      to routines running under SNAP and IPCS that the data being */ 01610000
*/*      processed came from an ESAME-mode system                    */ 01620000
*/*    = PXD0502,HBB7703,99274,PDE1: Correct assembly language       */ 01630000
*/*      implementation of PXD0454                                   */ 01640000
*/*    = PXD0606,HBB7703,99299,PDE1: Update description of CPU data  */ 01650000
*/*      returned by storage access service to clarify content from  */ 01660000
*/*      z/Architecture systems                                      */ 01670000
*/* $PC= PX00684,HBB7705,00283,PDE1: Use z/Architecture term         */ 01680000
*/* $PD= PYN0879,HBB7708,03022,PDE1: Define length and type          */ 01690000
*/*      attributes on EQU statements correctly (or not at all)      */ 01700000
*/* $PE= ME00000,HBB7750,07062,PDE1: Make remark associated with     */ 01710000
*/*      ADPLPRNC somewhat meaningful to IPCS users                  */ 01720000
*/* $PF= ME26330,HBB77A0,13172,PDNJ: allow cbformat model header to  */ 01730000
*/*      show full 64 bits of addresses over 31b                     */ 01740000
*/* $PG= ME26993,HBB77A0,13172,PDNJ: show if source is active storage*/ 01750000
*/*                                                                  */ 01760000
*/* ---------------------------------------------------------------- */ 01770000
*/*                                                                  */ 01780000
*/*   Maintenance=                                                   */ 01790000
*/* $01= OY03669,JBB2125,87134,PDAX: Add ADPLPENM flag               */ 01800000
*/* $02= OY16079,HBB3310,88281,PFAH: Add ADPLFXEO for extended       */ 01810000
*/*      position offset.                                            */ 01820000
*/*    = OY18871,JBB2220,88333: Add ADPLNFLD bit in ADPLFLAG to      */ 01821000
*/*      indicate translation requirement or not.  (This fix should  */ 01822000
*/*      be only in release JBB2220, not applicable to other         */ 01823000
*/*      releases. )                                                 */ 01824000
*/* $03= OY24149,HBB3310,900401,PDAX: Add ADPLPTOC                   */ 01825000
*/*                                                                  */ 01826000
*/* End of Specifications for BLSABDPL *******************************/ 01827000
*                                                                       01828000
*   %GOTO ABDPLPLS;                                                     01829000
*                                                                       01830000
*/*                                                                     01840000
         MACRO                                                          01850000
         BLSABDPL &AMDEXIT=YES,&DSECT=YES,&AMDCPST=NO,                 *01860000
               &AMDPACC=YES,&AMDPFMT=YES,&AMDPECT=YES,                 *01870000
               &AMDPSEL=YES,&AMDOSEL=YES,&AMDPFXT=NO               @L5C 01880000
         IEZBITS ,                Define symbolic bits             @L1A 01890000
         AIF ('&AMDEXIT' NE 'YES').ABDPL02                              01900000
*/* ================================================================ */ 01910000
*/* Exit parameter list provided by IPCS and SNAP to exits           */ 01920000
*/* ================================================================ */ 01930000
*/*                                                                     01940000
         AIF ('&DSECT' EQ 'YES').ABDPL00                                01950000
ABDPL    EQU    *                 Common IPCS/SNAP                     *01960000
                                  parameter list to exits          @P3C 01970000
         AGO    .ABDPL01                                                01980000
.ABDPL00 ANOP                                                           01990000
ABDPL    DSECT ,                  Common IPCS/SNAP                     *02000000
                                  parameter list to exits          @P3C 02010000
.ABDPL01 SPACE 1                                                        02020000
ADPLCBP  DS    0A                 Address of block for exit        @L5C 02030000
ADPLTCB  DC    A(0)               TCB of task being displayed      @P2C 02040000
ADPLASID DC    H'0'               Address space identifier         @P2C 02050000
ADPLSBPL DC    B'00000000'        Subpool used to get save area    @P2C 02060000
*                                 by component routine                  02070000
ADPLFLAG DC    B'00000000'        Flag field                       @P2C 02080000
ADPLSNPR EQU   BIT0               0=Module loaded by SNAP          @L1C 02090000
*                                 1=Module loaded by IPCS               02100000
ADPLSYTM EQU   BIT1               0=System is OS/VS2               @L1C 02110000
*                                 1=System is OS/VS1                    02120000
ADPLDMGT EQU   BIT2               0=Format DEB only (SNAP caller)  @L1C 02130000
*                                 1=Format DEB, DCB, IOB (SNAP caller)  02140000
ADPLIPCS EQU   BIT3               Called by IPCS                   @L1C 02150000
ADPLPRT  EQU   BIT4               On, SYSPRINT data set request    @L1C 02160000
*                                 Off, PRINTER data set request         02170000
ADPLSYNO EQU   BIT5               Exit given control for syntax    @L1C 02180000
*                                 checking only                @G860P2Z 02190000
ADPLEJEC EQU   BIT6               For a write to PRINTER data set  @L1C 02200000
*                                 eject page first             @ZMC1842 02210000
ADPLACTV EQU   BIT7               Source is ACTIVE storage         @PGA 02220000
ADPLBUF  DC    A(0)               Pointer to output buffer         @P2C 02230000
ADPLPRNT DC    A(0)               Address of print routine         @P2C 02240000
ADPLCVT  DC    A(0)               Address of CVT                   @P2C 02250000
ADPLMEMA DC    A(0)               Address of memory access routine @P2C 02260000
ADPLFRMT DC    A(0)               Address of format routine        @P2C 02270000
ADPLCOM1 DC    A(0)               Reserved for component use       @P2C 02280000
ADPLCOM2 DC    A(0)               Reserved for component use       @P2C 02290000
ADPLCOM3 DC    A(0)               Reserved for component use       @P2C 02300000
ADPLCOM4 DC    A(0)               Reserved for component use       @P2C 02310000
ADPLFMT1 DC    A(0)               Reserved for format routine      @P2C 02320000
ADPLFMT2 DC    A(0)               Reserved for format routine      @P2C 02330000
ADPLEXT  DC    A(0)               Address of extension, whose 1st  @P2C 02340000
*                                 word contains the address of the      02350000
*                                 operands list or zero if none.        02360000
ADPLABDA DC    A(0)               Address of host internal         @P2C 02370000
*                                 parameter list               @G33SPHW 02380000
ADPLTRFM DC    A(0)               Address of trace control block   @P2C 02390000
*                                 (SNAP only)                  @G860P2Z 02400000
ADPLSERV DC    A(0)               ->Services router                @P2C 02410000
ADPLLEV  DC    AL1(0)             Index indentation level          @P2C 02420000
         DC    AL1(0)             Entry code number corresponding  @P6C 02430000
*                                 to AMDMNDXT macro entries             02440000
*                                 Support of this interface ended this  02450000
*                                 release                               02460000
ADPLLNCT DC    H'0'               Line count per output page       @P2C 02470000
ADPLLNRM DC    H'0'               Current number of lines          @P2C 02480000
*                                 remaining on the output page          02490000
ADPLDLEN DC    H'0'               Storage access request length    @P2C 02500000
ADPLOPLN DC    H'0'               Length of verb operand list      @P2C 02510000
ADPLPRDP DC    B'0'               Dump read/format flags           @P2C 02520000
ADPLVIRT EQU   BIT0               Virtual address read             @L1C 02530000
ADPLREAL EQU   BIT1               Real address read                @L1C 02540000
ADPLCPU  EQU   BIT2               CPU data read                    @L1C 02550000
ADPLHDR  EQU   BIT3               Dump header read                 @L1C 02560000
*        The following bit governs the masking of register zero prior   02570000
*        to its use by the storage access service as a virtual          02580000
*        storage address.  If it is off, X'7FFFFFFF' will be            02590000
*        logically ANDed with register zero to obtain the requested     02600000
*        address.  If it is on, X'00FFFFFF' will be logically ANDed     02610000
*        with register zero to obtain the requested address.            02620000
ADPLSAMK EQU   BIT7               MVS/370 virtual address          @L1A 02630000
         DC    AL1(0)             reserved                         @P2C 02640000
ADPLNDX  DC    A(0)               Address of the TOC service       @P2C 02650000
*                                 routine                               02660000
ADPLPGNO DC    F'0'               Current output page number       @P2C 02670000
ADPLSRA  DC    A(0)               ->Services router area           @P2C 02680000
         DC    XL4'00'            reserved                         @P2C 02690000
ADPLLEN  EQU   *-ABDPL            Length of ABDPL                  @P2A 02700000
         SPACE 2                                                   @D1P 02710000
*/* ================================================================ */ 02720000
*/* Exit parameter list extension provided by IPCS and SNAP to exits */ 02730000
*/* ================================================================ */ 02740000
*/*                                                                     02750000
         AIF ('&DSECT' EQ 'YES').ADPLE00                           @D1A 02760000
ADPLEXTN EQU    *                 ABDPL extension                  @P3C 02770000
         AGO    .ADPLE01                                           @D1A 02780000
.ADPLE00 ANOP  ,                                                   @D1A 02790000
ADPLEXTN DSECT ,                  ABDPL extension                  @P3C 02800000
.ADPLE01 SPACE 1                                                   @D1A 02810000
ADPLOPTR DC    A(0)               ->Operands buffer                @P2C 02820000
ADPLCPPL DC    A(0)               ->TSO CPPL                       @P2C 02830000
ADPLESYP DC    A(0)               -> BLSRESSY                      @L5C 02840000
ADPLCODE DC    H'0'               Router return code               @P2C 02850000
ADPLPFLG DC    B'00000000'        Processing flags                 @P2C 02860000
ADPLNMSG EQU   BIT0               1=Suppress error messages        @D1A 02870000
ADPLNPRT EQU   BIT1               1=Suppress print services        @L3A 02880000
ADPLEJNT EQU   BIT2               ADPLEJEC should not eject             02881000
*                                 for IPCS TERMINAL                @LCA 02882000
ADPLEFLG DC    B'00000000'        Error flags                      @P2C 02890000
ADPLEFAS EQU   BIT0               1=No automatic storage           @D1A 02900000
ADPLMAXL DC    AL1(0)             Recommended maximum line width   @P2C 02910000
ADPLSCOL DC    AL1(0)             Control block formatting start       *02920000
                                  column.  Zero based. Zero means do   *02930000
                                  not offset the data.             @L3A 02940000
ADPLCOLS DC    AL1(0)             Control block formatting column  @P2C 02950000
*                                 spacing                               02960000
         DC    XL1'00'            reserved                         @L3C 02970000
ADPLEFCD DC    H'0'               Exit function code               @L3A 02980000
ADPLEFAN EQU   1,2,C'H'           Exit called as ANALYZE exit      @PDC 02990000
ADPLEFAC EQU   2,2,C'H'           Exit called as ASCB exit         @PDC 03000000
ADPLEFTC EQU   3,2,C'H'           Exit called as TCB exit          @PDC 03010000
ADPLEFSR EQU   4,2,C'H'           Exit called as formatting exit   @PDC 03020000
ADPLEFLE DC    XL1'00'            Environment flags                @PBA 03030000
ADPLZARCH EQU  BIT0               z/Architecture dump data         @PCA 03040000
ADPLESAME EQU  BIT0               z/Architecture dump data         @PCC 03050000
ADPLRSV1 DC    XL41'00'           reserved                         @PBC 03060000
ADPLEXTL EQU   *-ADPLEXTN         Length of ADPLEXTN               @P2A 03070000
         SPACE 2                                                   @D1P 03080000
*        ---------------------------------------------------------      03090000
*        Service codes defining services to router                      03100000
*        ---------------------------------------------------------      03110000
         SPACE 1                                                   @D1P 03120000
ADPLS000 EQU   1,4,C'F'           1st service code in use          @PDC 03130000
ADPLSACC EQU   1,4,C'F'           Storage access service           @PDC 03140000
ADPLSPRT EQU   2,4,C'F'           Print service                    @PDC 03150000
ADPLSFMT EQU   3,4,C'F'           Format model processor           @PDC 03160000
ADPLSCBF EQU   4,4,C'F'           Control block formatter service  @PDC 03170000
ADPLSNDX EQU   5,4,C'F'           Index service                    @PDC 03180000
ADPLSECT EQU   6,4,C'F'           Ect exit service                 @PDC 03190000
ADPLSSEL EQU   7,4,C'F'           Select ASID service              @PDC 03200000
ADPLSEQS EQU   8,4,C'F'           Equate symbol service            @PDC 03210000
ADPLSGTS EQU   9,4,C'F'           Get symbol service               @PDC 03220000
ADPLSCQE EQU   10,4,C'F'          CQE create service               @PDC 03230000
ADPLSCBS EQU   11,4,C'F'          CB status service                @PDC 03240000
ADPLSPR2 EQU   12,4,C'F'          Expanded Print service with a parm   *03250000
                                  list.  See BLSUPPR2 mapping      @PDC 03260000
ADPLSADS EQU   13,4,C'F'          Add symptom service              @PDC 03270000
ADPLSWHS EQU   14,4,C'F'          WHERE service                    @PDC 03280000
ADPLSNAM EQU   15,4,C'F'          NAME service                     @PDC 03290000
ADPLSSYM EQU   16,4,C'F'          SYMBOL service                   @PDC 03300000
ADPLSMAP EQU   17,4,C'F'          MAP service                      @PDC 03310000
ADPLSNTK EQU   18,4,C'F'          NAME/TOKEN service               @PDC 03320000
ADPLSCSI EQU   19,4,C'F'          CSVINFO service                  @PDC 03330000
ADPLSSTR EQU   20,4,C'F'          IXLZSTR service                  @PDC 03340000
ADPLSSYD EQU   21,4,C'F'          SYMDEF service                   @PDC 03350000
ADPLS999 EQU   21,4,C'F'          Last service code in use         @PDC 03360000
.ABDPL02 AIF ('&AMDCPST' NE 'YES').ABDPL04                     @G860P2Z 03370000
         EJECT                                                 @G860P2Z 03380000
**********************************************************************  03390000
*                                                                       03400000
*   AMDCPMAP is a mapping of the CPU STATUS data obtained from a dump   03410000
*   upon request.  An exit requests this data by setting ADPLCPU in     03420000
*   the exit parameter list prior to invoking the storage access        03430000
*   service routine, whose address is in ADPLMEMA.                      03440000
*                                                                       03450000
*   Note:  This API is archaic but is being kept minimally              03460000
*   functional for compatibility.  Exit code that requires all 16       03470000
*   floating point registers, the floating point control register, a    03480000
*   16-byte PSW, ... should use the dump access functions available     03490000
*   via the IPCS symbol or storage map services.                        03500000
*                                                                       03510000
*   When this service is requested against a SADUMP of a                03520000
*   z/Architecture system:                                              03530000
*                                                                       03540000
*   o  The right sizes of GPRs and control registers are returned.      03550000
*                                                                       03560000
*   o  The 8-byte PSW returned is produced from the 16-byte             03570000
*      z/Architecture PSW in the same way as system services do it.     03580000
*      The final bit of the instruction address will be one if the      03590000
*      z/Architecture PSW referenced storage above 7FFFFFFF.            03600000
*                                                                       03610000
**********************************************************************  03620000
AMDCPMAP DSECT ,                  CPU status record data               *03630000
                                  mapping                          @P3C 03640000
AMDCFLAG DC    BL1'00000000'      CPU status flags                 @P2C 03650000
AMDCUNIP EQU   BIT0               CPU is a uniprocessor:           @L1C 03660000
*                                 Processor address is invalid.         03670000
AMDCSINV EQU   BIT1               Stand-alone dump unable to store @L1C 03680000
*                                 status.  Only  processor address      03690000
*                                 is valid.                             03700000
AMDCGPRV EQU   BIT2               Operator did not perform store   @L1C 03710000
*                                 status.  Only general registers       03720000
*                                 and, if MP, processor address         03730000
*                                 are valid.                            03740000
AMDCSADP EQU   BIT3               Not from a stand alone dump      @L1C 03750000
AMDCPAD1 DC    XL1'00'            Padding                          @P2C 03760000
AMDCPADR DC    H'0'               Processor address                @P2C 03770000
AMDCREGS DC    0XL168'00'         Registers and current PSW        @P2C 03780000
AMDCFREG DC    XL32'00'           Floating point REGs 0,2,4,6      @P2C 03790000
AMDCGREG DC    XL64'00'           General registers                @P2C 03800000
AMDCCREG DC    XL64'00'           Control registers                @P2C 03810000
AMDCCPSW DC    XL8'00'            Current PSW                      @P2C 03820000
AMDCPREG DC    A(0)               Prefix register                  @P2C 03830000
AMDCTIME DC    XL8'00'            CPU timer value                  @P2C 03840000
AMDCLOCK DC    XL8'00'            Clock comparator value           @P2C 03850000
AMDCPMAL EQU   *-AMDCPMAP         Length of AMDCPMAP               @P2A 03860000
.ABDPL04 AIF   ('&AMDPACC' NE 'YES').ABDPL07                       @D2A 03870000
*/* ================================================================ */ 03880000
*/* Storage access parameter list                                    */ 03890000
*/* ================================================================ */ 03900000
*/*                                                                     03910000
         AIF   ('&DSECT' EQ 'YES').ABDPL05                         @D2A 03920000
ADPLPACC DS    0D                 Storage access parameter list    @P2C 03930000
         AGO   .ABDPL06                                            @D2A 03940000
.ABDPL05 ANOP  ,                                                   @D2A 03950000
ADPLPACC DSECT ,                  Storage access parameter list    @P2C 03960000
.ABDPL06 SPACE 1                                                   @D2A 03970000
ADPLPAAD DC    A(0)               Dump address to access           @P2C 03980000
ADPLPART DC    A(0)               Buffer location of data          @P2C 03990000
         DC    XL56'00'           reserved                         @P2A 04000000
ADPLLACC EQU   *-ADPLPACC         Length of ADPLPACC               @P2A 04010000
.ABDPL07 AIF   ('&AMDPFMT' NE 'YES').ABDPL0A                       @D2A 04020000
*/* ================================================================ */ 04030000
*/* Control block and Model formatter services parameter list        */ 04040000
*/* ================================================================ */ 04050000
*/*                                                                     04060000
         AIF   ('&DSECT' EQ 'YES').ABDPL08                         @D2A 04070000
ADPLPFMT DS    0D                 Common parameter list            @P3C 04080000
         AGO   .ABDPL09                                            @D2A 04090000
.ABDPL08 ANOP  ,                                                   @D2A 04100000
ADPLPFMT DSECT ,                  Common parameter list            @P3C 04110000
.ABDPL09 SPACE 1                                                   @D2A 04120000
ADPLPOPT DC    B'00000000'        Option flags                     @P2C 04130000
ADPLPOAC EQU   BIT0               Check acronym                    @P4C 04140000
ADPLPOIX EQU   BIT1               Index entry wanted               @D2A 04150000
ADPLPOLM EQU   BIT2               Line mode                        @D2A 04160000
ADPLPOCL EQU   BIT3               Final host invocation to delete      *04170000
                                  modules and freemain CBAT load       *04180000
                                  table storage                    @D2A 04190000
ADPLPSOF EQU   BIT4               Suppress offsets                 @D3A 04200000
ADPLPPDA EQU   BIT5               Print dump address               @D3A 04210000
ADPLPSDH EQU   BIT6               Suppress dump header             @D3A 04220000
ADPLPSTM EQU   BIT7               Suppress truncation msg          @D3A 04230000
ADPLPRET DS    0BL2               Flags for returning information  @P2C 04240000
*                                 to caller                        @D2A 04250000
ADPLPRE1 DC    B'00000000'                                         @P2C 04260000
ADPLPRAC EQU   BIT0               Bad acronym check                @D2A 04270000
ADPLPRNL EQU   BIT1               Unable to load model/formatter   @D2A 04280000
ADPLPRNB EQU   BIT2               Unavailable control block        @D2A 04290000
ADPLPRNF EQU   BIT3               Unable to format                 @D2A 04300000
ADPLPRTB EQU   BIT4               Truncated block                  @D2A 04310000
ADPLPRNC EQU   BIT5               CBFORMAT service was unable to       *04320000
                                  associate the data type specified    *04330000
                                  with any data type defined       @PEC 04340000
ADPLPRNE EQU   BIT6               CBFORMAT service was able to         *04350000
                                  associate the data type specified    *04360000
                                  with a defined data type, but neither*04370000
                                  formatter nor model is, in turn,     *04380000
                                  related to the data type         @PEC 04390000
ADPLPRNG EQU   BIT7               No CBAT load table storage       @D2A 04400000
ADPLPRE2 DC    B'00000000'                                         @P2C 04410000
ADPLPRUU EQU   BIT0               Entry previously marked unuseable@D2A 04420000
ADPLPRIM EQU   BIT1               Invalid model specification      @D2A 04430000
ADPLPRCM EQU   BIT2               Model error                      @D2A 04440000
ADPLPNVM EQU   BIT3               No view match, nothing printed   @D2A 04450000
ADPLPBXI EQU   BIT4               Bad extension identifier         @L5A 04460000
ADPLPFEF EQU   BIT5               Formatting exit failure          @L5A 04470000
ADPLPNXD EQU   BIT6               No EXIT DATA                     @P7A 04480000
ADPLPBLC DC    FL1'0'             Blank line count                 @P2C 04490000
ADPLPCHA DC    CL8' '             Control block acronym or model   @P2C 04500000
*                                 name                             @D2A 04510000
ADPLPPTR DC    A(0)               Model address                    @P2C 04520000
ADPLPBAS DC    A(0)               Buffer address if block is in    @P2C 04530000
*                                 main storage                     @D2A 04540000
ADPLPDAC DC    H'0'               Dynamic array count              @P2C 04550000
ADPLPBLS DC    H'0'               Length of block in main storage  @P2C 04560000
ADPLPBAV DC    A(0)               Virtual block address in dump    @P2C 04570000
ADPLPLME DC    A(0)               Line mode exit entry             @P2C 04580000
*                                 point address                    @D2A 04590000
ADPLPVCL DS    0BL2               Field viewing control            @P2C 04600000
ADPLPVC1 DC    B'00000011'                                         @P2C 04610000
ADPLPKEY EQU   BIT0               Keyfield                         @D2A 04620000
ADPLPSUM EQU   BIT1               Summary field                    @D2A 04630000
ADPLPREG EQU   BIT2               Register save area               @D2A 04640000
ADPLPLIN EQU   BIT3               Linkage field                    @D2A 04650000
ADPLPEFD EQU   BIT4               Error fields                     @D2A 04660000
ADPLPHEX EQU   BIT5               Hex dump                         @D2A 04670000
ADPLPNOR EQU   BIT6               All non reserved fields          @D2A 04680000
ADPLPRES EQU   BIT7               Reserved fields                  @D2A 04690000
ADPLPVC2 DC    B'00000000'                                         @P2C 04700000
ADPLPSTA EQU   BIT0               Static array                     @D2A 04710000
ADPLPDCD EQU   BIT0               Decode flagfields                @L5A 04720000
ADPLPDYN EQU   BIT1               Dynamic array                    @D2A 04730000
ADPLPINP EQU   BIT2               Input field                      @D4A 04740000
ADPLPOUT EQU   BIT3               Output field                     @D4A 04750000
ADPLPCV1 EQU   BIT4               Component use                    @D2A 04760000
ADPLPCV2 EQU   BIT5               Component use                    @D2A 04770000
ADPLPCV3 EQU   BIT6               Component use                    @D2A 04780000
ADPLPCV4 EQU   BIT7               Component use                    @D2A 04790000
ADPLPOSI DC    H'0'               Starting offset                  @P2C 04800000
ADPLPDL  DS    2F                 Dimension lower limits           @D4A 04810000
         ORG   ADPLPDL            Describe individual limits       @D4A 04820000
ADPLPDL1 DC    F'0'               Dimension 1 lower limit          @D4A 04830000
ADPLPDL2 DC    F'0'               Dimension 2 lower limit          @D4A 04840000
ADPLPDU  DS    2F                 Dimension upper limits           @D4A 04850000
         ORG   ADPLPDU            Describe individual limits       @D4A 04860000
ADPLPDU1 DC    F'0'               Dimension 1 upper limit          @D4A 04870000
ADPLPDU2 DC    F'0'               Dimension 2 upper limit          @D4A 04880000
ADPLPHBV DC    XL4'00'            High word of blocks virtual address  *04890000
                                  in dump(see ADPLPBAV), 0 if 31 bit   *04900000
                                  address. Used for messages only. @PFC 04910000
ADPLPEXP DC    F'0'               -> Format parameter extension    @L5A 04920000
ADPLPFXC DC    F'0'               Format exit communication        @D4A 04930000
ADPLLFMT EQU   *-ADPLPFMT         Length of ADPLPFMT               @P2A 04940000
.ABDPL1A AIF   ('&AMDPFXT' NE 'YES').ABDPL0A                       @L5A 04950000
*/* ================================================================ */ 04960000
*/* Format parameter extension                                       */ 04970000
*/* ================================================================ */ 04980000
*/*                                                                     04990000
         AIF   ('&DSECT' EQ 'YES').ABDPL18                         @L5A 05000000
ADPLPFXT DS    0D                 Format parameter extension       @L5A 05010000
         AGO   .ABDPL19                                            @L5A 05020000
.ABDPL18 ANOP  ,                                                   @L5A 05030000
ADPLPFXT DSECT ,                  Format parameter extension       @L5A 05040000
.ABDPL19 SPACE 1                                                   @L5A 05050000
ADPLFXHD DS    0CL64              Header                           @L5A 05060000
ADPLFXID DC    C'FEXT'            Identifier                       @L5A 05070000
ADPLFXOP DC    B'00000000'        Extended options                 @L5A 05080000
ADPLFXQE EQU   BIT0               Quit on access error             @L5A 05090000
ADPLFXIN EQU   BIT1               Indent after line 1              @L5A 05100000
ADPLFXNE EQU   BIT2               Name is in ES record(LX)         @L5A 05110000
ADPLFXFE EQU   BIT3               Invoke post format exits         @L5A 05120000
ADPLFXUA EQU   BIT4               Use extended acronym             @L5A 05130000
ADPLFXSS EQU   BIT5               Storage defined by ES record     @L5A 05140000
ADPLFXFA EQU   BIT6               Fill absent data                 @L5A 05150000
         DC    XL3'00'                                             @D5C 05160000
ADPLFXRT DC    B'00000000'        Extension return information     @L5A 05170000
ADPLFXAN EQU   BIT0               Area(s) not available            @L5A 05180000
ADPLFXBE EQU   BIT1               Bad ES record(s)                 @L5A 05190000
         DC    XL5'00'                                             @L5A 05200000
ADPLFXIL DC    XL1'00'            Indentation length               @L5A 05210000
ADPLFXAC DC    XL31'40'           Extended acronym                 @L5A 05220000
ADPLFXLX DC    XL1'00'            List index to ES for name        @L5A 05230000
ADPLFXFC DC    XL1'00'            Fill char for absent data        @P5A 05240000
ADPLFXEO DC    A(0)               Extended position offset         @02A 05250000
         DC    XL12'00'           Reserved                         @D5C 05260000
ADPLFXLS DC    16XL8'00'          ES record pointer list           @L5A 05270000
         ORG   ADPLFXLS                                            @L5A 05280000
ADPLFXBF DC    F'0'               Buffer address                   @L5A 05290000
ADPLFXES DC    F'0'               ES record pointer                @L5A 05300000
ADPLLFXT EQU   *-ADPLPFXT         Length of ADPLPTXT               @L5A 05310000
.ABDPL0A AIF   ('&AMDPECT' NE 'YES').ABDPL0D                       @D2A 05320000
*/* ================================================================ */ 05330000
*/* ECT service parameter list                                       */ 05340000
*/* ================================================================ */ 05350000
*/*                                                                     05360000
         AIF   ('&DSECT' EQ 'YES').ABDPL0B                         @D2A 05370000
ADPLPECT DS    0D                 ECT service parameter list       @P3C 05380000
         AGO   .ABDPL0C                                            @D2A 05390000
.ABDPL0B ANOP  ,                                                   @D2A 05400000
ADPLPECT DSECT ,                  ECT service parameter list       @P3C 05410000
.ABDPL0C SPACE 1                                                   @D2A 05420000
ADPLPEFG DC    B'00000000'        Flags for choosing exit - '0'    @P2C 05430000
*                                 indicates verb exit              @D2A 05440000
ADPLPETB EQU   BIT0               TCB exit                         @P2C 05450000
ADPLPEAS EQU   BIT1               ASCB exit                        @P2C 05460000
ADPLPEVR EQU   BIT2               VERB exit                        @L5A 05470000
ADPLPESC EQU   BIT3               Subcommand or command procedure  @L9A 05480000
ADPLPESP EQU   BIT5               Special exit                     @L5A 05490000
ADPLPENM EQU   BIT6               Exit name is in ADPLPEVB         @01A 05500000
ADPLPESR EQU   BIT7               Formatting exit                  @L5C 05510000
ADPLPERR DC    B'00000000'        Flags for returning              @P2C 05520000
*                                 information to caller            @D2A 05530000
ADPLPEST EQU   BIT0               Exit return code='4' indicating  @P2C 05540000
*                                 insufficient storage             @D2A 05550000
ADPLPENV EQU   BIT1               Verb not found in ECT            @P2C 05560000
ADPLPELI EQU   BIT2               LINK failed - 806 abend          @P2C 05570000
ADPLPENE EQU   BIT3               No ESTAE established             @P2C 05580000
ADPLPECF DC    B'00000000'        Control flags                    @L3A 05590000
ADPLPECP EQU   BIT0               ADPLPEPL -> parm list            @L3A 05600000
ADPLPEMA EQU   BIT1               Use ADPLSAMK value passed        @L5A 05610000
ADPLPTOC EQU   BIT2               Suppressing TOC entries          @03A 05620000
         DC    XL1'00'            Reserved                         @P2C 05630000
ADPLPEVB DC    CL8' '             VERB to search on                @P2C 05640000
ADPLPEPL DC    A(0)               -> Parameter list to be passed       *05650000
                                  to the exit                      @L3A 05660000
ADPLPESY DC    A(0)               -> BLSRESSY                      @L5A 05670000
         DC    XL44'00'           Reserved                         @D5C 05680000
ADPLLECT EQU   *-ADPLPECT         Length of ADPLPECT               @P2A 05690000
.ABDPL0D AIF   ('&AMDPSEL' NE 'YES').ABDPL13                       @D2A 05700000
*/* ================================================================ */ 05710000
*/* Select ASID service parameter list                               */ 05720000
*/* ================================================================ */ 05730000
*/*                                                                     05740000
         AIF   ('&DSECT' EQ 'YES').ABDPL11                         @D2A 05750000
ADPLPSEL DS    0D                 Select ASID service parm list    @P3C 05760000
         AGO   .ABDPL12                                            @D2A 05770000
.ABDPL11 ANOP  ,                                                   @D2A 05780000
ADPLPSEL DSECT ,                  Select ASID service parm list    @P3C 05790000
.ABDPL12 SPACE 1                                                   @D2A 05800000
ADPLPSF1 DC    B'00000000'        Keyword flags                    @P2C 05810000
ADPLPSAL EQU   BIT0               ALL                              @D3A 05820000
ADPLPSCR EQU   BIT1               CURRENT                          @D3A 05830000
ADPLPSER EQU   BIT2               ERROR                            @D3A 05840000
ADPLPSTE EQU   BIT3               TCBERROR                         @D3A 05850000
ADPLPSJL EQU   BIT4               JOBLIST                          @D3A 05860000
ADPLPSAS EQU   BIT5               ASIDLIST                         @D3A 05870000
ADPLPSF2 DC    B'00000000'        Option flags                     @P8A 05880000
ADPLPSXL EQU   BIT0               Use extended length              @P8A 05890000
ADPLPSAF EQU   BIT1               Select all ASIDs referenced by       *05900000
                                  the ASIDLIST (if any)            @L9A 05910000
         DC    XL1'00'            Reserved                         @P8C 05920000
ADPLPSCF DC    B'00000000'        Condition flags                  @L3A 05930000
ADPLPSNV EQU   BIT0               Unable to get ASVT               @L3A 05940000
ADPLPSOL DC    A(0)               ->Select service output list     @P2C 05950000
ADPLPSJN DC    A(0)               ->Jobname list                   @P2C 05960000
ADPLPSAI DC    A(0)               ->ASID list                      @P2C 05970000
ADPLPS31 DC    F'0'               Extended output length           @P8A 05980000
         DC    XL44'00'           reserved                         @P8C 05990000
ADPLLSEL EQU   *-ADPLPSEL         Length of ADPLPSEL               @P2A 06000000
.ABDPL13 AIF   ('&AMDOSEL' NE 'YES').ABDPL16                       @D2A 06010000
*/* ================================================================ */ 06020000
*/* Select ASID service output mappings                              */ 06030000
*/* ================================================================ */ 06040000
*/*                                                                     06050000
ADPLOSEL DSECT ,                  Select ASID output header        @P3C 06060000
ADPLOSHD DS    0XL8               Header                           @P2C 06070000
ADPLOSSZ DC    H'0'               Size of entire list              @P2C 06080000
ADPLOSCT DC    H'0'               Count of entries                 @P2C 06090000
ADPLOSSF DC    B'00000000'        Selection flags                  @P2C 06100000
ADPLOSJM EQU   BIT0               Some jobname(s) not found        @D3A 06110000
ADPLOSAU EQU   BIT1               Some ASID(s) unassigned          @D3A 06120000
ADPLOSAM EQU   BIT2               Some ASID(s) not in dump         @D3A 06130000
ADPLOSDF DC    B'00000000'        Dump flags                       @P2C 06140000
ADPLOSSD EQU   BIT0               Stand alone dump                 @P1A 06150000
         DC    XL1'00'            Reserved                         @P2C 06160000
ADPLOSSP DC    FL1'00'            Subpool                          @P2C 06170000
ADPLOSNB DS    0D                 End of fixed-length base         @L4A 06180000
ADPLOSLL EQU   *-ADPLOSEL         Length of ADPLOSEL               @P2A 06190000
         SPACE 1                                                   @P2P 06200000
ADPLOSNT DSECT ,                  Array, 1 per selected ASID       @P2C 06210000
ADPLOSAP DC    A(0)               Pointer to ASCB                  @P2C 06220000
ADPLOSCW DS    0BL4               Control word                     @P2C 06230000
ADPLOSF1 DC    B'00000000'        Flag for selection match         @P2C 06240000
ADPLOSCR EQU   BIT0               Current on CPU=ASLCPUX           @D3A 06250000
ADPLOSJN EQU   BIT1               Matches jobnames(ASLJOBX)        @D3A 06260000
ADPLOSER EQU   BIT2               ASID in error                    @D3A 06270000
ADPLOSTE EQU   BIT3               TCBERROR                         @D3A 06280000
ADPLOSAS EQU   BIT4               Selected by ASIDLIST             @D3A 06290000
ADPLOSAL EQU   BIT5               Selected by ALL                  @D3A 06300000
ADPLOSF2 DC    B'00000000'        Status flags                     @P2C 06310000
ADPLOSHA EQU   BIT0               CURRENT HOME ASID                @D3A 06320000
ADPLOSPA EQU   BIT1               CURRENT PRIMARY ASID             @D3A 06330000
ADPLOSSA EQU   BIT2               CURRENT SECONDARY ASID           @D3A 06340000
ADPLOSCM EQU   BIT3               ASID HOLDS CML LOCK              @D3A 06350000
ADPLOSND EQU   BIT4               Address space not in dump        @D3A 06360000
ADPLOSNA EQU   BIT5               Private area not accessed        @D3A 06370000
ADPLOSCP DC    B'00000000'        CPUID where current              @P2C 06380000
         DC    XL3'00'            Reserved                         @LAC 06390000
ADPLOSC2 DC    XL2'00'            CPUID where current              @LAA 06400000
ADPLOSAI DC    H'0'               ASID                             @P2C 06410000
         DC    XL2'00'            Reserved                         @P2C 06420000
ADPLOSJB DC    CL8' '             Jobname                          @P2C 06430000
         DC    XL8'00'            RESERVED                         @P2C 06440000
ADPLOSNL EQU   *-ADPLOSNT         Length of ADPLOSNT               @P2A 06450000
.ABDPL16 ANOP  ,                                                   @D2A 06460000
         MEND  ,                  End of assembler macro             */ 06470000
*                                                                       06480000
*%ABDPLPLS:                         /* Begin PL/S macro              */ 06490000
*   IF AMDEXIT = 'NO'                                                   06500000
*      %THEN                        /* Do not define ABDPL           */ 06510000
*     %GOTO ABDPL05;                /*                               */ 06520000
*   %ADPLLEN = 'LENGTH(ABDPL)';     /* Length of ABDPL           @P2A*/ 06530000
*   %ADPLEXTL = 'LENGTH(ADPLEXTN)'; /* Length of ADPLEXTN        @P2A*/ 06540000
*   %ADPLLACC = 'LENGTH(ADPLPACC)'; /* Length of ADPLPACC        @P2A*/ 06550000
*   %ADPLLFMT = 'LENGTH(ADPLPFMT)'; /* Length of ADPLPFMT        @P2A*/ 06560000
*   %ADPLLECT = 'LENGTH(ADPLPECT)'; /* Length of ADPLPECT        @P2A*/ 06570000
*   %ADPLLSEL = 'LENGTH(ADPLPSEL)'; /* Length of ADPLPSEL        @P2A*/ 06580000
*   %ADPLOSLL = 'LENGTH(ADPLOSEL)'; /* Length of ADPLOSEL        @P2A*/ 06590000
*   %ADPLOSNL = 'LENGTH(ADPLOSNT)'; /* Length of ADPLOSNT        @P2A*/ 06600000
*   %IF ABDPLSTORAGE = '' %THEN     /* No scope/storage class    @L1A*/ 06610000
*     %ABDPLSTORAGE = 'BASED(ABDPLPTR)'; /* Default scope/storage       06620000
*                                                                @L1A*/ 06630000
*   %IF ADPLEXTNSTORAGE = '' %THEN  /* No scope/storage class    @D1A*/ 06640000
*     %ADPLEXTNSTORAGE = 'BASED(ADPLEXT)'; /* Default scope/storage     06650000
*                                                                @D1A*/ 06660000
*   %IF ADPLPACCSTORAGE = '' %THEN  /* No scope/storage class    @D1A*/ 06670000
*     %ADPLPACCSTORAGE = 'BASED';   /* Default scope/storage     @D1A*/ 06680000
*   %IF ADPLPFMTSTORAGE = '' %THEN  /* No scope/storage class    @D2P*/ 06690000
*     %ADPLPFMTSTORAGE = 'BASED';   /* Default scope/storage     @D2P*/ 06700000
*   %IF ADPLPFXTSTORAGE = '' %THEN  /* No scope/storage class    @L5A*/ 06710000
*     %ADPLPFXTSTORAGE = 'BASED';   /* Default scope/storage     @L5A*/ 06720000
*   %IF ADPLPECTSTORAGE = '' %THEN  /* No scope/storage class    @D1C*/ 06730000
*     %ADPLPECTSTORAGE = 'BASED';   /* Default scope/storage     @D1A*/ 06740000
*   %IF ADPLPSELSTORAGE = '' %THEN  /* No scope/storage class    @D3C*/ 06750000
*     %ADPLPSELSTORAGE = 'BASED';   /* Default scope/storage     @D3A*/ 06760000
*   %IF ADPLPEQSSTORAGE = '' %THEN  /* No scope/storage class    @D1A*/ 06770000
*     %ADPLPEQSSTORAGE = 'BASED';   /* Default scope/storage     @D1A*/ 06780000
*   %IF ADPLOSELSTORAGE = '' %THEN  /* No scope/storage          @D3A*/ 06790000
*     %ADPLOSELSTORAGE = 'BASED(ADPLPSOL)'; /* Default scope/stg.       06800000
*                                                                @L2C*/ 06810000
*   DECLARE                                                             06820000
*     1    ABDPL    ABDPLSTORAGE BOUNDARY(DWORD), /* Common IPCS/SNAP   06830000
*                                      parameter list to exits   @P3C*/ 06840000
*                                                                       06850000
*/********************************************************************/ 06860000
*/* The address of the common IPCS/SNAP parameter list to exits is   */ 06870000
*/* passed to exits in register 1.  The exits, in turn, pass the     */ 06880000
*/* list to exit services either in register 1 or as the first       */ 06890000
*/* formal parameter in a parameter list.                            */ 06900000
*/********************************************************************/ 06910000
*                                                                       06920000
*      2    ADPLCBP  POINTER(31),   /* -> Control block          @L5A*/ 06930000
*       3    ADPLTCB  POINTER(31),  /* -> TCB                    @L5C*/ 06940000
*      2    ADPLASID SIGNED BINARY(15), /* Address space identifier  */ 06950000
*      2    ADPLSBPL CHARACTER(1),  /* Subpool used to get save area    06960000
*                                      by component routine          */ 06970000
*      2    ADPLFLAG,               /* Flag field                    */ 06980000
*       3    ADPLSNPR BIT(1),       /* 0-Module loaded by SNAP          06990000
*                                      1-Module loaded by IPCS       */ 07000000
*       3    ADPLSYTM BIT(1),       /* 0-System is OS/VS2 1-System is   07010000
*                                      OS/VS1                        */ 07020000
*       3    ADPLDMGT BIT(1),       /* For data management formatter    07030000
*                                      under SNAP: 0-Format DEB only,   07040000
*                                      1-Format DEB,DCB,IOB          */ 07050000
*       3    ADPLIPCS BIT(1),       /* Called by IPCS                */ 07060000
*       3    ADPLPRT  BIT(1),       /* SYSPRINT data set             */ 07070000
*       3    ADPLSYNO BIT(1),       /* Exit given control for syntax    07080000
*                                      checking only                 */ 07090000
*       3    ADPLEJEC BIT(1),       /* Page eject                    */ 07100000
*       3    ADPLACTV BIT(1),       /* Source is active storage  @PGA*/ 07110000
*      2    ADPLBUF  POINTER(31),   /* Pointer to output buffer      */ 07120000
*      2    ADPLPRNT POINTER(31),   /* Address of print routine      */ 07130000
*      2    ADPLCVT  POINTER(31),   /* Address of CVT                */ 07140000
*      2    ADPLMEMA POINTER(31),   /* Address of memory access         07150000
*                                      routine                       */ 07160000
*      2    ADPLFRMT POINTER(31),   /* Address of format routine     */ 07170000
*      2    ADPLCOM1 FIXED(31),     /* Reserved for component use    */ 07180000
*       3    ADPLCMP1 POINTER(31),  /* Reserved for component use       07190000
*                                                                @P9A*/ 07200000
*      2    ADPLCOM2 FIXED(31),     /* Reserved for component use    */ 07210000
*       3    ADPLCMP2 POINTER(31),  /* Reserved for component use       07220000
*                                                                @P9A*/ 07230000
*      2    ADPLCOM3 FIXED(31),     /* Reserved for component use    */ 07240000
*       3    ADPLCMP3 POINTER(31),  /* Reserved for component use       07250000
*                                                                @P9A*/ 07260000
*      2    ADPLCOM4 FIXED(31),     /* Reserved for component use    */ 07270000
*       3    ADPLCMP4 POINTER(31),  /* Reserved for component use       07280000
*                                                                @P9A*/ 07290000
*      2    ADPLFMT1 POINTER(31),   /* Reserved for format routine   */ 07300000
*      2    ADPLFMT2 POINTER(31),   /* Reserved for format routine   */ 07310000
*      2    ADPLEXT  POINTER(31),   /* Address of extension whose       07320000
*                                      first word contains the          07330000
*                                      address of the operands list     07340000
*                                      or zero if none               */ 07350000
*      2    ADPLABDA POINTER(31),   /* Address of host internal         07360000
*                                      parameter list            @L1C*/ 07370000
*      2    ADPLTRFM POINTER(31),   /* Address of trace control block   07380000
*                                      (SNAP only)               @L1C*/ 07390000
*      2    ADPLSERV POINTER(31),   /* ->Services router         @D1C*/ 07400000
*      2    ADPLLEV  UNSIGNED BINARY(8), /* Index indentation level     07410000
*                                                                @L1C*/ 07420000
*      2    *        CHAR(1),       /* Reserved, was entry code         07430000
*                                      number corresponding to          07440000
*                                      AMDMNDXT macro entries.          07450000
*                                      Support ended in this release    07460000
*                                                                @P6C*/ 07470000
*      2    ADPLLNCT UNSIGNED BINARY(16), /* Lines per page      @L1C*/ 07480000
*      2    ADPLLNRM UNSIGNED BINARY(16), /* Lines remaining on the     07490000
*                                      current page              @L1C*/ 07500000
*      2    ADPLDLEN UNSIGNED BINARY(16), /* Storage access length      07510000
*                                                                @L1C*/ 07520000
*      2    ADPLOPLN UNSIGNED BINARY(16), /* Length of operands  @L1C*/ 07530000
*      2    ADPLPRDP,               /* Address qualification     @L1C*/ 07540000
*       3    ADPLVIRT BIT(1),       /* Virtual address           @L1C*/ 07550000
*       3    ADPLREAL BIT(1),       /* Real address              @L1C*/ 07560000
*       3    ADPLCPU  BIT(1),       /* CPU data request          @L1C*/ 07570000
*       3    ADPLHDR  BIT(1),       /* Dump header request       @L1C*/ 07580000
*       3    *        BIT(3),       /* reserved                  @L1A*/ 07590000
*                                                                       07600000
*/*     The following bit governs the masking of register zero prior */ 07610000
*/*     to its use by the storage access service as a virtual        */ 07620000
*/*     storage address.  If it is off, X'7FFFFFFF' will be          */ 07630000
*/*     logically ANDed with register zero to obtain the requested   */ 07640000
*/*     address.  If it is on, X'00FFFFFF' will be logically ANDed   */ 07650000
*/*     with register zero to obtain the requested address.          */ 07660000
*                                                                       07670000
*       3    ADPLSAMK BIT(1),       /* MVS/370 virtual address   @L1A*/ 07680000
*      2    *        CHARACTER(1),  /* reserved                  @D1C*/ 07690000
*      2    ADPLNDX  POINTER(31),   /* Address of the TSO service       07700000
*                                      routine.                  @L1A*/ 07710000
*      2    ADPLPGNO UNSIGNED BINARY(32), /* Current page number @L1A*/ 07720000
*      2    ADPLSRA  POINTER(31),   /* ->Services Router area    @D1A*/ 07730000
*      2    *        CHARACTER(4),  /* reserved                  @D1C*/ 07740000
*                                                                       07750000
*/* ================================================================ */ 07760000
*/* Output buffer is provided by the host and is filled in prior to  */ 07770000
*/* calling the print and index services.  All hosts provide a       */ 07780000
*/* buffer at least 132 bytes in length (see ADPLBUFR).  IPCS        */ 07790000
*/* supplies a longer buffer (see ADPLBUFX and ADPLMAXL) if the      */ 07800000
*/* output media to which messages are being routed will accomodate  */ 07810000
*/* longer lines.                                                    */ 07820000
*/* ================================================================ */ 07830000
*                                                                       07840000
*     ADPLBUFR CHARACTER(132) BASED(ADPLBUF), /* Output buffer   @L1A*/ 07850000
*     ADPLBUFO CHARACTER(1) BASED(ADPLBUF) POSITION(133), /* One        07860000
*                                      overflow byte is provided to     07870000
*                                      the exit                  @L1A*/ 07880000
*     ADPLBUFX CHARACTER(250) BASED(ADPLBUF), /* Output buffer          07890000
*                                      supplied by IPCS          @L3A*/ 07900000
*     1    ADPLEXTN CHARACTER(64) ADPLEXTNSTORAGE BOUNDARY(DWORD), /*   07910000
*                                      ABDPL extension           @P3C*/ 07920000
*                                                                       07930000
*/********************************************************************/ 07940000
*/* ABDPL extension is addressed by ADPLEXT.                         */ 07950000
*/********************************************************************/ 07960000
*                                                                       07970000
*      2    ADPLOPTR POINTER(31),   /* ->Operands buffer         @D1A*/ 07980000
*      2    ADPLCPPL POINTER(31),   /* ->TSO CPPL                @D1A*/ 07990000
*      2    ADPLESYP POINTER(31),   /* -> BLSRESSY               @L5C*/ 08000000
*      2    ADPLCODE UNSIGNED BINARY(15), /* Router return code  @D1A*/ 08010000
*      2    ADPLPFLG BIT(8),        /* Processing flags          @D1A*/ 08020000
*       3    ADPLNMSG BIT(1),       /* 1-Suppress error messages @D1A*/ 08030000
*       3    ADPLNPRT BIT(1),       /* 1=Suppress print services @L2C*/ 08040000
*       3    ADPLEJNT BIT(1),       /* ADPLEJEC should not eject        08041000
*                                      for IPCS TERMINAL         @LCA*/ 08042000
*       3    *        BIT(5),       /* reserved                  @LCC*/ 08050000
*      2    ADPLEFLG BIT(8),        /* Error flags               @D1A*/ 08060000
*       3    ADPLEFAS BIT(1),       /* No automatic storage      @D1A*/ 08070000
*       3    *        BIT(7),       /* reserved                  @D1A*/ 08080000
*      2    ADPLMAXL UNSIGNED BINARY(8), /* Recommended maximum line    08090000
*                                      width                     @D1A*/ 08100000
*      2    ADPLSCOL UNSIGNED BINARY(8), /* Control block formatting    08110000
*                                      start column. Zero based. Zero   08120000
*                                      means do not offset the data.    08130000
*                                                                @L3A*/ 08140000
*      2    ADPLCOLS UNSIGNED BINARY(8), /* Control block formatting    08150000
*                                      column spacing            @D1A*/ 08160000
*      2    *        UNSIGNED BINARY(8), /* Reserved             @L3A*/ 08170000
*      2    ADPLEFCD UNSIGNED BINARY(16), /* Exit function code  @L3A*/ 08180000
*      2    ADPLEFLE BIT(8),        /* Environment flags         @PBA*/ 08190000
*   %IF SYSVERSION = '' %THEN       /* No long names for PLS     @PBA*/ 08200000
*     %GOTO ABDPL02;                /* No long names for PLS     @PBA*/ 08210000
*   %IF SYSRULESMOD = 'PL/S-III ' %THEN /* No long names for PLS @PBA*/ 08220000
*     %GOTO ABDPL02;                /* No long names for PLS     @PBA*/ 08230000
*       3    ADPLZARCH BIT(1),      /* z/Architecture dump data  @PCA*/ 08240000
*        4    ADPLESAME BIT(1),     /* z/Architecture dump data  @PCC*/ 08250000
*       3    ADPLRS01 BIT(7),       /* Reserved                  @PBA*/ 08260000
*%ABDPL02:                          /* No long names for PLS     @PBA*/ 08270000
*   ;                               /* No long names for PLS         */ 08280000
*      2    ADPLRSV1 CHARACTER(41), /* Reserved                  @PBC*/ 08290000
*                                                                       08300000
*/* ================================================================ */ 08310000
*/* Services are invoked as follows:                                 */ 08320000
*/*                                                                  */ 08330000
*/*   CALL ADPLESRV(ABDPL,service-code,service-parmlist)             */ 08340000
*/*                                                                  */ 08350000
*/*   where                                                          */ 08360000
*/*     service-code is one of the constants defined below which     */ 08370000
*/*                  indicates to the router the service desired, and*/ 08380000
*/*                                                                  */ 08390000
*/*     service-parmlist is the parameter list for the service, as   */ 08400000
*/*                  mapped below                                    */ 08410000
*/*                                                                  */ 08420000
*/* ================================================================ */ 08430000
*                                                                       08440000
*     ADPLESRV ENTRY OPTIONS(AMODE(31))                                 08450000
*              BASED(ADPLSERV) VALUERANGE(*), /* Router          @LBC*/ 08460000
*                                                                       08470000
*/* ---------------------------------------------------------------- */ 08480000
*/* Service codes defining services to router.                       */ 08490000
*/* ---------------------------------------------------------------- */ 08500000
*                                                                       08510000
*     ADPLS000 CONSTANT(1),         /* 1st service code in use   @L8A*/ 08520000
*     ADPLSACC CONSTANT(1),         /* Storage access service    @D1A*/ 08530000
*     ADPLSPRT CONSTANT(2),         /* Print service             @D1A*/ 08540000
*     ADPLSFMT CONSTANT(3),         /* Format model processor    @D1A*/ 08550000
*     ADPLSCBF CONSTANT(4),         /* Control block formatter          08560000
*                                      service                   @D1A*/ 08570000
*     ADPLSNDX CONSTANT(5),         /* Index service             @D1A*/ 08580000
*     ADPLSECT CONSTANT(6),         /* ECT exit service          @D1A*/ 08590000
*     ADPLSSEL CONSTANT(7),         /* Select ASID service       @D1A*/ 08600000
*     ADPLSEQS CONSTANT(8),         /* Equate symbol service     @D1A*/ 08610000
*     ADPLSGTS CONSTANT(9),         /* Get symbol service        @D1A*/ 08620000
*     ADPLSCQE CONSTANT(10),        /* CQE create service        @L3A*/ 08630000
*     ADPLSCBS CONSTANT(11),        /* CB status service         @L3A*/ 08640000
*     ADPLSPR2 CONSTANT(12),        /* Expanded Print service with      08650000
*                                      parm list. See BLSUPPR2          08660000
*                                      mapping                   @L3A*/ 08670000
*     ADPLSADS CONSTANT(13),        /* Add symptom service       @L3A*/ 08680000
*     ADPLSWHS CONSTANT(14),        /* WHERE service             @L3A*/ 08690000
*     ADPLSNAM CONSTANT(15),        /* NAME service              @L5A*/ 08700000
*     ADPLSSYM CONSTANT(16),        /* SYMBOL service            @L5A*/ 08710000
*     ADPLSMAP CONSTANT(17),        /* MAP service               @L5A*/ 08720000
*     ADPLSNTK CONSTANT(18),        /* NAME/TOKEN service        @L6A*/ 08730000
*     ADPLSCSI CONSTANT(19),        /* CSVINFO service           @D6A*/ 08740000
*     ADPLSSTR CONSTANT(20),        /* IXLZSTR service           @L7A*/ 08750000
*     ADPLSSYD CONSTANT(21),        /* SYMDEF service            @D7A*/ 08760000
*     ADPLS999 CONSTANT(21),        /* Last service code in use  @D7C*/ 08770000
*                                                                       08780000
*/* ---------------------------------------------------------------- */ 08790000
*/* Exit function code values for field ADPLEFCD                     */ 08800000
*/* ---------------------------------------------------------------- */ 08810000
*                                                                       08820000
*     ADPLEFAN CONSTANT(1),         /* Called as an ANALYZE exit @L3A*/ 08830000
*     ADPLEFAC CONSTANT(2),         /* Exit called as ASCB exit  @L5A*/ 08840000
*     ADPLEFTC CONSTANT(3),         /* Exit called as TCB exit   @L5A*/ 08850000
*     ADPLEFSR CONSTANT(4),         /* Exit called as formatting exit   08860000
*                                                                @L5A*/ 08870000
*                                                                       08880000
*/* ================================================================ */ 08890000
*/* SERVICE PARAMETER LISTS                                          */ 08900000
*/* ================================================================ */ 08910000
*                                                                       08920000
*     1    ADPLPACC CHARACTER(64) BOUNDARY(WORD) ADPLPACCSTORAGE, /*    08930000
*                                      Storage access parameter list    08940000
*                                                                @P3C*/ 08950000
*                                                                       08960000
*/* ================================================================ */ 08970000
*/* Storage access service parameter list                            */ 08980000
*/* ================================================================ */ 08990000
*                                                                       09000000
*      2    ADPLPAAD POINTER(31),   /* Address to be read        @D1A*/ 09010000
*      2    ADPLPART POINTER(31),   /* Buffer location of data   @P3C*/ 09020000
*      2    *        CHARACTER(56), /* reserved                  @P2A*/ 09030000
*     1    ADPLPFMT CHARACTER(64) BOUNDARY(WORD) ADPLPFMTSTORAGE, /*    09040000
*                                      Common parameter list     @P3C*/ 09050000
*                                                                       09060000
*/* ================================================================ */ 09070000
*/* Control block and Model formatter services parameter list        */ 09080000
*/* ================================================================ */ 09090000
*                                                                       09100000
*      2    ADPLPOPT BIT(8),        /* Option flags              @D2P*/ 09110000
*       3    ADPLPOAC BIT(1),       /* Check acronym             @D2P*/ 09120000
*       3    ADPLPOIX BIT(1),       /* Index entry wanted        @D2P*/ 09130000
*       3    ADPLPOLM BIT(1),       /* Line mode                 @D2P*/ 09140000
*       3    ADPLPOCL BIT(1),       /* Final host invocation to         09150000
*                                      delete modules and freemain      09160000
*                                      CBAT Load Table           @P2C*/ 09170000
*       3    ADPLPSOF BIT(1),       /* Suppress offsets          @D3P*/ 09180000
*       3    ADPLPPDA BIT(1),       /* Print dump address        @D3P*/ 09190000
*       3    ADPLPSDH BIT(1),       /* Suppress dump header      @D3P*/ 09200000
*       3    ADPLPSTM BIT(1),       /* Suppress truncation msg   @D2P*/ 09210000
*      2    ADPLPRET BIT(16),       /* Flags for returning              09220000
*                                      information to caller     @D2P*/ 09230000
*       3    ADPLPRE1 BIT(8),       /*                           @D2P*/ 09240000
*        4    ADPLPRAC BIT(1),      /* Control block acronym check      09250000
*                                      failed                    @P2C*/ 09260000
*        4    ADPLPRNL BIT(1),      /* Unable to load model      @D2P*/ 09270000
*        4    ADPLPRNB BIT(1),      /* Unavailable control block @D2P*/ 09280000
*        4    ADPLPRNF BIT(1),      /* Unable to format          @D2P*/ 09290000
*        4    ADPLPRTB BIT(1),      /* Truncated block           @D2P*/ 09300000
*        4    ADPLPRNC BIT(1),      /* CBFORMAT service was unable to   09310000
*                                      associate the data type          09320000
*                                      specified with any data type     09330000
*                                      defined                   @PEC*/ 09340000
*        4    ADPLPRNE BIT(1),      /* CBFORMAT service was able to     09350000
*                                      associate the data type          09360000
*                                      specified with a defined data    09370000
*                                      type, but neither formatter nor  09380000
*                                      model is, in turn, related to    09390000
*                                      the data type             @PEC*/ 09400000
*        4    ADPLPRNG BIT(1),      /* No CBAT load table storage       09410000
*                                                                @P2C*/ 09420000
*       3    ADPLPRE2 BIT(8),       /*                           @D2P*/ 09430000
*        4    ADPLPRUU BIT(1),      /* Formatter previously marked      09440000
*                                      unuseable                 @P2C*/ 09450000
*        4    ADPLPRIM BIT(1),      /* Invalid model             @D2P*/ 09460000
*        4    ADPLPRCM BIT(1),      /* Model error               @D2P*/ 09470000
*        4    ADPLPNVM BIT(1),      /* No view match, no output  @D2P*/ 09480000
*        4    ADPLPBXI BIT(1),      /* Bad extension identifier  @L5A*/ 09490000
*        4    ADPLPFEF BIT(1),      /* Formatting exit failure   @L5A*/ 09500000
*        4    ADPLPNXD BIT(1),      /* No EXIT DATA              @P7A*/ 09510000
*        4    *        BIT(1),      /* Reserved                  @P7C*/ 09520000
*      2    ADPLPBLC UNSIGNED BINARY(8), /* Blank line count     @D3P*/ 09530000
*      2    ADPLPCHA CHARACTER(8),  /* Control block acronym or model   09540000
*                                      name                      @D2P*/ 09550000
*      2    ADPLPPTR POINTER(31),   /* Model address             @D2P*/ 09560000
*      2    ADPLPBAS POINTER(31),   /* Buffer address if block is in    09570000
*                                      main storage              @D2P*/ 09580000
*      2    ADPLPDAC UNSIGNED BINARY(15), /* Dynamic array count @D2P*/ 09590000
*      2    ADPLPBLS UNSIGNED BINARY(15), /* Length of block in main    09600000
*                                      storage                   @D2P*/ 09610000
*      2    ADPLPBAV POINTER(31),   /* Block's virtual address in       09620000
*                                      dump                      @D2P*/ 09630000
*      2    ADPLPLME POINTER(31),   /* Line mode exit entry point       09640000
*                                      address                   @D2P*/ 09650000
*      2    ADPLPVCL BIT(16),       /* Field viewing control     @D2P*/ 09660000
*       3    ADPLPVC1 BIT(8),       /*                           @D2P*/ 09670000
*        4    ADPLPKEY BIT(1),      /* Keyfield                  @D2P*/ 09680000
*        4    ADPLPSUM BIT(1),      /* Summary field             @D2P*/ 09690000
*        4    ADPLPREG BIT(1),      /* Register save area        @D2P*/ 09700000
*        4    ADPLPLIN BIT(1),      /* Linkage field             @D2P*/ 09710000
*        4    ADPLPEFD BIT(1),      /* Error fields              @D2P*/ 09720000
*        4    ADPLPHEX BIT(1),      /* Hex dump                  @D2P*/ 09730000
*        4    ADPLPNOR BIT(1),      /* All non reserved fields   @D2P*/ 09740000
*        4    ADPLPRES BIT(1),      /* Reserved fields           @D2P*/ 09750000
*       3    ADPLPVC2 BIT(8),       /*                           @D2P*/ 09760000
*        4    ADPLPSTA BIT(1),      /* Static array              @D2P*/ 09770000
*         5    ADPLPDCD BIT(1),     /* Decode flagfields         @L5A*/ 09780000
*        4    ADPLPDYN BIT(1),      /* Dynamic array             @D2P*/ 09790000
*        4    ADPLPINP BIT(1),      /* Input field               @D4A*/ 09800000
*        4    ADPLPOUT BIT(1),      /* Output field              @D4A*/ 09810000
*        4    ADPLPCV1 BIT(1),      /* Component use             @D2P*/ 09820000
*        4    ADPLPCV2 BIT(1),      /* Component use             @D2P*/ 09830000
*        4    ADPLPCV3 BIT(1),      /* Component use             @D2P*/ 09840000
*        4    ADPLPCV4 BIT(1),      /* Component use             @D2P*/ 09850000
*      2    ADPLPOSI SIGNED BINARY(15), /* Starting offset       @D3A*/ 09860000
*      2    ADPLPDL1 UNSIGNED BINARY(32), /* Dimension 1 lower limit    09870000
*                                                                @D4A*/ 09880000
*      2    ADPLPDL2 UNSIGNED BINARY(32), /* Dimension 2 lower limit    09890000
*                                                                @D4A*/ 09900000
*      2    ADPLPDU1 UNSIGNED BINARY(32), /* Dimension 1 upper limit    09910000
*                                                                @D4A*/ 09920000
*      2    ADPLPDU2 UNSIGNED BINARY(32), /* Dimension 2 upper limit    09930000
*                                                                @D4A*/ 09940000
*      2    ADPLPHBV Char(4),       /* High word of blocks virtual      09950000
*                                      address in dump(see ADPLPBAV),   09960000
*                                      0 if block is 31 bit addr.       09970000
*                                      Used for messages only.   @PFC*/ 09980000
*      2    ADPLPEXP POINTER(31),   /* -> Format parm extension  @L5A*/ 09990000
*      2    ADPLPFXC POINTER(31),   /* Format exit communicate   @D4A*/ 10000000
*     ADPLPDL(2) UNSIGNED BINARY(32) DEFINED(ADPLPDL1), /*       @D4A*/ 10010000
*     ADPLPDU(2) UNSIGNED BINARY(32) DEFINED(ADPLPDU1), /*       @D4A*/ 10020000
*     1    ADPLPFXT CHAR(192) ADPLPFXTSTORAGE BDY(WORD), /* FORMAT      10030000
*                                      parameter extension       @L5A*/ 10040000
*                                                                       10050000
*/* ================================================================ */ 10060000
*/* FORMAT service parameter extension, multiple source formatting   */ 10070000
*/* ================================================================ */ 10080000
*                                                                       10090000
*      2    ADPLFXHD CHAR(64) BDY(WORD), /* Header               @PAC*/ 10100000
*       3    ADPLFXID CHAR(4),      /* Identifier FEXT           @L5A*/ 10110000
*       3    ADPLFXOP BIT(32),      /* Extended options          @L5A*/ 10120000
*        4    ADPLFXQE BIT(1),      /* Quit on access error      @L5A*/ 10130000
*        4    ADPLFXIN BIT(1),      /* Indent after line 1       @L5A*/ 10140000
*        4    ADPLFXNE BIT(1),      /* Name is in ES record(LX)  @L5A*/ 10150000
*        4    ADPLFXFE BIT(1),      /* Invoke post format exits  @L5A*/ 10160000
*        4    ADPLFXUA BIT(1),      /* Use extended acronym      @L5A*/ 10170000
*        4    ADPLFXSS BIT(1),      /* Storage defined by ES rec @L5A*/ 10180000
*        4    ADPLFXFA BIT(1),      /* Fill absent data          @P5A*/ 10190000
*        4    *        BIT(25),     /* Reserved                  @D5C*/ 10200000
*       3    ADPLFXRT BIT(32),      /* Extended return info      @L5A*/ 10210000
*        4    ADPLFXAN BIT(1),      /* Area(s) not available     @L5A*/ 10220000
*        4    ADPLFXBE BIT(1),      /* Bad ES record             @L5A*/ 10230000
*        4    *        BIT(30),     /* Reserved                  @L5A*/ 10240000
*       3    *        CHAR(2),      /* Reserved                  @L5A*/ 10250000
*       3    ADPLFXIL BIT(8),       /* Indentation length        @L5A*/ 10260000
*       3    ADPLFXAC CHAR(31),     /* Extended acronymm         @L5A*/ 10270000
*       3    ADPLFXLX FIXED(8),     /* List index to ES for name @L5A*/ 10280000
*       3    ADPLFXFC CHAR(1),      /* Fill char for absent data @P5A*/ 10290000
*       3    ADPLFXEO FIXED(31),    /* Extended position offset  @02A*/ 10300000
*       3    *        CHAR(12),     /* Reserved                  @D5C*/ 10310000
*      2    ADPLFXLS CHAR(128) BDY(WORD), /* ES record pointer list     10320000
*                                                                @L5A*/ 10330000
*       3    ADPLFAR(0:15) CHAR(8) BDY(WORD), /* Array, 0 origin @L5A*/ 10340000
*        4    ADPLFXBF PTR(31),     /* -> Buffer                 @L5A*/ 10350000
*        4    ADPLFXES PTR(31),     /* -> ES record              @L5A*/ 10360000
*     ADPLFXIC CHAR(4) CONSTANT('FEXT'), /* Identifier characters       10370000
*                                                                @L5A*/ 10380000
*     1    ADPLPECT CHARACTER(64) BOUNDARY(WORD) ADPLPECTSTORAGE, /*    10390000
*                                      ECT exit parameter list   @P3C*/ 10400000
*                                                                       10410000
*/* ================================================================ */ 10420000
*/* ECT service parameter list                                       */ 10430000
*/* ================================================================ */ 10440000
*                                                                       10450000
*      2    ADPLPEFG BIT(8),        /* Flags for choosing exit - '0'    10460000
*                                      indicates verb exit       @D2A*/ 10470000
*       3    ADPLPETB BIT(1),       /* TCB exit                  @D2A*/ 10480000
*       3    ADPLPEAS BIT(1),       /* ASCB exit                 @D2A*/ 10490000
*       3    ADPLPEVR BIT(1),       /* VERB exit                 @L5A*/ 10500000
*       3    ADPLPESC BIT(1),       /* Subcommand or command            10510000
*                                      procedure                 @L9A*/ 10520000
*       3    *        BIT(1),       /* Reserved                  @L9C*/ 10530000
*       3    ADPLPESP BIT(1),       /* Special exit              @L5A*/ 10540000
*       3    ADPLPENM BIT(1),       /* Exit name is in ADPLPEVB  @01A*/ 10550000
*       3    ADPLPESR BIT(1),       /* Formatting exit           @L5C*/ 10560000
*      2    ADPLPERR BIT(8),        /* Flags for returning              10570000
*                                      information to caller     @D2A*/ 10580000
*       3    ADPLPEST BIT(1),       /* Exit return code='4'             10590000
*                                      indicating insufficient          10600000
*                                      storage                   @D2A*/ 10610000
*       3    ADPLPENV BIT(1),       /* Verb not found in ECT     @D2A*/ 10620000
*       3    ADPLPELI BIT(1),       /* LINK failed - 806 abend   @D2A*/ 10630000
*       3    ADPLPENE BIT(1),       /* No ESTAE established      @D2A*/ 10640000
*       3    *        BIT(4),       /* Reserved                  @D2A*/ 10650000
*      2    ADPLPECF BIT(8),        /* Control flags             @L3A*/ 10660000
*       3    ADPLPECP BIT(1),       /* ADPLPEPL -> parm list     @L3A*/ 10670000
*       3    ADPLPEMA BIT(1),       /* Use ADPLSAMK value passed @L5A*/ 10680000
*       3    ADPLPTOC BIT(1),       /* Suppressing TOC entry     @03A*/ 10690000
*       3    *        BIT(5),       /* Reserved                  @L5C*/ 10700000
*      2    *        CHARACTER(1),  /* Reserved                  @L3C*/ 10710000
*      2    ADPLPEVB CHARACTER(8),  /* VERB to search on         @D2A*/ 10720000
*      2    ADPLPEPL POINTER(31),   /* -> Parameter list to be passed   10730000
*                                      to the exit               @L3A*/ 10740000
*      2    ADPLPESY POINTER(31),   /* -> BLSRESSY               @L5A*/ 10750000
*      2    *        CHARACTER(44), /* Reserved                  @D5C*/ 10760000
*     1    ADPLPSEL CHARACTER(64) BOUNDARY(WORD) ADPLPSELSTORAGE, /*    10770000
*                                      Select ASID parameter list       10780000
*                                                                @P3C*/ 10790000
*                                                                       10800000
*/* ================================================================ */ 10810000
*/* Select ASID service parameter list                               */ 10820000
*/* ================================================================ */ 10830000
*                                                                       10840000
*      2    ADPLPSF1 BIT(8),        /* Keyword flags             @D3A*/ 10850000
*       3    ADPLPSAL BIT(1),       /* ALL                       @D3A*/ 10860000
*       3    ADPLPSCR BIT(1),       /* CURRENT                   @D3A*/ 10870000
*       3    ADPLPSER BIT(1),       /* ERROR                     @D3A*/ 10880000
*       3    ADPLPSTE BIT(1),       /* TCBERROR                  @D3A*/ 10890000
*       3    ADPLPSJL BIT(1),       /* JOBLIST                   @D3A*/ 10900000
*       3    ADPLPSAS BIT(1),       /* ASIDLIST                  @D3A*/ 10910000
*       3    *        BIT(2),       /* Reserved                  @D3A*/ 10920000
*      2    ADPLPSF2 BIT(8),        /* Option flags              @P8A*/ 10930000
*       3    ADPLPSXL BIT(1),       /* Use extended length       @P8A*/ 10940000
*       3    ADPLPSAF BIT(1),       /* Select all ASID(s) referenced    10950000
*                                      by the ASIDLIST (if any)  @L9A*/ 10960000
*       3    *        BIT(6),       /* Reserved                  @L9C*/ 10970000
*      2    *        CHARACTER(1),  /* Reserved                  @P8C*/ 10980000
*      2    ADPLPSCF BIT(8),        /* Condition flags           @L3A*/ 10990000
*       3    ADPLPSNV BIT(1),       /* Unable to get ASVT        @L3A*/ 11000000
*       3    *        BIT(7),       /* Reserved                  @L3A*/ 11010000
*      2    ADPLPSOL POINTER(31),   /* ->Select service output list     11020000
*                                                                @P2C*/ 11030000
*      2    ADPLPSJN POINTER(31),   /* ->Jobname list            @D3A*/ 11040000
*      2    ADPLPSAI POINTER(31),   /* ->ASID list               @D3A*/ 11050000
*      2    ADPLPS31 FIXED(31),     /* Extended output length    @P8A*/ 11060000
*      2    *        CHARACTER(44), /* reserved                  @P8C*/ 11070000
*                                                                       11080000
*/* ================================================================ */ 11090000
*/* Service output mappings.                                         */ 11100000
*/* ================================================================ */ 11110000
*                                                                       11120000
*     1    ADPLOSEL ADPLOSELSTORAGE BOUNDARY(DWORD), /* Select ASID     11130000
*                                      output list               @P3C*/ 11140000
*                                                                       11150000
*/* ================================================================ */ 11160000
*/* Select ASID service output list                                  */ 11170000
*/* ================================================================ */ 11180000
*                                                                       11190000
*      2    ADPLOSHD,               /* Header                    @D3A*/ 11200000
*       3    ADPLOSSZ UNSIGNED BINARY(15), /* Size of entire list       11210000
*                                                                @D3A*/ 11220000
*       3    ADPLOSCT UNSIGNED BINARY(15), /* Count of entries   @D3A*/ 11230000
*       3    ADPLOSSF BIT(8),       /* Selection flags           @D3A*/ 11240000
*        4    ADPLOSJM BIT(1),      /* Some jobname(s) not found @D3A*/ 11250000
*        4    ADPLOSAU BIT(1),      /* Some ASID(s) unassigned   @D3A*/ 11260000
*        4    ADPLOSAM BIT(1),      /* Some ASID(s) not in dump  @D3A*/ 11270000
*        4    *        BIT(5),      /* Reserved                  @D3A*/ 11280000
*       3    ADPLOSDF BIT(8),       /* Dump flags                @D3A*/ 11290000
*        4    ADPLOSSD BIT(1),      /* Standalone dump           @P1A*/ 11300000
*        4    *        BIT(7),      /* Reserved                  @D3A*/ 11310000
*       3    *        CHARACTER(1), /* Reserved                  @D3A*/ 11320000
*       3    ADPLOSSP CHARACTER(1), /* Subpool                   @D3A*/ 11330000
*      2    ADPLOSNB CHARACTER(0),  /* End of fixed-length base  @L4A*/ 11340000
*     1    ADPLOSNT(*) DEFINED(ADPLOSNB), /* Array, one per selected    11350000
*                                      ASID                      @L4C*/ 11360000
*      2    ADPLOSAP POINTER(31),   /* Pointer to ASCB           @D3A*/ 11370000
*      2    ADPLOSCW,               /* Control word              @D3A*/ 11380000
*       3    ADPLOSF1 BIT(8),       /* Flag for selection match  @D3A*/ 11390000
*        4    ADPLOSCR BIT(1),      /* Current on CPU=ASLCPUX    @D3A*/ 11400000
*        4    ADPLOSJN BIT(1),      /* Matches jobnames(ASLJOBX) @D3A*/ 11410000
*        4    ADPLOSER BIT(1),      /* ASID in error             @D3A*/ 11420000
*        4    ADPLOSTE BIT(1),      /* TCBERROR                  @D3A*/ 11430000
*        4    ADPLOSAS BIT(1),      /* Selected by ASIDLIST      @D3A*/ 11440000
*        4    ADPLOSAL BIT(1),      /* Selected by ALL           @D3A*/ 11450000
*        4    *        BIT(2),      /* Reserved                  @D3A*/ 11460000
*       3    ADPLOSF2 BIT(8),       /* Status flags              @D3A*/ 11470000
*        4    ADPLOSHA BIT(1),      /* Current HOME ASID         @D3A*/ 11480000
*        4    ADPLOSPA BIT(1),      /* Current PRIMARY ASID      @D3A*/ 11490000
*        4    ADPLOSSA BIT(1),      /* Current SECONDARY ASID    @D3A*/ 11500000
*        4    ADPLOSCM BIT(1),      /* ASID holds CML lock       @D3A*/ 11510000
*        4    ADPLOSND BIT(1),      /* Address space not in dump @D3A*/ 11520000
*        4    ADPLOSNA BIT(1),      /* Private area not accessed @D3A*/ 11530000
*        4    *        BIT(2),      /* Reserved                  @D3A*/ 11540000
*       3    ADPLOSCP UNSIGNED BINARY(8), /* CPUID where current @D3A*/ 11550000
*       3    *        CHARACTER(3), /* Reserved                  @LAC*/ 11560000
*       3    ADPLOSC2 UNSIGNED BIN(16), /* CPUID where current   @LAA*/ 11570000
*      2    ADPLOSAI SIGNED BINARY(15), /* ASID                  @D3A*/ 11580000
*      2    *        CHARACTER(2),  /* Reserved                  @D3C*/ 11590000
*      2    ADPLOSJB CHARACTER(8),  /* Jobname                   @D3A*/ 11600000
*      2    *        CHARACTER(8),  /* Reserved                  @D3A*/ 11610000
*                                                                       11620000
*/* ================================================================ */ 11630000
*/* Subroutines accessible via the exit parameter list               */ 11640000
*/* ---------------------------------------------------------------- */ 11650000
*/*   Print service routine--                                        */ 11660000
*/* ---------------------------------------------------------------- */ 11670000
*                                                                       11680000
*     ADPLEPRT ENTRY BASED(ADPLPRNT) VALUERANGE(*) OPTIONS(REFS(        11690000
*         ADPLBUFR,                 /* Each host uses this field     */ 11700000
*         ADPLPRT,ADPLEJEC,         /* IPCS uses these fields        */ 11710000
*         ADPLBUF,ADPLABDA,ADPLLNCT,ADPLLNRM,ADPLPGNO,ADPLSYNO), /*     11720000
*                                      Each host may, but need not,     11730000
*                                      use these fields              */ 11740000
*         SETS(ADPLBUFR,            /* Each host sets this field     */ 11750000
*         ADPLLNRM,ADPLPGNO,ADPLEJEC, /* IPCS sets these fields      */ 11760000
*         ADPLBUF,ADPLABDA,ADPLLNCT,ADPLSYNO)), /* Each host may, but   11770000
*                                      need not, set these fields       11780000
*                                                                @L1A*/ 11790000
*                                                                       11800000
*/* ---------------------------------------------------------------- */ 11810000
*/*   Storage access service routine--Supported by SNAP only for     */ 11820000
*/*   access to live virtual storage.  Its support by IPCS is        */ 11830000
*/*   described below.                                               */ 11840000
*/* ---------------------------------------------------------------- */ 11850000
*                                                                       11860000
*     ADPLESTG ENTRY BASED(ADPLMEMA) VALUERANGE(*) OPTIONS(REFS(        11870000
*         ADPLASID,ADPLDLEN,ADPLVIRT,ADPLREAL,ADPLCPU,ADPLHDR,ADPLSAMK, 11880000
*                                   /* IPCS uses these fields        */ 11890000
*         ADPLCVT,ADPLABDA,ADPLTRFM,ADPLSYNO)), /* Each host may, but   11900000
*                                      need not, use these fields       11910000
*                                                                @L1A*/ 11920000
*                                                                       11930000
*/* ---------------------------------------------------------------- */ 11940000
*/*   Format service routine                                         */ 11950000
*/* ---------------------------------------------------------------- */ 11960000
*                                                                       11970000
*     ADPLEFMT ENTRY BASED(ADPLFRMT) VALUERANGE(*) OPTIONS(REFS(ADPLBUF 11980000
*         ,ADPLABDA),               /* Each host may, but need not,     11990000
*                                      use these fields              */ 12000000
*         SETS(ADPLBUFR,            /* Each host sets this field     */ 12010000
*         ADPLBUF,ADPLABDA,ADPLSYNO)), /* Each host may, but need       12020000
*                                      not, set these fields     @L1A*/ 12030000
*                                                                       12040000
*/* ---------------------------------------------------------------- */ 12050000
*/*   TOC service routine--Supported as minimum-function entries by  */ 12060000
*/*   SNAP.  This entry only blanks ADPLBUFR and returns.  Its       */ 12070000
*/*   support by IPCS is described below.                            */ 12080000
*/* ---------------------------------------------------------------- */ 12090000
*                                                                       12100000
*     ADPLENDX ENTRY BASED(ADPLNDX) VALUERANGE(*) OPTIONS(REFS(ADPLBUFR 12110000
*         ,ADPLLEV,                 /* IPCS uses these fields        */ 12120000
*         ADPLBUF,ADPLABDA,ADPLLNRM,ADPLPGNO,ADPLSYNO), /* IPCS may,    12130000
*                                      but need not, use these fields*/ 12140000
*         SETS(ADPLBUFR,            /* Each host blanks this field   */ 12150000
*         ADPLBUF,ADPLABDA,ADPLSYNO)); /* IPCS may, but need not, set   12160000
*                                      these fields              @P6C*/ 12170000
*%ABDPL05:                          /* Process AMDCPMAP          @P4P*/ 12180000
*   IF AMDCPST ^= 'YES'                                                 12190000
*      %THEN                        /* Do not define AMDCPMAP        */ 12200000
*     %GOTO ABDPL09;                /* End BLSABDPL processing       */ 12210000
*   %AMDCPMAL = 'LENGTH(AMDCPMAP)'; /* Length of AMDCPMAP        @P2A*/ 12220000
*   %IF AMDCPMAPSTORAGE = '' %THEN  /* No scope/storage class    @L1A*/ 12230000
*     %AMDCPMAPSTORAGE = 'BASED';   /* Default scope/storage     @L1A*/ 12240000
*   DECLARE                         /* Status record data            */ 12250000
*     1    AMDCPMAP AMDCPMAPSTORAGE, /* Status record data       @P3C*/ 12260000
*                                                                       12270000
*/********************************************************************/ 12280000
*/* AMDCPMAP is a mapping of the CPU STATUS data obtained from a dump*/ 12290000
*/* upon request.  An exit requests this data by setting ADPLCPU in  */ 12300000
*/* the exit parameter list prior to invoking the storage access     */ 12310000
*/* service routine, whose address is in ADPLMEMA.                   */ 12320000
*/*                                                                  */ 12330000
*/* Note:  This API is archaic but is being kept minimally           */ 12340000
*/* functional for compatibility.  Exit code that requires all 16    */ 12350000
*/* floating point registers, the floating point control register, a */ 12360000
*/* 16-byte PSW, ... should use the dump access functions available  */ 12370000
*/* via the IPCS symbol or storage map services.                     */ 12380000
*/*                                                                  */ 12390000
*/* When this service is requested against a SADUMP of a             */ 12400000
*/* z/Architecture system:                                           */ 12410000
*/*                                                                  */ 12420000
*/* o  The right sizes of GPRs and control registers are returned.   */ 12430000
*/*                                                                  */ 12440000
*/* o  The 8-byte PSW returned is produced from the 16-byte          */ 12450000
*/*    z/Architecture PSW in the same way as system services do it.  */ 12460000
*/*    The final bit of the instruction address will be one if the   */ 12470000
*/*    z/Architecture-mode PSW referenced storage above 7FFFFFFF.    */ 12480000
*/*                                                                  */ 12490000
*/********************************************************************/ 12500000
*                                                                       12510000
*      2    AMDCFLAG BIT(8),        /* CPU status flags          @L1C*/ 12520000
*       3    AMDCUNIP BIT(1),       /* CPU is a uniprocessor.           12530000
*                                      Processor address is invalid. */ 12540000
*       3    AMDCSINV BIT(1),       /* Stand alone dump unable to       12550000
*                                      perform store status. Only       12560000
*                                      processor address is valid.   */ 12570000
*       3    AMDCGPRV BIT(1),       /* Operator did not perform store   12580000
*                                      status. Only general registers   12590000
*                                      and, if MP, processor address    12600000
*                                      are valid.                @L1C*/ 12610000
*       3    AMDCSADP BIT(1),       /* Not from a stand alone dump   */ 12620000
*      2    AMDCPAD1 CHARACTER(1),  /* Padding                   @L1C*/ 12630000
*      2    AMDCPADR UNSIGNED BINARY(16), /* Processor address   @L1C*/ 12640000
*      2    AMDCREGS,               /* REGs and current PSW      @L1C*/ 12650000
*       3    AMDCFREG(4) CHARACTER(8), /* Floating point REGs    @L1C*/ 12660000
*       3    AMDCGREG(16) CHARACTER(4), /* General registers     @L1C*/ 12670000
*       3    AMDCCREG(16) CHARACTER(4), /* Control registers     @L1C*/ 12680000
*       3    AMDCCPSW CHARACTER(8), /* Current PSW               @L1C*/ 12690000
*      2    AMDCPREG POINTER(31),   /* Prefix register           @L1C*/ 12700000
*      2    AMDCTIME CHARACTER(8),  /* CPU timer value           @L1C*/ 12710000
*      2    AMDCLOCK CHARACTER(8);  /* Clock comparator          @L1C*/ 12720000
*%ABDPL09:                          /* End BLSABDPL processing       */ 12730000
*   DEACTIVATE AMDEXIT,AMDCPST;                                         12740000
