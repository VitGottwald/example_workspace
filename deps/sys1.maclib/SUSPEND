*%SUSPEND: MACRO                                                        00010000
*             KEYS(RB,                                                  00020000
*             SPTOKEN,                                                  00030000
*             EXIT,                                                     00040000
*             RSCODE,                                                   00050000
*             EXITPARM,                                                 00060000
*             MF,                                                       00070000
*             REGS,                                                     00080000
*             RELATED) ;                                                00090000
*/**** START OF SPECIFICATIONS ***************************************  00100000
*                                                                       00110000
*01* MACRO NAME:  SUSPEND                                               00120000
*                                                                       00130000
*01* DESCRIPTIVE NAME:  SUSPEND EXECUTION OF A WORK UNIT                00140000
*                                                                       00150000
*01* COPYRIGHT =                                                        00160000
*      LICENSED MATERIALS - PROPERTY OF IBM                             00161000
*      5650-ZOS COPYRIGHT IBM CORP 1990, 2019                           00181000
*                                                                       00210000
*01* STATUS: HBB77C0                                                    00220000
*                                                                       00230000
*01* MACRO NAME:  SUSPEND                                               00240000
*                                                                       00250000
*01* FUNCTION:                                                          00260000
*                                                                       00270000
*     PROVIDE THE INTERFACE TO SERVICE ROUTINES TO PLACE A UNIT         00280000
*     OF WORK IN A SUSPENDED STATE UNTIL AN EXPECTED EVENT OCCURS.      00290000
*                                                                       00300000
*01* EXTERNAL CLASSIFICATION:  GUPI                                     00310000
*                                                                       00320000
*01* END OF EXTERNAL CLASSIFICATION:                                    00330000
*                                                                       00340000
*01* OPERATION:                                                         00350000
*                                                                       00360000
*     THE SUSPEND MACRO PARSES THE KEYWORDS SUPPLIED.  IN THE           00370000
*     EVENT OF AN ERROR, SYNTAX CHECKING WILL ATTEMPT TO CONTINUE       00380000
*     FOR THE REMAINDER OF THE INPUT.  NO DATA WILL BE GENERATED.       00390000
*                                                                       00400000
*     IF NO ERRORS ARE FOUND, DATA IS GENERATED DEPENDING UPON THE      00410000
*     MF FORM SPECIFIED.                                                00420000
*                                                                       00430000
*     IF THE LIST OPTION WAS REQUESTED,  SUSPEND RESERVES THE           00440000
*     STORAGE FOR THE PARAMETER LIST USED BY IEAVSRBS, THE              00450000
*     SRB SUSPEND WITH TOKEN SERVICE ROUTINE.                           00460000
*                                                                       00470000
*     IF THE EXECUTE FORM WAS REQUESTED FOR THE SPTOKEN OPTION,         00480000
*     A PREVIOUSLY GENERATED PARAMETER LIST IS FILLED IN WITH           00490000
*     THE PROPER KEYWORD VALUES.                                        00500000
*                                                                       00510000
*     IF THE SPTOKEN OPTION IS SPECIFIED WITHOUT THE MF KEYWORD,        00520000
*     THE STANDARD FORM IS ASSUMED.  SUSPEND GENERATES AND FILLS        00530000
*     IN THE PARAMETER LIST WITH THE PROPER KEYWORD VALUES.             00540000
*                                                                       00550000
*     REGISTER USAGE:                                                   00560000
*                                                                       00570000
*      AR/GPRs 0, 1, 11-15 ARE NOT PRESERVED.  AR/GPRs 2-10 ARE         00580000
*      UNCHANGED.                                                       00590000
*                                                                       00600000
*                                                                       00610000
*01* SYNTAX:                                                            00620000
*                                                                       00630000
*       SUSPEND     RB=PREVIOUS!CURRENT                                 00640000
*                                                                       00650000
*                       <,RELATED=ANY-COMMENT>                          00660000
*                                                                       00670000
*       WHERE:                                                          00680000
*                                                                       00690000
*                                                                       00700000
*        RB=PREVIOUS!CURRENT                                            00710000
*          IS A KEYWORD THAT SPECIFIES WHICH RB ON THE TCB TO SUSPEND.  00720000
*                                                                       00730000
*          THIS OPTION IS MUTUALLY EXCLUSIVE WITH THE SPTOKEN OPTION.   00740000
*                                                                       00750000
*                                                                       00760000
*          PREVIOUS   THE RB TO BE SUSPENDED IS THE CALLER'S RB.        00770000
*                                                                       00780000
*          CURRENT    THE RB TO BE SUSPENDED IS THE FIRST RB ON THE     00790000
*                     TCB CHAIN.                                        00800000
*                                                                       00810000
*                                                                       00820000
*                                                                       00830000
*       SUSPEND     SPTOKEN=RX-ADDRESS                                  00840000
*                                                                       00850000
*                   ,EXIT=RX-ADDRESS!(2)-(12)                           00860000
*                       <,RSCODE=RX-ADDRESS>                            00870000
*                                                                       00880000
*                       <,EXITPARM=A-TYPE ADDRESS>                      00890000
*                                                                       00900000
*                       <,MF=(E,RX-ADDRESS)!(E,(1)-(12))>               00910000
*                                                                       00920000
*                       <,RELATED=ANY-COMMENT>                          00930000
*                                                                       00940000
*                                                                       00950000
*       WHERE:                                                          00960000
*                                                                       00970000
*                                                                       00980000
*      SPTOKEN=RX-ADDRESS                                               00990000
*          IS THE NAME THAT SPECIFIES AN 8-BYTE VARIABLE WHICH WILL     01000000
*          CONTAIN A SUSPEND TOKEN WHICH UNIQUELY IDENTIFIES A          01010000
*          SUSPENDED SRB.                                               01020000
*                                                                       01030000
*          THIS OPTION IS MUTUALLY EXCLUSIVE WITH THE RB OPTION.        01040000
*          THE SUSPEND TOKEN IS PASSED TO THE SUSPEND EXIT.             01050000
*                                                                       01060000
*                                                                       01070000
*      EXIT=RX-ADDRESS                                                  01080000
*           IS THE NAME OF A VARIABLE CONTAINING THE 31-BIT             01090000
*           ADDRESS OF A SUSPEND EXIT.  THE SUSPEND EXIT IS             01100000
*           INVOKED ENABLED IN 31-BIT ADDRESSING MODE AND THE           01110000
*           ASC MODE OF THE INVOKER.  IT IS PASSED THE ALET             01120000
*           QUALIFIED ADDRESS OF THE SUSPEND TOKEN IN AR/GPR1           01130000
*           AND MUST RETURN WITH A RETURN CODE IN REGISTER 15.          01140000
*                                                                       01150000
*                                                                       01160000
*           RSCODE=RX-ADDRESS                                           01170000
*               IS AN OPTIONAL FULLWORD VARIABLE WHICH WILL             01180000
*               CONTAIN THE RESUME CODE SPECIFIED BY EITHER THE         01190000
*               RESUME MACRO OR A SUSPEND EXIT.  THE ACTUAL RESUME      01200000
*               CODE MAY BE ANY VALUE WHICH WILL FIT IN A FULLWORD      01210000
*               IF THE RETURN CODE IN REGISTER 15 IS NOT 0 OR 4,        01220000
*               THE RESUME CODE IS IRRELEVANT.                          01230000
*                                                                       01240000
*                                                                       01250000
*           EXITPARM=A-TYPE ADDRESS                                     01260000
*               IS AN OPTIONAL ADDRESS OF A PARAMETER TO BE             01270000
*               PASSED TO THE SRB SUSPEND EXIT.                         01280000
*                                                                       01290000
*                                                                       01300000
*  LIST FORM OF SUSPEND:                                                01310000
*                                                                       01320000
*       SUSPEND     MF=L                                                01330000
*                                                                       01340000
*                       <,RELATED=ANY-VALUE>                            01350000
*                                                                       01360000
*01* PLAS SYNTAX:                                                       01370000
*                                                                       01380000
*            ?SUSPEND   RB(PREVIOUS!CURRENT)                            01390000
*                       RELATED(ANY COMMENT)                            01400000
*                                                                       01410000
*            ?SUSPEND   SPTOKEN(SPTOKEN_ADDRESS)                        01420000
*                       EXIT(EXIT_ADDRESS)                              01430000
*                         RSCODE(RESUME_CODE)                           01440000
*                         MF(E,RX_ADDRESS)                              01450000
*                         EXITPARM(PARAMETER)                           01460000
*                         RELATED(ANY COMMENT)                          01470000
*                                                                       01480000
*            ?SUSPEND   MF(L,RX_ADDRESS)                                01490000
*                         RELATED(ANY COMMENT)                          01500000
*                                                                       01510000
*01* INVOCATION REQUIREMENTS:                                           01520000
*                                                                       01530000
*                                                                       01540000
*      EXECUTION MODE:   IF RB OPTION SPECIFIED: TASK OR SRB MODE       01550000
*                        IF SPTOKEN OPTION SPECIFIED: SRB MODE.         01560000
*                                                                       01570000
*      AUTHORIZATION:    SUPERVISOR STATE.  ZERO PSW KEY.               01580000
*                                                                       01590000
*      ADDRESSING MODE:  31 BIT ADDRESSING MODE.                        01600000
*                                                                       01610000
*      ASC MODE:         PRIMARY OR ACCESS REGISTER ASC MODE.           01620000
*                                                                       01630000
*      SERIALIZATION:    ENABLED.  UNLOCKED.                            01640000
*                        SUSPEND with SPTOKEN can be invoked with a     01650000
*                        local lock held. The suspend exit will be      01660000
*                        invoked with the lock held. The lock will be   01670000
*                        released if the SRB is suspended.              01680000
*                                                                       01690000
*                                                                       01700000
*01* RETURN CODES:                                                      01710000
*                                                                       01720000
*                 THE FOLLOWING CODES ARE RETURNED FROM THE SUSPEND     01730000
*                  SRB WITH TOKEN SERVICE ROUTINE.                      01740000
*                                                                       01750000
*       0         THE SRB HAS BEEN SUCCESSFULLY SUSPENDED AND           01760000
*                 RESUMED.                                              01770000
*                                                                       01780000
*       4         THE SUSPEND EXIT ELECTED NOT TO SUSPEND THE SRB       01790000
*                 ROUTINE.                                              01800000
*                                                                       01810000
*       20        AN ERROR OCCURRED IN THE SUSPEND EXIT.                01820000
*                                                                       01830000
*       24        AN UNEXPECTED ERROR OCCURRED WHILE SUSPENDING THE     01840000
*                 SRB ROUTINE.  THE SRB WAS NOT SUSPENDED.              01850000
*                                                                       01860000
*                                                                       01870000
*01* COMPONENT:  SC1C5 (SUPERVISOR CONTROL)                             01880000
*                                                                       01890000
*01* MACLIB:  AMACLIB                                                   01900000
*                                                                       01910000
*01* CHANGE ACTIVITY:                                                   01920000
*    $D0=DEO0075    HBB4410  880715  PD16FH:  SUSPEND SRB WITH TOKEN    01930000
*    $D1=DEO0242    HBB4410  891023  PD16FH:  EXITPARM OPTION           01940000
*    $P1=PEO3551    HBB4410  900226  PD16IG:  RAS ENHANCEMENTS          01950000
*    $P2=PEO3169    HBB4410  900226  PD16EJ:  CORRECT RETURN CODE       01960000
*                                             SECTION IN MACRO PROLOG   01970000
*    $P3=PIG0986    HBB5510  930115  PD16EJ:  Correct MF(L) parameter   01980000
*                                             list generation.          01990000
*    $01=OW17775    HBB5510  960130  PDKD:   Correct AR-mode generation 02000000
*    $L1=MExxxxx    HBB7703  000000  PD00XB: STDSAVE                    02001000
*    $D2=GT128G     HBB7730  050331  PD162D: >128 gig support           02010000
*    $P4=ME21755    HBB7790  110517  PD00XB: ASABEGIN_CKARS             02011000
*    $P5=ME27926    HBB77A0  140806  PD00XB: Use DEF(ILIST)             02012000
*    $L2=WI86860    HBB77B0  150601  PD00XB: zPLX                       02014000
*    $L3=W155942    HBB77B0  170124  PD00XB: zPLX                       02015000
*    $L4=W297966    HBB77C0  190131  PD00XB: zPLX                       02016001
*                                                                       02020000
*** END OF SPECIFICATIONS ******************************************/   02030000
*/********************************************************************  02040000
         MACRO                                                          02050000
&XLABEL  SUSPEND &RB=,                                                 X02060000
               &SPTOKEN=,                                              X02070000
               &EXIT=,                                                 X02080000
               &RSCODE=,                                               X02090000
               &EXITPARM=,                                             X02100000
               &MF=,                                                   X02110000
               &RELATED=                                                02120000
.*******************************************************************    02130000
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          02140000
.*******************************************************************    02150000
              LCLC  &ZMS        ERROR MESSAGE WORK AREA                 02160000
              LCLC  &ZMC        ERROR MESSAGE DELIMITER                 02170000
              LCLA  &ZMA        BAD KEYWORD COUNT                       02180000
              LCLC  &ZCNDX      LAST THREE SYSNDX CHARACTERS            02190000
              LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED              02200000
              LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR             02210000
              LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE             02220000
              LCLA  &ZAWRK      USED AS A WORK AREA                     02230000
              LCLA  &ZASIZ      USED FOR SIZE OF VALUE                  02240000
              LCLA  &ZN         NUMERIC WORK VARIABLE                   02250000
              LCLC  &ZC         CHARACTER WORK VARIABLE                 02260000
              LCLA  &ZMACRET    MACRO RETURN CODE                       02270000
&ZMACRET      SETA  0           ASSUME NO ERRORS                        02280000
.*                                                                      02290000
              LCLC  &ZCSYSLIST(255)             NONXKEY, POS ARRAY      02300000
              LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()              02310000
.*******************************************************************    02320000
.***  DEFINE ALL MACRO PARAMETER VARIABLES                              02330000
.*******************************************************************    02340000
              LCLC  &XRB        ++ VALUE                                02350000
              LCLC  &XMF        ++ VALUE                                02360000
              LCLC  &XLIST      ++ INPUT PARM LIST NAME                 02370000
              LCLC  &XSPTOKEN   ++ NAME                                 02380000
              LCLC  &XEXIT      ++ NAME                                 02390000
              LCLC  &XRSCODE    ++ NAME                                 02400000
              LCLC  &XEXITPARM  ++ NAME                            @D1A 02410000
              LCLC  &SFTSLOT    ++ INDEX INTO SFT                       02420000
.*******************************************************************    02430000
.***  DEFINE ALL MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING            02440000
.*******************************************************************    02450000
              LCLC  &ZXRB       ++ INPUT VALUE                          02460000
              LCLC  &ZXSPTOKEN  ++ INPUT NAME                           02470000
              LCLC  &ZXEXIT     ++ INPUT NAME                           02480000
              LCLC  &ZXRSCODE   ++ INPUT NAME                           02490000
              LCLC  &ZXEXITPARM ++ NAME                            @D1A 02500000
              LCLC  &GNAME1     ++ START OF INLINE PARAMETER LIST       02510000
              LCLC  &GNAME2     ++ END   OF INLINE PARAMETER LIST       02520000
              LCLC  &GNAME3     ++ LABEL FOR RESUME CODE BRANCH         02530000
.********************************************************************   02540000
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 02550000
.*                                                                      02560000
.* TITLE: .ZSYS                                                         02570000
.*                                                                      02580000
.********************************************************************   02590000
              GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL                 02600000
              GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE          02610000
.********************************************************************** 02620000
.*                                                                    * 02630000
.*                   INITIALIZE FOR PROCESSING                        * 02640000
.*                                                                    * 02650000
.********************************************************************** 02660000
*        MACDATE=01/15/93                                          @P3C 02670000
.*                                                                      02680000
&SFTSLOT SETC   '64'                       INITIALIZE SFT INDEX         02690000
.*                                                                      02700000
&GNAME1  SETC   'IHB'.'&SYSNDX'.'K'        SET UP INLINE NAMES          02710000
&GNAME2  SETC   'IHB'.'&SYSNDX'.'R'                                     02720000
&GNAME3  SETC   'IHB'.'&SYSNDX'.'C'                                     02730000
              AIF   (K'&SYSASCE GT 0).ZSYS020   SYS STATE DEFINED       02740000
              AIF   (K'&SYSSPLV GT 0).ZSYS000   SP LEVEL DEFINED        02750000
              SPLEVEL  TEST                                             02760000
.ZSYS000      ANOP  ,                                                   02770000
              AIF   ('&SYSSPLV' EQ '1').ZSYS010 PRE SP 3.1              02780000
              AIF   ('&SYSSPLV' EQ '2').ZSYS010 PRE SP 3.1              02790000
              SYSSTATE TEST                                             02800000
              AGO   .ZSYS020                                            02810000
.ZSYS010      ANOP  ,                                                   02820000
&SYSASCE      SETC  'P'         ASSUME SYSSTATE PRIMARY                 02830000
.ZSYS020      ANOP  ,                                                   02840000
.********************************************************************   02850000
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 02860000
.********************************************************************   02870000
              ACTR  10000                                               02880000
.ZSYS030      ANOP  ,           FULL SYNTAX CHECKING                    02890000
.********************************************************************   02900000
.***         CHECK IF BOTH RB AND SPTOKEN ARE SPECIFIED                 02910000
.*                                                                      02920000
.* TITLE: .VAL                                                          02930000
.*                                                                      02940000
.********************************************************************   02950000
              AIF   (T'&RB EQ 'O' OR T'&SPTOKEN EQ 'O').VAL010          02960000
.********************************************************************   02970000
.***         GENERATE MNOTE FOR MUTUALLY EXCLUSIVE KEYWORDS             02980000
.********************************************************************   02990000
.VAL000       ANOP   ,                                                  03000000
&ZMS          SETC  ' "RB" AND "SPTOKEN" ARE'                           03010000
              MNOTE 8,' &ZMS MUTUALLY EXCLUSIVE. '                      03020000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             03030000
              AGO   .RB000                      PROCESS AS RB           03040000
.********************************************************************   03050000
.***         CHECK FOR RB                                               03060000
.********************************************************************   03070000
.VAL010       ANOP  ,                                                   03080000
              AIF   (T'&RB NE 'O').RB000        BRANCH TO RB PROC       03090000
.********************************************************************   03100000
.***         CHECK FOR SPTOKEN                                          03110000
.********************************************************************   03120000
              AIF   (T'&SPTOKEN NE 'O').TOKN000 BRANCH TO SPTOKEN PROC  03130000
.********************************************************************   03140000
.***         CHECK FOR LIST FORM                                        03150000
.********************************************************************   03160000
              AIF   (T'&MF EQ 'O').RB000        IF NO MF PROCESS AS RB  03170000
              AIF   ('&MF' EQ 'L').LIST000      BRANCH TO LIST PROC     03180000
.********************************************************************   03190000
.***  "MF" SPECIFIED THAT IS NOT LIST FORM WITHOUT SPTOKEN CHECK ERROR  03200000
.*                                                                      03210000
.* TITLE: .MF                                                           03220000
.*                                                                      03230000
.********************************************************************   03240000
              AIF   ('&MF(1)' NE 'E' AND '&MF(1)' NE 'S').MF000         03250000
.*                                                                      03260000
.*         "MF" SPECIFIED WITHOUT SPTOKEN                               03270000
.*                                                                      03280000
&ZMS          SETC  '"MF='      *KUKWA* MNOTE                           03290000
&ZMS          SETC  '&ZMS.&MF"'                                         03300000
&ZMS          SETC  '&ZMS MAY ONLY BE SPECIFIED'                        03310000
&ZMS          SETC  '&ZMS WITH "SPTOKEN".'                              03320000
              MNOTE 8,' &ZMS '                                          03330000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             03340000
              AGO   .EXIT000                                            03350000
.*                                                                      03360000
.*         UNRECOGNIZED MACRO FORM DETECTED -- GENERATE MNOTE           03370000
.*                                                                      03380000
.MF000        ANOP                                                      03390000
&ZMS          SETC  '"MF='      *KUKWA* MNOTE                           03400000
&ZMS          SETC  '&ZMS.&MF"'                                         03410000
&ZMS          SETC  '&ZMS IS INCORRECT. '                               03420000
&ZMS          SETC  '&ZMS KEYWORD CHOICE IS: '                          03430000
&ZMS          SETC  '&ZMS "MF=L".'                                      03440000
              MNOTE 8,' &ZMS '                                          03450000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             03460000
              AGO   .EXIT000                                            03470000
.********************************************************************   03480000
.***         PROCESS SUSPEND RB                                         03490000
.*                                                                      03500000
.* TITLE: .RB                                                           03510000
.*                                                                      03520000
.********************************************************************   03530000
.RB000        ANOP   ,                                                  03540000
              AIF   (N'&RB LE 1).RB010          CK NUM                  03550000
&ZMS          SETC  '"RB='      *KPOSA* MNOTE                           03560000
&ZMS          SETC  '&ZMS.&RB"'                                         03570000
&ZMS          SETC  '&ZMS "RB"'                                         03580000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 03590000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             03600000
.RB010        ANOP  ,                                                   03610000
.*-------------------------------------------------------------------   03620000
.***AG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             03630000
&XRB          SETC  ''          INITIALIZE XVARIABLE                    03640000
.RB020  AIF   ('&RB(1)' NE 'PREVIOUS').RB030                            03650000
&XRB          SETC  'PREVIOUS'  SET KEYWORD                             03660000
.*-------------------------------------------------------------------   03670000
.***AG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             03680000
.RB030  AIF   ('&RB(1)' NE 'CURRENT').RB040                             03690000
&XRB          SETC  'CURRENT'   SET KEYWORD                             03700000
.*-------------------------------------------------------------------   03710000
.***AG.KKWRD03 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             03720000
.RB040        AIF   (K'&XRB GT 0).RB060         KEYWORD                 03730000
              AIF   (T'&RB EQ 'O').RB050                                03740000
&ZMS          SETC  '"RB='      *KUKWA* MNOTE                           03750000
&ZMS          SETC  '&ZMS.&RB"'                                         03760000
&ZMS          SETC  '&ZMS IS INCORRECT. '                               03770000
&ZMS          SETC  '&ZMS KEYWORD CHOICES ARE: '                        03780000
&ZMS          SETC  '&ZMS                  '                            03790000
&ZMS          SETC  '&ZMS "RB=PREVIOUS" OR '                            03800000
&ZMS          SETC  '&ZMS "RB=CURRENT".'                                03810000
              MNOTE 8,' &ZMS '                                          03820000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             03830000
.RB050        ANOP  ,                                                   03840000
&XRB          SETC  'PREVIOUS'  SET DEFAULT KEYWORD                     03850000
.RB060        ANOP  ,                                                   03860000
&ZXRB         SETC  'INPUT'     SET IN/OUTPUT                           03870000
.*-------------------------------------------------------------------   03880000
.RB070        ANOP  ,                                                   03890000
.RB080        ANOP  ,           END OF FULL SYNTAX CHECK                03900000
.*******************************************************************    03910000
.***AE.RMR01 CHECK FOR SPTOKEN OPTIONS ILLEGALLY SPECIFIED WITH "RB"    03920000
.*******************************************************************    03930000
&ZMS          SETC  ''          CLEAR MNOTE WORK AREAS                  03940000
&ZMA          SETA  0           CLEAR COUNT OF ERRORS                   03950000
              AIF   (T'&EXIT EQ 'O').RB090                              03960000
&ZMA          SETA  &ZMA+1      BUMP COUNT BAD KEYS                     03970000
&ZMS          SETC  ' "EXIT"'                                           03980000
.*******************************************************************    03990000
.***         CHECK FOR "RSCODE"                                         04000000
.*******************************************************************    04010000
.RB090        ANOP                                                      04020000
              AIF   (T'&RSCODE EQ 'O').RB095                       @D1C 04030000
&ZMA          SETA  &ZMA+1      BUMP COUNT BAD KEYS                     04040000
              AIF   (&ZMA EQ 1).RB092                                   04050000
&ZMS          SETC  '&ZMS., "RSCODE"'                                   04060000
              AGO   .RB095                                              04070000
.RB092        ANOP                                                      04080000
&ZMS          SETC  ' "RSCODE"'                                         04090000
.*******************************************************************    04100000
.***         CHECK FOR "EXITPARM"                                       04110000
.*******************************************************************    04120000
.RB095        ANOP                                                 @D1A 04130000
              AIF   (T'&EXITPARM EQ 'O').RB110                     @D1A 04140000
&ZMA          SETA  &ZMA+1      BUMP COUNT BAD KEYS                @D1A 04150000
              AIF   (&ZMA EQ 1).RB100                              @D1A 04160000
&ZMS          SETC  '&ZMS., "EXITPARM"'                            @D1A 04170000
              AGO   .RB110                                         @D1A 04180000
.RB100        ANOP                                                 @D1A 04190000
&ZMS          SETC  ' "EXITPARM"'                                  @D1A 04200000
.*******************************************************************    04210000
.***         CHECK FOR "MF"                                             04220000
.*******************************************************************    04230000
.RB110        ANOP                                                      04240000
              AIF   (T'&MF EQ 'O').RB130                                04250000
&ZMA          SETA  &ZMA+1      BUMP COUNT BAD KEYS                     04260000
              AIF   (&ZMA EQ 1).RB120                                   04270000
&ZMS          SETC  '&ZMS., "MF"'                                       04280000
              AGO   .RB130                                              04290000
.RB120        ANOP                                                      04300000
&ZMS          SETC  ' "MF"'                                             04310000
.RB130        ANOP                                                      04320000
              AIF   (&ZMA EQ 0).RGEN000 IF KEYWORDS OK, GO GENERATE     04330000
.*******************************************************************    04340000
.***         GENERATE MNOTE                                             04350000
.*******************************************************************    04360000
              AIF   (&ZMA GT 1).RB140                                   04370000
&ZMS          SETC  '&ZMS. KEYWORD IS NOT VALID '                       04380000
&ZMS          SETC  '&ZMS.WITH "RB=&RB". '                              04390000
              MNOTE 8,' &ZMS '                                          04400000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04410000
              AGO   .RGEN000    GO GENERATE CODE                        04420000
.RB140        ANOP                                                      04430000
&ZMS          SETC  '&ZMS. KEYWORDS ARE NOT VALID '                     04440000
&ZMS          SETC  '&ZMS.WITH "RB=&RB". '                              04441000
              MNOTE 8,' &ZMS '                                          04442000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04443000
              AGO   .RGEN000    GO GENERATE CODE                        04444000
.*******************************************************************    04445000
.***       GENERATE CODE IF ZMACRET=0                                   04446000
.*                                                                      04447000
.* TITLE: .RGEN                                                         04448000
.*                                                                      04449000
.*******************************************************************    04450000
.RGEN000      ANOP  ,                                                   04451000
              AIF   (&ZMACRET NE 0).EXIT010     ERROR DETECTED          04452000
.*******************************************************************    04453000
.***AE.01  START OF SUSPEND MACRO CODE  (RB OPTION)                     04454000
.*******************************************************************    04455000
              LCLC  &M0M0001                 LABEL NAME                 04456000
&M0M0001      SETC  '&XLABEL'                SET LABEL                  04456100
              AIF   (K'&XLABEL NE 0).RGEN010                            04456200
&M0M0001      SETC  'M00M&SYSNDX'            DEFAULT LABEL              04456300
.*                                                                      04456400
.RGEN010      ANOP  ,                                                   04456500
&M0M0001 DS    0H                             SUSPEND-0                 04456600
         AIF ('&XRB' EQ 'PREVIOUS').RGEN020                             04456700
         SLR   1,1                  SUSPEND CURRENT RB                  04456800
         AGO   .RGEN030                                                 04456900
.RGEN020 ANOP                                                           04457000
         LA    1,4                  SUSPEND PREVIOUS RB                 04458000
.RGEN030 ANOP                                                           04459000
         L     15,FLCCVT-FLC(0,0)   CVT ADDRESS                         04460000
         L     15,CVTSUSP-CVT(15,0) SUSPEND FUNCTION ADDRESS            04461000
         BALR  14,15                CALL SUSPEND                        04462000
         AGO   .EXIT000                                                 04463000
.*******************************************************************    04464000
.***AB.07  PERFORM "SPTOKEN" PROCESSING                                 04465000
.*                                                                      04465100
.* TITLE: .TOKN                                                         04465200
.*                                                                      04465300
.*******************************************************************    04465400
.TOKN000 ANOP                                                           04465500
.********************************************************************   04465600
.***AG.MF01 PROCESS MF MACRO FORMS                                      04465700
.********************************************************************   04465800
              ACTR  10000                                               04465900
.********************************************************************   04466000
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 04467000
.********************************************************************   04468000
              ACTR  10000                                               04469000
.*-------------------------------------------------------------------   04470000
.***AG.MF03 MF=(SLE)                                                    04471000
&XMF          SETC  'S'         INITIALIZE DEFAULT                      04472000
              AIF   (T'&MF EQ 'O').TOKN020                              04473000
              AIF   ('&MF' EQ 'S').TOKN020                              04474000
&XMF          SETC  'E'         TRY EXECUTE FORM                        04474100
              AIF   ('&MF(1)' EQ 'E').TOKN010                           04474200
.********************************************************************   04474300
.***         INCORRECT MACRO FORM SPECIFIED                             04474400
.********************************************************************   04474500
&ZMS          SETC  '"MF='      *KUKWA* MNOTE                           04474600
&ZMS          SETC  '&ZMS.&MF"'                                         04474700
&ZMS          SETC  '&ZMS KEYWORD IS NOT VALID WITH'                    04474800
&ZMS          SETC  '&ZMS "SPTOKEN".'                                   04474900
              MNOTE 8,' &ZMS '                                          04475000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04476000
&XMF          SETC  'S'         RESET MACRO FORM TO DEFAULT             04477000
              AGO   .TOKN020    CONTINUE PROCESSING                     04478000
.********************************************************************   04479000
.***         CHECK POSITIONALS ON MF=E                                  04480000
.********************************************************************   04481000
.TOKN010      ANOP                                                      04482000
              AIF    (N'&MF EQ 2).TOKN020       CHECK FOR 2 SUBLISTS    04483000
.********************************************************************   04483100
.***         WRONG NUMBER OF SUBLISTS SPECIFIED                         04483200
.********************************************************************   04483300
&ZMS          SETC  '"MF='      *KUKWA* MNOTE                           04483400
&ZMS          SETC  '&ZMS.&MF"'                                         04483500
&ZMS          SETC  '&ZMS IS INCORRECT. '                               04483600
&ZMS          SETC  '&ZMS PARAMETER LIST NAME '                         04483700
&ZMS          SETC  '&ZMS IS REQUIRED. '                                04483800
              MNOTE 8,' &ZMS '                                          04483900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04484000
.TOKN020      ANOP  ,           CONTINUE SPTOKEN PROCESSING             04485000
.*----------------------------------------------------------------***   04486000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     04487000
              AIF   (N'&SPTOKEN LE 1).TOKN030   CK NUM                  04488000
&ZMS          SETC  '"SPTOKEN='                 *KPOSA* MNOTE           04489000
&ZMS          SETC  '&ZMS.&SPTOKEN"'                                    04490000
&ZMS          SETC  '&ZMS "SPTOKEN"'                                    04491000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 04492000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04492100
.TOKN030      ANOP  ,                                                   04492200
.*-------------------------------------------------------------------   04492300
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         04492400
&ZXSPTOKEN    SETC  'INPUT'     SET IN/OUTPUT                           04492500
&XSPTOKEN     SETC  '&SPTOKEN(1)'               SET XVARIABLE           04492600
              AIF   (N'&SPTOKEN GT 1).TOKN040   MULTIPLE PARMS          04492700
&XSPTOKEN     SETC  '&SPTOKEN'  SET XVARIABLE                           04492800
.TOKN040      AIF   (K'&SPTOKEN(1) GT 0).TOKN050                        04492900
&ZXSPTOKEN    SETC  ''          RESET IN/OUTPUT                         04493000
&ZMS          SETC  ' '         *KRQDA*                                 04494000
&ZMS          SETC  '&ZMS "SPTOKEN" KEY AND ITS ARGUMENT ARE'           04495000
              MNOTE 8,' &ZMS REQUIRED.'                                 04496000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04497000
.TOKN050      ANOP  ,                                                   04498000
.*-------------------------------------------------------------------   04499000
.***AG.KCK01 NAME, RQD INPUT, KEYS -GPR NOT ALLOWED                     04500000
              AIF   (K'&ZXSPTOKEN LE 0).TOKN060 NOT I/O                 04501000
              AIF   ('&XSPTOKEN'(1,1) NE '(').TOKN060                   04501100
&ZXSPTOKEN    SETC  ''          RESET IN/OUTPUT                         04501200
&ZMS          SETC  '"SPTOKEN='                 *KGPRA* MNOTE           04501300
&ZMS          SETC  '&ZMS.&SPTOKEN"'                                    04501400
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           04501500
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                   04501600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04501700
.TOKN060      ANOP  ,                                                   04501800
.*----------------------------------------------------------------***   04501900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     04502000
              AIF   (N'&EXIT LE 1).TOKN070      CK NUM                  04503000
&ZMS          SETC  '"EXIT='    *KPOSA* MNOTE                           04504000
&ZMS          SETC  '&ZMS.&EXIT"'                                       04505000
&ZMS          SETC  '&ZMS "EXIT"'                                       04506000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 04507000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04508000
.TOKN070      ANOP  ,                                                   04509000
.*-------------------------------------------------------------------   04510000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         04510100
&ZXEXIT       SETC  'INPUT'     SET IN/OUTPUT                           04510200
&XEXIT        SETC  '&EXIT(1)'  SET XVARIABLE                           04510300
              AIF   (N'&EXIT GT 1).TOKN080      MULTIPLE PARMS          04510400
&XEXIT        SETC  '&EXIT'     SET XVARIABLE                           04510500
.TOKN080      AIF   (K'&EXIT(1) GT 0).TOKN090                           04510600
&ZXEXIT       SETC  ''          RESET IN/OUTPUT                         04510700
&ZMS          SETC  ' '         *KRQDA*                                 04510800
&ZMS          SETC  '&ZMS "EXIT" KEY AND ITS ARGUMENT ARE'              04510900
              MNOTE 8,' &ZMS REQUIRED.'                                 04511000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04512000
.TOKN090      ANOP  ,                                                   04513000
.*-------------------------------------------------------------------   04514000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    04515000
              AIF   (K'&ZXEXIT LE 0).TOKN120    NOT I/O                 04516000
              AIF   ('&XEXIT'(1,1) NE '(').TOKN120                      04517000
&ZCGPR        SETC  '&XEXIT'(2,K'&XEXIT-2)                              04518000
              AIF   ('&ZCGPR'(1,1) NE '0').TOKN100                      04519000
              AIF   (K'&ZCGPR GT 2).TOKN110                             04519100
              AIF   ('&ZCGPR' EQ '0').TOKN110                           04519200
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       04519300
              AIF   (T'&ZCGPR NE 'N').TOKN110   INVALID REG NAME        04519400
.TOKN100      ANOP  ,                                                   04519500
              AIF   (T'&ZCGPR NE 'N').TOKN120   NON NUMERIC             04519600
              AIF   ('&ZCGPR' LT '2').TOKN110                           04519700
              AIF   ('&ZCGPR' LE '12').TOKN120                          04519800
.TOKN110      ANOP  ,                                                   04519900
&ZMS          SETC  '"EXIT='    *KGPRA* MNOTE                           04520000
&ZMS          SETC  '&ZMS.&EXIT"'                                       04521000
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           04522000
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    04523000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04524000
.TOKN120      ANOP  ,                                                   04525000
.*----------------------------------------------------------------***   04526000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     04527000
              AIF   (N'&RSCODE LE 1).TOKN130    CK NUM                  04528000
&ZMS          SETC  '"RSCODE='  *KPOSA* MNOTE                           04528100
&ZMS          SETC  '&ZMS.&RSCODE"'                                     04528200
&ZMS          SETC  '&ZMS "RSCODE"'                                     04528300
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 04528400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04528500
.TOKN130      ANOP  ,                                                   04528600
.*-------------------------------------------------------------------   04528700
.***AG.KXVAR17 NAME, OPT INPUT, KEYS -XVARIABLE                         04528800
&XRSCODE      SETC  ''          SET DEFAULT                             04528900
              AIF   (K'&RSCODE(1) LE 0).TOKN150 PARM                    04529000
&XRSCODE      SETC  '&RSCODE(1)'                SET XVARIABLE           04530000
              AIF   (N'&RSCODE GT 1).TOKN140    MULTIPLE PARMS          04531000
&XRSCODE      SETC  '&RSCODE'   SET XVARIABLE                           04532000
.TOKN140      AIF   (K'&EXIT(1) GT 0).TOKN150   KEY                     04533000
&ZMS          SETC  '"RSCODE'   *KDEPA* MNOTE                           04534000
&ZMS          SETC  '&ZMS.=&RSCODE"'                                    04535000
&ZMS          SETC  '&ZMS CAN ONLY BE SPECIFIED IF'                     04536000
&ZMS          SETC  '&ZMS '                                             04537000
&ZMS          SETC  '&ZMS "EXIT"'                                       04537100
              MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                        04537200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04537300
.TOKN150      ANOP  ,                                                   04537400
&ZXRSCODE     SETC  'INPUT'     SET IN/OUTPUT                           04537500
.*-------------------------------------------------------------------   04537600
.***AG.KCK01 NAME, OPT INPUT, KEYS -GPR NOT ALLOWED                     04537700
              AIF   (K'&ZXRSCODE LE 0).TOKN160  NOT I/O                 04537800
              AIF   ('&XRSCODE' EQ '').TOKN160                          04537900
              AIF   ('&XRSCODE'(1,1) NE '(').TOKN160                    04538000
&ZXRSCODE     SETC  ''          RESET IN/OUTPUT                         04539000
&ZMS          SETC  '"RSCODE='  *KGPRA* MNOTE                           04540000
&ZMS          SETC  '&ZMS.&RSCODE"'                                     04541000
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           04542000
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                   04543000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04544000
.TOKN160      ANOP  ,                                                   04545000
.*----------------------------------------------------------------***   04545100
.***AG.KXVAR18 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     04545200
              AIF   (N'&EXITPARM LE 1).TOKN162      CK NUM         @D1A 04545300
&ZMS          SETC  '"EXITPARM='    *KPOSA* MNOTE                  @D1A 04545400
&ZMS          SETC  '&ZMS.&EXITPARM"'                              @D1A 04545500
&ZMS          SETC  '&ZMS "EXITPARM"'                              @D1A 04545600
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            @D1A 04545700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE        @D1A 04545800
.TOKN162      ANOP  ,                                              @D1A 04545900
&ZXEXITPARM   SETC  'INPUT'     SET IN/OUTPUT                      @D1A 04546000
.*-------------------------------------------------------------------   04546100
.***AG.KXVAR19 NAME, OPT INPUT, KEYS -XVARIABLE                    @D1A 04546200
&XEXITPARM    SETC  ''          SET DEFAULT                        @D1A 04546300
              AIF   (K'&EXITPARM(1) LE 0).TOKN166 PARM             @D1A 04546400
&XEXITPARM    SETC  '&EXITPARM(1)'                SET XVARIABLE    @D1A 04546500
.TOKN166      ANOP  ,                                              @D1A 04546600
.*-------------------------------------------------------------------   04546700
&ZXEXITPARM     SETC  'INPUT'     SET IN/OUTPUT                    @D1A 04546800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    04546900
              AIF   (K'&ZXEXITPARM LE 0).TOKN172    NOT I/O        @D1A 04547000
              AIF   ('&XEXITPARM' EQ '').TOKN172                   @D1A 04547100
              AIF   ('&XEXITPARM'(1,1) NE '(').TOKN172             @D1A 04547200
&ZCGPR        SETC  '&XEXITPARM'(2,K'&XEXITPARM-2)                 @D1A 04547300
              AIF   ('&ZCGPR'(1,1) NE '0').TOKN168                 @D1A 04547400
              AIF   (K'&ZCGPR GT 2).TOKN170                        @D1A 04547500
              AIF   ('&ZCGPR' EQ '0').TOKN170                      @D1A 04547600
&ZCGPR        SETC  '&ZCGPR'(2,1)                                  @D1A 04547700
              AIF   (T'&ZCGPR NE 'N').TOKN170   INVALID REG NAME   @D1A 04547800
.TOKN168      ANOP  ,                                              @D1A 04547900
              AIF   (T'&ZCGPR NE 'N').TOKN172   NON NUMERIC        @D1A 04548000
              AIF   ('&ZCGPR' LT '2').TOKN170                      @D1A 04548100
              AIF   ('&ZCGPR' LE '12').TOKN172                     @D1A 04548200
.TOKN170      ANOP  ,                                              @D1A 04548300
&ZMS          SETC  '"EXITPARM='    *KPOSA* MNOTE                  @D1A 04548400
&ZMS          SETC  '&ZMS.&EXITPARM"'                              @D1A 04548500
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      @D1A 04548600
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               @D1A 04548700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE        @D1A 04548800
.TOKN172      ANOP  ,           END OF FULL SYNTAX CHECK           @D1A 04548900
.*******************************************************************    04549000
.***       GENERATE CODE IF ZMACRET=0                                   04549100
.*                                                                      04549200
.* TITLE: .TGEN                                                         04549300
.*                                                                      04549400
.*******************************************************************    04549500
              AIF   (&ZMACRET NE 0).EXIT000     ERROR DETECTED          04549600
.*******************************************************************    04549700
.***       SEPARATE STANDARD FORM FROM EXECUTE FORM                     04549800
.*******************************************************************    04549900
&XLIST        SETC  '&GNAME1'              ASSUME STANDARD FORM         04550000
              AIF   ('&XMF' EQ 'S').TGEN000  IF STANDARD CONTINUE       04551000
&XLIST        SETC  '&MF(2)'               ELSE ASSIGN NAME FOR LIST    04552000
              AGO   .TGE000                GO GENERATE EXECUTE FORM     04553000
.*******************************************************************    04553100
.***       START OF SUSPEND MACRO CODE (STANDARD FORM)                  04553200
.*******************************************************************    04553300
.TGEN000      ANOP                                                      04553400
              LCLC  &M0M0001                 LABEL NAME                 04553500
&M0M0001      SETC  '&XLABEL'                SET LABEL                  04553600
              AIF   (K'&XLABEL NE 0).TGEN010                            04553700
&M0M0001      SETC  'M00M&SYSNDX'            DEFAULT LABEL              04553800
.*                                                                      04553900
.TGEN010      ANOP  ,                                                   04554000
&M0M0001 DS    0H                             SUSPEND-0                 04555000
         LAE    1,&XLIST                   POINT GPR/AR 1 TO LIST       04556000
.********************************************************************   04557000
.*    GENERATE INLINE PARAMETER LIST                                *   04558000
.********************************************************************   04559000
         LAE    14,&SPTOKEN                LOAD ALET/ADDRESS OF TOKEN   04560000
         STAM   14,14,8(1)                 STORE ALET INTO LIST         04561000
         ST     14,12(,1)                  STORE ADDR INTO LIST  @01C   04562000
         AIF    ('&EXIT'(1,1) EQ '(').TGEN020                           04562100
         LA     14,&EXIT                   LOAD ADDRESS OF EXIT         04562200
         ST     14,4(,1)                   STORE ADDR INTO LIST  @01C   04562300
         AGO    .TGEN030                                                04562400
.TGEN020 ANOP                                                           04562500
         ST     &EXIT(1),4(,1)             STORE EXIT ADDRESS INTO      04562600
*                                          LIST                  @01C   04562700
.*******************************************************************    04562800
.*         CHECK FOR "EXITPARM" OPTION                                  04562900
.*******************************************************************    04563000
.TGEN030 ANOP                                                           04564000
         AIF   ('&XEXITPARM' EQ '').TGEN036                        @D1A 04565000
         AIF   ('&EXITPARM'(1,1) EQ '(').TGEN034                   @D1A 04566000
.TGEN032 ANOP                           .PROCESS EXIT PARM LABEL   @D1A 04566100
         LAE    14,&EXITPARM               LOAD EXIT PARM ALET/ADDRESS  04566200
         STAM   14,14,16(1)                STORE ALET INTO LIST         04566300
         ST     14,20(,1)                  STORE ADDR INTO LIST    @01C 04566400
         AGO   .TGEN036                                            @D1A 04566500
.TGEN034 ANOP                           .PROCESS EXIT PARM REGS    @D1A 04566600
         STAM   &EXITPARM(1),&EXITPARM(1),16(1)  STORE EXIT PARM ALET   04566700
         ST     &EXITPARM(1),20(,1)        STORE EXIT PARM ADDR    @01C 04566800
.TGEN036 ANOP                           .EXIT PARM NOT SPECIFIED   @D1A 04566900
         AGO   .TGEN040                                            @D1A 04567000
.*******************************************************************    04567100
.*         END "EXITPARM" PROCESSING                                    04567200
.*******************************************************************    04567300
.TGEN040 ANOP                                                           04567400
         B      &GNAME2                    BRANCH AROUND PARM LIST      04567500
         CNOP   0,4                        FORCE LIST TO WORD BOUNDARY  04567600
.*                                                                      04567700
&GNAME1  DS     0CL24                      SUSPEND/RESUME WITH TOKEN    04567800
*                                          (INPUT/OUTPUT)               04567900
         DC     XL1'01'                    PARAMETER LEVEL INDICATOR    04568000
         DC     XL3'00'                                                 04569000
         DC     A(0)                       SUSPEND EXIT ADDRESS         04570000
         DC     F'0'                       ALET OF SUSPEND TOKEN        04570100
         DC     A(0)                       ADDRESS OF SUSPEND TOKEN     04570200
         DC     F'0'                       ALET OF EXIT PARAMETER       04570300
         DC     A(0)                       ADDRESS OF EXIT PARAMETER    04570400
.********************************************************************   04570500
.*    GENERATE PC LINKAGE TO SUSPEND WITH TOKEN SERVICE ROUTINE     *   04570600
.*    REGISTER 14 IS USED AS A WORK REGISTER                        *   04570700
.********************************************************************   04570800
&GNAME2  L      14,16(0,0)                 GET ADDRESS OF CVT           04570900
         L      14,772(14,0)               GET ADDRESS OF SFT           04571000
         L      14,(&SFTSLOT-1)*4(14,0)    GET LX/EX FOR ROUTINE        04572000
         PC     0(14)                      PC TO SUSPEND WITH TOKEN     04573000
         AGO    .TRET000                   REJOIN COMMON GENERATION     04574000
.*******************************************************************    04575000
.***       START OF SUSPEND MACRO CODE (EXECUTE FORM)                   04576000
.*                                                                      04577000
.* TITLE: .TGE                                                          04577100
.*                                                                      04577200
.*******************************************************************    04577300
.TGE000       ANOP                                                      04577400
              LCLC  &M0M0001                 LABEL NAME                 04577500
&M0M0001      SETC  '&XLABEL'                SET LABEL                  04577600
              AIF   (K'&XLABEL NE 0).TGE010                             04577700
&M0M0001      SETC  'M00M&SYSNDX'            DEFAULT LABEL              04577800
.*                                                                      04577900
.TGE010       ANOP  ,                                                   04578000
&M0M0001 DS    0H                             SUSPEND-0                 04579000
.********************************************************************   04580000
.*    CHECK FOR REGISTER TYPE PARAMETER LIST ADDRESS                *   04581000
.********************************************************************   04582000
         AIF    ('&MF(2)'(1,1) EQ '(').TGE020   BRANCH TO PROCESS       04583000
         LAE    1,&XLIST                   POINT GPR/AR 1 TO LIST       04584000
         AGO    .TGE030                    CONTINUE PROCESSING          04585000
.TGE020  ANOP                                                           04586000
&XLIST   SETC   '&MF(2)'(2,K'&MF(2)-2)     EXTRACT REGISTER NAME        04586100
         LAE    1,0(0,&XLIST)              POINT GPR/AR 1 TO LIST       04586200
         AGO    .TGE030                    CONTINUE PROCESSING          04586300
.********************************************************************   04586400
.*    FILL IN PARAMETER LIST                                        *   04586500
.********************************************************************   04586600
.TGE030  ANOP                                                           04586700
.*                                  .CLEAR 24-BYTE PARAMETER LIST  @D1C 04586800
         XC     0(24,1),0(1)               CLEAR PARAMETER LIST         04586900
         MVI    0(1),X'01'                 INIT PARAMETER LEVEL         04587000
         LAE    14,&SPTOKEN                LOAD ALET/ADDRESS OF TOKEN   04588000
         STAM   14,14,8(1)                 STORE ALET INTO LIST         04589000
         ST     14,12(,1)                  STORE ADDRESS INTO LIST @01C 04590000
         AIF    ('&EXIT'(1,1) EQ '(').TGE040                            04591000
         LA     14,&EXIT                   LOAD ADDRESS OF EXIT         04592000
         ST     14,4(,1)                   STORE ADDRESS INTO LIST @01C 04593000
         AGO    .TGE050                                                 04594000
.TGE040  ANOP                                                           04594100
         ST     &EXIT(1),4(,1)             STORE EXIT ADDRESS INTO      04594200
*                                          LIST                    @01C 04594300
.*******************************************************************    04594400
.*         CHECK FOR "EXITPARM" OPTION                                  04594500
.*******************************************************************    04594600
.TGE050  ANOP                                                           04594700
         AIF   ('&XEXITPARM' EQ '').TGE056                         @D1A 04594800
         AIF   ('&EXITPARM'(1,1) EQ '(').TGE054                    @D1A 04594900
.TGE052  ANOP                           .PROCESS EXIT PARM LABEL   @D1A 04595000
         LAE    14,&EXITPARM               LOAD EXIT PARM ALET/ADDRESS  04596000
         STAM   14,14,16(1)                STORE ALET INTO LIST         04596100
         ST     14,20(,1)                  STORE ADDRESS INTO LIST @01C 04596200
         AGO   .TGE056                                             @D1A 04596300
.TGE054  ANOP                           .PROCESS EXIT PARM REGS    @D1A 04596400
         STAM   &EXITPARM(1),&EXITPARM(1),16(1)  STORE EXIT PARM ALET   04596500
         ST     &EXITPARM(1),20(,1)      STORE EXIT PARM ADDR      @01C 04596600
.TGE056  ANOP                           .EXIT PARM NOT SPECIFIED   @D1A 04596700
         AGO   .TGE060                                             @D1A 04596800
.*******************************************************************    04596900
.*         END "EXITPARM" PROCESSING                                    04597000
.*******************************************************************    04597100
.TGE060  ANOP                                                           04597200
.********************************************************************   04597300
.*    GENERATE PC LINKAGE TO SUSPEND WITH TOKEN SERVICE ROUTINE     *   04597400
.*    REGISTER 14 IS USED AS A WORK REGISTER                        *   04597500
.********************************************************************   04597600
         L      14,16(0,0)                 GET ADDRESS OF CVT           04597700
         L      14,772(14,0)               GET ADDRESS OF SFT           04597800
         L      14,(&SFTSLOT-1)*4(14,0)    GET LX/EX FOR ROUTINE        04597900
         PC     0(14)                      PC TO SUSPEND WITH TOKEN     04598000
         AGO    .TRET000                   REJOIN COMMON GENERATION     04599000
.*******************************************************************    04600000
.***       CHECK FOR "RSCODE" OPTION                                    04601000
.*                                                                      04602000
.* TITLE: .TRET                                                         04602100
.*                                                                      04602200
.*******************************************************************    04602300
.TRET000 ANOP                                                           04602400
         AIF   ('&XRSCODE' EQ '').TRET010                               04602500
.*******************************************************************    04602600
.***       GENERATE CODE TO COPY RESUME CODE                            04602700
.*******************************************************************    04602800
         LAE    14,&RSCODE                GET ADDRESS OF USER'S AREA    04602900
         ST     0,0(,14)                  SAVE RESUME CODE              04603000
.TRET010 ANOP                                                           04604000
         AGO    .EXIT000                                                04605000
.********************************************************************   04606000
.*     MF=L PROCEDURE                                               *   04607000
.*                                                                      04608000
.* TITLE: .LIST                                                         04609000
.*                                                                      04610000
.********************************************************************   04611000
.LIST000      ANOP   ,                                                  04611100
.*******************************************************************    04611200
.*** CHECK FOR "SPTOKEN" OR "RB" OPTIONS ILLEGALLY SPECIFIED WITH "MF"  04611300
.*******************************************************************    04611400
&ZMS          SETC  ''          CLEAR MNOTE WORK AREAS                  04611500
&ZMA          SETA  0           CLEAR COUNT OF ERRORS                   04611600
              AIF   (T'&RB EQ 'O').LIST010                              04611700
&ZMA          SETA  &ZMA+1      BUMP COUNT BAD KEYS                     04611800
&ZMS          SETC  ' "RB"'                                             04611900
.*******************************************************************    04612000
.***         CHECK FOR "EXIT"                                           04613000
.*******************************************************************    04614000
.LIST010      ANOP                                                      04615000
              AIF   (T'&EXIT EQ 'O').LIST030                            04616000
&ZMA          SETA  &ZMA+1      BUMP COUNT BAD KEYS                     04617000
              AIF   (&ZMA EQ 1).LIST020                                 04618000
&ZMS          SETC  '&ZMS., "EXIT"'                                     04619000
              AGO   .LIST030                                            04620000
.LIST020      ANOP                                                      04620100
&ZMS          SETC  ' "EXIT"'                                           04620200
.*******************************************************************    04620300
.***         CHECK FOR "RSCODE"                                         04620400
.*******************************************************************    04620500
.LIST030      ANOP                                                      04620600
              AIF   (T'&RSCODE EQ 'O').LIST042                     @D1C 04620700
&ZMA          SETA  &ZMA+1      BUMP COUNT BAD KEYS                     04620800
              AIF   (&ZMA EQ 1).LIST040                                 04620900
&ZMS          SETC  '&ZMS., "RSCODE"'                                   04621000
              AGO   .LIST042                                       @D1C 04622000
.LIST040      ANOP                                                      04623000
&ZMS          SETC  ' "RSCODE"'                                         04624000
.*******************************************************************    04625000
.***         CHECK FOR "EXITPARM"                                       04626000
.*******************************************************************    04626100
.LIST042      ANOP                                                 @D1A 04626200
              AIF   (T'&EXITPARM EQ 'O').LIST046                   @D1A 04626300
&ZMA          SETA  &ZMA+1      BUMP COUNT BAD KEYS                @D1A 04626400
              AIF   (&ZMA EQ 1).LIST044                            @D1A 04626500
&ZMS          SETC  '&ZMS., "EXITPARM"'                            @D1A 04626600
              AGO   .LIST046                                       @D1A 04626700
.LIST044      ANOP                                                 @D1A 04626800
&ZMS          SETC  ' "EXITPARM"'                                  @D1A 04626900
.LIST046      ANOP                                                 @D1A 04627000
              AIF   (&ZMA EQ 0).LIST050 IF KEYWORDS OK, GO GENERATE     04627100
.*******************************************************************    04627200
.***         GENERATE MNOTE                                             04627300
.*******************************************************************    04627400
              AIF   (&ZMA GT 1).LIST047                                 04627500
&ZMS          SETC  '&ZMS. KEYWORD IS NOT VALID '                       04627600
&ZMS          SETC  '&ZMS.WITH "MF=&MF". '                              04627700
              MNOTE 8,' &ZMS '                                          04627800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04627900
              AGO   .LIST050    GO GENERATE CODE                        04628000
.LIST047      ANOP                                                      04629000
&ZMS          SETC  '&ZMS. KEYWORDS ARE NOT VALID '                     04630000
&ZMS          SETC  '&ZMS.WITH "MF=&MF". '                              04631000
              MNOTE 8,' &ZMS '                                          04632000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             04633000
.*******************************************************************    04634000
.***       GENERATE CODE IF ZMACRET=0                                   04635000
.*******************************************************************    04636000
.LIST050      ANOP  ,                                                   04636100
              AIF   (&ZMACRET NE 0).EXIT000     ERROR DETECTED          04636200
.*******************************************************************    04636300
.***       START OF SUSPEND MACRO CODE  (LIST FORM)                     04636400
.*******************************************************************    04636500
         DS    0F                                                       04636600
&XLABEL  DS    0CL24                       SUSPEND/RESUME WITH TOKEN    04636700
*                                          (INPUT/OUTPUT)               04636800
         DC    XL1'01'                     PARAMETER LEVEL INDICATOR    04636900
         DC    XL3'00'                                                  04637000
         DC    A(0)                        SUSPEND EXIT ADDRESS         04638000
         DC    F'0'                        ALET OF SUSPEND TOKEN        04639000
         DC    A(0)                        ADDRESS OF SUSPEND TOKEN     04640000
         DC    F'0'                        ALET OF EXIT PARAMETER       04641000
         DC    A(0)                        ADDRESS OF EXIT PARAMETER    04642000
.*                                                                      04643000
         AGO    .EXIT000                                                04643100
.********************************************************************   04643200
.***       EXIT MACRO                                                   04643300
.*                                                                      04643400
.* TITLE: .EXIT                                                         04643500
.*                                                                      04643600
.********************************************************************   04643700
.EXIT000 ANOP                                                           04643800
         SPACE 1                                                        04643900
.EXIT010 ANOP                                                           04644000
.EXIT020 ANOP                                                           04645000
         MEXIT                                                          04646000
         MEND                                                           04647000
********************************************************************/   04648000
*/*PB.ECHO03 START OF MACRO INVOCATION ECHO--------------------------*/ 04649000
*  IF MACLABEL ^= '' THEN          /* IF USER SPECIFIED A LABEL      */ 04650000
*     ANS(MACLABEL) COL(2);        /* THEN GENERATE IT               */ 04660000
*                                                                       04670000
*/********************************************************************/ 04680000
*/*PV.DCL01 MACRO DECLARES AND CODE GENERATION CONTROLS              */ 04690000
*/********************************************************************/ 04700000
*                                                                       04710000
*  DCL   ZSUSPEND CHAR EXTERNAL; /* YES=USED AT LEAST ONCE          */  04720000
*                                                                       04730000
*  DCL ZMACRET FIXED; DEACT ZMACRET;                                    04740000
*  DCL ZIVDOCMT FIXED; DEACT ZIVDOCMT;  /* FLAG TO INDICATE THAT THE    04750000
*                                  MACRO INVOCATION HAS BEEN PRINTED    04760000
*                                  AS A GENERATED BLOCK COMMENT  @D1A*/ 04770000
*                                                                       04780000
*  ZMACRET=0;                   /* INIT COMPILE RETURN CODE          */ 04790000
*  ZIVDOCMT=0;                  /* INIT DO-END COMMENT FLAG      @D1A*/ 04800000
*                                                                       04810000
*  DCL ZMS CHAR;   DEACT ZMS;   /* ERROR MESSAGE                     */ 04820000
*  DCL ZMA FIXED;  DEACT ZMA;       /* BAD KEYWORD COUNT             */ 04830000
*  DCL ZCVAL CHAR; DEACT ZCVAL; /* ERROR MESSAGE WORK AREA           */ 04840000
*  DCL ZI FIXED;  DEACT ZI;     /* INDEX FOR VARIABLE NUM OF PARMS   */ 04850000
*  DCL ZJ FIXED;  DEACT ZJ;     /* INDEX FOR VARIABLE NUM OF PARMS   */ 04860000
*  DCL ZK FIXED;  DEACT ZK;     /* INDEX FOR RANGE COLON (:)         */ 04870000
*  DCL ZL FIXED;  DEACT ZL;     /* INDEX FOR RANGE VALUE CHECKING    */ 04880000
*  DCL ZLO FIXED; DEACT ZLO;    /* LOW RANGE VALUE                   */ 04890000
*  DCL ZHI FIXED; DEACT ZHI;    /* HIGH RANGE VALUE                  */ 04900000
*  DCL ZW CHAR;   DEACT ZW;     /* WORK AREA FOR RANGE VALUE SUBLIST */ 04910000
*  DCL ZN FIXED;  DEACT ZN;     /* NUMERIC WORK VARIABLE             */ 04920000
*  DCL ZC CHAR;   DEACT ZC;     /* CHARACTER WORK VARIABLE           */ 04930000
*                                                                       04940000
*  DCL ZPRMMAX FIXED;           /* MAXIMUM PARM LIST SIZE            */ 04950000
*  DCL ZPRMNUM FIXED;           /* PARAMETER ARRAY INDEX             */ 04960000
*  DCL ZPRM(100);               /* PARAMETER ENTRY                   */ 04970000
*  DCL EHAMAXLEN FIXED EXTERNAL;   /* MAX ILIST SIZE FOR PARM LISTS  */ 04980000
*  DCL EHAMAPS CHARACTER EXTERNAL; /* MAPPINGS GENERATED BY EPILOG   */ 04990000
*  DCL EHAREGS CHARACTER EXTERNAL; /* REG DCLS                       */ 05000000
*  DCL EHALIST CHARACTER EXTERNAL; /* STANDARD PARM LIST GENERATION  */ 05010000
*/*******************************************************************/  05020000
*/*PV.XVAR01 DECLARE ALL MACRO PARAMETER VARIABLES                  */  05030000
*/*******************************************************************/  05040000
*  DCL XRB;  DEACT XRB;            /***PV.XVAR02 INPUT VALUE */         05050000
*  DCL ZXRB; DEACT ZXRB;           /***INPUT/OUTPUT CONTROL */          05060000
*  DCL XSPTOKEN;  DEACT XSPTOKEN;  /***PV.XVAR02 INPUT NAME */          05070000
*  DCL ZXSPTOKEN; DEACT ZXSPTOKEN;  /***INPUT/OUTPUT CONTROL */         05080000
*  DCL XEXIT;  DEACT XEXIT;        /***PV.XVAR02 INPUT NAME */          05090000
*  DCL ZXEXIT; DEACT ZXEXIT;       /***INPUT/OUTPUT CONTROL */          05100000
*  DCL XMF;    DEACT XMF;          /***INPUT VALUE/NAME     */          05110000
*  DCL XLIST;  DEACT XLIST;         /**INPUT PARM LIST NAME */          05120000
*  DCL XMAP;   DEACT XMAP;         /***PARAMETER LIST MAP   */          05130000
*  DCL XRSCODE;  DEACT XRSCODE;    /***PV.XVAR02 INPUT NAME */          05140000
*  DCL ZXRSCODE; DEACT ZXRSCODE;   /***INPUT/OUTPUT CONTROL */          05150000
*  DCL XEXITPARM; DEACT XEXITPARM; /***PV.XVAR03 INPUT NAME      @D1A*/ 05160000
*  DCL ZXEXITPARM; DEACT ZXEXITPARM; /*INPUT OUTPUT CONTROL      @D1A*/ 05170000
*  DCL XRELATED; DEACT XRELATED;   /***INPUT COMMENT        */          05180000
*  DCL IVDOCMT   CHARACTER;        /***DO/END COMMENT       */          05190000
*  DCL IVPLSIZE FIXED;             /***PARAMETER LIST SIZE  */          05200000
*  DCL IVSTRING CHAR;              /***EPILOG WORKAREA      */          05210000
*  DCL MACDATE  CHAR;              /* DATE MACRO LAST MODIFIED   @D1A*/ 05220000
*  DCL SFTSLOT  CHAR;              /***INDEX INTO SFT       */          05230000
*/********************************************************************/ 05240000
*/*PB.SYSL01 INVOKE SP LEVEL AND SYSTEM STATE MACROS                 */ 05250000
*/********************************************************************/ 05260000
*  DCL SYSSPLV CHAR EXTERNAL; DEACT SYSSPLV;/* SPLEVEL 1,2,3         */ 05270000
*  DCL SYSASCE CHAR EXTERNAL; DEACT SYSASCE;/* STATE ANY P AR */        05280000
*  DCL SYSAM64 CHAR EXTERNAL;       /* Amode 64 or not           @D2A*/ 05290000
*  IVPLSIZE=24;                     /* INITIALIZE PARAMETER LIST        05300000
*                                      SIZE VARIABLE             @D1C*/ 05310000
*  SFTSLOT='64';                    /* INITIALIZE SFT INDEX          */ 05320000
*                                                                       05330000
*  MACDATE='01/15/93';              /* SET MODIFICATION DATE     @P3C*/ 05340000
*                                                                       05350000
*      IVDOCMT  = '?SUSPEND '!!MACLIST!!' '!!MACKEYS!!' ' !!            05360000
*                 'MACDATE(' !! MACDATE !! ') '  ;  /* SETUP "DO-END"   05370000
*                      COMMENT INCLUDING MACRO INVOCATION        @D1A*/ 05380000
*                                                                       05390000
*  IF SYSASCE=''                                                        05400000
*    THEN                                                               05410000
*      DO;                                                              05420000
*        IF SYSSPLV=''                                                  05430000
*          THEN                                                         05440000
*            ANS('?SPLEVEL  (TEST);') COL(MACLMAR);                     05450000
*        IF SYSSPLV^='1' & SYSSPLV^='2'                                 05460000
*          THEN                                                         05470000
*            ANS('?SYSSTATE (TEST);') COL(MACLMAR);                     05480000
*          ELSE                                                         05490000
*            SYSASCE='P';                    /* SYSSTATE DEFAULT*/      05500000
*      END;                                                             05510000
*  ANS('?SYSSTATE (TEST);') COL(MACLMAR);                      ] @D2A   05520000
*/********************************************************************/ 05530000
*/* *         CHECK IF BOTH RB AND SPTOKEN ARE SPECIFIED             */ 05540000
*/********************************************************************/ 05550000
*  IF (RB^='') & (SPTOKEN^='')      /* IF BOTH SPECIFIED...          */ 05560000
*     THEN                                                              05570000
*       DO;                                                             05580000
*            IF (ZIVDOCMT=0) THEN                                       05590000
*               DO;                           /* MACRO INVOCATION       05600000
*                                                NEVER PRINTED   @D1A*/ 05610000
*                 ANS(COMMENT(IVDOCMT))                                 05620000
*                     NORESCAN COL(MACLMAR);  /* GENERATE BLOCK         05630000
*                                                COMMENT         @D1A*/ 05640000
*                 ZIVDOCMT=8;                 /* SET COMMENT FLAG       05650000
*                                                                @D1A*/ 05660000
*               END;                                                    05670000
*                                                                       05680000
*        ZMS=' 8, "RB" AND "SPTOKEN" '!!                                05690000
*            ' ARE MUTUALLY EXCLUSIVE.';                                05700000
*        ANS MSG('?SUSPEND ---> '!!ZMS);                                05710000
*        ZMS =   '?SUSPEND ---> '!!ZMS ; /* SETUP ERROR COMMENT      */ 05720000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                05730000
*        ZMACRET=8;                          /* MACRO ERROR */          05740000
*       END;                                                            05750000
*/********************************************************************/ 05760000
*/* CHECK FOR "RB" SPECIFICATION                                     */ 05770000
*/********************************************************************/ 05780000
*  IF (RB^='') THEN                                                     05790000
*       DO;                                                             05800000
*        GOTO RPROC;                /* BRANCH TO "RB" PROCEDURE      */ 05810000
*       END;                                                            05820000
*/********************************************************************/ 05830000
*/* CHECK FOR SPTOKEN                                                */ 05840000
*/********************************************************************/ 05850000
*  IF (SPTOKEN^='') THEN                                                05860000
*       DO;                                                             05870000
*        GOTO TPROC;                /* BRANCH TO SPTOKEN PROCEDURE   */ 05880000
*       END;                                                            05890000
*/********************************************************************/ 05900000
*/* CHECK FOR LIST FORM                                              */ 05910000
*/********************************************************************/ 05920000
*   IF (MF^='') THEN                                                    05930000
*       DO;                        /* VERIFY MACRO FORM              */ 05940000
*       IF (MF(1)='L') THEN                                             05950000
*          DO;                                                          05960000
*            XMF='L';                                                   05970000
*            GOTO LPROC;           /* BRANCH TO LIST PROCEDURE       */ 05980000
*          END;                    /*  MF CHECK                      */ 05990000
*/********************************************************************/ 06000000
*/* "MF" SPECIFIED THAT IS NOT LIST FORM WITHOUT SPTOKEN CHECK ERROR */ 06010000
*/********************************************************************/ 06020000
*       IF (MF(1)='E') ! (MF(1)='S')  THEN                              06030000
*          DO;                                                          06040000
*                                                                       06050000
*            IF (ZIVDOCMT=0) THEN                                       06060000
*               DO;                           /* MACRO INVOCATION       06070000
*                                                NEVER PRINTED   @D1A*/ 06080000
*                 ANS(COMMENT(IVDOCMT))                                 06090000
*                     NORESCAN COL(MACLMAR);  /* GENERATE BLOCK         06100000
*                                                COMMENT         @D1A*/ 06110000
*                 ZIVDOCMT=8;                 /* SET COMMENT FLAG       06120000
*                                                                @D1A*/ 06130000
*               END;                                                    06140000
*                                                                       06150000
*            ZMS=' 8, "MF' !! MF !! '"' !!                              06160000
*                ' MAY ONLY BE SPECIFIED WITH ' !!                      06170000
*                '"SPTOKEN". ';                                         06180000
*            ANS MSG('?SUSPEND ---> '!!ZMS);                            06190000
*            ZMS =   '?SUSPEND ---> '!!ZMS ;                            06200000
*            ANS(COMMENT(ZMS)) COL(MACLMAR);                            06210000
*            XMF='S';                                                   06220000
*            ZMACRET=8;                    /* MACRO ERROR */            06230000
*            XMF='E';                                                   06240000
*            GOTO XPROC;           /* BRANCH TO EXIT                 */ 06250000
*          END;                    /*  MF(E) OR MF(S) WITHOUT SPTOKEN*/ 06260000
*       ELSE                                                            06270000
*          DO;                     /* UNRECOGNIZED MACRO FORM        */ 06280000
*                                                                       06290000
*            IF (ZIVDOCMT=0) THEN                                       06300000
*               DO;                           /* MACRO INVOCATION       06310000
*                                                NEVER PRINTED   @D1A*/ 06320000
*                 ANS(COMMENT(IVDOCMT))                                 06330000
*                     NORESCAN COL(MACLMAR);  /* GENERATE BLOCK         06340000
*                                                COMMENT         @D1A*/ 06350000
*                 ZIVDOCMT=8;                 /* SET COMMENT FLAG       06360000
*                                                                @D1A*/ 06370000
*               END;                                                    06380000
*                                                                       06390000
*              ZMS=' 8, "MF' !! MF !! '"' !!                            06400000
*             ' IS INCORRECT. '!!                                       06410000
*             ' KEYWORD CHOICE IS:'!!                                   06420000
*             ' "MF=(L,CNTRL_ADDR)".  ';                                06430000
*              ANS MSG('?SUSPEND ---> '!!ZMS);                          06440000
*              ZMS =   '?SUSPEND ---> '!!ZMS ;                          06450000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          06460000
*              XMF='S';                                                 06470000
*              ZMACRET=8;                    /* MACRO ERROR */          06480000
*            XMF='E';                                                   06490000
*            GOTO XPROC;           /* BRANCH TO EXIT                 */ 06500000
*          END;                    /*  MF(E) OR MF(S) WITHOUT SPTOKEN*/ 06510000
*       END;                       /* MF CHECK                       */ 06520000
*/********************************************************************/ 06530000
*/* "RB" PROCEDURE                                                   */ 06540000
*/********************************************************************/ 06550000
* RPROC:                                                                06560000
*  IF NUMBER(RB)>1                           /* CHECK POSITIONALS */    06570000
*    THEN                                                               06580000
*      DO;                                                              06590000
*                                                                       06600000
*            IF (ZIVDOCMT=0) THEN                                       06610000
*               DO;                           /* MACRO INVOCATION       06620000
*                                                NEVER PRINTED   @D1A*/ 06630000
*                 ANS(COMMENT(IVDOCMT))                                 06640000
*                     NORESCAN COL(MACLMAR);  /* GENERATE BLOCK         06650000
*                                                COMMENT         @D1A*/ 06660000
*                 ZIVDOCMT=8;                 /* SET COMMENT FLAG       06670000
*                                                                @D1A*/ 06680000
*               END;                                                    06690000
*                                                                       06700000
*        ZMS=' 8, "RB'!!                     /**KPOSP* MSG*/            06710000
*            RB!!                                                       06720000
*            '" "RB"'!!                                                 06730000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              06740000
*        ANS MSG('?SUSPEND ---> '!!ZMS);                                06750000
*        ZMS =   '?SUSPEND ---> '!!ZMS ; /* SETUP ERROR COMMENT      */ 06760000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                06770000
*        ZMACRET=8;                          /* MACRO ERROR */          06780000
*      END;                                                             06790000
*/*PG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 06800000
*  XRB='';                                   /* RESET XVARIABLE */      06810000
*  IF RB(1) = 'PREVIOUS'                                                06820000
*    THEN                                                               06830000
*      XRB = 'PREVIOUS';                     /* SET XVARIABLE */        06840000
*/*PG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 06850000
*  IF RB(1) = 'CURRENT'                                                 06860000
*    THEN                                                               06870000
*      XRB = 'CURRENT';                      /* SET XVARIABLE */        06880000
*/*PG.KKWRD03 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 06890000
*  ZXRB='INPUT';                             /* SET IN/OUTPUT */        06900000
*  IF XRB=''                                 /* CHECK FOR KEYWORD */    06910000
*    THEN                                                               06920000
*      DO;                                   /* KEYWORD NOT ENTERED */  06930000
*        XRB='PREVIOUS';                     /* SET DEFAULT */          06940000
*        IF RB(1)^=''                                                   06950000
*          THEN                                                         06960000
*            DO;                                                        06970000
*                                                                       06980000
*            IF (ZIVDOCMT=0) THEN                                       06990000
*               DO;                           /* MACRO INVOCATION       07000000
*                                                NEVER PRINTED   @D1A*/ 07010000
*                 ANS(COMMENT(IVDOCMT))                                 07020000
*                     NORESCAN COL(MACLMAR);  /* GENERATE BLOCK         07030000
*                                                COMMENT         @D1A*/ 07040000
*                 ZIVDOCMT=8;                 /* SET COMMENT FLAG       07050000
*                                                                @D1A*/ 07060000
*               END;                                                    07070000
*                                                                       07080000
*              ZXRB='';                      /* RESET IN/OUTPUT */      07090000
*              ZMS=' 8, "RB'!!               /**KUKWP* MSG*/            07100000
*                  RB!!'"'!!                                            07110000
*                  ' IS INCORRECT. '!!                                  07120000
*                  ' KEYWORD CHOICE(S) ARE:'!!                          07130000
*                  ' "PREVIOUS"'!!           /* VALID KEYWORD */        07140000
*                  ' OR "CURRENT".';         /* VALID KEYWORD */        07150000
*              ANS MSG('?SUSPEND ---> '!!ZMS);                          07160000
*              ZMS =   '?SUSPEND ---> '!!ZMS ;                          07170000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          07180000
*              ZMACRET=8;                    /* MACRO ERROR */          07190000
*            END;                                                       07200000
*      END;                                                             07210000
*/********************************************************************/ 07220000
*/* CHECK FOR "SPTOKEN" OPTIONS ILLEGALLY SPECIFIED WITH "RB"        */ 07230000
*/********************************************************************/ 07240000
*  ZMS='';                          /* CLEAR MNOTE STRING VARIABLE   */ 07250000
*  ZMA=0;                           /* CLEAR COUNT OF BAD KEYS       */ 07260000
*  IF EXIT^='' THEN                                                     07270000
*    DO;                            /* ILLEGAL "EXIT" SPECIFICATION  */ 07280000
*      ZMS='"EXIT"';                                                    07290000
*      ZMA=1;                                                           07300000
*    END;                                                               07310000
*  IF RSCODE^='' THEN                                                   07320000
*    DO;                            /* ILLEGAL "RSCODE" SPECIFICATION   07330000
*                                                                    */ 07340000
*      IF ZMA=0 THEN                                                    07350000
*        DO;                        /* FIRST BAD KEY DETECTED        */ 07360000
*          ZMS='"RSCODE"';                                              07370000
*          ZMA=1;                   /* INITIALIZE ERROR COUNT        */ 07380000
*        END;                                                           07390000
*      ELSE                                                             07400000
*        DO;                        /* MULTIPLE BAD KEYS DETECTED    */ 07410000
*          ZMS = ZMS !! ', "RSCODE"';                                   07420000
*          ZMA=ZMA+1;               /* BUMP COUNT OF ERRORS          */ 07430000
*        END;                                                           07440000
*    END;                                                               07450000
*  IF EXITPARM^='' THEN                                                 07460000
*    DO;                            /* ILLEGAL "EXITPARM"               07470000
*                                      SPECIFICATION             @D1A*/ 07480000
*      IF ZMA=0 THEN                                                    07490000
*        DO;                        /* FIRST BAD KEY DETECTED    @D1A*/ 07500000
*          ZMS='"EXITPARM"';        /*                           @D1A*/ 07510000
*          ZMA=1;                   /* INITIALIZE ERROR COUNT    @D1A*/ 07520000
*        END;                                                           07530000
*      ELSE                                                             07540000
*        DO;                        /* MULTIPLE BAD KEYS         @D1A*/ 07550000
*          ZMS = ZMS !! ', "EXITPARM"';                                 07560000
*          ZMA=ZMA+1;               /* BUMP COUNT OF ERRORS      @D1A*/ 07570000
*        END;                                                           07580000
*    END;                                                     /* @D1A*/ 07590000
*  IF MF^='' THEN                                                       07600000
*    DO;                            /* ILLEGAL "MF" SPECIFICATION       07610000
*                                                                    */ 07620000
*      IF ZMA=0 THEN                                                    07630000
*        DO;                        /* FIRST BAD KEY DETECTED        */ 07640000
*          ZMS='"MF"';                                                  07650000
*          ZMA=1;                   /* INITIALIZE ERROR COUNT        */ 07660000
*        END;                                                           07670000
*      ELSE                                                             07680000
*        DO;                        /* MULTIPLE BAD KEYS DETECTED    */ 07690000
*          ZMS = ZMS !! ', "MF"';                                       07700000
*          ZMA=ZMA+1;               /* BUMP COUNT OF ERRORS          */ 07710000
*        END;                                                           07720000
*    END;                                                               07730000
*  IF ZMA>0 THEN                                                        07740000
*    DO;                            /* BAD KEY(S) DETECTED           */ 07750000
*      IF ZMA=1 THEN                                                    07760000
*        DO;                        /* SINGLE BAD KEY                */ 07770000
*                                                                       07780000
*            IF (ZIVDOCMT=0) THEN                                       07790000
*               DO;                           /* MACRO INVOCATION       07800000
*                                                NEVER PRINTED   @D1A*/ 07810000
*                 ANS(COMMENT(IVDOCMT))                                 07820000
*                     NORESCAN COL(MACLMAR);  /* GENERATE BLOCK         07830000
*                                                COMMENT         @D1A*/ 07840000
*                 ZIVDOCMT=8;                 /* SET COMMENT FLAG       07850000
*                                                                @D1A*/ 07860000
*               END;                                                    07870000
*                                                                       07880000
*              ZMS=' 8, ' !! ZMS !!                                     07890000
*                  ' KEYWORD IS NOT VALID WITH ' !!                     07900000
*                  '"RB' !! RB !! '. ';                                 07910000
*              ANS MSG('?SUSPEND ---> '!!ZMS);                          07920000
*              ZMS =   '?SUSPEND ---> '!!ZMS ;                          07930000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          07940000
*              ZMACRET=8;                    /* MACRO ERROR */          07950000
*        END;                                                           07960000
*      ELSE                                                             07970000
*        DO;                                                            07980000
*                                                                       07990000
*            IF (ZIVDOCMT=0) THEN                                       08000000
*               DO;                           /* MACRO INVOCATION       08010000
*                                                NEVER PRINTED   @D1A*/ 08020000
*                 ANS(COMMENT(IVDOCMT))                                 08030000
*                     NORESCAN COL(MACLMAR);  /* GENERATE BLOCK         08040000
*                                                COMMENT         @D1A*/ 08050000
*                 ZIVDOCMT=8;                 /* SET COMMENT FLAG       08060000
*                                                                @D1A*/ 08070000
*               END;                                                    08080000
*                                                                       08090000
*              ZMS=' 8, ' !! ZMS !!                                     08100000
*                  ' KEYWORDS ARE NOT VALID WITH ' !!                   08110000
*                  '"RB' !! RB !! '. ';                                 08120000
*              ANS MSG('?SUSPEND ---> '!!ZMS);                          08130000
*              ZMS =   '?SUSPEND ---> '!!ZMS ;                          08140000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          08150000
*              ZMACRET=8;                    /* MACRO ERROR */          08160000
*        END;                                                           08170000
*    END;                                                               08180000
*/********************************************************************/ 08190000
*/* PROCESS "REGS" KEYWORD                                           */ 08200000
*/********************************************************************/ 08210000
*  IF REGS ^= '' THEN                        /*                      */ 08220000
*  DO;                                       /*                      */ 08230000
*    /* We avoid using TRANSLATE so that PLS users of SUSPEND can       08240000
*       continue to work. They cannot specify REGS.                  */ 08250000
*    DCL ASAXMACUCSTRING CHAR EXT;                                      08260000
*    ANS('?ASAXMAC UpperCase('!!REGS(1)!!');') RESCAN;                  08270000
*    IF ASAXMACUCSTRING ^= 'STDSAVE' THEN                               08280000
*    DO;                                     /*                      */ 08290000
*              ZMS=' 8, ' !!                                            08300000
*                  ' REGS OPERAND MUST BE "STDSAVE"';                   08310000
*              ANS MSG('?SUSPEND ---> '!!ZMS);                          08320000
*              ZMS =   '?SUSPEND ---> '!!ZMS ;                          08330000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          08340000
*              ZMACRET=8;                    /* MACRO ERROR */          08350000
*    END;                                    /*                      */ 08360000
*    ELSE                                    /*                      */ 08370000
*      ZXREGS = 'STDSAVE';                   /*                      */ 08380000
*  END;                                      /*                      */ 08390000
*/********************************************************************/ 08400000
*/* PROCESS "RELATED" KEYWORD                                        */ 08410000
*/********************************************************************/ 08420000
*  ZXRELATED='INPUT';                        /* SET IN/OUTPUT */        08430000
*  IF RELATED   ^=''                         /* CHECK FOR NULL */       08440000
*    THEN                                                               08450000
*      XRELATED=RELATED   ;                  /* SET XVARIABLE */        08460000
*  IF ZXRELATED^='' &                        /* NOT IN/OUTPUT */        08470000
*     XRELATED^='NULL' &                     /* NOT STAR DEFAULT */     08480000
*     LENGTH(XRELATED)>256                                              08490000
*    THEN                                                               08500000
*      DO;                                                              08510000
*                                                                       08520000
*            IF (ZIVDOCMT=0) THEN                                       08530000
*               DO;                           /* MACRO INVOCATION       08540000
*                                                NEVER PRINTED   @D1A*/ 08550000
*                 ANS(COMMENT(IVDOCMT))                                 08560000
*                     NORESCAN COL(MACLMAR);  /* GENERATE BLOCK         08570000
*                                                COMMENT         @D1A*/ 08580000
*                 ZIVDOCMT=8;                 /* SET COMMENT FLAG       08590000
*                                                                @D1A*/ 08600000
*               END;                                                    08610000
*                                                                       08620000
*        ZXRELATED='';                       /* RESET IN/OUTPUT */      08630000
*        ZMS=' 8, "RELATED'!!                /**KLNGP* MSG*/            08640000
*            RELATED!!                                                  08650000
*            '" ARGUMENT 1 EXCEEDS THE MAXIMUM'!!                       08660000
*            ' LENGTH OF 256 CHARACTERS. ';                             08670000
*        ANS MSG('?SUSPEND ---> '!!ZMS);                                08680000
*        ZMS =   '?SUSPEND ---> '!!ZMS ;                                08690000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                08700000
*        ZMACRET=8;                          /* MACRO ERROR */          08710000
*      END;                                                             08720000
*/********************************************************************/ 08730000
*/***PE.MR01 GENERATE CODE IF ZMACRET=0                              */ 08740000
*/********************************************************************/ 08750000
*  IF ZMACRET = 0                                                       08760000
*    THEN                                                               08770000
*      DO;                                                              08780000
*      ANS('DO; '!!COMMENT(IVDOCMT))                                    08790000
*          NORESCAN COL(MACLMAR);                                       08800000
*        IF INDEX(EHAREGS,'11P') = 0 THEN          /*            @L1A*/ 08810000
*          EHAREGS=EHAREGS!!'11P'; /* GPR11P                     @L1A*/ 08820000
*        IF INDEX(EHAREGS,'12P') = 0 THEN          /*            @L1A*/ 08830000
*          EHAREGS=EHAREGS!!'12P'; /* GPR12P                     @L1A*/ 08840000
*        IF INDEX(EHAREGS,'13P') = 0 THEN          /*            @L1A*/ 08850000
*          EHAREGS=EHAREGS!!'13P'; /* GPR13P                     @L1A*/ 08860000
*        IF INDEX(EHAREGS,'14P') = 0 THEN          /*            @L1A*/ 08870000
*          EHAREGS=EHAREGS!!'14P'; /* GPR14P                     @L1A*/ 08880000
*       ENTRYN = 'IANY24';                         /*            @L1A*/ 08890000
*          IF ZXREGS = 'STDSAVE' THEN              /*            @L1A*/ 08900000
*          DO;                                     /*            @L1A*/ 08910000
*        IF INDEX(EHAREGS,'02P') = 0 THEN          /*            @L1A*/ 08920000
*          EHAREGS=EHAREGS!!'02P'; /* GPR02P                     @L1A*/ 08930000
*       ENTRYN = 'SUSPEND_'!!MACINDEX;             /*            @L1A*/ 08940000
*       ANS('DCL '!!ENTRYN!!' ENTRY BASED VALRG(*) '!!                  08950000
*          'OPTIONS(SETS(GPR11P,GPR12P,GPR13P)                          08960000
*                 NOSAVE(GPR11P,GPR12P,GPR13P));')                      08970000
*           SKIP NORESCAN;                                    /* @L1A*/ 08980000
*       ANS('DCL R13_SAVE_'!!MACINDEX!!' PTR REG(*);')                  08990000
*           SKIP NORESCAN;                                    /* @L1A*/ 09000000
*       ANS('DCL 1 SaveArea_'!!MACINDEX!!' Char(72) Based(GPR13P)       09010000
*                 ,2 * Char(12)                                         09020000
*                 ,2 SA1412_'!!MACINDEX!!' Char(60)                     09030000
*                  ,3 SA14_'!!MACINDEX!!' Char(4)                       09040000
*                  ,3 * Char(12)                                        09050000
*                  ,3 SA212_'!!MACINDEX!!' Char(44)                     09060000
*            ;')                                                        09070000
*           SKIP NORESCAN;                                    /* @L1A*/ 09080000
*       ANS('RFY GPR13P RSTD;')                                         09090000
*           SKIP NORESCAN;                                    /* @L1A*/ 09100000
*       ANS('R13_SAVE_'!!MACINDEX!!' = GPR13P;')                        09110000
*           SKIP NORESCAN;                                    /* @L1A*/ 09120000
*    /* We must GEN the STM/LM, with pseudo FLOWS information so that   09130000
*       the compiler understands the register history and can           09140000
*       successfully assign a register for R13_Save                  */ 09150000
*       ANS('GEN FLOWS(LM_'!!Macindex!!') '!!                           09160000
*           'REFS(GPR14P,GPR12P,GPR13P'!!                               09170000
*                ',SA1412_'!!MACINDEX!!')')                             09180000
*           SKIP NORESCAN;                                    /* @L1A*/ 09190000
*       ANS(                                                            09200000
*'(STM   GPR14P,GPR12P,SA1412_'!!MACINDEX!!'(GPR13P));')                09210000
*           SKIP NORESCAN COL(11);                            /* @L1A*/ 09220000
*       ANS('RFY GPR13P UNRSTD;')                                       09230000
*           SKIP NORESCAN;                                    /* @L1A*/ 09240000
*          END;                                    /*            @L1A*/ 09250000
*                                                                       09260000
*       ANS('RFY (GPR11P,GPR12P,GPR13P) RSTD;')                         09270000
*           SKIP NORESCAN;                                    /* @L1A*/ 09280000
*              ANS('RFY GPR01F RSTD;') NORESCAN COL(MACLMAR);           09290000
*              ANS('RFY GPR15P RSTD;') NORESCAN COL(MACLMAR);           09300000
*      IF SYSAM64='YES' THEN        /* Invoked in 64-bit mode    @D2A*/ 09310000
*        ANS('BEGIN AMODE(31);');   /* Switch to 31-bit          @D2A*/ 09320000
*      IF (XRB='CURRENT') THEN                                          09330000
*        DO;                        /* PROCESS CURRENT RB OPTION     */ 09340000
*          ANS('GPR01F=0;' !!                                           09350000
*              COMMENT('SUSPEND CURRENT RB'))                           09360000
*                  NORESCAN COL(MACLMAR);                               09370000
*          ANS('CALL CVTSUSP->'!!ENTRYN!!';' !!                         09380000
*              COMMENT('CALL SUSPEND'))                                 09390000
*                  NORESCAN COL(MACLMAR);                               09400000
*        END;                                                           09410000
*      ELSE                                                             09420000
*        DO;                        /* PROCESS PREVIOUS RB OPTION    */ 09430000
*          ANS('GPR01F=4;' !!                                           09440000
*              COMMENT('SUSPEND PREVIOUS RB'))                          09450000
*                  NORESCAN COL(MACLMAR);                               09460000
*          ANS('CALL CVTSUSP->'!!ENTRYN!!';' !!                         09470000
*              COMMENT('CALL SUSPEND'))                                 09480000
*                  NORESCAN COL(MACLMAR);                               09490000
*        END;                                                           09500000
*      IF SYSAM64='YES' THEN        /* Invoked in 64-bit mode    @D2A*/ 09510000
*        ANS('END;');               /* Switch back to 64-bit     @D2A*/ 09520000
*                  ANS('RFY GPR01F UNRSTD;') NORESCAN COL(MACLMAR);     09530000
*                  ANS('RFY GPR15P UNRSTD;') NORESCAN COL(MACLMAR);     09540000
*DCL ASAXMAC_ISITPLX CHAR EXT;                                /* @L2A*/ 09541000
*SAVE_ISITPLX = ASAXMAC_ISITPLX;                              /* @L2A*/ 09542000
*IF SYSVERSION ^= '' THEN                                     /* @L2A*/ 09543000
*DO;                                                          /* @L2A*/ 09544000
*           ANS('?ASAXMAC ISITPLX(3,1,0);') RESCAN;           /* @L2A*/ 09545000
*           ITISZPLX = ASAXMAC_ISITPLX;                       /* @L2A*/ 09546000
*END;                                                         /* @L2A*/ 09547000
*ASAXMAC_ISITPLX = SAVE_ISITPLX;                              /* @L2A*/ 09548000
*IF ITISZPLX = 'YES' THEN                                     /* @L2A*/ 09549000
*DO;                                                          /* @L2A*/ 09549100
*           ANS('GEN OPTACROSS SETS(GPR11P,GPR12P)'                     09549200
*              ) COL(4);                                      /* @L2A*/ 09549300
*           ANS('(DS 0H);') COL(4);                           /* @L2A*/ 09549400
*END;                                                         /* @L2A*/ 09549500
*       ANS('RFY (GPR11P,GPR12P,GPR13P) UNRSTD;')                       09550000
*           SKIP NORESCAN;                                    /* @L1A*/ 09560000
*          IF ZXREGS = 'STDSAVE' THEN              /*            @L1A*/ 09570000
*          DO;                                     /*            @L1A*/ 09580000
*       ANS('RFY GPR13P RSTD;')                                         09590000
*           SKIP NORESCAN;                                    /* @L1A*/ 09600000
*       ANS('GPR13P = R13_SAVE_'!!MACINDEX!!';')                        09610000
*           SKIP NORESCAN;                                    /* @L1A*/ 09620000
*       ANS('GEN EXIT NOSEQFLOW '!!                                     09630000
*           'REFS(GPR14P,GPR02P,GPR12P,GPR13P'!!                        09640000
*                ',SA14_'!!MACINDEX!!                                   09650000
*                ',SA212_'!!MACINDEX!!');')                             09660000
*           SKIP NORESCAN;                                    /* @L1A*/ 09670000
*       ANS(                                                            09680000
*' L     GPR14P,SA14_'!!MACINDEX!!'(GPR13P)')                           09690000
*           SKIP NORESCAN COL(11);                            /* @L1A*/ 09700000
*       ANS(                                                            09710000
*' LM    GPR02P,GPR12P,SA212_'!!MACINDEX!!'(GPR13P)')                   09720000
*           SKIP NORESCAN COL(11);                            /* @L1A*/ 09730000
*       ANS('@ENDGEN;')                                                 09740000
*           SKIP NORESCAN;                                    /* @L1A*/ 09750000
*       ANS('LM_'!!MACINDEX!!':;')                                      09760000
*           SKIP NORESCAN;                                    /* @L1A*/ 09770000
*               /* The following DS 0H tells PL/X not to over-       */ 09771000
*               /* optimize where it puts the label LM. That         */ 09772000
*               /* would be a problem when there is an ELSE after    */ 09773000
*               /* RESUME                                        @L3A*/ 09774000
*       ANS('GEN (DS 0H);') SKIP;                             /* @L3A*/ 09775000
*IF ITISZPLX = 'YES' THEN                                     /* @L4A*/ 09776000
*DO;                                                          /* @L4A*/ 09777000
*       ANS('Gen Ctrl ();') Col(2) Norescan;                  /* @L4A*/ 09778000
*END;                                                         /* @L4A*/ 09779000
*       ANS('RFY GPR13P UNRSTD;')                                       09780000
*           SKIP NORESCAN;                                    /* @L1A*/ 09790000
*          END;                                    /*            @L1A*/ 09800000
*      ANS('END; '!!COMMENT(IVDOCMT))                                   09810000
*          NORESCAN COL(MACLMAR);                                       09820000
*  ANS(MACCONC!!'SPACE;') NORESCAN COL(MACLMAR);                        09830000
*  ANS(' ') NORESCAN COL(MACLMAR);                                      09840000
*/*******************************************************************/  09850000
*/*  PO.L18 END OF CODE TO BE BYPASSED WHEN ZMACRET ^= 0            */  09860000
*/*******************************************************************/  09870000
*      END;                                                             09880000
*/*-----------------------------------------------------------------*/  09890000
*/*  MVS  -ENSURE THAT GPRS NEEDED BY MACRO WILL BE PROVIDED BY     */  09900000
*/*        ?EPILOG                                                  */  09910000
*/*-----------------------------------------------------------------*/  09920000
*        IF INDEX(EHAREGS,'01F')=0                                      09930000
*          THEN                                                         09940000
*            EHAREGS=EHAREGS!!'01F'; /* GPR01F                      */  09950000
*        IF INDEX(EHAREGS,'15P')=0                                      09960000
*          THEN                                                         09970000
*            EHAREGS=EHAREGS!!'15P'; /* GPR15P                      */  09980000
*  XPROC: ;                                                             09990000
*  RETURN CODE(ZMACRET);                                                10000000
*/********************************************************************/ 10010000
*/* PROCESS "SPTOKEN" OPTIONS                                        */ 10020000
*/********************************************************************/ 10030000
* TPROC:                                                                10040000
*/********************************************************************/ 10050000
*/***PG.MF00  PROCESS MF MACRO FORMS                                 */ 10060000
*/********************************************************************/ 10070000
*   IF (MF='') ! (MF(1)='S') THEN                                       10080000
*       DO;                                                             10090000
*         XMF='S';                                                      10100000
*       END;                                                            10110000
*   IF MF(1)='L' THEN                                                   10120000
*     DO;                                                               10130000
*                                                                       10140000
*            IF (ZIVDOCMT=0) THEN                                       10150000
*               DO;                           /* MACRO INVOCATION       10160000
*                                                NEVER PRINTED   @D1A*/ 10170000
*                 ANS(COMMENT(IVDOCMT))                                 10180000
*                     NORESCAN COL(MACLMAR);  /* GENERATE BLOCK         10190000
*                                                COMMENT         @D1A*/ 10200000
*                 ZIVDOCMT=8;                 /* SET COMMENT FLAG       10210000
*                                                                @D1A*/ 10220000
*               END;                                                    10230000
*                                                                       10240000
*              ZMS=' 8, "MF' !! MF !! '"' !!                            10250000
*                  ' KEYWORD IS NOT VALID WITH ' !!                     10260000
*                  '"SPTOKEN". ';                                       10270000
*              ANS MSG('?SUSPEND ---> '!!ZMS);                          10280000
*              ZMS =   '?SUSPEND ---> '!!ZMS ;                          10290000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          10300000
*              XMF='S';                                                 10310000
*              ZMACRET=8;                    /* MACRO ERROR */          10320000
*              END;                                                     10330000
*   IF MF(1)='E' THEN                                                   10340000
*     DO;                                                               10350000
*       XMF='E';                                                        10360000
*       IF NUMBER(MF)<2                      /* CHECK POSITIONALS */    10370000
*          THEN                                                         10380000
*             DO;                                                       10390000
*                                                                       10400000
*            IF (ZIVDOCMT=0) THEN                                       10410000
*               DO;                           /* MACRO INVOCATION       10420000
*                                                NEVER PRINTED   @D1A*/ 10430000
*                 ANS(COMMENT(IVDOCMT))                                 10440000
*                     NORESCAN COL(MACLMAR);  /* GENERATE BLOCK         10450000
*                                                COMMENT         @D1A*/ 10460000
*                 ZIVDOCMT=8;                 /* SET COMMENT FLAG       10470000
*                                                                @D1A*/ 10480000
*               END;                                                    10490000
*                                                                       10500000
*               ZMS=' 8, "MF'!!                                         10510000
*                   MF!!'"'!!                                           10520000
*                   ' IS INCORRECT. '!!                                 10530000
*                   ' PARAMETER LIST NAME IS REQUIRED. ';               10540000
*               ANS MSG('?SUSPEND ---> '!!ZMS);                         10550000
*               ZMS =   '?SUSPEND ---> '!!ZMS ;                         10560000
*               ANS(COMMENT(ZMS)) COL(MACLMAR);                         10570000
*               ZMACRET=8;                   /* MACRO ERROR */          10580000
*             END;                                                      10590000
*     END;                                                              10600000
*   IF XMF='' THEN                                                      10610000
*     DO;                           /* UNRECOGNIZED MACRO FORM       */ 10620000
*                                                                       10630000
*            IF (ZIVDOCMT=0) THEN                                       10640000
*               DO;                           /* MACRO INVOCATION       10650000
*                                                NEVER PRINTED   @D1A*/ 10660000
*                 ANS(COMMENT(IVDOCMT))                                 10670000
*                     NORESCAN COL(MACLMAR);  /* GENERATE BLOCK         10680000
*                                                COMMENT         @D1A*/ 10690000
*                 ZIVDOCMT=8;                 /* SET COMMENT FLAG       10700000
*                                                                @D1A*/ 10710000
*               END;                                                    10720000
*                                                                       10730000
*         ZMS=' 8, "MF'!!                                               10740000
*             MF!!'"'!!                                                 10750000
*             ' IS INCORRECT. '!!                                       10760000
*             ' KEYWORD CHOICE IS:'    !!                               10770000
*             ' "MF=(E,CNTRL_ADDR)".  ';                                10780000
*         ANS MSG('?SUSPEND ---> '!!ZMS);                               10790000
*         ZMS =   '?SUSPEND ---> '!!ZMS ;                               10800000
*         ANS(COMMENT(ZMS)) COL(MACLMAR);                               10810000
*         ZMACRET=8;                          /* MACRO ERROR */         10820000
*         XMF='S';                  /* SET MACRO FORM TO DEFAULT     */ 10830000
*     END;                                                              10840000
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 10850000
*  IF NUMBER(SPTOKEN)>1                      /* CHECK POSITIONALS */    10860000
*    THEN                                                               10870000
*      DO;                                                              10880000
*                                                                       10890000
*            IF (ZIVDOCMT=0) THEN                                       10900000
*               DO;                           /* MACRO INVOCATION       10910000
*                                                NEVER PRINTED   @D1A*/ 10920000
*                 ANS(COMMENT(IVDOCMT))                                 10930000
*                     NORESCAN COL(MACLMAR);  /* GENERATE BLOCK         10940000
*                                                COMMENT         @D1A*/ 10950000
*                 ZIVDOCMT=8;                 /* SET COMMENT FLAG       10960000
*                                                                @D1A*/ 10970000
*               END;                                                    10980000
*                                                                       10990000
*        ZMS=' 8, "SPTOKEN'!!                /**KPOSP* MSG*/            11000000
*            SPTOKEN!!                                                  11010000
*            '" "SPTOKEN"'!!                                            11020000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              11030000
*        ANS MSG('?SUSPEND ---> '!!ZMS);                                11040000
*        ZMS =   '?SUSPEND ---> '!!ZMS ;                                11050000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                11060000
*        ZMACRET=8;                          /* MACRO ERROR */          11070000
*      END;                                                             11080000
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 11090000
*  XSPTOKEN=SPTOKEN(1);                      /* SET XVARIABLE */        11100000
*  IF SPTOKEN(1)=''                          /* CHECK FOR NULL */       11110000
*   THEN                                                                11120000
*    DO;                                     /* KEY IS REQUIRED */      11130000
*                                                                       11140000
*            IF (ZIVDOCMT=0) THEN                                       11150000
*               DO;                           /* MACRO INVOCATION       11160000
*                                                NEVER PRINTED   @D1A*/ 11170000
*                 ANS(COMMENT(IVDOCMT))                                 11180000
*                     NORESCAN COL(MACLMAR);  /* GENERATE BLOCK         11190000
*                                                COMMENT         @D1A*/ 11200000
*                 ZIVDOCMT=8;                 /* SET COMMENT FLAG       11210000
*                                                                @D1A*/ 11220000
*               END;                                                    11230000
*                                                                       11240000
*        ZXSPTOKEN='';                       /* RESET IN/OUTPUT */      11250000
*        ZMS=' 8,  '!!                                                  11260000
*            ' "SPTOKEN" KEY AND ITS ARGUMENT ARE'!!                    11270000
*            ' REQUIRED.';                   /**KRQDP* MSG*/            11280000
*        ANS MSG('?SUSPEND ---> '!!ZMS);                                11290000
*        ZMS =   '?SUSPEND ---> '!!ZMS ;                                11300000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                11310000
*        ZMACRET=8;                          /* MACRO ERROR */          11320000
*    END;                                                               11330000
*    ELSE                                                               11340000
*     ZXSPTOKEN='INPUT';                     /* SET IN/OUTPUT */        11350000
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 11360000
*  IF NUMBER(EXIT)>1                         /* CHECK POSITIONALS */    11370000
*    THEN                                                               11380000
*      DO;                                                              11390000
*                                                                       11400000
*            IF (ZIVDOCMT=0) THEN                                       11410000
*               DO;                           /* MACRO INVOCATION       11420000
*                                                NEVER PRINTED   @D1A*/ 11430000
*                 ANS(COMMENT(IVDOCMT))                                 11440000
*                     NORESCAN COL(MACLMAR);  /* GENERATE BLOCK         11450000
*                                                COMMENT         @D1A*/ 11460000
*                 ZIVDOCMT=8;                 /* SET COMMENT FLAG       11470000
*                                                                @D1A*/ 11480000
*               END;                                                    11490000
*                                                                       11500000
*        ZMS=' 8, "EXIT'!!                   /**KPOSP* MSG*/            11510000
*            EXIT!!                                                     11520000
*            '" "EXIT"'!!                                               11530000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              11540000
*        ANS MSG('?SUSPEND ---> '!!ZMS);                                11550000
*        ZMS =   '?SUSPEND ---> '!!ZMS ;                                11560000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                11570000
*        ZMACRET=8;                          /* MACRO ERROR */          11580000
*      END;                                                             11590000
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 11600000
*  XEXIT=EXIT(1);                            /* SET XVARIABLE */        11610000
*  IF EXIT(1)=''                             /* CHECK FOR NULL */       11620000
*   THEN                                                                11630000
*    DO;                                     /* KEY IS REQUIRED */      11640000
*                                                                       11650000
*            IF (ZIVDOCMT=0) THEN                                       11660000
*               DO;                           /* MACRO INVOCATION       11670000
*                                                NEVER PRINTED   @D1A*/ 11680000
*                 ANS(COMMENT(IVDOCMT))                                 11690000
*                     NORESCAN COL(MACLMAR);  /* GENERATE BLOCK         11700000
*                                                COMMENT         @D1A*/ 11710000
*                 ZIVDOCMT=8;                 /* SET COMMENT FLAG       11720000
*                                                                @D1A*/ 11730000
*               END;                                                    11740000
*                                                                       11750000
*        ZXEXIT='';                          /* RESET IN/OUTPUT */      11760000
*        ZMS=' 8,  '!!                                                  11770000
*            ' "EXIT" KEY AND ITS ARGUMENT ARE'!!                       11780000
*            ' REQUIRED.';                   /**KRQDP* MSG*/            11790000
*        ANS MSG('?SUSPEND ---> '!!ZMS);                                11800000
*        ZMS =   '?SUSPEND ---> '!!ZMS ;                                11810000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                11820000
*        ZMACRET=8;                          /* MACRO ERROR */          11830000
*    END;                                                               11840000
*    ELSE                                                               11850000
*     ZXEXIT='INPUT';                        /* SET IN/OUTPUT */        11860000
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 11870000
*  IF RSCODE='RSCODE' ! RSCODE='()'          /*CHCK ENTRY*/             11880000
*    THEN                                                               11890000
*      DO;                                                              11900000
*                                                                       11910000
*            IF (ZIVDOCMT=0) THEN                                       11920000
*               DO;                           /* MACRO INVOCATION       11930000
*                                                NEVER PRINTED   @D1A*/ 11940000
*                 ANS(COMMENT(IVDOCMT))                                 11950000
*                     NORESCAN COL(MACLMAR);  /* GENERATE BLOCK         11960000
*                                                COMMENT         @D1A*/ 11970000
*                 ZIVDOCMT=8;                 /* SET COMMENT FLAG       11980000
*                                                                @D1A*/ 11990000
*               END;                                                    12000000
*                                                                       12010000
*        ZMS=' 8, THE "RSCODE" KEY'!!        /**KOPTP* MSG*/            12020000
*            ' MUST CONTAIN ONE'!!                                      12030000
*            ' (OR MORE) ARGUMENT(S).';                                 12040000
*        ANS MSG('?SUSPEND ---> '!!ZMS);                                12050000
*        ZMS =   '?SUSPEND ---> '!!ZMS ;                                12060000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                12070000
*        ZMACRET=8;                          /* MACRO ERROR */          12080000
*      END;                                                             12090000
*  IF NUMBER(RSCODE)>1                       /* CHECK POSITIONALS */    12100000
*    THEN                                                               12110000
*      DO;                                                              12120000
*                                                                       12130000
*            IF (ZIVDOCMT=0) THEN                                       12140000
*               DO;                           /* MACRO INVOCATION       12150000
*                                                NEVER PRINTED   @D1A*/ 12160000
*                 ANS(COMMENT(IVDOCMT))                                 12170000
*                     NORESCAN COL(MACLMAR);  /* GENERATE BLOCK         12180000
*                                                COMMENT         @D1A*/ 12190000
*                 ZIVDOCMT=8;                 /* SET COMMENT FLAG       12200000
*                                                                @D1A*/ 12210000
*               END;                                                    12220000
*                                                                       12230000
*        ZMS=' 8, "RSCODE'!!                 /**KPOSP* MSG*/            12240000
*            RSCODE!!                                                   12250000
*            '" "RSCODE"'!!                                             12260000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              12270000
*        ANS MSG('?SUSPEND ---> '!!ZMS);                                12280000
*        ZMS =   '?SUSPEND ---> '!!ZMS ;                                12290000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                12300000
*        ZMACRET=8;                          /* MACRO ERROR */          12310000
*      END;                                                             12320000
*  IF RSCODE(1)^=''                          /* CHECK FOR PARMS */      12330000
*    THEN                                                               12340000
*      XRSCODE=RSCODE(1);                    /* SET XVARIABLE */        12350000
*/********************************************************************/ 12360000
*/* PROCESS "EXITPARM" KEYWORD                                       */ 12370000
*/********************************************************************/ 12380000
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 12390000
*  IF EXITPARM='EXITPARM' ! EXITPARM='()'    /* CHECK ENTRY      @D1A*/ 12400000
*    THEN                                                               12410000
*      DO;                                   /* ERROR DETECTED   @D1A*/ 12420000
*                                                                       12430000
*            IF (ZIVDOCMT=0) THEN                                       12440000
*               DO;                           /* MACRO INVOCATION       12450000
*                                                NEVER PRINTED   @D1A*/ 12460000
*                 ANS(COMMENT(IVDOCMT))                                 12470000
*                     NORESCAN COL(MACLMAR);  /* GENERATE BLOCK         12480000
*                                                COMMENT         @D1A*/ 12490000
*                 ZIVDOCMT=8;                 /* SET COMMENT FLAG       12500000
*                                                                @D1A*/ 12510000
*               END;                                                    12520000
*                                                                       12530000
*        ZMS=' 8, THE "EXITPARM" KEY'!!                                 12540000
*            ' MUST CONTAIN ONE'!!                                      12550000
*            ' (OR MORE) ARGUMENT(S).';      /* ASSIGN MESSAGE   @D1A*/ 12560000
*        ANS MSG('?SUSPEND ---> '!!ZMS);                                12570000
*        ZMS =   '?SUSPEND ---> '!!ZMS ;                                12580000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                12590000
*        ZMACRET=8;                        /*   MACRO ERROR      @D1A*/ 12600000
*      END;                                                             12610000
*  IF NUMBER(EXITPARM)>1                   /* CHECK POSITIONALS  @D1A*/ 12620000
*    THEN                                                               12630000
*      DO;                                 /* ERROR DETECTED     @D1A*/ 12640000
*                                                                       12650000
*            IF (ZIVDOCMT=0) THEN                                       12660000
*               DO;                           /* MACRO INVOCATION       12670000
*                                                NEVER PRINTED   @D1A*/ 12680000
*                 ANS(COMMENT(IVDOCMT))                                 12690000
*                     NORESCAN COL(MACLMAR);  /* GENERATE BLOCK         12700000
*                                                COMMENT         @D1A*/ 12710000
*                 ZIVDOCMT=8;                 /* SET COMMENT FLAG       12720000
*                                                                @D1A*/ 12730000
*               END;                                                    12740000
*                                                                       12750000
*        ZMS=' 8, "EXITPARM'!!                                          12760000
*            EXITPARM!!                                                 12770000
*            '" "EXITPARM"'!!                                           12780000
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              12790000
*        ANS MSG('?SUSPEND ---> '!!ZMS);                                12800000
*        ZMS =   '?SUSPEND ---> '!!ZMS ;                                12810000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                12820000
*        ZMACRET=8;                          /* MACRO ERROR      @D1A*/ 12830000
*      END;                                                             12840000
*  IF EXITPARM(1)^=''                        /* CHECK PARMS      @D1A*/ 12850000
*    THEN                                                               12860000
*      XEXITPARM=EXITPARM(1);                  /* SET XVARIABLE  @D1A*/ 12870000
*/********************************************************************/ 12880000
*/* PROCESS "RELATED" KEYWORD                                        */ 12890000
*/********************************************************************/ 12900000
*  ZXRELATED='INPUT';                        /* SET IN/OUTPUT */        12910000
*  IF RELATED   ^=''                         /* CHECK FOR NULL */       12920000
*    THEN                                                               12930000
*      XRELATED=RELATED   ;                  /* SET XVARIABLE */        12940000
*  IF ZXRELATED^='' &                        /* NOT IN/OUTPUT */        12950000
*     XRELATED^='NULL' &                     /* NOT STAR DEFAULT */     12960000
*     LENGTH(XRELATED)>256                                              12970000
*    THEN                                                               12980000
*      DO;                                                              12990000
*                                                                       13000000
*            IF (ZIVDOCMT=0) THEN                                       13010000
*               DO;                           /* MACRO INVOCATION       13020000
*                                                NEVER PRINTED   @D1A*/ 13030000
*                 ANS(COMMENT(IVDOCMT))                                 13040000
*                     NORESCAN COL(MACLMAR);  /* GENERATE BLOCK         13050000
*                                                COMMENT         @D1A*/ 13060000
*                 ZIVDOCMT=8;                 /* SET COMMENT FLAG       13070000
*                                                                @D1A*/ 13080000
*               END;                                                    13090000
*                                                                       13100000
*        ZXRELATED='';                       /* RESET IN/OUTPUT */      13110000
*        ZMS=' 8, "RELATED'!!                /**KLNGP* MSG*/            13120000
*            RELATED!!                                                  13130000
*            '" ARGUMENT 1 EXCEEDS THE MAXIMUM'!!                       13140000
*            ' LENGTH OF 256 CHARACTERS. ';                             13150000
*        ANS MSG('?SUSPEND ---> '!!ZMS);                                13160000
*        ZMS =   '?SUSPEND ---> '!!ZMS ;                                13170000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                13180000
*        ZMACRET=8;                          /* MACRO ERROR */          13190000
*      END;                                                             13200000
*/********************************************************************/ 13210000
*/***PE.MR01 GENERATE CODE IF ZMACRET=0                              */ 13220000
*/********************************************************************/ 13230000
*  IF ZMACRET = 0                                                       13240000
*    THEN                                                               13250000
*      DO;                                                              13260000
*/********************************************************************/ 13270000
*/* GET NAME OF PARAMETER LIST                                       */ 13280000
*/********************************************************************/ 13290000
*  IF XMF='E' THEN                                                      13300000
*    DO;                            /* EXECUTE FORM                  */ 13310000
*      XLIST=MF(2);                 /* ASSIGN NAME FOR LIST          */ 13320000
*    END;                                                               13330000
*  ELSE                                                                 13340000
*    DO;                            /* STANDARD FORM                 */ 13350000
*      XLIST='ILIST';               /* ASSIGN NAME FROM EPILOG       */ 13360000
*    END;                                                               13370000
*/********************************************************************/ 13380000
*/* GET MAP FOR PARAMETER LIST                                       */ 13390000
*/********************************************************************/ 13400000
*  IF (SYSASCE='AR') ! (SYSASCE='ANY') THEN                             13410000
*    DO;                            /* AR ASC MODE PROGRAM           */ 13420000
*      XMAP='SRP$LIST';             /* USE ALET-QUALIFIED MAPPING       13430000
*                                                                @P1C*/ 13440000
*    END;                                                               13450000
*  ELSE                                                                 13460000
*    DO;                            /* PRIMARY ASC MODE PROGRAM      */ 13470000
*      XMAP='SRP$PRIM';             /* USE PRIMARY MAPPING       @P1C*/ 13480000
*    END;                                                               13490000
* IF XLIST = 'ILIST' THEN                                     /* @P5A*/ 13491000
* DO;                                                         /* @P5A*/ 13492000
*  XMAP='SRP$ILIST';       /* Parameter list name                @P5A*/ 13493000
*  DCL SUSPEND_ILIST CHAR EXT;                                /* @P5A*/ 13494000
*  IF SUSPEND_ILIST = '' THEN                                 /* @P5A*/ 13495000
*  DO;                                                        /* @P5A*/ 13496000
*    SUSPEND_ILIST = 'YES';                                   /* @P5A*/ 13497000
*    ANS('?EPILOG STRING(''' !!                                         13498000
*      'DCL 1 SRP$ILIST DEF(ILIST) BDY(WORD) LIKE SRP$LIST;'            13499000
*                          !!  ''');') RESCAN;                /* @P5A*/ 13499100
*  END;                                                       /* @P5A*/ 13499200
* END;                                                        /* @P5A*/ 13499300
*      /**************************************************************/ 13500000
*      /* ENSURE A STANDARD LIST LARGE ENOUGH FOR THE SUSPEND        */ 13510000
*      /* WITH TOKEN PARAMETER LIST IS GENRATED BY EPILOG            */ 13520000
*      /**************************************************************/ 13530000
*    IF XMF ^= 'E' & XMF ^= 'L' THEN                          /* @P5A*/ 13531000
*      IF EHAMAXLEN<IVPLSIZE THEN   /* IF THE SUSPEND WITH TOKEN        13540000
*                                      PARAMETER LIST IS LARGER THAN    13550000
*                                      THE CURRENT MAXIMUM           */ 13560000
*        EHAMAXLEN=IVPLSIZE;        /* INCREASE THE MAXIMUM PARAMETER   13570000
*                                      LIST SIZE FOR EPILOG          */ 13580000
*  /******************************************************************/ 13590000
*  /* NOW, GENERATE CODE                                             */ 13600000
*  /******************************************************************/ 13610000
*      ANS('DO; '!!COMMENT(IVDOCMT))                                    13620000
*          NORESCAN COL(MACLMAR);                                       13630000
*          ANS('RFY GPR01P RSTD;') NORESCAN COL(MACLMAR);               13640000
*          ANS('RFY GPR14F RSTD;') NORESCAN COL(MACLMAR);               13650000
*          ANS('RFY GPR00F RSTD;') NORESCAN COL(MACLMAR);               13660000
*          ANS(MACCONC!!'SPACE;') NORESCAN COL(MACLMAR);                13670000
*          ANS('SRP$VIA=ALET('!! XLIST !! '); ' !!                      13680000
*             COMMENT('GET ALET FOR PARAMETER LIST'))                   13690000
*                NORESCAN COL(MACLMAR); /*                       @P1C*/ 13700000
*          ANS('SRP$PTR=ADDR('!! XLIST !! '); ' !!                      13710000
*             COMMENT('GET ADDRESS OF PARAMETER LIST'))                 13720000
*                NORESCAN COL(MACLMAR); /*                       @P1C*/ 13730000
*          ANS(XMAP !! '=' !! XMAP !! '&&' !! XMAP !! '; ' !!           13740000
*             COMMENT('CLEAR THE PARAMETER LIST'))                      13750000
*                NORESCAN COL(MACLMAR);                                 13760000
*          ANS(XMAP !! '.SRP$LEVEL=1; ' !!                              13770000
*             COMMENT('SET PARAMETER LIST LEVEL INDICATOR'))            13780000
*                NORESCAN COL(MACLMAR); /*                       @P1C*/ 13790000
*          ANS(XMAP !! '.SRP$ALET=ALET('!! XSPTOKEN !! '); '!!          13800000
*             COMMENT('GET ALET FOR TOKEN'))                            13810000
*                NORESCAN COL(MACLMAR); /*                       @P1C*/ 13820000
*          ANS(XMAP !! '.SRP$TOKEN=ADDR('!! XSPTOKEN !! '); '!!         13830000
*             COMMENT('GET ADDRESS OF TOKEN'))                          13840000
*                NORESCAN COL(MACLMAR); /*                       @P1C*/ 13850000
*          ANS(XMAP !! '.SRP$EXIT=ADDR('!! XEXIT !! '); ' !!            13860000
*             COMMENT('GET ADDRESS OF EXIT'))                           13870000
*                NORESCAN COL(MACLMAR); /*                       @P1C*/ 13880000
*  /******************************************************************/ 13890000
*  /* PERFORM OPTIONAL PROCESS OF "EXITPARM"                         */ 13900000
*  /******************************************************************/ 13910000
*          IF XEXITPARM^='' THEN                                        13920000
*             DO;                /* PROCESS SPECIFIED PARAMETERS @D1A*/ 13930000
*                 ANS(XMAP !! '.SRP$EAL=ALET('!!                        13940000
*                    XEXITPARM !! '); ' !!                              13950000
*                       COMMENT('GET ALET FOR EXIT PARAMETER'))         13960000
*                           NORESCAN COL(MACLMAR); /*            @P1C*/ 13970000
*                 ANS(XMAP !! '.SRP$EAD=ADDR('!!                        13980000
*                    XEXITPARM !! '); ' !!                              13990000
*                       COMMENT('GET ADDRESS OF EXIT PARAMETER'))       14000000
*                           NORESCAN COL(MACLMAR); /*            @P1C*/ 14010000
*             END;               /* END EXIT PARM PROCESS        @D1A*/ 14020000
*  /******************************************************************/ 14030000
*  /* GENERATE PC LINKAGE TEXT FOR SUSPEND WITH TOKEN                */ 14040000
*  /******************************************************************/ 14050000
*          ANS('GPR14F=XM@('!!SFTSLOT!!'); ' !!                         14060000
*             COMMENT('GET LX/EX FROM SFT'))                            14070000
*                NORESCAN COL(MACLMAR);                                 14080000
*          ANS('GPR01P=SRP$PTR; ' !!                                    14090000
*             COMMENT('GET PARAMETER LIST ADDRESS'))                    14100000
*                NORESCAN COL(MACLMAR); /*                       @P1C*/ 14110000
*  DCL ASABEGIN_CKARS CHAR EXT;                               /* @P4A*/ 14110100
*  IF ASABEGIN_CKARS = 'YES' THEN                             /* @P4A*/ 14111000
*  DO;                                                        /* @P4A*/ 14112000
*    ANS('@enable check(integrity(Push));')                             14113000
*      COL(MACLMAR) NORESCAN;                                 /* @P4A*/ 14114000
*    ANS('@disable check(integrity(NoARs));')                           14115000
*      COL(MACLMAR) NORESCAN;                                 /* @P4A*/ 14116000
*  END;                                                       /* @P4A*/ 14117000
*          ANS('SAR(GPR01P,SRP$VIA); ' !!                               14120000
*             COMMENT('LOAD AR1 WITH PARAMETER LIST ALET'))             14130000
*                NORESCAN COL(MACLMAR); /*                       @P1C*/ 14140000
*  IF ASABEGIN_CKARS = 'YES' THEN                             /* @P4A*/ 14141000
*  DO;                                                        /* @P4A*/ 14142000
*    ANS('@enable check(integrity(Pop));')                              14143000
*      COL(MACLMAR) NORESCAN;                                 /* @P4A*/ 14144000
*  END;                                                       /* @P4A*/ 14145000
*          ANS('PC(GPR14F); ' !!                                        14150000
*             COMMENT('PC TO SUSPEND WITH TOKEN SERVICE ROUTINE'))      14160000
*                NORESCAN COL(MACLMAR);                                 14170000
*                                                                       14180000
*  /******************************************************************/ 14190000
*  /* PERFORM OPTIONAL RESUME CODE PROCESSING                        */ 14200000
*  /******************************************************************/ 14210000
*  IF XRSCODE^='' THEN                                                  14220000
*    DO;                            /* SAVE RESUME CODE              */ 14230000
*          ANS(XRSCODE !! '=GPR00F; ' !!                                14240000
*             COMMENT('SAVE RESUME CODE'))                              14250000
*                NORESCAN COL(MACLMAR);                                 14260000
*    END;                                                               14270000
*  ANS(MACCONC!!'SPACE;') NORESCAN COL(MACLMAR);                        14280000
*                  ANS('RFY GPR00F UNRSTD;') NORESCAN COL(MACLMAR);     14290000
*                  ANS('RFY GPR01P UNRSTD;') NORESCAN COL(MACLMAR);     14300000
*                  ANS('RFY GPR14F UNRSTD;') NORESCAN COL(MACLMAR);     14310000
*      ANS('END; '!!COMMENT(IVDOCMT))                                   14320000
*          NORESCAN COL(MACLMAR);                                       14330000
*  ANS(MACCONC!!'SPACE;') NORESCAN COL(MACLMAR);                        14340000
*  ANS(' ') NORESCAN COL(MACLMAR);                                      14350000
*/*-----------------------------------------------------------------*/  14360000
*/*  MVS  -ENSURE THAT GPRS NEEDED BY MACRO WILL BE PROVIDED BY     */  14370000
*/*        ?EPILOG                                                  */  14380000
*/*-----------------------------------------------------------------*/  14390000
*        IF INDEX(EHAREGS,'00F')=0                                      14400000
*          THEN                                                         14410000
*            EHAREGS=EHAREGS!!'00F'; /* REGISTER ZERO               */  14420000
*        IF INDEX(EHAREGS,'01P')=0                                      14430000
*          THEN                                                         14440000
*            EHAREGS=EHAREGS!!'01P'; /* GPR01F                      */  14450000
*        IF INDEX(EHAREGS,'14F')=0                                      14460000
*          THEN                                                         14470000
*            EHAREGS=EHAREGS!!'14F'; /* GPR15P                      */  14480000
*/*-----------------------------------------------------------------*/  14490000
*/*  MAKE SURE THE CROSS-MEMORY SERVICES DECLARES ARE SETUP BY      */  14500000
*/*        ?EPILOG                                                  */  14510000
*/*-----------------------------------------------------------------*/  14520000
*        IF INDEX(EHAMAPS,'XM@')=0                                      14530000
*          THEN                                                         14540000
*            EHAMAPS=EHAMAPS!!'XM@,'; /* DEFINE XM SERVICES         */  14550000
* /*******************************************************************/ 14560000
* /* MAKE SURE THE PARAMETER LIST MAP IS GENERATED BY EPILOG         */ 14570000
* /*******************************************************************/ 14580000
* IF (ZSUSPEND^='YES') THEN                                             14590000
*  DO;                               /* SETUP BASE MAPPING IN EPILOG */ 14600000
*  ZSUSPEND='YES';                   /* INDICATE MAPPING DECLARED    */ 14610000
*  IVSTRING='DCL 1 SRP$LIST BASED(SRP$PTR) VIA(SRP$VIA) BDY(WORD),'!!   14620000
*        ' /* SUSPEND WITH TOKEN PARAMETER LIST MAPPING   @P1C*/ ' !!   14630000
*               '3 SRP$LEVEL  FIXED(8),'                           !!   14640000
*                  '/* PARAMETER LEVEL INDICATOR  @P1C*/ '         !!   14650000
*               '3 *          CHAR( 3),'                           !!   14660000
*                  '/* RESERVED                  */ '              !!   14670000
*               '3 SRP$EXIT  PTR(31),'                             !!   14680000
*                  '/* THE ADDRESS OF THE SUSPEND EXIT  @P1C*/ '   !!   14690000
*               '4 SRP$RCODE FIXED(31),'                           !!   14700000
*                  '/* THE RESUME CODE @P1C*/ '                    !!   14710000
*               '3 SRP$ALET   FIXED(32),'                          !!   14720000
*                  '/* THE ALET OF THE SUSPEND TOKEN   @P1C*/ '    !!   14730000
*               '3 SRP$TOKEN  PTR(31),'                            !!   14740000
*                  '/* THE ADDRESS OF THE SUSPEND TOKEN  @P1C*/ '  !!   14750000
*               '3 SRP$EAL    FIXED(32),'                          !!   14760000
*                  '/* THE ALET OF EXIT PARAMETER      @P1C*/ '    !!   14770000
*               '3 SRP$EAD    PTR(31);'                            !!   14780000
*            '/* THE ADDRESS OF THE EXIT PARAMETER  @P1C*/ '; /* @D1C*/ 14790000
*  IVSTRING=IVSTRING!!                                                  14800000
*       'DCL SRP$VIA FIXED(32); '  !!                                   14810000
*           '/* ALET VARIABLE FOR PARAMETER LIST  @P1C*/ ';             14820000
*  IVSTRING=IVSTRING!!                                                  14830000
*       'DCL SRP$PTR PTR(31);   '  !!                                   14840000
*           '/* POINTER TO THE PARAMETER LIST    @P1C*/ ';              14850000
*  IVSTRING=IVSTRING!!                                                  14860000
*       'DCL 1 SRP$PRIM BASED(SRP$PTR) BDY(WORD) LIKE SRP$LIST; ' !!    14870000
*       '/* PARAMETER LIST MAP FOR PRIMARY MODE INVOCATIONS   @P1C*/';  14880000
*   ANS (' ?EPILOG STRING('''!!IVSTRING!!''');'); /* ADD BASED MAPPING  14890000
*                                      TO EPILOG STRING CONSTANTS    */ 14900000
*  END;                              /* END BASE MAPPING SETUP       */ 14910000
*/*******************************************************************/  14920000
*/*  PO.L18 END OF CODE TO BE BYPASSED WHEN ZMACRET ^= 0            */  14930000
*/*******************************************************************/  14940000
*      END;                                                             14950000
*  RETURN CODE(ZMACRET);                                                14960000
*/********************************************************************/ 14970000
*/* "MF(L)" PROCEDURE                                                */ 14980000
*/********************************************************************/ 14990000
* LPROC:                                                                15000000
*/********************************************************************/ 15010000
*/* CHECK FOR "SPTOKEN" OR "RB" OPTIONS ILLEGALLY SPECIFIED WITH "MF"*/ 15020000
*/********************************************************************/ 15030000
*  ZMS='';                          /* CLEAR MNOTE STRING VARIABLE   */ 15040000
*  ZMA=0;                           /* CLEAR COUNT OF BAD KEYS       */ 15050000
*  IF EXIT^='' THEN                                                     15060000
*    DO;                            /* ILLEGAL "EXIT" SPECIFICATION  */ 15070000
*      ZMS='"EXIT"';                                                    15080000
*      ZMA=1;                                                           15090000
*    END;                                                               15100000
*  IF RSCODE^='' THEN                                                   15110000
*    DO;                            /* ILLEGAL "RSCODE" SPECIFICATION   15120000
*                                                                    */ 15130000
*      IF ZMA=0 THEN                                                    15140000
*        DO;                        /* FIRST BAD KEY DETECTED        */ 15150000
*          ZMS='"RSCODE"';                                              15160000
*          ZMA=1;                   /* INITIALIZE ERROR COUNT        */ 15170000
*        END;                                                           15180000
*      ELSE                                                             15190000
*        DO;                        /* MULTIPLE BAD KEYS DETECTED    */ 15200000
*          ZMS = ZMS !! ', "RSCODE"';                                   15210000
*          ZMA=ZMA+1;               /* BUMP COUNT OF ERRORS          */ 15220000
*        END;                                                           15230000
*    END;                                                               15240000
*  IF EXITPARM^='' THEN                                                 15250000
*    DO;                            /* ILLEGAL "EXITPARM" SPECIFICATION 15260000
*                                                                @D1A*/ 15270000
*      IF ZMA=0 THEN                                                    15280000
*        DO;                        /* FIRST BAD KEY DETECTED    @D1A*/ 15290000
*          ZMS='"EXITPARM"';        /* ASSIGN MESSAGE STRING     @D1A*/ 15300000
*          ZMA=1;                   /* INITIALIZE ERROR COUNT    @D1A*/ 15310000
*        END;                                                           15320000
*      ELSE                                                             15330000
*        DO;                        /* MULTIPLE BAD KEYS         @D1A*/ 15340000
*          ZMS = ZMS !! ', "EXITPARM"';  /* ASSIGN MSG STRING    @D1A*/ 15350000
*          ZMA=ZMA+1;               /* BUMP COUNT OF ERRORS      @D1A*/ 15360000
*        END;                                                           15370000
*    END;                                                               15380000
*  IF RB^='' THEN                                                       15390000
*    DO;                            /* ILLEGAL "MF" SPECIFICATION       15400000
*                                                                    */ 15410000
*      IF ZMA=0 THEN                                                    15420000
*        DO;                        /* FIRST BAD KEY DETECTED        */ 15430000
*          ZMS='"RB"';                                                  15440000
*          ZMA=1;                   /* INITIALIZE ERROR COUNT        */ 15450000
*        END;                                                           15460000
*      ELSE                                                             15470000
*        DO;                        /* MULTIPLE BAD KEYS DETECTED    */ 15480000
*          ZMS = ZMS !! ', "RB"';                                       15490000
*          ZMA=ZMA+1;               /* BUMP COUNT OF ERRORS          */ 15500000
*        END;                                                           15510000
*    END;                                                               15520000
*  IF ZMA>0 THEN                                                        15530000
*    DO;                            /* BAD KEY(S) DETECTED           */ 15540000
*      IF ZMA=1 THEN                                                    15550000
*        DO;                        /* SINGLE BAD KEY                */ 15560000
*                                                                       15570000
*            IF (ZIVDOCMT=0) THEN                                       15580000
*               DO;                           /* MACRO INVOCATION       15590000
*                                                NEVER PRINTED   @D1A*/ 15600000
*                 ANS(COMMENT(IVDOCMT))                                 15610000
*                     NORESCAN COL(MACLMAR);  /* GENERATE BLOCK         15620000
*                                                COMMENT         @D1A*/ 15630000
*                 ZIVDOCMT=8;                 /* SET COMMENT FLAG       15640000
*                                                                @D1A*/ 15650000
*               END;                                                    15660000
*                                                                       15670000
*              ZMS=' 8, ' !! ZMS !!                                     15680000
*                  ' KEYWORD IS NOT VALID WITH ' !!                     15690000
*                  '"MF' !! MF !! '. ';                                 15700000
*              ANS MSG('?SUSPEND ---> '!!ZMS);                          15710000
*              ZMS =   '?SUSPEND ---> '!!ZMS ;                          15720000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          15730000
*              ZMACRET=8;                    /* MACRO ERROR */          15740000
*        END;                                                           15750000
*      ELSE                                                             15760000
*        DO;                                                            15770000
*                                                                       15780000
*            IF (ZIVDOCMT=0) THEN                                       15790000
*               DO;                           /* MACRO INVOCATION       15800000
*                                                NEVER PRINTED   @D1A*/ 15810000
*                 ANS(COMMENT(IVDOCMT))                                 15820000
*                     NORESCAN COL(MACLMAR);  /* GENERATE BLOCK         15830000
*                                                COMMENT         @D1A*/ 15840000
*                 ZIVDOCMT=8;                 /* SET COMMENT FLAG       15850000
*                                                                @D1A*/ 15860000
*               END;                                                    15870000
*                                                                       15880000
*              ZMS=' 8, ' !! ZMS !!                                     15890000
*                  ' KEYWORDS ARE NOT VALID WITH ' !!                   15900000
*                  '"MF' !! MF !! '. ';                                 15910000
*              ANS MSG('?SUSPEND ---> '!!ZMS);                          15920000
*              ZMS =   '?SUSPEND ---> '!!ZMS ;                          15930000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          15940000
*              ZMACRET=8;                    /* MACRO ERROR */          15950000
*        END;                                                           15960000
*    END;                                                               15970000
*/********************************************************************/ 15980000
*/* CHECK FOR PARAMETER LIST NAME                                    */ 15990000
*/********************************************************************/ 16000000
*    IF NUMBER(MF)<2                         /* CHECK POSITIONALS */    16010000
*        THEN                                                           16020000
*          DO;                                                          16030000
*                                                                       16040000
*            IF (ZIVDOCMT=0) THEN                                       16050000
*               DO;                           /* MACRO INVOCATION       16060000
*                                                NEVER PRINTED   @D1A*/ 16070000
*                 ANS(COMMENT(IVDOCMT))                                 16080000
*                     NORESCAN COL(MACLMAR);  /* GENERATE BLOCK         16090000
*                                                COMMENT         @D1A*/ 16100000
*                 ZIVDOCMT=8;                 /* SET COMMENT FLAG       16110000
*                                                                @D1A*/ 16120000
*               END;                                                    16130000
*                                                                       16140000
*            ZMS=' 8, "MF'!!                                            16150000
*                MF!!'"'!!                                              16160000
*                ' IS INCORRECT. '!!                                    16170000
*                ' PARAMETER LIST NAME IS REQUIRED. ';                  16180000
*            ANS MSG('?SUSPEND ---> '!!ZMS);                            16190000
*            ZMS =   '?SUSPEND ---> '!!ZMS ;                            16200000
*            ANS(COMMENT(ZMS)) COL(MACLMAR);                            16210000
*            ZMACRET=8;                      /* MACRO ERROR */          16220000
*      END;                                                             16230000
*    ELSE                                                               16240000
*      DO;                          /* SAVE LIST NAME                */ 16250000
*        XLIST = MF(2);                                                 16260000
*      END;                                                             16270000
*/********************************************************************/ 16280000
*/* PROCESS "RELATED" KEYWORD                                        */ 16290000
*/********************************************************************/ 16300000
*  ZXRELATED='INPUT';                        /* SET IN/OUTPUT */        16310000
*  IF RELATED   ^=''                         /* CHECK FOR NULL */       16320000
*    THEN                                                               16330000
*      XRELATED=RELATED   ;                  /* SET XVARIABLE */        16340000
*  IF ZXRELATED^='' &                        /* NOT IN/OUTPUT */        16350000
*     XRELATED^='NULL' &                     /* NOT STAR DEFAULT */     16360000
*     LENGTH(XRELATED)>256                                              16370000
*    THEN                                                               16380000
*      DO;                                                              16390000
*                                                                       16400000
*            IF (ZIVDOCMT=0) THEN                                       16410000
*               DO;                           /* MACRO INVOCATION       16420000
*                                                NEVER PRINTED   @D1A*/ 16430000
*                 ANS(COMMENT(IVDOCMT))                                 16440000
*                     NORESCAN COL(MACLMAR);  /* GENERATE BLOCK         16450000
*                                                COMMENT         @D1A*/ 16460000
*                 ZIVDOCMT=8;                 /* SET COMMENT FLAG       16470000
*                                                                @D1A*/ 16480000
*               END;                                                    16490000
*                                                                       16500000
*        ZXRELATED='';                       /* RESET IN/OUTPUT */      16510000
*        ZMS=' 8, "RELATED'!!                /**KLNGP* MSG*/            16520000
*            RELATED!!                                                  16530000
*            '" ARGUMENT 1 EXCEEDS THE MAXIMUM'!!                       16540000
*            ' LENGTH OF 256 CHARACTERS. ';                             16550000
*        ANS MSG('?SUSPEND ---> '!!ZMS);                                16560000
*        ZMS =   '?SUSPEND ---> '!!ZMS ;                                16570000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                16580000
*        ZMACRET=8;                          /* MACRO ERROR */          16590000
*      END;                                                             16600000
*/********************************************************************/ 16610000
*/*      GENERATE PARAMETER LIST IF NO ERRORS                        */ 16620000
*/********************************************************************/ 16630000
* IF (ZMACRET=0) THEN               /* Generate parameter list       */ 16640000
*  DO;                                                                  16650000
*     ANS('DCL 1 '!! XLIST !!' BDY(WORD) '                      !!      16660000
*         'CHAR(LENGTH(SRP$LIST)) LIKE(SRP$LIST); '             !!      16670000
*            COMMENT(' SUSPEND WITH TOKEN PARAMETER LIST'))             16680000
*            NORESCAN COL(MACLMAR+5); /*                         @P3C*/ 16690000
* /*******************************************************************/ 16700000
* /* MAKE SURE THE PARAMETER LIST MAP IS GENERATED BY EPILOG         */ 16710000
* /*******************************************************************/ 16720000
* IF (ZSUSPEND^='YES') THEN                                             16730000
*  DO;                               /* SETUP BASE MAPPING IN EPILOG */ 16740000
*  ZSUSPEND='YES';                   /* INDICATE MAPPING DECLARED    */ 16750000
*  IVSTRING='DCL 1 SRP$LIST BASED(SRP$PTR) VIA(SRP$VIA) BDY(WORD),'!!   16760000
*        ' /* SUSPEND WITH TOKEN PARAMETER LIST MAPPING   @P1C*/ ' !!   16770000
*               '3 SRP$LEVEL  FIXED(8),'                           !!   16780000
*                  '/* PARAMETER LEVEL INDICATOR   @P1C*/ '        !!   16790000
*               '3 *          CHAR( 3),'                           !!   16800000
*                  '/* RESERVED                  */ '              !!   16810000
*               '3 SRP$EXIT  PTR(31),'                             !!   16820000
*                  '/* THE ADDRESS OF THE SUSPEND EXIT   @P1C*/ '  !!   16830000
*               '4 SRP$RCODE FIXED(31),'                           !!   16840000
*                  '/* THE RESUME CODE   @P1C*/ '                  !!   16850000
*               '3 SRP$ALET   FIXED(32),'                          !!   16860000
*                  '/* THE ALET OF THE SUSPEND TOKEN   @P1C*/ '    !!   16870000
*               '3 SRP$TOKEN  PTR(31),'                            !!   16880000
*                  '/* THE ADDRESS OF THE SUSPEND TOKEN   @P1C*/ ' !!   16890000
*               '3 SRP$EAL    FIXED(32),'                          !!   16900000
*                  '/* THE ALET OF EXIT PARAMETER      @P1C*/ '    !!   16910000
*               '3 SRP$EAD    PTR(31);'                            !!   16920000
*            '/* THE ADDRESS OF THE EXIT PARAMETER  @P1C*/ '; /* @D1C*/ 16930000
*  IVSTRING=IVSTRING!!                                                  16940000
*       'DCL SRP$VIA FIXED(32); '  !!                                   16950000
*           '/* ALET VARIABLE FOR PARAMETER LIST   @P1C*/ ';            16960000
*  IVSTRING=IVSTRING!!                                                  16970000
*       'DCL SRP$PTR PTR(31);   '  !!                                   16980000
*           '/* POINTER TO THE PARAMETER LIST    @P1C*/ ';              16990000
*  IVSTRING=IVSTRING!!                                                  17000000
*       'DCL 1 SRP$PRIM BASED(SRP$PTR) BDY(WORD) LIKE SRP$LIST; ' !!    17010000
*       '/* PARAMETER LIST MAP FOR PRIMARY MODE INVOCATIONS   @P1C*/';  17020000
*   ANS (' ?EPILOG STRING('''!!IVSTRING!!''');'); /* ADD BASED MAPPING  17030000
*                                      TO EPILOG STRING CONSTANTS   */  17040000
*  END;                              /* END BASE MAPPING SETUP      */  17050000
*/*-----------------------------------------------------------------*/  17060000
*/*  MAKE SURE THE CROSS-MEMORY SERVICES DECLARES ARE SETUP BY      */  17070000
*/*        ?EPILOG                                                  */  17080000
*/*-----------------------------------------------------------------*/  17090000
*        IF INDEX(EHAMAPS,'XM@')=0                                      17100000
*          THEN                                                         17110000
*            EHAMAPS=EHAMAPS!!'XM@,'; /* DEFINE XM SERVICES         */  17120000
*/*******************************************************************/  17130000
*/*  PO.L18 END OF CODE TO BE BYPASSED WHEN ZMACRET ^= 0            */  17140000
*/*******************************************************************/  17150000
* END;                              /* END LIST GENERATION          */  17160000
*  RETURN CODE(ZMACRET);                                                17170000
*%END SUSPEND;                                                          17180000
