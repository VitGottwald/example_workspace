*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IXCRECV                               -01/13/18-<0> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  XCF Receive Interfaces                        * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5650-ZOS COPYRIGHT IBM CORP. 2011, 2017                         * 00001200
*                                                                     * 00001300
* STATUS= HBB77B0                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      The XCF Receive Service (IXCRECV) is one of the macros that    * 00002100
*      comprise the XCF Client/Server interfaces.  With these         * 00002200
*      interfaces, a "client" can send a request to a "server" for    * 00002300
*      processing and then receive the "results" provided by the      * 00002400
*      server.  Related macros include the XCF Server Interface       * 00002500
*      (IXCSRVR) which is used to create servers, and the XCF Send    * 00002600
*      Service (IXCSEND) which is used to send requests to servers    * 00002700
*      and responses to clients.                                      * 00002800
*                                                                     * 00002900
*      The IXCRECV macro completes a parameter list with caller       * 00003000
*      provided data and generates a stacking, space-switch program   * 00003100
*      call to an XCF service routine.  Depending on the request type * 00003200
*      specified, the service routine will either block (suspend)     * 00003300
*      until the requested response(s) arrive, or will return         * 00003400
*      information about the status of the request.  The XCF service  * 00003500
*      routine stores information about the response(s) in a caller   * 00003600
*      provided "answer area", and stores the actual response data    * 00003700
*      (if any) in a caller provided "data area".  If the caller did  * 00003800
*      not provide enough storage for all the requested data, the     * 00003900
*      service routine returns with a warning return code and         * 00004000
*      indicates how much storage is needed.  The caller should       * 00004100
*      obtain the needed storage and reissue the IXCRECV macro to     * 00004200
*      receive the available data.                                    * 00004300
*                                                                     * 00004400
*                                                                     * 00004500
*      o   Requesting Responses                                       * 00004600
*                                                                     * 00004700
*          A client uses the IXCSEND macro to send a request to a     * 00004800
*          server for processing, specifying EXPECTREPLY=YES if the   * 00004900
*          server is expected to send a response.  Because the client * 00005000
*          expects a response, XCF maintains status for the client    * 00005100
*          message.  When the response arrives, XCF binds it to the   * 00005200
*          client message, associating it with the appropriate        * 00005300
*          target.  The client invokes the IXCRECV macro to receive   * 00005400
*          the responses.                                             * 00005500
*                                                                     * 00005600
*          Note that a client request could be sent to multiple       * 00005700
*          targets, in which case there could be multiple responses   * 00005800
*          expected, and thus multiple responses to receive.  The     * 00005900
*          focus here will be on receiving the response(s).           * 00006000
*                                                                     * 00006100
*      o   Receiving Responses                                        * 00006200
*                                                                     * 00006300
*          After sending its request to the target servers, the       * 00006400
*          client invokes the IXCRECV macro to receive the responses  * 00006500
*          sent by the servers.  The client might choose to invoke    * 00006600
*          IXCRECV immediately upon return from the IXCSEND service,  * 00006700
*          or it might choose to do some other work and then invoke   * 00006800
*          IXCRECV, or it might choose to have some other work unit   * 00006900
*          invoke IXCRECV.  The IXCSEND and the IXCRECV need not be   * 00007000
*          invoked from the same address space.  But for any given    * 00007100
*          message, the IXCSEND that sends the message and the        * 00007200
*          IXCRECV that receives the responses to that message must   * 00007300
*          be invoked from the same system.                           * 00007400
*                                                                     * 00007500
*          If the message was sent to multiple targets, there could   * 00007600
*          be multiple responses to receive, one from each target.    * 00007700
*                                                                     * 00007800
*          To receive its responses with IXCRECV, the client must     * 00007900
*          provide two output data areas, the "answer area" and the   * 00008000
*          "data area".                                               * 00008100
*                                                                     * 00008200
*      o   Answer Area                                                * 00008300
*                                                                     * 00008400
*          The answer area (ANSAREA) contains information about the   * 00008500
*          message and its responses.  The answer area header, which  * 00008600
*          is mapped by ixcysrvr_tAnsArea (macro IXCYSRVR),           * 00008700
*          summarizes the state of the message and its responses.  In * 00008800
*          addition to this summary information, the answer area      * 00008900
*          contains a "send descriptor", a "target descriptor" for    * 00009000
*          each requested target, and a "response descriptor" for     * 00009100
*          each requested response.  A send descriptor, which is      * 00009200
*          mapped by ixcysrvr_tSendDescriptor, provides information   * 00009300
*          about the original message sent via the IXCSEND macro.  A  * 00009400
*          target descriptor, which is mapped by                      * 00009500
*          ixcysrvr_tTargetDescriptor, provides information about an  * 00009600
*          individual target.  A response descriptor, which is mapped * 00009700
*          by ixcysrvr_tResponseDescriptor, provides information      * 00009800
*          about an individual response.  Note that the order of the  * 00009900
*          target/response descriptors (if any) does not necessarily  * 00010000
*          correspond to the order of target systems specified in the * 00010100
*          originating IXCSEND invokation.                            * 00010200
*                                                                     * 00010300
*          The answer area must be large enough to hold the header.   * 00010400
*          If not, the request is rejected.  The client should obtain * 00010500
*          the necessary storage and reissue the IXCRECV macro.  If   * 00010600
*          the answer area is not large enough to hold all the        * 00010700
*          descriptors, the IXCRECV macro fills in the answer area    * 00010800
*          header and returns a warning return code.  The answer area * 00010900
*          header indicates how much storage is needed for the answer * 00011000
*          area to hold the header and the descriptors for all of the * 00011100
*          requested targets and responses (if any).  The client      * 00011200
*          should obtain the necessary storage and reissue the        * 00011300
*          IXCRECV macro.                                             * 00011400
*                                                                     * 00011500
*          The answer area is only valid for use for return codes 0   * 00011600
*          and 4.                                                     * 00011700
*                                                                     * 00011800
*      o   Data Area                                                  * 00011900
*                                                                     * 00012000
*          The data area contains a copy of the message data that was * 00012100
*          sent by the responder (by coding MSGDATA or MSGDESC on the * 00012200
*          IXCSEND SENDTO=ORIGINATOR invocation used to send the      * 00012300
*          reply).  When receiving all the responses, the data area   * 00012400
*          for receiving the response data can either be one          * 00012500
*          contiguous storage area into which all the responses will  * 00012600
*          be stored, or it can be a set of individual storage areas, * 00012700
*          one for each response.                                     * 00012800
*                                                                     * 00012900
*                                                                     * 00013000
*          -   One data area for all responses                        * 00013100
*                                                                     * 00013200
*              The DATAAREA keyword names one contiguous storage area * 00013300
*              into which the response data for each requested        * 00013400
*              response is to be stored.  If there are multiple       * 00013500
*              responses, the response data for each response will be * 00013600
*              concatenated end to end within the data area.  The     * 00013700
*              response descriptor in the answer area indicates where * 00013800
*              within the data area the response data was stored.     * 00013900
*              The data area must be large enough to contain the      * 00014000
*              response data for all of the requested responses.  If  * 00014100
*              not, no response data is stored and the IXCRECV        * 00014200
*              service routine returns a warning return code.  The    * 00014300
*              answer area header indicates how much storage is       * 00014400
*              needed for the data area to hold all the response data * 00014500
*              for the requested responses.  The caller should obtain * 00014600
*              the necessary storage and reissue the IXCRECV macro.   * 00014700
*              Note that the response data will be stored at offset 0 * 00014800
*              in the data area.  Thus if the receiver requires that  * 00014900
*              the response data be on a certain storage boundary     * 00015000
*              (e.g., doubleword), it must ensure that the data area  * 00015100
*              resides on that boundary.                              * 00015200
*                                                                     * 00015300
*          -   One data area per response                             * 00015400
*                                                                     * 00015500
*              Instead of one large contiguous data area, the         * 00015600
*              receiver could provide a separate data area for each   * 00015700
*              response.  The DATADESC keyword indicates the location * 00015800
*              of a data descriptor table.  A data descriptor table   * 00015900
*              is an array with an entry for each requested response. * 00016000
*              Each entry of the array contains a "data descriptor"   * 00016100
*              that identifies where the response data for the        * 00016200
*              corresponding response is to be stored.  There must be * 00016300
*              an entry in the table for each requested response.     * 00016400
*              Furthermore, the storage area identified by any one    * 00016500
*              data descriptor must be large enough to contain the    * 00016600
*              response data for the corresponding response.  If not, * 00016700
*              no response data is stored and the IXCRECV service     * 00016800
*              routine returns with a warning return code.  The       * 00016900
*              answer area header indicates the number of response    * 00017000
*              descriptors.  The response descriptor for each         * 00017100
*              response indicates the size of its response data.  The * 00017200
*              caller should set up the necessary storage areas and   * 00017300
*              data descriptors and reissue the IXCRECV macro to      * 00017400
*              receive the responses.  Note that the response data    * 00017500
*              for a response will be stored at offset 0 in the       * 00017600
*              storage area identified by the corresponding data      * 00017700
*              descriptor.  Thus if the receiver requires that the    * 00017800
*              response data be on a certain storage boundary (e.g.,  * 00017900
*              doubleword), it must ensure that the storage area      * 00018000
*              identified by the data descriptor resides on that      * 00018100
*              boundary.                                              * 00018200
*                                                                     * 00018300
*              When a message has more than one response, the entries * 00018400
*              in the data descriptor table can be associated with    * 00018500
*              the responses in one of two ways.  The BIND keyword    * 00018600
*              indicates whether data descriptor "i" is to be used    * 00018700
*              when storing the response data from target "i"         * 00018800
*              (BIND=TARGET), or whether each successive data         * 00018900
*              descriptor is to be used for whatever response XCF     * 00019000
*              happens to process next (BIND=NEXT).  A client may     * 00019100
*              choose to use BIND=NEXT, for example, if it learns     * 00019200
*              from the response descriptors that some targets did    * 00019300
*              not provide response data.  This way the client only   * 00019400
*              needs to provide a data descriptor table with enough   * 00019500
*              entries for all available responses rather than for    * 00019600
*              all targets.                                           * 00019700
*                                                                     * 00019800
*                                                                     * 00019900
*                                                                     * 00020000
*      o   Output Areas Too Small                                     * 00020100
*                                                                     * 00020200
*          If the requester does not provide sufficient answer area   * 00020300
*          space or data area space to receive all the available      * 00020400
*          information, the service routine returns an indication     * 00020500
*          that more storage is needed.  The answer area header       * 00020600
*          indicates how much storage is needed for all requested     * 00020700
*          responses.  The response descriptor for each response      * 00020800
*          indicates the size of its response data.                   * 00020900
*                                                                     * 00021000
*          If the client does not intend to reissue the IXCRECV macro * 00021100
*          to receive the responses, it should invoke the XCF Message * 00021200
*          Control Service (IXCMSGC) to discard the message           * 00021300
*          (REQUEST=DISCARDMSG).  This helps XCF clean up system      * 00021400
*          resources in a timely manner.                              * 00021500
*                                                                     * 00021600
*      o   Storage Keys                                               * 00021700
*                                                                     * 00021800
*          By default, XCF uses the PSW key in effect at the time the * 00021900
*          XCF Receive Service was called when storing into the data  * 00022000
*          area.  The caller can optionally specify MSGSTGKEY to have * 00022100
*          XCF use some other key.  Thus the caller (who must be      * 00022200
*          authorized) may be able to have XCF store response data    * 00022300
*          directly into storage areas provided by non-authorized     * 00022400
*          users and still preserve system integrity.                 * 00022500
*                                                                     * 00022600
*          When storing into the answer area, XCF always uses the PSW * 00022700
*          key in effect at the time the XCF Receive Service was      * 00022800
*          called.                                                    * 00022900
*                                                                     * 00023000
*      o   Target/Response States                                     * 00023100
*                                                                     * 00023200
*          A response is deemed to have been "received" (we often say * 00023300
*          "delivered") if the client invoked IXCRECV with the        * 00023400
*          RECEIVE=RESPONSES option and either (a) XCF stored the     * 00023500
*          response data in a data area, or (b) XCF stored a response * 00023600
*          descriptor in the answer area for a response that has no   * 00023700
*          data (a response might have no data either because the     * 00023800
*          responder did not provide any or because XCF no longer     * 00023900
*          expects a response from the associated target).  A         * 00024000
*          response is "pending" if the target is still expected to   * 00024100
*          send a response, but the response has not yet arrived.  A  * 00024200
*          response is said to be "available" if it has arrived but   * 00024300
*          has not yet been received by the client.  A response can   * 00024400
*          also be "available" even if the response never arrives.    * 00024500
*          If XCF determines that the target is no longer expected to * 00024600
*          respond, it will deem the response to be "available"       * 00024700
*          because the status of the response has been determined.    * 00024800
*                                                                     * 00024900
*          XCF maintains status information about each target until   * 00025000
*          the client message is discarded.  XCF discards the client  * 00025100
*          message when all of the responses associated with the      * 00025200
*          message have been delivered.                               * 00025300
*                                                                     * 00025400
*          If the targets are not expected to send responses (IXCSEND * 00025500
*          EXPECTREPLY=NO), XCF maintains status for each of the      * 00025600
*          targets until the client message is discarded.  When the   * 00025700
*          client invokes IXCRECV with the RECEIVE=RESPONSES option   * 00025800
*          to receive the status of the targets in the target         * 00025900
*          descriptors, the status metadata is then considered        * 00026000
*          delivered.  XCF discards the client message when all of    * 00026100
*          the status metadata has been delivered.                    * 00026200
*                                                                     * 00026300
*      o   Message Timeouts                                           * 00026400
*                                                                     * 00026500
*          The client may choose to specify timeout values when using * 00026600
*          IXCSEND to send a message for which a response is          * 00026700
*          expected.  RESPTIME indicates how long the sender is       * 00026800
*          willing to wait for the expected responses to arrive.  A   * 00026900
*          message is said to be "complete" when all its expected     * 00027000
*          responses have arrived.  HOLDTIME indicates how long XCF   * 00027100
*          should hold a completed message while it waits for the     * 00027200
*          sender to receive the response(s).  In effect, RESPTIME    * 00027300
*          limits how long the client can poll for message completion * 00027400
*          and/or be blocked waiting for responses to arrive.         * 00027500
*                                                                     * 00027600
*          HOLDTIME on the other hand, requires the sender to         * 00027700
*          retrieve the responses for a completed message in a timely * 00027800
*          fashion.  Except possibly for some unusual situations      * 00027900
*          where work is not being dispatched in a timely fashion, a  * 00028000
*          blocked IXCRECV will likely not be impacted by HOLDTIME as * 00028100
*          the invoking work unit will be resumed as soon as the      * 00028200
*          message completes.  HOLDTIME could impact a receiver who   * 00028300
*          is polling for completion, or a receiver whose receive     * 00028400
*          failed for a lack of storage.  If the client does not      * 00028500
*          receive all the available responses within HOLDTIME, XCF   * 00028600
*          discards the message and any remaining responses.          * 00028700
*                                                                     * 00028800
*      o   Message Completion                                         * 00028900
*                                                                     * 00029000
*          A message is deemed to be complete when all the expected   * 00029100
*          responses have arrived, or when the IXCSEND response time  * 00029200
*          timeout value expires (RESPTIME), or the XCF Message       * 00029300
*          Control Service (IXCMSGC) is used to either (a) force      * 00029400
*          completion of the message (REQUEST=COMPLETION), or (b)     * 00029500
*          discard the message altogether (REQUEST=DISCARDMSG).  Note * 00029600
*          that the message is also deemed to be complete (and        * 00029700
*          discarded) if XCF deems the receiver to have terminated    * 00029800
*          per the receive bind specified by the RECVBIND keyword on  * 00029900
*          the IXCSEND invocation used to send the message.           * 00030000
*                                                                     * 00030100
*          XCF monitors the message targets and recognizes situations * 00030200
*          for which it is no longer reasonable to expect them to     * 00030300
*          receive and/or respond to the message.  If XCF determines  * 00030400
*          that there are no more responses pending, it will deem the * 00030500
*          message to have completed since all "expected" responses   * 00030600
*          have been received.  There are a variety of situations for * 00030700
*          which XCF will not expect the target to respond.  But they * 00030800
*          all fall under one of three categories: the message was    * 00030900
*          not sent, or the message was not delivered, or a failure   * 00031000
*          occurred.                                                  * 00031100
*                                                                     * 00031200
*          The target certainly will not respond if XCF never sends   * 00031300
*          the message to the target.  The message is not sent if XCF * 00031400
*          determines that the target system does not exist, or if    * 00031500
*          the target system is not running a release of z/OS that    * 00031600
*          supports the XCF Client/Server interfaces.  Perhaps the    * 00031700
*          sending system has resource constraints that prevent it    * 00031800
*          from being able to send messages.                          * 00031900
*                                                                     * 00032000
*          Even if the message arrives on the target system, it may   * 00032100
*          not be delivered.  There may not be an instance of the     * 00032200
*          server running on the target system.  Maybe instances of   * 00032300
*          the server are running, but none of them support the       * 00032400
*          server level or features that are required to process the  * 00032500
*          request.  Maybe the server refused to accept the request.  * 00032600
*          In such cases, XCF sends back an acknowledgment to the     * 00032700
*          originating system to indicate that no response should be  * 00032800
*          expected from the target.                                  * 00032900
*                                                                     * 00033000
*          If the system on which the target resides is removed from  * 00033100
*          the sysplex, XCF will no longer expect a response from     * 00033200
*          that target.  If the target fails while XCF is delivering  * 00033300
*          the message, XCF sends an acknowledgment back to the       * 00033400
*          originating system to indicate that no response should be  * 00033500
*          expected.                                                  * 00033600
*                                                                     * 00033700
*      o   Blocking Receive                                           * 00033800
*                                                                     * 00033900
*          For the case where responses are expected, an IXCRECV      * 00034000
*          REQTYPE=BLOCKING will block if any of the requested        * 00034100
*          responses are still pending.  A blocking receive suspends  * 00034200
*          the calling work unit until none of the requested          * 00034300
*          responses are pending.  If none of the requested responses * 00034400
*          are pending when IXCRECV is invoked, the service routine   * 00034500
*          returns immediately to the caller without blocking.  In    * 00034600
*          either case, the descriptors and response data (as         * 00034700
*          applicable) for the requested responses are stored into    * 00034800
*          the designated output areas.  The return and reason code   * 00034900
*          indicates whether the message has completed (all expected  * 00035000
*          responses have arrived), or is not found (message was      * 00035100
*          discarded).                                                * 00035200
*                                                                     * 00035300
*          For the case where responses are not expected, a blocking  * 00035400
*          receive will block if any of the sends are still pending.  * 00035500
*          If none of the requested sends are pending when IXCRECV is * 00035600
*          invoked, the service routine returns immediately to the    * 00035700
*          caller without blocking.  In either case, the target       * 00035800
*          descriptors for the requested targets are stored into the  * 00035900
*          designated output areas.  The return and reason code       * 00036000
*          indicates whether the message has completed (initiated     * 00036100
*          send to all valid targets), or is not found (message was   * 00036200
*          discarded).                                                * 00036300
*                                                                     * 00036400
*          The XCF Message Control Service (IXCMSGC                   * 00036500
*          REQUEST=RELEASEMSG) can be used (by some other work unit)  * 00036600
*          to release a blocked receiver.  In such cases the IXCRECV  * 00036700
*          service routine will return to the caller indicating       * 00036800
*          "released".  Neither the answer area nor the data area is  * 00036900
*          stored.  The message persists and a subsequent IXCRECV can * 00037000
*          be issued to receive the responses up until such time as   * 00037100
*          the message is discarded (as would occur if the IXCSEND    * 00037200
*          HOLDTIME expires).                                         * 00037300
*                                                                     * 00037400
*          IXCMSGC can also be used to force the message to complete  * 00037500
*          (REQUEST=COMPLETION).  Undelivered responses that arrived  * 00037600
*          before the message was forced to complete remain           * 00037700
*          available.  Any responses arriving after the message is    * 00037800
*          deemed to be complete are discarded.  Completing the       * 00037900
*          message implies that the blocked work unit will be         * 00038000
*          released.  The service routine will update the answer area * 00038100
*          and the data area for the requested targets, and return to * 00038200
*          the caller.  Forcing completion in effect lets the client  * 00038300
*          receive whatever responses had arrived up to that point.   * 00038400
*                                                                     * 00038500
*          IXCMSGC can also be used to discard the message            * 00038600
*          (REQUEST=DISCARDMSG).  The message and all associated      * 00038700
*          responses are discarded.  Undelivered responses that       * 00038800
*          arrived before the message was discarded are no longer     * 00038900
*          available.  Status information about the message is no     * 00039000
*          longer available.  Subsequently arriving responses are     * 00039100
*          discarded.  A blocked receiver will be released, but       * 00039200
*          neither the answer area nor the data area will be stored.  * 00039300
*          If IXCRECV is invoked after the message is discarded, the  * 00039400
*          service routine returns to the caller indicating "not      * 00039500
*          found".                                                    * 00039600
*                                                                     * 00039700
*      o   Obtaining Message Status                                   * 00039800
*                                                                     * 00039900
*          One can obtain the status of the message by invoking       * 00040000
*          IXCRECV with RECEIVE=STATUS.  This form of IXCRECV returns * 00040100
*          immediately with a return and reason code indicating the   * 00040200
*          state of the message.  For example, one might use this     * 00040300
*          service when polling for completion of the message.        * 00040400
*                                                                     * 00040500
*          The service routine inspects the message and provides a    * 00040600
*          return and reason code to indicate the state of the        * 00040700
*          message.  If the message is "complete", all expected       * 00040800
*          responses have arrived and there is at least one response  * 00040900
*          still to be delivered (if all the responses had been       * 00041000
*          delivered, XCF would have discarded the message).  If the  * 00041100
*          message has responses "available", there is at least one   * 00041200
*          response still to be delivered and there is at least one   * 00041300
*          response still expected (otherwise the message would have  * 00041400
*          been "complete").  If the message is "pending", there are  * 00041500
*          no responses currently available for delivery and there is * 00041600
*          at least one response still expected.  If the message was  * 00041700
*          discarded by XCF because the hold time expired, or because * 00041800
*          all the responses had been delivered to the client, or     * 00041900
*          because the client explicitly discarded it (with IXCMSGC), * 00042000
*          or the entity designated by the IXCSEND macro as the       * 00042100
*          receiver terminated (RECVBIND), the service routine will   * 00042200
*          indicate "not found".                                      * 00042300
*                                                                     * 00042400
*      o   Obtaining Detailed Response Status                         * 00042500
*                                                                     * 00042600
*          To obtain detailed response status without receiving the   * 00042700
*          actual response data, one can invoke IXCRECV with          * 00042800
*          RECEIVE=RESPONSES specifying NODATA.  For                  * 00042900
*          REQTYPE=BLOCKING, the calling work unit is suspended until * 00043000
*          the message is deemed complete.  The service routine then  * 00043100
*          inspects the message and stores information about the      * 00043200
*          message and any associated responses in the designated     * 00043300
*          answer area.  For SCOPE=ALL, a target descriptor and a     * 00043400
*          response descriptor for each response are stored.  The     * 00043500
*          client can then use this information, for example, to      * 00043600
*          determine how much storage it needs to obtain for each     * 00043700
*          response.                                                  * 00043800
*                                                                     * 00043900
*      o   Delivered Response                                         * 00044000
*                                                                     * 00044100
*          Note that XCF will discard a message once all of its       * 00044200
*          associated responses have been delivered.  For a response  * 00044300
*          that has data, the response is considered delivered when   * 00044400
*          XCF has successfully stored the response data in the       * 00044500
*          indicated data area.  For a response that has no data, the * 00044600
*          response is considered delivered when XCF has successfully * 00044700
*          stored a response descriptor for the response in the       * 00044800
*          answer area.  Furthermore, note that invoking IXCRECV with * 00044900
*          RECEIVE=RESPONSES specifying NODATA will cause the message * 00045000
*          to be considered delivered (and discarded) if none of the  * 00045100
*          requested responses has any response data.                 * 00045200
*                                                                     * 00045300
*      o   Competing Receives                                         * 00045400
*                                                                     * 00045500
*          XCF does not allow multiple work units to be blocked for   * 00045600
*          receiving the same message (ixcrecvRsnBlockingConflict).   * 00045700
*          Furthermore, XCF permits only one receive to be active at  * 00045800
*          a time for a given message.  If two work units invoke      * 00045900
*          IXCRECV RECEIVE=RESPONSES for the same completed message   * 00046000
*          at the same time (the work units will not be blocked since * 00046100
*          the message has completed), only one of them will receive  * 00046200
*          the response data and/or the status metadata.  The request * 00046300
*          from the other work unit will be rejected                  * 00046400
*          (ixcrecvRsnActiveReceiver).                                * 00046500
*                                                                     * 00046600
*                                                                     * 00046700
*      o   Combining IXCRECV Invocations                              * 00046800
*                                                                     * 00046900
*          The RECEIVE=STATUS and RECEIVE=RESPONSES forms for         * 00047000
*          IXCRECV, with and without answer areas and data areas can  * 00047100
*          be used in various combinations to implement a variety of  * 00047200
*          completion protocols.  For example, an application might   * 00047300
*          be such that the amount of response data returned could be * 00047400
*          highly variable.  One might use a blocking receive with an * 00047500
*          answer area to block until a response arrives, obtain a    * 00047600
*          suitable data area based on the detailed response status   * 00047700
*          information provided in the answer area, and then receive  * 00047800
*          the response data.  An application with predictable        * 00047900
*          response data might poll for message completion.  When the * 00048000
*          message completes, it can provide an answer area and data  * 00048100
*          area large enough for all expected responses.              * 00048200
*                                                                     * 00048300
*      o   Response Codes                                             * 00048400
*                                                                     * 00048500
*          XCF tries to provide a response code to indicate what      * 00048600
*          happened to the request.  The XCF response code is         * 00048700
*          reported in the target descriptor stored in the answer     * 00048800
*          area for the target.  If responses are expected            * 00048900
*          (EXPECTREPLY=YES was specified in the originating IXCSEND  * 00049000
*          invocation), the response code is also stored in the       * 00049100
*          corresponding response descriptor.  The response codes may * 00049200
*          help the sender to determine what recovery action is       * 00049300
*          needed if the target fails to respond.  For example, if it * 00049400
*          can be determined that the target never received the       * 00049500
*          message, it might be appropriate to resend the message.    * 00049600
*          If instead, the message was delivered to the target, the   * 00049700
*          sender may need to take pains to determine whether the     * 00049800
*          request was processed or not.  Some requests might not be  * 00049900
*          retriable.                                                 * 00050000
*                                                                     * 00050100
*          However, note that XCF can at best indicate whether the    * 00050200
*          request was presented to the target.  XCF can not          * 00050300
*          determine whether the request was processed correctly by   * 00050400
*          the target.  Even if XCF reports that the target failed    * 00050500
*          while processing the request, processing of the request    * 00050600
*          may have succeeded.  Even if XCF reports that the request  * 00050700
*          was successully delivered to the target, processing of the * 00050800
*          request may have failed.  In short, only the target can    * 00050900
*          reliably indicate whether the request was successfully     * 00051000
*          processed or not.                                          * 00051100
*                                                                     * 00051200
*          The IXCYSRVR macro defines the response codes provided by  * 00051300
*          XCF.  The response code might indicate that the message    * 00051400
*          was never presented to the target ("not sent", "no         * 00051500
*          receiver", "not delivered"), or that the message may or    * 00051600
*          may not have been presented to the target ("in progress"), * 00051700
*          or that the message was presented but not processed by the * 00051800
*          target ("refused"), or that the message was presented and  * 00051900
*          possibly processed ("delivered", "failed"), or that the    * 00052000
*          response sent by the target did in fact arrive             * 00052100
*          ("replied").  If the response does arrive, one must check  * 00052200
*          the response to determine whether the request was          * 00052300
*          successful or not.                                         * 00052400
*                                                                     * 00052500
*          Several of the response codes have qualifiers that provide * 00052600
*          additional detail as to the specific circumstances that    * 00052700
*          led to the response code.  For example, a message might be * 00052800
*          "not sent" if the target system does not exist, or if the  * 00052900
*          target system is not running a release of z/OS that        * 00053000
*          supports the XCF Client/Server interfaces, or if the       * 00053100
*          sending system had resource constraints.  If there is "no  * 00053200
*          receiver", it could be that no instance of the server      * 00053300
*          exists on the target system, or it could be that no        * 00053400
*          suitable instance of the server exists (perhaps no         * 00053500
*          instance of the server supports the required features).    * 00053600
*                                                                     * 00053700
*      o   Server Failures                                            * 00053800
*                                                                     * 00053900
*          A server can assign the responsibility of sending          * 00054000
*          responses to the requests presented to the server to a     * 00054100
*          different entity.  By default, XCF binds this              * 00054200
*          responsibility to the server exit routine.  If the         * 00054300
*          responsible entity terminates before sending an expected   * 00054400
*          response, XCF sends an acknowledgment to the originating   * 00054500
*          system to indicate that it should no longer expect a       * 00054600
*          response from the target server.                           * 00054700
*                                                                     * 00054800
*          Note that the demise of the server system always causes    * 00054900
*          XCF to cancel responses expected from the servers on that  * 00055000
*          system.  Thus if the server implementation entails third   * 00055100
*          party notification wherein some system other than the one  * 00055200
*          on which the server resides is responsible for sending the * 00055300
*          results, there is a possibility that XCF will cancel the   * 00055400
*          expected response before the third party system responds.  * 00055500
*          In effect, there is a race condition between the third     * 00055600
*          party response and the cleanup processing performed by XCF * 00055700
*          when a system is removed from the sysplex.                 * 00055800
*                                                                     * 00055900
*      o   Receiver Failures                                          * 00056000
*                                                                     * 00056100
*          When a response message arrives, XCF binds it to the       * 00056200
*          originating send request.  The originator (client) then    * 00056300
*          invokes IXCRECV to receive the response.  If a user error  * 00056400
*          (such as inaccessible data area) occurs during the receive * 00056500
*          process, the service routine returns with a return code    * 00056600
*          indicating the type of error.  XCF preserves the response  * 00056700
*          message until it is delivered or discarded.  The client    * 00056800
*          may have a chance to correct the error and reissue IXCRECV * 00056900
*          to receive the response.                                   * 00057000
*                                                                     * 00057100
*          When the client invokes IXCSEND to send a request, it can  * 00057200
*          specify a "receive bind" (RECVBIND) to indicate the entity * 00057300
*          responsible for invoking the IXCRECV macro to receive the  * 00057400
*          responses.  If the indicated entity terminates, XCF will   * 00057500
*          discard the message and any associated responses because   * 00057600
*          there will not be any work unit to invoke the IXCRECV      * 00057700
*          macro.  The RECVBIND specification helps XCF ensure that   * 00057800
*          system resources are recovered in a timely manner.         * 00057900
*                                                                     * 00058000
*                                                                     * 00058100
*                                                                     * 00058200
*      The IXCRECV macro is provided in list, execute, and standard   * 00058300
*      form.  The list form accepts no variable parameters and is     * 00058400
*      used only to reserve space for the parameter list.  The        * 00058500
*      standard form is provided for use with routines which do not   * 00058600
*      require reentrant code.  The execute form is provided for use  * 00058700
*      with the list format for reentrant routines.  The IXCRECV      * 00058800
*      macro is provided in PL/X and assembler formats.               * 00058900
*                                                                     * 00059000
*      The storage containing the IXCRECV parameter list must reside  * 00059100
*      in the primary address space of the caller, or in a space      * 00059200
*      addressable via a public entry on the dispatchable unit access * 00059300
*      list (DU-AL), or in a common area data space.                  * 00059400
*                                                                     * 00059500
*                                                                     * 00059600
*                                                                     * 00059700
*      INPUT REGISTERS:                                               * 00059800
*                                                                     * 00059900
*                                                                     * 00060000
*                          GR0-GR1     reserved                       * 00060100
*                                                                     * 00060200
*                          GR2-GR13    undefined                      * 00060300
*                                                                     * 00060400
*                          GR14-GR15   reserved                       * 00060500
*                                                                     * 00060600
*                          AR0-AR1     reserved                       * 00060700
*                                                                     * 00060800
*                          AR2-AR13    undefined                      * 00060900
*                                                                     * 00061000
*                          AR14-AR15   reserved                       * 00061100
*                                                                     * 00061200
*                                                                     * 00061300
*                                                                     * 00061400
*      OUTPUT ENVIRONMENT: Same as on entry                           * 00061500
*                                                                     * 00061600
*      OUTPUT REGISTERS:                                              * 00061700
*                                                                     * 00061800
*                                                                     * 00061900
*                          GR0         reason code based on GR15 or 0 * 00062000
*                                                                     * 00062100
*                          GR1         unpredictable                  * 00062200
*                                                                     * 00062300
*                          GR2-GR13    unchanged                      * 00062400
*                                                                     * 00062500
*                          GR14        unpredictable                  * 00062600
*                                                                     * 00062700
*                          GR15        return code                    * 00062800
*                                                                     * 00062900
*                          AR0-AR1     unpredictable                  * 00063000
*                                                                     * 00063100
*                          AR2-AR13    unchanged                      * 00063200
*                                                                     * 00063300
*                          AR14-AR15   unpredictable                  * 00063400
*                                                                     * 00063500
*                                                                     * 00063600
*                                                                     * 00063700
*                                                                     * 00063800
*                                                                     * 00063900
*01* PERFORMANCE IMPLICATIONS:                                        * 00064000
*                                                                     * 00064100
*    To prevent backlogs that can degrade system performance, a       * 00064200
*    receiver must be able to process results of a request in a       * 00064300
*    timely fashion.                                                  * 00064400
*                                                                     * 00064500
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00064600
*                                                                     * 00064700
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00064800
*                                                                     * 00064900
*01* ENVIRONMENT:                                                     * 00065000
*                                                                     * 00065100
*                                                                     * 00065200
*      Dispatchable unit mode: Task or SRB mode.                      * 00065300
*                                                                     * 00065400
*      Minimum authorization: Supervisor state or PKM allowing keys   * 00065500
*                        0-7.                                         * 00065600
*                                                                     * 00065700
*      AMODE:            31- or 64-bit.                               * 00065800
*                                                                     * 00065900
*                        If in 64-bit mode, specify SYSSTATE          * 00066000
*                        AMODE64=YES before invoking this macro.      * 00066100
*                                                                     * 00066200
*      ASC mode:         Primary or Access Register.                  * 00066300
*                                                                     * 00066400
*                        If in Access Register ASC mode, specify      * 00066500
*                        SYSSTATE ASCENV=AR before invoking this      * 00066600
*                        macro.                                       * 00066700
*                                                                     * 00066800
*                        Any primary address space; any secondary     * 00066900
*                        address space; any home address space.       * 00067000
*                                                                     * 00067100
*      Interrupt status: Enabled for I/O and external interrupts      * 00067200
*                                                                     * 00067300
*      Locks:            No locks held                                * 00067400
*                                                                     * 00067500
*                                                                     * 00067600
*                                                                     * 00067700
*01* RESTRICTIONS:                                                    * 00067800
*                                                                     * 00067900
*    IXCRECV with REQTYPE=BLOCKING cannot be used by tasks higher in  * 00068000
*    the task tree than the cross memory resource owning task (the    * 00068100
*    top, or first, job step task in the address space).              * 00068200
*                                                                     * 00068300
*    Callers running in SRB mode should refrain from invoking the     * 00068400
*    IXCRECV service with REQTYPE=BLOCKING under the following        * 00068500
*    circumstances:                                                   * 00068600
*     - After the SRB receives a x'47B' abend                         * 00068700
*     - When running in a suspend exit after invoking SUSPEND         * 00068800
*                                                                     * 00068900
*    In these cases, the IXCRECV service routine may not be able to   * 00069000
*    successfully wait for the requested responses to arrive.         * 00069100
*                                                                     * 00069200
*01* SYNTAX:                                                          * 00069300
*                                                                     * 00069400
*Ýxlabel¨  IXCRECV     MSGTOKEN=xmsgtoken                             * 00069500
*                   Ð ,RECEIVE=STATUS                                 * 00069600
*                   ¿ ,RECEIVE=RESPONSES                              * 00069700
*                       Ô ,REQTYPE=BLOCKING                           * 00069800
*                       Ô ,SCOPE=ALL                                  * 00069900
*                       ! ,ANSAREA=xansarea                           * 00070000
*                       !     ,ANSLEN=xanslen                         * 00070100
*                       Ð ,NODATA                                     * 00070200
*                       Ô ,DATAAREA=xdataarea                         * 00070300
*                       !     ,DATALEN=xdatalen                       * 00070400
*                       ¿ ,DATADESC=xdatadesc                         * 00070500
*                            Ý,#DATADESC=»x#datadesc!1º¨              * 00070600
*                            Ý,LENDDENTRY=»xlenddentry!16º¨           * 00070700
*                           ÐÝ,BIND=TARGET¨                           * 00070800
*                           ¿Ý,BIND=NEXT¨                             * 00070900
*                        Ý,MSGSTGKEY=»xmsgstgkey!USERKEYº¨            * 00071000
*                    Ý,RETCODE=xretcode¨                              * 00071100
*                    Ý,RSNCODE=xrsncode¨                              * 00071200
*                    Ý,PLISTVER=»xplistver!IMPLIED_VERSIONº¨          * 00071300
*                   ÐÝ,MF=S¨                                          * 00071400
*                   ÔÝ,MF=(L,xmfctrl»,xmfattr!0Dº)¨                   * 00071500
*                   ¿Ý,MF=(E,xmfctrl»,COMPLETEº)¨                     * 00071600
*                                                                     * 00071700
*                                                                     * 00071800
*      Where:                                                         * 00071900
*                                                                     * 00072000
*                                                                     * 00072100
*      Ýxlabel¨                                                       * 00072200
*          is an optional symbol, starting in column 1, that is the   * 00072300
*          name on the IXCRECV macro invocation.  The name must       * 00072400
*          conform to the rules for an ordinary assembler language    * 00072500
*          symbol.                                                    * 00072600
*          DEFAULT: No name.                                          * 00072700
*                                                                     * 00072800
*                                                                     * 00072900
*                                                                     * 00073000
*                                                                     * 00073100
*      MSGTOKEN=xmsgtoken                                             * 00073200
*          is the name (RS-type), or address in register (2)-(12), of * 00073300
*          a required 32 character input field containing the message * 00073400
*          token that identifies the message to be processed.  The    * 00073500
*          IXCSEND macro returned this token via the RETMSGTOKEN      * 00073600
*          keyword when the message was sent.                         * 00073700
*                                                                     * 00073800
*          If the indicated message no longer exists, the service     * 00073900
*          routine sets a return and reason code to so indicate       * 00074000
*          (ixcrecvRsnMsgNotFound) and returns to the caller.         * 00074100
*                                                                     * 00074200
*                                                                     * 00074300
*                                                                     * 00074400
*                                                                     * 00074500
*      RECEIVE=»STATUS!RESPONSESº                                     * 00074600
*          is a required keyword input indicating what data the       * 00074700
*          service routine is to gather.                              * 00074800
*                                                                     * 00074900
*                                                                     * 00075000
*          RECEIVE=STATUS                                             * 00075100
*              The service routine is to report the status of the     * 00075200
*              request.  The return code and reason code indicates    * 00075300
*              whether the request is completed (RETCODE=0), or       * 00075400
*              whether the request is still pending (RETCODE=4).  If  * 00075500
*              pending, the RSNCODE indicates whether there are       * 00075600
*              responses available for delivery (ixcrecvRsnAvailable  * 00075700
*              or ixcrecvRsnPending).                                 * 00075800
*                                                                     * 00075900
*              RECEIVE=STATUS is specified if the caller wants to     * 00076000
*              obtain the status of the message but does not actually * 00076100
*              want to receive the responses or information about the * 00076200
*              responses.  RECEIVE=STATUS can be used, for example,   * 00076300
*              to poll for message completion.                        * 00076400
*                                                                     * 00076500
*          RECEIVE=RESPONSES                                          * 00076600
*              RECEIVE=RESPONSES is specified if the caller wants to  * 00076700
*              receive the results associated with the indicated      * 00076800
*              message.                                               * 00076900
*                                                                     * 00077000
*              A prior IXCSEND SENDTO=SERVER request was used to send * 00077100
*              a message to one or more targets.  If EXPECTREPLY=YES  * 00077200
*              was specified, each target is expected to invoke       * 00077300
*              IXCSEND SENDTO=ORIGINATOR to send its response in      * 00077400
*              reply to the message.  Each reply can contain          * 00077500
*              "response data" (corresponding to the IXCSEND keywords * 00077600
*              MSGDATA or MSGDESC), or "response info" (keywords      * 00077700
*              RESPRETCODE, RESPRSNCODE, SUPPLIEDLEVEL,               * 00077800
*              SUPPORTSLEVEL), or both.  The caller now wants to      * 00077900
*              receive the results.                                   * 00078000
*                                                                     * 00078100
*              The keyword DATAAREA or the keyword DATADESC is used   * 00078200
*              to indicate where the "response data" is to be stored. * 00078300
*              The metadata describing the status of the results is   * 00078400
*              stored in the storage area identified by the ANSAREA   * 00078500
*              keyword.                                               * 00078600
*                                                                     * 00078700
*                                                                     * 00078800
*              REQTYPE=»BLOCKING                                      * 00078900
*                  is a required keyword input indicating the caller  * 00079000
*                  wants the service routine to wait for the results  * 00079100
*                  to arrive before returning.                        * 00079200
*                                                                     * 00079300
*                                                                     * 00079400
*                  REQTYPE=BLOCKING                                   * 00079500
*                      If the requested results are not yet           * 00079600
*                      available, the IXCRECV service routine will    * 00079700
*                      block (suspend) the caller.  Control will not  * 00079800
*                      return to the caller until the requested       * 00079900
*                      results become available.  To release a        * 00080000
*                      blocked receiver before all results become     * 00080100
*                      available, some other work unit can invoke the * 00080200
*                      XCF Message Control Service (IXCMSGC) to       * 00080300
*                      discard the message (REQUEST=DISCARDMSG),      * 00080400
*                      complete the message (REQUEST=COMPLETION), or  * 00080500
*                      release the blocked receiver                   * 00080600
*                      (REQUEST=RELEASEMSG).                          * 00080700
*                                                                     * 00080800
*                                                                     * 00080900
*                                                                     * 00081000
*                                                                     * 00081100
*                                                                     * 00081200
*                                                                     * 00081300
*              SCOPE=»ALL                                             * 00081400
*                  is a required keyword input indicating all results * 00081500
*                  are to be gathered.                                * 00081600
*                                                                     * 00081700
*                                                                     * 00081800
*                  SCOPE=ALL                                          * 00081900
*                      All results are to be gathered.  This allows   * 00082000
*                      the caller to process all the results at one   * 00082100
*                      time.                                          * 00082200
*                                                                     * 00082300
*                      The metadata of the results are to be stored   * 00082400
*                      in the answer area.  If a data area (DATAAREA  * 00082500
*                      or DATADESC) is provided, the response data    * 00082600
*                      for each available response is to be stored in * 00082700
*                      the data area.                                 * 00082800
*                                                                     * 00082900
*                                                                     * 00083000
*                                                                     * 00083100
*                                                                     * 00083200
*                                                                     * 00083300
*                                                                     * 00083400
*              ANSAREA=xansarea                                       * 00083500
*                  is the name (RS-type), or address in register      * 00083600
*                  (2)-(12), of a required character input variable   * 00083700
*                  where XCF is to store the metadata that describes  * 00083800
*                  the message and its responses.  ANSAREA will       * 00083900
*                  contain a header (ixcysrvr_tAnsArea), a send       * 00084000
*                  descriptor (ixcysrvr_tSendDescriptor), a target    * 00084100
*                  descriptor (ixcysrvr_tTargetDescriptor) for each   * 00084200
*                  target, and a response descriptor                  * 00084300
*                  (ixcysrvr_tResponseDescriptor) for each response   * 00084400
*                  if EXPECTREPLY=YES was specified in the            * 00084500
*                  originating IXCSEND invokation.  The mappings are  * 00084600
*                  defined in the IXCYSRVR macro.                     * 00084700
*                                                                     * 00084800
*                  In general, ANSAREA must be large enough to hold   * 00084900
*                  the header and all the descriptors.  If not, none  * 00085000
*                  of the descriptors will be stored.  The service    * 00085100
*                  routine returns with a return and reason code      * 00085200
*                  indicating that the ANSAREA needs to be bigger     * 00085300
*                  (ixcrecvRsnMoreAnsArea).  The header indicates how * 00085400
*                  much storage is needed (aa_AnsAreaSize).  The      * 00085500
*                  caller should obtain a sufficiently large answer   * 00085600
*                  area and reissue the request before the HOLDTIME   * 00085700
*                  timeout value for the message expires (see         * 00085800
*                  IXCSEND).                                          * 00085900
*                                                                     * 00086000
*                  The answer area must reside in the primary address * 00086100
*                  space of the caller, or in a space addressable via * 00086200
*                  a public entry on the dispatchable unit access     * 00086300
*                  list (DU-AL), or in a common area data space.      * 00086400
*                                                                     * 00086500
*                                                                     * 00086600
*                  ANSLEN=xanslen                                     * 00086700
*                      is the name (RS-type), or address in register  * 00086800
*                      (2)-(12), of a required fullword input         * 00086900
*                      variable which contains the length in bytes of * 00087000
*                      the answer area provided by the invoker.       * 00087100
*                                                                     * 00087200
*                                                                     * 00087300
*                                                                     * 00087400
*                                                                     * 00087500
*                                                                     * 00087600
*                                                                     * 00087700
*              The following is a set of mutually exclusive keys.     * 00087800
*              This set is required; only one key must be specified.  * 00087900
*                                                                     * 00088000
*                                                                     * 00088100
*              NODATA                                                 * 00088200
*                  keyword indicating that no response data is to be  * 00088300
*                  stored.                                            * 00088400
*                                                                     * 00088500
*              DATAAREA=xdataarea                                     * 00088600
*                  belongs to a set of mutually exclusive keys. It is * 00088700
*                  the name (RS-type), or address in register         * 00088800
*                  (2)-(12), of a character input variable indicating * 00088900
*                  where XCF is to store the response data provided   * 00089000
*                  by the responder.  The content, interpretation,    * 00089100
*                  and mapping of the response data is determined by  * 00089200
*                  the responder.                                     * 00089300
*                                                                     * 00089400
*                  If multiple responses are being received, XCF      * 00089500
*                  concatenates the response data for each response   * 00089600
*                  successively in the indicated DATAAREA.  The       * 00089700
*                  response descriptor in the ANSAREA can be used to  * 00089800
*                  locate the corresponding response data within      * 00089900
*                  DATAAREA.                                          * 00090000
*                                                                     * 00090100
*                  Depending on the size of the response data and the * 00090200
*                  number of responders, the amount of storage needed * 00090300
*                  for DATAAREA could be significant.  In such cases  * 00090400
*                  DATADESC might be more appropriate, as it might be * 00090500
*                  easier to get one storage area per response rather * 00090600
*                  than one storage area large enough to hold all the * 00090700
*                  responses.                                         * 00090800
*                                                                     * 00090900
*                  If DATAAREA is not large enough, none of the       * 00091000
*                  response data will be stored and the service       * 00091100
*                  routine returns with a return and reason code      * 00091200
*                  indicating that the DATAAREA needs to be bigger    * 00091300
*                  (ixcrecvRsnMoreDataArea).  The header in the       * 00091400
*                  ANSAREA indicates how much storage is needed       * 00091500
*                  (aa_DataAreaSize).  The caller should obtain a     * 00091600
*                  sufficiently large data area and reissue the       * 00091700
*                  request before the HOLDTIME timeout value for the  * 00091800
*                  message expires (see IXCSEND).                     * 00091900
*                                                                     * 00092000
*                  The data area must reside in the primary address   * 00092100
*                  space of the caller, or in a space addressable via * 00092200
*                  a public entry on the dispatchable unit access     * 00092300
*                  list (DU-AL), or in a common area data space.  The * 00092400
*                  storage key of the data area must match the        * 00092500
*                  storage protect key indicated by the MSGSTGKEY     * 00092600
*                  keyword.                                           * 00092700
*                                                                     * 00092800
*                                                                     * 00092900
*                  DATALEN=xdatalen                                   * 00093000
*                      is the name (RS-type), or address in register  * 00093100
*                      (2)-(12), of a required fullword input         * 00093200
*                      variable which contains the length in bytes of * 00093300
*                      the data area provided by the invoker.         * 00093400
*                                                                     * 00093500
*                                                                     * 00093600
*                                                                     * 00093700
*              DATADESC=xdatadesc                                     * 00093800
*                  belongs to a set of mutually exclusive keys. It is * 00093900
*                  the name (RS-type), or address in register         * 00094000
*                  (2)-(12), of a character input variable containing * 00094100
*                  a table of one or more data descriptors.  A data   * 00094200
*                  descriptor identifies a storage location where the * 00094300
*                  response data for one response is to be stored.    * 00094400
*                  Data descriptors are mapped by                     * 00094500
*                  ixcysrvr_tDataDescriptor which is defined in the   * 00094600
*                  IXCYSRVR macro.  A data descriptor specifies the   * 00094700
*                  length, ALET, and address of a contiguous virtual  * 00094800
*                  storage area where the response data for one       * 00094900
*                  response is to be stored.  The content,            * 00095000
*                  interpretation, and mapping of the response data   * 00095100
*                  stored in the storage area indicated by a data     * 00095200
*                  descriptor is determined by the responder.         * 00095300
*                                                                     * 00095400
*                  The data descriptor table is an array of entries.  * 00095500
*                  Each entry has the same fixed size, and can        * 00095600
*                  contain data other than the data descriptor.  The  * 00095700
*                  storage location named by DATADESC contains the    * 00095800
*                  first such data descriptor.  Subsequent            * 00095900
*                  descriptors are iteratively located by adding the  * 00096000
*                  value LENDDENTRY to the location of the current    * 00096100
*                  descriptor.                                        * 00096200
*                                                                     * 00096300
*                  The storage area defined by the data descriptor    * 00096400
*                  must reside in the primary address space of the    * 00096500
*                  caller, or in a space addressable via a public     * 00096600
*                  entry on the dispatchable unit access list         * 00096700
*                  (DU-AL), or in a common area data space.  The      * 00096800
*                  storage key of the data area must match the        * 00096900
*                  storage protect key indicated by the MSGSTGKEY     * 00097000
*                  keyword.                                           * 00097100
*                                                                     * 00097200
*                  There must be a data descriptor for each response  * 00097300
*                  to be received.  If not, the service routine       * 00097400
*                  returns with a return and reason code indicating   * 00097500
*                  that more descriptors are needed                   * 00097600
*                  (ixcrecvRsnMoreDataDesc).  Each such data          * 00097700
*                  descriptor must describe storage that is large     * 00097800
*                  enough to hold all the response data for the       * 00097900
*                  relevant response.  If not, the service routine    * 00098000
*                  returns with a return and reason code indicating   * 00098100
*                  that more storage is required                      * 00098200
*                  (ixcrecvRsnMoreDataArea).  In the ANSAREA, the     * 00098300
*                  dd_DataSize field within the data descriptor       * 00098400
*                  (md_DataDesc) for the response message descriptor  * 00098500
*                  (rd_MsgDesc) that is returned for each requested   * 00098600
*                  response indicates how much storage is needed for  * 00098700
*                  the associated response data.  The caller should   * 00098800
*                  obtain a sufficient number of descriptors with     * 00098900
*                  sufficiently large data area(s) and reissue the    * 00099000
*                  request before the IXCSEND hold time (HOLDTIME)    * 00099100
*                  timeout value for the message expires.             * 00099200
*                                                                     * 00099300
*                  In all cases, if the data area for any one         * 00099400
*                  response is too small to hold the relevant         * 00099500
*                  response data, or if the data descriptor table     * 00099600
*                  does not contain enough entries for all responses, * 00099700
*                  none of the responses will be stored.              * 00099800
*                                                                     * 00099900
*                  If response data is stored, the response           * 00100000
*                  descriptor in the ANSAREA can be used to locate    * 00100100
*                  the corresponding message data.                    * 00100200
*                                                                     * 00100300
*                  The storage area containing the data descriptor    * 00100400
*                  table must reside in the primary address space of  * 00100500
*                  the caller, or in a space addressable via a public * 00100600
*                  entry on the dispatchable unit access list         * 00100700
*                  (DU-AL), or in a common area data space.           * 00100800
*                                                                     * 00100900
*                                                                     * 00101000
*                  Ý#DATADESC=»x#datadesc!1º¨                         * 00101100
*                      is the name (RS-type), or address in register  * 00101200
*                      (2)-(12), of an optional fullword input        * 00101300
*                      variable which indicates the number of data    * 00101400
*                      descriptors in the data descriptor table.      * 00101500
*                      DEFAULT: 1                                     * 00101600
*                                                                     * 00101700
*                                                                     * 00101800
*                                                                     * 00101900
*                                                                     * 00102000
*                  ÝLENDDENTRY=»xlenddentry!16º¨                      * 00102100
*                      is the name (RS-type), or address in register  * 00102200
*                      (2)-(12), of an optional fullword input which  * 00102300
*                      indicates the length in bytes of each entry in * 00102400
*                      the data descriptor table.  As XCF iterates    * 00102500
*                      through the table, it locates the next         * 00102600
*                      descriptor by adding LENDDENTRY to the         * 00102700
*                      location of the current descriptor.            * 00102800
*                      LENDDENTRY must be greater than or equal to    * 00102900
*                      the length of one data descriptor, which is    * 00103000
*                      16.  If not specified, LENDDENTRY defaults to  * 00103100
*                      the length of one data descriptor.             * 00103200
*                      DEFAULT: 16                                    * 00103300
*                                                                     * 00103400
*                                                                     * 00103500
*                                                                     * 00103600
*                                                                     * 00103700
*                  ÝBIND=»TARGET!NEXTº¨                               * 00103800
*                      is an optional keyword input indicating how    * 00103900
*                      XCF is to associate entries in the data        * 00104000
*                      descriptor table to responses.                 * 00104100
*                      DEFAULT: TARGET                                * 00104200
*                                                                     * 00104300
*                                                                     * 00104400
*                      ÝBIND=TARGET¨                                  * 00104500
*                          Entries in the data descriptor table are   * 00104600
*                          in one to one correspondence with the      * 00104700
*                          targets of the message.  The number of     * 00104800
*                          entries in the data descriptor table must  * 00104900
*                          be greater than or equal to the number of  * 00105000
*                          message targets.  Entry "i" in the table   * 00105100
*                          describes where the response from target   * 00105200
*                          "i" is to be stored.  For example, if a    * 00105300
*                          request was sent to four targets, and only * 00105400
*                          targets 1 and 3 replied with response      * 00105500
*                          data.  With BIND=TARGET, the response data * 00105600
*                          from target 1 will be stored in the        * 00105700
*                          storage area described by data descriptor  * 00105800
*                          table entry 1, and the response data from  * 00105900
*                          target 3 will be stored in the storage     * 00106000
*                          area described by entry 3.  The storage    * 00106100
*                          areas described by entries 2 and 4 will    * 00106200
*                          not be used.                               * 00106300
*                                                                     * 00106400
*                      ÝBIND=NEXT¨                                    * 00106500
*                          Entries in the data descriptor table are   * 00106600
*                          to be used successively for the next       * 00106700
*                          response to be delivered.  For example, if * 00106800
*                          a request was sent to four targets, and    * 00106900
*                          only targets 1 and 3 replied with response * 00107000
*                          data.  With BIND=NEXT, the response data   * 00107100
*                          from target 1 will be stored in the        * 00107200
*                          storage area described by data descriptor  * 00107300
*                          table entry 1, and the response data from  * 00107400
*                          target 3 will be stored in the storage     * 00107500
*                          area described by entry 2.  The storage    * 00107600
*                          areas described by entries 3 and 4 will    * 00107700
*                          not be used.                               * 00107800
*                                                                     * 00107900
*                                                                     * 00108000
*                                                                     * 00108100
*                                                                     * 00108200
*                                                                     * 00108300
*                                                                     * 00108400
*                                                                     * 00108500
*              End of a set of mutually exclusive required keys.      * 00108600
*                                                                     * 00108700
*                                                                     * 00108800
*                                                                     * 00108900
*              ÝMSGSTGKEY=»xmsgstgkey!USERKEYº¨                       * 00109000
*                  is the name (RS-type), or address in register      * 00109100
*                  (2)-(12), of an optional 8 bit input containing    * 00109200
*                  the storage key to be used when storing the        * 00109300
*                  response data into the indicated data areas        * 00109400
*                  (either DATAAREA or the areas described by         * 00109500
*                  DATADESC).  The high order nibble contains the     * 00109600
*                  storage key, the low order nibble is ignored.  For * 00109700
*                  example, set 'kkkk' in the binary bit string       * 00109800
*                  'kkkkxxxx'B to correspond to the desired storage   * 00109900
*                  key.                                               * 00110000
*                                                                     * 00110100
*                  If MSGSTGKEY is not specified, the response data   * 00110200
*                  is stored using the PSW key in effect at the time  * 00110300
*                  the XCF Receive Service was called.                * 00110400
*                  DEFAULT: USERKEY                                   * 00110500
*                                                                     * 00110600
*                                                                     * 00110700
*                                                                     * 00110800
*                                                                     * 00110900
*                                                                     * 00111000
*                                                                     * 00111100
*                                                                     * 00111200
*                                                                     * 00111300
*      ÝRETCODE=xretcode¨                                             * 00111400
*          is the name (RS-type) of an optional fullword output       * 00111500
*          variable, or register (2)-(12) or (15), into which the     * 00111600
*          return code is to be copied from GPR 15.  If you specify   * 00111700
*          15, GPR15, REG15, or R15 (within or without parentheses),  * 00111800
*          the value will be left in GPR 15.                          * 00111900
*                                                                     * 00112000
*                                                                     * 00112100
*                                                                     * 00112200
*                                                                     * 00112300
*      ÝRSNCODE=xrsncode¨                                             * 00112400
*          is the name (RS-type) of an optional fullword output       * 00112500
*          variable into which the reason code is to be copied from   * 00112600
*          GPR 0.  If you specify 0, 00, GPR0, GPR00, REG0, REG00, or * 00112700
*          R0 (within or without parentheses), the value will be left * 00112800
*          in GPR 0.                                                  * 00112900
*                                                                     * 00113000
*                                                                     * 00113100
*                                                                     * 00113200
*                                                                     * 00113300
*      ÝPLISTVER=»xplistver!IMPLIED_VERSIONº¨                         * 00113400
*          is an optional byte input decimal value in the "0-0" range * 00113500
*          that specifies the macro version.  PLISTVER is the only    * 00113600
*          key allowed on the list form of MF and determines which    * 00113700
*          parameter list is generated.  Note that MAX may be         * 00113800
*          specified instead of a number, and the parameter list will * 00113900
*          be of the largest size currently supported. This size may  * 00114000
*          grow from release to release (thus possibly affecting the  * 00114100
*          amount of storage needed by your program).  If your        * 00114200
*          program can tolerate this, IBM recommends that you always  * 00114300
*          specify MAX when creating the list form parameter list as  * 00114400
*          that will ensure that the list form parameter list is      * 00114500
*          always long enough to hold whatever parameters might be    * 00114600
*          specified on the execute form.                             * 00114700
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00114800
*          default is the lowest version which allows all of the      * 00114900
*          parameters specified on the invocation to be processed.    * 00115000
*                                                                     * 00115100
*                                                                     * 00115200
*                                                                     * 00115300
*                                                                     * 00115400
*      ÝMF=»S!L!Eº¨                                                   * 00115500
*          is an optional keyword input which specifies the macro     * 00115600
*          form.                                                      * 00115700
*          DEFAULT: S                                                 * 00115800
*                                                                     * 00115900
*                                                                     * 00116000
*          ÝMF=S¨                                                     * 00116100
*              specifies the standard form of the macro.  The "S"     * 00116200
*              form generates code to put the parameters into an      * 00116300
*              in-line parameter list and invoke the desired service. * 00116400
*              Full checking for required macro keys is done along    * 00116500
*              with supplying defaults for omitted optional           * 00116600
*              parameters.                                            * 00116700
*                                                                     * 00116800
*          ÝMF=(L,xmfctrl»,xmfattr!0Dº)¨                              * 00116900
*              specifies the list form of the macro.  The "L" form    * 00117000
*              defines an area to be used for the parameter list.     * 00117100
*              Only the PLISTVER key may be specified on the          * 00117200
*              invocation.  All other macro parameters are flagged as * 00117300
*              errors.  If PLISTVER is not specified, the original    * 00117400
*              parameter list definition is used.                     * 00117500
*                                                                     * 00117600
*            ,xmfctrl                                                 * 00117700
*              is a required input.  It is the name of a storage area * 00117800
*              for the parameter list.                                * 00117900
*                                                                     * 00118000
*            »,xmfattr!0Dº                                            * 00118100
*              is an optional 60 character input string that varies   * 00118200
*              from 1 to 60 characters. Use it to force boundary      * 00118300
*              alignment of the parameter list. Use only 0F or 0D.    * 00118400
*              DEFAULT: 0D which forces the parameter list to a       * 00118500
*              doubleword boundary.                                   * 00118600
*                                                                     * 00118700
*          ÝMF=(E,xmfctrl»,COMPLETEº)¨                                * 00118800
*              specifies the execute form of the macro.  The "E" form * 00118900
*              generates code to put the parameters into the          * 00119000
*              parameter list specified by xmfctrl and provides full  * 00119100
*              syntax checking with default setting.                  * 00119200
*                                                                     * 00119300
*            ,xmfctrl                                                 * 00119400
*              is a required input.  It is the name (RS-type), or     * 00119500
*              address in register (1)-(12), of a storage area for    * 00119600
*              the parameter list.                                    * 00119700
*                                                                     * 00119800
*            »,COMPLETEº                                              * 00119900
*              is an optional keyword input which specifies the       * 00120000
*              degree of macro parameter syntax checking.             * 00120100
*              DEFAULT: COMPLETE                                      * 00120200
*                                                                     * 00120300
*                                                                     * 00120400
*              COMPLETE                                               * 00120500
*                  Checking for required macro keys is done and       * 00120600
*                  defaults are supplied for omitted optional         * 00120700
*                  parameters.                                        * 00120800
*                                                                     * 00120900
*                                                                     * 00121000
*                                                                     * 00121100
*                                                                     * 00121200
*                                                                     * 00121300
*                                                                     * 00121400
*                                                                     * 00121500
*01* RETURN CODES:                                                    * 00121600
*                                                                     * 00121700
*                                                                     * 00121800
*       0         IxcRetcodeOK:  Successful completion.               * 00121900
*                                                                     * 00122000
*                 As applicable, all requested data has been stored   * 00122100
*                 in the ANSAREA and specified data areas.            * 00122200
*                                                                     * 00122300
*                 For RECEIVE=STATUS, the message is complete.        * 00122400
*                                                                     * 00122500
*       4         IxcRetcodeWarning:  Successful completion, although * 00122600
*                 with exceptional circumstances.                     * 00122700
*                                                                     * 00122800
*                 HEX REASON       MEANING                            * 00122900
*                 CODE                                                * 00123000
*                                                                     * 00123100
*                                                                     * 00123200
*                 4           ixcrecvRsnMoreAnsArea:                  * 00123300
*                                                                     * 00123400
*                             ANSAREA too small.  The ANSAREA is      * 00123500
*                             large enough to hold the header         * 00123600
*                             (ixcysrvr_tAnsArea) but does not have   * 00123700
*                             room for all the descriptors.  The      * 00123800
*                             aa_AnsAreaSize returned in the ANSAREA  * 00123900
*                             indicates how much storage is required  * 00124000
*                             in order for the ANSAREA to hold all    * 00124100
*                             the descriptors.                        * 00124200
*                                                                     * 00124300
*                 5           ixcrecvRsnMoreDataArea:                 * 00124400
*                                                                     * 00124500
*                             Need more storage for response data.    * 00124600
*                             If DATAAREA was specified, DATAAREA is  * 00124700
*                             not large enough to receive all the     * 00124800
*                             requested response data.  The           * 00124900
*                             aa_DataAreaSize returned in the ANSAREA * 00125000
*                             indicates how much storage is required. * 00125100
*                             If DATADESC was specified, at least one * 00125200
*                             storage area described by a data        * 00125300
*                             descriptor was too small for the        * 00125400
*                             response data.  In the ANSAREA, the     * 00125500
*                             dd_DataSize field in the response       * 00125600
*                             message descriptor (rd_MsgDesc) within  * 00125700
*                             the relevant response descriptor(s)     * 00125800
*                             (ixcysrvr_tResponseDescriptor)          * 00125900
*                             indicates how much storage is needed    * 00126000
*                             for the response data.                  * 00126100
*                                                                     * 00126200
*                 6           ixcrecvRsnMoreDataDesc:                 * 00126300
*                                                                     * 00126400
*                             DATADESC needs more entries.  There     * 00126500
*                             must be an entry for each response.     * 00126600
*                             The aa_#RepliesAvailable returned in    * 00126700
*                             the ANSAREA indicates how many entries  * 00126800
*                             are needed.                             * 00126900
*                                                                     * 00127000
*                 8           ixcrecvRsnPending:                      * 00127100
*                                                                     * 00127200
*                             The message is still pending.  Not all  * 00127300
*                             the expected results have been          * 00127400
*                             received.  There are no undelivered     * 00127500
*                             results available for processing.       * 00127600
*                                                                     * 00127700
*                 0C          ixcrecvRsnAvailable:                    * 00127800
*                                                                     * 00127900
*                             The message is still pending.  Not all  * 00128000
*                             the expected results have been          * 00128100
*                             received.  There are undelivered        * 00128200
*                             results available for processing.       * 00128300
*                                                                     * 00128400
*                                                                     * 00128500
*                                                                     * 00128600
*       8         IxcRetCodeParmError: Invalid parameters             * 00128700
*                                                                     * 00128800
*                 HEX REASON       MEANING                            * 00128900
*                 CODE                                                * 00129000
*                                                                     * 00129100
*                                                                     * 00129200
*                 00010004    ixcrecvRsnBadStgPlist:                  * 00129300
*                                                                     * 00129400
*                             Parameter list is not accessible.       * 00129500
*                             Storage is not addressable.             * 00129600
*                                                                     * 00129700
*                 00010008    ixcrecvRsnBadAletPlist:                 * 00129800
*                                                                     * 00129900
*                             Parameter list is not accessible.  The  * 00130000
*                             ALET for the parameter list storage is  * 00130100
*                             not valid.                              * 00130200
*                                                                     * 00130300
*                 0001000C    ixcrecvRsnBadValAnsLen:                 * 00130400
*                                                                     * 00130500
*                             ANSAREA is too small.  It must be at    * 00130600
*                             least large enough to hold the header   * 00130700
*                             (ixcysrvr_tAnsArea).                    * 00130800
*                                                                     * 00130900
*                 00010018    ixcrecvRsnBadPlistVersion:              * 00131000
*                                                                     * 00131100
*                             Invalid parameter list.  Version number * 00131200
*                             in parameter list is not supported.     * 00131300
*                                                                     * 00131400
*                 00010048    ixcrecvRsnMsgNotFound:                  * 00131500
*                                                                     * 00131600
*                             The message identified by the MSGTOKEN  * 00131700
*                             no longer exists.  The message could    * 00131800
*                             have completed or been discarded.       * 00131900
*                             Typically, a message is not found       * 00132000
*                             because:                                * 00132100
*                                                                     * 00132200
*                                                                     * 00132300
*                             o   It was delivered via a prior        * 00132400
*                                 IXCRECV invocation.                 * 00132500
*                                                                     * 00132600
*                             o   The HOLDTIME specified on the       * 00132700
*                                 originating IXCSEND invocation      * 00132800
*                                 expired.                            * 00132900
*                                                                     * 00133000
*                             o   It was deleted when the XCF Message * 00133100
*                                 Control Service (IXCMSGC)           * 00133200
*                                 REQUEST=DISCARDMSG was invoked.     * 00133300
*                                                                     * 00133400
*                             o   The RECVBIND entity identified by   * 00133500
*                                 the originating IXCSEND invocation  * 00133600
*                                 terminated.                         * 00133700
*                                                                     * 00133800
*                                                                     * 00133900
*                                                                     * 00134000
*                 000100EE    ixcrecvRsnBadEnvNotEnabled:             * 00134100
*                                                                     * 00134200
*                             Program error.  Caller is not running   * 00134300
*                             enabled.                                * 00134400
*                                                                     * 00134500
*                 00020004    ixcrecvRsnBadStgAnsArea:                * 00134600
*                                                                     * 00134700
*                             Answer area is not accessible.  Storage * 00134800
*                             pointed to by ANSAREA is not            * 00134900
*                             addressable.                            * 00135000
*                                                                     * 00135100
*                 00020008    ixcrecvRsnBadAletAnsArea:               * 00135200
*                                                                     * 00135300
*                             Answer area is not accessible.  The     * 00135400
*                             ALET for the storage pointed to by      * 00135500
*                             ANSAREA is not valid.                   * 00135600
*                                                                     * 00135700
*                 0002000C    ixcrecvRsnBadValMsgToken:               * 00135800
*                                                                     * 00135900
*                             MSGTOKEN value does not represent a     * 00136000
*                             valid message token.                    * 00136100
*                                                                     * 00136200
*                 00020018    ixcrecvRsnBadPlistRsvd:                 * 00136300
*                                                                     * 00136400
*                             Invalid parameter list.  A reserved     * 00136500
*                             field in the parameter list is not      * 00136600
*                             zero.                                   * 00136700
*                                                                     * 00136800
*                 000200EE    ixcrecvRsnBadEnvLocked:                 * 00136900
*                                                                     * 00137000
*                             Program error.  Caller is holding a     * 00137100
*                             lock.                                   * 00137200
*                                                                     * 00137300
*                 00030008    ixcrecvRsnBadAletDataArea:              * 00137400
*                                                                     * 00137500
*                             Data area is not accessible.  The ALET  * 00137600
*                             for the storage pointed to by DATAAREA  * 00137700
*                             or by one of the DATADESC table entries * 00137800
*                             is not valid.                           * 00137900
*                                                                     * 00138000
*                 0003000C    ixcrecvRsnBadValLenDdEntry:             * 00138100
*                                                                     * 00138200
*                             LENDDENTRY value is not valid.          * 00138300
*                             LENDDENTRY must be greater than or      * 00138400
*                             equal to the length of one data         * 00138500
*                             descriptor, which is 16.                * 00138600
*                                                                     * 00138700
*                 00030018    ixcrecvRsnBadPlistReceive:              * 00138800
*                                                                     * 00138900
*                             Invalid RECEIVE parameter.  RECEIVE     * 00139000
*                             must specify RESPONSES or STATUS.       * 00139100
*                                                                     * 00139200
*                 00040004    ixcrecvRsnBadStgDataArea:               * 00139300
*                                                                     * 00139400
*                             Data area storage is not accessible.    * 00139500
*                             The storage pointed to by DATAAREA or   * 00139600
*                             by one of the DATADESC table entries is * 00139700
*                             not addressable.                        * 00139800
*                                                                     * 00139900
*                 00040008    ixcrecvRsnBadAletDataDesc:              * 00140000
*                                                                     * 00140100
*                             DATADESC table is not accessible.  The  * 00140200
*                             ALET for the DATADESC table storage is  * 00140300
*                             not valid.                              * 00140400
*                                                                     * 00140500
*                 00040018    ixcrecvRsnBadPlistDataArea:             * 00140600
*                                                                     * 00140700
*                             Invalid data area parameter.  Either    * 00140800
*                             DATAAREA, DATADESC, or NODATA must be   * 00140900
*                             specified.                              * 00141000
*                                                                     * 00141100
*                 00050004    ixcrecvRsnBadStgDataDesc:               * 00141200
*                                                                     * 00141300
*                             DATADESC table is not accessible.       * 00141400
*                             Storage is not addressable.             * 00141500
*                                                                     * 00141600
*                 00050018    ixcrecvRsnBadPlistScope:                * 00141700
*                                                                     * 00141800
*                             Invalid SCOPE parameter.  SCOPE must    * 00141900
*                             specify ALL.                            * 00142000
*                                                                     * 00142100
*                 00060004    ixcrecvRsnPageProtectDataArea:          * 00142200
*                                                                     * 00142300
*                             Data area is not accessible.  Storage   * 00142400
*                             pointed to by DATAAREA or by one of the * 00142500
*                             DATADESC table entries is page          * 00142600
*                             protected.                              * 00142700
*                                                                     * 00142800
*                 00060018    ixcrecvRsnBadPlistReqType:              * 00142900
*                                                                     * 00143000
*                             Invalid REQTYPE parameter.  REQTYPE     * 00143100
*                             must specify BLOCKING.                  * 00143200
*                                                                     * 00143300
*                 00070004    ixcrecvRsnKeyMismatchDataArea:          * 00143400
*                                                                     * 00143500
*                             Data area is not accessible.  The       * 00143600
*                             storage area pointed to by DATAAREA or  * 00143700
*                             by one of the DATADESC table entries    * 00143800
*                             cannot be stored into using the storage * 00143900
*                             key indicated by MSGSTGKEY.             * 00144000
*                                                                     * 00144100
*                                                                     * 00144200
*                                                                     * 00144300
*                                                                     * 00144400
*       C         IxcRetCodeEnvError: Environmental error             * 00144500
*                                                                     * 00144600
*                 HEX REASON       MEANING                            * 00144700
*                 CODE                                                * 00144800
*                                                                     * 00144900
*                                                                     * 00145000
*                 C04         ixcrecvRsnActiveReceiver:               * 00145100
*                                                                     * 00145200
*                             Some other work unit is currently in    * 00145300
*                             the midst of receive processing for     * 00145400
*                             this message.  Try again later.         * 00145500
*                                                                     * 00145600
*                 C05         ixcrecvRsnBlockingConflict:             * 00145700
*                                                                     * 00145800
*                             Some other work unit is currently in    * 00145900
*                             the midst of a blocking receive that    * 00146000
*                             conflicts with the receive request.     * 00146100
*                             For example, if a SCOPE=ALL receiver is * 00146200
*                             already blocked waiting for the message * 00146300
*                             to complete, no other blocking receive  * 00146400
*                             can be accepted.                        * 00146500
*                                                                     * 00146600
*                 C08         ixcrecvRsnNeedResources:                * 00146700
*                                                                     * 00146800
*                             The request could not be processed      * 00146900
*                             because the system was unable to obtain * 00147000
*                             the resources needed to process the     * 00147100
*                             request.                                * 00147200
*                                                                     * 00147300
*                 C10         ixcrecvRsnReleased:                     * 00147400
*                                                                     * 00147500
*                             Blocked receiver was released, no       * 00147600
*                             responses received.                     * 00147700
*                                                                     * 00147800
*                             This reason code applies only when      * 00147900
*                             REQTYPE=BLOCKING is specified.  The XCF * 00148000
*                             Message Control Service (IXCMSGC        * 00148100
*                             REQUEST=RELEASEMSG) was used to release * 00148200
*                             the service routine while it was        * 00148300
*                             blocked and waiting for responses to    * 00148400
*                             arrive.  No information is stored in    * 00148500
*                             the answer area or the data area.       * 00148600
*                                                                     * 00148700
*                 C11         ixcrecvRsnMsgDiscarded                  * 00148800
*                                                                     * 00148900
*                             Message discarded, no responses         * 00149000
*                             received.                               * 00149100
*                                                                     * 00149200
*                             The message identified by the MSGTOKEN  * 00149300
*                             was discarded by the IXCMSGC DISCARDMSG * 00149400
*                             service.  The XCF Message Control       * 00149500
*                             Service (IXCMSGC REQUEST=DISCARDMSG)    * 00149600
*                             was used to discard the message         * 00149700
*                             identified by the MSGTOKEN while the    * 00149800
*                             service routine was blocked and waiting * 00149900
*                             for responses to arrive.  No            * 00150000
*                             information is stored in the answer     * 00150100
*                             area or the data area.                  * 00150200
*                                                                     * 00150300
*                 C12         ixcrecvRsnBadBlockingEnv                * 00150400
*                                                                     * 00150500
*                             IXCRECV REQTYPE=BLOCKING can not be     * 00150600
*                             issued from a SUSPEND exit routine or   * 00150700
*                             from an SRB routine that the system     * 00150800
*                             abended with a 47B system completion    * 00150900
*                             code.                                   * 00151000
*                                                                     * 00151100
*                 C13         ixcrecvRsnSystemNotReady                * 00151200
*                                                                     * 00151300
*                             The system is not ready to process the  * 00151400
*                             IXCRECV request.  Retry the request     * 00151500
*                             after allowing time for the system to   * 00151600
*                             complete the necessary initialization.  * 00151700
*                                                                     * 00151800
*                 C14         ixcrecvRsnRecvBindTerm                  * 00151900
*                                                                     * 00152000
*                             The receive bind entity identified on   * 00152100
*                             the RECVBIND keyword of the IXCSEND     * 00152200
*                             request for which this IXCRECV call was * 00152300
*                             made for has terminated and the message * 00152400
*                             results have been discarded by XCF      * 00152500
*                                                                     * 00152600
*                                                                     * 00152700
*                                                                     * 00152800
*                                                                     * 00152900
*       10        IxcRetCodeCompError: Failure in XCF processing      * 00153000
*                                                                     * 00153100
*                                                                     * 00153200
*                                                                     * 00153300
*01* REASON CODES:                                                    * 00153400
*                                                                     * 00153500
*       A unique reason code will be returned whenever the return     * 00153600
*       code is non-zero.                                             * 00153700
*                                                                     * 00153800
*01* MODULE TYPE:  ASSEM MACRO                                        * 00153900
*                                                                     * 00154000
*02*   PROCESSOR:  ASSEM                                              * 00154100
*                                                                     * 00154200
*01* COMPONENT:  SCXCF                                                * 00154300
*                                                                     * 00154400
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00154500
*                                                                     * 00154600
*01* ABEND CODES:                                                     * 00154700
*                                                                     * 00154800
*                                                                     * 00154900
*       073       Environment not valid. The caller held a lock.      * 00155000
*                                                                     * 00155100
*       C78       XCF could not obtain storage to process the         * 00155200
*                 request.  Try again later.                          * 00155300
*                                                                     * 00155400
*                                                                     * 00155500
*                                                                     * 00155600
*01* MACRO USAGE NOTES:                                               * 00155700
*                                                                     * 00155800
*                                                                     * 00155900
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00156000
*        global macro variable.  Any value other than 'NO' will       * 00156100
*        result in the macro expansion being printed.  The default is * 00156200
*        'YES'.  The following examples illustrate how the ZPRINT     * 00156300
*        variable should be set.                                      * 00156400
*                                                                     * 00156500
*                    GBLC &ZPRINT                                     * 00156600
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00156700
*                                                                     * 00156800
*                                                                     * 00156900
*    2.  All keys currently contained in the IXCRECV macro correspond * 00157000
*        to  version 0.  If you specify PLISTVER, use a value of 0 or * 00157100
*        MAX.                                                         * 00157200
*                                                                     * 00157300
*                                                                     * 00157400
*                                                                     * 00157500
*                                                                     * 00157600
*01* CHANGE ACTIVITY:                                                 * 00157700
*                                                                     * 00157800
*   Flag LineItem  FMID    Date   ID    Comment                       * 00157900
*                                                                     * 00158000
*    $L0=XCFSRVR  HBB7780 100215 PD00BJ:  XCF Client/Server           * 00158100
*    $P1=OA36283  HBB7780 110321 PD00C9:  Clear R14 in assembler      * 00158200
*                                         linkage (TRSQ for ME21339)  * 00158300
*    $01=OA50980  HBB77B0 161021 PD00BJ:  Additional "not found"      * 00158400
*                                         commentary.                 * 00158500
****** END OF SPECIFICATIONS *****************************************/ 00158600
*/********************************************************************* 00158700
         MACRO                                                          00158800
&XLABEL  IXCRECV &MSGTOKEN=,&RECEIVE=,&REQTYPE=,&SCOPE=,&ANSAREA=,     *00158900
               &ANSLEN=,&DATAAREA=,&DATALEN=,&DATADESC=,&#DATADESC=,   *00159000
               &LENDDENTRY=,&BIND=,&MSGSTGKEY=,&RETCODE=,&RSNCODE=,    *00159100
               &PLISTVER=,&MF=                                          00159200
.*                                                                      00159300
*                MACDATE -01/13/18-<0>                                  00159400
.*                                                                      00159500
.*******************************************************************    00159600
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00159700
.*******************************************************************    00159800
                GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                 00159900
                GBLC  &ZTEST      YES=TEST NO=NO TEST                   00160000
                GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX           00160100
.*                                                                      00160200
                GBLC  &ZIXCRECV   YES=MACRO USED AT LEAST ONCE          00160300
.*******************************************************************    00160400
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00160500
.*******************************************************************    00160600
                LCLC  &ZMS        ERROR MESSAGE WORK AREA               00160700
                LCLC  &ZCNDX      SYSNDX CHARACTERS                     00160800
                LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED            00160900
                LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR           00161000
                LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE           00161100
                LCLA  &ZAWRK      USED AS A WORK AREA                   00161200
                LCLA  &ZASIZ      USED FOR SIZE OF VALUE                00161300
                LCLA  &ZN         NUMERIC WORK VARIABLE                 00161400
                LCLC  &ZC         CHARACTER WORK VARIABLE               00161500
                LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE           00161600
                LCLA  &ZTLA       VALUE TOO LONG VARIABLE               00161700
                LCLC  &ZMAC_G     "G" or null                           00161800
&ZMAC_G         SETC  ''                                                00161900
                LCLC  &ZMAC_LR                                          00162000
&ZMAC_LR        SETC  'LR'                                              00162100
                LCLC  &ZMAC_L                                           00162200
&ZMAC_L         SETC  'L'                                               00162300
                LCLC  &ZMAC_ST                                          00162400
&ZMAC_ST        SETC  'ST'                                              00162500
                LCLC  &ZMAC_LLGT                                        00162600
&ZMAC_LLGT      SETC  'L'                                               00162700
                LCLC  &ZMAC_LGR                                         00162800
&ZMAC_LGR       SETC  'LR'                                              00162900
                LCLC  &ZMAC_LG                                          00163000
&ZMAC_LG        SETC  'L'                                               00163100
                LCLC  &ZMAC_STG                                         00163200
&ZMAC_STG       SETC  'ST'                                              00163300
                LCLA  &ZMACRET    MACRO RETURN CODE                     00163400
&ZMACRET        SETA  0           ASSUME NO ERRORS                      00163500
.*                                                                      00163600
                LCLC  &ZCSYSLIST(255)           NONXKEY, POS ARRAY      00163700
                LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()            00163800
                LCLA  &ZPLLEN     PARAMETER LIST LENGTH                 00163900
                LCLC  &ZENDBASEPL               End of base PL          00164000
                LCLA  &ZPLWORKA   PARAMETER LIST LENGTH                 00164100
.*******************************************************************    00164200
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00164300
.*******************************************************************    00164400
                LCLA  &ZI         INDEX FOR ARRAY                       00164500
                LCLA  &ZJ         INDEX FOR PARMS                       00164600
                LCLA  &ZK         INDEX FOR PARSE                       00164700
                LCLA  &ZLO        LOW RANGE VALUE                       00164800
                LCLA  &ZHI        HIGH RANGE VALUE                      00164900
                LCLC  &ZW         WORK AREA FOR PARM                    00165000
.********************************************************************   00165100
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00165200
.********************************************************************   00165300
                GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL               00165400
                GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE        00165500
                GBLA  &SYSALVL    SYSSTATE ARCHLVL                      00165600
                GBLC  &SYSAM64    SYSSTATE AMODE64                      00165700
.*                                                                      00165800
                AIF   (K'&SYSASCE GT 0).ZSYS4   SYS STATE DEFINED       00165900
                AIF   (K'&SYSSPLV GT 0).ZSYS2   SP LEVEL DEFINED        00166000
                SPLEVEL  TEST                                           00166100
.ZSYS2          ANOP  ,                                                 00166200
                AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1             00166300
                AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1             00166400
                SYSSTATE TEST                                           00166500
                AGO   .ZSYS4                                            00166600
.ZSYS3          ANOP  ,                                                 00166700
&SYSASCE        SETC  'P'         ASSUME SYSSTATE PRIMARY               00166800
.ZSYS4          ANOP  ,                                                 00166900
                AIF   ('&SYSAM64' NE 'YES').ZSYSN64                     00167000
&ZMAC_LLGT      SETC 'LLGT'                                             00167100
&ZMAC_LGR       SETC 'LGR'                                              00167200
&ZMAC_LG        SETC 'LG'                                               00167300
&ZMAC_STG       SETC 'STG'                                              00167400
.ZSYSN64        ANOP  ,                                                 00167500
                AIF   (&SYSALVL LE 1).ZSYS4A                            00167600
&ZMAC_G         SETC 'G'                                                00167700
&ZMAC_LR        SETC 'LGR'                                              00167800
&ZMAC_L         SETC 'LG'                                               00167900
&ZMAC_ST        SETC 'STG'                                              00168000
.ZSYS4A         ANOP  ,                                                 00168100
.*******************************************************************    00168200
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00168300
.*******************************************************************    00168400
                LCLC  &XMSGTOKEN  ++ NAME                               00168500
                LCLC  &XRECEIVE   ++ VALUE                              00168600
                LCLC  &XREQTYPE   ++ VALUE                              00168700
                LCLC  &XSCOPE     ++ VALUE                              00168800
                LCLC  &XANSAREA   ++ NAME                               00168900
                LCLC  &XANSLEN    ++ NAME                               00169000
                LCLC  &XAREAORDESC              ++ NAME                 00169100
                LCLC  &XNODATA    ++ NAME                               00169200
                LCLC  &XDATAAREA  ++ NAME                               00169300
                LCLC  &XDATALEN   ++ NAME                               00169400
                LCLC  &XDATADESC  ++ NAME                               00169500
                LCLC  &X#DATADESC               ++ NAME                 00169600
                LCLC  &XLENDDENTRY              ++ NAME                 00169700
                LCLC  &XBIND      ++ VALUE                              00169800
                LCLC  &XMSGSTGKEY               ++ NAME                 00169900
                LCLC  &XRETCODE   ++ NAME                               00170000
                LCLC  &XRSNCODE   ++ NAME                               00170100
                LCLA  &XPLISTVER  ++ VALUE                              00170200
                LCLC  &XMF        ++ VALUE                              00170300
                LCLC  &XMFCTRL    ++ NAME                               00170400
                LCLC  &XMFATTR    ++ VALUE                              00170500
                LCLC  &XMFSCK     ++ VALUE                              00170600
.*******************************************************************    00170700
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00170800
.*******************************************************************    00170900
                LCLC  &ZXMSGTOKEN               ++ INPUT NAME           00171000
                LCLC  &ZXRECEIVE  ++ INPUT VALUE                        00171100
                LCLC  &ZXREQTYPE  ++ INPUT VALUE                        00171200
                LCLC  &ZXSCOPE    ++ INPUT VALUE                        00171300
                LCLC  &ZXANSAREA  ++ INPUT NAME                         00171400
                LCLC  &ZXANSLEN   ++ INPUT NAME                         00171500
                LCLC  &ZXAREAORDESC             ++ INPUT NAME           00171600
                LCLC  &ZXNODATA   ++ INPUT NAME                         00171700
                LCLC  &ZXDATAAREA               ++ INPUT NAME           00171800
                LCLC  &ZXDATALEN  ++ INPUT NAME                         00171900
                LCLC  &ZXDATADESC               ++ INPUT NAME           00172000
                LCLC  &ZX#DATADESC              ++ INPUT NAME           00172100
                LCLC  &ZXLENDDENTRY             ++ INPUT NAME           00172200
                LCLC  &ZXBIND     ++ INPUT VALUE                        00172300
                LCLC  &ZXMSGSTGKEY              ++ INPUT NAME           00172400
                LCLC  &ZXRETCODE  ++ OUTPUT NAME                        00172500
                LCLC  &ZXRSNCODE  ++ OUTPUT NAME                        00172600
                LCLC  &ZXPLISTVER               ++ INPUT VALUE          00172700
                LCLC  &ZXMF       ++ INPUT VALUE                        00172800
                LCLC  &ZXMFCTRL   ++ INPUT NAME                         00172900
                LCLC  &ZXMFATTR   ++ INPUT VALUE                        00173000
                LCLC  &ZXMFSCK    ++ INPUT VALUE                        00173100
.********************************************************************   00173200
.***AC.PLV01  PROCESS PLISTVER                                      *   00173300
.********************************************************************   00173400
&XPLISTVER      SETA  0                                                 00173500
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00173600
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00173700
&XPLISTVER      SETA  0                                                 00173800
.ZPLV0          ANOP  ,                                                 00173900
.*                                                                      00174000
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00174100
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00174200
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00174300
.*-------------------------------------------------------------------   00174400
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00174500
&ZMS            SETC  '"PLISTVER='                                      00174600
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00174700
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00174800
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00174900
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00175000
                AGO   .ZPVCK2                                           00175100
.ZPVCK3         ANOP  ,                                                 00175200
.*-------------------------------------------------------------------   00175300
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00175400
&ZMS            SETC  '"PLISTVER='                                      00175500
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00175600
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00175700
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00175800
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00175900
                AGO   .ZPVCKE                                           00176000
.ZPVCK2         ANOP  ,                                                 00176100
.*-------------------------------------------------------------------   00176200
&ZCVAL          SETC  '&PLISTVER(1)'                                    00176300
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00176400
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00176500
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00176600
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00176700
                AIF   (&ZN LE 0).ZPVCK4A   NOT HIGH                     00176800
.ZPVCK6         ANOP  ,                                                 00176900
&ZMS            SETC  '"PLISTVER='                                      00177000
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00177100
&ZMS            SETC  '&ZMS THE RANGE IS "0-0"'                         00177200
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00177300
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00177400
&XPLISTVER      SETA  0                                                 00177500
                AGO   .ZPVCKE                                           00177600
.*-------------------------------------------------------------------   00177700
.ZPVCK4A        ANOP  ,                                                 00177800
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00177900
&ZMS            SETC  'PLISTVER='                                       00178000
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00178100
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00178200
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00178300
                MNOTE 8,' &ZMS IS REQUIRED.'                            00178400
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00178500
                AGO   .ZPVCK5                                           00178600
.ZPVCK4         ANOP  ,                                                 00178700
&XPLISTVER      SETA  &PLISTVER(1)                                      00178800
.ZPVCK5         ANOP  ,                                                 00178900
.ZPVCKE         ANOP  ,                                                 00179000
.********************************************************************   00179100
.***AG.MF01 PROCESS MF MACRO FORMS                                      00179200
.********************************************************************   00179300
                ACTR  10000                                             00179400
.*------------------------------------------------------------------    00179500
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00179600
&XMF            SETC  ''          INITIALIZE XVARIABLE                  00179700
.*-------------------------------------------------------------------   00179800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00179900
.ZG56           ANOP  ,                                                 00180000
&ZTLC           SETC 'S'                                                00180100
                AIF   ('&MF(1)' NE '&ZTLC').ZG57                        00180200
&XMF            SETC  'S'         SET KEYWORD                           00180300
                AIF   (N'&MF LE 1).ZG56A        CK NUM                  00180400
&ZMS            SETC  '"MF='                                            00180500
&ZMS            SETC  '&ZMS.&MF"'                                       00180600
&ZMS            SETC  '&ZMS "MF"'                                       00180700
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00180800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00180900
.ZG56A          ANOP  ,                                                 00181000
.*-------------------------------------------------------------------   00181100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00181200
.ZG57           ANOP  ,                                                 00181300
&ZTLC           SETC 'L'                                                00181400
                AIF   ('&MF(1)' NE '&ZTLC').ZG64                        00181500
&XMF            SETC  'L'         SET KEYWORD                           00181600
                AIF   (N'&MF LE 3).ZG57A        CK NUM                  00181700
&ZMS            SETC  '"MF='                                            00181800
&ZMS            SETC  '&ZMS.&MF"'                                       00181900
&ZMS            SETC  '&ZMS "MF"'                                       00182000
                MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'              00182100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00182200
.ZG57A          ANOP  ,                                                 00182300
.*-------------------------------------------------------------------   00182400
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00182500
                AIF   (N'&SYSLIST NE 0).ZG57B   POSITIONALS?            00182600
                AIF   ('&MSGTOKEN' NE '').ZG57B  KEYS?                  00182700
                AIF   ('&RECEIVE' NE '').ZG57B  KEYS?                   00182800
                AIF   ('&REQTYPE' NE '').ZG57B  KEYS?                   00182900
                AIF   ('&SCOPE' NE '').ZG57B    KEYS?                   00183000
                AIF   ('&ANSAREA' NE '').ZG57B  KEYS?                   00183100
                AIF   ('&ANSLEN' NE '').ZG57B   KEYS?                   00183200
                AIF   ('&DATAAREA' NE '').ZG57B  KEYS?                  00183300
                AIF   ('&DATALEN' NE '').ZG57B  KEYS?                   00183400
                AIF   ('&DATADESC' NE '').ZG57B  KEYS?                  00183500
                AIF   ('&#DATADESC' NE '').ZG57B  KEYS?                 00183600
                AIF   ('&LENDDENTRY' NE '').ZG57B  KEYS?                00183700
                AIF   ('&BIND' NE '').ZG57B     KEYS?                   00183800
                AIF   ('&MSGSTGKEY' NE '').ZG57B  KEYS?                 00183900
                AIF   ('&RETCODE' NE '').ZG57B  KEYS?                   00184000
                AIF   ('&RSNCODE' NE '').ZG57B  KEYS?                   00184100
                AGO    .ZG57C     INVOCATION OKAY                       00184200
.ZG57B          ANOP  ,                                                 00184300
&ZMS            SETC  'THE "L" FORM OF "MF"'                            00184400
&ZMS            SETC  '&ZMS CAN ONLY HAVE'                              00184500
&ZMS            SETC  '&ZMS THE "PLISTVER" KEY'                         00184600
                MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'            00184700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00184800
.ZG57C          ANOP  ,                                                 00184900
.*-------------------------------------------------------------------   00185000
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00185100
&ZXMFCTRL       SETC  'INPUT'     SET IN/OUTPUT                         00185200
&XMFCTRL        SETC  '&MF(2,1)'  SET XVARIABLE                         00185300
                AIF   (N'&MF(2) GT 1).ZG59B     MULTI                   00185400
&XMFCTRL        SETC  '&MF(2)'    SET XVARIABLE                         00185500
.ZG59B          AIF   (K'&MF(2) GT 0).ZG59C                             00185600
&ZXMFCTRL       SETC  ''          RESET IN/OUTPUT                       00185700
&ZMS            SETC  'WHEN "L" IS SPECIFIED'                           00185800
&ZMS            SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'               00185900
                MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                      00186000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00186100
.ZG59C          ANOP  ,                                                 00186200
.*-------------------------------------------------------------------   00186300
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00186400
                AIF   (K'&ZXMFCTRL LE 0).ZG59P  NOT I/O                 00186500
                AIF   ('&XMFCTRL'(1,1) NE '(').ZG59P                    00186600
&ZXMFCTRL       SETC  ''          RESET IN/OUTPUT                       00186700
&ZMS            SETC  '"MF='                                            00186800
&ZMS            SETC  '&ZMS.&MF"'                                       00186900
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00187000
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'                 00187100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00187200
.ZG59P          ANOP  ,                                                 00187300
.*-------------------------------------------------------------------   00187400
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00187500
&ZXMFATTR       SETC  'INPUT'     SET IN/OUTPUT                         00187600
&XMFATTR        SETC  '0D'                                              00187700
                AIF   (K'&MF(3) LE 0).ZG62B     PARM                    00187800
&XMFATTR        SETC  '&MF(3,1)'  SET XVARIABLE                         00187900
                AIF   (N'&MF(3) GT 1).ZG62B     MULTI                   00188000
&XMFATTR        SETC  '&MF(3)'    SET XVARIABLE                         00188100
.ZG62B          ANOP  ,                                                 00188200
.*-------------------------------------------------------------------   00188300
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00188400
                AIF   (K'&ZXMFATTR LE 0).ZG62P  NOT I/O                 00188500
                AIF   ('&XMFATTR'(1,1) NE '(').ZG62P                    00188600
&ZXMFATTR       SETC  ''          RESET IN/OUTPUT                       00188700
&ZMS            SETC  '"MF='                                            00188800
&ZMS            SETC  '&ZMS.&MF"'                                       00188900
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00189000
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'                 00189100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00189200
.ZG62P          ANOP  ,                                                 00189300
.*-------------------------------------------------------------------   00189400
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00189500
                AIF   (K'&ZXMFATTR LE 0).ZG62S  NOT I/O                 00189600
                AIF   (K'&XMFATTR LE 60).ZG62S  LNG OK                  00189700
&ZXMFATTR       SETC  ''          RESET IN/OUTPUT                       00189800
&ZMS            SETC  '"MF='                                            00189900
&ZMS            SETC  '&ZMS.&MF"'                                       00190000
&ZMS            SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'             00190100
                MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'                00190200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00190300
.ZG62S          ANOP  ,                                                 00190400
.*-------------------------------------------------------------------   00190500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00190600
.ZG64           ANOP  ,                                                 00190700
&ZTLC           SETC 'E'                                                00190800
                AIF   ('&MF(1)' NE '&ZTLC').ZG72                        00190900
&XMF            SETC  'E'         SET KEYWORD                           00191000
                AIF   (N'&MF LE 3).ZG64A        CK NUM                  00191100
&ZMS            SETC  '"MF='                                            00191200
&ZMS            SETC  '&ZMS.&MF"'                                       00191300
&ZMS            SETC  '&ZMS "MF"'                                       00191400
                MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'              00191500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00191600
.ZG64A          ANOP  ,                                                 00191700
.*-------------------------------------------------------------------   00191800
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00191900
&ZXMFCTRL       SETC  'INPUT'     SET IN/OUTPUT                         00192000
&XMFCTRL        SETC  '&MF(2,1)'  SET XVARIABLE                         00192100
                AIF   (N'&MF(2) GT 1).ZG66B     MULTI                   00192200
&XMFCTRL        SETC  '&MF(2)'    SET XVARIABLE                         00192300
.ZG66B          AIF   (K'&MF(2) GT 0).ZG66C                             00192400
&ZXMFCTRL       SETC  ''          RESET IN/OUTPUT                       00192500
&ZMS            SETC  'WHEN "E" IS SPECIFIED'                           00192600
&ZMS            SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'               00192700
                MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                      00192800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00192900
.ZG66C          ANOP  ,                                                 00193000
.*-------------------------------------------------------------------   00193100
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00193200
                AIF   (K'&ZXMFCTRL LE 0).ZG66R  NOT I/O                 00193300
                AIF   ('&XMFCTRL'(1,1) NE '(').ZG66R                    00193400
&ZCGPR          SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                        00193500
                AIF   ('&ZCGPR'(1,1) NE '0').ZG66P                      00193600
                AIF   (K'&ZCGPR GT 2).ZG66Q                             00193700
                AIF   ('&ZCGPR' EQ '0').ZG66Q                           00193800
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00193900
                AIF   (T'&ZCGPR NE 'N').ZG66Q   INVALID REG NAME        00194000
.ZG66P          ANOP  ,                                                 00194100
                AIF   (T'&ZCGPR NE 'N').ZG66R   NON NUMERIC             00194200
                AIF   ('&ZCGPR' LT '1').ZG66Q                           00194300
                AIF   ('&ZCGPR' LE '12').ZG66R                          00194400
.ZG66Q          ANOP  ,                                                 00194500
&ZMS            SETC  '"MF='                                            00194600
&ZMS            SETC  '&ZMS.&MF"'                                       00194700
&ZMS            SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'         00194800
                MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                  00194900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00195000
.ZG66R          ANOP  ,                                                 00195100
.*-------------------------------------------------------------------   00195200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00195300
&XMFSCK         SETC  ''          INITIALIZE XVARIABLE                  00195400
.ZG70A   AIF   ('&MF(3)' NE 'COMPLETE').ZG71A                           00195500
&XMFSCK         SETC  'COMPLETE'  SET KEYWORD                           00195600
.*-------------------------------------------------------------------   00195700
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00195800
.ZG71A          AIF   (K'&XMFSCK GT 0).ZG71C    KEYWORD                 00195900
                AIF   (K'&MF(3) LE 0).ZG71B                             00196000
&ZMS            SETC  '"MF='                                            00196100
&ZMS            SETC  '&ZMS.&MF"'                                       00196200
&ZMS            SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '         00196300
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00196400
&ZMS            SETC  '&ZMS "COMPLETE".'                                00196500
                MNOTE 8,' &ZMS '                                        00196600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00196700
.ZG71B          ANOP  ,                                                 00196800
&XMFSCK         SETC  'COMPLETE'  SET DEFAULT KEYWORD                   00196900
.ZG71C          ANOP  ,                                                 00197000
&ZXMFSCK        SETC  'INPUT'     SET IN/OUTPUT                         00197100
.*------------------------------------------------------------------    00197200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00197300
.ZG72           ANOP  ,                                                 00197400
&ZXMF           SETC  'INPUT'     SET IN/OUTPUT                         00197500
                AIF   (K'&XMF GT 0).ZG72E       VALID ARG               00197600
                AIF   (T'&MF EQ 'O').ZG72D      OMITTED                 00197700
&ZASYSLNDX      SETA  0                                                 00197800
.ZG72A          ANOP  ,           POSITIONAL MACRO KEY                  00197900
&ZASYSLNDX      SETA  &ZASYSLNDX+1                                      00198000
                AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG72C                  00198100
&ZTLC           SETC 'MF'                                               00198200
                AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG72A         00198300
.ZG72B          ANOP  ,                                                 00198400
&ZXMF           SETC  ''          RESET IN/OUTPUT                       00198500
&ZMS            SETC  'THE "MF" KEY'                                    00198600
&ZMS            SETC  '&ZMS MUST CONTAIN ONE'                           00198700
                MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                  00198800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00198900
                AGO   .ZG72E                                            00199000
.ZG72C          ANOP  ,                                                 00199100
&ZXMF           SETC  ''          RESET IN/OUTPUT                       00199200
&ZMS            SETC  '"MF='                                            00199300
&ZMS            SETC  '&ZMS.&MF"'                                       00199400
&ZMS            SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '         00199500
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00199600
&ZMS            SETC  '&ZMS "S",'                                       00199700
&ZMS            SETC  '&ZMS "L",'                                       00199800
&ZMS            SETC  '&ZMS OR "E".'                                    00199900
                MNOTE 8,' &ZMS '                                        00200000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00200100
                AGO   .ZG72E                                            00200200
.ZG72D          ANOP  ,                                                 00200300
&XMF            SETC  'S'         SET DEFAULT KEYWORD                   00200400
&XMFSCK         SETC  'COMPLETE'  COMPLETE CHECKING                     00200500
.ZG72E          ANOP  ,                                                 00200600
.********************************************************************   00200700
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00200800
.********************************************************************   00200900
                ACTR  10000                                             00201000
.*-------------------------------------------------------------------   00201100
.***AG.MF03 MF=(SLE)                                                    00201200
                AIF   ('&XMF' EQ 'L').ZGMFX                             00201300
.*----------------------------------------------------------------***   00201400
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00201500
                AIF   (N'&MSGTOKEN LE 1).ZG2A   CK NUM                  00201600
&ZMS            SETC  '"MSGTOKEN='                                      00201700
&ZMS            SETC  '&ZMS.&MSGTOKEN"'                                 00201800
&ZMS            SETC  '&ZMS "MSGTOKEN"'                                 00201900
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00202000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00202100
.ZG2A           ANOP  ,                                                 00202200
.*-------------------------------------------------------------------   00202300
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00202400
&ZXMSGTOKEN     SETC  'INPUT'     SET IN/OUTPUT                         00202500
&XMSGTOKEN      SETC  '&MSGTOKEN(1)'            SET XVARIABLE           00202600
                AIF   (N'&MSGTOKEN GT 1).ZG2B   MULTI                   00202700
&XMSGTOKEN      SETC  '&MSGTOKEN'               SET XVARIABLE           00202800
.ZG2B           AIF   (K'&MSGTOKEN(1) GT 0).ZG2C                        00202900
&ZXMSGTOKEN     SETC  ''          RESET IN/OUTPUT                       00203000
&ZMS            SETC  ' '                                               00203100
&ZMS            SETC  '&ZMS "MSGTOKEN" KEY AND ITS'                     00203200
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  00203300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00203400
.ZG2C           ANOP  ,                                                 00203500
.*-------------------------------------------------------------------   00203600
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00203700
                AIF   (K'&ZXMSGTOKEN LE 0).ZG2R  NOT I/O                00203800
                AIF   ('&XMSGTOKEN'(1,1) NE '(').ZG2R                   00203900
&ZCGPR          SETC  '&XMSGTOKEN'(2,K'&XMSGTOKEN-2)                    00204000
                AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                       00204100
                AIF   (K'&ZCGPR GT 2).ZG2Q                              00204200
                AIF   ('&ZCGPR' EQ '0').ZG2Q                            00204300
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00204400
                AIF   (T'&ZCGPR NE 'N').ZG2Q    INVALID REG NAME        00204500
.ZG2P           ANOP  ,                                                 00204600
                AIF   (T'&ZCGPR NE 'N').ZG2R    NON NUMERIC             00204700
                AIF   ('&ZCGPR' LT '2').ZG2Q                            00204800
                AIF   ('&ZCGPR' LE '12').ZG2R                           00204900
.ZG2Q           ANOP  ,                                                 00205000
&ZMS            SETC  '"MSGTOKEN='                                      00205100
&ZMS            SETC  '&ZMS.&MSGTOKEN"'                                 00205200
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00205300
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00205400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00205500
.ZG2R           ANOP  ,                                                 00205600
.*------------------------------------------------------------------    00205700
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00205800
&XRECEIVE       SETC  ''          INITIALIZE XVARIABLE                  00205900
.*-------------------------------------------------------------------   00206000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00206100
.ZG6            ANOP  ,                                                 00206200
                AIF   (K'&RECEIVE(1) LE 0).ZG6A                         00206300
&ZTLC           SETC 'STATUS'                                           00206400
                AIF   ('&RECEIVE(1)' NE '&ZTLC').ZG7                    00206500
&XRECEIVE       SETC  'STATUS'    SET KEYWORD                           00206600
                AIF   (N'&RECEIVE LE 1).ZG6A    CK NUM                  00206700
&ZMS            SETC  '"RECEIVE='                                       00206800
&ZMS            SETC  '&ZMS.&RECEIVE"'                                  00206900
&ZMS            SETC  '&ZMS "RECEIVE"'                                  00207000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00207100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00207200
.ZG6A           ANOP  ,                                                 00207300
.*------------------------------------------------------------------    00207400
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00207500
&ZCVAL          SETC ''           CLEAR ERROR KEY ACCUMULATOR           00207600
.ZG6A0          AIF   (K'&REQTYPE LE 0).ZG6A1   OK                      00207700
&ZCVAL          SETC '&ZCVAL REQTYPE'           INCORRECT KEY USED      00207800
.ZG6A1          AIF   (K'&SCOPE LE 0).ZG6A2     OK                      00207900
&ZCVAL          SETC '&ZCVAL SCOPE'             INCORRECT KEY USED      00208000
.ZG6A2          AIF   (K'&ANSAREA LE 0).ZG6A3   OK                      00208100
&ZCVAL          SETC '&ZCVAL ANSAREA'           INCORRECT KEY USED      00208200
.ZG6A3          AIF   (K'&ANSLEN LE 0).ZG6A4    OK                      00208300
&ZCVAL          SETC '&ZCVAL ANSLEN'            INCORRECT KEY USED      00208400
.ZG6A4          AIF   (K'&XNODATA LE 0).ZG6A5   OK                      00208500
&ZCVAL          SETC '&ZCVAL NODATA'            INCORRECT KEY USED      00208600
.ZG6A5          AIF   (K'&DATAAREA LE 0).ZG6A6  OK                      00208700
&ZCVAL          SETC '&ZCVAL DATAAREA'          INCORRECT KEY USED      00208800
.ZG6A6          AIF   (K'&DATALEN LE 0).ZG6A7   OK                      00208900
&ZCVAL          SETC '&ZCVAL DATALEN'           INCORRECT KEY USED      00209000
.ZG6A7          AIF   (K'&DATADESC LE 0).ZG6A8  OK                      00209100
&ZCVAL          SETC '&ZCVAL DATADESC'          INCORRECT KEY USED      00209200
.ZG6A8          AIF   (K'&#DATADESC LE 0).ZG6A9  OK                     00209300
&ZCVAL          SETC '&ZCVAL #DATADESC'         INCORRECT KEY USED      00209400
.ZG6A9          AIF   (K'&LENDDENTRY LE 0).ZG6A10  OK                   00209500
&ZCVAL          SETC '&ZCVAL LENDDENTRY'        INCORRECT KEY USED      00209600
.ZG6A10         AIF   (K'&BIND LE 0).ZG6A11     OK                      00209700
&ZCVAL          SETC '&ZCVAL BIND'              INCORRECT KEY USED      00209800
.ZG6A11         AIF   (K'&MSGSTGKEY LE 0).ZG6A12  OK                    00209900
&ZCVAL          SETC '&ZCVAL MSGSTGKEY'         INCORRECT KEY USED      00210000
.ZG6A12         AIF   (K'&ZCVAL LE 0).ZG6A13    OK                      00210100
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)                             00210200
&ZMS            SETC  '"RECEIVE'                                        00210300
&ZMS            SETC  '&ZMS.=&RECEIVE"'                                 00210400
&ZMS            SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'              00210500
                MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'              00210600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00210700
.ZG6A13         ANOP  ,                                                 00210800
.*-------------------------------------------------------------------   00210900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00211000
.ZG7            ANOP  ,                                                 00211100
&ZTLC           SETC 'RESPONSES'                                        00211200
                AIF   ('&RECEIVE(1)' NE '&ZTLC').ZG44                   00211300
&XRECEIVE       SETC  'RESPONSES'               SET KEYWORD             00211400
                AIF   (N'&RECEIVE LE 1).ZG7A    CK NUM                  00211500
&ZMS            SETC  '"RECEIVE='                                       00211600
&ZMS            SETC  '&ZMS.&RECEIVE"'                                  00211700
&ZMS            SETC  '&ZMS "RECEIVE"'                                  00211800
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00211900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00212000
.ZG7A           ANOP  ,                                                 00212100
.*------------------------------------------------------------------    00212200
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00212300
&XREQTYPE       SETC  ''          INITIALIZE XVARIABLE                  00212400
.*-------------------------------------------------------------------   00212500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00212600
.ZG10           ANOP  ,                                                 00212700
                AIF   (K'&REQTYPE(1) LE 0).ZG10A                        00212800
&ZTLC           SETC 'BLOCKING'                                         00212900
                AIF   ('&REQTYPE(1)' NE '&ZTLC').ZG11                   00213000
&XREQTYPE       SETC  'BLOCKING'  SET KEYWORD                           00213100
                AIF   (N'&REQTYPE LE 1).ZG10A   CK NUM                  00213200
&ZMS            SETC  '"REQTYPE='                                       00213300
&ZMS            SETC  '&ZMS.&REQTYPE"'                                  00213400
&ZMS            SETC  '&ZMS "REQTYPE"'                                  00213500
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00213600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00213700
.ZG10A          ANOP  ,                                                 00213800
.*------------------------------------------------------------------    00213900
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00214000
.ZG11           ANOP  ,                                                 00214100
&ZXREQTYPE      SETC  'INPUT'     SET IN/OUTPUT                         00214200
                AIF   (K'&XREQTYPE GT 0).ZG11E  VALID ARG               00214300
                AIF   (T'&REQTYPE EQ 'O').ZG11D  OMITTED                00214400
&ZASYSLNDX      SETA  0                                                 00214500
.ZG11A          ANOP  ,           POSITIONAL MACRO KEY                  00214600
&ZASYSLNDX      SETA  &ZASYSLNDX+1                                      00214700
                AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG11C                  00214800
&ZTLC           SETC 'REQTYPE'                                          00214900
                AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG11A         00215000
.ZG11B          ANOP  ,                                                 00215100
&ZXREQTYPE      SETC  ''          RESET IN/OUTPUT                       00215200
&ZMS            SETC  'THE "REQTYPE" KEY'                               00215300
&ZMS            SETC  '&ZMS MUST CONTAIN ONE'                           00215400
                MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                  00215500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00215600
                AGO   .ZG11E                                            00215700
.ZG11C          ANOP  ,                                                 00215800
&ZXREQTYPE      SETC  ''          RESET IN/OUTPUT                       00215900
&ZMS            SETC  '"REQTYPE='                                       00216000
&ZMS            SETC  '&ZMS.&REQTYPE"'                                  00216100
&ZMS            SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '         00216200
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00216300
&ZMS            SETC  '&ZMS "BLOCKING".'                                00216400
                MNOTE 8,' &ZMS '                                        00216500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00216600
                AGO   .ZG11E                                            00216700
.ZG11D          ANOP  ,                                                 00216800
&XREQTYPE       SETC  'BLOCKING'  SET DEFAULT KEYWORD                   00216900
.ZG11E          ANOP  ,                                                 00217000
.*------------------------------------------------------------------    00217100
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00217200
                AIF   (K'&REQTYPE(1) GT 0).ZG11F  PARM                  00217300
&XREQTYPE       SETC  ''          ENSURE NULL KEYWORD                   00217400
&ZXREQTYPE      SETC  ''          RESET IN/OUTPUT                       00217500
&ZMS            SETC  'THE'                                             00217600
&ZMS            SETC  '&ZMS "REQTYPE" KEY AND ITS'                      00217700
&ZMS            SETC  '&ZMS ARGUMENT ARE REQUIRED.'                     00217800
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00217900
&ZMS            SETC  '&ZMS "BLOCKING".'                                00218000
                MNOTE 8,' &ZMS '                                        00218100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00218200
.ZG11F          ANOP  ,                                                 00218300
.*------------------------------------------------------------------    00218400
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00218500
&XSCOPE         SETC  ''          INITIALIZE XVARIABLE                  00218600
.*-------------------------------------------------------------------   00218700
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00218800
.ZG14           ANOP  ,                                                 00218900
                AIF   (K'&SCOPE(1) LE 0).ZG14A                          00219000
&ZTLC           SETC 'ALL'                                              00219100
                AIF   ('&SCOPE(1)' NE '&ZTLC').ZG15                     00219200
&XSCOPE         SETC  'ALL'       SET KEYWORD                           00219300
                AIF   (N'&SCOPE LE 1).ZG14A     CK NUM                  00219400
&ZMS            SETC  '"SCOPE='                                         00219500
&ZMS            SETC  '&ZMS.&SCOPE"'                                    00219600
&ZMS            SETC  '&ZMS "SCOPE"'                                    00219700
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00219800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00219900
.ZG14A          ANOP  ,                                                 00220000
.*------------------------------------------------------------------    00220100
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00220200
.ZG15           ANOP  ,                                                 00220300
&ZXSCOPE        SETC  'INPUT'     SET IN/OUTPUT                         00220400
                AIF   (K'&XSCOPE GT 0).ZG15E    VALID ARG               00220500
                AIF   (T'&SCOPE EQ 'O').ZG15D   OMITTED                 00220600
&ZASYSLNDX      SETA  0                                                 00220700
.ZG15A          ANOP  ,           POSITIONAL MACRO KEY                  00220800
&ZASYSLNDX      SETA  &ZASYSLNDX+1                                      00220900
                AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG15C                  00221000
&ZTLC           SETC 'SCOPE'                                            00221100
                AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG15A         00221200
.ZG15B          ANOP  ,                                                 00221300
&ZXSCOPE        SETC  ''          RESET IN/OUTPUT                       00221400
&ZMS            SETC  'THE "SCOPE" KEY'                                 00221500
&ZMS            SETC  '&ZMS MUST CONTAIN ONE'                           00221600
                MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                  00221700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00221800
                AGO   .ZG15E                                            00221900
.ZG15C          ANOP  ,                                                 00222000
&ZXSCOPE        SETC  ''          RESET IN/OUTPUT                       00222100
&ZMS            SETC  '"SCOPE='                                         00222200
&ZMS            SETC  '&ZMS.&SCOPE"'                                    00222300
&ZMS            SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '         00222400
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00222500
&ZMS            SETC  '&ZMS "ALL".'                                     00222600
                MNOTE 8,' &ZMS '                                        00222700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00222800
                AGO   .ZG15E                                            00222900
.ZG15D          ANOP  ,                                                 00223000
&XSCOPE         SETC  'ALL'       SET DEFAULT KEYWORD                   00223100
.ZG15E          ANOP  ,                                                 00223200
.*------------------------------------------------------------------    00223300
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00223400
                AIF   (K'&SCOPE(1) GT 0).ZG15F  PARM                    00223500
&XSCOPE         SETC  ''          ENSURE NULL KEYWORD                   00223600
&ZXSCOPE        SETC  ''          RESET IN/OUTPUT                       00223700
&ZMS            SETC  'THE'                                             00223800
&ZMS            SETC  '&ZMS "SCOPE" KEY AND ITS'                        00223900
&ZMS            SETC  '&ZMS ARGUMENT ARE REQUIRED.'                     00224000
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00224100
&ZMS            SETC  '&ZMS "ALL".'                                     00224200
                MNOTE 8,' &ZMS '                                        00224300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00224400
.ZG15F          ANOP  ,                                                 00224500
.*----------------------------------------------------------------***   00224600
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00224700
                AIF   (N'&ANSAREA LE 1).ZG17A   CK NUM                  00224800
&ZMS            SETC  '"ANSAREA='                                       00224900
&ZMS            SETC  '&ZMS.&ANSAREA"'                                  00225000
&ZMS            SETC  '&ZMS "ANSAREA"'                                  00225100
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00225200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00225300
.ZG17A          ANOP  ,                                                 00225400
.*-------------------------------------------------------------------   00225500
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00225600
&ZXANSAREA      SETC  'INPUT'     SET IN/OUTPUT                         00225700
&XANSAREA       SETC  '&ANSAREA(1)'             SET XVARIABLE           00225800
                AIF   (N'&ANSAREA GT 1).ZG17B   MULTI                   00225900
&XANSAREA       SETC  '&ANSAREA'  SET XVARIABLE                         00226000
.ZG17B          AIF   (K'&ANSAREA(1) GT 0).ZG17C                        00226100
&ZXANSAREA      SETC  ''          RESET IN/OUTPUT                       00226200
&ZMS            SETC  ' '                                               00226300
&ZMS            SETC  '&ZMS "ANSAREA" KEY AND ITS'                      00226400
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  00226500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00226600
.ZG17C          ANOP  ,                                                 00226700
.*-------------------------------------------------------------------   00226800
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00226900
                AIF   (K'&ZXANSAREA LE 0).ZG17R  NOT I/O                00227000
                AIF   ('&XANSAREA'(1,1) NE '(').ZG17R                   00227100
&ZCGPR          SETC  '&XANSAREA'(2,K'&XANSAREA-2)                      00227200
                AIF   ('&ZCGPR'(1,1) NE '0').ZG17P                      00227300
                AIF   (K'&ZCGPR GT 2).ZG17Q                             00227400
                AIF   ('&ZCGPR' EQ '0').ZG17Q                           00227500
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00227600
                AIF   (T'&ZCGPR NE 'N').ZG17Q   INVALID REG NAME        00227700
.ZG17P          ANOP  ,                                                 00227800
                AIF   (T'&ZCGPR NE 'N').ZG17R   NON NUMERIC             00227900
                AIF   ('&ZCGPR' LT '2').ZG17Q                           00228000
                AIF   ('&ZCGPR' LE '12').ZG17R                          00228100
.ZG17Q          ANOP  ,                                                 00228200
&ZMS            SETC  '"ANSAREA='                                       00228300
&ZMS            SETC  '&ZMS.&ANSAREA"'                                  00228400
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00228500
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00228600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00228700
.ZG17R          ANOP  ,                                                 00228800
.*----------------------------------------------------------------***   00228900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00229000
                AIF   (N'&ANSLEN LE 1).ZG19A    CK NUM                  00229100
&ZMS            SETC  '"ANSLEN='                                        00229200
&ZMS            SETC  '&ZMS.&ANSLEN"'                                   00229300
&ZMS            SETC  '&ZMS "ANSLEN"'                                   00229400
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00229500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00229600
.ZG19A          ANOP  ,                                                 00229700
.*-------------------------------------------------------------------   00229800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00229900
&ZXANSLEN       SETC  'INPUT'     SET IN/OUTPUT                         00230000
&XANSLEN        SETC  '&ANSLEN(1)'              SET XVARIABLE           00230100
                AIF   (N'&ANSLEN GT 1).ZG19B    MULTI                   00230200
&XANSLEN        SETC  '&ANSLEN'   SET XVARIABLE                         00230300
.ZG19B          AIF   (K'&ANSLEN(1) GT 0).ZG19C                         00230400
&ZXANSLEN       SETC  ''          RESET IN/OUTPUT                       00230500
&ZMS            SETC  ' '                                               00230600
&ZMS            SETC  '&ZMS "ANSLEN" KEY AND ITS'                       00230700
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  00230800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00230900
.ZG19C          ANOP  ,                                                 00231000
.*-------------------------------------------------------------------   00231100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00231200
                AIF   (K'&ZXANSLEN LE 0).ZG19R  NOT I/O                 00231300
                AIF   ('&XANSLEN'(1,1) NE '(').ZG19R                    00231400
&ZCGPR          SETC  '&XANSLEN'(2,K'&XANSLEN-2)                        00231500
                AIF   ('&ZCGPR'(1,1) NE '0').ZG19P                      00231600
                AIF   (K'&ZCGPR GT 2).ZG19Q                             00231700
                AIF   ('&ZCGPR' EQ '0').ZG19Q                           00231800
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00231900
                AIF   (T'&ZCGPR NE 'N').ZG19Q   INVALID REG NAME        00232000
.ZG19P          ANOP  ,                                                 00232100
                AIF   (T'&ZCGPR NE 'N').ZG19R   NON NUMERIC             00232200
                AIF   ('&ZCGPR' LT '2').ZG19Q                           00232300
                AIF   ('&ZCGPR' LE '12').ZG19R                          00232400
.ZG19Q          ANOP  ,                                                 00232500
&ZMS            SETC  '"ANSLEN='                                        00232600
&ZMS            SETC  '&ZMS.&ANSLEN"'                                   00232700
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00232800
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00232900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00233000
.ZG19R          ANOP  ,                                                 00233100
.*-------------------------------------------------------------------   00233200
.***AG.KMEKY05 NAME, RQD INPUT, ME KEYS -NO ARGUMENTS                   00233300
&XAREAORDESC    SETC  ''          INITIALIZE XVARIABLE                  00233400
&ZASYSLNDX      SETA  0                                                 00233500
.ZG23A          ANOP  ,           POSITIONAL KEY SEARCH                 00233600
&ZASYSLNDX      SETA  &ZASYSLNDX+1              NEXT POSITIONAL         00233700
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG23B  DONE                   00233800
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG23A            00233900
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'NODATA').ZG23A               00234000
&ZCSYSLIST(&ZASYSLNDX) SETC 'NONXKEY'           KEY IS NON-XKEY         00234100
&ZXAREAORDESC   SETC  'INPUT'     SET IN/OUTPUT                         00234200
&XAREAORDESC    SETC  'NODATA'    SET XVARIABLE                         00234300
&ZXNODATA       SETC  'INPUT'     SET IN/OUTPUT                         00234400
&XNODATA        SETC  'NODATA'    SET XVARIABLE PARM                    00234500
.ZG23B          ANOP  ,                                                 00234600
.*----------------------------------------------------------------***   00234700
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00234800
                AIF   (K'&DATAAREA LE 0).ZG24D  NO ME KEY               00234900
                AIF   (N'&DATAAREA LE 1).ZG24A  CK NUM                  00235000
&ZMS            SETC  '"DATAAREA='                                      00235100
&ZMS            SETC  '&ZMS.&DATAAREA"'                                 00235200
&ZMS            SETC  '&ZMS "DATAAREA"'                                 00235300
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00235400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00235500
.ZG24A          AIF   (K'&XAREAORDESC LE 0).ZG24B                       00235600
&ZMS            SETC  '"DATAAREA'                                       00235700
&ZMS            SETC  '&ZMS.=&DATAAREA"'                                00235800
&ZMS            SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'             00235900
&ZMS            SETC  '&ZMS "&XAREAORDESC"'                             00236000
                MNOTE 8,' &ZMS KEY.'                                    00236100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00236200
                AGO   .ZG24D                                            00236300
.*                                                                      00236400
.ZG24B          ANOP  ,                                                 00236500
&ZXAREAORDESC   SETC  'INPUT'     SET IN/OUTPUT                         00236600
&XAREAORDESC    SETC  'DATAAREA'  SET XVARIABLE                         00236700
&ZXDATAAREA     SETC  'INPUT'     SET IN/OUTPUT                         00236800
&XDATAAREA      SETC  '&DATAAREA(1)'            SET XVARIABLE PARM      00236900
                AIF   (N'&DATAAREA GT 1).ZG24C                          00237000
&XDATAAREA      SETC  '&DATAAREA'               SET XVARIABLE PARM      00237100
.ZG24C          AIF   (K'&XDATAAREA GT 0).ZG24D  ONE PARM               00237200
&ZXAREAORDESC   SETC  ''          RESET IN/OUTPUT                       00237300
&ZXDATAAREA     SETC  ''          RESET IN/OUTPUT                       00237400
&ZMS            SETC  ' '                                               00237500
&ZMS            SETC  '&ZMS "DATAAREA" KEY AND ITS'                     00237600
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  00237700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00237800
.ZG24D          ANOP  ,                                                 00237900
.*----------------------------------------------------------------***   00238000
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00238100
                AIF   (K'&DATADESC LE 0).ZG28D  NO ME KEY               00238200
                AIF   (N'&DATADESC LE 1).ZG28A  CK NUM                  00238300
&ZMS            SETC  '"DATADESC='                                      00238400
&ZMS            SETC  '&ZMS.&DATADESC"'                                 00238500
&ZMS            SETC  '&ZMS "DATADESC"'                                 00238600
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00238700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00238800
.ZG28A          AIF   (K'&XAREAORDESC LE 0).ZG28B                       00238900
&ZMS            SETC  '"DATADESC'                                       00239000
&ZMS            SETC  '&ZMS.=&DATADESC"'                                00239100
&ZMS            SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'             00239200
&ZMS            SETC  '&ZMS "&XAREAORDESC"'                             00239300
                MNOTE 8,' &ZMS KEY.'                                    00239400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00239500
                AGO   .ZG28D                                            00239600
.*                                                                      00239700
.ZG28B          ANOP  ,                                                 00239800
&ZXAREAORDESC   SETC  'INPUT'     SET IN/OUTPUT                         00239900
&XAREAORDESC    SETC  'DATADESC'  SET XVARIABLE                         00240000
&ZXDATADESC     SETC  'INPUT'     SET IN/OUTPUT                         00240100
&XDATADESC      SETC  '&DATADESC(1)'            SET XVARIABLE PARM      00240200
                AIF   (N'&DATADESC GT 1).ZG28C                          00240300
&XDATADESC      SETC  '&DATADESC'               SET XVARIABLE PARM      00240400
.ZG28C          AIF   (K'&XDATADESC GT 0).ZG28D  ONE PARM               00240500
&ZXAREAORDESC   SETC  ''          RESET IN/OUTPUT                       00240600
&ZXDATADESC     SETC  ''          RESET IN/OUTPUT                       00240700
&ZMS            SETC  ' '                                               00240800
&ZMS            SETC  '&ZMS "DATADESC" KEY AND ITS'                     00240900
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  00241000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00241100
.ZG28D          ANOP  ,                                                 00241200
.*------------------------------------------------------------------    00241300
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           00241400
                AIF   (K'&XAREAORDESC GT 0).ZG40B                       00241500
&ZXAREAORDESC   SETC  ''          RESET IN/OUTPUT                       00241600
&ZXNODATA       SETC  ''          RESET IN/OUTPUT                       00241700
&XAREAORDESC    SETC  ''          ENSURE NULL                           00241800
&XNODATA        SETC  ''          ENSURE NULL                           00241900
&ZMS            SETC  'ONE OF THE FOLLOWING'                            00242000
&ZMS            SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'               00242100
&ZMS            SETC  '&ZMS REQUIRED:'                                  00242200
&ZMS            SETC  '&ZMS "NODATA",'          VALID ME KEY            00242300
&ZMS            SETC  '&ZMS "DATAAREA",'        VALID ME KEY            00242400
&ZMS            SETC  '&ZMS OR "DATADESC".'     VALID ME KEY            00242500
                MNOTE 8,' &ZMS '                                        00242600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00242700
.ZG40B          ANOP  ,                                                 00242800
.*-------------------------------------------------------------------   00242900
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00243000
.ZG23ZY  AIF    ('&XAREAORDESC' NE 'NODATA').ZG24ZY                     00243100
.*-------------------------------------------------------------------   00243200
.***AG.KMEKY14 NAME, RQD INPUT, ME KEYS -DISALLOWED KEYS                00243300
&ZCVAL          SETC ''           ERROR KEY FIELD                       00243400
.ZG23I0         AIF   (K'&DATALEN LE 0).ZG23I1                          00243500
&ZCVAL          SETC '&ZCVAL DATALEN'           DISALLOWED KEY          00243600
.ZG23I1         AIF   (K'&#DATADESC LE 0).ZG23I2                        00243700
&ZCVAL          SETC '&ZCVAL #DATADESC'         DISALLOWED KEY          00243800
.ZG23I2         AIF   (K'&LENDDENTRY LE 0).ZG23I3                       00243900
&ZCVAL          SETC '&ZCVAL LENDDENTRY'        DISALLOWED KEY          00244000
.ZG23I3         AIF   (K'&BIND LE 0).ZG23I4                             00244100
&ZCVAL          SETC '&ZCVAL BIND'              DISALLOWED KEY          00244200
.ZG23I4         AIF   (K'&ZCVAL LE 0).ZG23J     KEY                     00244300
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)                             00244400
&ZMS            SETC  '"NODATA'                                         00244500
&ZMS            SETC  '&ZMS."'                                          00244600
&ZMS            SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'              00244700
                MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'              00244800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00244900
.ZG23J          ANOP  ,                                                 00245000
.*-------------------------------------------------------------------   00245100
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00245200
.ZG24ZY  AIF    ('&XAREAORDESC' NE 'DATAAREA').ZG28ZY                   00245300
.*-------------------------------------------------------------------   00245400
.***AG.KMEKY14 NAME, RQD INPUT, ME KEYS -DISALLOWED KEYS                00245500
&ZCVAL          SETC ''           ERROR KEY FIELD                       00245600
.ZG24I0         AIF   (K'&#DATADESC LE 0).ZG24I1                        00245700
&ZCVAL          SETC '&ZCVAL #DATADESC'         DISALLOWED KEY          00245800
.ZG24I1         AIF   (K'&LENDDENTRY LE 0).ZG24I2                       00245900
&ZCVAL          SETC '&ZCVAL LENDDENTRY'        DISALLOWED KEY          00246000
.ZG24I2         AIF   (K'&BIND LE 0).ZG24I3                             00246100
&ZCVAL          SETC '&ZCVAL BIND'              DISALLOWED KEY          00246200
.ZG24I3         AIF   (K'&ZCVAL LE 0).ZG24J     KEY                     00246300
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)                             00246400
&ZMS            SETC  '"DATAAREA'                                       00246500
&ZMS            SETC  '&ZMS.=&DATAAREA"'                                00246600
&ZMS            SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'              00246700
                MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'              00246800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00246900
.ZG24J          ANOP  ,                                                 00247000
.*-------------------------------------------------------------------   00247100
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00247200
                AIF   (K'&ZXDATAAREA LE 0).ZG24R  NOT I/O               00247300
                AIF   ('&XDATAAREA'(1,1) NE '(').ZG24R                  00247400
&ZCGPR          SETC  '&XDATAAREA'(2,K'&XDATAAREA-2)                    00247500
                AIF   ('&ZCGPR'(1,1) NE '0').ZG24P                      00247600
                AIF   (K'&ZCGPR GT 2).ZG24Q                             00247700
                AIF   ('&ZCGPR' EQ '0').ZG24Q                           00247800
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00247900
                AIF   (T'&ZCGPR NE 'N').ZG24Q   INVALID REG NAME        00248000
.ZG24P          ANOP  ,                                                 00248100
                AIF   (T'&ZCGPR NE 'N').ZG24R   NON NUMERIC             00248200
                AIF   ('&ZCGPR' LT '2').ZG24Q                           00248300
                AIF   ('&ZCGPR' LE '12').ZG24R                          00248400
.ZG24Q          ANOP  ,                                                 00248500
&ZMS            SETC  '"DATAAREA='                                      00248600
&ZMS            SETC  '&ZMS.&DATAAREA"'                                 00248700
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00248800
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00248900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00249000
.ZG24R          ANOP  ,                                                 00249100
.*----------------------------------------------------------------***   00249200
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00249300
                AIF   (N'&DATALEN LE 1).ZG26A   CK NUM                  00249400
&ZMS            SETC  '"DATALEN='                                       00249500
&ZMS            SETC  '&ZMS.&DATALEN"'                                  00249600
&ZMS            SETC  '&ZMS "DATALEN"'                                  00249700
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00249800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00249900
.ZG26A          ANOP  ,                                                 00250000
.*-------------------------------------------------------------------   00250100
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00250200
&ZXDATALEN      SETC  'INPUT'     SET IN/OUTPUT                         00250300
&XDATALEN       SETC  '&DATALEN(1)'             SET XVARIABLE           00250400
                AIF   (N'&DATALEN GT 1).ZG26B   MULTI                   00250500
&XDATALEN       SETC  '&DATALEN'  SET XVARIABLE                         00250600
.ZG26B          AIF   (K'&DATALEN(1) GT 0).ZG26C                        00250700
&ZXDATALEN      SETC  ''          RESET IN/OUTPUT                       00250800
&ZMS            SETC  ' '                                               00250900
&ZMS            SETC  '&ZMS "DATALEN" KEY AND ITS'                      00251000
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  00251100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00251200
.ZG26C          ANOP  ,                                                 00251300
.*-------------------------------------------------------------------   00251400
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00251500
                AIF   (K'&ZXDATALEN LE 0).ZG26R  NOT I/O                00251600
                AIF   ('&XDATALEN'(1,1) NE '(').ZG26R                   00251700
&ZCGPR          SETC  '&XDATALEN'(2,K'&XDATALEN-2)                      00251800
                AIF   ('&ZCGPR'(1,1) NE '0').ZG26P                      00251900
                AIF   (K'&ZCGPR GT 2).ZG26Q                             00252000
                AIF   ('&ZCGPR' EQ '0').ZG26Q                           00252100
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00252200
                AIF   (T'&ZCGPR NE 'N').ZG26Q   INVALID REG NAME        00252300
.ZG26P          ANOP  ,                                                 00252400
                AIF   (T'&ZCGPR NE 'N').ZG26R   NON NUMERIC             00252500
                AIF   ('&ZCGPR' LT '2').ZG26Q                           00252600
                AIF   ('&ZCGPR' LE '12').ZG26R                          00252700
.ZG26Q          ANOP  ,                                                 00252800
&ZMS            SETC  '"DATALEN='                                       00252900
&ZMS            SETC  '&ZMS.&DATALEN"'                                  00253000
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00253100
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00253200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00253300
.ZG26R          ANOP  ,                                                 00253400
.*-------------------------------------------------------------------   00253500
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00253600
.ZG28ZY  AIF    ('&XAREAORDESC' NE 'DATADESC').ZG40ZY                   00253700
.*-------------------------------------------------------------------   00253800
.***AG.KMEKY14 NAME, RQD INPUT, ME KEYS -DISALLOWED KEYS                00253900
&ZCVAL          SETC ''           ERROR KEY FIELD                       00254000
.ZG28I0         AIF   (K'&DATALEN LE 0).ZG28I1                          00254100
&ZCVAL          SETC '&ZCVAL DATALEN'           DISALLOWED KEY          00254200
.ZG28I1         AIF   (K'&ZCVAL LE 0).ZG28J     KEY                     00254300
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)                             00254400
&ZMS            SETC  '"DATADESC'                                       00254500
&ZMS            SETC  '&ZMS.=&DATADESC"'                                00254600
&ZMS            SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'              00254700
                MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'              00254800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00254900
.ZG28J          ANOP  ,                                                 00255000
.*-------------------------------------------------------------------   00255100
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00255200
                AIF   (K'&ZXDATADESC LE 0).ZG28R  NOT I/O               00255300
                AIF   ('&XDATADESC'(1,1) NE '(').ZG28R                  00255400
&ZCGPR          SETC  '&XDATADESC'(2,K'&XDATADESC-2)                    00255500
                AIF   ('&ZCGPR'(1,1) NE '0').ZG28P                      00255600
                AIF   (K'&ZCGPR GT 2).ZG28Q                             00255700
                AIF   ('&ZCGPR' EQ '0').ZG28Q                           00255800
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00255900
                AIF   (T'&ZCGPR NE 'N').ZG28Q   INVALID REG NAME        00256000
.ZG28P          ANOP  ,                                                 00256100
                AIF   (T'&ZCGPR NE 'N').ZG28R   NON NUMERIC             00256200
                AIF   ('&ZCGPR' LT '2').ZG28Q                           00256300
                AIF   ('&ZCGPR' LE '12').ZG28R                          00256400
.ZG28Q          ANOP  ,                                                 00256500
&ZMS            SETC  '"DATADESC='                                      00256600
&ZMS            SETC  '&ZMS.&DATADESC"'                                 00256700
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00256800
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00256900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00257000
.ZG28R          ANOP  ,                                                 00257100
.*----------------------------------------------------------------***   00257200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00257300
                AIF   (N'&#DATADESC LE 1).ZG30A  CK NUM                 00257400
&ZMS            SETC  '"#DATADESC='                                     00257500
&ZMS            SETC  '&ZMS.&#DATADESC"'                                00257600
&ZMS            SETC  '&ZMS "#DATADESC"'                                00257700
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00257800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00257900
.ZG30A          ANOP  ,                                                 00258000
.*-------------------------------------------------------------------   00258100
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00258200
&ZX#DATADESC    SETC  'INPUT'     SET IN/OUTPUT                         00258300
&X#DATADESC     SETC  '1'                                               00258400
                AIF   (K'&#DATADESC(1) LE 0).ZG30B  PARM                00258500
&X#DATADESC     SETC  '&#DATADESC(1)'           SET XVARIABLE           00258600
                AIF   (N'&#DATADESC GT 1).ZG30B  MULTI                  00258700
&X#DATADESC     SETC  '&#DATADESC'              SET XVARIABLE           00258800
.ZG30B          ANOP  ,                                                 00258900
.*-------------------------------------------------------------------   00259000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00259100
                AIF   (K'&ZX#DATADESC LE 0).ZG30R  NOT I/O              00259200
                AIF   ('&X#DATADESC'(1,1) NE '(').ZG30R                 00259300
&ZCGPR          SETC  '&X#DATADESC'(2,K'&X#DATADESC-2)                  00259400
                AIF   ('&ZCGPR'(1,1) NE '0').ZG30P                      00259500
                AIF   (K'&ZCGPR GT 2).ZG30Q                             00259600
                AIF   ('&ZCGPR' EQ '0').ZG30Q                           00259700
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00259800
                AIF   (T'&ZCGPR NE 'N').ZG30Q   INVALID REG NAME        00259900
.ZG30P          ANOP  ,                                                 00260000
                AIF   (T'&ZCGPR NE 'N').ZG30R   NON NUMERIC             00260100
                AIF   ('&ZCGPR' LT '2').ZG30Q                           00260200
                AIF   ('&ZCGPR' LE '12').ZG30R                          00260300
.ZG30Q          ANOP  ,                                                 00260400
&ZMS            SETC  '"#DATADESC='                                     00260500
&ZMS            SETC  '&ZMS.&#DATADESC"'                                00260600
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00260700
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00260800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00260900
.ZG30R          ANOP  ,                                                 00261000
.*----------------------------------------------------------------***   00261100
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00261200
                AIF   (N'&LENDDENTRY LE 1).ZG33A  CK NUM                00261300
&ZMS            SETC  '"LENDDENTRY='                                    00261400
&ZMS            SETC  '&ZMS.&LENDDENTRY"'                               00261500
&ZMS            SETC  '&ZMS "LENDDENTRY"'                               00261600
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00261700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00261800
.ZG33A          ANOP  ,                                                 00261900
.*-------------------------------------------------------------------   00262000
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00262100
&ZXLENDDENTRY   SETC  'INPUT'     SET IN/OUTPUT                         00262200
&XLENDDENTRY    SETC  '16'                                              00262300
                AIF   (K'&LENDDENTRY(1) LE 0).ZG33B  PARM               00262400
&XLENDDENTRY    SETC  '&LENDDENTRY(1)'          SET XVARIABLE           00262500
                AIF   (N'&LENDDENTRY GT 1).ZG33B  MULTI                 00262600
&XLENDDENTRY    SETC  '&LENDDENTRY'             SET XVARIABLE           00262700
.ZG33B          ANOP  ,                                                 00262800
.*-------------------------------------------------------------------   00262900
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00263000
                AIF   (K'&ZXLENDDENTRY LE 0).ZG33R  NOT I/O             00263100
                AIF   ('&XLENDDENTRY'(1,1) NE '(').ZG33R                00263200
&ZCGPR          SETC  '&XLENDDENTRY'(2,K'&XLENDDENTRY-2)                00263300
                AIF   ('&ZCGPR'(1,1) NE '0').ZG33P                      00263400
                AIF   (K'&ZCGPR GT 2).ZG33Q                             00263500
                AIF   ('&ZCGPR' EQ '0').ZG33Q                           00263600
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00263700
                AIF   (T'&ZCGPR NE 'N').ZG33Q   INVALID REG NAME        00263800
.ZG33P          ANOP  ,                                                 00263900
                AIF   (T'&ZCGPR NE 'N').ZG33R   NON NUMERIC             00264000
                AIF   ('&ZCGPR' LT '2').ZG33Q                           00264100
                AIF   ('&ZCGPR' LE '12').ZG33R                          00264200
.ZG33Q          ANOP  ,                                                 00264300
&ZMS            SETC  '"LENDDENTRY='                                    00264400
&ZMS            SETC  '&ZMS.&LENDDENTRY"'                               00264500
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00264600
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00264700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00264800
.ZG33R          ANOP  ,                                                 00264900
.*------------------------------------------------------------------    00265000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00265100
&XBIND          SETC  ''          INITIALIZE XVARIABLE                  00265200
.*-------------------------------------------------------------------   00265300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00265400
.ZG37           ANOP  ,                                                 00265500
                AIF   (K'&BIND(1) LE 0).ZG37A                           00265600
&ZTLC           SETC 'TARGET'                                           00265700
                AIF   ('&BIND(1)' NE '&ZTLC').ZG38                      00265800
&XBIND          SETC  'TARGET'    SET KEYWORD                           00265900
                AIF   (N'&BIND LE 1).ZG37A      CK NUM                  00266000
&ZMS            SETC  '"BIND='                                          00266100
&ZMS            SETC  '&ZMS.&BIND"'                                     00266200
&ZMS            SETC  '&ZMS "BIND"'                                     00266300
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00266400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00266500
.ZG37A          ANOP  ,                                                 00266600
.*-------------------------------------------------------------------   00266700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00266800
.ZG38           ANOP  ,                                                 00266900
&ZTLC           SETC 'NEXT'                                             00267000
                AIF   ('&BIND(1)' NE '&ZTLC').ZG39                      00267100
&XBIND          SETC  'NEXT'      SET KEYWORD                           00267200
                AIF   (N'&BIND LE 1).ZG38A      CK NUM                  00267300
&ZMS            SETC  '"BIND='                                          00267400
&ZMS            SETC  '&ZMS.&BIND"'                                     00267500
&ZMS            SETC  '&ZMS "BIND"'                                     00267600
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00267700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00267800
.ZG38A          ANOP  ,                                                 00267900
.*------------------------------------------------------------------    00268000
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00268100
.ZG39           ANOP  ,                                                 00268200
&ZXBIND         SETC  'INPUT'     SET IN/OUTPUT                         00268300
                AIF   (K'&XBIND GT 0).ZG39E     VALID ARG               00268400
                AIF   (T'&BIND EQ 'O').ZG39D    OMITTED                 00268500
&ZASYSLNDX      SETA  0                                                 00268600
.ZG39A          ANOP  ,           POSITIONAL MACRO KEY                  00268700
&ZASYSLNDX      SETA  &ZASYSLNDX+1                                      00268800
                AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG39C                  00268900
&ZTLC           SETC 'BIND'                                             00269000
                AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG39A         00269100
.ZG39B          ANOP  ,                                                 00269200
&ZXBIND         SETC  ''          RESET IN/OUTPUT                       00269300
&ZMS            SETC  'THE "BIND" KEY'                                  00269400
&ZMS            SETC  '&ZMS MUST CONTAIN ONE'                           00269500
                MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                  00269600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00269700
                AGO   .ZG39E                                            00269800
.ZG39C          ANOP  ,                                                 00269900
&ZXBIND         SETC  ''          RESET IN/OUTPUT                       00270000
&ZMS            SETC  '"BIND='                                          00270100
&ZMS            SETC  '&ZMS.&BIND"'                                     00270200
&ZMS            SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '         00270300
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00270400
&ZMS            SETC  '&ZMS "TARGET"'                                   00270500
&ZMS            SETC  '&ZMS OR "NEXT".'                                 00270600
                MNOTE 8,' &ZMS '                                        00270700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00270800
                AGO   .ZG39E                                            00270900
.ZG39D          ANOP  ,                                                 00271000
&XBIND          SETC  'TARGET'    SET DEFAULT KEYWORD                   00271100
.ZG39E          ANOP  ,                                                 00271200
.*-------------------------------------------------------------------   00271300
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            00271400
.ZG40ZY         ANOP ,            END MUTUALLY EXCLUSIVE KEYS           00271500
.*----------------------------------------------------------------***   00271600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00271700
                AIF   (N'&MSGSTGKEY LE 1).ZG42A  CK NUM                 00271800
&ZMS            SETC  '"MSGSTGKEY='                                     00271900
&ZMS            SETC  '&ZMS.&MSGSTGKEY"'                                00272000
&ZMS            SETC  '&ZMS "MSGSTGKEY"'                                00272100
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00272200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00272300
.ZG42A          ANOP  ,                                                 00272400
.*-------------------------------------------------------------------   00272500
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00272600
&ZXMSGSTGKEY    SETC  'INPUT'     SET IN/OUTPUT                         00272700
&XMSGSTGKEY     SETC  'USERKEY'                                         00272800
                AIF   (K'&MSGSTGKEY(1) LE 0).ZG42B  PARM                00272900
&XMSGSTGKEY     SETC  '&MSGSTGKEY(1)'           SET XVARIABLE           00273000
                AIF   (N'&MSGSTGKEY GT 1).ZG42B  MULTI                  00273100
&XMSGSTGKEY     SETC  '&MSGSTGKEY'              SET XVARIABLE           00273200
.ZG42B          ANOP  ,                                                 00273300
.*-------------------------------------------------------------------   00273400
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00273500
                AIF   (K'&ZXMSGSTGKEY LE 0).ZG42R  NOT I/O              00273600
         AIF   ('&XMSGSTGKEY' EQ 'USERKEY').ZG42R                       00273700
                AIF   ('&XMSGSTGKEY'(1,1) NE '(').ZG42R                 00273800
&ZCGPR          SETC  '&XMSGSTGKEY'(2,K'&XMSGSTGKEY-2)                  00273900
                AIF   ('&ZCGPR'(1,1) NE '0').ZG42P                      00274000
                AIF   (K'&ZCGPR GT 2).ZG42Q                             00274100
                AIF   ('&ZCGPR' EQ '0').ZG42Q                           00274200
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00274300
                AIF   (T'&ZCGPR NE 'N').ZG42Q   INVALID REG NAME        00274400
.ZG42P          ANOP  ,                                                 00274500
                AIF   (T'&ZCGPR NE 'N').ZG42R   NON NUMERIC             00274600
                AIF   ('&ZCGPR' LT '2').ZG42Q                           00274700
                AIF   ('&ZCGPR' LE '12').ZG42R                          00274800
.ZG42Q          ANOP  ,                                                 00274900
&ZMS            SETC  '"MSGSTGKEY='                                     00275000
&ZMS            SETC  '&ZMS.&MSGSTGKEY"'                                00275100
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00275200
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00275300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00275400
.ZG42R          ANOP  ,                                                 00275500
.*------------------------------------------------------------------    00275600
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00275700
.ZG44           ANOP  ,                                                 00275800
&ZXRECEIVE      SETC  'INPUT'     SET IN/OUTPUT                         00275900
                AIF   (K'&XRECEIVE GT 0).ZG44E  VALID ARG               00276000
                AIF   (T'&RECEIVE EQ 'O').ZG44D  OMITTED                00276100
&ZASYSLNDX      SETA  0                                                 00276200
.ZG44A          ANOP  ,           POSITIONAL MACRO KEY                  00276300
&ZASYSLNDX      SETA  &ZASYSLNDX+1                                      00276400
                AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG44C                  00276500
&ZTLC           SETC 'RECEIVE'                                          00276600
                AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG44A         00276700
.ZG44B          ANOP  ,                                                 00276800
&ZXRECEIVE      SETC  ''          RESET IN/OUTPUT                       00276900
&ZMS            SETC  'THE "RECEIVE" KEY'                               00277000
&ZMS            SETC  '&ZMS MUST CONTAIN ONE'                           00277100
                MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                  00277200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00277300
                AGO   .ZG44E                                            00277400
.ZG44C          ANOP  ,                                                 00277500
&ZXRECEIVE      SETC  ''          RESET IN/OUTPUT                       00277600
&ZMS            SETC  '"RECEIVE='                                       00277700
&ZMS            SETC  '&ZMS.&RECEIVE"'                                  00277800
&ZMS            SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '         00277900
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00278000
&ZMS            SETC  '&ZMS "STATUS"'                                   00278100
&ZMS            SETC  '&ZMS OR "RESPONSES".'                            00278200
                MNOTE 8,' &ZMS '                                        00278300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00278400
                AGO   .ZG44E                                            00278500
.ZG44D          ANOP  ,                                                 00278600
&XRECEIVE       SETC  'STATUS'    SET DEFAULT KEYWORD                   00278700
.ZG44E          ANOP  ,                                                 00278800
.*------------------------------------------------------------------    00278900
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00279000
                AIF   (K'&RECEIVE(1) GT 0).ZG44F  PARM                  00279100
&XRECEIVE       SETC  ''          ENSURE NULL KEYWORD                   00279200
&ZXRECEIVE      SETC  ''          RESET IN/OUTPUT                       00279300
&ZMS            SETC  'THE'                                             00279400
&ZMS            SETC  '&ZMS "RECEIVE" KEY AND ITS'                      00279500
&ZMS            SETC  '&ZMS ARGUMENT ARE REQUIRED.'                     00279600
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00279700
&ZMS            SETC  '&ZMS "STATUS"'                                   00279800
&ZMS            SETC  '&ZMS OR "RESPONSES".'                            00279900
                MNOTE 8,' &ZMS '                                        00280000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00280100
.ZG44F          ANOP  ,                                                 00280200
.*----------------------------------------------------------------***   00280300
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00280400
                AIF   (N'&RETCODE LE 1).ZG46A   CK NUM                  00280500
&ZMS            SETC  '"RETCODE='                                       00280600
&ZMS            SETC  '&ZMS.&RETCODE"'                                  00280700
&ZMS            SETC  '&ZMS "RETCODE"'                                  00280800
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00280900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00281000
.ZG46A          ANOP  ,                                                 00281100
.*-------------------------------------------------------------------   00281200
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00281300
                AIF   (K'&RETCODE(1) LE 0).ZG46C  NO PARM               00281400
&ZXRETCODE      SETC  'OUTPUT'    SET OUTPUT                            00281500
&XRETCODE       SETC  '&RETCODE(1)'             SET XVARIABLE           00281600
                AIF   (N'&RETCODE GT 1).ZG46C                           00281700
&XRETCODE       SETC  '&RETCODE'  SET XVARIABLE                         00281800
.ZG46C          ANOP  ,                                                 00281900
.*-------------------------------------------------------------------   00282000
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00282100
                AIF   (K'&ZXRETCODE LE 0).ZG46R  NOT I/O                00282200
                AIF   ('&XRETCODE'(1,1) NE '(').ZG46R                   00282300
&ZCGPR          SETC  '&XRETCODE'(2,K'&XRETCODE-2)                      00282400
                AIF   ('&ZCGPR'(1,1) NE '0').ZG46P                      00282500
                AIF   (K'&ZCGPR GT 2).ZG46Q                             00282600
                AIF   ('&ZCGPR' EQ '0').ZG46Q                           00282700
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00282800
                AIF   (T'&ZCGPR NE 'N').ZG46Q   INVALID REG NAME        00282900
.ZG46P          ANOP  ,                                                 00283000
                AIF   (T'&ZCGPR NE 'N').ZG46R   NON NUMERIC             00283100
                AIF   ('&ZCGPR' EQ '15').ZG46R                          00283200
                AIF   ('&ZCGPR' LT '2').ZG46Q                           00283300
                AIF   ('&ZCGPR' LE '12').ZG46R                          00283400
.ZG46Q          ANOP  ,                                                 00283500
&ZMS            SETC  '"RETCODE='                                       00283600
&ZMS            SETC  '&ZMS.&RETCODE"'                                  00283700
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00283800
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12) OR (15).'          00283900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00284000
.ZG46R          ANOP  ,                                                 00284100
.*----------------------------------------------------------------***   00284200
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00284300
                AIF   (N'&RSNCODE LE 1).ZG49A   CK NUM                  00284400
&ZMS            SETC  '"RSNCODE='                                       00284500
&ZMS            SETC  '&ZMS.&RSNCODE"'                                  00284600
&ZMS            SETC  '&ZMS "RSNCODE"'                                  00284700
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00284800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00284900
.ZG49A          ANOP  ,                                                 00285000
.*-------------------------------------------------------------------   00285100
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00285200
                AIF   (K'&RSNCODE(1) LE 0).ZG49C  NO PARM               00285300
&ZXRSNCODE      SETC  'OUTPUT'    SET OUTPUT                            00285400
&XRSNCODE       SETC  '&RSNCODE(1)'             SET XVARIABLE           00285500
                AIF   (N'&RSNCODE GT 1).ZG49C                           00285600
&XRSNCODE       SETC  '&RSNCODE'  SET XVARIABLE                         00285700
.ZG49C          ANOP  ,                                                 00285800
.*-------------------------------------------------------------------   00285900
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00286000
                AIF   (K'&ZXRSNCODE LE 0).ZG49R  NOT I/O                00286100
                AIF   ('&XRSNCODE'(1,1) NE '(').ZG49R                   00286200
&ZCGPR          SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                      00286300
                AIF   ('&ZCGPR'(1,1) NE '0').ZG49P                      00286400
                AIF   (K'&ZCGPR GT 2).ZG49Q                             00286500
                AIF   ('&ZCGPR' EQ '0').ZG49R                           00286600
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00286700
                AIF   (T'&ZCGPR NE 'N').ZG49Q   INVALID REG NAME        00286800
.ZG49P          ANOP  ,                                                 00286900
                AIF   (T'&ZCGPR NE 'N').ZG49R   NON NUMERIC             00287000
                AIF   ('&ZCGPR' EQ '0').ZG49R                           00287100
                AIF   ('&ZCGPR' LT '2').ZG49Q                           00287200
                AIF   ('&ZCGPR' LE '12').ZG49R                          00287300
.ZG49Q          ANOP  ,                                                 00287400
&ZMS            SETC  '"RSNCODE='                                       00287500
&ZMS            SETC  '&ZMS.&RSNCODE"'                                  00287600
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00287700
                MNOTE 8,' &ZMS IN THE RANGE (0) OR (2)-(12).'           00287800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00287900
.ZG49R          ANOP  ,                                                 00288000
.******************************************************************     00288100
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00288200
.******************************************************************     00288300
                ACTR  10000                                             00288400
.*-------------------------------------------------------------------   00288500
.***AH.P03 EXTRA POSITIONALS AMONG NON-X KEYS                           00288600
&ZCVAL          SETC  ''          ERROR FIELD                           00288700
&ZAWRK          SETA  0           POSITIONAL COUNTER                    00288800
&ZASYSLNDX      SETA  0           NON-X KEY COUNTER                     00288900
.ZGLIST2        ANOP  ,                                                 00289000
&ZASYSLNDX      SETA  &ZASYSLNDX+1              NEXT NON-X KEY          00289100
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZGLIST3  DONE                 00289200
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZGLIST2          00289300
&ZAWRK          SETA  &ZAWRK+1    NEXT POSITIONAL                       00289400
                AIF   (&ZAWRK LE 0).ZGLIST2                             00289500
&ZCVAL          SETC '&ZCVAL,&SYSLIST(&ZASYSLNDX)'  EXTRA               00289600
                AGO   .ZGLIST2                                          00289700
.*                                                                      00289800
.ZGLIST3  AIF  (K'&ZCVAL LE 0).ZGLISTX                                  00289900
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)     STRIP COMMA             00290000
&ZMS            SETC  'POSITIONAL ARGUMENT(S),'                         00290100
&ZMS            SETC  '&ZMS "&ZCVAL"'                                   00290200
&ZMS            SETC  '&ZMS CANNOT BE USED.'                            00290300
&ZMS            SETC  '&ZMS NO POSITIONAL ARGUMENTS'                    00290400
                MNOTE 8,' &ZMS ARE ALLOWED.'                            00290500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00290600
.ZGLISTX        ANOP  ,                                                 00290700
&ZASYSLNDX      SETA  0                                                 00290800
.*-------------------------------------------------------------------   00290900
.***AG.MF04 MF=(SLE)                                                    00291000
.ZGMFX          ANOP  ,           END OF FULL SYNTAX CHECK              00291100
.*******************************************************************    00291200
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00291300
.*******************************************************************    00291400
                AIF   (&ZMACRET NE 0).ZLX2      ERROR DETECTED          00291500
.*******************************************************************    00291600
.***AE.01  START OF IXCRECV MACRO CODE                                  00291700
.*******************************************************************    00291800
                LCLC  &M0M0001                 NAME                     00291900
&M0M0001        SETC  '&XLABEL'                SET NAME                 00292000
                AIF   (K'&XLABEL NE 0).XLAB2                            00292100
&M0M0001        SETC  'M00M&SYSNDX'            DEFAULT NAME             00292200
.*                                                                      00292300
.XLAB2          ANOP  ,                                                 00292400
                AIF   ('&XMF' EQ 'L').XLAB3                             00292500
&M0M0001 DS    0H                             IXCRECV-0                 00292600
.XLAB3          ANOP  ,                                                 00292700
.*******************************************************************    00292800
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00292900
.*******************************************************************    00293000
              PUSH  PRINT                                               00293100
                AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON        00293200
                PRINT OFF         ++ PR01                               00293300
                AGO   .ZPRNTXX                                          00293400
.ZPRINTX        PRINT ON                                                00293500
.ZPRNTXX        ANOP  ,                                                 00293600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00293700
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00293800
.********************************************************************   00293900
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00294000
.********************************************************************   00294100
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00294200
                      LCLA  &ZOPN1         INVOCATION INDEX             00294300
                      LCLC  &ZOPL(4095)    LABEL                        00294400
                      LCLC  &ZOPO(4095)    OPERATION                    00294500
                      LCLC  &ZOPV(4095)    VALUE                        00294600
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00294700
.*                                                                      00294800
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00294900
.******************************************************************     00295000
.***AL.L10 IXCRECV FMT=LIST MF=S!L PARAMETERS                           00295100
.******************************************************************     00295200
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00295300
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00295400
&XMFCTRL              SETC  '#Z'.'&SYSNDX'.'A'                          00295500
&XMFATTR              SETC  '0D'                                        00295600
.*                                                                      00295700
&ZOPN                 SETA  &ZOPN+1                                     00295800
&ZOPL(&ZOPN)          SETC  ' '                                         00295900
&ZOPO(&ZOPN)          SETC  'CNOP'                                      00296000
&ZOPV(&ZOPN)          SETC  '4,8'                                       00296100
&ZOPN                 SETA  &ZOPN+1                                     00296200
&ZOPL(&ZOPN)          SETC  ' '                                         00296300
&ZOPO(&ZOPN)          SETC  'BRAS'                                      00296400
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              00296500
&ZOPD(&ZOPN)          SETC  '++ IXCRECV ARG PARMS'                      00296600
.*                                                                      00296700
&ZOPN                 SETA  &ZOPN+1                                     00296800
&ZOPL(&ZOPN)          SETC  ' '                                         00296900
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00297000
&ZOPV(&ZOPN)          SETC  '1'                                         00297100
&ZOPD(&ZOPN)          SETC  ' '                                         00297200
.*                                                                      00297300
.ZLMFSL2              ANOP  ,                                           00297400
.*-------------------------------------------------------------------   00297500
.***AM.L00  IXCRECV FMT=LIST name                                       00297600
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00297700
&ZOPN                 SETA &ZOPN+1                                      00297800
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00297900
&ZOPO(&ZOPN)          SETC 'EQU'                                        00298000
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00298100
&ZOPD(&ZOPN)          SETC '++ IXCRECV NAME'                            00298200
.ZLMFSL2M             ANOP  ,                                           00298300
.*-------------------------------------------------------------------   00298400
.***AM.L01  IXCRECV FMT=LIST PARAMETERS                                 00298500
&ZOPN                 SETA &ZOPN+1                                      00298600
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00298700
&ZOPO(&ZOPN)          SETC 'DS'                                         00298800
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00298900
&ZOPD(&ZOPN)          SETC '++ IXCRECV PARM LIST'                       00299000
.*-------------------------------------------------------------------   00299100
.***AM.L02 XVERSION XL1                                                 00299200
&ZOPN                 SETA &ZOPN+1                                      00299300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00299400
&ZOPO(&ZOPN)          SETC 'DS'                                         00299500
&ZOPV(&ZOPN)          SETC 'XL1'                                        00299600
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00299700
.*-------------------------------------------------------------------   00299800
.***AM.L09  XRSV0001 CL3                                                00299900
&ZOPN                 SETA &ZOPN+1                                      00300000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0001'                         00300100
&ZOPO(&ZOPN)          SETC 'DS'                                         00300200
&ZOPV(&ZOPN)          SETC 'CL3'                                        00300300
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00300400
.*-------------------------------------------------------------------   00300500
.***AM.L05 XRECEIVE XL1                                                 00300600
&ZOPN                 SETA &ZOPN+1                                      00300700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRECEIVE'                         00300800
&ZOPO(&ZOPN)          SETC 'DS'                                         00300900
&ZOPV(&ZOPN)          SETC 'XL1'                                        00301000
&ZOPD(&ZOPN)          SETC '++ &ZXRECEIVE XRECEIVE'                     00301100
.*                                                                      00301200
&ZOPN                 SETA  &ZOPN+1                                     00301300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XRECEIVE_STATUS'                 00301400
&ZOPO(&ZOPN)          SETC  'EQU'                                       00301500
&ZOPV(&ZOPN)          SETC  '1'                                         00301600
&ZOPD(&ZOPN)          SETC  '++ XRECEIVE.'                              00301700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).STATUS'                       00301800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00301900
.*                                                                      00302000
&ZOPN                 SETA  &ZOPN+1                                     00302100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XRECEIVE_RESPONSES'              00302200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00302300
&ZOPV(&ZOPN)          SETC  '2'                                         00302400
&ZOPD(&ZOPN)          SETC  '++ XRECEIVE.'                              00302500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).RESPONSES'                    00302600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00302700
.*-------------------------------------------------------------------   00302800
.***AM.L03 XFLAGS BL.8                                                  00302900
&ZOPN                 SETA &ZOPN+1                                      00303000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFLAGS'                           00303100
&ZOPO(&ZOPN)          SETC 'DS'                                         00303200
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00303300
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00303400
.*                                                                      00303500
&ZOPN                 SETA  &ZOPN+1                                     00303600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQTYPE_BLOCKING'               00303700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00303800
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00303900
&ZOPD(&ZOPN)          SETC  '++ XREQTYPE.'                              00304000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).BLOCKING'                     00304100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00304200
.*                                                                      00304300
&ZOPN                 SETA  &ZOPN+1                                     00304400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XBIND_NEXT'                      00304500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00304600
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00304700
&ZOPD(&ZOPN)          SETC  '++ XBIND.'                                 00304800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).NEXT'                         00304900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00305000
.*                                                                      00305100
&ZOPN                 SETA  &ZOPN+1                                     00305200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_NODATA'                  00305300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00305400
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             00305500
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00305600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).NODATA'                       00305700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00305800
.*                                                                      00305900
&ZOPN                 SETA  &ZOPN+1                                     00306000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_DATAAREA'                00306100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00306200
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             00306300
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00306400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DATAAREA'                     00306500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00306600
.*                                                                      00306700
&ZOPN                 SETA  &ZOPN+1                                     00306800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_DATADESC'                00306900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00307000
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             00307100
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00307200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DATADESC'                     00307300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00307400
.*                                                                      00307500
&ZOPN                 SETA  &ZOPN+1                                     00307600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_MSGSTGKEY'               00307700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00307800
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             00307900
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00308000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).MSGSTGKEY'                    00308100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00308200
.*-------------------------------------------------------------------   00308300
.***AM.L05 XSCOPE XL1                                                   00308400
&ZOPN                 SETA &ZOPN+1                                      00308500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSCOPE'                           00308600
&ZOPO(&ZOPN)          SETC 'DS'                                         00308700
&ZOPV(&ZOPN)          SETC 'XL1'                                        00308800
&ZOPD(&ZOPN)          SETC '++ &ZXSCOPE XSCOPE'                         00308900
.*                                                                      00309000
&ZOPN                 SETA  &ZOPN+1                                     00309100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSCOPE_ALL'                      00309200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00309300
&ZOPV(&ZOPN)          SETC  '1'                                         00309400
&ZOPD(&ZOPN)          SETC  '++ XSCOPE.'                                00309500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ALL'                          00309600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00309700
.*-------------------------------------------------------------------   00309800
.***AM.L09  XMSGSTGKEY BL.8                                             00309900
&ZOPN                 SETA &ZOPN+1                                      00310000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMSGSTGKEY'                       00310100
&ZOPO(&ZOPN)          SETC 'DS'                                         00310200
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00310300
&ZOPD(&ZOPN)          SETC '++ &ZXMSGSTGKEY '                           00310400
.*-------------------------------------------------------------------   00310500
.***AM.L09  XMSGTOKEN CL32                                              00310600
&ZOPN                 SETA &ZOPN+1                                      00310700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMSGTOKEN'                        00310800
&ZOPO(&ZOPN)          SETC 'DS'                                         00310900
&ZOPV(&ZOPN)          SETC 'CL32'                                       00311000
&ZOPD(&ZOPN)          SETC '++ &ZXMSGTOKEN '                            00311100
.*-------------------------------------------------------------------   00311200
.***AM.L09  XDATALOC CL16                                               00311300
&ZOPN                 SETA &ZOPN+1                                      00311400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDATALOC'                         00311500
&ZOPO(&ZOPN)          SETC 'DS'                                         00311600
&ZOPV(&ZOPN)          SETC 'CL16'                                       00311700
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            00311800
.*-------------------------------------------------------------------   00311900
.***AM.L09 ADDR64 XANSAREA AD                                           00312000
&ZOPN                 SETA &ZOPN+1                                      00312100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XANSAREA_ADDR64'                  00312200
&ZOPO(&ZOPN)          SETC 'DS'                                         00312300
&ZOPV(&ZOPN)          SETC 'AD'                                         00312400
&ZOPD(&ZOPN)          SETC '++ &ZXANSAREA ADDR64'                       00312500
.*-------------------------------------------------------------------   00312600
.***AM.L09 ALET XANSAREA F                                              00312700
&ZOPN                 SETA &ZOPN+1                                      00312800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XANSAREA_ALET'                    00312900
&ZOPO(&ZOPN)          SETC 'DS'                                         00313000
&ZOPV(&ZOPN)          SETC 'F'                                          00313100
&ZOPD(&ZOPN)          SETC '++ &ZXANSAREA ALET'                         00313200
.*-------------------------------------------------------------------   00313300
.***AM.L09  XANSLEN F                                                   00313400
&ZOPN                 SETA &ZOPN+1                                      00313500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XANSLEN'                          00313600
&ZOPO(&ZOPN)          SETC 'DS'                                         00313700
&ZOPV(&ZOPN)          SETC 'F'                                          00313800
&ZOPD(&ZOPN)          SETC '++ &ZXANSLEN '                              00313900
.*-------------------------------------------------------------------   00314000
.***AM.L09  X#DATADESC F                                                00314100
&ZOPN                 SETA &ZOPN+1                                      00314200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._X#DATADESC'                       00314300
&ZOPO(&ZOPN)          SETC 'DS'                                         00314400
&ZOPV(&ZOPN)          SETC 'F'                                          00314500
&ZOPD(&ZOPN)          SETC '++ &ZX#DATADESC '                           00314600
.*-------------------------------------------------------------------   00314700
.***AM.L09  XRSV0002 CL4                                                00314800
&ZOPN                 SETA &ZOPN+1                                      00314900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0002'                         00315000
&ZOPO(&ZOPN)          SETC 'DS'                                         00315100
&ZOPV(&ZOPN)          SETC 'CL4'                                        00315200
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00315300
.*-------------------------------------------------------------------   00315400
.***AM.MLM1 SAVED LOCATION COUNTER                                      00315500
                      AIF  ('&ZENDBASEPL' NE '').ZL22LB                 00315600
&ZENDBASEPL           SETC 'YES'                                        00315700
&ZOPN                 SETA &ZOPN+1                                      00315800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00315900
&ZOPO(&ZOPN)          SETC 'EQU'                                        00316000
&ZOPV(&ZOPN)          SETC '*'                                          00316100
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00316200
.ZL22LB               ANOP  ,                                           00316300
.*-------------------------------------------------------------------   00316400
.***AM.PJR1 DEFINED ON XDATALOC                                         00316500
&ZOPN                 SETA &ZOPN+1                                      00316600
&ZOPL(&ZOPN)          SETC ' '                                          00316700
&ZOPO(&ZOPN)          SETC 'ORG'                                        00316800
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+40'                               00316900
&ZOPD(&ZOPN)          SETC ' '                                          00317000
.*-------------------------------------------------------------------   00317100
.***AM.L09  XDATALEN F                                                  00317200
&ZOPN                 SETA &ZOPN+1                                      00317300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDATALEN'                         00317400
&ZOPO(&ZOPN)          SETC 'DS'                                         00317500
&ZOPV(&ZOPN)          SETC 'F'                                          00317600
&ZOPD(&ZOPN)          SETC '++ &ZXDATALEN '                             00317700
.*-------------------------------------------------------------------   00317800
.***AM.L09 ALET XDATAAREA F                                             00317900
&ZOPN                 SETA &ZOPN+1                                      00318000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDATAAREA_ALET'                   00318100
&ZOPO(&ZOPN)          SETC 'DS'                                         00318200
&ZOPV(&ZOPN)          SETC 'F'                                          00318300
&ZOPD(&ZOPN)          SETC '++ &ZXDATAAREA ALET'                        00318400
.*-------------------------------------------------------------------   00318500
.***AM.L09 ADDR64 XDATAAREA AD                                          00318600
&ZOPN                 SETA &ZOPN+1                                      00318700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDATAAREA_ADDR64'                 00318800
&ZOPO(&ZOPN)          SETC 'DS'                                         00318900
&ZOPV(&ZOPN)          SETC 'AD'                                         00319000
&ZOPD(&ZOPN)          SETC '++ &ZXDATAAREA ADDR64'                      00319100
.*-------------------------------------------------------------------   00319200
.***AM.PJR1 DEFINED ON XDATALOC                                         00319300
&ZOPN                 SETA &ZOPN+1                                      00319400
&ZOPL(&ZOPN)          SETC ' '                                          00319500
&ZOPO(&ZOPN)          SETC 'ORG'                                        00319600
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+40'                               00319700
&ZOPD(&ZOPN)          SETC ' '                                          00319800
.*-------------------------------------------------------------------   00319900
.***AM.L09  XLENDDENTRY F                                               00320000
&ZOPN                 SETA &ZOPN+1                                      00320100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLENDDENTRY'                      00320200
&ZOPO(&ZOPN)          SETC 'DS'                                         00320300
&ZOPV(&ZOPN)          SETC 'F'                                          00320400
&ZOPD(&ZOPN)          SETC '++ &ZXLENDDENTRY '                          00320500
.*-------------------------------------------------------------------   00320600
.***AM.L09 ALET XDATADESC F                                             00320700
&ZOPN                 SETA &ZOPN+1                                      00320800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDATADESC_ALET'                   00320900
&ZOPO(&ZOPN)          SETC 'DS'                                         00321000
&ZOPV(&ZOPN)          SETC 'F'                                          00321100
&ZOPD(&ZOPN)          SETC '++ &ZXDATADESC ALET'                        00321200
.*-------------------------------------------------------------------   00321300
.***AM.L09 ADDR64 XDATADESC AD                                          00321400
&ZOPN                 SETA &ZOPN+1                                      00321500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDATADESC_ADDR64'                 00321600
&ZOPO(&ZOPN)          SETC 'DS'                                         00321700
&ZOPV(&ZOPN)          SETC 'AD'                                         00321800
&ZOPD(&ZOPN)          SETC '++ &ZXDATADESC ADDR64'                      00321900
&ZOPN                 SETA &ZOPN+1                                      00322000
&ZOPL(&ZOPN)          SETC ' '                                          00322100
&ZOPO(&ZOPN)          SETC 'ORG'                                        00322200
&ZOPV(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00322300
&ZOPD(&ZOPN)          SETC 'RESET LOCATION COUNTER'                     00322400
.*-------------------------------------------------------------------   00322500
.***AM.L10 END OF IXCRECV LIST PARAMETERS                               00322600
&ZOPN                 SETA &ZOPN+1                                      00322700
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00322800
&ZOPO(&ZOPN)          SETC 'EQU'                                        00322900
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00323000
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00323100
.*                                                                      00323200
&ZOPN                 SETA &ZOPN+1                                      00323300
&ZOPL(&ZOPN)          SETC ' '                                          00323400
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00323500
&ZOPV(&ZOPN)          SETC '1'                                          00323600
&ZOPD(&ZOPN)          SETC ' '                                          00323700
.*-------------------------------------------------------------------   00323800
.***AL.L12 IXCRECV FMT=LIST MF=S!L PARAMETERS                           00323900
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00324000
.*                                                                      00324100
&ZOPN                 SETA  &ZOPN+1                                     00324200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00324300
&ZOPO(&ZOPN)          SETC  'DC'                                        00324400
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00324500
&ZOPD(&ZOPN)          SETC  '++ IXCRECV ARG PARMS'                      00324600
.*                                                                      00324700
.ZLMFSLX              ANOP  ,                                           00324800
.*-------------------------------------------------------------------   00324900
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00325000
&ZPLLEN               SETA 80                                           00325100
.*                                                                      00325200
.******************************************************************     00325300
.***AI.L01 IXCRECV FMT=LIST FILL IN PARAMETER AREA                      00325400
.******************************************************************     00325500
                      ACTR  10000                                       00325600
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00325700
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00325800
&ZCVAL                SETC  'LAE'          XAX MODE                     00325900
.ZIMFXA               ANOP ,                                            00326000
.*                                                                      00326100
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00326200
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00326300
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00326400
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00326500
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00326600
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00326700
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00326800
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00326900
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00327000
&ZOPN                 SETA  &ZOPN+1                                     00327100
&ZOPL(&ZOPN)          SETC  ' '                                         00327200
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00327300
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00327400
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00327500
                      AGO   .ZIMFNX                                     00327600
.*                                                                      00327700
.ZIMFN2               ANOP ,                                            00327800
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     00327900
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  00328000
&ZOPN                 SETA  &ZOPN+1                                     00328100
&ZOPL(&ZOPN)          SETC  ' '                                         00328200
&ZOPO(&ZOPN)          SETC  'LAE'                                       00328300
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  00328400
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00328500
                      AGO   .ZIMFNX                                     00328600
.ZIMFNX1              ANOP ,                                            00328700
&ZOPN                 SETA  &ZOPN+1                                     00328800
&ZOPL(&ZOPN)          SETC  ' '                                         00328900
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00329000
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00329100
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00329200
.ZIMFNX               ANOP ,                                            00329300
.********************************************************************   00329400
.***AI.L02 IXCRECV FMT=LIST INITIALIZE PARAMETER AREA                   00329500
.********************************************************************   00329600
.***AI.L03 MF=(SLE)                                                     00329700
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00329800
.*                                                                      00329900
&ZOPN                 SETA  &ZOPN+1                                     00330000
&ZOPL(&ZOPN)          SETC  ' '                                         00330100
&ZOPO(&ZOPN)          SETC  'XC'                                        00330200
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00330300
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00330400
.ZIMFLX               ANOP  ,                                           00330500
.*-------------------------------------------------------------------   00330600
.***AI.L07 XRECEIVE AL1                                                 00330700
&ZW                   SETC  ''                                          00330800
.*-------------------------------------------------------------------   00330900
.***AI.L15 XRECEIVE "STATUS" AL1                                        00331000
         AIF   ('&XRECEIVE' NE 'STATUS').ZI4A                           00331100
&ZW                   SETC  '1'                                         00331200
.ZI4A                 ANOP  ,                                           00331300
.*-------------------------------------------------------------------   00331400
.***AI.L15 XRECEIVE "RESPONSES" AL1                                     00331500
         AIF   ('&XRECEIVE' NE 'RESPONSES').ZI5A                        00331600
&ZW                   SETC  '2'                                         00331700
.ZI5A                 ANOP  ,                                           00331800
.*-------------------------------------------------------------------   00331900
.***AI.L17 XRECEIVE AL1                                                 00332000
                      AIF   ('&ZW' EQ '0').ZI5B                         00332100
                      AIF   ('&ZW' EQ '').ZI5B                          00332200
.*                                                                      00332300
&ZOPN                 SETA  &ZOPN+1                                     00332400
&ZOPL(&ZOPN)          SETC  ' '                                         00332500
&ZOPO(&ZOPN)          SETC  'MVI'                                       00332600
&ZOPV(&ZOPN)          SETC  '4(1),&ZW'                                  00332700
&ZOPD(&ZOPN)          SETC  '++ &ZXRECEIVE XRECEIVE'                    00332800
.ZI5B                 ANOP  ,                                           00332900
.*-------------------------------------------------------------------   00333000
.***AI.L05 XFLAGS BL1                                                   00333100
&ZW                   SETC  ''                                          00333200
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00333300
.*-------------------------------------------------------------------   00333400
.***AI.L08 XFLAGS "BLOCKING"                                            00333500
.***      BL1'1XXXXXXX'                                                 00333600
         AIF   ('&XREQTYPE' NE 'BLOCKING').ZI7A                         00333700
&ZW                   SETC  '&ZW.1'                                     00333800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00333900
                      AGO   .ZI7C                                       00334000
.*                                                                      00334100
.ZI7A                 ANOP  ,                                           00334200
&ZW                   SETC  '&ZW.0'                                     00334300
.ZI7C                 ANOP  ,                                           00334400
.*-------------------------------------------------------------------   00334500
.***AI.L08 XFLAGS "NEXT"                                                00334600
.***      BL1'X1XXXXXX'                                                 00334700
         AIF   ('&XBIND' NE 'NEXT').ZI8A                                00334800
&ZW                   SETC  '&ZW.1'                                     00334900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00335000
                      AGO   .ZI8C                                       00335100
.*                                                                      00335200
.ZI8A                 ANOP  ,                                           00335300
&ZW                   SETC  '&ZW.0'                                     00335400
.ZI8C                 ANOP  ,                                           00335500
.*-------------------------------------------------------------------   00335600
.***AI.L08 XFLAGS "NODATA"                                              00335700
.***      BL1'XX1XXXXX'                                                 00335800
         AIF   ('&XNODATA' EQ '').ZI9A                                  00335900
&ZW                   SETC  '&ZW.1'                                     00336000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00336100
                      AGO   .ZI9C                                       00336200
.*                                                                      00336300
.ZI9A                 ANOP  ,                                           00336400
&ZW                   SETC  '&ZW.0'                                     00336500
.ZI9C                 ANOP  ,                                           00336600
.*-------------------------------------------------------------------   00336700
.***AI.L08 XFLAGS "DATAAREA"                                            00336800
.***      BL1'XXX1XXXX'                                                 00336900
         AIF   ('&DATAAREA' EQ '').ZI10A                                00337000
&ZW                   SETC  '&ZW.1'                                     00337100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00337200
                      AGO   .ZI10C                                      00337300
.*                                                                      00337400
.ZI10A                ANOP  ,                                           00337500
&ZW                   SETC  '&ZW.0'                                     00337600
.ZI10C                ANOP  ,                                           00337700
.*-------------------------------------------------------------------   00337800
.***AI.L08 XFLAGS "DATADESC"                                            00337900
.***      BL1'XXXX1XXX'                                                 00338000
         AIF   ('&DATADESC' EQ '').ZI11A                                00338100
&ZW                   SETC  '&ZW.1'                                     00338200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00338300
                      AGO   .ZI11C                                      00338400
.*                                                                      00338500
.ZI11A                ANOP  ,                                           00338600
&ZW                   SETC  '&ZW.0'                                     00338700
.ZI11C                ANOP  ,                                           00338800
.*-------------------------------------------------------------------   00338900
.***AI.L08 XFLAGS "MSGSTGKEY"                                           00339000
.***      BL1'XXXXX1XX'                                                 00339100
         AIF   ('&MSGSTGKEY' EQ '').ZI12A                               00339200
         AIF   ('&MSGSTGKEY' EQ 'USERKEY').ZI12A                        00339300
&ZW                   SETC  '&ZW.100'                                   00339400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00339500
                      AGO   .ZI12C                                      00339600
.*                                                                      00339700
.ZI12A                ANOP  ,                                           00339800
&ZW                   SETC  '&ZW.000'                                   00339900
.ZI12C                ANOP  ,                                           00340000
.*-------------------------------------------------------------------   00340100
.***AI.L11 XFLAGS BL1                                                   00340200
                      AIF   ('&ZCLNG' NE 'YES').ZI12E  ALL ZERO BITS    00340300
&ZOPN                 SETA  &ZOPN+1                                     00340400
&ZOPL(&ZOPN)          SETC  ' '                                         00340500
&ZOPO(&ZOPN)          SETC  'OI'                                        00340600
&ZOPV(&ZOPN)          SETC  '5(1),B''&ZW'''                             00340700
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00340800
.ZI12E                ANOP  ,                                           00340900
.*-------------------------------------------------------------------   00341000
.***AI.L07 XSCOPE AL1                                                   00341100
&ZW                   SETC  ''                                          00341200
.*-------------------------------------------------------------------   00341300
.***AI.L15 XSCOPE "ALL" AL1                                             00341400
         AIF   ('&XSCOPE' NE 'ALL').ZI14A                               00341500
&ZW                   SETC  '1'                                         00341600
.ZI14A                ANOP  ,                                           00341700
.*-------------------------------------------------------------------   00341800
.***AI.L17 XSCOPE AL1                                                   00341900
                      AIF   ('&ZW' EQ '0').ZI14B                        00342000
                      AIF   ('&ZW' EQ '').ZI14B                         00342100
.*                                                                      00342200
&ZOPN                 SETA  &ZOPN+1                                     00342300
&ZOPL(&ZOPN)          SETC  ' '                                         00342400
&ZOPO(&ZOPN)          SETC  'MVI'                                       00342500
&ZOPV(&ZOPN)          SETC  '6(1),&ZW'                                  00342600
&ZOPD(&ZOPN)          SETC  '++ &ZXSCOPE XSCOPE'                        00342700
.ZI14B                ANOP  ,                                           00342800
.*-------------------------------------------------------------------   00342900
.***AI.L18  XMSGSTGKEY XL1                                              00343000
         AIF   ('&XMSGSTGKEY' NE 'USERKEY').ZI15                        00343100
&ZXMSGSTGKEY          SETC  ''             RESET INPUT/OUTPUT           00343200
.ZI15                 ANOP  ,                                           00343300
.*-------------------------------------------------------------------   00343400
.***AI.L25  XMSGSTGKEY XL1                                              00343500
                      AIF   ('&ZXMSGSTGKEY' EQ '').ZI15E                00343600
                      AIF   ('&ZXMSGSTGKEY' EQ 'OUTPUT').ZI15E          00343700
&ZCGPR                SETC  '&XMSGSTGKEY'                               00343800
.*                                                                      00343900
                      AIF   ('&XMSGSTGKEY'(1,1) NE '(').ZI15B           00344000
&ZCGPR   SETC  '0('.'&XMSGSTGKEY'(2,K'&XMSGSTGKEY-2).')'                00344100
                      AGO   .ZI15D                                      00344200
.ZI15B                ANOP  ,                                           00344300
.*                                                                      00344400
&ZC                   SETC  '&XMSGSTGKEY'(1,1)                          00344500
                      AIF   (T'&ZC NE 'N').ZI15D                        00344600
&ZC                   SETC  '&XMSGSTGKEY'                               00344700
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI15D               00344800
&ZCGPR                SETC  '=BL1''&XMSGSTGKEY'''                       00344900
.*                                                                      00345000
.ZI15D                ANOP  ,                                           00345100
.*                                                                      00345200
&ZOPN                 SETA  &ZOPN+1                                     00345300
&ZOPL(&ZOPN)          SETC  ' '                                         00345400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00345500
&ZOPV(&ZOPN)          SETC  '7(1,1),&ZCGPR'                             00345600
&ZOPD(&ZOPN)          SETC  '++ &ZXMSGSTGKEY XMSGSTGKEY'                00345700
.*                                                                      00345800
.ZI15E                ANOP  ,                                           00345900
.*-------------------------------------------------------------------   00346000
.***AI.L25  XMSGTOKEN CL32                                              00346100
                      AIF   ('&ZXMSGTOKEN' EQ '').ZI16E                 00346200
                      AIF   ('&ZXMSGTOKEN' EQ 'OUTPUT').ZI16E           00346300
&ZCGPR                SETC  '&XMSGTOKEN'                                00346400
.*                                                                      00346500
                      AIF   ('&XMSGTOKEN'(1,1) NE '(').ZI16B            00346600
&ZCGPR   SETC  '0('.'&XMSGTOKEN'(2,K'&XMSGTOKEN-2).')'                  00346700
.ZI16B                ANOP  ,                                           00346800
.*                                                                      00346900
&ZOPN                 SETA  &ZOPN+1                                     00347000
&ZOPL(&ZOPN)          SETC  ' '                                         00347100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00347200
&ZOPV(&ZOPN)          SETC  '8(32,1),&ZCGPR'                            00347300
&ZOPD(&ZOPN)          SETC  '++ &ZXMSGTOKEN XMSGTOKEN'                  00347400
.*                                                                      00347500
.ZI16E                ANOP  ,                                           00347600
.*-------------------------------------------------------------------   00347700
.***AI.L19 ADDR64 XANSAREA AD                                           00347800
                      AIF   ('&ZXANSAREA' EQ '').ZI18H                  00347900
&ZCLNG                SETC  '&XANSAREA'                                 00348000
&ZCGPR                SETC  '14'                                        00348100
         AIF   ('&XANSAREA'(1,1) EQ '(').ZI18F  IN GPR                  00348200
.*                                                                      00348300
&ZOPN                 SETA  &ZOPN+1                                     00348400
&ZOPL(&ZOPN)          SETC  ' '                                         00348500
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00348600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00348700
&ZOPD(&ZOPN)          SETC  '++ &ZXANSAREA XANSAREA'                    00348800
.*                                                                      00348900
                      AGO   .ZI18G                                      00349000
.*                                                                      00349100
.ZI18F                ANOP  ,                                           00349200
&ZCGPR   SETC  '&XANSAREA'(2,K'&XANSAREA-2)                             00349300
.*                                                                      00349400
.ZI18G                ANOP  ,                                           00349500
                      AIF   ('&SYSAM64' EQ 'YES').ZI18H1A               00349600
.*                                                                      00349700
&ZOPN                 SETA  &ZOPN+1                                     00349800
&ZOPL(&ZOPN)          SETC  ' '                                         00349900
&ZOPO(&ZOPN)          SETC  'ST'                                        00350000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4+56(,1)'                           00350100
&ZOPD(&ZOPN)          SETC  '++ &ZXANSAREA XANSAREA'                    00350200
.*                                                                      00350300
                      AGO   .ZI18H                                      00350400
.ZI18H1A              ANOP  ,                                           00350500
.*                                                                      00350600
&ZOPN                 SETA  &ZOPN+1                                     00350700
&ZOPL(&ZOPN)          SETC  ' '                                         00350800
&ZOPO(&ZOPN)          SETC  'STG'                                       00350900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,56(,1)'                             00351000
&ZOPD(&ZOPN)          SETC  '++ &ZXANSAREA XANSAREA'                    00351100
.*                                                                      00351200
.ZI18H                ANOP  ,                                           00351300
.*-------------------------------------------------------------------   00351400
.***AI.L23 ALET XANSAREA F                                              00351500
         AIF   ('&ZXANSAREA' EQ '').ZI19G                               00351600
         AIF   ('&SYSASCE' EQ 'P').ZI19G   SYSSTATE PRIMARY             00351700
&ZCLNG                SETC  '&XANSAREA'                                 00351800
         AIF   ('&XANSAREA'(1,1) EQ '(').ZI19E  IN AR                   00351900
.*                                                                      00352000
&ZCGPR                SETC  '14'                                        00352100
                      AGO   .ZI19F                                      00352200
.*                                                                      00352300
.ZI19E                ANOP  ,                                           00352400
&ZCGPR   SETC  '&XANSAREA'(2,K'&XANSAREA-2)                             00352500
.*                                                                      00352600
.ZI19F                ANOP  ,                                           00352700
.*                                                                      00352800
&ZOPN                 SETA  &ZOPN+1                                     00352900
&ZOPL(&ZOPN)          SETC  ' '                                         00353000
&ZOPO(&ZOPN)          SETC  'STAM'                                      00353100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,64(1)'                       00353200
&ZOPD(&ZOPN)          SETC  '++ &ZXANSAREA XANSAREA'                    00353300
.*                                                                      00353400
.ZI19G                ANOP  ,                                           00353500
.*-------------------------------------------------------------------   00353600
.***AI.L25  XANSLEN F                                                   00353700
                      AIF   ('&ZXANSLEN' EQ '').ZI20E                   00353800
                      AIF   ('&ZXANSLEN' EQ 'OUTPUT').ZI20E             00353900
&ZCGPR                SETC  '&XANSLEN'                                  00354000
.*                                                                      00354100
                      AIF   ('&XANSLEN'(1,1) NE '(').ZI20B              00354200
&ZCGPR   SETC  '0('.'&XANSLEN'(2,K'&XANSLEN-2).')'                      00354300
                      AGO   .ZI20D                                      00354400
.ZI20B                ANOP  ,                                           00354500
.*                                                                      00354600
&ZC                   SETC  '&XANSLEN'(1,1)                             00354700
                      AIF   (T'&ZC NE 'N').ZI20D                        00354800
&ZC                   SETC  '&XANSLEN'                                  00354900
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI20D               00355000
&ZCGPR                SETC  '=AL4(&XANSLEN)'                            00355100
.*                                                                      00355200
.ZI20D                ANOP  ,                                           00355300
.*                                                                      00355400
&ZOPN                 SETA  &ZOPN+1                                     00355500
&ZOPL(&ZOPN)          SETC  ' '                                         00355600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00355700
&ZOPV(&ZOPN)          SETC  '68(4,1),&ZCGPR'                            00355800
&ZOPD(&ZOPN)          SETC  '++ &ZXANSLEN XANSLEN'                      00355900
.*                                                                      00356000
.ZI20E                ANOP  ,                                           00356100
.*-------------------------------------------------------------------   00356200
.***AI.L25  X#DATADESC F                                                00356300
                      AIF   ('&ZX#DATADESC' EQ '').ZI21E                00356400
                      AIF   ('&ZX#DATADESC' EQ 'OUTPUT').ZI21E          00356500
&ZCGPR                SETC  '&X#DATADESC'                               00356600
.*                                                                      00356700
                      AIF   ('&X#DATADESC'(1,1) NE '(').ZI21B           00356800
&ZCGPR   SETC  '0('.'&X#DATADESC'(2,K'&X#DATADESC-2).')'                00356900
                      AGO   .ZI21D                                      00357000
.ZI21B                ANOP  ,                                           00357100
.*                                                                      00357200
&ZC                   SETC  '&X#DATADESC'(1,1)                          00357300
                      AIF   (T'&ZC NE 'N').ZI21D                        00357400
&ZC                   SETC  '&X#DATADESC'                               00357500
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI21D               00357600
&ZCGPR                SETC  '=AL4(&X#DATADESC)'                         00357700
.*                                                                      00357800
.ZI21D                ANOP  ,                                           00357900
.*                                                                      00358000
&ZOPN                 SETA  &ZOPN+1                                     00358100
&ZOPL(&ZOPN)          SETC  ' '                                         00358200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00358300
&ZOPV(&ZOPN)          SETC  '72(4,1),&ZCGPR'                            00358400
&ZOPD(&ZOPN)          SETC  '++ &ZX#DATADESC X#DATADESC'                00358500
.*                                                                      00358600
.ZI21E                ANOP  ,                                           00358700
.*-------------------------------------------------------------------   00358800
.***AI.L25  XDATALEN F                                                  00358900
                      AIF   ('&ZXDATALEN' EQ '').ZI24E                  00359000
                      AIF   ('&ZXDATALEN' EQ 'OUTPUT').ZI24E            00359100
&ZCGPR                SETC  '&XDATALEN'                                 00359200
.*                                                                      00359300
                      AIF   ('&XDATALEN'(1,1) NE '(').ZI24B             00359400
&ZCGPR   SETC  '0('.'&XDATALEN'(2,K'&XDATALEN-2).')'                    00359500
                      AGO   .ZI24D                                      00359600
.ZI24B                ANOP  ,                                           00359700
.*                                                                      00359800
&ZC                   SETC  '&XDATALEN'(1,1)                            00359900
                      AIF   (T'&ZC NE 'N').ZI24D                        00360000
&ZC                   SETC  '&XDATALEN'                                 00360100
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI24D               00360200
&ZCGPR                SETC  '=AL4(&XDATALEN)'                           00360300
.*                                                                      00360400
.ZI24D                ANOP  ,                                           00360500
.*                                                                      00360600
&ZOPN                 SETA  &ZOPN+1                                     00360700
&ZOPL(&ZOPN)          SETC  ' '                                         00360800
&ZOPO(&ZOPN)          SETC  'MVC'                                       00360900
&ZOPV(&ZOPN)          SETC  '40(4,1),&ZCGPR'                            00361000
&ZOPD(&ZOPN)          SETC  '++ &ZXDATALEN XDATALEN'                    00361100
.*                                                                      00361200
.ZI24E                ANOP  ,                                           00361300
.*-------------------------------------------------------------------   00361400
.***AI.L23 ALET XDATAAREA F                                             00361500
         AIF   ('&ZXDATAAREA' EQ '').ZI25G                              00361600
         AIF   ('&SYSASCE' EQ 'P').ZI25G   SYSSTATE PRIMARY             00361700
&ZCLNG                SETC  '&XDATAAREA'                                00361800
         AIF   ('&XDATAAREA'(1,1) EQ '(').ZI25E  IN AR                  00361900
.*                                                                      00362000
&ZCGPR                SETC  '14'                                        00362100
&ZOPN                 SETA  &ZOPN+1                                     00362200
&ZOPL(&ZOPN)          SETC  ' '                                         00362300
&ZOPO(&ZOPN)          SETC  'LAE'                                       00362400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00362500
&ZOPD(&ZOPN)          SETC  '++ &ZXDATAAREA XDATAAREA'                  00362600
                      AGO   .ZI25F                                      00362700
.*                                                                      00362800
.ZI25E                ANOP  ,                                           00362900
&ZCGPR   SETC  '&XDATAAREA'(2,K'&XDATAAREA-2)                           00363000
.*                                                                      00363100
.ZI25F                ANOP  ,                                           00363200
.*                                                                      00363300
&ZOPN                 SETA  &ZOPN+1                                     00363400
&ZOPL(&ZOPN)          SETC  ' '                                         00363500
&ZOPO(&ZOPN)          SETC  'STAM'                                      00363600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,44(1)'                       00363700
&ZOPD(&ZOPN)          SETC  '++ &ZXDATAAREA XDATAAREA'                  00363800
.*                                                                      00363900
.ZI25G                ANOP  ,                                           00364000
.*-------------------------------------------------------------------   00364100
.***AI.L19 ADDR64 XDATAAREA AD                                          00364200
                      AIF   ('&ZXDATAAREA' EQ '').ZI26H                 00364300
&ZCLNG                SETC  '&XDATAAREA'                                00364400
&ZCGPR                SETC  '14'                                        00364500
         AIF   ('&XDATAAREA'(1,1) EQ '(').ZI26F  IN GPR                 00364600
         AIF   ('&SYSASCE' NE 'P').ZI26G   SYSSTATE PRIMARY             00364700
.*                                                                      00364800
&ZOPN                 SETA  &ZOPN+1                                     00364900
&ZOPL(&ZOPN)          SETC  ' '                                         00365000
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00365100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00365200
&ZOPD(&ZOPN)          SETC  '++ &ZXDATAAREA XDATAAREA'                  00365300
.*                                                                      00365400
                      AGO   .ZI26G                                      00365500
.*                                                                      00365600
.ZI26F                ANOP  ,                                           00365700
&ZCGPR   SETC  '&XDATAAREA'(2,K'&XDATAAREA-2)                           00365800
.*                                                                      00365900
.ZI26G                ANOP  ,                                           00366000
                      AIF   ('&SYSAM64' EQ 'YES').ZI26H1A               00366100
.*                                                                      00366200
&ZOPN                 SETA  &ZOPN+1                                     00366300
&ZOPL(&ZOPN)          SETC  ' '                                         00366400
&ZOPO(&ZOPN)          SETC  'ST'                                        00366500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4+48(,1)'                           00366600
&ZOPD(&ZOPN)          SETC  '++ &ZXDATAAREA XDATAAREA'                  00366700
.*                                                                      00366800
                      AGO   .ZI26H                                      00366900
.ZI26H1A              ANOP  ,                                           00367000
.*                                                                      00367100
&ZOPN                 SETA  &ZOPN+1                                     00367200
&ZOPL(&ZOPN)          SETC  ' '                                         00367300
&ZOPO(&ZOPN)          SETC  'STG'                                       00367400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,48(,1)'                             00367500
&ZOPD(&ZOPN)          SETC  '++ &ZXDATAAREA XDATAAREA'                  00367600
.*                                                                      00367700
.ZI26H                ANOP  ,                                           00367800
.*-------------------------------------------------------------------   00367900
.***AI.L25  XLENDDENTRY F                                               00368000
                      AIF   ('&ZXLENDDENTRY' EQ '').ZI28E               00368100
                      AIF   ('&ZXLENDDENTRY' EQ 'OUTPUT').ZI28E         00368200
&ZCGPR                SETC  '&XLENDDENTRY'                              00368300
.*                                                                      00368400
                      AIF   ('&XLENDDENTRY'(1,1) NE '(').ZI28B          00368500
&ZCGPR   SETC  '0('.'&XLENDDENTRY'(2,K'&XLENDDENTRY-2).')'              00368600
                      AGO   .ZI28D                                      00368700
.ZI28B                ANOP  ,                                           00368800
.*                                                                      00368900
&ZC                   SETC  '&XLENDDENTRY'(1,1)                         00369000
                      AIF   (T'&ZC NE 'N').ZI28D                        00369100
&ZC                   SETC  '&XLENDDENTRY'                              00369200
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI28D               00369300
&ZCGPR                SETC  '=FL4''&XLENDDENTRY'''                      00369400
.*                                                                      00369500
.ZI28D                ANOP  ,                                           00369600
.*                                                                      00369700
&ZOPN                 SETA  &ZOPN+1                                     00369800
&ZOPL(&ZOPN)          SETC  ' '                                         00369900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00370000
&ZOPV(&ZOPN)          SETC  '40(4,1),&ZCGPR'                            00370100
&ZOPD(&ZOPN)          SETC  '++ &ZXLENDDENTRY XLENDDENTRY'              00370200
.*                                                                      00370300
.ZI28E                ANOP  ,                                           00370400
.*-------------------------------------------------------------------   00370500
.***AI.L23 ALET XDATADESC F                                             00370600
         AIF   ('&ZXDATADESC' EQ '').ZI29G                              00370700
         AIF   ('&SYSASCE' EQ 'P').ZI29G   SYSSTATE PRIMARY             00370800
&ZCLNG                SETC  '&XDATADESC'                                00370900
         AIF   ('&XDATADESC'(1,1) EQ '(').ZI29E  IN AR                  00371000
.*                                                                      00371100
&ZCGPR                SETC  '14'                                        00371200
&ZOPN                 SETA  &ZOPN+1                                     00371300
&ZOPL(&ZOPN)          SETC  ' '                                         00371400
&ZOPO(&ZOPN)          SETC  'LAE'                                       00371500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00371600
&ZOPD(&ZOPN)          SETC  '++ &ZXDATADESC XDATADESC'                  00371700
                      AGO   .ZI29F                                      00371800
.*                                                                      00371900
.ZI29E                ANOP  ,                                           00372000
&ZCGPR   SETC  '&XDATADESC'(2,K'&XDATADESC-2)                           00372100
.*                                                                      00372200
.ZI29F                ANOP  ,                                           00372300
.*                                                                      00372400
&ZOPN                 SETA  &ZOPN+1                                     00372500
&ZOPL(&ZOPN)          SETC  ' '                                         00372600
&ZOPO(&ZOPN)          SETC  'STAM'                                      00372700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,44(1)'                       00372800
&ZOPD(&ZOPN)          SETC  '++ &ZXDATADESC XDATADESC'                  00372900
.*                                                                      00373000
.ZI29G                ANOP  ,                                           00373100
.*-------------------------------------------------------------------   00373200
.***AI.L19 ADDR64 XDATADESC AD                                          00373300
                      AIF   ('&ZXDATADESC' EQ '').ZI30H                 00373400
&ZCLNG                SETC  '&XDATADESC'                                00373500
&ZCGPR                SETC  '14'                                        00373600
         AIF   ('&XDATADESC'(1,1) EQ '(').ZI30F  IN GPR                 00373700
         AIF   ('&SYSASCE' NE 'P').ZI30G   SYSSTATE PRIMARY             00373800
.*                                                                      00373900
&ZOPN                 SETA  &ZOPN+1                                     00374000
&ZOPL(&ZOPN)          SETC  ' '                                         00374100
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00374200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00374300
&ZOPD(&ZOPN)          SETC  '++ &ZXDATADESC XDATADESC'                  00374400
.*                                                                      00374500
                      AGO   .ZI30G                                      00374600
.*                                                                      00374700
.ZI30F                ANOP  ,                                           00374800
&ZCGPR   SETC  '&XDATADESC'(2,K'&XDATADESC-2)                           00374900
.*                                                                      00375000
.ZI30G                ANOP  ,                                           00375100
                      AIF   ('&SYSAM64' EQ 'YES').ZI30H1A               00375200
.*                                                                      00375300
&ZOPN                 SETA  &ZOPN+1                                     00375400
&ZOPL(&ZOPN)          SETC  ' '                                         00375500
&ZOPO(&ZOPN)          SETC  'ST'                                        00375600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4+48(,1)'                           00375700
&ZOPD(&ZOPN)          SETC  '++ &ZXDATADESC XDATADESC'                  00375800
.*                                                                      00375900
                      AGO   .ZI30H                                      00376000
.ZI30H1A              ANOP  ,                                           00376100
.*                                                                      00376200
&ZOPN                 SETA  &ZOPN+1                                     00376300
&ZOPL(&ZOPN)          SETC  ' '                                         00376400
&ZOPO(&ZOPN)          SETC  'STG'                                       00376500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,48(,1)'                             00376600
&ZOPD(&ZOPN)          SETC  '++ &ZXDATADESC XDATADESC'                  00376700
.*                                                                      00376800
.ZI30H                ANOP  ,                                           00376900
.*-------------------------------------------------------------------   00377000
&ZOPN1                SETA &ZOPN                                        00377100
.*******************************************************************    00377200
.***  PROCESS IXCRECV OUTPUT PARAMETERS                                 00377300
.*******************************************************************    00377400
                      ACTR  10000                                       00377500
.*******************************************************************    00377600
.***AO.X02  RETURN CODE PROCESSING                                      00377700
.*******************************************************************    00377800
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00377900
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00378000
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00378100
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00378200
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00378300
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00378400
&ZOPN                 SETA  &ZOPN+1                                     00378500
&ZOPL(&ZOPN)          SETC  ' '                                         00378600
&ZOPO(&ZOPN)          SETC  'ST'                                        00378700
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00378800
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00378900
                      AGO   .ZMRETX                                     00379000
.*                                                                      00379100
.ZMRET2               ANOP  ,                                           00379200
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00379300
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00379400
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00379500
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00379600
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00379700
&ZOPN                 SETA  &ZOPN+1                                     00379800
&ZOPL(&ZOPN)          SETC  ' '                                         00379900
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00380000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00380100
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00380200
.ZMRETX               ANOP  ,                                           00380300
.*******************************************************************    00380400
.***AO.X03  REASON CODE PROCESSING                                      00380500
.*******************************************************************    00380600
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00380700
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00380800
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00380900
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00381000
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00381100
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00381200
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00381300
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00381400
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00381500
&ZOPN                 SETA  &ZOPN+1                                     00381600
&ZOPL(&ZOPN)          SETC  ' '                                         00381700
&ZOPO(&ZOPN)          SETC  'ST'                                        00381800
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00381900
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00382000
                      AGO   .ZMRSNX                                     00382100
.*                                                                      00382200
.ZMRSN2               ANOP  ,                                           00382300
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00382400
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00382500
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00382600
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00382700
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00382800
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00382900
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00383000
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00383100
&ZOPN                 SETA  &ZOPN+1                                     00383200
&ZOPL(&ZOPN)          SETC  ' '                                         00383300
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00383400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00383500
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00383600
.ZMRSNX               ANOP  ,                                           00383700
.*******************************************************************    00383800
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00383900
.*******************************************************************    00384000
.ZMFLX                ANOP  ,              MF=L PROCESSING              00384100
.*******************************************************************    00384200
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00384300
.*******************************************************************    00384400
                      ACTR  10000                                       00384500
.*                                                                      00384600
                      LCLA  &ZLC           COLUMN POSITION              00384700
                      LCLA  &ZOPX          LIST TABLE INDEX             00384800
                      LCLC  &ZLL           LABEL                        00384900
                      LCLC  &ZLOP          OPERATION                    00385000
                      LCLC  &ZLV           VALUE                        00385100
                      LCLC  &ZLD           DESCRIPTION                  00385200
.*                                                                      00385300
&ZOPX                 SETA  1                                           00385400
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00385500
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00385600
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00385700
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00385800
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00385900
                      AIF   (K'&ZLD LE 0).ZL5                           00386000
&ZLC                  SETA  35             COMMENT COLUMN               00386100
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00386200
&ZLC                  SETA  33             COMMMENT COLUMN              00386300
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00386400
&ZLV                  SETC  '&ZLV'.' '                                  00386500
                      AGO   .ZL3                                        00386600
.*                                                                      00386700
.ZL4                  ANOP  ,                                           00386800
&ZLV                  SETC  '&ZLV'.' '                                  00386900
.ZL5                  ANOP  ,                                           00387000
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00387100
.*                                                                      00387200
&ZLL     &ZLOP &ZLV                                                     00387300
.*                                                                      00387400
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00387500
                      AGO   .ZL2           CONTINUE LOOPING             00387600
.*                                                                      00387700
.ZLX                  ANOP  ,                                           00387800
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00387900
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00388000
         AIF   ('&SYSAM64' NE 'YES').NOTAM64                       @P1A 00388100
         LLGTR 14,14                   CLEAR HIGH HALF             @P1A 00388200
.NOTAM64 L     14,16(0,0)              GET CVT ADDRESS             @P1C 00388300
         L     14,772(14,0)            GET SFT ADDRESS                  00388400
         L     14,220(14,0)            GET LX FOR SERVICE ROUTINE       00388500
         LA    15,56                   GET EX FOR SERVICE ROUTINE       00388600
         OR    14,15                   GET PC NUMBER                    00388700
         PC    0(14)                                                    00388800
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00388900
.ZLINKX               ANOP  ,                                           00389000
.*******************************************************************    00389100
.***AP.X01  FORMAT GENERATED CODE                                       00389200
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00389300
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00389400
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00389500
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00389600
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00389700
                      AIF   (K'&ZLD LE 0).ZL51                          00389800
&ZLC                  SETA  35             COMMENT COLUMN               00389900
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00390000
&ZLC                  SETA  33             COMMENT COLUMN               00390100
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00390200
&ZLV                  SETC  '&ZLV'.' '                                  00390300
                      AGO   .ZL31                                       00390400
.*                                                                      00390500
.ZL41                 ANOP  ,                                           00390600
&ZLV                  SETC  '&ZLV'.' '                                  00390700
.ZL51                 ANOP  ,                                           00390800
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00390900
.*                                                                      00391000
&ZLL     &ZLOP &ZLV                                                     00391100
.*                                                                      00391200
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00391300
                      AGO   .ZL21          CONTINUE LOOPING             00391400
.*                                                                      00391500
.ZLX1                 ANOP  ,                                           00391600
.*******************************************************************    00391700
.***AP.X02  END OF IXCRECV MACRO                                        00391800
&ZIXCRECV             SETC  'YES'          SET IXCRECV USED             00391900
         POP   PRINT                                                    00392000
*                                            IXCRECV-0                  00392100
         SPACE 1                                                        00392200
.ZLX2                 ANOP  ,                                           00392300
         MEND                                                           00392400
**********************************************************************/ 00392500
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00392600
*%IXCRECV: MACRO KEYS(MSGTOKEN,RECEIVE,REQTYPE,SCOPE,ANSAREA,ANSLEN,    00392700
*                 NODATA,DATAAREA,DATALEN,DATADESC,#DATADESC,           00392800
*                 LENDDENTRY,BIND,MSGSTGKEY,RETCODE,RSNCODE,PLISTVER,   00392900
*                 MF);                                                  00393000
*  ANS('?'!!MACLABEL!!' '!!'IXCRECVP '!!MACLIST!!                       00393100
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              00393200
*%END IXCRECV;                                                          00393300
