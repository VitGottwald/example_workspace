*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IEAMSXMP                              -09/26/18-<0> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  Safe XM Post                                  * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5650-ZOS COPYRIGHT IBM CORP. 2016, 2019                         * 00001200
*                                                                     * 00001300
* STATUS= HBB77C0                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*      The IEAMSXMP macro provides a "safe cross-memory (XM) post"    * 00002000
*      protocol (in contrast with the POST macro for which            * 00002100
*      cross-memory POST is safe only in certain cases). The safe XM  * 00002200
*      post protocol                                                  * 00002300
*                                                                     * 00002400
*                                                                     * 00002500
*      o   Schedules an SRB with STOKEN to the target space, passing  * 00002600
*          information to be used to validate the target, such as a   * 00002700
*          TCB Token (TTOKEN) identifying a target TCB.               * 00002800
*                                                                     * 00002900
*      o   The target SRB validates that the target TCB is valid,     * 00003000
*          avoiding the POST if it is not                             * 00003100
*                                                                     * 00003200
*      o   If the target TCB is valid, uses branch-entry              * 00003300
*          non-cross-memory POST to POST the ECB.                     * 00003400
*                                                                     * 00003500
*                                                                     * 00003600
*                                                                     * 00003700
*01* EXTERNAL CLASSIFICATION:                                         * 00003800
*                                                                     * 00003900
*02* PI:   BASE                                                       * 00004000
*                                                                     * 00004100
*02* NONE: FIELDS                                                     * 00004200
*          MF=M                                                       * 00004300
*                                                                     * 00004400
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00004500
*                                                                     * 00004600
*01* ENVIRONMENT:                                                     * 00004700
*                                                                     * 00004800
*                                                                     * 00004900
*      Minimum authorization: Supervisor state.  Any PSW key.         * 00005000
*                                                                     * 00005100
*      Dispatchable unit mode: Task or SRB mode.                      * 00005200
*                                                                     * 00005300
*      Cross Memory Mode: Any PASN, any HASN, any SASN.               * 00005400
*                                                                     * 00005500
*      AMODE:            31- or 64-bit.                               * 00005600
*                                                                     * 00005700
*                        If in AMODE 64, specify SYSSTATE AMODE64=YES * 00005800
*                        before invoking this macro.                  * 00005900
*                                                                     * 00006000
*      ASC mode:         Primary.                                     * 00006100
*                                                                     * 00006200
*      Interrupt status: Enabled or disabled for I/O and external     * 00006300
*                        interrupts.                                  * 00006400
*                                                                     * 00006500
*      Locks:                                                         * 00006600
*                                                                     * 00006700
*                        The caller may hold any LOCAL lock, the CMS  * 00006800
*                        lock, and/or the CPU lock but is not         * 00006900
*                        required to hold any.                        * 00007000
*                                                                     * 00007100
*      Control parameters: Control parameters must be in the primary  * 00007200
*                        address space.                               * 00007300
*                                                                     * 00007400
*                                                                     * 00007500
*                        Control parameters above 2GB are allowed for * 00007600
*                        AMODE 64 callers only.  The WorkArea must be * 00007700
*                        below 2GB.                                   * 00007800
*                                                                     * 00007900
*                                                                     * 00008000
*                                                                     * 00008100
*01* PROGRAMMING REQUIREMENTS:                                        * 00008200
*                                                                     * 00008300
*    Make sure that field ECVTSXMP is non-zero before using this      * 00008400
*    service.  You may assume that that is the case for any z/OS      * 00008500
*    release after z/OS 2.2.                                          * 00008600
*                                                                     * 00008700
*    Include the IEAASM macro to get equate symbols for return and    * 00008800
*    reason codes.                                                    * 00008900
*                                                                     * 00009000
*01* RESTRICTIONS:                                                    * 00009100
*                                                                     * 00009200
*    None.                                                            * 00009300
*                                                                     * 00009400
*01* INPUT REGISTER INFORMATION:                                      * 00009500
*                                                                     * 00009600
*    Before issuing the IEAMSXMP macro, the caller does not have to   * 00009700
*    place any information into any register unless using it in       * 00009800
*    register notation for a particular parameter, or using it as a   * 00009900
*    base register.                                                   * 00010000
*                                                                     * 00010100
*    Before issuing the IEAMSXMP macro, the caller does not have to   * 00010200
*    place any information into any access register (AR).             * 00010300
*                                                                     * 00010400
*01* OUTPUT REGISTER INFORMATION:                                     * 00010500
*                                                                     * 00010600
*    When control returns to the caller, the GPRs contain:            * 00010700
*                                                                     * 00010800
*                                                                     * 00010900
*    REGISTER  CONTENTS                                               * 00011000
*                                                                     * 00011100
*    0         Reason code, when register 15 is not 0. Otherwise,     * 00011200
*              used as a work register by the system                  * 00011300
*                                                                     * 00011400
*    1         Used as a work register by the system                  * 00011500
*                                                                     * 00011600
*    2-13      Unchanged                                              * 00011700
*                                                                     * 00011800
*    14        Used as a work register by the system                  * 00011900
*                                                                     * 00012000
*    15        Return code                                            * 00012100
*                                                                     * 00012200
*                                                                     * 00012300
*                                                                     * 00012400
*    When control returns to the caller, the ARs contain:             * 00012500
*                                                                     * 00012600
*                                                                     * 00012700
*    REGISTER  CONTENTS                                               * 00012800
*                                                                     * 00012900
*    0-1       Used as work registers by the system                   * 00013000
*                                                                     * 00013100
*    2-13      Unchanged                                              * 00013200
*                                                                     * 00013300
*    14-15     Used as work registers by the system                   * 00013400
*                                                                     * 00013500
*                                                                     * 00013600
*                                                                     * 00013700
*    Some callers depend on register contents remaining the same      * 00013800
*    before and after issuing a service.  If the system changes the   * 00013900
*    contents of registers on which the caller depends, the caller    * 00014000
*    must save them before issuing the service, and restore them      * 00014100
*    after the system returns control.                                * 00014200
*                                                                     * 00014300
*01* PERFORMANCE IMPLICATIONS:                                        * 00014400
*    None.                                                            * 00014500
*                                                                     * 00014600
*01* SYNTAX:                                                          * 00014700
*                                                                     * 00014800
*Ýxlabel¨  IEAMSXMP     ECB=xecb                                      * 00014900
*                     Ý,POSTCODE=»xpostcode!0º¨                       * 00015000
*                    Ð ,TTOKENTYPE=ANY                                * 00015100
*                    !     ,TTOKEN=xttoken                            * 00015200
*                    !        Ý,STOKEN=»xstoken!FROM_TTOKENº¨         * 00015300
*                    ¿ ,TTOKENTYPE=FIRSTTASK                          * 00015400
*                          ,STOKEN=xstoken                            * 00015500
*                      ,KEY0TO15=xkey0to15                            * 00015600
*                     Ý,PURGEASID=»xpurgeasid!NO_PURGEASIDº           * 00015700
*                          ,PURGETCB=xpurgetcb¨                       * 00015800
*                     Ý,EXITRTN=»xexitrtn!NO_EXITº                    * 00015900
*                         Ý,EXITRTNPARMS                              * 00016000
*                                        =»xexitrtnparms!NO_EXITRTNPA * 00016100
*                                        RMSº¨¨                       * 00016200
*                    ÐÝ,IRB=NO¨                                       * 00016300
*                    ¿Ý,IRB=YES¨                                      * 00016400
*                    ÐÝ,INTASKTERMOK=NO¨                              * 00016500
*                    ¿Ý,INTASKTERMOK=YES¨                             * 00016600
*                      ,WORKAREA=xworkarea                            * 00016700
*                     Ý,RETCODE=xretcode¨                             * 00016800
*                     Ý,RSNCODE=xrsncode¨                             * 00016900
*                     Ý,PLISTVER=»xplistver!IMPLIED_VERSIONº¨         * 00017000
*                    ÐÝ,MF=S¨                                         * 00017100
*                    ÔÝ,MF=(L,xmfctrl»,xmfattr!0Dº)¨                  * 00017200
*                    ÔÝ,MF=(M,xmfctrl»,COMPLETE!NOCHECKº)¨            * 00017300
*                    ¿Ý,MF=(E,xmfctrl»,COMPLETE!NOCHECKº)¨            * 00017400
*                                                                     * 00017500
*                                                                     * 00017600
*      Where:                                                         * 00017700
*                                                                     * 00017800
*                                                                     * 00017900
*      Ýxlabel¨                                                       * 00018000
*          is an optional symbol, starting in column 1, that is the   * 00018100
*          name on the IEAMSXMP macro invocation.  The name must      * 00018200
*          conform to the rules for an ordinary assembler language    * 00018300
*          symbol.                                                    * 00018400
*          DEFAULT: No name.                                          * 00018500
*                                                                     * 00018600
*                                                                     * 00018700
*                                                                     * 00018800
*                                                                     * 00018900
*      ECB=xecb                                                       * 00019000
*          is the name (RS-type), or address in register (2)-(12), of * 00019100
*          a required fullword input which is the ECB to post.  The   * 00019200
*          storage for the ECB must be synchronized with the TTOKEN   * 00019300
*          that is used. Unless posted, the ECB storage must be valid * 00019400
*          (not freed) until termination of the task that is          * 00019500
*          represented by the TTOKEN.                                 * 00019600
*                                                                     * 00019700
*          If you are changing from using POST to using IEAMSXMP, you * 00019800
*          may be introducing an incompatible storage persistence     * 00019900
*          characteristic of the ECB storage that was not enforced or * 00020000
*          documented prior to the usage of IEAMSXMP. If the ECB to   * 00020100
*          be posted is part of a documented interface, you will have * 00020200
*          to document any new storage persistence requirement that   * 00020300
*          was not previously documented.  If yours is an IBM product * 00020400
*          making such a change, an IBM Change Notification should be * 00020500
*          created.                                                   * 00020600
*                                                                     * 00020700
*                                                                     * 00020800
*                                                                     * 00020900
*                                                                     * 00021000
*      ÝPOSTCODE=»xpostcode!0º¨                                       * 00021100
*          is the name (RS-type), or address in register (2)-(12), of * 00021200
*          an optional fullword input which is the POST code to use.  * 00021300
*          The POST code is intended to be in the range 0 - 2**24-1.  * 00021400
*          DEFAULT: 0                                                 * 00021500
*                                                                     * 00021600
*                                                                     * 00021700
*                                                                     * 00021800
*                                                                     * 00021900
*      TTOKENTYPE=»ANY!FIRSTTASKº                                     * 00022000
*          is a required keyword input that indicates the type of TCB * 00022100
*          Token (TTOKEN) to be used for validation                   * 00022200
*                                                                     * 00022300
*                                                                     * 00022400
*          TTOKENTYPE=ANY                                             * 00022500
*              that indicates any TTOKEN, not a specific type         * 00022600
*                                                                     * 00022700
*                                                                     * 00022800
*              TTOKEN=xttoken                                         * 00022900
*                  is the name (RS-type), or address in register      * 00023000
*                  (2)-(12), of a required 16 character input that is * 00023100
*                  the TTOKEN for the task to be validated.  It might * 00023200
*                  have been fetched using the TCBTOKEN service.  A   * 00023300
*                  value of zeroes is treated the same as             * 00023400
*                  TTOKENTYPE=FIRSTTASK and has the same requirements * 00023500
*                  as TTOKENTYPE=FIRSTTASK.  The target space STOKEN  * 00023600
*                  will be derived from the TTOKEN unless the STOKEN  * 00023700
*                  parameter is used and provides a non-zero STOKEN.  * 00023800
*                                                                     * 00023900
*                  The task must be active in order for the IEAMSXMP  * 00024000
*                  operation to succeed. The rule of thumb is that    * 00024100
*                  the ECB must persist until it is posted or until   * 00024200
*                  the persistence requirement of the poster is met.  * 00024300
*                  In general, the TTOKEN to use can be determined as * 00024400
*                  follows:                                           * 00024500
*                                                                     * 00024600
*                                                                     * 00024700
*                  o   If the target ECB is supplied by a task and it * 00024800
*                      is expected that the target ECB can only be    * 00024900
*                      posted up until the time that task terminates, * 00025000
*                      then use the current task's STCBTTKN for the   * 00025100
*                      TTOKEN.                                        * 00025200
*                                                                     * 00025300
*                  o   If all of the following are true               * 00025400
*                                                                     * 00025500
*                                                                     * 00025600
*                      -   you will be using the IRB=YES option       * 00025700
*                                                                     * 00025800
*                      -   this is a user key (8-15) ECB being posted * 00025900
*                          on behalf of an unauthorized task mode     * 00026000
*                          caller                                     * 00026100
*                                                                     * 00026200
*                      -   ASXBLWA of the home address space is       * 00026300
*                          non-zero                                   * 00026400
*                                                                     * 00026500
*                      -   within the LWA located by ASXBLWA, field   * 00026600
*                          LWATCB02 is not 0                          * 00026700
*                                                                     * 00026800
*                      -   the task identified by LWATCB02 is the     * 00026900
*                          caller's task or an ancestor of that task  * 00027000
*                                                                     * 00027100
*                                                                     * 00027200
*                      then use the TTOKEN of the task identified by  * 00027300
*                      LWATCB02.                                      * 00027400
*                                                                     * 00027500
*                  o   If the target ECB is supplied from a task that * 00027600
*                      is part of the jobstep program task tree (the  * 00027700
*                      current task's TCBBITCB bit is on) and it is   * 00027800
*                      expected that the ECB can be posted up until   * 00027900
*                      the time the currently running job step ends,  * 00028000
*                      then use the TTOKEN in STCBTTKN for the task   * 00028100
*                      with TCB address in field ASCBXTCB.            * 00028200
*                                                                     * 00028300
*                  o   If it is expected that the target ECB can be   * 00028400
*                      posted up until the time that the first task   * 00028500
*                      in the address space terminates, then specify  * 00028600
*                      a TTOKEN of hexadecimal zeroes or use the      * 00028700
*                      TTOKENTYPE=FIRSTTASK option.  Provide the      * 00028800
*                      STOKEN.                                        * 00028900
*                                                                     * 00029000
*                                                                     * 00029100
*                                                                     * 00029200
*                  The poster "owns" the rule and should document     * 00029300
*                  that rule for the ECB-related parameter of their   * 00029400
*                  interface.  That rule might be one of the above    * 00029500
*                  choices or might be something else. For example,   * 00029600
*                  there might be one rule for a request from a task  * 00029700
*                  within the jobstep program task tree and a         * 00029800
*                  different rule for a request from a task not       * 00029900
*                  within that task tree (which would typically be a  * 00030000
*                  system task).                                      * 00030100
*                                                                     * 00030200
*                                                                     * 00030300
*                  ÝSTOKEN=»xstoken!FROM_TTOKENº¨                     * 00030400
*                      is the name (RS-type), or address in register  * 00030500
*                      (2)-(12), of an optional 8 character input     * 00030600
*                      that is the STOKEN for the target address      * 00030700
*                      space.  Use this if you are providing a TTOKEN * 00030800
*                      of zeroes.  You can use this, but do not need  * 00030900
*                      to, if providing a TTOKEN obtained via the     * 00031000
*                      TCBTOKEN service or from field STCBTTKN.  You  * 00031100
*                      might have gotten the STOKEN from field        * 00031200
*                      ASSBSTKN while running in the address space or * 00031300
*                      via LOCASCB STOKEN=.  You must provide a valid * 00031400
*                      STOKEN and not use STOKEN=FROM_TTOKEN if using * 00031500
*                      a TTOKEN of zeroes.  If you provide a valid    * 00031600
*                      STOKEN with a valid TTOKEN, both must refer to * 00031700
*                      the same address space.                        * 00031800
*                      DEFAULT: FROM_TTOKEN                           * 00031900
*                                                                     * 00032000
*                                                                     * 00032100
*                                                                     * 00032200
*                                                                     * 00032300
*                                                                     * 00032400
*          TTOKENTYPE=FIRSTTASK                                       * 00032500
*              that indicates to use the TTOKEN of the first task for * 00032600
*              the address space (this task will be the region        * 00032700
*              control task for all address spaces other than         * 00032800
*              *MASTER* which has no RCT) and its address can be      * 00032900
*              found in ASXBFTCB.  TTOKENTYPE=FIRSTTASK should        * 00033000
*              usually be used only for a space that always           * 00033100
*              terminates when the jobstep program task terminates,   * 00033200
*              unlike an initiator space.  It may also be used for    * 00033300
*              compatibility purposes when changing from POST to      * 00033400
*              IEAMSXMP when you have to take into consideration the  * 00033500
*              existing use cases.  Use of TTOKENTYPE=FIRSTTASK       * 00033600
*              requires use of STOKEN, and that STOKEN must have been * 00033700
*              fetched with serialization against address space       * 00033800
*              termination or must have been captured while the       * 00033900
*              target space is your home, primary, or secondary       * 00034000
*              address space.  Unless it has been posted, the ECB     * 00034100
*              must not be freed (explicitly or by the system) prior  * 00034200
*              to the termination of the address space's first task   * 00034300
*              (which occurs only during memory termination).  Thus   * 00034400
*              the ECB storage must not be owned by a subtask of that * 00034500
*              first task (since the system frees storage owned by a  * 00034600
*              task upon termination of that task).                   * 00034700
*                                                                     * 00034800
*                                                                     * 00034900
*              STOKEN=xstoken                                         * 00035000
*                  is the name (RS-type), or address in register      * 00035100
*                  (2)-(12), of a required 8 character input that is  * 00035200
*                  the STOKEN for the target address space.  You      * 00035300
*                  might have gotten this from field ASSBSTKN while   * 00035400
*                  running in the address space or via LOCASCB        * 00035500
*                  STOKEN=.                                           * 00035600
*                                                                     * 00035700
*                                                                     * 00035800
*                                                                     * 00035900
*                                                                     * 00036000
*                                                                     * 00036100
*                                                                     * 00036200
*                                                                     * 00036300
*                                                                     * 00036400
*      KEY0TO15=xkey0to15                                             * 00036500
*          is the name (RS-type), or address in register (2)-(12), of * 00036600
*          a required byte input that is the key with which the POST  * 00036700
*          is to be done.  Must be in the range 0-15 (not             * 00036800
*          x'00'-x'F0').                                              * 00036900
*                                                                     * 00037000
*                                                                     * 00037100
*                                                                     * 00037200
*                                                                     * 00037300
*      ÝPURGEASID=»xpurgeasid!NO_PURGEASIDº                           * 00037400
*          is the name (RS-type), or address in register (2)-(12), of * 00037500
*          an optional halfword input that is the purge ASID for the  * 00037600
*          scheduled SRB. If used, and the POST abends, the task in   * 00037700
*          this address space identified by the purgeTCB keyword will * 00037800
*          be abended. If not specified, or if a value of 0 is        * 00037900
*          provided, the target address space's ASID is used.         * 00038000
*          DEFAULT: NO_PURGEASID                                      * 00038100
*                                                                     * 00038200
*                                                                     * 00038300
*          PURGETCB=xpurgetcb¨                                        * 00038400
*              is the name (RS-type), or address in register          * 00038500
*              (2)-(12), of a required character input that is the    * 00038600
*              purge TCB for the scheduled SRB. If a non-0 value is   * 00038700
*              used and the scheduled SRB abends, the purge TCB task  * 00038800
*              will be abended.                                       * 00038900
*              DEFAULT: NO_PURGETCB                                   * 00039000
*                                                                     * 00039100
*                                                                     * 00039200
*                                                                     * 00039300
*                                                                     * 00039400
*                                                                     * 00039500
*                                                                     * 00039600
*      ÝEXITRTN=»xexitrtn!NO_EXITº                                    * 00039700
*          is the name (RS-type), or address in register (2)-(12), of * 00039800
*          an optional 4 byte input that contains the address of an   * 00039900
*          exit routine in common storage which will execute in the   * 00040000
*          following cases:                                           * 00040100
*                                                                     * 00040200
*                                                                     * 00040300
*          o   When IRB=NO is in effect (or when IRB=YES was          * 00040400
*              specified but TSO authorized request processing is not * 00040500
*              active), and the TTOKEN is known to be valid, within   * 00040600
*              the scheduled SRB before the POST is issued:           * 00040700
*                                                                     * 00040800
*                                                                     * 00040900
*              -   It will be in the target address space.            * 00041000
*                                                                     * 00041100
*              -   It will be in SRB mode and will have the local     * 00041200
*                  lock.  The exit routine must not release the lock. * 00041300
*                                                                     * 00041400
*              -   A system-set FRR will be in place                  * 00041500
*                                                                     * 00041600
*              -   It must preserve registers 2-14                    * 00041700
*                                                                     * 00041800
*              -   It can indicate if the POST should or should not   * 00041900
*                  proceed by a return code in register 15:           * 00042000
*                                                                     * 00042100
*                                                                     * 00042200
*                  --  0 indicates that the POST should proceed.      * 00042300
*                                                                     * 00042400
*                  --  8 indicates that the POST should not proceed.  * 00042500
*                                                                     * 00042600
*                                                                     * 00042700
*                  Do not use any other return code.                  * 00042800
*                                                                     * 00042900
*                                                                     * 00043000
*                                                                     * 00043100
*          o   When IRB=YES is in effect and TSO authorized request   * 00043200
*              processing is active, and the TTOKEN is known to be    * 00043300
*              valid, within the IRB before the POST is issued:       * 00043400
*                                                                     * 00043500
*                                                                     * 00043600
*              -   It will be in the target address space.            * 00043700
*                                                                     * 00043800
*              -   It will be in task mode and will have the local    * 00043900
*                  lock.  The exit routine must not release the lock. * 00044000
*                                                                     * 00044100
*              -   No FRR will be in place                            * 00044200
*                                                                     * 00044300
*              -   It must preserve registers 2-14                    * 00044400
*                                                                     * 00044500
*              -   It can indicate if the POST should or should not   * 00044600
*                  proceed by a return code in register 15:           * 00044700
*                                                                     * 00044800
*                                                                     * 00044900
*                  --  0 indicates that the POST should proceed.      * 00045000
*                                                                     * 00045100
*                  --  8 indicates that the POST should not proceed.  * 00045200
*                                                                     * 00045300
*                                                                     * 00045400
*                  Do not use any other return code.                  * 00045500
*                                                                     * 00045600
*                                                                     * 00045700
*                                                                     * 00045800
*          o   When the scheduled SRB determines that the TTOKEN is   * 00045900
*              not valid.                                             * 00046000
*                                                                     * 00046100
*                                                                     * 00046200
*              -   It will be in the target address space.            * 00046300
*                                                                     * 00046400
*              -   It will be in SRB mode and will have the local     * 00046500
*                  lock.  The exit routine must not release the lock. * 00046600
*                                                                     * 00046700
*              -   A system-set FRR will be in place                  * 00046800
*                                                                     * 00046900
*              -   It must preserve registers 2-14                    * 00047000
*                                                                     * 00047100
*              -   It might, for example, free the ECB if that ECB is * 00047200
*                  known still to exist.                              * 00047300
*                                                                     * 00047400
*                                                                     * 00047500
*                                                                     * 00047600
*          o   If the scheduled SRB is purgeDQ'd because of           * 00047700
*              termination of the ASID (identified by PurgeASID)      * 00047800
*              and/or the task (identified by PurgeTCB) or because of * 00047900
*              a user-issued purgeDQ.                                 * 00048000
*                                                                     * 00048100
*                                                                     * 00048200
*              -   It may be in any address space                     * 00048300
*                                                                     * 00048400
*              -   It will be in task mode                            * 00048500
*                                                                     * 00048600
*              -   A system-set FRR will be in place                  * 00048700
*                                                                     * 00048800
*              -   It will not hold any locks                         * 00048900
*                                                                     * 00049000
*              -   It must preserve registers 2-14                    * 00049100
*                                                                     * 00049200
*                                                                     * 00049300
*                                                                     * 00049400
*                                                                     * 00049500
*                                                                     * 00049600
*          The exit routine is responsible for its own recovery. If   * 00049700
*          the exit routine does not return to the system, the ECB    * 00049800
*          may not be posted.                                         * 00049900
*                                                                     * 00050000
*          The exit routine gets control in key 0 supervisor state,   * 00050100
*          primary ASC mode, primary = home = secondary, AMODE 31     * 00050200
*                                                                     * 00050300
*          Register contents on entry:                                * 00050400
*                                                                     * 00050500
*                                                                     * 00050600
*          0         Type of call                                     * 00050700
*                                                                     * 00050800
*                                                                     * 00050900
*                    0         Valid TTOKEN, IRB=NO                   * 00051000
*                                                                     * 00051100
*                    1         Valid TTOKEN, IRB=YES                  * 00051200
*                                                                     * 00051300
*                    2         TTOKEN is not valid                    * 00051400
*                                                                     * 00051500
*                    3         PurgeDQ                                * 00051600
*                                                                     * 00051700
*                                                                     * 00051800
*                                                                     * 00051900
*          1         Address of a copy of the 16 bytes of data        * 00052000
*                    provided by the EXITRTNPARMS parameter.          * 00052100
*                                                                     * 00052200
*          2-13      do not contain information for use by the exit   * 00052300
*                    routine                                          * 00052400
*                                                                     * 00052500
*          14        return address                                   * 00052600
*                                                                     * 00052700
*          15        address of exit routine                          * 00052800
*                                                                     * 00052900
*                                                                     * 00053000
*          DEFAULT: NO_EXIT                                           * 00053100
*                                                                     * 00053200
*                                                                     * 00053300
*          ÝEXITRTNPARMS=»xexitrtnparms!NO_EXITRTNPARMSº¨¨            * 00053400
*              is the name (RS-type), or address in register          * 00053500
*              (2)-(12), of an optional 16 character input 16 bytes   * 00053600
*              of data to be passed to the exit routine.  One use of  * 00053700
*              this area could be to pass the address of a storage    * 00053800
*              area that the exit routine can use.                    * 00053900
*              DEFAULT: NO_EXITRTNPARMS                               * 00054000
*                                                                     * 00054100
*                                                                     * 00054200
*                                                                     * 00054300
*                                                                     * 00054400
*                                                                     * 00054500
*                                                                     * 00054600
*      ÝIRB=»NO!YESº¨                                                 * 00054700
*          is an optional keyword input that indicates if special     * 00054800
*          IRB-related processing is to be done.                      * 00054900
*          DEFAULT: NO                                                * 00055000
*                                                                     * 00055100
*                                                                     * 00055200
*          ÝIRB=NO¨                                                   * 00055300
*              indicates that no special IRB-related processing is to * 00055400
*              be done.                                               * 00055500
*                                                                     * 00055600
*          ÝIRB=YES¨                                                  * 00055700
*              indicates that an IRB will be scheduled out of the     * 00055800
*              scheduled SRB when TSO authorized request processing   * 00055900
*              is active.  TSO allows authorized code to manipulate   * 00056000
*              key 8 storage and attempts to maintain integrity by    * 00056100
*              marking all unauthorized tasks as non-dispatchable.    * 00056200
*              Scheduling the IRB to do the post for this case        * 00056300
*              ensures that the post does not affect the processing   * 00056400
*              of authorized code.  The IRB will run under the task   * 00056500
*              identified by the TTOKEN keyword.  When TCB authorized * 00056600
*              request processing is not active, IRB=NO processing    * 00056700
*              will be done.                                          * 00056800
*                                                                     * 00056900
*              If a user key (8-15) ECB is to be posted that your     * 00057000
*              product or component does not own for a target address * 00057100
*              space that your product or component does not own, the * 00057200
*              IRB=YES option must be used to ensure that the post    * 00057300
*              operation is secure.                                   * 00057400
*                                                                     * 00057500
*                                                                     * 00057600
*                                                                     * 00057700
*                                                                     * 00057800
*                                                                     * 00057900
*                                                                     * 00058000
*      ÝINTASKTERMOK=»NO!YESº¨                                        * 00058100
*          is an optional keyword input that indicates if the case of * 00058200
*          "within task termination" is to be considered as OK when   * 00058300
*          validating the task associated with the ECB to be posted.  * 00058400
*          DEFAULT: NO                                                * 00058500
*                                                                     * 00058600
*                                                                     * 00058700
*          ÝINTASKTERMOK=NO¨                                          * 00058800
*              indicates that within task termination is not          * 00058900
*              considered OK.                                         * 00059000
*                                                                     * 00059100
*          ÝINTASKTERMOK=YES¨                                         * 00059200
*              indicates that within task termination is considered   * 00059300
*              OK.  When this option is used, the ECB storage must    * 00059400
*              not be freed except implicitly by the system (such as  * 00059500
*              upon task termination) unless it is known that there   * 00059600
*              will be no subsequent attempt to POST that ECB         * 00059700
*              (perhaps, for example, it has already been POSTed or   * 00059800
*              perhaps processing has not gotten far enough that it   * 00059900
*              would ever be POSTed).                                 * 00060000
*                                                                     * 00060100
*                                                                     * 00060200
*                                                                     * 00060300
*                                                                     * 00060400
*                                                                     * 00060500
*                                                                     * 00060600
*      WORKAREA=xworkarea                                             * 00060700
*          is the name (RS-type), or address in register (2)-(12), of * 00060800
*          a required 512 character input which is a 512-byte work    * 00060900
*          area on a doubleword boundary that is below 2G,            * 00061000
*          addressable in the primary address space, for use by the   * 00061100
*          service. It can be in private storage.  if the caller is   * 00061200
*          not enabled for external and I/O interrupts, the work area * 00061300
*          must be page-fixed.  If the caller is enabled for external * 00061400
*          and I/O interrupts, the work area need not be page-fixed.  * 00061500
*          The work area must have a storage key that accommodates a  * 00061600
*          store using the PSW key of the invoker of IEAMSXMP.        * 00061700
*                                                                     * 00061800
*                                                                     * 00061900
*                                                                     * 00062000
*                                                                     * 00062100
*      ÝRETCODE=xretcode¨                                             * 00062200
*          is the name (RS-type) of an optional fullword output       * 00062300
*          variable, or register (2)-(12) or (15), into which the     * 00062400
*          return code is to be copied from GPR 15.  If you specify   * 00062500
*          15, GPR15, REG15, or R15 (within or without parentheses),  * 00062600
*          the value will be left in GPR 15.  Do not specify RETCODE  * 00062700
*          with MF=M.                                                 * 00062800
*                                                                     * 00062900
*                                                                     * 00063000
*                                                                     * 00063100
*                                                                     * 00063200
*      ÝRSNCODE=xrsncode¨                                             * 00063300
*          is the name (RS-type) of an optional fullword output       * 00063400
*          variable into which the reason code is to be copied from   * 00063500
*          GPR 0.  If you specify 0, 00, GPR0, GPR00, REG0, REG00, or * 00063600
*          R0 (within or without parentheses), the value will be left * 00063700
*          in GPR 0.  Do not specify RSNCODE with MF=M.               * 00063800
*                                                                     * 00063900
*                                                                     * 00064000
*                                                                     * 00064100
*                                                                     * 00064200
*      ÝPLISTVER=»xplistver!IMPLIED_VERSIONº¨                         * 00064300
*          is an optional byte input decimal value in the "0-0" range * 00064400
*          that specifies the macro version.  PLISTVER is the only    * 00064500
*          key allowed on the list form of MF and determines which    * 00064600
*          parameter list is generated.  Note that MAX may be         * 00064700
*          specified instead of a number, and the parameter list will * 00064800
*          be of the largest size currently supported. This size may  * 00064900
*          grow from release to release (thus possibly affecting the  * 00065000
*          amount of storage needed by your program).  If your        * 00065100
*          program can tolerate this, IBM recommends that you always  * 00065200
*          specify MAX when creating the list form parameter list as  * 00065300
*          that will ensure that the list form parameter list is      * 00065400
*          always long enough to hold whatever parameters might be    * 00065500
*          specified on the execute form.                             * 00065600
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00065700
*          default is the lowest version which allows all of the      * 00065800
*          parameters specified on the invocation to be processed.    * 00065900
*                                                                     * 00066000
*                                                                     * 00066100
*                                                                     * 00066200
*                                                                     * 00066300
*      ÝMF=»S!L!M!Eº¨                                                 * 00066400
*          is an optional keyword input which specifies the macro     * 00066500
*          form.                                                      * 00066600
*          DEFAULT: S                                                 * 00066700
*                                                                     * 00066800
*                                                                     * 00066900
*          ÝMF=S¨                                                     * 00067000
*              specifies the standard form of the macro.  The "S"     * 00067100
*              form generates code to put the parameters into an      * 00067200
*              in-line parameter list and invoke the desired service. * 00067300
*              Full checking for required macro keys is done along    * 00067400
*              with supplying defaults for omitted optional           * 00067500
*              parameters.                                            * 00067600
*                                                                     * 00067700
*          ÝMF=(L,xmfctrl»,xmfattr!0Dº)¨                              * 00067800
*              specifies the list form of the macro.  The "L" form    * 00067900
*              defines an area to be used for the parameter list.     * 00068000
*              Only the PLISTVER key may be specified on the          * 00068100
*              invocation.  All other macro parameters are flagged as * 00068200
*              errors.  If PLISTVER is not specified, the original    * 00068300
*              parameter list definition is used.                     * 00068400
*                                                                     * 00068500
*            ,xmfctrl                                                 * 00068600
*              is a required input.  It is the name of a storage area * 00068700
*              for the parameter list.                                * 00068800
*                                                                     * 00068900
*            »,xmfattr!0Dº                                            * 00069000
*              is an optional 60 character input string that varies   * 00069100
*              from 1 to 60 characters. Use it to force boundary      * 00069200
*              alignment of the parameter list. Use only 0F or 0D.    * 00069300
*              DEFAULT: 0D which forces the parameter list to a       * 00069400
*              doubleword boundary.                                   * 00069500
*                                                                     * 00069600
*          ÝMF(M,xmfctrl»,COMPLETE!NOCHECKº)¨                         * 00069700
*              specifies the modify form of the macro.  The "M" form  * 00069800
*              generates code to put the parameters into the          * 00069900
*              parameter list specified by xmfctrl.                   * 00070000
*                                                                     * 00070100
*            ,xmfctrl                                                 * 00070200
*              is a required input.  It is the name (RS-type), or     * 00070300
*              address in register (1)-(12), of a storage area for    * 00070400
*              the parameter list.                                    * 00070500
*                                                                     * 00070600
*            »,COMPLETE!NOCHECKº¨                                     * 00070700
*              is an optional keyword input which specifies the       * 00070800
*              degree of macro parameter syntax checking.             * 00070900
*              DEFAULT: COMPLETE                                      * 00071000
*                                                                     * 00071100
*                                                                     * 00071200
*              COMPLETE                                               * 00071300
*                  Checking for required macro keys is done and       * 00071400
*                  defaults are supplied for omitted optional         * 00071500
*                  parameters.  (See Macro Usage Note 2).             * 00071600
*                                                                     * 00071700
*              NOCHECK                                                * 00071800
*                  Checking for required macro keys is not done nor   * 00071900
*                  are defaults supplied for omitted optional         * 00072000
*                  parameters.                                        * 00072100
*                                                                     * 00072200
*                                                                     * 00072300
*                                                                     * 00072400
*          ÝMF=(E,xmfctrl»,COMPLETE!NOCHECKº)¨                        * 00072500
*              specifies the execute form of the macro.  The "E" form * 00072600
*              generates code to put the parameters into the          * 00072700
*              parameter list specified by xmfctrl and invoke the     * 00072800
*              desired service.                                       * 00072900
*                                                                     * 00073000
*            ,xmfctrl                                                 * 00073100
*              is a required input.  It is the name (RS-type), or     * 00073200
*              address in register (1)-(12), of a storage area for    * 00073300
*              the parameter list.                                    * 00073400
*                                                                     * 00073500
*            »,COMPLETE!NOCHECKº                                      * 00073600
*              is an optional keyword input which specifies the       * 00073700
*              degree of macro parameter syntax checking.             * 00073800
*              DEFAULT: COMPLETE                                      * 00073900
*                                                                     * 00074000
*                                                                     * 00074100
*              COMPLETE                                               * 00074200
*                  Checking for required macro keys is done and       * 00074300
*                  defaults are supplied for omitted optional         * 00074400
*                  parameters.  (See Macro Usage Note 2).             * 00074500
*                                                                     * 00074600
*              NOCHECK                                                * 00074700
*                  Checking for required macro keys is not done nor   * 00074800
*                  are defaults supplied for omitted optional         * 00074900
*                  parameters.                                        * 00075000
*                                                                     * 00075100
*                                                                     * 00075200
*                                                                     * 00075300
*                                                                     * 00075400
*                                                                     * 00075500
*                                                                     * 00075600
*                                                                     * 00075700
*01* ABEND CODES:  None.                                              * 00075800
*                                                                     * 00075900
*01* RETURN CODES:                                                    * 00076000
*                                                                     * 00076100
*                                                                     * 00076200
*                 Macro IEAASM provides equate symbols for the return * 00076300
*                 and reason codes. It also provides equate           * 00076400
*                 IEAMSXMPRsnCodeMask.  That equate can be used to    * 00076500
*                 create a word that should be ANDed with the reason  * 00076600
*                 code to isolate the non component-diagnostic        * 00076700
*                 portion of of the reason code prior to doing a      * 00076800
*                 comparison.                                         * 00076900
*                                                                     * 00077000
*       0         Name: IEAMSXMPRc_OK                                 * 00077100
*                                                                     * 00077200
*                 Meaning: The POSTing SRB has been successfully      * 00077300
*                 scheduled.                                          * 00077400
*                                                                     * 00077500
*                 Action: None required                               * 00077600
*                                                                     * 00077700
*                                                                     * 00077800
*       4         Name: IEAMSXMPRc_Warn                               * 00077900
*                                                                     * 00078000
*                 Meaning: Warning                                    * 00078100
*                                                                     * 00078200
*                 Action: Refer to the action under the individual    * 00078300
*                 reason code.                                        * 00078400
*                                                                     * 00078500
*                                                                     * 00078600
*                 HEX REASON  MEANING/ACTION                          * 00078700
*                 CODE                                                * 00078800
*                                                                     * 00078900
*                 xxxx0401    Name: IEAMSXMPRsn_TargetNotValid        * 00079000
*                                                                     * 00079100
*                             Meaning: The system found that the      * 00079200
*                             target address space was not valid. The * 00079300
*                             ECB will not be posted.                 * 00079400
*                                                                     * 00079500
*                             Action: If it is expected that the      * 00079600
*                             target address space could be not       * 00079700
*                             valid, then no action is required but   * 00079800
*                             you might be able to free the storage   * 00079900
*                             for the ECB. If it is not expected,     * 00080000
*                             then provide a correct target address   * 00080100
*                             space.                                  * 00080200
*                                                                     * 00080300
*                                                                     * 00080400
*                                                                     * 00080500
*                                                                     * 00080600
*       8         Name: IEAMSXMPRc_InvParm                            * 00080700
*                                                                     * 00080800
*                 Meaning: The IEAMSXMP invocation specified          * 00080900
*                 parameters that are not valid                       * 00081000
*                                                                     * 00081100
*                 Action:  Refer to the action under the individual   * 00081200
*                 reason code.                                        * 00081300
*                                                                     * 00081400
*                                                                     * 00081500
*                 HEX REASON  MEANING/ACTION                          * 00081600
*                 CODE                                                * 00081700
*                                                                     * 00081800
*                 xxxx0801    Name: IEAMSXMPRsn_BadParmlist           * 00081900
*                                                                     * 00082000
*                             Meaning: Error accessing the parameter  * 00082100
*                             list                                    * 00082200
*                                                                     * 00082300
*                             Action:  Check for possible storage     * 00082400
*                             overlay                                 * 00082500
*                                                                     * 00082600
*                                                                     * 00082700
*                                                                     * 00082800
*       0C        Name: IEAMSXMPRc_Env                                * 00082900
*                                                                     * 00083000
*                 Meaning: Environmental Error                        * 00083100
*                                                                     * 00083200
*                 Action:  None - no such reason codes currently      * 00083300
*                 exist.                                              * 00083400
*                                                                     * 00083500
*                                                                     * 00083600
*       10        Name: IEAMSXMPRc_CompError                          * 00083700
*                                                                     * 00083800
*                 Meaning: Unexpected failure.                        * 00083900
*                                                                     * 00084000
*                 Action:  Report the associated reason code to the   * 00084100
*                 system programmer to contact IBM Service.           * 00084200
*                                                                     * 00084300
*                                                                     * 00084400
*                 HEX REASON  MEANING/ACTION                          * 00084500
*                 CODE                                                * 00084600
*                                                                     * 00084700
*                 xxxx1001    Name: IEAMSXMPRsn_CompError             * 00084800
*                                                                     * 00084900
*                             Meaning: Unexpected failure. The state  * 00085000
*                             of the request is unpredictable.        * 00085100
*                                                                     * 00085200
*                             Action: Contact your system programmer. * 00085300
*                                                                     * 00085400
*                                                                     * 00085500
*                                                                     * 00085600
*                                                                     * 00085700
*                                                                     * 00085800
*                                                                     * 00085900
*01* REASON CODES:                                                    * 00086000
*                                                                     * 00086100
*       Reason codes, as appropriate, are defined under their         * 00086200
*       corresponding return code.                                    * 00086300
*                                                                     * 00086400
*01* MODULE TYPE:  ASSEM MACRO                                        * 00086500
*                                                                     * 00086600
*02*   PROCESSOR:  ASSEM                                              * 00086700
*                                                                     * 00086800
*01* COMPONENT:  SC1C5                                                * 00086900
*                                                                     * 00087000
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00087100
*                                                                     * 00087200
*01* EXAMPLES:                                                        * 00087300
*                                                                     * 00087400
*    Example 1                                                        * 00087500
*                                                                     * 00087600
*    Operation:                                                       * 00087700
*                                                                     * 00087800
*                                                                     * 00087900
*    1.  Post the ECB providing the validation TTOKEN.  The target    * 00088000
*        address space will be determined from the TTOKEN.            * 00088100
*                                                                     * 00088200
*                                                                     * 00088300
*                                                                     * 00088400
*    The code is as follows.                                          * 00088500
*                                                                     * 00088600
*    * Code to avoid invoking IEAMSXMP if field                       * 00088700
*    * ECVTSXMP is 0                                                  * 00088800
*     ...                                                             * 00088900
*    * Code to put the address of the ECB into register n             * 00089000
*     ...                                                             * 00089100
*    * Invoke IEAMSXMP                                                * 00089200
*             IEAMSXMP ECB=(n),POSTCODE=pc,                       *   * 00089300
*                   TTOKENTYPE=ANY,TTOKEN=tt,                     *   * 00089400
*                   KEY0TO15=0,                                   *   * 00089500
*                   RETCODE=LRETCODE,RSNCODE=LRSNCODE,            *   * 00089600
*                   WORKAREA=wa,MF=(E,SXMPL)                          * 00089700
*    * Here you would place code to process the return and            * 00089800
*    * reason codes.                                                  * 00089900
*     ...                                                             * 00090000
*    DYNAREA  DSECT                                                   * 00090100
*             DS    0D                                                * 00090200
*    wa       DS    CL512                                             * 00090300
*    pc       DS    F                                                 * 00090400
*    tt       DS    CL16                                              * 00090500
*    LRETCODE DS    F                                                 * 00090600
*    LRSNCODE DS    F                                                 * 00090700
*             IEAMSXMP MF=(L,SXMPL),PLISTVER=MAX                      * 00090800
*                                                                     * 00090900
*                                                                     * 00091000
*01* MACRO USAGE NOTES:                                               * 00091100
*                                                                     * 00091200
*                                                                     * 00091300
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00091400
*        global macro variable.  Any value other than 'NO' will       * 00091500
*        result in the macro expansion being printed.  The default is * 00091600
*        'YES'.  The following examples illustrate how the ZPRINT     * 00091700
*        variable should be set.                                      * 00091800
*                                                                     * 00091900
*                    GBLC &ZPRINT                                     * 00092000
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00092100
*                                                                     * 00092200
*                                                                     * 00092300
*    2.  When using the NOCHECK option in conjunction with the Modify * 00092400
*        and/or  Execute  forms,  be  sure  that  it is preceded by a * 00092500
*        Modify   or  Execute  form  invocation  which  specifies  or * 00092600
*        defaults  to  the  COMPLETE  option.   This insures that the * 00092700
*        parameter  list  is  initialized completely.   The parameter * 00092800
*        list  field which identifies the version number of the macro * 00092900
*        is only set when the Standard form or the Complete option of * 00093000
*        the  Execute/Modify  form  is  used,  or  when  PLISTVER  is * 00093100
*        explicitly  specified.  Be sure that the resulting parameter * 00093200
*        list version number covers all the keys that you use.        * 00093300
*                                                                     * 00093400
*                                                                     * 00093500
*    3.  All   keys   currently   contained  in  the  IEAMSXMP  macro * 00093600
*        correspond  to  version  0.   If you specify PLISTVER, use a * 00093700
*        value of 0 or MAX.                                           * 00093800
*                                                                     * 00093900
*                                                                     * 00094000
*                                                                     * 00094100
*                                                                     * 00094200
*01* CHANGE ACTIVITY:                                                 * 00094300
*                                                                     * 00094400
*   Flag LineItem  FMID    Date   ID    Comment                       * 00094500
*                                                                     * 00094600
*    $L0=OA49677  HBB7790 150615 PD00XB:  Initial create.             * 00094700
*    $L1=OA49677  HBB7790 150615 PD00XB:  Initial create.             * 00094800
*    $L2=Wxxxxxx  HBB77B0 170301 PD00XB:  InTaskTermOK                * 00094900
****** END OF SPECIFICATIONS *****************************************/ 00095000
*/********************************************************************* 00095100
         MACRO                                                          00095200
&XLABEL  IEAMSXMP &ECB=,&POSTCODE=,&TTOKENTYPE=,&TTOKEN=,&STOKEN=,     *00095300
               &KEY0TO15=,&PURGEASID=,&PURGETCB=,&EXITRTN=,            *00095400
               &EXITRTNPARMS=,&IRB=,&INTASKTERMOK=,&WORKAREA=,         *00095500
               &RETCODE=,&RSNCODE=,&PLISTVER=,&MF=                      00095600
.*                                                                      00095700
*                  MACDATE -09/26/18-<0>                                00095800
.*                                                                      00095900
.*******************************************************************    00096000
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00096100
.*******************************************************************    00096200
                  GBLC  &ZPRINT     YES=PRINT NO=NO PRINT               00096300
                  GBLC  &ZTEST      YES=TEST NO=NO TEST                 00096400
                  GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX         00096500
.*                                                                      00096600
                  GBLC  &ZIEAMSXMP  YES=MACRO USED AT LEAST ONCE        00096700
.*******************************************************************    00096800
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00096900
.*******************************************************************    00097000
                  LCLC  &ZMS        ERROR MESSAGE WORK AREA             00097100
                  LCLC  &ZCNDX      SYSNDX CHARACTERS                   00097200
                  LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED          00097300
                  LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR         00097400
                  LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE         00097500
                  LCLA  &ZAWRK      USED AS A WORK AREA                 00097600
                  LCLA  &ZASIZ      USED FOR SIZE OF VALUE              00097700
                  LCLA  &ZN         NUMERIC WORK VARIABLE               00097800
                  LCLC  &ZC         CHARACTER WORK VARIABLE             00097900
                  LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE         00098000
                  LCLA  &ZTLA       VALUE TOO LONG VARIABLE             00098100
                  LCLC  &ZMAC_G     "G" or null                         00098200
&ZMAC_G           SETC  ''                                              00098300
                  LCLC  &ZMAC_LR                                        00098400
&ZMAC_LR          SETC  'LR'                                            00098500
                  LCLC  &ZMAC_L                                         00098600
&ZMAC_L           SETC  'L'                                             00098700
                  LCLC  &ZMAC_ST                                        00098800
&ZMAC_ST          SETC  'ST'                                            00098900
                  LCLC  &ZMAC_LLGT                                      00099000
&ZMAC_LLGT        SETC  'L'                                             00099100
                  LCLC  &ZMAC_LGR                                       00099200
&ZMAC_LGR         SETC  'LR'                                            00099300
                  LCLC  &ZMAC_LG                                        00099400
&ZMAC_LG          SETC  'L'                                             00099500
                  LCLC  &ZMAC_STG                                       00099600
&ZMAC_STG         SETC  'ST'                                            00099700
                  LCLA  &ZMACRET    MACRO RETURN CODE                   00099800
&ZMACRET          SETA  0           ASSUME NO ERRORS                    00099900
.*                                                                      00100000
                  LCLC  &ZCSYSLIST(255)         NONXKEY, POS ARRAY      00100100
                  LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()          00100200
                  LCLA  &ZPLLEN     PARAMETER LIST LENGTH               00100300
                  LCLC  &ZENDBASEPL             End of base PL          00100400
                  LCLA  &ZPLWORKA   PARAMETER LIST LENGTH               00100500
.*******************************************************************    00100600
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00100700
.*******************************************************************    00100800
                  LCLA  &ZI         INDEX FOR ARRAY                     00100900
                  LCLA  &ZJ         INDEX FOR PARMS                     00101000
                  LCLA  &ZK         INDEX FOR PARSE                     00101100
                  LCLA  &ZLO        LOW RANGE VALUE                     00101200
                  LCLA  &ZHI        HIGH RANGE VALUE                    00101300
                  LCLC  &ZW         WORK AREA FOR PARM                  00101400
.********************************************************************   00101500
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00101600
.********************************************************************   00101700
                  GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL             00101800
                  GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE      00101900
                  GBLA  &SYSALVL    SYSSTATE ARCHLVL                    00102000
                  GBLC  &SYSAM64    SYSSTATE AMODE64                    00102100
.*                                                                      00102200
                  AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED      00102300
                  AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED       00102400
                  SPLEVEL  TEST                                         00102500
.ZSYS2            ANOP  ,                                               00102600
                  AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1           00102700
                  AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1           00102800
                  SYSSTATE TEST                                         00102900
                  AGO   .ZSYS4                                          00103000
.ZSYS3            ANOP  ,                                               00103100
&SYSASCE          SETC  'P'         ASSUME SYSSTATE PRIMARY             00103200
.ZSYS4            ANOP  ,                                               00103300
                  AIF   ('&SYSAM64' NE 'YES').ZSYSN64                   00103400
&ZMAC_LLGT        SETC 'LLGT'                                           00103500
&ZMAC_LGR         SETC 'LGR'                                            00103600
&ZMAC_LG          SETC 'LG'                                             00103700
&ZMAC_STG         SETC 'STG'                                            00103800
.ZSYSN64          ANOP  ,                                               00103900
&ZMAC_G           SETC 'G'                                              00104000
&ZMAC_LR          SETC 'LGR'                                            00104100
&ZMAC_L           SETC 'LG'                                             00104200
&ZMAC_ST          SETC 'STG'                                            00104300
.*******************************************************************    00104400
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00104500
.*******************************************************************    00104600
                  LCLC  &XECB       ++ NAME                             00104700
                  LCLC  &XPOSTCODE  ++ NAME                             00104800
                  LCLC  &XTTOKENTYPE            ++ VALUE                00104900
                  LCLC  &XTTOKEN    ++ NAME                             00105000
                  LCLC  &XSTOKEN    ++ NAME                             00105100
                  LCLC  &XKEY0TO15  ++ NAME                             00105200
                  LCLC  &XPURGEASID             ++ NAME                 00105300
                  LCLC  &XPURGETCB  ++ NAME                             00105400
                  LCLC  &XEXITRTN   ++ NAME                             00105500
                  LCLC  &XEXITRTNPARMS          ++ NAME                 00105600
                  LCLC  &XIRB       ++ VALUE                            00105700
                  LCLC  &XINTASKTERMOK          ++ VALUE                00105800
                  LCLC  &XWORKAREA  ++ NAME                             00105900
                  LCLC  &XRETCODE   ++ NAME                             00106000
                  LCLC  &XRSNCODE   ++ NAME                             00106100
                  LCLA  &XPLISTVER  ++ VALUE                            00106200
                  LCLC  &XMF        ++ VALUE                            00106300
                  LCLC  &XMFCTRL    ++ NAME                             00106400
                  LCLC  &XMFATTR    ++ VALUE                            00106500
                  LCLC  &XMFSCK     ++ VALUE                            00106600
.*******************************************************************    00106700
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00106800
.*******************************************************************    00106900
                  LCLC  &ZXECB      ++ INPUT NAME                       00107000
                  LCLC  &ZXPOSTCODE             ++ INPUT NAME           00107100
                  LCLC  &ZXTTOKENTYPE           ++ INPUT VALUE          00107200
                  LCLC  &ZXTTOKEN   ++ INPUT NAME                       00107300
                  LCLC  &ZXSTOKEN   ++ INPUT NAME                       00107400
                  LCLC  &ZXKEY0TO15             ++ INPUT NAME           00107500
                  LCLC  &ZXPURGEASID            ++ INPUT NAME           00107600
                  LCLC  &ZXPURGETCB             ++ INPUT NAME           00107700
                  LCLC  &ZXEXITRTN  ++ INPUT NAME                       00107800
                  LCLC  &ZXEXITRTNPARMS         ++ INPUT NAME           00107900
                  LCLC  &ZXIRB      ++ INPUT VALUE                      00108000
                  LCLC  &ZXINTASKTERMOK         ++ INPUT VALUE          00108100
                  LCLC  &ZXWORKAREA             ++ INPUT NAME           00108200
                  LCLC  &ZXRETCODE  ++ OUTPUT NAME                      00108300
                  LCLC  &ZXRSNCODE  ++ OUTPUT NAME                      00108400
                  LCLC  &ZXPLISTVER             ++ INPUT VALUE          00108500
                  LCLC  &ZXMF       ++ INPUT VALUE                      00108600
                  LCLC  &ZXMFCTRL   ++ INPUT NAME                       00108700
                  LCLC  &ZXMFATTR   ++ INPUT VALUE                      00108800
                  LCLC  &ZXMFSCK    ++ INPUT VALUE                      00108900
.********************************************************************   00109000
.***AC.PLV01  PROCESS PLISTVER                                      *   00109100
.********************************************************************   00109200
&XPLISTVER      SETA  0                                                 00109300
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00109400
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00109500
&XPLISTVER      SETA  0                                                 00109600
.ZPLV0          ANOP  ,                                                 00109700
.*                                                                      00109800
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00109900
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00110000
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00110100
.*-------------------------------------------------------------------   00110200
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00110300
&ZMS            SETC  '"PLISTVER='                                      00110400
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00110500
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00110600
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00110700
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00110800
                AGO   .ZPVCK2                                           00110900
.ZPVCK3         ANOP  ,                                                 00111000
.*-------------------------------------------------------------------   00111100
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00111200
&ZMS            SETC  '"PLISTVER='                                      00111300
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00111400
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00111500
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00111600
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00111700
                AGO   .ZPVCKE                                           00111800
.ZPVCK2         ANOP  ,                                                 00111900
.*-------------------------------------------------------------------   00112000
&ZCVAL          SETC  '&PLISTVER(1)'                                    00112100
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00112200
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00112300
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00112400
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00112500
                AIF   (&ZN LE 0).ZPVCK4A   NOT HIGH                     00112600
.ZPVCK6         ANOP  ,                                                 00112700
&ZMS            SETC  '"PLISTVER='                                      00112800
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00112900
&ZMS            SETC  '&ZMS THE RANGE IS "0-0"'                         00113000
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00113100
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00113200
&XPLISTVER      SETA  0                                                 00113300
                AGO   .ZPVCKE                                           00113400
.*-------------------------------------------------------------------   00113500
.ZPVCK4A        ANOP  ,                                                 00113600
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00113700
&ZMS            SETC  'PLISTVER='                                       00113800
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00113900
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00114000
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00114100
                MNOTE 8,' &ZMS IS REQUIRED.'                            00114200
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00114300
                AGO   .ZPVCK5                                           00114400
.ZPVCK4         ANOP  ,                                                 00114500
&XPLISTVER      SETA  &PLISTVER(1)                                      00114600
.ZPVCK5         ANOP  ,                                                 00114700
.ZPVCKE         ANOP  ,                                                 00114800
.********************************************************************   00114900
.***AG.MF01 PROCESS MF MACRO FORMS                                      00115000
.********************************************************************   00115100
                  ACTR  10000                                           00115200
.*------------------------------------------------------------------    00115300
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00115400
&XMF              SETC  ''          INITIALIZE XVARIABLE                00115500
.*-------------------------------------------------------------------   00115600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00115700
.ZG60             ANOP  ,                                               00115800
&ZTLC             SETC 'S'                                              00115900
                  AIF   ('&MF(1)' NE '&ZTLC').ZG61                      00116000
&XMF              SETC  'S'         SET KEYWORD                         00116100
&XMFSCK           SETC  'COMPLETE'  SET XMFSCK                          00116200
                  AIF   (N'&MF LE 1).ZG60A      CK NUM                  00116300
&ZMS              SETC  '"MF='                                          00116400
&ZMS              SETC  '&ZMS.&MF"'                                     00116500
&ZMS              SETC  '&ZMS "MF"'                                     00116600
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00116700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00116800
.ZG60A            ANOP  ,                                               00116900
.*-------------------------------------------------------------------   00117000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00117100
.ZG61             ANOP  ,                                               00117200
&ZTLC             SETC 'L'                                              00117300
                  AIF   ('&MF(1)' NE '&ZTLC').ZG68                      00117400
&XMF              SETC  'L'         SET KEYWORD                         00117500
                  AIF   (N'&MF LE 3).ZG61A      CK NUM                  00117600
&ZMS              SETC  '"MF='                                          00117700
&ZMS              SETC  '&ZMS.&MF"'                                     00117800
&ZMS              SETC  '&ZMS "MF"'                                     00117900
                  MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'            00118000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00118100
.ZG61A            ANOP  ,                                               00118200
.*-------------------------------------------------------------------   00118300
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00118400
                  AIF   (N'&SYSLIST NE 0).ZG61B  POSITIONALS?           00118500
                  AIF   ('&ECB' NE '').ZG61B    KEYS?                   00118600
                  AIF   ('&POSTCODE' NE '').ZG61B  KEYS?                00118700
                  AIF   ('&TTOKENTYPE' NE '').ZG61B  KEYS?              00118800
                  AIF   ('&TTOKEN' NE '').ZG61B  KEYS?                  00118900
                  AIF   ('&STOKEN' NE '').ZG61B  KEYS?                  00119000
                  AIF   ('&KEY0TO15' NE '').ZG61B  KEYS?                00119100
                  AIF   ('&PURGEASID' NE '').ZG61B  KEYS?               00119200
                  AIF   ('&PURGETCB' NE '').ZG61B  KEYS?                00119300
                  AIF   ('&EXITRTN' NE '').ZG61B  KEYS?                 00119400
                  AIF   ('&EXITRTNPARMS' NE '').ZG61B  KEYS?            00119500
                  AIF   ('&IRB' NE '').ZG61B    KEYS?                   00119600
                  AIF   ('&INTASKTERMOK' NE '').ZG61B  KEYS?            00119700
                  AIF   ('&WORKAREA' NE '').ZG61B  KEYS?                00119800
                  AIF   ('&RETCODE' NE '').ZG61B  KEYS?                 00119900
                  AIF   ('&RSNCODE' NE '').ZG61B  KEYS?                 00120000
                  AGO    .ZG61C     INVOCATION OKAY                     00120100
.ZG61B            ANOP  ,                                               00120200
&ZMS              SETC  'THE "L" FORM OF "MF"'                          00120300
&ZMS              SETC  '&ZMS CAN ONLY HAVE'                            00120400
&ZMS              SETC  '&ZMS THE "PLISTVER" KEY'                       00120500
                  MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'          00120600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00120700
.ZG61C            ANOP  ,                                               00120800
.*-------------------------------------------------------------------   00120900
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00121000
&ZXMFCTRL         SETC  'INPUT'     SET IN/OUTPUT                       00121100
&XMFCTRL          SETC  '&MF(2,1)'  SET XVARIABLE                       00121200
                  AIF   (N'&MF(2) GT 1).ZG63B   MULTI                   00121300
&XMFCTRL          SETC  '&MF(2)'    SET XVARIABLE                       00121400
.ZG63B            AIF   (K'&MF(2) GT 0).ZG63C                           00121500
&ZXMFCTRL         SETC  ''          RESET IN/OUTPUT                     00121600
&ZMS              SETC  'WHEN "L" IS SPECIFIED'                         00121700
&ZMS              SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'             00121800
                  MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                    00121900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00122000
.ZG63C            ANOP  ,                                               00122100
.*-------------------------------------------------------------------   00122200
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00122300
                  AIF   (K'&ZXMFCTRL LE 0).ZG63P  NOT I/O               00122400
                  AIF   ('&XMFCTRL'(1,1) NE '(').ZG63P                  00122500
&ZXMFCTRL         SETC  ''          RESET IN/OUTPUT                     00122600
&ZMS              SETC  '"MF='                                          00122700
&ZMS              SETC  '&ZMS.&MF"'                                     00122800
&ZMS              SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'       00122900
                  MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'               00123000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00123100
.ZG63P            ANOP  ,                                               00123200
.*-------------------------------------------------------------------   00123300
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00123400
&ZXMFATTR         SETC  'INPUT'     SET IN/OUTPUT                       00123500
&XMFATTR          SETC  '0D'                                            00123600
                  AIF   (K'&MF(3) LE 0).ZG66B   PARM                    00123700
&XMFATTR          SETC  '&MF(3,1)'  SET XVARIABLE                       00123800
                  AIF   (N'&MF(3) GT 1).ZG66B   MULTI                   00123900
&XMFATTR          SETC  '&MF(3)'    SET XVARIABLE                       00124000
.ZG66B            ANOP  ,                                               00124100
.*-------------------------------------------------------------------   00124200
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00124300
                  AIF   (K'&ZXMFATTR LE 0).ZG66P  NOT I/O               00124400
                  AIF   ('&XMFATTR'(1,1) NE '(').ZG66P                  00124500
&ZXMFATTR         SETC  ''          RESET IN/OUTPUT                     00124600
&ZMS              SETC  '"MF='                                          00124700
&ZMS              SETC  '&ZMS.&MF"'                                     00124800
&ZMS              SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'       00124900
                  MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'               00125000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00125100
.ZG66P            ANOP  ,                                               00125200
.*-------------------------------------------------------------------   00125300
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00125400
                  AIF   (K'&ZXMFATTR LE 0).ZG66S  NOT I/O               00125500
                  AIF   (K'&XMFATTR LE 60).ZG66S  LNG OK                00125600
&ZXMFATTR         SETC  ''          RESET IN/OUTPUT                     00125700
&ZMS              SETC  '"MF='                                          00125800
&ZMS              SETC  '&ZMS.&MF"'                                     00125900
&ZMS              SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'           00126000
                  MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'              00126100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00126200
.ZG66S            ANOP  ,                                               00126300
.*-------------------------------------------------------------------   00126400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00126500
.ZG68             ANOP  ,                                               00126600
&ZTLC             SETC 'M'                                              00126700
                  AIF   ('&MF(1)' NE '&ZTLC').ZG77                      00126800
&XMF              SETC  'M'         SET KEYWORD                         00126900
                  AIF   (N'&MF LE 3).ZG68A      CK NUM                  00127000
&ZMS              SETC  '"MF='                                          00127100
&ZMS              SETC  '&ZMS.&MF"'                                     00127200
&ZMS              SETC  '&ZMS "MF"'                                     00127300
                  MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'            00127400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00127500
.ZG68A            ANOP  ,                                               00127600
.*-------------------------------------------------------------------   00127700
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00127800
&ZXMFCTRL         SETC  'INPUT'     SET IN/OUTPUT                       00127900
&XMFCTRL          SETC  '&MF(2,1)'  SET XVARIABLE                       00128000
                  AIF   (N'&MF(2) GT 1).ZG70B   MULTI                   00128100
&XMFCTRL          SETC  '&MF(2)'    SET XVARIABLE                       00128200
.ZG70B            AIF   (K'&MF(2) GT 0).ZG70C                           00128300
&ZXMFCTRL         SETC  ''          RESET IN/OUTPUT                     00128400
&ZMS              SETC  'WHEN "M" IS SPECIFIED'                         00128500
&ZMS              SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'             00128600
                  MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                    00128700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00128800
.ZG70C            ANOP  ,                                               00128900
.*-------------------------------------------------------------------   00129000
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00129100
                  AIF   (K'&ZXMFCTRL LE 0).ZG70R  NOT I/O               00129200
                  AIF   ('&XMFCTRL'(1,1) NE '(').ZG70R                  00129300
&ZCGPR            SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                      00129400
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG70P                    00129500
                  AIF   (K'&ZCGPR GT 2).ZG70Q                           00129600
                  AIF   ('&ZCGPR' EQ '0').ZG70Q                         00129700
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00129800
                  AIF   (T'&ZCGPR NE 'N').ZG70Q  INVALID REG NAME       00129900
.ZG70P            ANOP  ,                                               00130000
                  AIF   (T'&ZCGPR NE 'N').ZG70R  NON NUMERIC            00130100
                  AIF   ('&ZCGPR' LT '1').ZG70Q                         00130200
                  AIF   ('&ZCGPR' LE '12').ZG70R                        00130300
.ZG70Q            ANOP  ,                                               00130400
&ZMS              SETC  '"MF='                                          00130500
&ZMS              SETC  '&ZMS.&MF"'                                     00130600
&ZMS              SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'       00130700
                  MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                00130800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00130900
.ZG70R            ANOP  ,                                               00131000
.*-------------------------------------------------------------------   00131100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00131200
&XMFSCK           SETC  ''          INITIALIZE XVARIABLE                00131300
.ZG74A   AIF   ('&MF(3)' NE 'COMPLETE').ZG75A                           00131400
&XMFSCK           SETC  'COMPLETE'  SET KEYWORD                         00131500
.*-------------------------------------------------------------------   00131600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00131700
.ZG75A   AIF   ('&MF(3)' NE 'NOCHECK').ZG76A                            00131800
&XMFSCK           SETC  'NOCHECK'   SET KEYWORD                         00131900
.*-------------------------------------------------------------------   00132000
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00132100
.ZG76A            AIF   (K'&XMFSCK GT 0).ZG76C  KEYWORD                 00132200
                  AIF   (K'&MF(3) LE 0).ZG76B                           00132300
&ZMS              SETC  '"MF='                                          00132400
&ZMS              SETC  '&ZMS.&MF"'                                     00132500
&ZMS              SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '       00132600
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00132700
&ZMS              SETC  '&ZMS "COMPLETE"'                               00132800
&ZMS              SETC  '&ZMS OR "NOCHECK".'                            00132900
                  MNOTE 8,' &ZMS '                                      00133000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00133100
.ZG76B            ANOP  ,                                               00133200
&XMFSCK           SETC  'COMPLETE'  SET DEFAULT KEYWORD                 00133300
.ZG76C            ANOP  ,                                               00133400
&ZXMFSCK          SETC  'INPUT'     SET IN/OUTPUT                       00133500
.*-------------------------------------------------------------------   00133600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00133700
.ZG77             ANOP  ,                                               00133800
&ZTLC             SETC 'E'                                              00133900
                  AIF   ('&MF(1)' NE '&ZTLC').ZG86                      00134000
&XMF              SETC  'E'         SET KEYWORD                         00134100
                  AIF   (N'&MF LE 3).ZG77A      CK NUM                  00134200
&ZMS              SETC  '"MF='                                          00134300
&ZMS              SETC  '&ZMS.&MF"'                                     00134400
&ZMS              SETC  '&ZMS "MF"'                                     00134500
                  MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'            00134600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00134700
.ZG77A            ANOP  ,                                               00134800
.*-------------------------------------------------------------------   00134900
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00135000
&ZXMFCTRL         SETC  'INPUT'     SET IN/OUTPUT                       00135100
&XMFCTRL          SETC  '&MF(2,1)'  SET XVARIABLE                       00135200
                  AIF   (N'&MF(2) GT 1).ZG79B   MULTI                   00135300
&XMFCTRL          SETC  '&MF(2)'    SET XVARIABLE                       00135400
.ZG79B            AIF   (K'&MF(2) GT 0).ZG79C                           00135500
&ZXMFCTRL         SETC  ''          RESET IN/OUTPUT                     00135600
&ZMS              SETC  'WHEN "E" IS SPECIFIED'                         00135700
&ZMS              SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'             00135800
                  MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                    00135900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00136000
.ZG79C            ANOP  ,                                               00136100
.*-------------------------------------------------------------------   00136200
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00136300
                  AIF   (K'&ZXMFCTRL LE 0).ZG79R  NOT I/O               00136400
                  AIF   ('&XMFCTRL'(1,1) NE '(').ZG79R                  00136500
&ZCGPR            SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                      00136600
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG79P                    00136700
                  AIF   (K'&ZCGPR GT 2).ZG79Q                           00136800
                  AIF   ('&ZCGPR' EQ '0').ZG79Q                         00136900
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00137000
                  AIF   (T'&ZCGPR NE 'N').ZG79Q  INVALID REG NAME       00137100
.ZG79P            ANOP  ,                                               00137200
                  AIF   (T'&ZCGPR NE 'N').ZG79R  NON NUMERIC            00137300
                  AIF   ('&ZCGPR' LT '1').ZG79Q                         00137400
                  AIF   ('&ZCGPR' LE '12').ZG79R                        00137500
.ZG79Q            ANOP  ,                                               00137600
&ZMS              SETC  '"MF='                                          00137700
&ZMS              SETC  '&ZMS.&MF"'                                     00137800
&ZMS              SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'       00137900
                  MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                00138000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00138100
.ZG79R            ANOP  ,                                               00138200
.*-------------------------------------------------------------------   00138300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00138400
&XMFSCK           SETC  ''          INITIALIZE XVARIABLE                00138500
.ZG83A   AIF   ('&MF(3)' NE 'COMPLETE').ZG84A                           00138600
&XMFSCK           SETC  'COMPLETE'  SET KEYWORD                         00138700
.*-------------------------------------------------------------------   00138800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00138900
.ZG84A   AIF   ('&MF(3)' NE 'NOCHECK').ZG85A                            00139000
&XMFSCK           SETC  'NOCHECK'   SET KEYWORD                         00139100
.*-------------------------------------------------------------------   00139200
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00139300
.ZG85A            AIF   (K'&XMFSCK GT 0).ZG85C  KEYWORD                 00139400
                  AIF   (K'&MF(3) LE 0).ZG85B                           00139500
&ZMS              SETC  '"MF='                                          00139600
&ZMS              SETC  '&ZMS.&MF"'                                     00139700
&ZMS              SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '       00139800
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00139900
&ZMS              SETC  '&ZMS "COMPLETE"'                               00140000
&ZMS              SETC  '&ZMS OR "NOCHECK".'                            00140100
                  MNOTE 8,' &ZMS '                                      00140200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00140300
.ZG85B            ANOP  ,                                               00140400
&XMFSCK           SETC  'COMPLETE'  SET DEFAULT KEYWORD                 00140500
.ZG85C            ANOP  ,                                               00140600
&ZXMFSCK          SETC  'INPUT'     SET IN/OUTPUT                       00140700
.*------------------------------------------------------------------    00140800
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00140900
.ZG86             ANOP  ,                                               00141000
&ZXMF             SETC  'INPUT'     SET IN/OUTPUT                       00141100
                  AIF   (K'&XMF GT 0).ZG86E     VALID ARG               00141200
                  AIF   (T'&MF EQ 'O').ZG86D    OMITTED                 00141300
&ZASYSLNDX        SETA  0                                               00141400
.ZG86A            ANOP  ,           POSITIONAL MACRO KEY                00141500
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00141600
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG86C                00141700
&ZTLC             SETC 'MF'                                             00141800
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG86A       00141900
.ZG86B            ANOP  ,                                               00142000
&ZXMF             SETC  ''          RESET IN/OUTPUT                     00142100
&ZMS              SETC  'THE "MF" KEY'                                  00142200
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00142300
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00142400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00142500
                  AGO   .ZG86E                                          00142600
.ZG86C            ANOP  ,                                               00142700
&ZXMF             SETC  ''          RESET IN/OUTPUT                     00142800
&ZMS              SETC  '"MF='                                          00142900
&ZMS              SETC  '&ZMS.&MF"'                                     00143000
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00143100
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00143200
&ZMS              SETC  '&ZMS "S",'                                     00143300
&ZMS              SETC  '&ZMS "L",'                                     00143400
&ZMS              SETC  '&ZMS "M",'                                     00143500
&ZMS              SETC  '&ZMS OR "E".'                                  00143600
                  MNOTE 8,' &ZMS '                                      00143700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00143800
                  AGO   .ZG86E                                          00143900
.ZG86D            ANOP  ,                                               00144000
&XMF              SETC  'S'         SET DEFAULT KEYWORD                 00144100
&XMFSCK           SETC  'COMPLETE'  COMPLETE CHECKING                   00144200
.ZG86E            ANOP  ,                                               00144300
.********************************************************************   00144400
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00144500
.********************************************************************   00144600
                  ACTR  10000                                           00144700
.*-------------------------------------------------------------------   00144800
.***AG.MF03 MF=(SLME)                                                   00144900
                  AIF   ('&XMF' EQ 'L').ZGMFX                           00145000
                  AIF   ('&XMFSCK' NE 'COMPLETE').ZGMFX                 00145100
.*----------------------------------------------------------------***   00145200
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00145300
                  AIF   (N'&ECB LE 1).ZG2A      CK NUM                  00145400
&ZMS              SETC  '"ECB='                                         00145500
&ZMS              SETC  '&ZMS.&ECB"'                                    00145600
&ZMS              SETC  '&ZMS "ECB"'                                    00145700
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00145800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00145900
.ZG2A             ANOP  ,                                               00146000
.*-------------------------------------------------------------------   00146100
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00146200
&ZXECB            SETC  'INPUT'     SET IN/OUTPUT                       00146300
&XECB             SETC  '&ECB(1)'   SET XVARIABLE                       00146400
                  AIF   (N'&ECB GT 1).ZG2B      MULTI                   00146500
&XECB             SETC  '&ECB'      SET XVARIABLE                       00146600
.ZG2B             AIF   (K'&ECB(1) GT 0).ZG2C                           00146700
&ZXECB            SETC  ''          RESET IN/OUTPUT                     00146800
&ZMS              SETC  ' '                                             00146900
&ZMS              SETC  '&ZMS "ECB" KEY AND ITS'                        00147000
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00147100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00147200
.ZG2C             ANOP  ,                                               00147300
.*-------------------------------------------------------------------   00147400
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00147500
                  AIF   (K'&ZXECB LE 0).ZG2R    NOT I/O                 00147600
                  AIF   ('&XECB'(1,1) NE '(').ZG2R                      00147700
&ZCGPR            SETC  '&XECB'(2,K'&XECB-2)                            00147800
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                     00147900
                  AIF   (K'&ZCGPR GT 2).ZG2Q                            00148000
                  AIF   ('&ZCGPR' EQ '0').ZG2Q                          00148100
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00148200
                  AIF   (T'&ZCGPR NE 'N').ZG2Q  INVALID REG NAME        00148300
.ZG2P             ANOP  ,                                               00148400
                  AIF   (T'&ZCGPR NE 'N').ZG2R  NON NUMERIC             00148500
                  AIF   ('&ZCGPR' LT '2').ZG2Q                          00148600
                  AIF   ('&ZCGPR' LE '12').ZG2R                         00148700
.ZG2Q             ANOP  ,                                               00148800
&ZMS              SETC  '"ECB='                                         00148900
&ZMS              SETC  '&ZMS.&ECB"'                                    00149000
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00149100
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00149200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00149300
.ZG2R             ANOP  ,                                               00149400
.*----------------------------------------------------------------***   00149500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00149600
                  AIF   (N'&POSTCODE LE 1).ZG5A  CK NUM                 00149700
&ZMS              SETC  '"POSTCODE='                                    00149800
&ZMS              SETC  '&ZMS.&POSTCODE"'                               00149900
&ZMS              SETC  '&ZMS "POSTCODE"'                               00150000
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00150100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00150200
.ZG5A             ANOP  ,                                               00150300
.*-------------------------------------------------------------------   00150400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00150500
&ZXPOSTCODE       SETC  'INPUT'     SET IN/OUTPUT                       00150600
&XPOSTCODE        SETC  '0'                                             00150700
                  AIF   (K'&POSTCODE(1) LE 0).ZG5B  PARM                00150800
&XPOSTCODE        SETC  '&POSTCODE(1)'          SET XVARIABLE           00150900
                  AIF   (N'&POSTCODE GT 1).ZG5B  MULTI                  00151000
&XPOSTCODE        SETC  '&POSTCODE'             SET XVARIABLE           00151100
.ZG5B             ANOP  ,                                               00151200
.*-------------------------------------------------------------------   00151300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00151400
                  AIF   (K'&ZXPOSTCODE LE 0).ZG5R  NOT I/O              00151500
         AIF   ('&XPOSTCODE' EQ '0').ZG5R                               00151600
                  AIF   ('&XPOSTCODE'(1,1) NE '(').ZG5R                 00151700
&ZCGPR            SETC  '&XPOSTCODE'(2,K'&XPOSTCODE-2)                  00151800
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                     00151900
                  AIF   (K'&ZCGPR GT 2).ZG5Q                            00152000
                  AIF   ('&ZCGPR' EQ '0').ZG5Q                          00152100
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00152200
                  AIF   (T'&ZCGPR NE 'N').ZG5Q  INVALID REG NAME        00152300
.ZG5P             ANOP  ,                                               00152400
                  AIF   (T'&ZCGPR NE 'N').ZG5R  NON NUMERIC             00152500
                  AIF   ('&ZCGPR' LT '2').ZG5Q                          00152600
                  AIF   ('&ZCGPR' LE '12').ZG5R                         00152700
.ZG5Q             ANOP  ,                                               00152800
&ZMS              SETC  '"POSTCODE='                                    00152900
&ZMS              SETC  '&ZMS.&POSTCODE"'                               00153000
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00153100
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00153200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00153300
.ZG5R             ANOP  ,                                               00153400
.*------------------------------------------------------------------    00153500
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00153600
&XTTOKENTYPE      SETC  ''          INITIALIZE XVARIABLE                00153700
.*-------------------------------------------------------------------   00153800
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00153900
.ZG9              ANOP  ,                                               00154000
                  AIF   (K'&TTOKENTYPE(1) LE 0).ZG9A                    00154100
&ZTLC             SETC 'ANY'                                            00154200
                  AIF   ('&TTOKENTYPE(1)' NE '&ZTLC').ZG16              00154300
&XTTOKENTYPE      SETC  'ANY'       SET KEYWORD                         00154400
                  AIF   (N'&TTOKENTYPE LE 1).ZG9A  CK NUM               00154500
&ZMS              SETC  '"TTOKENTYPE='                                  00154600
&ZMS              SETC  '&ZMS.&TTOKENTYPE"'                             00154700
&ZMS              SETC  '&ZMS "TTOKENTYPE"'                             00154800
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00154900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00155000
.ZG9A             ANOP  ,                                               00155100
.*----------------------------------------------------------------***   00155200
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00155300
                  AIF   (N'&TTOKEN LE 1).ZG11A  CK NUM                  00155400
&ZMS              SETC  '"TTOKEN='                                      00155500
&ZMS              SETC  '&ZMS.&TTOKEN"'                                 00155600
&ZMS              SETC  '&ZMS "TTOKEN"'                                 00155700
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00155800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00155900
.ZG11A            ANOP  ,                                               00156000
.*-------------------------------------------------------------------   00156100
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00156200
&ZXTTOKEN         SETC  'INPUT'     SET IN/OUTPUT                       00156300
&XTTOKEN          SETC  '&TTOKEN(1)'            SET XVARIABLE           00156400
                  AIF   (N'&TTOKEN GT 1).ZG11B  MULTI                   00156500
&XTTOKEN          SETC  '&TTOKEN'   SET XVARIABLE                       00156600
.ZG11B            AIF   (K'&TTOKEN(1) GT 0).ZG11C                       00156700
&ZXTTOKEN         SETC  ''          RESET IN/OUTPUT                     00156800
&ZMS              SETC  ' '                                             00156900
&ZMS              SETC  '&ZMS "TTOKEN" KEY AND ITS'                     00157000
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00157100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00157200
.ZG11C            ANOP  ,                                               00157300
.*-------------------------------------------------------------------   00157400
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00157500
                  AIF   (K'&ZXTTOKEN LE 0).ZG11R  NOT I/O               00157600
                  AIF   ('&XTTOKEN'(1,1) NE '(').ZG11R                  00157700
&ZCGPR            SETC  '&XTTOKEN'(2,K'&XTTOKEN-2)                      00157800
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                    00157900
                  AIF   (K'&ZCGPR GT 2).ZG11Q                           00158000
                  AIF   ('&ZCGPR' EQ '0').ZG11Q                         00158100
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00158200
                  AIF   (T'&ZCGPR NE 'N').ZG11Q  INVALID REG NAME       00158300
.ZG11P            ANOP  ,                                               00158400
                  AIF   (T'&ZCGPR NE 'N').ZG11R  NON NUMERIC            00158500
                  AIF   ('&ZCGPR' LT '2').ZG11Q                         00158600
                  AIF   ('&ZCGPR' LE '12').ZG11R                        00158700
.ZG11Q            ANOP  ,                                               00158800
&ZMS              SETC  '"TTOKEN='                                      00158900
&ZMS              SETC  '&ZMS.&TTOKEN"'                                 00159000
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00159100
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00159200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00159300
.ZG11R            ANOP  ,                                               00159400
.*----------------------------------------------------------------***   00159500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00159600
                  AIF   (N'&STOKEN LE 1).ZG13A  CK NUM                  00159700
&ZMS              SETC  '"STOKEN='                                      00159800
&ZMS              SETC  '&ZMS.&STOKEN"'                                 00159900
&ZMS              SETC  '&ZMS "STOKEN"'                                 00160000
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00160100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00160200
.ZG13A            ANOP  ,                                               00160300
.*-------------------------------------------------------------------   00160400
.***AG.KXVAR17 NAME, OPT INPUT, KEYS -XVARIABLE                         00160500
&XSTOKEN          SETC  'FROM_TTOKEN'           SET DEFAULT             00160600
                  AIF   (K'&STOKEN(1) LE 0).ZG13C  PARM                 00160700
&XSTOKEN          SETC  '&STOKEN(1)'            SET XVARIABLE           00160800
                  AIF   (N'&STOKEN GT 1).ZG13B  MULTI                   00160900
&XSTOKEN          SETC  '&STOKEN'   SET XVARIABLE                       00161000
.ZG13B            AIF   (K'&TTOKEN(1) GT 0).ZG13C  KEY                  00161100
&ZMS              SETC  '"STOKEN'                                       00161200
&ZMS              SETC  '&ZMS.=&STOKEN"'                                00161300
&ZMS              SETC  '&ZMS CAN ONLY BE SPECIFIED IF'                 00161400
&ZMS              SETC  '&ZMS '                                         00161500
&ZMS              SETC  '&ZMS "TTOKEN"'                                 00161600
                  MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                    00161700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00161800
.ZG13C            ANOP  ,                                               00161900
&ZXSTOKEN         SETC  'INPUT'     SET IN/OUTPUT                       00162000
.*-------------------------------------------------------------------   00162100
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00162200
                  AIF   (K'&ZXSTOKEN LE 0).ZG13R  NOT I/O               00162300
         AIF   ('&XSTOKEN' EQ 'FROM_TTOKEN').ZG13R                      00162400
                  AIF   ('&XSTOKEN'(1,1) NE '(').ZG13R                  00162500
&ZCGPR            SETC  '&XSTOKEN'(2,K'&XSTOKEN-2)                      00162600
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG13P                    00162700
                  AIF   (K'&ZCGPR GT 2).ZG13Q                           00162800
                  AIF   ('&ZCGPR' EQ '0').ZG13Q                         00162900
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00163000
                  AIF   (T'&ZCGPR NE 'N').ZG13Q  INVALID REG NAME       00163100
.ZG13P            ANOP  ,                                               00163200
                  AIF   (T'&ZCGPR NE 'N').ZG13R  NON NUMERIC            00163300
                  AIF   ('&ZCGPR' LT '2').ZG13Q                         00163400
                  AIF   ('&ZCGPR' LE '12').ZG13R                        00163500
.ZG13Q            ANOP  ,                                               00163600
&ZMS              SETC  '"STOKEN='                                      00163700
&ZMS              SETC  '&ZMS.&STOKEN"'                                 00163800
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00163900
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00164000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00164100
.ZG13R            ANOP  ,                                               00164200
.*-------------------------------------------------------------------   00164300
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00164400
.ZG16             ANOP  ,                                               00164500
&ZTLC             SETC 'FIRSTTASK'                                      00164600
                  AIF   ('&TTOKENTYPE(1)' NE '&ZTLC').ZG20              00164700
&XTTOKENTYPE      SETC  'FIRSTTASK'             SET KEYWORD             00164800
                  AIF   (N'&TTOKENTYPE LE 1).ZG16A  CK NUM              00164900
&ZMS              SETC  '"TTOKENTYPE='                                  00165000
&ZMS              SETC  '&ZMS.&TTOKENTYPE"'                             00165100
&ZMS              SETC  '&ZMS "TTOKENTYPE"'                             00165200
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00165300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00165400
.ZG16A            ANOP  ,                                               00165500
.*------------------------------------------------------------------    00165600
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00165700
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00165800
.ZG16A0           AIF   (K'&TTOKEN LE 0).ZG16A1  OK                     00165900
&ZCVAL            SETC '&ZCVAL TTOKEN'          INCORRECT KEY USED      00166000
.ZG16A1           AIF   (K'&ZCVAL LE 0).ZG16A2  OK                      00166100
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00166200
&ZMS              SETC  '"TTOKENTYPE'                                   00166300
&ZMS              SETC  '&ZMS.=&TTOKENTYPE"'                            00166400
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00166500
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00166600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00166700
.ZG16A2           ANOP  ,                                               00166800
.*----------------------------------------------------------------***   00166900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00167000
                  AIF   (N'&STOKEN LE 1).ZG18A  CK NUM                  00167100
&ZMS              SETC  '"STOKEN='                                      00167200
&ZMS              SETC  '&ZMS.&STOKEN"'                                 00167300
&ZMS              SETC  '&ZMS "STOKEN"'                                 00167400
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00167500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00167600
.ZG18A            ANOP  ,                                               00167700
.*-------------------------------------------------------------------   00167800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00167900
&ZXSTOKEN         SETC  'INPUT'     SET IN/OUTPUT                       00168000
&XSTOKEN          SETC  '&STOKEN(1)'            SET XVARIABLE           00168100
                  AIF   (N'&STOKEN GT 1).ZG18B  MULTI                   00168200
&XSTOKEN          SETC  '&STOKEN'   SET XVARIABLE                       00168300
.ZG18B            AIF   (K'&STOKEN(1) GT 0).ZG18C                       00168400
&ZXSTOKEN         SETC  ''          RESET IN/OUTPUT                     00168500
&ZMS              SETC  ' '                                             00168600
&ZMS              SETC  '&ZMS "STOKEN" KEY AND ITS'                     00168700
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00168800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00168900
.ZG18C            ANOP  ,                                               00169000
.*-------------------------------------------------------------------   00169100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00169200
                  AIF   (K'&ZXSTOKEN LE 0).ZG18R  NOT I/O               00169300
                  AIF   ('&XSTOKEN'(1,1) NE '(').ZG18R                  00169400
&ZCGPR            SETC  '&XSTOKEN'(2,K'&XSTOKEN-2)                      00169500
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG18P                    00169600
                  AIF   (K'&ZCGPR GT 2).ZG18Q                           00169700
                  AIF   ('&ZCGPR' EQ '0').ZG18Q                         00169800
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00169900
                  AIF   (T'&ZCGPR NE 'N').ZG18Q  INVALID REG NAME       00170000
.ZG18P            ANOP  ,                                               00170100
                  AIF   (T'&ZCGPR NE 'N').ZG18R  NON NUMERIC            00170200
                  AIF   ('&ZCGPR' LT '2').ZG18Q                         00170300
                  AIF   ('&ZCGPR' LE '12').ZG18R                        00170400
.ZG18Q            ANOP  ,                                               00170500
&ZMS              SETC  '"STOKEN='                                      00170600
&ZMS              SETC  '&ZMS.&STOKEN"'                                 00170700
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00170800
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00170900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00171000
.ZG18R            ANOP  ,                                               00171100
.*------------------------------------------------------------------    00171200
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00171300
.ZG20             ANOP  ,                                               00171400
&ZXTTOKENTYPE     SETC  'INPUT'     SET IN/OUTPUT                       00171500
                  AIF   (K'&XTTOKENTYPE GT 0).ZG20E  VALID ARG          00171600
                  AIF   (T'&TTOKENTYPE EQ 'O').ZG20D  OMITTED           00171700
&ZASYSLNDX        SETA  0                                               00171800
.ZG20A            ANOP  ,           POSITIONAL MACRO KEY                00171900
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00172000
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG20C                00172100
&ZTLC             SETC 'TTOKENTYPE'                                     00172200
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG20A       00172300
.ZG20B            ANOP  ,                                               00172400
&ZXTTOKENTYPE     SETC  ''          RESET IN/OUTPUT                     00172500
&ZMS              SETC  'THE "TTOKENTYPE" KEY'                          00172600
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00172700
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00172800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00172900
                  AGO   .ZG20E                                          00173000
.ZG20C            ANOP  ,                                               00173100
&ZXTTOKENTYPE     SETC  ''          RESET IN/OUTPUT                     00173200
&ZMS              SETC  '"TTOKENTYPE='                                  00173300
&ZMS              SETC  '&ZMS.&TTOKENTYPE"'                             00173400
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00173500
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00173600
&ZMS              SETC  '&ZMS "ANY"'                                    00173700
&ZMS              SETC  '&ZMS OR "FIRSTTASK".'                          00173800
                  MNOTE 8,' &ZMS '                                      00173900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00174000
                  AGO   .ZG20E                                          00174100
.ZG20D            ANOP  ,                                               00174200
&XTTOKENTYPE      SETC  'ANY'       SET DEFAULT KEYWORD                 00174300
.ZG20E            ANOP  ,                                               00174400
.*------------------------------------------------------------------    00174500
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00174600
                  AIF   (K'&TTOKENTYPE(1) GT 0).ZG20F  PARM             00174700
&XTTOKENTYPE      SETC  ''          ENSURE NULL KEYWORD                 00174800
&ZXTTOKENTYPE     SETC  ''          RESET IN/OUTPUT                     00174900
&ZMS              SETC  'THE'                                           00175000
&ZMS              SETC  '&ZMS "TTOKENTYPE" KEY AND ITS'                 00175100
&ZMS              SETC  '&ZMS ARGUMENT ARE REQUIRED.'                   00175200
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00175300
&ZMS              SETC  '&ZMS "ANY"'                                    00175400
&ZMS              SETC  '&ZMS OR "FIRSTTASK".'                          00175500
                  MNOTE 8,' &ZMS '                                      00175600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00175700
.ZG20F            ANOP  ,                                               00175800
.*----------------------------------------------------------------***   00175900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00176000
                  AIF   (N'&KEY0TO15 LE 1).ZG22A  CK NUM                00176100
&ZMS              SETC  '"KEY0TO15='                                    00176200
&ZMS              SETC  '&ZMS.&KEY0TO15"'                               00176300
&ZMS              SETC  '&ZMS "KEY0TO15"'                               00176400
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00176500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00176600
.ZG22A            ANOP  ,                                               00176700
.*-------------------------------------------------------------------   00176800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00176900
&ZXKEY0TO15       SETC  'INPUT'     SET IN/OUTPUT                       00177000
&XKEY0TO15        SETC  '&KEY0TO15(1)'          SET XVARIABLE           00177100
                  AIF   (N'&KEY0TO15 GT 1).ZG22B  MULTI                 00177200
&XKEY0TO15        SETC  '&KEY0TO15'             SET XVARIABLE           00177300
.ZG22B            AIF   (K'&KEY0TO15(1) GT 0).ZG22C                     00177400
&ZXKEY0TO15       SETC  ''          RESET IN/OUTPUT                     00177500
&ZMS              SETC  ' '                                             00177600
&ZMS              SETC  '&ZMS "KEY0TO15" KEY AND ITS'                   00177700
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00177800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00177900
.ZG22C            ANOP  ,                                               00178000
.*-------------------------------------------------------------------   00178100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00178200
                  AIF   (K'&ZXKEY0TO15 LE 0).ZG22R  NOT I/O             00178300
                  AIF   ('&XKEY0TO15'(1,1) NE '(').ZG22R                00178400
&ZCGPR            SETC  '&XKEY0TO15'(2,K'&XKEY0TO15-2)                  00178500
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG22P                    00178600
                  AIF   (K'&ZCGPR GT 2).ZG22Q                           00178700
                  AIF   ('&ZCGPR' EQ '0').ZG22Q                         00178800
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00178900
                  AIF   (T'&ZCGPR NE 'N').ZG22Q  INVALID REG NAME       00179000
.ZG22P            ANOP  ,                                               00179100
                  AIF   (T'&ZCGPR NE 'N').ZG22R  NON NUMERIC            00179200
                  AIF   ('&ZCGPR' LT '2').ZG22Q                         00179300
                  AIF   ('&ZCGPR' LE '12').ZG22R                        00179400
.ZG22Q            ANOP  ,                                               00179500
&ZMS              SETC  '"KEY0TO15='                                    00179600
&ZMS              SETC  '&ZMS.&KEY0TO15"'                               00179700
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00179800
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00179900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00180000
.ZG22R            ANOP  ,                                               00180100
.*----------------------------------------------------------------***   00180200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00180300
                  AIF   (N'&PURGEASID LE 1).ZG25A  CK NUM               00180400
&ZMS              SETC  '"PURGEASID='                                   00180500
&ZMS              SETC  '&ZMS.&PURGEASID"'                              00180600
&ZMS              SETC  '&ZMS "PURGEASID"'                              00180700
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00180800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00180900
.ZG25A            ANOP  ,                                               00181000
.*-------------------------------------------------------------------   00181100
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00181200
&ZXPURGEASID      SETC  'INPUT'     SET IN/OUTPUT                       00181300
&XPURGEASID       SETC  'NO_PURGEASID'                                  00181400
                  AIF   (K'&PURGEASID(1) LE 0).ZG25B  PARM              00181500
&XPURGEASID       SETC  '&PURGEASID(1)'         SET XVARIABLE           00181600
                  AIF   (N'&PURGEASID GT 1).ZG25B  MULTI                00181700
&XPURGEASID       SETC  '&PURGEASID'            SET XVARIABLE           00181800
.ZG25B            ANOP  ,                                               00181900
.*-------------------------------------------------------------------   00182000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00182100
                  AIF   (K'&ZXPURGEASID LE 0).ZG25R  NOT I/O            00182200
         AIF   ('&XPURGEASID' EQ 'NO_PURGEASID').ZG25R                  00182300
                  AIF   ('&XPURGEASID'(1,1) NE '(').ZG25R               00182400
&ZCGPR            SETC  '&XPURGEASID'(2,K'&XPURGEASID-2)                00182500
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG25P                    00182600
                  AIF   (K'&ZCGPR GT 2).ZG25Q                           00182700
                  AIF   ('&ZCGPR' EQ '0').ZG25Q                         00182800
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00182900
                  AIF   (T'&ZCGPR NE 'N').ZG25Q  INVALID REG NAME       00183000
.ZG25P            ANOP  ,                                               00183100
                  AIF   (T'&ZCGPR NE 'N').ZG25R  NON NUMERIC            00183200
                  AIF   ('&ZCGPR' LT '2').ZG25Q                         00183300
                  AIF   ('&ZCGPR' LE '12').ZG25R                        00183400
.ZG25Q            ANOP  ,                                               00183500
&ZMS              SETC  '"PURGEASID='                                   00183600
&ZMS              SETC  '&ZMS.&PURGEASID"'                              00183700
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00183800
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00183900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00184000
.ZG25R            ANOP  ,                                               00184100
.*----------------------------------------------------------------***   00184200
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00184300
                  AIF   (N'&PURGETCB LE 1).ZG27A  CK NUM                00184400
&ZMS              SETC  '"PURGETCB='                                    00184500
&ZMS              SETC  '&ZMS.&PURGETCB"'                               00184600
&ZMS              SETC  '&ZMS "PURGETCB"'                               00184700
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00184800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00184900
.ZG27A            ANOP  ,                                               00185000
.*-------------------------------------------------------------------   00185100
.***AG.KXVAR09 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00185200
&ZXPURGETCB       SETC  'INPUT'     SET IN/OUTPUT                       00185300
&XPURGETCB        SETC  '&PURGETCB(1)'          SET XVARIABLE           00185400
                  AIF   (N'&PURGETCB GT 1).ZG27B  MULTI                 00185500
&XPURGETCB        SETC  '&PURGETCB'             SET XVARIABLE           00185600
.ZG27B            AIF   (K'&PURGEASID(1) GT 0).ZG27C  KEY               00185700
                  AIF   (K'&PURGETCB(1) LE 0).ZG27D  PARM               00185800
&ZMS              SETC  '"PURGETCB'                                     00185900
&ZMS              SETC  '&ZMS.=&PURGETCB"'                              00186000
&ZMS              SETC  '&ZMS CAN ONLY BE SPECIFIED IF'                 00186100
&ZMS              SETC  '&ZMS '                                         00186200
&ZMS              SETC  '&ZMS "PURGEASID"'                              00186300
                  MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                    00186400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00186500
                  AGO   .ZG27E                                          00186600
.*                                                                      00186700
.ZG27C            AIF   (K'&PURGETCB(1) GT 0).ZG27E  PARM               00186800
&ZXPURGETCB       SETC  ''          RESET IN/OUTPUT                     00186900
&ZMS              SETC  'WHEN "PURGEASID" IS SPECIFIED'                 00187000
&ZMS              SETC  '&ZMS , "PURGETCB" KEY AND ITS'                 00187100
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00187200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00187300
.ZG27D            ANOP  ,                                               00187400
&XPURGETCB        SETC  'NO_PURGETCB'           SET DEFAULT             00187500
.ZG27E            ANOP  ,                                               00187600
.*-------------------------------------------------------------------   00187700
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00187800
                  AIF   (K'&ZXPURGETCB LE 0).ZG27R  NOT I/O             00187900
         AIF   ('&XPURGETCB' EQ 'NO_PURGETCB').ZG27R                    00188000
                  AIF   ('&XPURGETCB'(1,1) NE '(').ZG27R                00188100
&ZCGPR            SETC  '&XPURGETCB'(2,K'&XPURGETCB-2)                  00188200
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG27P                    00188300
                  AIF   (K'&ZCGPR GT 2).ZG27Q                           00188400
                  AIF   ('&ZCGPR' EQ '0').ZG27Q                         00188500
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00188600
                  AIF   (T'&ZCGPR NE 'N').ZG27Q  INVALID REG NAME       00188700
.ZG27P            ANOP  ,                                               00188800
                  AIF   (T'&ZCGPR NE 'N').ZG27R  NON NUMERIC            00188900
                  AIF   ('&ZCGPR' LT '2').ZG27Q                         00189000
                  AIF   ('&ZCGPR' LE '12').ZG27R                        00189100
.ZG27Q            ANOP  ,                                               00189200
&ZMS              SETC  '"PURGETCB='                                    00189300
&ZMS              SETC  '&ZMS.&PURGETCB"'                               00189400
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00189500
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00189600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00189700
.ZG27R            ANOP  ,                                               00189800
.*----------------------------------------------------------------***   00189900
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00190000
                  AIF   (N'&EXITRTN LE 1).ZG31A  CK NUM                 00190100
&ZMS              SETC  '"EXITRTN='                                     00190200
&ZMS              SETC  '&ZMS.&EXITRTN"'                                00190300
&ZMS              SETC  '&ZMS "EXITRTN"'                                00190400
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00190500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00190600
.ZG31A            ANOP  ,                                               00190700
.*-------------------------------------------------------------------   00190800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00190900
&ZXEXITRTN        SETC  'INPUT'     SET IN/OUTPUT                       00191000
&XEXITRTN         SETC  'NO_EXIT'                                       00191100
                  AIF   (K'&EXITRTN(1) LE 0).ZG31B  PARM                00191200
&XEXITRTN         SETC  '&EXITRTN(1)'           SET XVARIABLE           00191300
                  AIF   (N'&EXITRTN GT 1).ZG31B  MULTI                  00191400
&XEXITRTN         SETC  '&EXITRTN'  SET XVARIABLE                       00191500
.ZG31B            ANOP  ,                                               00191600
.*-------------------------------------------------------------------   00191700
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00191800
                  AIF   (K'&ZXEXITRTN LE 0).ZG31R  NOT I/O              00191900
         AIF   ('&XEXITRTN' EQ 'NO_EXIT').ZG31R                         00192000
                  AIF   ('&XEXITRTN'(1,1) NE '(').ZG31R                 00192100
&ZCGPR            SETC  '&XEXITRTN'(2,K'&XEXITRTN-2)                    00192200
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG31P                    00192300
                  AIF   (K'&ZCGPR GT 2).ZG31Q                           00192400
                  AIF   ('&ZCGPR' EQ '0').ZG31Q                         00192500
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00192600
                  AIF   (T'&ZCGPR NE 'N').ZG31Q  INVALID REG NAME       00192700
.ZG31P            ANOP  ,                                               00192800
                  AIF   (T'&ZCGPR NE 'N').ZG31R  NON NUMERIC            00192900
                  AIF   ('&ZCGPR' LT '2').ZG31Q                         00193000
                  AIF   ('&ZCGPR' LE '12').ZG31R                        00193100
.ZG31Q            ANOP  ,                                               00193200
&ZMS              SETC  '"EXITRTN='                                     00193300
&ZMS              SETC  '&ZMS.&EXITRTN"'                                00193400
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00193500
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00193600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00193700
.ZG31R            ANOP  ,                                               00193800
.*----------------------------------------------------------------***   00193900
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00194000
                  AIF   (N'&EXITRTNPARMS LE 1).ZG33A  CK NUM            00194100
&ZMS              SETC  '"EXITRTNPARMS='                                00194200
&ZMS              SETC  '&ZMS.&EXITRTNPARMS"'                           00194300
&ZMS              SETC  '&ZMS "EXITRTNPARMS"'                           00194400
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00194500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00194600
.ZG33A            ANOP  ,                                               00194700
.*-------------------------------------------------------------------   00194800
.***AG.KXVAR17 NAME, OPT INPUT, KEYS -XVARIABLE                         00194900
&XEXITRTNPARMS    SETC  'NO_EXITRTNPARMS'       SET DEFAULT             00195000
                  AIF   (K'&EXITRTNPARMS(1) LE 0).ZG33C  PARM           00195100
&XEXITRTNPARMS    SETC  '&EXITRTNPARMS(1)'      SET XVARIABLE           00195200
                  AIF   (N'&EXITRTNPARMS GT 1).ZG33B  MULTI             00195300
&XEXITRTNPARMS    SETC  '&EXITRTNPARMS'         SET XVARIABLE           00195400
.ZG33B            AIF   (K'&EXITRTN(1) GT 0).ZG33C  KEY                 00195500
&ZMS              SETC  '"EXITRTNPARMS'                                 00195600
&ZMS              SETC  '&ZMS.=&EXITRTNPARMS"'                          00195700
&ZMS              SETC  '&ZMS CAN ONLY BE SPECIFIED IF'                 00195800
&ZMS              SETC  '&ZMS '                                         00195900
&ZMS              SETC  '&ZMS "EXITRTN"'                                00196000
                  MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                    00196100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00196200
.ZG33C            ANOP  ,                                               00196300
&ZXEXITRTNPARMS   SETC  'INPUT'     SET IN/OUTPUT                       00196400
.*-------------------------------------------------------------------   00196500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00196600
                  AIF   (K'&ZXEXITRTNPARMS LE 0).ZG33R  NOT I/O         00196700
         AIF   ('&XEXITRTNPARMS' EQ 'NO_EXITRTNPARMS').ZG33R            00196800
                  AIF   ('&XEXITRTNPARMS'(1,1) NE '(').ZG33R            00196900
&ZCGPR            SETC  '&XEXITRTNPARMS'(2,K'&XEXITRTNPARMS-2)          00197000
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG33P                    00197100
                  AIF   (K'&ZCGPR GT 2).ZG33Q                           00197200
                  AIF   ('&ZCGPR' EQ '0').ZG33Q                         00197300
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00197400
                  AIF   (T'&ZCGPR NE 'N').ZG33Q  INVALID REG NAME       00197500
.ZG33P            ANOP  ,                                               00197600
                  AIF   (T'&ZCGPR NE 'N').ZG33R  NON NUMERIC            00197700
                  AIF   ('&ZCGPR' LT '2').ZG33Q                         00197800
                  AIF   ('&ZCGPR' LE '12').ZG33R                        00197900
.ZG33Q            ANOP  ,                                               00198000
&ZMS              SETC  '"EXITRTNPARMS='                                00198100
&ZMS              SETC  '&ZMS.&EXITRTNPARMS"'                           00198200
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00198300
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00198400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00198500
.ZG33R            ANOP  ,                                               00198600
.*------------------------------------------------------------------    00198700
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00198800
&XIRB             SETC  ''          INITIALIZE XVARIABLE                00198900
.*-------------------------------------------------------------------   00199000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00199100
.ZG38             ANOP  ,                                               00199200
                  AIF   (K'&IRB(1) LE 0).ZG38A                          00199300
&ZTLC             SETC 'NO'                                             00199400
                  AIF   ('&IRB(1)' NE '&ZTLC').ZG39                     00199500
&XIRB             SETC  'NO'        SET KEYWORD                         00199600
                  AIF   (N'&IRB LE 1).ZG38A     CK NUM                  00199700
&ZMS              SETC  '"IRB='                                         00199800
&ZMS              SETC  '&ZMS.&IRB"'                                    00199900
&ZMS              SETC  '&ZMS "IRB"'                                    00200000
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00200100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00200200
.ZG38A            ANOP  ,                                               00200300
.*-------------------------------------------------------------------   00200400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00200500
.ZG39             ANOP  ,                                               00200600
&ZTLC             SETC 'YES'                                            00200700
                  AIF   ('&IRB(1)' NE '&ZTLC').ZG40                     00200800
&XIRB             SETC  'YES'       SET KEYWORD                         00200900
                  AIF   (N'&IRB LE 1).ZG39A     CK NUM                  00201000
&ZMS              SETC  '"IRB='                                         00201100
&ZMS              SETC  '&ZMS.&IRB"'                                    00201200
&ZMS              SETC  '&ZMS "IRB"'                                    00201300
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00201400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00201500
.ZG39A            ANOP  ,                                               00201600
.*------------------------------------------------------------------    00201700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00201800
.ZG40             ANOP  ,                                               00201900
&ZXIRB            SETC  'INPUT'     SET IN/OUTPUT                       00202000
                  AIF   (K'&XIRB GT 0).ZG40E    VALID ARG               00202100
                  AIF   (T'&IRB EQ 'O').ZG40D   OMITTED                 00202200
&ZASYSLNDX        SETA  0                                               00202300
.ZG40A            ANOP  ,           POSITIONAL MACRO KEY                00202400
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00202500
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG40C                00202600
&ZTLC             SETC 'IRB'                                            00202700
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG40A       00202800
.ZG40B            ANOP  ,                                               00202900
&ZXIRB            SETC  ''          RESET IN/OUTPUT                     00203000
&ZMS              SETC  'THE "IRB" KEY'                                 00203100
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00203200
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00203300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00203400
                  AGO   .ZG40E                                          00203500
.ZG40C            ANOP  ,                                               00203600
&ZXIRB            SETC  ''          RESET IN/OUTPUT                     00203700
&ZMS              SETC  '"IRB='                                         00203800
&ZMS              SETC  '&ZMS.&IRB"'                                    00203900
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00204000
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00204100
&ZMS              SETC  '&ZMS "NO"'                                     00204200
&ZMS              SETC  '&ZMS OR "YES".'                                00204300
                  MNOTE 8,' &ZMS '                                      00204400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00204500
                  AGO   .ZG40E                                          00204600
.ZG40D            ANOP  ,                                               00204700
&XIRB             SETC  'NO'        SET DEFAULT KEYWORD                 00204800
.ZG40E            ANOP  ,                                               00204900
.*------------------------------------------------------------------    00205000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00205100
&XINTASKTERMOK    SETC  ''          INITIALIZE XVARIABLE                00205200
.*-------------------------------------------------------------------   00205300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00205400
.ZG43             ANOP  ,                                               00205500
                  AIF   (K'&INTASKTERMOK(1) LE 0).ZG43A                 00205600
&ZTLC             SETC 'NO'                                             00205700
                  AIF   ('&INTASKTERMOK(1)' NE '&ZTLC').ZG44            00205800
&XINTASKTERMOK    SETC  'NO'        SET KEYWORD                         00205900
                  AIF   (N'&INTASKTERMOK LE 1).ZG43A  CK NUM            00206000
&ZMS              SETC  '"INTASKTERMOK='                                00206100
&ZMS              SETC  '&ZMS.&INTASKTERMOK"'                           00206200
&ZMS              SETC  '&ZMS "INTASKTERMOK"'                           00206300
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00206400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00206500
.ZG43A            ANOP  ,                                               00206600
.*-------------------------------------------------------------------   00206700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00206800
.ZG44             ANOP  ,                                               00206900
&ZTLC             SETC 'YES'                                            00207000
                  AIF   ('&INTASKTERMOK(1)' NE '&ZTLC').ZG45            00207100
&XINTASKTERMOK    SETC  'YES'       SET KEYWORD                         00207200
                  AIF   (N'&INTASKTERMOK LE 1).ZG44A  CK NUM            00207300
&ZMS              SETC  '"INTASKTERMOK='                                00207400
&ZMS              SETC  '&ZMS.&INTASKTERMOK"'                           00207500
&ZMS              SETC  '&ZMS "INTASKTERMOK"'                           00207600
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00207700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00207800
.ZG44A            ANOP  ,                                               00207900
.*------------------------------------------------------------------    00208000
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00208100
.ZG45             ANOP  ,                                               00208200
&ZXINTASKTERMOK   SETC  'INPUT'     SET IN/OUTPUT                       00208300
                  AIF   (K'&XINTASKTERMOK GT 0).ZG45E  VALID ARG        00208400
                  AIF   (T'&INTASKTERMOK EQ 'O').ZG45D  OMITTED         00208500
&ZASYSLNDX        SETA  0                                               00208600
.ZG45A            ANOP  ,           POSITIONAL MACRO KEY                00208700
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00208800
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG45C                00208900
&ZTLC             SETC 'INTASKTERMOK'                                   00209000
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG45A       00209100
.ZG45B            ANOP  ,                                               00209200
&ZXINTASKTERMOK   SETC  ''          RESET IN/OUTPUT                     00209300
&ZMS              SETC  'THE "INTASKTERMOK" KEY'                        00209400
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00209500
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00209600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00209700
                  AGO   .ZG45E                                          00209800
.ZG45C            ANOP  ,                                               00209900
&ZXINTASKTERMOK   SETC  ''          RESET IN/OUTPUT                     00210000
&ZMS              SETC  '"INTASKTERMOK='                                00210100
&ZMS              SETC  '&ZMS.&INTASKTERMOK"'                           00210200
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00210300
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00210400
&ZMS              SETC  '&ZMS "NO"'                                     00210500
&ZMS              SETC  '&ZMS OR "YES".'                                00210600
                  MNOTE 8,' &ZMS '                                      00210700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00210800
                  AGO   .ZG45E                                          00210900
.ZG45D            ANOP  ,                                               00211000
&XINTASKTERMOK    SETC  'NO'        SET DEFAULT KEYWORD                 00211100
.ZG45E            ANOP  ,                                               00211200
.*----------------------------------------------------------------***   00211300
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00211400
                  AIF   (N'&WORKAREA LE 1).ZG47A  CK NUM                00211500
&ZMS              SETC  '"WORKAREA='                                    00211600
&ZMS              SETC  '&ZMS.&WORKAREA"'                               00211700
&ZMS              SETC  '&ZMS "WORKAREA"'                               00211800
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00211900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00212000
.ZG47A            ANOP  ,                                               00212100
.*-------------------------------------------------------------------   00212200
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00212300
&ZXWORKAREA       SETC  'INPUT'     SET IN/OUTPUT                       00212400
&XWORKAREA        SETC  '&WORKAREA(1)'          SET XVARIABLE           00212500
                  AIF   (N'&WORKAREA GT 1).ZG47B  MULTI                 00212600
&XWORKAREA        SETC  '&WORKAREA'             SET XVARIABLE           00212700
.ZG47B            AIF   (K'&WORKAREA(1) GT 0).ZG47C                     00212800
&ZXWORKAREA       SETC  ''          RESET IN/OUTPUT                     00212900
&ZMS              SETC  ' '                                             00213000
&ZMS              SETC  '&ZMS "WORKAREA" KEY AND ITS'                   00213100
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00213200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00213300
.ZG47C            ANOP  ,                                               00213400
.*-------------------------------------------------------------------   00213500
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00213600
                  AIF   (K'&ZXWORKAREA LE 0).ZG47R  NOT I/O             00213700
                  AIF   ('&XWORKAREA'(1,1) NE '(').ZG47R                00213800
&ZCGPR            SETC  '&XWORKAREA'(2,K'&XWORKAREA-2)                  00213900
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG47P                    00214000
                  AIF   (K'&ZCGPR GT 2).ZG47Q                           00214100
                  AIF   ('&ZCGPR' EQ '0').ZG47Q                         00214200
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00214300
                  AIF   (T'&ZCGPR NE 'N').ZG47Q  INVALID REG NAME       00214400
.ZG47P            ANOP  ,                                               00214500
                  AIF   (T'&ZCGPR NE 'N').ZG47R  NON NUMERIC            00214600
                  AIF   ('&ZCGPR' LT '2').ZG47Q                         00214700
                  AIF   ('&ZCGPR' LE '12').ZG47R                        00214800
.ZG47Q            ANOP  ,                                               00214900
&ZMS              SETC  '"WORKAREA='                                    00215000
&ZMS              SETC  '&ZMS.&WORKAREA"'                               00215100
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00215200
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00215300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00215400
.ZG47R            ANOP  ,                                               00215500
.*----------------------------------------------------------------***   00215600
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00215700
                  AIF   (N'&RETCODE LE 1).ZG50A  CK NUM                 00215800
&ZMS              SETC  '"RETCODE='                                     00215900
&ZMS              SETC  '&ZMS.&RETCODE"'                                00216000
&ZMS              SETC  '&ZMS "RETCODE"'                                00216100
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00216200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00216300
.ZG50A            ANOP  ,                                               00216400
.*-------------------------------------------------------------------   00216500
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00216600
                  AIF   (K'&RETCODE(1) LE 0).ZG50C  NO PARM             00216700
&ZXRETCODE        SETC  'OUTPUT'    SET OUTPUT                          00216800
&XRETCODE         SETC  '&RETCODE(1)'           SET XVARIABLE           00216900
                  AIF   (N'&RETCODE GT 1).ZG50C                         00217000
&XRETCODE         SETC  '&RETCODE'  SET XVARIABLE                       00217100
.ZG50C            ANOP  ,                                               00217200
.*-------------------------------------------------------------------   00217300
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00217400
                  AIF   (K'&ZXRETCODE LE 0).ZG50R  NOT I/O              00217500
                  AIF   ('&XRETCODE'(1,1) NE '(').ZG50R                 00217600
&ZCGPR            SETC  '&XRETCODE'(2,K'&XRETCODE-2)                    00217700
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG50P                    00217800
                  AIF   (K'&ZCGPR GT 2).ZG50Q                           00217900
                  AIF   ('&ZCGPR' EQ '0').ZG50Q                         00218000
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00218100
                  AIF   (T'&ZCGPR NE 'N').ZG50Q  INVALID REG NAME       00218200
.ZG50P            ANOP  ,                                               00218300
                  AIF   (T'&ZCGPR NE 'N').ZG50R  NON NUMERIC            00218400
                  AIF   ('&ZCGPR' EQ '15').ZG50R                        00218500
                  AIF   ('&ZCGPR' LT '2').ZG50Q                         00218600
                  AIF   ('&ZCGPR' LE '12').ZG50R                        00218700
.ZG50Q            ANOP  ,                                               00218800
&ZMS              SETC  '"RETCODE='                                     00218900
&ZMS              SETC  '&ZMS.&RETCODE"'                                00219000
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00219100
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12) OR (15).'        00219200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00219300
.ZG50R            ANOP  ,                                               00219400
.*----------------------------------------------------------------***   00219500
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00219600
                  AIF   (N'&RSNCODE LE 1).ZG53A  CK NUM                 00219700
&ZMS              SETC  '"RSNCODE='                                     00219800
&ZMS              SETC  '&ZMS.&RSNCODE"'                                00219900
&ZMS              SETC  '&ZMS "RSNCODE"'                                00220000
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00220100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00220200
.ZG53A            ANOP  ,                                               00220300
.*-------------------------------------------------------------------   00220400
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00220500
                  AIF   (K'&RSNCODE(1) LE 0).ZG53C  NO PARM             00220600
&ZXRSNCODE        SETC  'OUTPUT'    SET OUTPUT                          00220700
&XRSNCODE         SETC  '&RSNCODE(1)'           SET XVARIABLE           00220800
                  AIF   (N'&RSNCODE GT 1).ZG53C                         00220900
&XRSNCODE         SETC  '&RSNCODE'  SET XVARIABLE                       00221000
.ZG53C            ANOP  ,                                               00221100
.*-------------------------------------------------------------------   00221200
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00221300
                  AIF   (K'&ZXRSNCODE LE 0).ZG53R  NOT I/O              00221400
                  AIF   ('&XRSNCODE'(1,1) NE '(').ZG53R                 00221500
&ZCGPR            SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                    00221600
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG53P                    00221700
                  AIF   (K'&ZCGPR GT 2).ZG53Q                           00221800
                  AIF   ('&ZCGPR' EQ '0').ZG53R                         00221900
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00222000
                  AIF   (T'&ZCGPR NE 'N').ZG53Q  INVALID REG NAME       00222100
.ZG53P            ANOP  ,                                               00222200
                  AIF   (T'&ZCGPR NE 'N').ZG53R  NON NUMERIC            00222300
                  AIF   ('&ZCGPR' EQ '0').ZG53R                         00222400
                  AIF   ('&ZCGPR' LT '2').ZG53Q                         00222500
                  AIF   ('&ZCGPR' LE '12').ZG53R                        00222600
.ZG53Q            ANOP  ,                                               00222700
&ZMS              SETC  '"RSNCODE='                                     00222800
&ZMS              SETC  '&ZMS.&RSNCODE"'                                00222900
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00223000
                  MNOTE 8,' &ZMS IN THE RANGE (0) OR (2)-(12).'         00223100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00223200
.ZG53R            ANOP  ,                                               00223300
.******************************************************************     00223400
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00223500
.******************************************************************     00223600
                  ACTR  10000                                           00223700
.*----------------------------------------------------------------***   00223800
.***AH.P02 EXTRA POSITIONALS                                            00223900
                  AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS            00224000
                  AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL            00224100
                  AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL        00224200
                  AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL         00224300
.ZGLISTX1         ANOP  ,                                               00224400
&ZCVAL            SETC  ''          ERROR FIELD                         00224500
&ZAWRK            SETA  0           POSITIONAL NUMBER                   00224600
.ZGLIST2          ANOP  ,                                               00224700
&ZAWRK            SETA  &ZAWRK+1    NEXT POSITIONAL                     00224800
                  AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE            00224900
&ZCVAL            SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                 00225000
                  AGO   .ZGLIST2                                        00225100
.*                                                                      00225200
.ZGLIST3          ANOP  ,                                               00225300
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)   STRIP COMMA             00225400
&ZMS              SETC  'POSITIONAL ARGUMENT(S),'                       00225500
&ZMS              SETC  '&ZMS "&ZCVAL"'                                 00225600
&ZMS              SETC  '&ZMS CANNOT BE USED.'                          00225700
&ZMS              SETC  '&ZMS NO POSITIONAL ARGUMENTS'                  00225800
                  MNOTE 8,' &ZMS ARE ALLOWED.'                          00225900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00226000
.ZGLISTX          ANOP  ,                                               00226100
&ZASYSLNDX        SETA  0                                               00226200
.*-------------------------------------------------------------------   00226300
.***AG.MF04 MF=(SLME)                                                   00226400
.ZGMFX            ANOP  ,           END OF FULL SYNTAX CHECK            00226500
.********************************************************************   00226600
.***AE.MF01   PARTIAL MACRO SYNTAX CHECKING                             00226700
.********************************************************************   00226800
                  ACTR  10000                                           00226900
.*-------------------------------------------------------------------   00227000
.***AE.MF01 MF=(SLME)                                                   00227100
                  AIF   ('&XMF' EQ 'L').ZEMFX                           00227200
                  AIF   ('&XMFSCK' NE 'NOCHECK').ZEMFX                  00227300
.********************************************************************   00227400
.***AE.KC00 INITIALIZE KEYWORD CONTROL VARIABLES                        00227500
.********************************************************************   00227600
&XTTOKENTYPE      SETC  ''          INITIALIZE XVARIABLE                00227700
&XIRB             SETC  ''          INITIALIZE XVARIABLE                00227800
&XINTASKTERMOK    SETC  ''          INITIALIZE XVARIABLE                00227900
.*----------------------------------------------------------------***   00228000
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                          00228100
                  AIF   (N'&ECB LE 1).ZE2A      CK NUM                  00228200
&ZMS              SETC  '"ECB='                                         00228300
&ZMS              SETC  '&ZMS.&ECB"'                                    00228400
&ZMS              SETC  '&ZMS "ECB"'                                    00228500
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00228600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00228700
.ZE2A             ANOP  ,                                               00228800
.*-------------------------------------------------------------------   00228900
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                     00229000
                  AIF   (K'&ECB(1) LE 0).ZE2B   NO PRM                  00229100
&ZXECB            SETC  'INPUT'     SET IN/OUTPUT                       00229200
&XECB             SETC  '&ECB(1)'   SET XVARIABLE                       00229300
                  AIF   (N'&ECB GT 1).ZE2B                              00229400
.*                ANOP                                                  00229500
&XECB             SETC  '&ECB'      SET XVARIABLE                       00229600
.ZE2B             ANOP  ,                                               00229700
.*-------------------------------------------------------------------   00229800
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00229900
                  AIF   (K'&ZXECB LE 0).ZE2R    NOT I/O                 00230000
                  AIF   ('&XECB'(1,1) NE '(').ZE2R                      00230100
&ZCGPR            SETC  '&XECB'(2,K'&XECB-2)                            00230200
                  AIF   ('&ZCGPR'(1,1) NE '0').ZE2P                     00230300
                  AIF   (K'&ZCGPR GT 2).ZE2Q                            00230400
                  AIF   ('&ZCGPR' EQ '0').ZE2Q                          00230500
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00230600
                  AIF   (T'&ZCGPR NE 'N').ZE2Q  INVALID REG NAME        00230700
.ZE2P             ANOP  ,                                               00230800
                  AIF   (T'&ZCGPR NE 'N').ZE2R  NON NUMERIC             00230900
                  AIF   ('&ZCGPR' LT '2').ZE2Q                          00231000
                  AIF   ('&ZCGPR' LE '12').ZE2R                         00231100
.ZE2Q             ANOP  ,                                               00231200
&ZMS              SETC  '"ECB='                                         00231300
&ZMS              SETC  '&ZMS.&ECB"'                                    00231400
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00231500
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00231600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00231700
.ZE2R             ANOP  ,                                               00231800
.*----------------------------------------------------------------***   00231900
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          00232000
                  AIF   (N'&POSTCODE LE 1).ZE5A  CK NUM                 00232100
&ZMS              SETC  '"POSTCODE='                                    00232200
&ZMS              SETC  '&ZMS.&POSTCODE"'                               00232300
&ZMS              SETC  '&ZMS "POSTCODE"'                               00232400
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00232500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00232600
.ZE5A             ANOP  ,                                               00232700
.*-------------------------------------------------------------------   00232800
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     00232900
                  AIF   (K'&POSTCODE(1) LE 0).ZE5B NO PRM               00233000
&ZXPOSTCODE       SETC  'INPUT'     SET IN/OUTPUT                       00233100
&XPOSTCODE        SETC  '&POSTCODE(1)'          SET XVARIABLE           00233200
                  AIF   (N'&POSTCODE GT 1).ZE5B                         00233300
.*                ANOP                                                  00233400
&XPOSTCODE        SETC  '&POSTCODE'             SET XVARIABLE           00233500
.ZE5B             ANOP  ,                                               00233600
.*-------------------------------------------------------------------   00233700
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00233800
                  AIF   (K'&ZXPOSTCODE LE 0).ZE5R  NOT I/O              00233900
                  AIF   ('&XPOSTCODE'(1,1) NE '(').ZE5R                 00234000
&ZCGPR            SETC  '&XPOSTCODE'(2,K'&XPOSTCODE-2)                  00234100
                  AIF   ('&ZCGPR'(1,1) NE '0').ZE5P                     00234200
                  AIF   (K'&ZCGPR GT 2).ZE5Q                            00234300
                  AIF   ('&ZCGPR' EQ '0').ZE5Q                          00234400
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00234500
                  AIF   (T'&ZCGPR NE 'N').ZE5Q  INVALID REG NAME        00234600
.ZE5P             ANOP  ,                                               00234700
                  AIF   (T'&ZCGPR NE 'N').ZE5R  NON NUMERIC             00234800
                  AIF   ('&ZCGPR' LT '2').ZE5Q                          00234900
                  AIF   ('&ZCGPR' LE '12').ZE5R                         00235000
.ZE5Q             ANOP  ,                                               00235100
&ZMS              SETC  '"POSTCODE='                                    00235200
&ZMS              SETC  '&ZMS.&POSTCODE"'                               00235300
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00235400
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00235500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00235600
.ZE5R             ANOP  ,                                               00235700
.*-------------------------------------------------------------------   00235800
.***AE.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00235900
&ZTLC             SETC 'ANY'                                            00236000
                  AIF   ('&TTOKENTYPE(1)' NE '&ZTLC').ZE9A              00236100
&XTTOKENTYPE      SETC  'ANY'       SET KEYWORD                         00236200
                  AIF   (N'&TTOKENTYPE LE 1).ZE9A  CK NUM               00236300
&ZMS              SETC  '"TTOKENTYPE='                                  00236400
&ZMS              SETC  '&ZMS.&TTOKENTYPE"'                             00236500
&ZMS              SETC  '&ZMS "TTOKENTYPE"'                             00236600
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00236700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00236800
.ZE9A             ANOP  ,                                               00236900
.*----------------------------------------------------------------***   00237000
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                          00237100
                  AIF   (N'&TTOKEN LE 1).ZE11A  CK NUM                  00237200
&ZMS              SETC  '"TTOKEN='                                      00237300
&ZMS              SETC  '&ZMS.&TTOKEN"'                                 00237400
&ZMS              SETC  '&ZMS "TTOKEN"'                                 00237500
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00237600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00237700
.ZE11A            ANOP  ,                                               00237800
.*-------------------------------------------------------------------   00237900
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                     00238000
                  AIF   (K'&TTOKEN(1) LE 0).ZE11B NO PRM                00238100
&ZXTTOKEN         SETC  'INPUT'     SET IN/OUTPUT                       00238200
&XTTOKEN          SETC  '&TTOKEN(1)'            SET XVARIABLE           00238300
                  AIF   (N'&TTOKEN GT 1).ZE11B                          00238400
.*                ANOP                                                  00238500
&XTTOKEN          SETC  '&TTOKEN'   SET XVARIABLE                       00238600
.ZE11B            ANOP  ,                                               00238700
.*-------------------------------------------------------------------   00238800
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00238900
                  AIF   (K'&ZXTTOKEN LE 0).ZE11R  NOT I/O               00239000
                  AIF   ('&XTTOKEN'(1,1) NE '(').ZE11R                  00239100
&ZCGPR            SETC  '&XTTOKEN'(2,K'&XTTOKEN-2)                      00239200
                  AIF   ('&ZCGPR'(1,1) NE '0').ZE11P                    00239300
                  AIF   (K'&ZCGPR GT 2).ZE11Q                           00239400
                  AIF   ('&ZCGPR' EQ '0').ZE11Q                         00239500
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00239600
                  AIF   (T'&ZCGPR NE 'N').ZE11Q  INVALID REG NAME       00239700
.ZE11P            ANOP  ,                                               00239800
                  AIF   (T'&ZCGPR NE 'N').ZE11R  NON NUMERIC            00239900
                  AIF   ('&ZCGPR' LT '2').ZE11Q                         00240000
                  AIF   ('&ZCGPR' LE '12').ZE11R                        00240100
.ZE11Q            ANOP  ,                                               00240200
&ZMS              SETC  '"TTOKEN='                                      00240300
&ZMS              SETC  '&ZMS.&TTOKEN"'                                 00240400
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00240500
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00240600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00240700
.ZE11R            ANOP  ,                                               00240800
.*----------------------------------------------------------------***   00240900
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          00241000
                  AIF   (N'&STOKEN LE 1).ZE13A  CK NUM                  00241100
&ZMS              SETC  '"STOKEN='                                      00241200
&ZMS              SETC  '&ZMS.&STOKEN"'                                 00241300
&ZMS              SETC  '&ZMS "STOKEN"'                                 00241400
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00241500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00241600
.ZE13A            ANOP  ,                                               00241700
.*-------------------------------------------------------------------   00241800
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     00241900
                  AIF   (K'&STOKEN(1) LE 0).ZE13B NO PRM                00242000
&ZXSTOKEN         SETC  'INPUT'     SET IN/OUTPUT                       00242100
&XSTOKEN          SETC  '&STOKEN(1)'            SET XVARIABLE           00242200
                  AIF   (N'&STOKEN GT 1).ZE13B                          00242300
.*                ANOP                                                  00242400
&XSTOKEN          SETC  '&STOKEN'   SET XVARIABLE                       00242500
.ZE13B            ANOP  ,                                               00242600
.*-------------------------------------------------------------------   00242700
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00242800
                  AIF   (K'&ZXSTOKEN LE 0).ZE13R  NOT I/O               00242900
                  AIF   ('&XSTOKEN'(1,1) NE '(').ZE13R                  00243000
&ZCGPR            SETC  '&XSTOKEN'(2,K'&XSTOKEN-2)                      00243100
                  AIF   ('&ZCGPR'(1,1) NE '0').ZE13P                    00243200
                  AIF   (K'&ZCGPR GT 2).ZE13Q                           00243300
                  AIF   ('&ZCGPR' EQ '0').ZE13Q                         00243400
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00243500
                  AIF   (T'&ZCGPR NE 'N').ZE13Q  INVALID REG NAME       00243600
.ZE13P            ANOP  ,                                               00243700
                  AIF   (T'&ZCGPR NE 'N').ZE13R  NON NUMERIC            00243800
                  AIF   ('&ZCGPR' LT '2').ZE13Q                         00243900
                  AIF   ('&ZCGPR' LE '12').ZE13R                        00244000
.ZE13Q            ANOP  ,                                               00244100
&ZMS              SETC  '"STOKEN='                                      00244200
&ZMS              SETC  '&ZMS.&STOKEN"'                                 00244300
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00244400
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00244500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00244600
.ZE13R            ANOP  ,                                               00244700
.*-------------------------------------------------------------------   00244800
.***AE.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00244900
&ZTLC             SETC 'FIRSTTASK'                                      00245000
                  AIF   ('&TTOKENTYPE(1)' NE '&ZTLC').ZE16A             00245100
&XTTOKENTYPE      SETC  'FIRSTTASK'             SET KEYWORD             00245200
                  AIF   (N'&TTOKENTYPE LE 1).ZE16A  CK NUM              00245300
&ZMS              SETC  '"TTOKENTYPE='                                  00245400
&ZMS              SETC  '&ZMS.&TTOKENTYPE"'                             00245500
&ZMS              SETC  '&ZMS "TTOKENTYPE"'                             00245600
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00245700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00245800
.ZE16A            ANOP  ,                                               00245900
.*----------------------------------------------------------------***   00246000
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                          00246100
                  AIF   (N'&STOKEN LE 1).ZE18A  CK NUM                  00246200
&ZMS              SETC  '"STOKEN='                                      00246300
&ZMS              SETC  '&ZMS.&STOKEN"'                                 00246400
&ZMS              SETC  '&ZMS "STOKEN"'                                 00246500
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00246600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00246700
.ZE18A            ANOP  ,                                               00246800
.*-------------------------------------------------------------------   00246900
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                     00247000
                  AIF   (K'&STOKEN(1) LE 0).ZE18B NO PRM                00247100
&ZXSTOKEN         SETC  'INPUT'     SET IN/OUTPUT                       00247200
&XSTOKEN          SETC  '&STOKEN(1)'            SET XVARIABLE           00247300
                  AIF   (N'&STOKEN GT 1).ZE18B                          00247400
.*                ANOP                                                  00247500
&XSTOKEN          SETC  '&STOKEN'   SET XVARIABLE                       00247600
.ZE18B            ANOP  ,                                               00247700
.*-------------------------------------------------------------------   00247800
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00247900
                  AIF   (K'&ZXSTOKEN LE 0).ZE18R  NOT I/O               00248000
                  AIF   ('&XSTOKEN'(1,1) NE '(').ZE18R                  00248100
&ZCGPR            SETC  '&XSTOKEN'(2,K'&XSTOKEN-2)                      00248200
                  AIF   ('&ZCGPR'(1,1) NE '0').ZE18P                    00248300
                  AIF   (K'&ZCGPR GT 2).ZE18Q                           00248400
                  AIF   ('&ZCGPR' EQ '0').ZE18Q                         00248500
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00248600
                  AIF   (T'&ZCGPR NE 'N').ZE18Q  INVALID REG NAME       00248700
.ZE18P            ANOP  ,                                               00248800
                  AIF   (T'&ZCGPR NE 'N').ZE18R  NON NUMERIC            00248900
                  AIF   ('&ZCGPR' LT '2').ZE18Q                         00249000
                  AIF   ('&ZCGPR' LE '12').ZE18R                        00249100
.ZE18Q            ANOP  ,                                               00249200
&ZMS              SETC  '"STOKEN='                                      00249300
&ZMS              SETC  '&ZMS.&STOKEN"'                                 00249400
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00249500
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00249600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00249700
.ZE18R            ANOP  ,                                               00249800
.*------------------------------------------------------------------    00249900
.***AE.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00250000
.ZE20             AIF   (K'&XTTOKENTYPE GT 0).ZE20A                     00250100
                  AIF   (K'&TTOKENTYPE(1) LE 0).ZE20B                   00250200
&ZMS              SETC  '"TTOKENTYPE='                                  00250300
&ZMS              SETC  '&ZMS.&TTOKENTYPE"'                             00250400
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00250500
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00250600
&ZMS              SETC  '&ZMS "ANY"'                                    00250700
&ZMS              SETC  '&ZMS OR "FIRSTTASK".'                          00250800
                  MNOTE 8,' &ZMS '                                      00250900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00251000
                  AGO   .ZE20B                                          00251100
.*                                                                      00251200
.ZE20A            ANOP  ,                                               00251300
&ZXTTOKENTYPE     SETC  'INPUT'     SET IN/OUTPUT                       00251400
.ZE20B            ANOP  ,                                               00251500
.*----------------------------------------------------------------***   00251600
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                          00251700
                  AIF   (N'&KEY0TO15 LE 1).ZE22A  CK NUM                00251800
&ZMS              SETC  '"KEY0TO15='                                    00251900
&ZMS              SETC  '&ZMS.&KEY0TO15"'                               00252000
&ZMS              SETC  '&ZMS "KEY0TO15"'                               00252100
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00252200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00252300
.ZE22A            ANOP  ,                                               00252400
.*-------------------------------------------------------------------   00252500
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                     00252600
                  AIF   (K'&KEY0TO15(1) LE 0).ZE22B NO PRM              00252700
&ZXKEY0TO15       SETC  'INPUT'     SET IN/OUTPUT                       00252800
&XKEY0TO15        SETC  '&KEY0TO15(1)'          SET XVARIABLE           00252900
                  AIF   (N'&KEY0TO15 GT 1).ZE22B                        00253000
.*                ANOP                                                  00253100
&XKEY0TO15        SETC  '&KEY0TO15'             SET XVARIABLE           00253200
.ZE22B            ANOP  ,                                               00253300
.*-------------------------------------------------------------------   00253400
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00253500
                  AIF   (K'&ZXKEY0TO15 LE 0).ZE22R  NOT I/O             00253600
                  AIF   ('&XKEY0TO15'(1,1) NE '(').ZE22R                00253700
&ZCGPR            SETC  '&XKEY0TO15'(2,K'&XKEY0TO15-2)                  00253800
                  AIF   ('&ZCGPR'(1,1) NE '0').ZE22P                    00253900
                  AIF   (K'&ZCGPR GT 2).ZE22Q                           00254000
                  AIF   ('&ZCGPR' EQ '0').ZE22Q                         00254100
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00254200
                  AIF   (T'&ZCGPR NE 'N').ZE22Q  INVALID REG NAME       00254300
.ZE22P            ANOP  ,                                               00254400
                  AIF   (T'&ZCGPR NE 'N').ZE22R  NON NUMERIC            00254500
                  AIF   ('&ZCGPR' LT '2').ZE22Q                         00254600
                  AIF   ('&ZCGPR' LE '12').ZE22R                        00254700
.ZE22Q            ANOP  ,                                               00254800
&ZMS              SETC  '"KEY0TO15='                                    00254900
&ZMS              SETC  '&ZMS.&KEY0TO15"'                               00255000
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00255100
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00255200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00255300
.ZE22R            ANOP  ,                                               00255400
.*----------------------------------------------------------------***   00255500
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          00255600
                  AIF   (N'&PURGEASID LE 1).ZE25A  CK NUM               00255700
&ZMS              SETC  '"PURGEASID='                                   00255800
&ZMS              SETC  '&ZMS.&PURGEASID"'                              00255900
&ZMS              SETC  '&ZMS "PURGEASID"'                              00256000
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00256100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00256200
.ZE25A            ANOP  ,                                               00256300
.*-------------------------------------------------------------------   00256400
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     00256500
                  AIF   (K'&PURGEASID(1) LE 0).ZE25B NO PRM             00256600
&ZXPURGEASID      SETC  'INPUT'     SET IN/OUTPUT                       00256700
&XPURGEASID       SETC  '&PURGEASID(1)'         SET XVARIABLE           00256800
                  AIF   (N'&PURGEASID GT 1).ZE25B                       00256900
.*                ANOP                                                  00257000
&XPURGEASID       SETC  '&PURGEASID'            SET XVARIABLE           00257100
.ZE25B            ANOP  ,                                               00257200
.*-------------------------------------------------------------------   00257300
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00257400
                  AIF   (K'&ZXPURGEASID LE 0).ZE25R  NOT I/O            00257500
                  AIF   ('&XPURGEASID'(1,1) NE '(').ZE25R               00257600
&ZCGPR            SETC  '&XPURGEASID'(2,K'&XPURGEASID-2)                00257700
                  AIF   ('&ZCGPR'(1,1) NE '0').ZE25P                    00257800
                  AIF   (K'&ZCGPR GT 2).ZE25Q                           00257900
                  AIF   ('&ZCGPR' EQ '0').ZE25Q                         00258000
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00258100
                  AIF   (T'&ZCGPR NE 'N').ZE25Q  INVALID REG NAME       00258200
.ZE25P            ANOP  ,                                               00258300
                  AIF   (T'&ZCGPR NE 'N').ZE25R  NON NUMERIC            00258400
                  AIF   ('&ZCGPR' LT '2').ZE25Q                         00258500
                  AIF   ('&ZCGPR' LE '12').ZE25R                        00258600
.ZE25Q            ANOP  ,                                               00258700
&ZMS              SETC  '"PURGEASID='                                   00258800
&ZMS              SETC  '&ZMS.&PURGEASID"'                              00258900
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00259000
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00259100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00259200
.ZE25R            ANOP  ,                                               00259300
.*----------------------------------------------------------------***   00259400
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                          00259500
                  AIF   (N'&PURGETCB LE 1).ZE27A  CK NUM                00259600
&ZMS              SETC  '"PURGETCB='                                    00259700
&ZMS              SETC  '&ZMS.&PURGETCB"'                               00259800
&ZMS              SETC  '&ZMS "PURGETCB"'                               00259900
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00260000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00260100
.ZE27A            ANOP  ,                                               00260200
.*-------------------------------------------------------------------   00260300
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                     00260400
                  AIF   (K'&PURGETCB(1) LE 0).ZE27B NO PRM              00260500
&ZXPURGETCB       SETC  'INPUT'     SET IN/OUTPUT                       00260600
&XPURGETCB        SETC  '&PURGETCB(1)'          SET XVARIABLE           00260700
                  AIF   (N'&PURGETCB GT 1).ZE27B                        00260800
.*                ANOP                                                  00260900
&XPURGETCB        SETC  '&PURGETCB'             SET XVARIABLE           00261000
.ZE27B            ANOP  ,                                               00261100
.*-------------------------------------------------------------------   00261200
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00261300
                  AIF   (K'&ZXPURGETCB LE 0).ZE27R  NOT I/O             00261400
                  AIF   ('&XPURGETCB'(1,1) NE '(').ZE27R                00261500
&ZCGPR            SETC  '&XPURGETCB'(2,K'&XPURGETCB-2)                  00261600
                  AIF   ('&ZCGPR'(1,1) NE '0').ZE27P                    00261700
                  AIF   (K'&ZCGPR GT 2).ZE27Q                           00261800
                  AIF   ('&ZCGPR' EQ '0').ZE27Q                         00261900
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00262000
                  AIF   (T'&ZCGPR NE 'N').ZE27Q  INVALID REG NAME       00262100
.ZE27P            ANOP  ,                                               00262200
                  AIF   (T'&ZCGPR NE 'N').ZE27R  NON NUMERIC            00262300
                  AIF   ('&ZCGPR' LT '2').ZE27Q                         00262400
                  AIF   ('&ZCGPR' LE '12').ZE27R                        00262500
.ZE27Q            ANOP  ,                                               00262600
&ZMS              SETC  '"PURGETCB='                                    00262700
&ZMS              SETC  '&ZMS.&PURGETCB"'                               00262800
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00262900
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00263000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00263100
.ZE27R            ANOP  ,                                               00263200
.*----------------------------------------------------------------***   00263300
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          00263400
                  AIF   (N'&EXITRTN LE 1).ZE31A  CK NUM                 00263500
&ZMS              SETC  '"EXITRTN='                                     00263600
&ZMS              SETC  '&ZMS.&EXITRTN"'                                00263700
&ZMS              SETC  '&ZMS "EXITRTN"'                                00263800
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00263900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00264000
.ZE31A            ANOP  ,                                               00264100
.*-------------------------------------------------------------------   00264200
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     00264300
                  AIF   (K'&EXITRTN(1) LE 0).ZE31B NO PRM               00264400
&ZXEXITRTN        SETC  'INPUT'     SET IN/OUTPUT                       00264500
&XEXITRTN         SETC  '&EXITRTN(1)'           SET XVARIABLE           00264600
                  AIF   (N'&EXITRTN GT 1).ZE31B                         00264700
.*                ANOP                                                  00264800
&XEXITRTN         SETC  '&EXITRTN'  SET XVARIABLE                       00264900
.ZE31B            ANOP  ,                                               00265000
.*-------------------------------------------------------------------   00265100
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00265200
                  AIF   (K'&ZXEXITRTN LE 0).ZE31R  NOT I/O              00265300
                  AIF   ('&XEXITRTN'(1,1) NE '(').ZE31R                 00265400
&ZCGPR            SETC  '&XEXITRTN'(2,K'&XEXITRTN-2)                    00265500
                  AIF   ('&ZCGPR'(1,1) NE '0').ZE31P                    00265600
                  AIF   (K'&ZCGPR GT 2).ZE31Q                           00265700
                  AIF   ('&ZCGPR' EQ '0').ZE31Q                         00265800
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00265900
                  AIF   (T'&ZCGPR NE 'N').ZE31Q  INVALID REG NAME       00266000
.ZE31P            ANOP  ,                                               00266100
                  AIF   (T'&ZCGPR NE 'N').ZE31R  NON NUMERIC            00266200
                  AIF   ('&ZCGPR' LT '2').ZE31Q                         00266300
                  AIF   ('&ZCGPR' LE '12').ZE31R                        00266400
.ZE31Q            ANOP  ,                                               00266500
&ZMS              SETC  '"EXITRTN='                                     00266600
&ZMS              SETC  '&ZMS.&EXITRTN"'                                00266700
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00266800
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00266900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00267000
.ZE31R            ANOP  ,                                               00267100
.*----------------------------------------------------------------***   00267200
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          00267300
                  AIF   (N'&EXITRTNPARMS LE 1).ZE33A  CK NUM            00267400
&ZMS              SETC  '"EXITRTNPARMS='                                00267500
&ZMS              SETC  '&ZMS.&EXITRTNPARMS"'                           00267600
&ZMS              SETC  '&ZMS "EXITRTNPARMS"'                           00267700
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00267800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00267900
.ZE33A            ANOP  ,                                               00268000
.*-------------------------------------------------------------------   00268100
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     00268200
                  AIF   (K'&EXITRTNPARMS(1) LE 0).ZE33B NO PRM          00268300
&ZXEXITRTNPARMS   SETC  'INPUT'     SET IN/OUTPUT                       00268400
&XEXITRTNPARMS    SETC  '&EXITRTNPARMS(1)'      SET XVARIABLE           00268500
                  AIF   (N'&EXITRTNPARMS GT 1).ZE33B                    00268600
.*                ANOP                                                  00268700
&XEXITRTNPARMS    SETC  '&EXITRTNPARMS'         SET XVARIABLE           00268800
.ZE33B            ANOP  ,                                               00268900
.*-------------------------------------------------------------------   00269000
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00269100
                  AIF   (K'&ZXEXITRTNPARMS LE 0).ZE33R  NOT I/O         00269200
                  AIF   ('&XEXITRTNPARMS'(1,1) NE '(').ZE33R            00269300
&ZCGPR            SETC  '&XEXITRTNPARMS'(2,K'&XEXITRTNPARMS-2)          00269400
                  AIF   ('&ZCGPR'(1,1) NE '0').ZE33P                    00269500
                  AIF   (K'&ZCGPR GT 2).ZE33Q                           00269600
                  AIF   ('&ZCGPR' EQ '0').ZE33Q                         00269700
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00269800
                  AIF   (T'&ZCGPR NE 'N').ZE33Q  INVALID REG NAME       00269900
.ZE33P            ANOP  ,                                               00270000
                  AIF   (T'&ZCGPR NE 'N').ZE33R  NON NUMERIC            00270100
                  AIF   ('&ZCGPR' LT '2').ZE33Q                         00270200
                  AIF   ('&ZCGPR' LE '12').ZE33R                        00270300
.ZE33Q            ANOP  ,                                               00270400
&ZMS              SETC  '"EXITRTNPARMS='                                00270500
&ZMS              SETC  '&ZMS.&EXITRTNPARMS"'                           00270600
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00270700
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00270800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00270900
.ZE33R            ANOP  ,                                               00271000
.*-------------------------------------------------------------------   00271100
.***AE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00271200
&ZTLC             SETC 'NO'                                             00271300
                  AIF   ('&IRB(1)' NE '&ZTLC').ZE38A                    00271400
&XIRB             SETC  'NO'        SET KEYWORD                         00271500
                  AIF   (N'&IRB LE 1).ZE38A     CK NUM                  00271600
&ZMS              SETC  '"IRB='                                         00271700
&ZMS              SETC  '&ZMS.&IRB"'                                    00271800
&ZMS              SETC  '&ZMS "IRB"'                                    00271900
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00272000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00272100
.ZE38A            ANOP  ,                                               00272200
.*-------------------------------------------------------------------   00272300
.***AE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00272400
&ZTLC             SETC 'YES'                                            00272500
                  AIF   ('&IRB(1)' NE '&ZTLC').ZE39A                    00272600
&XIRB             SETC  'YES'       SET KEYWORD                         00272700
                  AIF   (N'&IRB LE 1).ZE39A     CK NUM                  00272800
&ZMS              SETC  '"IRB='                                         00272900
&ZMS              SETC  '&ZMS.&IRB"'                                    00273000
&ZMS              SETC  '&ZMS "IRB"'                                    00273100
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00273200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00273300
.ZE39A            ANOP  ,                                               00273400
.*------------------------------------------------------------------    00273500
.***AE.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00273600
.ZE40             AIF   (K'&XIRB GT 0).ZE40A                            00273700
                  AIF   (K'&IRB(1) LE 0).ZE40B                          00273800
&ZMS              SETC  '"IRB='                                         00273900
&ZMS              SETC  '&ZMS.&IRB"'                                    00274000
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00274100
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00274200
&ZMS              SETC  '&ZMS "NO"'                                     00274300
&ZMS              SETC  '&ZMS OR "YES".'                                00274400
                  MNOTE 8,' &ZMS '                                      00274500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00274600
                  AGO   .ZE40B                                          00274700
.*                                                                      00274800
.ZE40A            ANOP  ,                                               00274900
&ZXIRB            SETC  'INPUT'     SET IN/OUTPUT                       00275000
.ZE40B            ANOP  ,                                               00275100
.*-------------------------------------------------------------------   00275200
.***AE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00275300
&ZTLC             SETC 'NO'                                             00275400
                  AIF   ('&INTASKTERMOK(1)' NE '&ZTLC').ZE43A           00275500
&XINTASKTERMOK    SETC  'NO'        SET KEYWORD                         00275600
                  AIF   (N'&INTASKTERMOK LE 1).ZE43A  CK NUM            00275700
&ZMS              SETC  '"INTASKTERMOK='                                00275800
&ZMS              SETC  '&ZMS.&INTASKTERMOK"'                           00275900
&ZMS              SETC  '&ZMS "INTASKTERMOK"'                           00276000
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00276100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00276200
.ZE43A            ANOP  ,                                               00276300
.*-------------------------------------------------------------------   00276400
.***AE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00276500
&ZTLC             SETC 'YES'                                            00276600
                  AIF   ('&INTASKTERMOK(1)' NE '&ZTLC').ZE44A           00276700
&XINTASKTERMOK    SETC  'YES'       SET KEYWORD                         00276800
                  AIF   (N'&INTASKTERMOK LE 1).ZE44A  CK NUM            00276900
&ZMS              SETC  '"INTASKTERMOK='                                00277000
&ZMS              SETC  '&ZMS.&INTASKTERMOK"'                           00277100
&ZMS              SETC  '&ZMS "INTASKTERMOK"'                           00277200
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00277300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00277400
.ZE44A            ANOP  ,                                               00277500
.*------------------------------------------------------------------    00277600
.***AE.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00277700
.ZE45             AIF   (K'&XINTASKTERMOK GT 0).ZE45A                   00277800
                  AIF   (K'&INTASKTERMOK(1) LE 0).ZE45B                 00277900
&ZMS              SETC  '"INTASKTERMOK='                                00278000
&ZMS              SETC  '&ZMS.&INTASKTERMOK"'                           00278100
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00278200
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00278300
&ZMS              SETC  '&ZMS "NO"'                                     00278400
&ZMS              SETC  '&ZMS OR "YES".'                                00278500
                  MNOTE 8,' &ZMS '                                      00278600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00278700
                  AGO   .ZE45B                                          00278800
.*                                                                      00278900
.ZE45A            ANOP  ,                                               00279000
&ZXINTASKTERMOK   SETC  'INPUT'     SET IN/OUTPUT                       00279100
.ZE45B            ANOP  ,                                               00279200
.*----------------------------------------------------------------***   00279300
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                          00279400
                  AIF   (N'&WORKAREA LE 1).ZE47A  CK NUM                00279500
&ZMS              SETC  '"WORKAREA='                                    00279600
&ZMS              SETC  '&ZMS.&WORKAREA"'                               00279700
&ZMS              SETC  '&ZMS "WORKAREA"'                               00279800
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00279900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00280000
.ZE47A            ANOP  ,                                               00280100
.*-------------------------------------------------------------------   00280200
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                     00280300
                  AIF   (K'&WORKAREA(1) LE 0).ZE47B NO PRM              00280400
&ZXWORKAREA       SETC  'INPUT'     SET IN/OUTPUT                       00280500
&XWORKAREA        SETC  '&WORKAREA(1)'          SET XVARIABLE           00280600
                  AIF   (N'&WORKAREA GT 1).ZE47B                        00280700
.*                ANOP                                                  00280800
&XWORKAREA        SETC  '&WORKAREA'             SET XVARIABLE           00280900
.ZE47B            ANOP  ,                                               00281000
.*-------------------------------------------------------------------   00281100
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00281200
                  AIF   (K'&ZXWORKAREA LE 0).ZE47R  NOT I/O             00281300
                  AIF   ('&XWORKAREA'(1,1) NE '(').ZE47R                00281400
&ZCGPR            SETC  '&XWORKAREA'(2,K'&XWORKAREA-2)                  00281500
                  AIF   ('&ZCGPR'(1,1) NE '0').ZE47P                    00281600
                  AIF   (K'&ZCGPR GT 2).ZE47Q                           00281700
                  AIF   ('&ZCGPR' EQ '0').ZE47Q                         00281800
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00281900
                  AIF   (T'&ZCGPR NE 'N').ZE47Q  INVALID REG NAME       00282000
.ZE47P            ANOP  ,                                               00282100
                  AIF   (T'&ZCGPR NE 'N').ZE47R  NON NUMERIC            00282200
                  AIF   ('&ZCGPR' LT '2').ZE47Q                         00282300
                  AIF   ('&ZCGPR' LE '12').ZE47R                        00282400
.ZE47Q            ANOP  ,                                               00282500
&ZMS              SETC  '"WORKAREA='                                    00282600
&ZMS              SETC  '&ZMS.&WORKAREA"'                               00282700
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00282800
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00282900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00283000
.ZE47R            ANOP  ,                                               00283100
.*----------------------------------------------------------------***   00283200
.***AE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVAR KEY                         00283300
                  AIF   (N'&RETCODE LE 1).ZE50A  CK NUM                 00283400
&ZMS              SETC  '"RETCODE='                                     00283500
&ZMS              SETC  '&ZMS.&RETCODE"'                                00283600
&ZMS              SETC  '&ZMS "RETCODE"'                                00283700
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00283800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00283900
.ZE50A            ANOP  ,                                               00284000
.*-------------------------------------------------------------------   00284100
.***AE.KXVAR04 NAME, OPT OUTPUT, KEYS -XVAR ARGUMENT                    00284200
                  AIF   (K'&RETCODE(1) LE 0).ZE50B NO PRM               00284300
&ZXRETCODE        SETC  'OUTPUT'    SET IN/OUTPUT                       00284400
&XRETCODE         SETC  '&RETCODE(1)'           SET XVARIABLE           00284500
                  AIF   (N'&RETCODE GT 1).ZE50B                         00284600
.*                ANOP                                                  00284700
&XRETCODE         SETC  '&RETCODE'  SET XVARIABLE                       00284800
.ZE50B            ANOP  ,                                               00284900
.*-------------------------------------------------------------------   00285000
.***AE.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00285100
                  AIF   (K'&ZXRETCODE LE 0).ZE50R  NOT I/O              00285200
                  AIF   ('&XRETCODE'(1,1) NE '(').ZE50R                 00285300
&ZCGPR            SETC  '&XRETCODE'(2,K'&XRETCODE-2)                    00285400
                  AIF   ('&ZCGPR'(1,1) NE '0').ZE50P                    00285500
                  AIF   (K'&ZCGPR GT 2).ZE50Q                           00285600
                  AIF   ('&ZCGPR' EQ '0').ZE50Q                         00285700
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00285800
                  AIF   (T'&ZCGPR NE 'N').ZE50Q  INVALID REG NAME       00285900
.ZE50P            ANOP  ,                                               00286000
                  AIF   (T'&ZCGPR NE 'N').ZE50R  NON NUMERIC            00286100
                  AIF   ('&ZCGPR' LT '2').ZE50Q                         00286200
                  AIF   ('&ZCGPR' LE '12').ZE50R                        00286300
.ZE50Q            ANOP  ,                                               00286400
&ZMS              SETC  '"RETCODE='                                     00286500
&ZMS              SETC  '&ZMS.&RETCODE"'                                00286600
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00286700
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00286800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00286900
.ZE50R            ANOP  ,                                               00287000
.*----------------------------------------------------------------***   00287100
.***AE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVAR KEY                         00287200
                  AIF   (N'&RSNCODE LE 1).ZE53A  CK NUM                 00287300
&ZMS              SETC  '"RSNCODE='                                     00287400
&ZMS              SETC  '&ZMS.&RSNCODE"'                                00287500
&ZMS              SETC  '&ZMS "RSNCODE"'                                00287600
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00287700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00287800
.ZE53A            ANOP  ,                                               00287900
.*-------------------------------------------------------------------   00288000
.***AE.KXVAR04 NAME, OPT OUTPUT, KEYS -XVAR ARGUMENT                    00288100
                  AIF   (K'&RSNCODE(1) LE 0).ZE53B NO PRM               00288200
&ZXRSNCODE        SETC  'OUTPUT'    SET IN/OUTPUT                       00288300
&XRSNCODE         SETC  '&RSNCODE(1)'           SET XVARIABLE           00288400
                  AIF   (N'&RSNCODE GT 1).ZE53B                         00288500
.*                ANOP                                                  00288600
&XRSNCODE         SETC  '&RSNCODE'  SET XVARIABLE                       00288700
.ZE53B            ANOP  ,                                               00288800
.*-------------------------------------------------------------------   00288900
.***AE.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00289000
                  AIF   (K'&ZXRSNCODE LE 0).ZE53R  NOT I/O              00289100
                  AIF   ('&XRSNCODE'(1,1) NE '(').ZE53R                 00289200
&ZCGPR            SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                    00289300
                  AIF   ('&ZCGPR'(1,1) NE '0').ZE53P                    00289400
                  AIF   (K'&ZCGPR GT 2).ZE53Q                           00289500
                  AIF   ('&ZCGPR' EQ '0').ZE53Q                         00289600
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00289700
                  AIF   (T'&ZCGPR NE 'N').ZE53Q  INVALID REG NAME       00289800
.ZE53P            ANOP  ,                                               00289900
                  AIF   (T'&ZCGPR NE 'N').ZE53R  NON NUMERIC            00290000
                  AIF   ('&ZCGPR' LT '2').ZE53Q                         00290100
                  AIF   ('&ZCGPR' LE '12').ZE53R                        00290200
.ZE53Q            ANOP  ,                                               00290300
&ZMS              SETC  '"RSNCODE='                                     00290400
&ZMS              SETC  '&ZMS.&RSNCODE"'                                00290500
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00290600
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00290700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00290800
.ZE53R            ANOP  ,                                               00290900
.******************************************************************     00291000
.***AF.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00291100
.******************************************************************     00291200
                  ACTR  10000                                           00291300
.*----------------------------------------------------------------***   00291400
.***AF.P02 EXTRA POSITIONALS                                            00291500
                  AIF   (N'&SYSLIST LE 0).ZELISTX  NO EXTRAS            00291600
&ZCVAL            SETC  ''          ERROR FIELD                         00291700
&ZAWRK            SETA  0           POSITIONAL NUMBER                   00291800
.ZELIST2          ANOP  ,                                               00291900
&ZAWRK            SETA  &ZAWRK+1    NEXT POSITIONAL                     00292000
                  AIF   (&ZAWRK GT N'&SYSLIST).ZELIST3  DONE            00292100
&ZCVAL            SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                 00292200
                  AGO   .ZELIST2                                        00292300
.*                                                                      00292400
.ZELIST3          ANOP  ,                                               00292500
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)   STRIP COMMA             00292600
&ZMS              SETC  'POSITIONAL ARGUMENT(S),'                       00292700
&ZMS              SETC  '&ZMS "&ZCVAL"'                                 00292800
&ZMS              SETC  '&ZMS CANNOT BE USED.'                          00292900
&ZMS              SETC  '&ZMS NO POSITIONAL ARGUMENTS'                  00293000
                  MNOTE 8,' &ZMS ARE ALLOWED.'                          00293100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00293200
.ZELISTX          ANOP  ,                                               00293300
&ZASYSLNDX        SETA  0                                               00293400
.*-------------------------------------------------------------------   00293500
.***AE.MF02 MF=(SLME)                                                   00293600
.ZEMFX            ANOP  ,           END OF PARTIAL SYNTAX CHECK         00293700
.*******************************************************************    00293800
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00293900
.*******************************************************************    00294000
                  AIF   (&ZMACRET NE 0).ZLX2    ERROR DETECTED          00294100
.*******************************************************************    00294200
.***AE.01  START OF IEAMSXMP MACRO CODE                                 00294300
.*******************************************************************    00294400
                  LCLC  &M0M0001                 NAME                   00294500
&M0M0001          SETC  '&XLABEL'                SET NAME               00294600
                  AIF   (K'&XLABEL NE 0).XLAB2                          00294700
&M0M0001          SETC  'M00M&SYSNDX'            DEFAULT NAME           00294800
.*                                                                      00294900
.XLAB2            ANOP  ,                                               00295000
                  AIF   ('&XMF' EQ 'L').XLAB3                           00295100
&M0M0001 DS    0H                             IEAMSXMP-0                00295200
.XLAB3            ANOP  ,                                               00295300
.*******************************************************************    00295400
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00295500
.*******************************************************************    00295600
              PUSH  PRINT                                               00295700
                  AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON      00295800
                  PRINT OFF         ++ PR01                             00295900
                  AGO   .ZPRNTXX                                        00296000
.ZPRINTX          PRINT ON                                              00296100
.ZPRNTXX          ANOP  ,                                               00296200
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00296300
         AIF   ('&XMF' NE 'M').NOTM                                @L1A 00296400
&ZMS     SETC  'MF=M MAY NOT BE SPECIFIED'                         @L1A 00296500
         MNOTE 8,'&ZMS'                                            @L1A 00296600
         POP   PRINT                                               @L1A 00296700
         MEXIT                                                     @L1A 00296800
.NOTM ANOP                                                         @L1A 00296900
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00297000
.********************************************************************   00297100
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00297200
.********************************************************************   00297300
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00297400
                      LCLA  &ZOPN1         INVOCATION INDEX             00297500
                      LCLC  &ZOPL(4095)    LABEL                        00297600
                      LCLC  &ZOPO(4095)    OPERATION                    00297700
                      LCLC  &ZOPV(4095)    VALUE                        00297800
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00297900
.*                                                                      00298000
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00298100
.******************************************************************     00298200
.***AL.L10 IEAMSXMP FMT=LIST MF=S!L PARAMETERS                          00298300
.******************************************************************     00298400
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00298500
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00298600
&XMFCTRL              SETC  '#Z'.'&SYSNDX'.'A'                          00298700
&XMFATTR              SETC  '0D'                                        00298800
.*                                                                      00298900
&ZOPN                 SETA  &ZOPN+1                                     00299000
&ZOPL(&ZOPN)          SETC  ' '                                         00299100
&ZOPO(&ZOPN)          SETC  'CNOP'                                      00299200
&ZOPV(&ZOPN)          SETC  '4,8'                                       00299300
&ZOPN                 SETA  &ZOPN+1                                     00299400
&ZOPL(&ZOPN)          SETC  ' '                                         00299500
&ZOPO(&ZOPN)          SETC  'BRAS'                                      00299600
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              00299700
&ZOPD(&ZOPN)          SETC  '++ IEAMSXMP ARG PARMS'                     00299800
.*                                                                      00299900
&ZOPN                 SETA  &ZOPN+1                                     00300000
&ZOPL(&ZOPN)          SETC  ' '                                         00300100
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00300200
&ZOPV(&ZOPN)          SETC  '1'                                         00300300
&ZOPD(&ZOPN)          SETC  ' '                                         00300400
.*                                                                      00300500
.ZLMFSL2              ANOP  ,                                           00300600
.*-------------------------------------------------------------------   00300700
.***AM.L00  IEAMSXMP FMT=LIST name                                      00300800
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00300900
&ZOPN                 SETA &ZOPN+1                                      00301000
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00301100
&ZOPO(&ZOPN)          SETC 'EQU'                                        00301200
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00301300
&ZOPD(&ZOPN)          SETC '++ IEAMSXMP NAME'                           00301400
.ZLMFSL2M             ANOP  ,                                           00301500
.*-------------------------------------------------------------------   00301600
.***AM.L01  IEAMSXMP FMT=LIST PARAMETERS                                00301700
&ZOPN                 SETA &ZOPN+1                                      00301800
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00301900
&ZOPO(&ZOPN)          SETC 'DS'                                         00302000
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00302100
&ZOPD(&ZOPN)          SETC '++ IEAMSXMP PARM LIST'                      00302200
.*-------------------------------------------------------------------   00302300
.***AM.L02 XVERSION XL1                                                 00302400
&ZOPN                 SETA &ZOPN+1                                      00302500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00302600
&ZOPO(&ZOPN)          SETC 'DS'                                         00302700
&ZOPV(&ZOPN)          SETC 'XL1'                                        00302800
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00302900
.*-------------------------------------------------------------------   00303000
.***AM.L03 XFLAGS BL.8                                                  00303100
&ZOPN                 SETA &ZOPN+1                                      00303200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFLAGS'                           00303300
&ZOPO(&ZOPN)          SETC 'DS'                                         00303400
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00303500
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00303600
.*                                                                      00303700
&ZOPN                 SETA  &ZOPN+1                                     00303800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XIRB_YES'                        00303900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00304000
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00304100
&ZOPD(&ZOPN)          SETC  '++ XIRB.'                                  00304200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00304300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00304400
.*                                                                      00304500
&ZOPN                 SETA  &ZOPN+1                                     00304600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XINTASKTERMOK_YES'               00304700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00304800
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00304900
&ZOPD(&ZOPN)          SETC  '++ XINTASKTERMOK.'                         00305000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00305100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00305200
.*-------------------------------------------------------------------   00305300
.***AM.L09  XRSV0001 CL1                                                00305400
&ZOPN                 SETA &ZOPN+1                                      00305500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0001'                         00305600
&ZOPO(&ZOPN)          SETC 'DS'                                         00305700
&ZOPV(&ZOPN)          SETC 'CL1'                                        00305800
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00305900
.*-------------------------------------------------------------------   00306000
.***AM.L09  XKEY0TO15 XL1                                               00306100
&ZOPN                 SETA &ZOPN+1                                      00306200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XKEY0TO15'                        00306300
&ZOPO(&ZOPN)          SETC 'DS'                                         00306400
&ZOPV(&ZOPN)          SETC 'XL1'                                        00306500
&ZOPD(&ZOPN)          SETC '++ &ZXKEY0TO15 '                            00306600
.*-------------------------------------------------------------------   00306700
.***AM.L09 ADDR XECB A                                                  00306800
&ZOPN                 SETA &ZOPN+1                                      00306900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XECB_ADDR'                        00307000
&ZOPO(&ZOPN)          SETC 'DS'                                         00307100
&ZOPV(&ZOPN)          SETC 'A'                                          00307200
&ZOPD(&ZOPN)          SETC '++ &ZXECB ADDR'                             00307300
.*-------------------------------------------------------------------   00307400
.***AM.L09  XSTOKEN CL8                                                 00307500
&ZOPN                 SETA &ZOPN+1                                      00307600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSTOKEN'                          00307700
&ZOPO(&ZOPN)          SETC 'DS'                                         00307800
&ZOPV(&ZOPN)          SETC 'CL8'                                        00307900
&ZOPD(&ZOPN)          SETC '++ &ZXSTOKEN '                              00308000
.*-------------------------------------------------------------------   00308100
.***AM.L09  XTTOKEN CL16                                                00308200
&ZOPN                 SETA &ZOPN+1                                      00308300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XTTOKEN'                          00308400
&ZOPO(&ZOPN)          SETC 'DS'                                         00308500
&ZOPV(&ZOPN)          SETC 'CL16'                                       00308600
&ZOPD(&ZOPN)          SETC '++ &ZXTTOKEN '                              00308700
.*-------------------------------------------------------------------   00308800
.***AM.L09  XPOSTCODE F                                                 00308900
&ZOPN                 SETA &ZOPN+1                                      00309000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPOSTCODE'                        00309100
&ZOPO(&ZOPN)          SETC 'DS'                                         00309200
&ZOPV(&ZOPN)          SETC 'F'                                          00309300
&ZOPD(&ZOPN)          SETC '++ &ZXPOSTCODE '                            00309400
.*-------------------------------------------------------------------   00309500
.***AM.L09  XRSV0002 CL2                                                00309600
&ZOPN                 SETA &ZOPN+1                                      00309700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0002'                         00309800
&ZOPO(&ZOPN)          SETC 'DS'                                         00309900
&ZOPV(&ZOPN)          SETC 'CL2'                                        00310000
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00310100
.*-------------------------------------------------------------------   00310200
.***AM.L09  XPURGEASID XL2                                              00310300
&ZOPN                 SETA &ZOPN+1                                      00310400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPURGEASID'                       00310500
&ZOPO(&ZOPN)          SETC 'DS'                                         00310600
&ZOPV(&ZOPN)          SETC 'XL2'                                        00310700
&ZOPD(&ZOPN)          SETC '++ &ZXPURGEASID '                           00310800
.*-------------------------------------------------------------------   00310900
.***AM.L09 ADDR XPURGETCB A                                             00311000
&ZOPN                 SETA &ZOPN+1                                      00311100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPURGETCB_ADDR'                   00311200
&ZOPO(&ZOPN)          SETC 'DS'                                         00311300
&ZOPV(&ZOPN)          SETC 'A'                                          00311400
&ZOPD(&ZOPN)          SETC '++ &ZXPURGETCB ADDR'                        00311500
.*-------------------------------------------------------------------   00311600
.***AM.L09 ADDR XEXITRTN A                                              00311700
&ZOPN                 SETA &ZOPN+1                                      00311800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XEXITRTN_ADDR'                    00311900
&ZOPO(&ZOPN)          SETC 'DS'                                         00312000
&ZOPV(&ZOPN)          SETC 'A'                                          00312100
&ZOPD(&ZOPN)          SETC '++ &ZXEXITRTN ADDR'                         00312200
.*-------------------------------------------------------------------   00312300
.***AM.L09  XEXITRTNPARMS CL16                                          00312400
&ZOPN                 SETA &ZOPN+1                                      00312500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XEXITRTNPARMS'                    00312600
&ZOPO(&ZOPN)          SETC 'DS'                                         00312700
&ZOPV(&ZOPN)          SETC 'CL16'                                       00312800
&ZOPD(&ZOPN)          SETC '++ &ZXEXITRTNPARMS '                        00312900
.*-------------------------------------------------------------------   00313000
.***AM.L10 END OF IEAMSXMP LIST PARAMETERS                              00313100
&ZOPN                 SETA &ZOPN+1                                      00313200
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00313300
&ZOPO(&ZOPN)          SETC 'EQU'                                        00313400
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00313500
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00313600
.*                                                                      00313700
&ZOPN                 SETA &ZOPN+1                                      00313800
&ZOPL(&ZOPN)          SETC ' '                                          00313900
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00314000
&ZOPV(&ZOPN)          SETC '1'                                          00314100
&ZOPD(&ZOPN)          SETC ' '                                          00314200
.*-------------------------------------------------------------------   00314300
.***AL.L12 IEAMSXMP FMT=LIST MF=S!L PARAMETERS                          00314400
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00314500
.*                                                                      00314600
&ZOPN                 SETA  &ZOPN+1                                     00314700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00314800
&ZOPO(&ZOPN)          SETC  'DC'                                        00314900
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00315000
&ZOPD(&ZOPN)          SETC  '++ IEAMSXMP ARG PARMS'                     00315100
.*                                                                      00315200
.ZLMFSLX              ANOP  ,                                           00315300
.*-------------------------------------------------------------------   00315400
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00315500
&ZPLLEN               SETA 64                                           00315600
.*                                                                      00315700
.******************************************************************     00315800
.***AI.L01 IEAMSXMP FMT=LIST FILL IN PARAMETER AREA                     00315900
.******************************************************************     00316000
                      ACTR  10000                                       00316100
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00316200
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00316300
&ZCVAL                SETC  'LAE'          XAX MODE                     00316400
.ZIMFXA               ANOP ,                                            00316500
.*                                                                      00316600
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00316700
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00316800
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00316900
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00317000
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00317100
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00317200
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00317300
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00317400
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00317500
&ZOPN                 SETA  &ZOPN+1                                     00317600
&ZOPL(&ZOPN)          SETC  ' '                                         00317700
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00317800
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00317900
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00318000
                      AGO   .ZIMFNX                                     00318100
.*                                                                      00318200
.ZIMFN2               ANOP ,                                            00318300
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     00318400
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  00318500
&ZOPN                 SETA  &ZOPN+1                                     00318600
&ZOPL(&ZOPN)          SETC  ' '                                         00318700
&ZOPO(&ZOPN)          SETC  'LAE'                                       00318800
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  00318900
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00319000
                      AGO   .ZIMFNX                                     00319100
.ZIMFNX1              ANOP ,                                            00319200
&ZOPN                 SETA  &ZOPN+1                                     00319300
&ZOPL(&ZOPN)          SETC  ' '                                         00319400
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00319500
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00319600
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00319700
.ZIMFNX               ANOP ,                                            00319800
.********************************************************************   00319900
.***AI.L02 IEAMSXMP FMT=LIST INITIALIZE PARAMETER AREA                  00320000
.********************************************************************   00320100
.***AI.L03 MF=(SLME)                                                    00320200
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00320300
                      AIF   ('&XMFSCK' NE 'COMPLETE').ZIMFLX            00320400
.*                                                                      00320500
&ZOPN                 SETA  &ZOPN+1                                     00320600
&ZOPL(&ZOPN)          SETC  ' '                                         00320700
&ZOPO(&ZOPN)          SETC  'XC'                                        00320800
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00320900
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00321000
.ZIMFLX               ANOP  ,                                           00321100
.*-------------------------------------------------------------------   00321200
.***AI.L05 XFLAGS BL1                                                   00321300
&ZW                   SETC  ''                                          00321400
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00321500
&ZMS                  SETC  ''                                          00321600
&ZC                   SETC  ''                                          00321700
.*-------------------------------------------------------------------   00321800
.***AI.L08 XFLAGS "YES"                                                 00321900
.***      BL1'1XXXXXXX'                                                 00322000
         AIF   ('&XIRB' NE 'YES').ZI3A                                  00322100
&ZW                   SETC  '&ZW.1'                                     00322200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00322300
&ZMS                  SETC  '&ZMS.1'                                    00322400
                      AGO   .ZI3C                                       00322500
.*                                                                      00322600
.ZI3A                 ANOP  ,                                           00322700
&ZW                   SETC  '&ZW.0'                                     00322800
         AIF   ('&ZXIRB' EQ '').ZI3B                                    00322900
&ZMS                  SETC  '&ZMS.0'                                    00323000
&ZC                   SETC  'YES'          SET BIT OFF FLAG             00323100
                      AGO   .ZI3C                                       00323200
.*                                                                      00323300
.ZI3B                 ANOP  ,                                           00323400
&ZMS                  SETC  '&ZMS.1'                                    00323500
.ZI3C                 ANOP  ,                                           00323600
.*-------------------------------------------------------------------   00323700
.***AI.L08 XFLAGS "YES"                                                 00323800
.***      BL1'X1XXXXXX'                                                 00323900
         AIF   ('&XINTASKTERMOK' NE 'YES').ZI4A                         00324000
&ZW                   SETC  '&ZW.1000000'                               00324100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00324200
&ZMS                  SETC  '&ZMS.1111111'                              00324300
                      AGO   .ZI4C                                       00324400
.*                                                                      00324500
.ZI4A                 ANOP  ,                                           00324600
&ZW                   SETC  '&ZW.0000000'                               00324700
         AIF   ('&ZXINTASKTERMOK' EQ '').ZI4B                           00324800
&ZMS                  SETC  '&ZMS.0111111'                              00324900
&ZC                   SETC  'YES'          SET BIT OFF FLAG             00325000
                      AGO   .ZI4C                                       00325100
.*                                                                      00325200
.ZI4B                 ANOP  ,                                           00325300
&ZMS                  SETC  '&ZMS.1111111'                              00325400
.ZI4C                 ANOP  ,                                           00325500
.*-------------------------------------------------------------------   00325600
.***AI.L11 XFLAGS BL1                                                   00325700
                      AIF   ('&XMFSCK' NE 'NOCHECK').ZI4D               00325800
                      AIF   ('&ZC' NE 'YES').ZI4D                       00325900
&ZOPN                 SETA  &ZOPN+1                                     00326000
&ZOPL(&ZOPN)          SETC  ' '                                         00326100
&ZOPO(&ZOPN)          SETC  'NI'                                        00326200
&ZOPV(&ZOPN)          SETC  '1(1),B''&ZMS'''                            00326300
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00326400
.ZI4D                 ANOP  ,                                           00326500
                      AIF   ('&ZCLNG' NE 'YES').ZI4E  ALL ZERO BITS     00326600
&ZOPN                 SETA  &ZOPN+1                                     00326700
&ZOPL(&ZOPN)          SETC  ' '                                         00326800
&ZOPO(&ZOPN)          SETC  'OI'                                        00326900
&ZOPV(&ZOPN)          SETC  '1(1),B''&ZW'''                             00327000
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00327100
.ZI4E                 ANOP  ,                                           00327200
.*-------------------------------------------------------------------   00327300
.***AI.L25  XKEY0TO15 XL1                                               00327400
                      AIF   ('&ZXKEY0TO15' EQ '').ZI6E                  00327500
                      AIF   ('&ZXKEY0TO15' EQ 'OUTPUT').ZI6E            00327600
&ZCGPR                SETC  '&XKEY0TO15'                                00327700
.*                                                                      00327800
                      AIF   ('&XKEY0TO15'(1,1) NE '(').ZI6B             00327900
&ZCGPR   SETC  '0('.'&XKEY0TO15'(2,K'&XKEY0TO15-2).')'                  00328000
                      AGO   .ZI6D                                       00328100
.ZI6B                 ANOP  ,                                           00328200
.*                                                                      00328300
&ZC                   SETC  '&XKEY0TO15'(1,1)                           00328400
                      AIF   (T'&ZC NE 'N').ZI6D                         00328500
&ZC                   SETC  '&XKEY0TO15'                                00328600
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI6D                00328700
&ZCGPR                SETC  '=AL1(&XKEY0TO15)'                          00328800
.*                                                                      00328900
.ZI6D                 ANOP  ,                                           00329000
.*                                                                      00329100
&ZOPN                 SETA  &ZOPN+1                                     00329200
&ZOPL(&ZOPN)          SETC  ' '                                         00329300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00329400
&ZOPV(&ZOPN)          SETC  '3(1,1),&ZCGPR'                             00329500
&ZOPD(&ZOPN)          SETC  '++ &ZXKEY0TO15 XKEY0TO15'                  00329600
.*                                                                      00329700
.ZI6E                 ANOP  ,                                           00329800
.*-------------------------------------------------------------------   00329900
.***AI.L19 ADDR XECB A                                                  00330000
                      AIF   ('&ZXECB' EQ '').ZI7H                       00330100
&ZCLNG                SETC  '&XECB'                                     00330200
&ZCGPR                SETC  '14'                                        00330300
         AIF   ('&XECB'(1,1) EQ '(').ZI7F  IN GPR                       00330400
.*                                                                      00330500
&ZOPN                 SETA  &ZOPN+1                                     00330600
&ZOPL(&ZOPN)          SETC  ' '                                         00330700
&ZOPO(&ZOPN)          SETC  'LA'                                        00330800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00330900
&ZOPD(&ZOPN)          SETC  '++ &ZXECB XECB'                            00331000
.*                                                                      00331100
                      AGO   .ZI7G                                       00331200
.*                                                                      00331300
.ZI7F                 ANOP  ,                                           00331400
&ZCGPR   SETC  '&XECB'(2,K'&XECB-2)                                     00331500
.*                                                                      00331600
.ZI7G                 ANOP  ,                                           00331700
.*                                                                      00331800
&ZOPN                 SETA  &ZOPN+1                                     00331900
&ZOPL(&ZOPN)          SETC  ' '                                         00332000
&ZOPO(&ZOPN)          SETC  'ST'                                        00332100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4(,1)'                              00332200
&ZOPD(&ZOPN)          SETC  '++ &ZXECB XECB'                            00332300
.*                                                                      00332400
.ZI7H                 ANOP  ,                                           00332500
.*-------------------------------------------------------------------   00332600
.***AI.L18  XSTOKEN CL8                                                 00332700
         AIF   ('&XSTOKEN' NE 'FROM_TTOKEN').ZI8                        00332800
                      AIF   ('&XMFSCK' NE 'COMPLETE').ZI8  CK *         00332900
&ZXSTOKEN             SETC  ''             RESET INPUT/OUTPUT           00333000
.ZI8                  ANOP  ,                                           00333100
.*-------------------------------------------------------------------   00333200
.***AI.L25  XSTOKEN CL8                                                 00333300
                      AIF   ('&ZXSTOKEN' EQ '').ZI8E                    00333400
                      AIF   ('&ZXSTOKEN' EQ 'OUTPUT').ZI8E              00333500
&ZCGPR                SETC  '&XSTOKEN'                                  00333600
         AIF   ('&XSTOKEN' NE 'FROM_TTOKEN').ZI8A                       00333700
         AIF   ('&XMFSCK' EQ 'COMPLETE').ZI8E                           00333800
.*                                                                      00333900
&ZCGPR                SETC  '=XL8''00'''                                00334000
.ZI8A                 ANOP  ,                                           00334100
.*                                                                      00334200
                      AIF   ('&XSTOKEN'(1,1) NE '(').ZI8B               00334300
&ZCGPR   SETC  '0('.'&XSTOKEN'(2,K'&XSTOKEN-2).')'                      00334400
.ZI8B                 ANOP  ,                                           00334500
.*                                                                      00334600
&ZOPN                 SETA  &ZOPN+1                                     00334700
&ZOPL(&ZOPN)          SETC  ' '                                         00334800
&ZOPO(&ZOPN)          SETC  'MVC'                                       00334900
&ZOPV(&ZOPN)          SETC  '8(8,1),&ZCGPR'                             00335000
&ZOPD(&ZOPN)          SETC  '++ &ZXSTOKEN XSTOKEN'                      00335100
.*                                                                      00335200
.ZI8E                 ANOP  ,                                           00335300
.*-------------------------------------------------------------------   00335400
.***AI.L25  XTTOKEN CL16                                                00335500
                      AIF   ('&ZXTTOKEN' EQ '').ZI9E                    00335600
                      AIF   ('&ZXTTOKEN' EQ 'OUTPUT').ZI9E              00335700
&ZCGPR                SETC  '&XTTOKEN'                                  00335800
.*                                                                      00335900
                      AIF   ('&XTTOKEN'(1,1) NE '(').ZI9B               00336000
&ZCGPR   SETC  '0('.'&XTTOKEN'(2,K'&XTTOKEN-2).')'                      00336100
.ZI9B                 ANOP  ,                                           00336200
.*                                                                      00336300
&ZOPN                 SETA  &ZOPN+1                                     00336400
&ZOPL(&ZOPN)          SETC  ' '                                         00336500
&ZOPO(&ZOPN)          SETC  'MVC'                                       00336600
&ZOPV(&ZOPN)          SETC  '16(16,1),&ZCGPR'                           00336700
&ZOPD(&ZOPN)          SETC  '++ &ZXTTOKEN XTTOKEN'                      00336800
.*                                                                      00336900
.ZI9E                 ANOP  ,                                           00337000
.*-------------------------------------------------------------------   00337100
.***AI.L18  XPOSTCODE F                                                 00337200
         AIF   ('&XPOSTCODE' NE '0').ZI10                               00337300
                      AIF   ('&XMFSCK' NE 'COMPLETE').ZI10  CK *        00337400
&ZXPOSTCODE           SETC  ''             RESET INPUT/OUTPUT           00337500
.ZI10                 ANOP  ,                                           00337600
.*-------------------------------------------------------------------   00337700
.***AI.L25  XPOSTCODE F                                                 00337800
                      AIF   ('&ZXPOSTCODE' EQ '').ZI10E                 00337900
                      AIF   ('&ZXPOSTCODE' EQ 'OUTPUT').ZI10E           00338000
&ZCGPR                SETC  '&XPOSTCODE'                                00338100
         AIF   ('&XPOSTCODE' NE '0').ZI10A                              00338200
         AIF   ('&XMFSCK' EQ 'COMPLETE').ZI10E                          00338300
.*                                                                      00338400
&ZCGPR                SETC  '=XL4''00'''                                00338500
.ZI10A                ANOP  ,                                           00338600
.*                                                                      00338700
                      AIF   ('&XPOSTCODE'(1,1) NE '(').ZI10B            00338800
&ZCGPR   SETC  '0('.'&XPOSTCODE'(2,K'&XPOSTCODE-2).')'                  00338900
                      AGO   .ZI10D                                      00339000
.ZI10B                ANOP  ,                                           00339100
.*                                                                      00339200
&ZC                   SETC  '&XPOSTCODE'(1,1)                           00339300
                      AIF   (T'&ZC NE 'N').ZI10D                        00339400
&ZC                   SETC  '&XPOSTCODE'                                00339500
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI10D               00339600
&ZCGPR                SETC  '=FL4''&XPOSTCODE'''                        00339700
.*                                                                      00339800
.ZI10D                ANOP  ,                                           00339900
.*                                                                      00340000
&ZOPN                 SETA  &ZOPN+1                                     00340100
&ZOPL(&ZOPN)          SETC  ' '                                         00340200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00340300
&ZOPV(&ZOPN)          SETC  '32(4,1),&ZCGPR'                            00340400
&ZOPD(&ZOPN)          SETC  '++ &ZXPOSTCODE XPOSTCODE'                  00340500
.*                                                                      00340600
.ZI10E                ANOP  ,                                           00340700
.*-------------------------------------------------------------------   00340800
.***AI.L18  XPURGEASID XL2                                              00340900
         AIF   ('&XPURGEASID' NE 'NO_PURGEASID').ZI12                   00341000
                      AIF   ('&XMFSCK' NE 'COMPLETE').ZI12  CK *        00341100
&ZXPURGEASID          SETC  ''             RESET INPUT/OUTPUT           00341200
.ZI12                 ANOP  ,                                           00341300
.*-------------------------------------------------------------------   00341400
.***AI.L25  XPURGEASID XL2                                              00341500
                      AIF   ('&ZXPURGEASID' EQ '').ZI12E                00341600
                      AIF   ('&ZXPURGEASID' EQ 'OUTPUT').ZI12E          00341700
&ZCGPR                SETC  '&XPURGEASID'                               00341800
         AIF   ('&XPURGEASID' NE 'NO_PURGEASID').ZI12A                  00341900
         AIF   ('&XMFSCK' EQ 'COMPLETE').ZI12E                          00342000
.*                                                                      00342100
&ZCGPR                SETC  '=XL2''00'''                                00342200
.ZI12A                ANOP  ,                                           00342300
.*                                                                      00342400
                      AIF   ('&XPURGEASID'(1,1) NE '(').ZI12B           00342500
&ZCGPR   SETC  '0('.'&XPURGEASID'(2,K'&XPURGEASID-2).')'                00342600
                      AGO   .ZI12D                                      00342700
.ZI12B                ANOP  ,                                           00342800
.*                                                                      00342900
&ZC                   SETC  '&XPURGEASID'(1,1)                          00343000
                      AIF   (T'&ZC NE 'N').ZI12D                        00343100
&ZC                   SETC  '&XPURGEASID'                               00343200
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI12D               00343300
&ZCGPR                SETC  '=FL2''&XPURGEASID'''                       00343400
.*                                                                      00343500
.ZI12D                ANOP  ,                                           00343600
.*                                                                      00343700
&ZOPN                 SETA  &ZOPN+1                                     00343800
&ZOPL(&ZOPN)          SETC  ' '                                         00343900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00344000
&ZOPV(&ZOPN)          SETC  '38(2,1),&ZCGPR'                            00344100
&ZOPD(&ZOPN)          SETC  '++ &ZXPURGEASID XPURGEASID'                00344200
.*                                                                      00344300
.ZI12E                ANOP  ,                                           00344400
.*-------------------------------------------------------------------   00344500
.***AI.L18 ADDR XPURGETCB A                                             00344600
         AIF   ('&XPURGETCB' NE 'NO_PURGETCB').ZI13                     00344700
                      AIF   ('&XMFSCK' NE 'COMPLETE').ZI13  CK *        00344800
&ZXPURGETCB           SETC  ''             RESET INPUT/OUTPUT           00344900
.ZI13                 ANOP  ,                                           00345000
.*-------------------------------------------------------------------   00345100
.***AI.L19 ADDR XPURGETCB A                                             00345200
                      AIF   ('&ZXPURGETCB' EQ '').ZI13H                 00345300
&ZCLNG                SETC  '&XPURGETCB'                                00345400
&ZCGPR                SETC  '14'                                        00345500
         AIF   ('&XPURGETCB'(1,1) EQ '(').ZI13F  IN GPR                 00345600
        AIF   ('&XPURGETCB' NE 'NO_PURGETCB').ZI13A                     00345700
                      AIF   ('&XMFSCK' EQ 'COMPLETE').ZI13H             00345800
.*                                                                      00345900
&ZCLNG                SETC  '=XL4''00'''                                00346000
.ZI13A                ANOP  ,                                           00346100
.*                                                                      00346200
&ZOPN                 SETA  &ZOPN+1                                     00346300
&ZOPL(&ZOPN)          SETC  ' '                                         00346400
&ZOPO(&ZOPN)          SETC  'LA'                                        00346500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00346600
&ZOPD(&ZOPN)          SETC  '++ &ZXPURGETCB XPURGETCB'                  00346700
.*                                                                      00346800
                      AGO   .ZI13G                                      00346900
.*                                                                      00347000
.ZI13F                ANOP  ,                                           00347100
&ZCGPR   SETC  '&XPURGETCB'(2,K'&XPURGETCB-2)                           00347200
.*                                                                      00347300
.ZI13G                ANOP  ,                                           00347400
.*                                                                      00347500
&ZOPN                 SETA  &ZOPN+1                                     00347600
&ZOPL(&ZOPN)          SETC  ' '                                         00347700
&ZOPO(&ZOPN)          SETC  'ST'                                        00347800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,40(,1)'                             00347900
&ZOPD(&ZOPN)          SETC  '++ &ZXPURGETCB XPURGETCB'                  00348000
.*                                                                      00348100
.ZI13H                ANOP  ,                                           00348200
.*-------------------------------------------------------------------   00348300
.***AI.L18 ADDR XEXITRTN A                                              00348400
         AIF   ('&XEXITRTN' NE 'NO_EXIT').ZI14                          00348500
                      AIF   ('&XMFSCK' NE 'COMPLETE').ZI14  CK *        00348600
&ZXEXITRTN            SETC  ''             RESET INPUT/OUTPUT           00348700
.ZI14                 ANOP  ,                                           00348800
.*-------------------------------------------------------------------   00348900
.***AI.L19 ADDR XEXITRTN A                                              00349000
                      AIF   ('&ZXEXITRTN' EQ '').ZI14H                  00349100
&ZCLNG                SETC  '&XEXITRTN'                                 00349200
&ZCGPR                SETC  '14'                                        00349300
         AIF   ('&XEXITRTN'(1,1) EQ '(').ZI14F  IN GPR                  00349400
        AIF   ('&XEXITRTN' NE 'NO_EXIT').ZI14A                          00349500
                      AIF   ('&XMFSCK' EQ 'COMPLETE').ZI14H             00349600
.*                                                                      00349700
&ZCLNG                SETC  '=XL4''00'''                                00349800
.ZI14A                ANOP  ,                                           00349900
.*                                                                      00350000
&ZOPN                 SETA  &ZOPN+1                                     00350100
&ZOPL(&ZOPN)          SETC  ' '                                         00350200
&ZOPO(&ZOPN)          SETC  'LA'                                        00350300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00350400
&ZOPD(&ZOPN)          SETC  '++ &ZXEXITRTN XEXITRTN'                    00350500
.*                                                                      00350600
                      AGO   .ZI14G                                      00350700
.*                                                                      00350800
.ZI14F                ANOP  ,                                           00350900
&ZCGPR   SETC  '&XEXITRTN'(2,K'&XEXITRTN-2)                             00351000
.*                                                                      00351100
.ZI14G                ANOP  ,                                           00351200
.*                                                                      00351300
&ZOPN                 SETA  &ZOPN+1                                     00351400
&ZOPL(&ZOPN)          SETC  ' '                                         00351500
&ZOPO(&ZOPN)          SETC  'ST'                                        00351600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,44(,1)'                             00351700
&ZOPD(&ZOPN)          SETC  '++ &ZXEXITRTN XEXITRTN'                    00351800
.*                                                                      00351900
.ZI14H                ANOP  ,                                           00352000
.*-------------------------------------------------------------------   00352100
.***AI.L18  XEXITRTNPARMS CL16                                          00352200
         AIF   ('&XEXITRTNPARMS' NE 'NO_EXITRTNPARMS').ZI15             00352300
                      AIF   ('&XMFSCK' NE 'COMPLETE').ZI15  CK *        00352400
&ZXEXITRTNPARMS       SETC  ''             RESET INPUT/OUTPUT           00352500
.ZI15                 ANOP  ,                                           00352600
.*-------------------------------------------------------------------   00352700
.***AI.L25  XEXITRTNPARMS CL16                                          00352800
                      AIF   ('&ZXEXITRTNPARMS' EQ '').ZI15E             00352900
                      AIF   ('&ZXEXITRTNPARMS' EQ 'OUTPUT').ZI15E       00353000
&ZCGPR                SETC  '&XEXITRTNPARMS'                            00353100
         AIF   ('&XEXITRTNPARMS' NE 'NO_EXITRTNPARMS').ZI15A            00353200
         AIF   ('&XMFSCK' EQ 'COMPLETE').ZI15E                          00353300
.*                                                                      00353400
&ZCGPR                SETC  '=XL16''00'''                               00353500
.ZI15A                ANOP  ,                                           00353600
.*                                                                      00353700
                      AIF   ('&XEXITRTNPARMS'(1,1) NE '(').ZI15B        00353800
&ZCGPR   SETC  '0('.'&XEXITRTNPARMS'(2,K'&XEXITRTNPARMS-2).')'          00353900
.ZI15B                ANOP  ,                                           00354000
.*                                                                      00354100
&ZOPN                 SETA  &ZOPN+1                                     00354200
&ZOPL(&ZOPN)          SETC  ' '                                         00354300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00354400
&ZOPV(&ZOPN)          SETC  '48(16,1),&ZCGPR'                           00354500
&ZOPD(&ZOPN)          SETC  '++ &ZXEXITRTNPARMS XEXITRTNPARMS'          00354600
.*                                                                      00354700
.ZI15E                ANOP  ,                                           00354800
.*-------------------------------------------------------------------   00354900
&ZOPN1                SETA &ZOPN                                        00355000
.*-------------------------------------------------------------------   00355100
.***AI.C00 MF=M CHECK TO BYPASS INVOCATION                              00355200
                      AIF   ('&XMF' EQ 'M').ZMFLX  DONE IF MF=M         00355300
.*******************************************************************    00355400
.***  PROCESS IEAMSXMP OUTPUT PARAMETERS                                00355500
.*******************************************************************    00355600
                      ACTR  10000                                       00355700
.*******************************************************************    00355800
.***AO.X02  RETURN CODE PROCESSING                                      00355900
.*******************************************************************    00356000
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00356100
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00356200
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00356300
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00356400
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00356500
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00356600
&ZOPN                 SETA  &ZOPN+1                                     00356700
&ZOPL(&ZOPN)          SETC  ' '                                         00356800
&ZOPO(&ZOPN)          SETC  'ST'                                        00356900
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00357000
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00357100
                      AGO   .ZMRETX                                     00357200
.*                                                                      00357300
.ZMRET2               ANOP  ,                                           00357400
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00357500
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00357600
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00357700
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00357800
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00357900
&ZOPN                 SETA  &ZOPN+1                                     00358000
&ZOPL(&ZOPN)          SETC  ' '                                         00358100
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00358200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00358300
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00358400
.ZMRETX               ANOP  ,                                           00358500
.*******************************************************************    00358600
.***AO.X03  REASON CODE PROCESSING                                      00358700
.*******************************************************************    00358800
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00358900
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00359000
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00359100
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00359200
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00359300
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00359400
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00359500
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00359600
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00359700
&ZOPN                 SETA  &ZOPN+1                                     00359800
&ZOPL(&ZOPN)          SETC  ' '                                         00359900
&ZOPO(&ZOPN)          SETC  'ST'                                        00360000
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00360100
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00360200
                      AGO   .ZMRSNX                                     00360300
.*                                                                      00360400
.ZMRSN2               ANOP  ,                                           00360500
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00360600
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00360700
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00360800
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00360900
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00361000
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00361100
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00361200
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00361300
&ZOPN                 SETA  &ZOPN+1                                     00361400
&ZOPL(&ZOPN)          SETC  ' '                                         00361500
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00361600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00361700
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00361800
.ZMRSNX               ANOP  ,                                           00361900
.*******************************************************************    00362000
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00362100
.*******************************************************************    00362200
.ZMFLX                ANOP  ,              MF=L PROCESSING              00362300
.*******************************************************************    00362400
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00362500
.*******************************************************************    00362600
                      ACTR  10000                                       00362700
.*                                                                      00362800
                      LCLA  &ZLC           COLUMN POSITION              00362900
                      LCLA  &ZOPX          LIST TABLE INDEX             00363000
                      LCLC  &ZLL           LABEL                        00363100
                      LCLC  &ZLOP          OPERATION                    00363200
                      LCLC  &ZLV           VALUE                        00363300
                      LCLC  &ZLD           DESCRIPTION                  00363400
.*                                                                      00363500
&ZOPX                 SETA  1                                           00363600
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00363700
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00363800
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00363900
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00364000
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00364100
                      AIF   (K'&ZLD LE 0).ZL5                           00364200
&ZLC                  SETA  35             COMMENT COLUMN               00364300
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00364400
&ZLC                  SETA  33             COMMMENT COLUMN              00364500
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00364600
&ZLV                  SETC  '&ZLV'.' '                                  00364700
                      AGO   .ZL3                                        00364800
.*                                                                      00364900
.ZL4                  ANOP  ,                                           00365000
&ZLV                  SETC  '&ZLV'.' '                                  00365100
.ZL5                  ANOP  ,                                           00365200
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00365300
.*                                                                      00365400
&ZLL     &ZLOP &ZLV                                                     00365500
.*                                                                      00365600
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00365700
                      AGO   .ZL2           CONTINUE LOOPING             00365800
.*                                                                      00365900
.ZLX                  ANOP  ,                                           00366000
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00366100
                      AIF   ('&XMF' EQ 'M').ZLINKX  MF=M                00366200
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00366300
         AIF   ('&XWORKAREA'(1,1) EQ '(').InReg                         00366400
         LA    0,&XWORKAREA                                             00366500
         AGO   .DoneWA                                                  00366600
.InReg   ANOP                                                           00366700
         LR    0,&XWORKAREA                                             00366800
.DoneWA  ANOP                                                           00366900
         LG    15,X'7A0'(0,0)       Get ECVT address                    00367000
         L     15,X'114'(15,0)      IEAVSXMP address                    00367100
         BASSM 14,15                Branch to AMODE 31 target           00367200
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00367300
.ZLINKX               ANOP  ,                                           00367400
.*******************************************************************    00367500
.***AP.X01  FORMAT GENERATED CODE                                       00367600
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00367700
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00367800
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00367900
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00368000
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00368100
                      AIF   (K'&ZLD LE 0).ZL51                          00368200
&ZLC                  SETA  35             COMMENT COLUMN               00368300
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00368400
&ZLC                  SETA  33             COMMENT COLUMN               00368500
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00368600
&ZLV                  SETC  '&ZLV'.' '                                  00368700
                      AGO   .ZL31                                       00368800
.*                                                                      00368900
.ZL41                 ANOP  ,                                           00369000
&ZLV                  SETC  '&ZLV'.' '                                  00369100
.ZL51                 ANOP  ,                                           00369200
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00369300
.*                                                                      00369400
&ZLL     &ZLOP &ZLV                                                     00369500
.*                                                                      00369600
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00369700
                      AGO   .ZL21          CONTINUE LOOPING             00369800
.*                                                                      00369900
.ZLX1                 ANOP  ,                                           00370000
.*******************************************************************    00370100
.***AP.X02  END OF IEAMSXMP MACRO                                       00370200
&ZIEAMSXMP            SETC  'YES'          SET IEAMSXMP USED            00370300
         POP   PRINT                                                    00370400
*                                            IEAMSXMP-0                 00370500
         SPACE 1                                                        00370600
.ZLX2                 ANOP  ,                                           00370700
         MEND                                                           00370800
**********************************************************************/ 00370900
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00371000
*%IEAMSXMP: MACRO KEYS(ECB,POSTCODE,TTOKENTYPE,TTOKEN,STOKEN,KEY0TO15,  00371100
*                 PURGEASID,PURGETCB,EXITRTN,EXITRTNPARMS,IRB,          00371200
*                 INTASKTERMOK,WORKAREA,RETCODE,RSNCODE,PLISTVER,MF);   00371300
*  ANS('?'!!MACLABEL!!' '!!'IEAMSXPP '!!MACLIST!!                       00371400
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              00371500
*%END IEAMSXMP;                                                         00371600
