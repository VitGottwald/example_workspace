         MACRO                                                                  
         IST6MCUP &CONMODE=,&OPTCD=,&ECB=,&EXIT=,&BRANCH=,&CKCMODE=,   X        
               &CKSYN=,&CKBUFF=,&CONXMOD=                          @I1C         
.*                                                                              
.* /***** START OF SPECIFICATIONS ************************************/         
.* /*                                                                */         
.* /*  MACRO NAME: IST6MCUP                                          */         
.* /*                                                                */         
.* /*  DESCRIPTIVE NAME: COMMON PARAMETER PROCESSOR                  */         
.* /*                                                                */         
.* /*  COPYRIGHT: LICENSED MATERIALS - PROPERTY OF IBM               */         
.* /*                                                                */         
.* /*             THIS PRODUCT CONTAINS "RESTRICTED MATERIALS OF IBM"*/         
.* /*                                                                */         
.* /*             5655-127 (C) COPYRIGHT IBM CORP. 1987, 1996.       */         
.* /*             ALL RIGHTS RESERVED.                               */         
.* /*                                                                */         
.* /*             U.S. GOVERNMENT USERS RESTRICTED RIGHTS -          */         
.* /*             USE, DUPLICATION OR DISCLOSURE RESTRICTED BY       */         
.* /*             GSA ADP SCHEDULE CONTRACT WITH IBM CORP.           */         
.* /*                                                                */         
.* /*             SEE COPYRIGHT INSTRUCTIONS.                        */         
.* /*                                                                */         
.* /*                                                                */         
.* /*  FUNCTION:                                                     */         
.* /*      GENERATES IN-LINE CODE FOR PARAMETERS WHICH ARE COMMONLY  */         
.* /*      USED IN 'CONTROL=' INNER MACROS. THESE PARAMETERS ARE     */         
.* /*      OPTCD, CONMODE, CONXMOD, ECB, EXIT AND BRANCH.            */         
.* /*                                                                */         
.* /*  NOTES:                                                        */         
.* /*     CKCMODE -- YES/NO                                          */         
.* /*        TO INDICATE WHETHER TO CHECK CONMODE & CONXMOD KEYWORDS */         
.* /*     CKSYN -- YES/NO                                            */         
.* /*        TO INDICATE WHETHER SYN/ASY IS VALID OPTCD VALUE        */         
.* /*        OR NOT, ALSO CONTROLS KEEPSRB/NKEEPSRB OPTCD CHECKS @U2C*/         
.* /*     CKBUFF -- XBUF/OBUF/BBUF/YES/NO                            */         
.* /*        TO INDICATE WHETHER XBUFLST/BUFFLST/NBUFFLST ARE        */         
.* /*        VALID OPTCD VALUES AS SHOWN BELOW:                      */         
.* /*                                                                */         
.* /*               OPTCD=BUFFLST  XBUFLST  NBUFFLST                 */         
.* /*                    +--------+--------+--------+                */         
.* /*        CKBUFF=XBUF ! VALID  ! VALID  ! VALID  !                */         
.* /*                    +--------+--------+--------+                */         
.* /*               OBUF ! ERROR  ! VALID  ! VALID  !                */         
.* /*                    +--------+--------+--------+                */         
.* /*               BBUF ! VALID  ! VALID  ! ERROR  !                */         
.* /*                    +--------+--------+--------+                */         
.* /*               YES  ! VALID  ! ERROR  ! VALID  !                */         
.* /*                    +--------+--------+--------+                */         
.* /*               NO   ! ERROR  ! ERROR  ! ERROR  !                */         
.* /*                    +--------+--------+--------+                */         
.* /*                                                                */         
.* /*  PROCESSOR: ASSEMBLER                                          */         
.* /*                                                                */         
.* /*  CREATED BY:                                                   */         
.* /*                                                                */         
.* /*  INTERNAL MACROS: IST6MCER                                     */         
.* /*                                                                */         
.* /*  EXTERNAL REFERENCES: NONE                                     */         
.* /*                                                                */         
.* /*  CHANGE ACTIVITY:                                              */         
.* /*                                                                */         
.* /* $MAC(IST6MCUP),COMP(API),PROD(VTAM): COMMON PARAMTER PROCESSOR */         
.* /*                                                                */         
.* /* FLAG REASON   RELEASE DATE   ORIGIN  FLAG DESCRIPTORS          */         
.* /* ---- -------- ------- ------ ------  ----------------          */         
.* /* $BB= ACC@@AMS HVT3401 891025 615520: PL/AS CONVERSION          */         
.* /* $I1= FF@@@MST APPCFDX 911118 879315: APPC Full-Duplex support  */         
.* /* $U2= P109285  KEEPFRR 931104 879315: Implement FZKDR001, allow */         
.* /*                                      OPTCD=KEEPSRB/NKEEPSRB    */         
.* /* $D1= ID@@@MST FPAPI   941005 510689: Fast Path API for APPC    */         
.* /* $Y1= P116831  FREEDOM 941026 879315: Fix ACTR error message    */         
.* /* $D2= IA@@@MST V51APPC 941213 226653: APPC ENHANCEMENTS         */         
.* /* $S1= P119840  FPAPI   950921 879315: Skip setting after error  */         
.* /*                                                                */         
.* /***** END OF SPECIFICATIONS **************************************/         
.*                                                                              
.* A-000000-999999                                             @R495810         
.*                                                                              
         GBLB  &ISTGEN                                                          
         GBLB  &ISTUP                                                           
         LCLA  &NUM                                                             
         LCLB  &SYN,&ASY,&BUF,&NBUF,&XBUF                                       
         LCLB  &KPSRB,&NKPSRB                                      @U2A         
&SYN     SETB  0                                                                
&ASY     SETB  0                                                                
&BUF     SETB  0                                                                
&NBUF    SETB  0                                                                
&XBUF    SETB  0                                                   @D1A         
&KPSRB   SETB  0                                                   @U2A         
&NKPSRB  SETB  0                                                   @U2A         
         AIF   (&ISTUP EQ 1).UPSTART                                            
*                                                                               
*  IST6MCUP - ACF/VTAM                                                          
*                                                                               
*  COPYRIGHT: LICENSED MATERIALS - PROPERTY OF IBM                              
*                                                                               
*             THIS PRODUCT CONTAINS "RESTRICTED MATERIALS OF IBM"               
*                                                                               
*             5655-127 (C) COPYRIGHT IBM CORP. 1987, 1996.                      
*             ALL RIGHTS RESERVED.                                              
*                                                                               
*             U.S. GOVERNMENT USERS RESTRICTED RIGHTS -                         
*             USE, DUPLICATION OR DISCLOSURE RESTRICTED BY                      
*             GSA ADP SCHEDULE CONTRACT WITH IBM CORP.                          
*                                                                               
*             SEE COPYRIGHT INSTRUCTIONS.                                       
*                                                                               
&ISTUP   SETB  1                                                                
.UPSTART ANOP                                                                   
         AIF   ('&CKCMODE' NE 'YES').OPT  BR IF NO CONMODE/CONXMOD @I1C         
         AIF   ('&CONXMOD' EQ '').CONM                             @I1A         
         AIF   ('&CONXMOD' NE 'CA').CONX1                          @I1A         
         AIF   (NOT &ISTGEN).CONM                                  @I1A         
         NI    RPL6FLG2-ISTRPL6X(14),X'FF'-RPL6CXBT                @I1A         
*                                      TURN OFF CONXMOD BITS       @I1A         
         OI    RPL6FLG2-ISTRPL6X(14),RPL6CACX   SET CONXMOD CA     @I1A         
         AGO   .CONM                                               @I1A         
.CONX1   ANOP                                                      @I1A         
         AIF   ('&CONXMOD' NE 'CS').CONX2                          @I1A         
         AIF   (NOT &ISTGEN).CONM                                  @I1A         
         NI    RPL6FLG2-ISTRPL6X(14),X'FF'-RPL6CXBT                @I1A         
*                                      TURN OFF CONXMOD BITS       @I1A         
         OI    RPL6FLG2-ISTRPL6X(14),RPL6CSCX   SET CONXMOD CS     @I1A         
         AGO   .CONM                                               @I1A         
.CONX2   ANOP                                                      @I1A         
         AIF   ('&CONXMOD' NE 'SAME').CONX3                        @I1A         
         AIF   (NOT &ISTGEN).CONM                                  @I1A         
         OI    RPL6FLG2-ISTRPL6X(14),RPL6SAMX   SET CONXMOD SAME   @I1A         
         AGO   .CONM                                               @I1A         
.CONX3   ANOP                                                      @I1A         
         IST6MCER 5,CONXMOD,&CONXMOD                               @I1A         
.CONM    ANOP                                                      @I1A         
         AIF   ('&CONMODE' EQ '').OPT                                           
         AIF   ('&CONMODE' NE 'LLCA').CONM1                                     
         AIF   (NOT &ISTGEN).OPT                                                
         NI    RPL6FLG3-ISTRPL6X(14),X'FF'-RPL6CBIT                             
*                                                TURN OFF CONMODE BITS          
         OI    RPL6FLG3-ISTRPL6X(14),RPL6LLCA    SET CONMODE TO LLCA            
         AGO   .OPT                                                             
.CONM1   ANOP                                                                   
         AIF   ('&CONMODE' NE 'BUFFCA').CONM2                                   
         AIF   (NOT &ISTGEN).OPT                                                
         NI    RPL6FLG3-ISTRPL6X(14),X'FF'-RPL6CBIT                             
*                                                TURN OFF CONMODE BITS          
         OI    RPL6FLG3-ISTRPL6X(14),RPL6BFCA    SET CONMODE TO BUFFCA          
         AGO   .OPT                                                             
.CONM2   ANOP                                                                   
         AIF   ('&CONMODE' NE 'CS').CONM3                                       
         AIF   (NOT &ISTGEN).OPT                                                
         NI    RPL6FLG3-ISTRPL6X(14),X'FF'-RPL6CBIT                             
*                                                TURN OFF CONMODE BITS          
         OI    RPL6FLG3-ISTRPL6X(14),RPL6CS      SET CONMODE TO CS              
         AGO   .OPT                                                             
.CONM3   ANOP                                                                   
         AIF   ('&CONMODE' NE 'SAME').CONM4                                     
         AIF   (NOT &ISTGEN).OPT                                                
         OI    RPL6FLG3-ISTRPL6X(14),RPL6SAME    SET CONMODE TO SAME            
         AGO   .OPT                                                             
.CONM4   ANOP                                                                   
         IST6MCER 5,CONMODE,&CONMODE                                            
.*                                                                              
.***** PROCESS ALL OPTCD VALUES SPECIFIED ON RPL *****************              
.OPT     ANOP                                                                   
         AIF   ('&OPTCD' EQ '').ECBEXIT   SKIP IF OPTCD NOT SPECIFIED           
&NUM     SETA  N'&OPTCD            SET NUM TO NUMBER OF OPTCD= VALUES           
.*                                                                              
.OPTSCAN ANOP                  LOOP THROUGH OPTCD= SUBLIST ENTRIES @D1A         
.*                                                                              
.***** CHECK FOR OPTCD VALUES BUFFLST!NBUFFLST!XBUFLST **********               
         AIF   ('&CKBUFF' EQ 'NO').BUFSKIP                         @D2A         
         AIF   ('&OPTCD(&NUM)' NE 'XBUFLST').OPT1                  @D1A         
&XBUF    SETB  1                                                   @D1A         
         AGO   .NEXT                                               @D1A         
.OPT1    ANOP                                                                   
         AIF   ('&OPTCD(&NUM)' NE 'BUFFLST').OPT2                               
&BUF     SETB  1                                                                
         AGO   .NEXT                                                            
.OPT2    ANOP                                                                   
         AIF   ('&OPTCD(&NUM)' NE 'NBUFFLST').OPT3                              
&NBUF    SETB  1                                                                
         AGO   .NEXT                                                            
.OPT3    ANOP                                                                   
.BUFSKIP ANOP                       END OF BUFFERLIST VALUES       @D2A         
.*                                                                              
.***** CHECK FOR OPTCD VALUES SYN!ASY ****************************              
         AIF   ('&CKSYN' EQ 'NO').SYNSKIP                          @D2A         
         AIF   ('&OPTCD(&NUM)' NE 'SYN').OPT4                                   
&SYN     SETB  1                                                                
         AGO   .NEXT                                                            
.OPT4    ANOP                                                                   
         AIF   ('&OPTCD(&NUM)' NE 'ASY').OPT5                                   
&ASY     SETB  1                                                                
         AGO   .NEXT                                                            
.OPT5    ANOP                                                                   
.SYNSKIP ANOP                       END OF SYN!ASYN VALUES         @D2A         
.*                                                                              
.***** CHECK FOR OPTCD VALUES KEEPSRB!NKEEPSRB *******************              
         AIF   ('&OPTCD(&NUM)' NE 'KEEPSRB').OPT6                               
&KPSRB   SETB  1                                                                
         AGO   .NEXT                                                            
.OPT6    ANOP                                                                   
         AIF   ('&OPTCD(&NUM)' NE 'NKEEPSRB').OPT7                 @Y1C         
&NKPSRB  SETB  1                                                                
         AGO   .NEXT                                                            
.OPT7    ANOP                                                                   
.*                                                                              
.***** SPECIFIED OPTCD VALUE IS NOT SUPPORTED FOR THIS MACRO *****              
         IST6MCER 5,OPTCD,&OPTCD(&NUM)   ISSUE VALUE NOT VALID MESSAGE          
.*                                                                              
.NEXT    ANOP                                                                   
&NUM     SETA  &NUM-1               DECREMENT SUBLIST ENTRY NUMBER              
         AIF   (&NUM NE 0).OPTSCAN   CHECK ANOTHER ENTRY IF ANY    @D2C         
.*                                                                              
.***** CHECK IF MUTUALLY EXCLUSIVE OPTCD VALUES WERE SPECIFIED ***              
.*     ISSUE ERROR MESSAGES IF NEEDED, SET RPL INDICATORS IF OK                 
.*                                                                              
.BUFCHK  ANOP                                                      @D2A         
         AIF   (NOT(&XBUF OR &BUF OR &NBUF)).SYNCHK  NO VALUE SET  @D2A         
         AIF   (NOT(&XBUF AND &NBUF)).BUFCHK1                      @D2C         
         IST6MCER 4,OPTCD,XBUFLST,NBUFFLST  WRITE CONFLICT MESSAGE @D1A         
         AGO   .SYNCHK                    SKIP TO NEXT OPTCD CHECK @S1A         
.BUFCHK1 ANOP                                                      @D2C         
         AIF   (NOT(&XBUF AND &BUF)).BUFCHK2                       @D2C         
         IST6MCER 4,OPTCD,XBUFLST,BUFFLST   WRITE CONFLICT MESSAGE @D1A         
         AGO   .SYNCHK                    SKIP TO NEXT OPTCD CHECK @S1A         
.BUFCHK2 ANOP                                                      @D2C         
         AIF   (NOT(&BUF AND &NBUF)).BUFCHK3                       @D2C         
         IST6MCER 4,OPTCD,BUFFLST,NBUFFLST  WRITE CONFLICT MESSAGE @D2C         
         AGO   .SYNCHK                    SKIP TO NEXT OPTCD CHECK @S1A         
.BUFCHK3 ANOP                                                                   
         AIF   (NOT(('&CKBUFF' EQ 'YES') AND &XBUF)).BUFCHK4       @D2C         
         IST6MCER 5,OPTCD,XBUFLST          VALUE NOT VALID MESSAGE @D2A         
         AGO   .SYNCHK                    SKIP TO NEXT OPTCD CHECK @S1A         
.BUFCHK4 ANOP                                                      @D2C         
         AIF   (NOT(('&CKBUFF' EQ 'BBUF') AND &NBUF)).BUFCHK5      @D2A         
         IST6MCER 5,OPTCD,NBUFFLST         VALUE NOT VALID MESSAGE              
         AGO   .SYNCHK                    SKIP TO NEXT OPTCD CHECK @S1A         
.BUFCHK5 ANOP                                                      @D2C         
         AIF   (NOT(('&CKBUFF' EQ 'OBUF') AND &BUF)).BUFCHK6       @D2A         
         IST6MCER 5,OPTCD,BUFFLST          VALUE NOT VALID MESSAGE @D2A         
         AGO   .SYNCHK                    SKIP TO NEXT OPTCD CHECK @S1A         
.BUFCHK6 ANOP                                                      @D2C         
         AIF   (NOT &ISTGEN).SYNCHK   SKIP SETTING IF ANY ERRORS   @D2C         
.BUFSET  ANOP                                                      @D2A         
         AIF   (NOT &XBUF).BUFSET1                                 @D2C         
         OI    RPLOPT6-IFGRPL(1),X'04'       SET TO XBUFLST        @D1A         
*                                                                  @D1A         
         NI    RPLOPT6-IFGRPL(1),X'FD'       TURN OFF BUFFLST      @D1A         
         NI    RPLEXTDS-IFGRPL(1),X'FE'      TURN OFF XSRV         @D1A         
.BUFSET1 ANOP                                                      @D2C         
         AIF   (NOT &BUF).BUFSET2                                  @D2C         
         OI    RPLOPT6-IFGRPL(1),X'02'       SET TO BUFFLST                     
*                                                                               
         NI    RPLOPT6-IFGRPL(1),X'FB'       TURN OFF XBUFLST      @D1A         
         NI    RPLEXTDS-IFGRPL(1),X'FE'      TURN OFF XSRV         @D1A         
.BUFSET2 ANOP                                                      @D2C         
         AIF   (NOT &NBUF).BUFSET3                                 @D2C         
         NI    RPLOPT6-IFGRPL(1),X'F9'       TURN OFF BUFFLST      @D1A         
*                                            ... AND XBUFLST       @D1A         
         NI    RPLEXTDS-IFGRPL(1),X'FE'      TURN OFF XSRV         @D1A         
.BUFSET3 ANOP                                                      @D2C         
.SYNCHK  ANOP                                                      @D2C         
         AIF   (NOT(&SYN AND &ASY)).SYNCHK0                        @D2C         
         IST6MCER 4,OPTCD,SYN,ASY           WRITE CONFLICT MESSAGE              
         AGO   .SRBCHK                    SKIP TO NEXT OPTCD CHECK @S1A         
.SYNCHK0 ANOP                                                                   
         AIF   (NOT &ISTGEN).SRBCHK     SKIP SETTING IF ANY ERRORS @D2C         
.SYNSET  ANOP                                                      @D2A         
         AIF   (NOT &SYN).SYNSET1                                  @D2C         
         NI    RPLOPT1-IFGRPL(1),X'F7'       TURN OFF ASY BIT                   
*                                                                               
.SYNSET1 ANOP                                                                   
         AIF   (NOT &ASY).SYNSET2                                  @D2C         
         OI    RPLOPT1-IFGRPL(1),X'08'       SET TO ASY                         
*                                                                               
.SYNSET2 ANOP                                                      @D2A         
.SRBCHK  ANOP                                                      @D2A         
         AIF   (NOT(&KPSRB AND &NKPSRB)).SRBCHK1                   @D2A         
         IST6MCER 4,OPTCD,KEEPSRB,NKEEPSRB  WRITE CONFLICT MESSAGE @U2A         
         AGO   .ECBEXIT                 SKIP TO NEXT KEYWORD CHECK @S1A         
.SRBCHK1 ANOP                                                      @U2A         
         AIF   (NOT &ISTGEN).ECBEXIT   SKIP SETTING IF ANY ERRORS  @U2A         
.SRBSET  ANOP                                                      @D2A         
         AIF   (NOT &KPSRB).SRBSET1                                @D2C         
         OI    RPLOPT11-IFGRPL(1),X'01'       SET TO KEEPSRB       @U2A         
*                                                                               
.SRBSET1 ANOP                                                      @U2A         
         AIF   (NOT &NKPSRB).SRBSET2                               @D2C         
         NI    RPLOPT11-IFGRPL(1),X'FE'       TURN OFF KEEPSRB BIT @U2A         
*                                                                               
.SRBSET2 ANOP                                                      @D2A         
.ECBEXIT ANOP                                                                   
         AIF   ('&ECB' EQ '' AND '&EXIT' EQ '').BR  NEITHER SPECIFIED?          
         AIF   ('&ECB' NE '' AND '&EXIT' NE '').ECBMSG  BOTH SPECIFIED?         
         AIF   (NOT &ISTGEN).BR                                                 
         AIF   ('&ECB' NE '').ECBGEN         BR IF ECB SPECIFIED                
         AIF   ('&EXIT'(1,1) EQ '(').EXIT1   BR IF REG FORM                     
         LA    15,&EXIT                      GET EXIT ROUTINE ADDRESS           
         ST    15,RPLECB-IFGRPL(1)           STORE IN RPL                       
         AGO   .FLGSETA                                                         
.EXIT1   ANOP                                                                   
         ST    &EXIT(1),RPLECB-IFGRPL(1)     STORE EXIT ROUTINE ADDR            
.FLGSETA ANOP                                                   IN RPL          
         NI    RPLOPT1-IFGRPL(1),X'FE'       SET ECB FLAG OFF                   
         NI    RPLEXTDS-IFGRPL(1),X'BF'      SET NOEXIT BIT OFF                 
         OI    RPLEXTDS-IFGRPL(1),X'20'      SET EXIT BIT ON                    
*                                                                               
         AGO   .BR                                                              
.ECBGEN  ANOP                                                                   
         AIF   ('&ECB' EQ 'INTERNAL').FLGSETC  BR IF INTERNAL SPECIFIED         
         AIF   ('&ECB'(1,1) EQ '(').ECBGEN1  BR IF REG FORM                     
         LA    15,&ECB                       GET ECB ADDRESS                    
         ST    15,RPLECB-IFGRPL(1)           STORE IN RPL                       
         AGO   .FLGSETB                                                         
.ECBGEN1 ANOP                                                                   
         ST    &ECB(1),RPLECB-IFGRPL(1)      STORE ECB ADDRESS IN RPL           
.FLGSETB ANOP                                                                   
         OI    RPLOPT1-IFGRPL(1),X'01'       SET ECB FLAG ON                    
         OI    RPLEXTDS-IFGRPL(1),X'40'      SET NOEXIT BIT ON                  
         NI    RPLEXTDS-IFGRPL(1),X'DF'      SET EXIT BIT OFF                   
*                                                                               
         AGO   .BR                                                              
.ECBMSG  ANOP                                                                   
         IST6MCER 9                                                             
         AGO   .BR                      SKIP TO NEXT KEYWORD CHECK @S1A         
.FLGSETC ANOP                                                                   
         NI    RPLOPT1-IFGRPL(1),X'FE'       SET ECB FLAG OFF                   
         OI    RPLEXTDS-IFGRPL(1),X'40'      SET NOEXIT BIT ON                  
         NI    RPLEXTDS-IFGRPL(1),X'DF'      SET EXIT BIT OFF                   
*                                                                               
.BR      ANOP                                                                   
         AIF   ('&BRANCH' EQ '').BREND                                          
         AIF   ('&BRANCH' NE 'YES').BRNO                                        
         AIF   (NOT &ISTGEN).BREND                                              
         OI    RPLEXTDS-IFGRPL(1),X'02'      SET BRANCH ENTRY BIT ON            
*                                                                               
         MEXIT                                                                  
.BRNO    ANOP                                                                   
         AIF   ('&BRANCH' NE 'NO').BRERROR                                      
         AIF   (NOT &ISTGEN).BREND                                              
         NI    RPLEXTDS-IFGRPL(1),X'FD'      SET BRANCH ENTRY BIT OFF           
*                                                                               
         MEXIT                                                                  
.BRERROR ANOP                                                                   
         IST6MCER 5,BRANCH,&BRANCH                                              
.BREND   MEND                                                                   
