* %/*                                                          @ZMC0828 00010005
         MACRO                                                          00020005
&NAME    WTO   &MESG,&MF=I,&ROUTCDE=,&DESC=,&MSGTYP=,&MCSFLAG=,        X00030005
               &AREAID=,&SUBSMOD=,&CONNECT=^,&CONSID=^,&JOBID=^,       X00040005
               &JOBNAME=^,&KEY=^,&TOKEN=^,&PRTY=^,&SYSNAME=^,          X00050005
               &WQEBLK=^,&CONSNAME=^,&CART=^,&TEXT=^,&LINKAGE=^,       +00060005
               &SYNCH=^,&WSPARM=^                                  @L7C 00070005
.***START OF SPECIFICATIONS******************************************** 00080005
.*                                                             @G64DPSS 00090005
.* MACRO NAME= WTO                                             @G860PSS 00100005
.*                                                             @G860PSS 00110005
.* DESCRIPTIVE NAME= WRITE TO OPERATOR (WTO)                   @G860PSS 00120005
.*                                                             @G860PSS 00130005
.* EXTERNAL CLASSIFICATION: PI                                     @L7C 00140005
.* END OF EXTERNAL CLASSIFICATION:                                      00150005
.*                                                                      00160005
.**01* PROPRIETARY STATEMENT=                                         * 00170005
.* **PROPRIETARY_STATEMENT********************************************* 00180005
.*                                                                    * 00190005
.*                                                                    * 00200005
.*  LICENSED MATERIALS - PROPERTY OF IBM                              * 00210005
.*  5694-A01 COPYRIGHT IBM CORP. 1981, 2021                           * 00220009
.*                                                                    * 00230005
.*  STATUS= HBB77D0                                                   * 00240009
.*                                                                    * 00250005
.* **END_OF_PROPRIETARY_STATEMENT************************************** 00260005
.*                                                                      00270005
.*                                                                      00280005
.* Method Of Access:                                               @L8C 00290005
.*             SPECIFY:   WTO MESG,ROUTCDE=,DESC=,MSGTYP=,     @G64DPSS 00300005
.*                            MCSFLAG=,AREAID=,MF=,                @L7C 00310005
.*                            CONNECT=,CONSID=,JOBID=,             @D2C 00320005
.*                            PRTY=,KEY=,TOKEN=,SYSNAME=,          @L2A 00330005
.*                            SUBSMOD=,JOBNAME=,                   @01C 00340005
.*                            CONSNAME=,CART=,TEXT=,LINKAGE=,      @L6C 00350005
.*                            SYNCH=,WSPARM=                       @L6A 00360005
.*                                                                      00370005
.*                                     OR                          @L2A 00380005
.*                                                                      00390005
.*                        WTO WQEBLK=                              @L2A 00400005
.*                                                                      00401005
.*              WHERE:                                         @G64DPSS 00402005
.*                MESG     THE MESSAGE TEXT FOR A SINGLE OR    @G64DPSS 00403005
.*                         MULTIPLE LINE MESSAGE TO BE         @G64DPSS 00404005
.*                         WRITTEN.                            @G64DPSS 00405005
.*                ROUTCDE= ROUTING CODES TO BE ASSIGNED TO THE @G64DPSS 00406005
.*                         MESSAGE.                            @G64DPSS 00407005
.*                                                             @G64DPSS 00408005
.*                DESC=    DESCRIPTOR CODES TO BE ASSIGNED TO  @G64DPSS 00409005
.*                         THE MESSAGE.                        @G64DPSS 00410005
.*                                                             @G64DPSS 00411005
.*                MSGTYP=  SPECIFIES HOW THE MESSAGE IS TO BE  @G64DPSS 00412005
.*                         ROUTED. VALID VALUES ARE:           @G64DPSS 00413005
.*                           N, Y, SESS, JOBNAMES, STATUS      @G64DPSS 00414005
.*                                                             @G64DPSS 00415005
.*                MCSFLAG= SPECIFIES ATTRIBUTES OF THE         @G64DPSS 00416005
.*                         MESSAGE. VALID VALUES ARE:          @G64DPSS 00417005
.*                           RESP, REPLY, BRDCST,                  @L8C 00418005
.*                           HRDCPY, NOTIME, CMD, NOCPY,           @L8C 00419005
.*                           BUSYEXIT                              @D2C 00420005
.*                                                                 @L8A 00421005
.*                         Note: While REG0, QREG0 and BUSYEXIT    @L8A 00422005
.*                         are checked, they are no longer         @L8A 00423005
.*                         supported. Use of REG0 and QREG0 will   @L8A 00424005
.*                         cause the module assembly to fail since @L8A 00425005
.*                         an MNOTE of severity 12 will be         @L8A 00425105
.*                         generated.                              @L8A 00425205
.*                                                                 @L8A 00425305
.*                         BUSYEXIT will cause an MNOTE of         @L8A 00425405
.*                         severity 0 to be generated.             @L8A 00425505
.*                                                                 @L8A 00425605
.*                                                             @G64DPSS 00425705
.*                AREAID=  SPECIFIES A DISPLAY AREA ON THE     @G64DPSS 00425805
.*                         CONSOLE WHERE THE MESSAGE IS TO BE  @G64DPSS 00425905
.*                         WRITTEN.                            @G64DPSS 00426005
.*                                                             @G64DPSS 00427005
.*                MF=      SPECIFIES THE TYPE OF EXPANSION     @G64DPSS 00428005
.*                         REQUIRED. VALID VALUES ARE:         @G64DPSS 00429005
.*                           I, L, E                           @G64DPSS 00430005
.*                         IF NOT SPECIFIED, OR SPECIFIED WITHOUT  @L2A 00431005
.*                         DATA, STANDARD FORM (I-INLINE)          @L2A 00432005
.*                         ASSUMED.                                @L2A 00433005
.*                                                             @G64DPSS 00434005
.*                CONNECT= SPECIFIES THE 4-BYTE MESSAGE NUMBER     @L2A 00435005
.*                         OF THE MULTI-LINE WTO THAT THIS         @L2A 00435105
.*                         WTO IS TO BE CONNECTED TO.  IF A        @L2A 00435205
.*                         REGISTER IS USED, THE REGISTER          @L2A 00435305
.*                         CONTAINS THE MESSAGE NUMBER.  THIS      @L2A 00435405
.*                         KEYWORD IS MUTUALLY EXCLUSIVE WITH      @L2A 00435505
.*                         THE CONSID, CONSNAME AND                @01C 00435605
.*                         SYSNAME KEYWORDS.                       @L2A 00435705
.*                         ONLY VALID FOR CONTINUATION OF          @L2A 00435805
.*                         MULTI-LINE MESSAGES.                    @L2A 00435905
.*                                                                      00436005
.*                CONSID=  SPECIFIES THE 4-BYTE ID OF THE          @L2A 00436105
.*                         CONSOLE TO RECEIVE A MESSAGE.           @L2A 00436205
.*                         IF A REGISTER IS USED, THE REGISTER     @L2A 00436305
.*                         CONTAINS THE 4-BYTE ID.                 @L2A 00436405
.*                         THIS KEYWORD IS MUTUALLY EXCLUSIVE      @L2A 00436505
.*                         WITH THE CONNECT AND CONSNAME KEYWORD.  @L3C 00436605
.*                                                                      00436705
.*              CONSNAME=  SPECIFIES THE 8-BYTE NAME OF THE        @L3A 00436805
.*                         CONSOLE TO RECEIVE A MESSAGE.           @L3A 00436905
.*                         IF A REGISTER IS USED, THE REGISTER     @L3A 00437005
.*                         CONTAINS THE ADDRESS OF THE 8-BYTE      @L3A 00437105
.*                         CONSOLE NAME.                           @L3A 00437205
.*                         THIS KEYWORD IS MUTUALLY EXCLUSIVE      @L3A 00437305
.*                         WITH THE CONNECT AND CONSID KEYWORD.    @POC 00437405
.*                                                                      00437505
.*                JOBID=   SPECIFIES THE 8-BYTE ID WITH WHICH      @L2A 00437605
.*                         THE JES IDENTIFIES THE ISSUER OF        @L2A 00437705
.*                         THIS WTO.  THE KEYWORD IS FOR USE BY    @L2A 00437805
.*                         JES2 AND JES3.  IF A REGISTER IS USED,  @L2A 00437905
.*                         THE REGISTER CONTAINS THE ADDRESS OF    @L2A 00438005
.*                         THE 8-BYTE ID.                          @L2A 00438105
.*                                                                      00438205
.*                JOBNAME= SPECIFIES THE 8-BYTE NAME WITH WHICH    @L2A 00438305
.*                         THE JES IDENTIFIES THE ISSUER OF        @L2A 00438405
.*                         THIS WTO.  THE KEYWORD IS FOR USE BY    @L2A 00438505
.*                         JES2 AND JES3.  IF A REGISTER IS USED   @L2A 00438605
.*                         THE REGISTER CONTAINS THE ADDRESS OF    @L2A 00438705
.*                         THE 8-BYTE NAME.                        @L2A 00438805
.*                                                                      00438905
.*                SUBSMOD= INDICATES WHETHER THE CHARACTERISTICS   @L2A 00439005
.*                         OF THE MESSAGE ISSUED MAY BE CHANGED    @L2A 00440005
.*                         BY THE PRIMARY SUBSYSTEM.               @L2A 00440105
.*                         THE VALID VALUES ARE:                   @L2A 00440205
.*                                  YES - THIS IS THE DEFAULT      @L2A 00440305
.*                                  NO                             @L2A 00440405
.*                                                                      00440505
.*                PRTY=    This is no longer supported but is      @L7C 00440605
.*                         kept for compatibility.                 @L7C 00440705
.*                                                                      00440805
.*                KEY=     SPECIFIES AN 8-BYTE KEY TO BE           @L2A 00440905
.*                         ASSOCIATED WITH THIS MESSAGE.  IF A     @L2A 00441005
.*                         REGISTER IS USED, THE REGISTER          @L2A 00441105
.*                         SPECIFIES THE ADDRESS OF THE 8-BYTE     @L2A 00441205
.*                         KEY.                                    @L2A 00441305
.*                                                                      00441405
.*                TOKEN=   SPECIFIES A 4-BYTE TOKEN TO BE          @L2A 00441505
.*                         ASSOCIATED WITH THIS MESSAGE.  THE      @L2A 00441605
.*                         FIELD IS USED TO IDENTIFY A GROUP       @L2A 00441705
.*                         OF MESSAGES THAT CAN BE DELETED BY      @L2A 00441805
.*                         TOKEN.  THE TOKEN SHOULD BE UNIQUE      @L2A 00441905
.*                         WITHIN AN ADDRESS SPACE. IF A REGISTER  @L2A 00442005
.*                         IS USED, THE REGISTER CONTAINS THE      @L2A 00442105
.*                         4-BYTE VALUE.                           @L2A 00442205
.*                                                                      00442305
.*                SYSNAME= SPECIFIES AN 8-BYTE SYSTEM NAME TO BE   @L2A 00442405
.*                         ASSIGNED TO THIS MESSAGE.  IT IS THE    @L2A 00442505
.*                         SYSTEM NAME OF WHERE THIS WTO           @L2A 00442605
.*                         ORIGINATED.  IF A REGISTER IS           @L2A 00442705
.*                         USED, THE REGISTER CONTAINS THE         @L2A 00442805
.*                         ADDRESS OF THE 8-BYTE NAME. THIS        @L2A 00442905
.*                         KEYWORD IS MUTUALLY EXCLUSIVE WITH      @L2A 00443005
.*                         THE CONNECT KEYWORD.                    @L2A 00443105
.*                                                                      00443205
.*                CART=    SPECIFIES THE 4-BYTE ADDRESS OF AN      @L4A 00443305
.*                         EIGHT BYTE COMMAND AND RESPONSE TOKEN   @L4A 00443405
.*                         TO BE ASSOCIATED WITH THIS MESSAGE. THE @L4A 00443505
.*                         CART IS USED TO ASSOCIATE A WTO         @L4A 00443605
.*                         RESPONSE WITH THE ORIGINATING COMMAND.  @L4A 00443705
.*                         IF A REGISTER IS USED, THE REGISTER     @L4A 00443805
.*                         CONTAINS THE 4-BYTE ADDRESS VALUE.      @L4A 00443905
.*                         IF AN 8-BYTE FIELD IS USED, THE ADDRESS @L4A 00444005
.*                         OF THE FIELD IS STORED IN THE WPL.      @L4A 00445005
.*                                                                      00445105
.*                TEXT=    SPECIFIES A DATA AREA                   @PEA 00445205
.*                         CONTAINING A 2 BYTE MESSAGE LENGTH      @L5A 00445305
.*                         FIELD FOLLOWED BY THE ACTUAL MESSAGE    @L5A 00445405
.*                         TEXT. IF A REGISTER IS USED, THE        @L5A 00445505
.*                         REGISTER CONTAINS THE ADDRESS OF THE    @L5A 00445605
.*                         DATA AREA. IF A FIELD IS USED, THE      @L5A 00445705
.*                         ADDRESS OF THE FIELD IS STORED IN       @L5A 00445805
.*                         THE WPL. THE TEXT KEYWORD IS            @L5A 00445905
.*                         MUTUALLY EXCLUSIVE WITH INLINE          @L5A 00446005
.*                         MESSAGE TEXT. EITHER TEXT OR INLINE     @L5A 00446105
.*                         TEXT (BUT NOT BOTH) IS REQUIRED ON      @L5A 00446205
.*                         THE STANDARD OR LIST FORM OF WTO.       @L5A 00446305
.*                                                                 @L5A 00446405
.*                WQEBLK=  SPECIFIES A WQE CONTROL BLOCK TO BE     @L2A 00446505
.*                         USED AS INPUT FOR THE WTO.  IF A        @L2A 00446605
.*                         REGISTER IS USED, THE REGISTER          @L2A 00446705
.*                         SPECIFIES THE ADDRESS OF THE WQE        @L2A 00446805
.*                         CONTROL BLOCK TO BE USED AS INPUT TO    @L2A 00446905
.*                         THE WTO.  THIS KEYWORD IS MUTUALLY      @L2A 00447005
.*                         EXCLUSIVE WITH ALL OTHER KEYWORDS.      @L2A 00447105
.*                         THIS KEYWORD IS ONLY VALID ON THE       @L2A 00447205
.*                         STANDARD FORM (MF=I) OF THE MACRO.      @L2A 00447305
.*                         STANDARD FORM OF THE MACRO.             @L2A 00447405
.*                                                                      00447505
.*               LINKAGE=  SPECIFIES HOW CONTROL IS TO PASS TO THE @L6A 00447605
.*                         WTO FUNCTION.                           @L6A 00447705
.*                         THE VALID VALUES ARE-                   @L6A 00447805
.*                              BRANCH                             @L6A 00447905
.*                              SVC - THIS IS THE DEFAULT          @L6A 00448005
.*                                                                      00448105
.*                 SYNCH=  SPECIFIES WHETHER THE WTO REQUEST IS TO @L6A 00448205
.*                         BE PROCESSED SYNCHRONOUSLY WITH RESPECT @L6A 00448305
.*                         TO THE CALLER.  "SYNCH=YES" IS MUTUALLY @L6A 00448405
.*                         EXCLUSIVE WITH THE CONNECT, AREAID,     @L6A 00448505
.*                         KEYWORDS AND WITH "MCSFLAG=HRDCPY"      @L6A 00448605
.*                         THE VALID VALUES ARE-                   @L6A 00448705
.*                              YES                                @L6A 00448805
.*                              NO  - THIS IS THE DEFAULT          @L6A 00448905
.*                                                                      00449005
.*                WSPARM=  SPECIFIES WHETHER A WAIT STATE IS       @L6A 00449105
.*                         ASSOCIATED WITH THE MESSAGE. IF NO      @L6A 00449205
.*                         WAIT STATE IS ASSOCIATED WITH THE       @L6A 00449305
.*                         MESSAGE THE VALUE WILL BE 0 (THE        @L6A 00449405
.*                         DEFAULT).  IF A NON-ZERO VALUE IS       @L6A 00449505
.*                         SPECIFIED THEN IT IS EITHER THE         @L6A 00449605
.*                         ADDRESS OF THE WAIT STATE PARAMETER     @L6A 00449705
.*                         LIST OR A REGISTER CONTAINING A         @L6A 00449805
.*                         POINTER TO THE PARAMETER LIST.          @L6A 00449905
.*                         WSPARM REQUIRES SYNCH=YES.              @L6A 00450005
.*                                                                      00450105
.*                                                                      00450205
.* Function:                                                       @L8C 00450305
.*      BUILDS A WRITE TO OPERATOR PARAMETER LIST              @G64DPSS 00450405
.*      (WPL) AND/OR THE CODE WHICH WILL INVOKE SVC 35         @G64DPSS 00450505
.*      OR A BRANCH ENTRY WTO TO ISSUE THE MESSAGE.                @L6C 00450605
.*                                                             @G64DPSS 00450705
.* OPERATION =                                                     @L2A 00450805
.*      - PERFORM APPROPRIATE PARAMETER LIST GENERATION IF         @L2A 00450905
.*           WQEBLK KEYWORD IS SPECIFIED                           @L2A 00451005
.*      - IF EXECUTE FORM SPECIFIED, INSERT RUN-TIME KEYWORD       @L2A 00451105
.*           VALUES INTO THE ALREADY-EXISTING PARAMETER LIST       @L2A 00451205
.*      - IF NO NEW OR CHANGED KEYWORDS SPECIFIED, GENERATE        @L2A 00451305
.*           STANDARD FORM OF THE WPL                              @L2A 00451405
.*      - GENERATE AN EXTENDED FORMAT WPL (WPX) WHEN ANY           @L2A 00451505
.*           NEW OR CHANGED KEYWORDS ARE SPECIFIED.                @L2A 00451605
.*      - IF THIS IS A MULTI-LINE WTO, GENERATE THE MULTI-LINE     @L2A 00451705
.*           SECTION OF THE WPL                                    @L2A 00451805
.*      - IF LINKAGE=BRANCH WAS SPECIFIED GENERATE CODE FOR BRANCH @L6A 00451905
.*           ENTRY TO IEAVBWTO.  OTHERWISE ISSUE THE SVC.          @L6A 00452005
.*                                                                      00452105
.* USAGE =                                                         @L2A 00452205
.*      ANY PROGRAM MAY USE THIS MACRO TO BUILD THE WTO            @L2A 00452305
.*      PARAMETER LIST.  HOWEVER, WQEBLK, JOBID, SYSNAME,          @L2A 00452405
.*      JOBNAME, SUBSMOD, PRTY, LINKAGE, SYNCH, AND                @01C 00452505
.*      WSPARM ARE FOR CONTROL PROGRAM USE ONLY.                   @L6C 00452605
.*                                                                      00452705
.* RESTRICTIONS =                                                  @PFA 00452805
.*                                                                 @PFA 00452905
.*    "LINKAGE" SPECIFIED AS OR DEFAULTED TO "SVC" REQUIRES        @PFA 00453005
.*      THE CALLER TO:                                             @PFA 00453105
.*      - BE IN TASK MODE                                          @PFA 00453205
.*      - HOLD NO LOCKS                                            @PFA 00453305
.*      - BE ENABLED FOR INTERRUPTS                                @PFA 00453405
.*      - BE IN PRIMARY ASC MODE                                   @PFA 00453505
.*      - BE IN NON-CROSS-MEMORY MODE                              @PFA 00453605
.*      - "AUTHORIZED" PARAMETERS REQUIRE SUPERVISOR STATE,        @PFA 00453705
.*         PROTECT KEY 0-7.                                        @PFA 00453805
.*                                                                 @PFA 00453905
.*    "LINKAGE=BRANCH" CAN BE USED-                                @PFA 00454005
.*      WHEN IN SRB MODE-                                          @PFA 00454105
.*        A WTO ISSUED FROM SRB MODE WILL NOT HAVE A JOBNAME OR    @PFA 00454205
.*        JOBID ASSOCIATED WITH IT.                                @PFA 00454305
.*        IT WILL NOT BE AUTOMATICALLY DOM'D WHEN THE TASK ENDS.   @PFA 00454405
.*      WHEN DISABLED FOR INTERRUPTS-                              @PFA 00454505
.*        WTO PARAMETER LIST AND ALL STORAGE ADDRESSED BY IT       @PFA 00454605
.*        MUST BE IN FIXED OR DREF STORAGE.                        @PFA 00454705
.*      WHEN LOCKS HELD                                            @PFA 00454805
.*      WHEN THE PRIMARY ADDRESS SPACE IS NOT THE SAME AS          @PFA 00454905
.*      THE HOME ADDRESS SPACE-                                    @PFA 00455005
.*        CALLER MUST BE IN PRIMARY ASC MODE.                      @PFA 00455105
.*                                                                 @PFA 00455205
.*    IF "LINKAGE=BRANCH" IS SPECIFIED-                            @PFA 00455305
.*        WQEBLK KEYWORD CANNOT BE SPECIFIED, ABEND IF ATTEMPTED   @PFA 00455405
.*        MESSAGE TEXT MAY NOT CONTAIN DBCS DATA.                  @PFA 00455505
.*        CALLER MUST BE IN SUPERVISOR STATE, PROTECT KEY 0-7.     @PFA 00455605
.*        CALLER MUST BE IN PRIMARY ASC MODE.                      @PFA 00455705
.*                                                                 @PFA 00455805
.*    IF "WSPARM" IS SPECIFIED AS NONZERO-                         @PFA 00455905
.*        "LINKAGE=BRANCH" RESTRICTIONS APPLY, PLUS                @PFA 00456005
.*         ALL INPUT STORAGE MUST BE FIXED. (WTO PARAMETER         @PFA 00456105
.*         LIST AND ANY STORAGE ADDRESSESED BY IT, SUCH AS         @PFA 00456205
.*         TEXT DATA OR CART, PLUS THE LOADWAIT PARAMETER          @PFA 00456305
.*         LIST POINTED TO BY WSPARM).                             @PFA 00456405
.*                                                                      00456505
.* DEPENDENCIES =                                                  @L2A 00456605
.*      - LIST AND EXECUTE FORM MUST REFERENCE THE SAME VERSION    @L2A 00456705
.*           OF THE PARAMETER LIST (WPL)                           @L2A 00456805
.*      - THE LENGTH OF THE WPX IS MAINTAINED IN A ONE BYTE FIELD  @L5A 00456905
.*        WITHIN THE WPX. WHENEVER THE LENGTH OF THE WPX CHANGES   @L5A 00457005
.*        THIS FIELD MUST BE UPDATED.                              @L5A 00457105
.*                                                                      00457205
.* MODULE TYPE = MACRO                                             @L2A 00457305
.*                                                                      00457405
.* ENTRY POINT = N/A                                               @L2A 00457505
.*                                                                      00457605
.* INPUT = SEE INVOCATION                                          @L2A 00457705
.*                                                                      00457805
.* OUTPUT =                                                        @L2A 00457905
.*      PARAMETER LIST TO ISSUE SVC 35 OR BALR AND/OR THE          @L6C 00458005
.*      INSTRUCTIONS REQUIRED TO MODIFY THE PARAMETER              @L2A 00458105
.*      LIST AND ISSUE SVC 35 OR BALR TO IEAVBWGL.                 @L6A 00458205
.*                                                                      00458305
.* EXIT, NORMAL                                                    @L2A 00458405
.*   CONDITION - NO ERRORS DETECTED BY THE WTO MACRO               @L2A 00458505
.*   OUTPUT    - NO MNOTE ISSUED. SEVERITY CODE = 0                @L2A 00458605
.*                                                                      00458705
.* EXIT, NORMAL                                                    @L2A 00458805
.*   CONDITION - INFORMATIONAL MNOTE CONDITION DETECTED BY THE     @L2A 00458905
.*                 WTO MACRO                                       @L2A 00459005
.*   OUTPUT    - MNOTE WITH SEVERITY CODE 0 ISSUED WHEN:           @L6C 00459105
.*                .DATA IS SPECIFIED FOR A RUN-TIME KEYWORD ON A   @L6C 00459205
.*                 LIST FORM INVOCATION. THE DATA IS IGNORED.      @L2A 00459305
.*                .LINE TYPE DATA IS SPECIFIED WITH THE TEXT       @PKA 00459405
.*                 KEYWORD ON AN EXECUTE FORM INVOCATION.          @PKA 00459505
.*                 THE LINE TYPE DATA IS IGNORED.                  @PKA 00459605
.*                .A LINE OF INLINE TEXT IS LONGER THAN THE        @PMM 00459705
.*                   DOCUMENTED ALLOWED MAXIMUM LENGTH.            @PMM 00459805
.*                .MCSFLAG=BUSYEXIT is specified.                  @L7A 00459905
.*                                                                      00460005
.* EXIT, NORMAL                                                    @L2A 00460105
.*   CONDITION - WARNING CONDITION DETECTED BY THE WTO MACRO       @L2A 00460205
.*   OUTPUT    - MNOTE WITH SEVERITY CODE 4 ISSUED WHEN:           @L2A 00460305
.*                .A RUN-TIME KEYWORD IS SPECIFIED WITHOUT DATA    @L2A 00460405
.*                   DURING A STANDARD OR EXECUTE FORM INVOCATION. @L2A 00460505
.*                   THE KEYWORD IS IGNORED.                       @L2A 00460605
.*                .AN INVALID ROUTING CODE IS SPECIFIED            @L2A 00460705
.*                .AN INVALID RANGE OF ROUTING CODES IS SPECIFIED  @L2A 00460805
.*                .RESERVED ROUTING CODES (30-40) ARE              @PRA 00460905
.*                   SPECIFIED                                 @YA10057 00461005
.*                .AN INVALID SUBSMOD KEYWORD VALUE IS SPECIFIED   @L2A 00461105
.*                .THE BUSYEXIT PARAMETER IS USED ON A WTOR        @L2A 00461205
.*                .AN INVALID DESCRIPTOR CODE IS SPECIFIED         @L2A 00461305
.*                .INVALID OR MUTUALLY EXCLUSIVE MCSFLAG           @L2A 00461405
.*                   VALUES ARE SPECIFIED                          @L2A 00461505
.*                .AN INVALID MSGTYPE VALUE IS SPECIFIED           @L2A 00461605
.*                .MORE THAN ONE ARGUMENT CODED WITH EITHER THE    @L6A 00461705
.*                   LINKAGE, SYNCH, OR WSPARM KEYWORDS.           @L6A 00461805
.*                                                                      00461905
.* EXIT, ERROR                                                     @L2A 00462005
.*   CONDITION - TERMINATING ERROR CONDITION DETECTED BY           @L2A 00462105
.*                 THE WTO MACRO                                   @L2A 00462205
.*   OUTPUT    - MNOTE WITH SEVERITY CODE 12 ISSUED WHEN:          @L2A 00462305
.*                .THE WQEBLK KEYWORD IS SPECIFIED ALONG WITH      @L2A 00462405
.*                   OTHER KEYWORDS                                @L2A 00462505
.*                .THE CONNECT KEYWORD IS SPECIFIED ALONG WITH     @L2A 00462605
.*                   EITHER THE SYSNAME, CONSID OR                 @01C 00462705
.*                   CONSNAME.                                     @L3A 00462805
.*                .THE CONSID KEYWORD IS SPECIFIED ALONG WITH      @L3A 00462905
.*                   THE CONSNAME KEYWORD.                         @L3A 00463005
.*                .THE CONNECT KEYWORD IS SPECIFIED ON A           @L2A 00463105
.*                   SINGLE-LINE WTO                               @L2A 00463205
.*                .THE NUMBER OF TEXT LINES REQUESTED IS EITHER    @L2A 00463305
.*                   ZERO OR GREATER THAN 255                      @L2A 00463405
.*                .THE TEXT KEYWORD IS SPECIFIED ALONG WITH        @L5A 00463505
.*                   INLINE MESSAGE TEXT.                          @L5A 00463605
.*                .SYNCH=YES WITH MORE THAN 14 LINES OF TEXT.      @L6A 00463705
.*                .SYNCH=YES SPECIFIED ALONG WITH CONNECT OR       @L6A 00463805
.*                   AREAID KEYWORDS.                              @L6A 00463905
.*                .SYNCH=YES SPECIFIED WITH MCSFLAG=HRDCPY         @L6A 00464005
.*                .SYNCH=YES SPECIFIED WITHOUT LINKAGE=BRANCH      @L6A 00464105
.*                     ON STANDARD OR EXECUTE FORM.                @P9A 00464205
.*                .WSPARM ^= 0 SPECIFIED WITHOUT SYNCH=YES         @P9C 00464305
.*                     OR  WITHOUT LINKAGE=BRANCH ON STANDARD      @P9C 00464405
.*                     OR EXECUTE FORM.                            @P9A 00464505
.*                .MCSFLAG=REG0 or MCSFLAG=QREG0 are specified     @L8A 00464605
.*                                                                      00464705
.* EXTERNAL REFERENCES = N/A                                       @L2A 00464805
.*                                                                      00464905
.* TABLES = N/A                                                    @L2A 00465005
.*                                                                      00465105
.* MACROS =                                                        @L2A 00465205
.*      THE PARAMETER LIST GENERATED BY THIS MACRO IS MAPPED       @L2A 00465305
.*      BY THE MACRO IEZWPL. HOWEVER, IEZWPL IS NOT REQUIRED       @L2A 00465405
.*      TO USE THIS MACRO.                                         @L2A 00465505
.*                                                                      00465605
.* Component:          Consoles (SC1CK)                            @L8A 00465705
.* DSECT Name:         n/a                                         @L8A 00465805
.* Eye Catcher:        n/a                                         @L8A 00465905
.*     Offset:         n/a                                         @L8A 00466005
.*     Length:         n/a                                         @L8A 00466105
.* Created By:         n/a                                         @L8A 00466205
.* Pointed to By:      n/a                                         @L8A 00466305
.* Serialization:      n/a                                         @L8A 00466405
.* Storage Attributes: n/a                                         @L8A 00466505
.*     Subpool:        n/a                                         @L8A 00466605
.* Size:               n/a                                         @L8A 00466705
.*                                                                      00466805
.* CHANGE ACTIVITY =                                           @G64DPSS 00466905
.*              G64DPSS,OZ43167,G860PSS,ZMC0828                @ZMC0828 00467005
.* $D1=DCR7,     JBB2110, 820831, PDSJ: MULTILINE WTP SUPPORT           00467105
.* $L1=MRRHCLOG, JBB2125, 830608, PDF8: HARDCOPY LOG FORMAT             00467205
.* $L2=COEXWTO1, JBB2220, 841101, PDF9: JES3/MCS COEXISTENCE            00467305
.* $P1=PA20104,  JBB2220, 850220, PDF9: JES3/MCS COEXISTENCE            00467405
.* $P2=PA20116,  JBB2220, 850220, PDF9: JES3/MCS COEXISTENCE            00467505
.* $P3=PA21155,  JBB2220, 860910, PDF9: JES3/MCS COEXISTENCE            00467605
.* $P4=PA21240,  JBB2220, 861008, PDF9: JES3/MCS COEXISTENCE            00467705
.*                      YA10057                                         00467805
.*              YA11509 - NO CODE CHANGES.                              00467905
.*              YA17152 - REDEFINE COMMON ACRONYMS OF GLOBAL DECLARES   00468005
.* $L3=CNMG2,    HBB4410, 870424, PDR3: CONSOLE MERGE STAGE II          00468105
.* $P5=PEO0005,  HBB4410, 850424, PDR3: CONSOLE MERGE STAGE II          00468205
.* $L4=TSOOP,    HBB4410, 870622, PDBU: TSO OPERATOR                    00468305
.* $L5=KNWTO,    HBB4410, 870916, PDCM: KANJI/WTO                       00468405
.* $P6=PEO0021,  HBB4410, 880120, PDBU: CONSOLE MERGE STAGE II          00468505
.* $P7=PEO0158,  HBB4410, 880210, PDBU: CONSOLE MERGE STAGE II          00468605
.* $P8=PEO0133,  HBB4410, 880420, PDF9: TSO OPERATOR                    00468705
.* $L6=CNITGDHE, HBB4410, 890313, PDHE: CONSOLE INTEGRATION             00468805
.* $P9=PH25014,  HBB4410, 890503, PDHD: CONSOLE INTEGRATION             00468905
.* $PA=PH25015,  HBB4410, 890503, PDHD: CONSOLE INTEGRATION             00469005
.* $PB=PH25016,  HBB4410, 890503, PDHD: CONSOLE INTEGRATION             00469105
.* $PC=PH25022,  HBB4410, 890503, PDHD: CONSOLE INTEGRATION             00469205
.* $D2=DEO0124,  HBB4410, 890421, PDCM: DCR 124                         00469305
.* $PE=PEO1712,  HBB4410, 890612, PDCM: TEXT PARAMETER DESCRIPTION      00469405
.* $D3=DEO0184,  HBB4410, 890619, PDHE: DCR 184                         00469505
.* $PF=PEO2883,  HBB4410, 891127, PDHE: ADD RESTRICTIONS TO PROLOG      00469605
.* $PG=PEO3063,  HBB4410, 900105, PDF9: ADD MAX TEXT LENGTH CHECKS      00469705
.* $PH=PEO3503,  HBB4410, 900306, PDHK: ADD MAX TEXT LENGTH CHECKS      00469805
.* $PI=PEO3640,  HBB4410, 900306, PDCY: ALLOW NULL VALUE FOR THE TEXT   00469905
.*                                      KEYWORD FOR LIST FORM OF MACRO  00470005
.* $PJ=PEO3823,  HBB4410, 900330, PDHD: DOWNWARD COMPATABILITY          00470105
.* $PK=PEO3824,  HBB4410, 900330, PDHD: WARN FOR LINE TYPE/EXEC FORM    00470205
.* $PL=PEO3650,  HBB4410, 900330, PDBT: TEXT KWRD WITH NULL END-LINE    00470305
.* $PM=PEO4290,  HBB4410, 900504, PDHE: CHANGE MNOTE SEVERITY           00470405
.* $PN=PEO4497,  HBB4410, 900612, PDHE: CHANGE MNOTE SEVERITY           00470505
.* $01=OY37350,  HBB4410, 901019, PDHE: PEO4845 REMOVE UNSUPPORTED      00470605
.*                                      PARAMETER SUPPORT               00470705
.* $02=OY41569,  HBB4410, 900404, PDBU: DON'T SET ROUTECODE 2 AS A      00470805
.*                                      DEFAULT WHEN ONLY MSGTYP IS     00470905
.*                                      SPECIFIED                       00471005
.* $03=OY49988,  HBB4410, 911206, PDCI: AVOID LABEL NOT FOUND MESSAGE   00471105
.* $04=OY53863,  HBB4410, 920501, PDHE: MNOTE BEING ISSUED INCORRECTLY  00471205
.* $05=OY60714,  HBB4410, 930127, PDCI: WRONG VERSION OF WPX GENERATED  00471305
.*                                      IF BUSYEXIT SPECIFIED WITH      00471405
.*                                      NEW VERSION 4 KEYWORDS          00471505
.* $06=OW07261,  HBB4430, 940831, PDEV: Support TEXT=(L,DE)             00471605
.* $PO=PQC0074,  HBB6603, 950210, PDCM: CONSNAME Doc                    00471705
.* $PP=PQC1061,  HBB6603, 960831, PDCI: ASCB                            00471805
.* $PQ=PWA0021,  JBB6607, 980413, PDHD: TEXT keyword, FIN of OW30888    00471905
.* $07=OW33655,  HBB6601, 980630, PDHD: Invalid assembly errors         00472005
.* $L7=CSTARWTO, JBB7727, 020816, PDSS: Remove QID and MNOTE for        00472105
.*                                      BUSYEXIT                        00472205
.* $PR=PZO0210,  JBB7727, 030615, PDHD: routing code 29 now legal       00472305
.* $08=OA05321,  HBB7707, 040131, PDHD: Check line type for 1 line ML   00472405
.* $L8=CNZ1B,    HBB7720, 040214, PDSS: 1-Byte Console Id Removal Part1 00472505
.* $PS=ME00837,  HBB7720, 040615, PDSW: Reversioning                    00472605
.* $PT=ME01663,  HBB7720, 040901, PDSW: Reversioning Cancelled          00472705
.* $LC=ME09280,  HBB7750, 070228, PDXB: Jumpify                         00472805
.* $PU=WI334907, HBB77D0, 200424, PDED: Remove MNOTE12 for line type    00472908
.*                                      on execute version              00473008
.*                                                                      00473105
.***END OF SPECIFICATIONS********************************************** 00473205
.*                                                                      00473305
.* MESSAGES (MNOTES) =                                             @L2A 00473405
.*   - SEVERITY 0 MNOTES:                                          @L2A 00473505
.*      - 'KKKKKKKK' DATA IGNORED ON THE LIST FORM OF WTO.         @L2A 00473605
.*           WHERE 'KKKKKKKK' MAY BE CONNECT, CONSID, KEY,         @L2A 00473705
.*           JOBNAME, JOBID, PRTY, TOKEN, SYSNAME,                 @01C 00473805
.*           CONSNAME, CART, TEXT, LINKAGE OR WSPARM.              @L6C 00473905
.*      - INLINE TEXT EXCEEDS ALLOWED MAXIMUM. TEXT LINE           @PMM 00474005
.*             (NUMBER N) HAS BEEN TRUNCATED.                      @PMM 00474105
.*           WHERE 'NUMBER N' APPLIES TO THE LINE NUMBER ON A      @PMM 00474205
.*           MULTI LINE MESSAGE                                    @PMM 00474305
.*      - MCSFLAG=BUSYEXIT NOT SUPPORTED ON RELEASE JBB7727 OR ABOVE    00474405
.*                                                                 @L7A 00474505
.*   - SEVERITY 4 MNOTES:                                          @L2A 00474605
.*      - RESERVED ROUTING CODE(S) 30-40 IGNORED.                  @PRA 00474705
.*      - INVALID RANGE OF ROUTING CODES IGNORED.                  @L2A 00474805
.*      - SUBSMOD=YES ASSUMED. SPECIFIED SUBSMOD VALUE             @L2A 00474905
.*          WAS NOT YES OR NO.                                     @L2A 00475005
.*      - MCSFLAG=BUSYEXIT IGNORED.  NOT VALID ON WTOR.            @L2A 00475105
.*      - 'KKKKKKKK' KEYWORD IGNORED. NO VALUE SPECIFIED.          @L2A 00475205
.*           WHERE 'KKKKKKKK' MAY BE WQEBLK, CONNECT, CONSID,      @L2A 00475305
.*           JOBID, JOBNAME, PRTY, KEY, TOKEN, SYSNAME,            @01C 00475405
.*           CONSNAME, CART, TEXT OR WSPARM.                       @L6C 00475505
.*      - LINKAGE IS TOO LONG.  ARGUMENTS ARE IGNORED AFTER XXXXX. @L6A 00475605
.*      - SYNCH IS TOO LONG.  ARGUMENTS ARE IGNORED AFTER XXXXXXX. @L6A 00475705
.*      - WSPARM IS TOO LONG.  ARGUMENTS ARE IGNORED AFTER XXXXXX. @L6A 00475805
.*      - ROUTCDE  N  IS AN INVALID ROUTING CODE. IT IS IGNORED.   @L2A 00475905
.*      - DESC  N  IS AN INVALID DESCRIPTOR CODE. IT IS IGNORED.   @L2A 00476005
.*      - MSGTYP FIELD INVALID. N IS ASSUMED                       @L2A 00476105
.*      - MCSFLAG= &MCSFLAG(&I) IS INVALID. IT IS IGNORED.         @L2A 00476205
.*      - HRDCPY AND NOCPY MUTUALLY EXCLUSIVE. MCSFLAG=HRDCPY      @L2A 00476305
.*          ASSUMED.                                               @L2A 00476405
.*                                                                      00476505
.*   - SEVERITY 12 MNOTES:                                         @L2A 00476605
.*      - NO TEXT GENERATED. 'WQEBLK' IS MUTUALLY EXCLUSIVE        @L2A 00476705
.*          WITH ALL OTHER KEYWORDS.                               @L2A 00476805
.*      - NO TEXT GENERATED. 'CONNECT' IS MUTUALLY EXCLUSIVE       @L3C 00476905
.*          WITH THE CONSID, SYSNAME, AND CONSNAME KEYWORDS.       @01C 00477005
.*      - NO TEXT GENERATED. 'CONSID' IS MUTUALLY EXCLUSIVE        @L3A 00477105
.*          WITH THE CONSNAME KEYWORD.                                  00477205
.*      - NO TEXT GENERATED. 'CONNECT' IS MUTUALLY EXCLUSIVE       @L2A 00477305
.*          WITH SINGLE LINE WTO.                                  @L2A 00477405
.*      - NUMBER OF LINES REQUESTED IS 0 OR GREATER THAN 255 -     @L2A 00477505
.*          GENERATION TERMINATED                                  @L2A 00477605
.*      - NO TEXT GENERATED. INLINE TEXT IS MUTUALLY EXCLUSIVE     @L5A 00477705
.*          WITH 'TEXT'.                                           @L5A 00477805
.*      - NO TEXT GENERATED.  TOO MANY LINES OF TEXT.              @L6A 00477905
.*          MAX=## WHEN SYNCH=YES.                                 @L6A 00478005
.*             WHERE ## IS THE VALUE ASSIGNED TO THE VARIABLE      @L6A 00478105
.*               MAXLINS                                           @L6A 00478205
.*      - NO TEXT GENERATED. 'SYNCH=YES'                           @L6A 00478305
.*          REQUIRES 'LINKAGE=BRANCH'.                             @L6A 00478405
.*      - NO TEXT GENERATED. 'SYNCH=YES' IS MUTUALLY EXCLUSIVE     @L6A 00478505
.*          WITH THE CONNECT AND AREAID KEYWORDS.                  @L6A 00478605
.*      - NO TEXT GENERATED. 'SYNCH=YES' IS MUTUALLY EXCLUSIVE     @L6A 00478705
.*          WITH 'MCSFLAG=HRDCPY'.                                 @L6A 00478805
.*      - NO TEXT GENERATED. 'WSPARM ^= 0' REQUIRES                @L6A 00478905
.*          'LINKAGE=BRANCH' AND 'SYNCH=YES'.                      @L6A 00479005
.*      - NO TEXT GENERATED. SPECIFIED LINKAGE VALUE WAS NOT       @L6A 00479105
.*          SVC OR BRANCH.                                         @L6A 00479205
.*      - NO TEXT GENERATED. SPECIFIED SYNCH VALUE WAS NOT         @L6A 00479305
.*          YES OR NO.                                             @L6A 00479405
.*      - NO TEXT GENERATED. SPECIFIED WSPARM VALUE WAS NOT        @L6A 00479505
.*          0, A REGISTER, OR AN ADDRESS.                          @L6A 00479605
.*      - INVALID LINETYPE, GENERATION TERMINATED.                 @08A 00479705
.*      - MCSFLAG=REG0 NOT SUPPORTED ON RELEASE HBB7720 OR ABOVE.  @L8A 00479805
.*          USE CONSID= INSTEAD.                                   @L8A 00479905
.*      - MCSFLAG=QREG0 NOT SUPPORTED ON RELEASE HBB7720 OR ABOVE. @L8A 00480005
.*          USE CONSID= INSTEAD.                                   @L8A 00480105
.*                                                                      00480205
.* NOTES      = THIS MACRO IS INVOKED BY THE WTOR AND WTL      @G860PSS 00480305
.*              MACROS TO GENERATE SOME SECTIONS OF THEIR      @G860PSS 00480405
.*              PARAMETER LISTS.                               @G860PSS 00480505
.*                                                             @G860PSS 00480605
.*              THE WPL IS GENERATED BY THIS MACRO IN DIFFERENT    @L2A 00480705
.*              FORMATS DEPENDING ON THE KEYWORDS PROVIDED.        @L2A 00480805
.*              A STANDARD WPL IS GENERATED IF ONLY THE            @L2A 00480905
.*              FOLLOWING KEYWORDS ARE SPECIFIED: ROUTCDE(1-16),   @L2A 00481005
.*              DESC, MCSFLAG, MSGTYPE, AREAID.                    @L7C 00481105
.*              IF ANY OTHER KEYWORDS ARE SPECIFIED, A DIFFERENT   @L2A 00481205
.*              STRUCTURE (WPX - MAPPED BY IEZWPL) IS BUILT        @L2A 00481305
.*              FOLLOWING THE MESSAGE TEXT. FOR A MULTI-LINE       @L2A 00481405
.*              WTO, THE MINOR LINES FOLLOW THE WPX.               @L2A 00481505
.*                                                                      00481605
.*              IN ORDER TO SUPPORT ASSEMBLER F, THIS MACRO        @P4A 00481705
.*              MUST BE STRUCTURED SUCH THAT THERE ARE NO          @P4A 00481805
.*              INSTRUCTIONS MORE THAN 3 LINES IN LENGTH.          @P4A 00481905
.*                                                                      00482005
.*              THE LENGTH OF THE WPX IS SPECIFIED WITHIN THE      @LAA 00482105
.*              WPX. WHENEVER THE LENGTH OF THE WPX CHANGES,       @LAA 00482205
.*              THE VALUE OF THIS FIELD MUST ALSO CHANGE. THE      @LAA 00482305
.*              VERSION ID OF THE WPL CAN BE USED TO DETERMINE     @LAA 00482405
.*              THE METHOD TO USE TO ESTABLISH THE LENGTH OF       @LAA 00482505
.*              THE WPX.                                           @LAA 00482605
.*                                                                      00482705
.*              IF LINKAGE=BRANCH IS SPECIFIED THE CONTENTS OF     @L6A 00482805
.*              REGISTER 14 WILL BE DESTROYED.                     @L6A 00482905
.*                                                                      00483005
.********************************************************************** 00483105
.* C THE TEXT LENGTH FIELD FOR WTORS IS NOW ONE BYTE INSTEAD   @G860PSS 00483205
.*   OF TWO                                                    @G860PSS 00483305
.* C MAKE THE PL/S VERSION WORK                                @ZMC0828 00483405
.* A TEST FOR MVS SP LEVEL WHEN BUILDING PARM LIST             @G860PSS 00483505
.* C ALLOW MULTILINE HARDCOPY ONLY WTO                             @D1A 00483605
.* A 'CMD' MCSFLAG FOR OPERATOR COMMANDS                           @L1A 00483705
.* A MODIFY THE MACRO TO PROCESS WQEBLK, 128 ROUTING CODES,        @L2A 00483805
.*   CONSID, JOBID, KEY, TOKEN, SYSNAME, DOMID, JOBNAME,           @L2A 00483905
.*   MPF, SUBSMOD, PRTY, CONNECT AND MCSFLAG=BUSYEXIT              @L2A 00484005
.* C GENERATE WPX 4-BYTE FIELDS ON A BYTE BOUNDARY RATHER THAN     @P1A 00484105
.*   ON A FULLWORD BOUNDARY                                        @P1A 00484205
.* C ACCEPT WQEBLK FIELD NAMES CONTAINING THE PASSED WQE ITSELF    @P2A 00484305
.*   RATHER THAN THE ADDRESS OF THE PASSED WQE                     @P2A 00484405
.* C LIMIT MAX INSTRUCTION LENGTH TO 3 LINES TO SUPPORT ASM F      @P3A 00484505
.* C REFIX PA21155 SO WPX IS ALWAYS CORRECTLY GENERATED            @P4A 00484605
.* C ALLOW ROUTING CODE 41 TO BE SPECIFIED                     @YA10057 00484705
.* NO CODE CHANGES. REASSEM FOR PTF PACKAGING PROBLEM          @YA11509 00484805
.* C REDEFINE GLOBAL NAMES &LEN , &MCS , &WTOLEN   UNIQUELY    @YA17152 00484905
.* A MODIFY THE MACRO TO PROCESS THE CONSNAME AND REPLY CONSOLE    @L3A 00485005
.*   NAME ADDRESS(WTOR)                                            @L3A 00485105
.* C CONSNAME PARAMETER CORRECTED                                  @P5A 00485205
.* A MODIFY THE MACRO TO PROCESS CART                              @D2C 00485305
.* A MODIFY THE MACRO TO ACCEPT THE TEXT KEYWORD                   @L5A 00485405
.* C FIXED REPLY ADDRESS AND ECB ADDRESS ON WTOR STANDARD FORM     @P6A 00485505
.* C PUT BACK CODE TO INITIALIZE REPLY/ECB ADDRESS FOR WTOR        @P7A 00485605
.* C CHANGE GENERATED CODE FOR TEXT KEYWORD ON MULTI-LINE WTO      @P8A 00485705
.* C MODIFY THE MACRO TO PROCESS LINKAGE, SYNCH, AND  WSPARM       @L6A 00485805
.*   KEYWORDS                                                      @L6A 00485905
.* C ALLOW LINKAGE AND WSPARM TO BE NULL ON LIST FORM              @P9A 00486005
.* C UPDATE SYNCH=NO ON EXECUTE FORM                               @PAA 00486105
.* C INITIALIZE WSPARM WITH REAL VALUE ON INLINE FORM              @PBA 00486205
.* C DO NOT GENERATE A WPX FOR SYNCH=NO ON STANDARD FORM           @PCA 00486305
.* C DCR 124 - REMOVE UNIMPLEMENTED FUNCTION                       @D2A 00486405
.* C DOCUMENT RESTRICTIONS IN PROLOG                               @PFA 00486505
.* C ADD CHECKS FOR INLINE TEXT WHOSE LENGTHS EXCEED THE MAXIMUM   @PGA 00486605
.*   ALLOWED LENGTHS                                               @PGA 00486705
.* C ALLOW NULL VALUE FOR TEXT KEYWORD WHEN LIST FORM OF MACRO     @PIA 00486805
.*   IS SPECIFIED                                                  @PIA 00486905
.* C GENERATE VERSION 1 WPX IF NO NEW KYWDS USED                   @PJA 00487005
.* C ISSUE SEV 0 MNOTE FOR LINE TYPE DATA ON TEXT, EXEC FORM       @PKA 00487105
.* C ALWAYS GENERATE TEXT LENGTH OF 8 WHEN TEXT KEYWORD SPECIFIED  @PLA 00487205
.* C MNOTE SEVERITY FROM 4 TO 0 IN TRUNCATED LINES                 @PMA 00487305
.* C MISSED ONE MNOTE ON PREVIOUS CHANGE                           @PNA 00487405
.* C DON'T SET ROUTECODE 2 AS A DEFAULT IF ONLY MSGTYP SPECIFIED   @02A 00487505
.* C CHANGE LABEL MLWX09 TO MLW09                                  @03A 00487605
.* C TEXT KEYWORD ISSUANCE OF *LINE TYPE ON EXECUTE FORM IGNORED*  @04A 00487705
.*   MESSAGE ISSUED INCORRECTLY ON MULTILINE INVOCATIONS           @04A 00487805
.* C GENERATE VERSION 2 WPX WHEN BUSYEXIT IS SPECIFIED WITH NEW    @05A 00487905
.*   VERSION 4 KEYWORDS                                            @05A 00488005
.* C Support TEXT=(line,line-type).  The pubs document this as     @06A 00488105
.*   supported, but an assembler error occurs if it is coded.      @06A 00488205
.* C Correct mutually exclusive information for CONSNAME in prolog @POA 00488305
.* C Add ASCB parameter to PLAS version. Control program use only  @PPA 00488405
.* C Corrections when TEXT keyword, multiline, but only 1 line     @PQA 00488505
.*   and 1 set of parentheses. FIN of APAR OW30888.                @PQA 00488605
.* C Use the correct expression for the second number of a         @07A 00488705
.*   substring when looking at the ROUTCDE keyword.                @07A 00488805
.* C Remove support for QID and add MNOTE for MCSFLAG=BUSYEXIT     @L7A 00488905
.* C Routing code 29 is no longer reserved.                        @PRA 00489005
.* C For TEXT=(address,linetype) in execute form, check linetype   @08A 00489105
.*   valid before issuing sev 0 mnote. If linetype invalid, it     @08A 00489205
.*   is probably miscoded as TEXT=(address1,address2). Issue a     @08A 00489305
.*   high severity mnote.                                          @08A 00489405
.* C Remove support for MCSFLAG=REG0 and QREG0. If they are        @L8A 00489505
.*   specified, reject with an MNOTE of severity 12.               @L8A 00489605
.* C Change version number from 5694-A01 to 5637-A01.              @PSA 00489705
.* C Valid linetypes on execute form should have MNOTE0, not 12    @PUA 00489808
.*   FIN of OA58233                                                @PUA 00489908
.********************************************************************** 00490005
.*       GLOBAL DECLARATIONS                                            00490105
.********************************************************************** 00490205
         GBLA  &IHBLEN               MESSAGE LENGTH FIELD, WTO @YA17152 00490305
         GBLB  &IHBWTL               GLOBAL WTL INDICATOR               00490405
         GBLB  &IHBWTOR              GLOBAL WTOR INDICATOR              00491005
         GBLB  &IHBMCS               MCS FLAGS ARE TO BE SET   @YA17152 00492005
         GBLB  &SWM                  MSGTYPE FLAGS ARE TO BE SET   @L2A 00493005
         GBLB  &IWPXBIT              A WPX IS TO BE BUILT          @L2A 00494005
         GBLB  &IWQEBIT              A WQEBLK SETUP HAS OCCURRED   @L2A 00495005
         GBLB  &WTOERR               INDICATOR FOR WTOR THAT WTO       X00496005
                                     A TERMINATING MNOTE           @L2A 00497005
         GBLB  &RAREG                REPLY ADDRESS IN REGISTER BIT @L2A 00498005
         GBLB  &RLREG                REPLY LENGTH IN REGISTER BIT  @L2A 00499005
         GBLB  &EAREG                ECB ADDRESS IN REGISTER BIT   @L2A 00500005
         GBLB  &RCNREG               REPLY CONSOLE NAME/ID ADDRESS     X00501005
                                     IN REGISTER BIT               @L3A 00502005
         GBLB  &RCNSPEC              REPLY CONSOLE NAME/ID ADDRESS     X00503005
                                     KEYWORD SPECIFIED             @L3A 00504005
         GBLB  &MLW                  MULTI-LINE WTO SPECIFIED      @L6C 00505005
         GBLC  &IWPXVER              VERSION OF WPX TO BUILD       @PJA 00506005
         GBLC  &WTORYA               REPLY ADDRESS (WTOR)          @L2A 00507005
         GBLC  &WTOECB               ECB ADDRESS (WTOR)            @L2A 00508005
         GBLC  &WTOLENR              REPLY BUFFER LENGTH(WTOR) @YA17152 00509005
         GBLC  &WTORCN               REPLY CONSOLE NAME/ID ADDRESS @L3A 00510005
         GBLC  &SYSSPLV              SYSTEM PRODUCT LEVEL      @G860PSS 00511005
         GBLC  &CD(16)               DC FIELDS SAVEAREA            @L2A 00511105
         GBLC  &GNAME                LABEL NAME                    @L2A 00511205
         GBLC  &VALH                 INDIVIDUAL MINOR LINE ENTRY   @L5A 00511305
         GBLC  &VALH1                TEXT ADDRESS PORTION OF VALH  @L5A 00511405
         GBLC  &VALH2                LINE TYPE PORTION OF VALH     @L5A 00511505
.********************************************************************** 00511605
.*       LOCAL DECLARATIONS                                             00511705
.********************************************************************** 00511805
         LCLA  &H,&I,&N,&J           COUNTERS/SAVEAREAS            @L2C 00511905
         LCLA  &LLCNT                TOTAL NUMBER OF LINES IN MULTI-   X00512005
                                     LINE WTO                      @L2A 00513005
         LCLA  &RCLEN                ROUTING CODE ELEMENT LENGTH   @P3C 00514005
         LCLA  &I1                   ROUTING CODE ELEMENT COUNTER  @L2A 00515005
         LCLA  &K                    ROUTING CODE UPPER RANGE      @L2A 00516005
         LCLA  &MLINDX               WORKING NUMBER OF LINES IN MULTI- X00517005
                                     LINE WTO                      @L5A 00518005
         LCLA  &MLTTIND              OFFSET INTO MLWTO PARMLIST FOR    X00519005
                                     LINE TYPE INDICATORS          @L5A 00520005
         LCLB  &MISCFLG(8)           MISCELLANEOUS FLAGS SAVEAREA  @L2A 00530005
         LCLB  &EMCS(16)             EXTENDED MCSFLAGS SAVEAREA    @L2A 00540005
         LCLA  &LT(256)              LINE TYPE FLAGS FIELD       X02007 00550005
         LCLB  &NODFLT               DO NOT SET ROUTING CODE DEFAULT    00560005
         LCLB  &B(16),&AD,&E,&E1,&E2,&E3,&E4,&E5,&E6               @L2C 00570005
         LCLB  &RB(128)              ROUTING CODE BIT FIELD        @L2A 00571005
         LCLB  &RSVDMNT              BIT INDICATING RESERVED ROUTING   X00572005
                                     CODES WERE SPECIFIED          @L2A 00573005
         LCLB  &SECONDL              PROCESSED FIRST LINE OF MLWTO      00574005
         LCLC  &EM(2)                EXTENDED MCSFLAGS DC FIELD    @L2A 00575005
         LCLB  &PAIR                 DOUBLE CHAR FOUND IN TEXT   X02007 00576005
         LCLC  &DCFLGS               MISCELLANEOUS FLAGS DC FIELD  @L2A 00577005
         LCLC  &RNIBBLE              ROUTING CODE CONVERSION FIELD @L2A 00578005
         LCLC  &DCRC                 ROUTING CODE DC FIELD         @L2A 00579005
         LCLC  &CFLG(17)             VALUE TABLE                   @L2C 00580005
         LCLC  &LOW,&HIGH            ROUTING CODE RANGE VALUES     @L2A 00590005
         GBLC  &ILMEQU               INLINE MESSAGE TEXT VALUE     @L6A 00600005
         LCLC  &ILTEQU               INLINE LINETYPE VALUE         @L6A 00610005
         LCLA  &NUMML                COUNTER FOR TOTAL NUMBER OF LINES +00620005
                                     IN A MULTILINE MESSAGE        @L6A 00630005
         LCLA  &NUMARG               NUMBER OF ARGUMENTS IN AN INLINE  +00640005
                                     VALUE                         @L6A 00650005
         LCLA  &MAXLINS              MAXIMUM NUMBER OF LINES OF TEXT   +00660005
                                     ALLOWED WITH SYNCH=YES        @L6A 00670005
         LCLA  &MAXCLLN              MAXIMUM INLINE LENGTH OF A        +00680005
                                     CONTROL LINETYPE TEXT LINE    @PGA 00690005
         LCLA  &MAXMLLN              MAXIMUM INLINE LENGTH OF ANY      +00700005
                                     OTHER MULTI-LINE TEXT LINE    @PGA 00710005
         LCLA  &MAXSLLN              MAXIMUM LENGTH OF INLINE TEXT     +00720005
                                     ON A SINGLE LINE WTO          @PGA 00730005
         LCLA  &MAXSRLN              MAXIMUM LENGTH OF INLINE TEXT     +00731005
                                     ON A SINGLE LINE WTOR         @PGA 00732005
         LCLA  &LTINDEX              INDEX USED WHEN VERIFYING LINE    +00732105
                                     TYPES                         @PUA 00732205
         LCLB  &SYNN                 SYNCH TO BE TURNED OFF        @PAA 00733005
         LCLB  &LTWARN               LINE TYPE WARNING ISSUED      @PKA 00734005
         LCLC  &L,&LR                                              @MXA 00735005
         GBLC  &SYSAM64                                            @MXA 00736005
         SYSSTATE TEST                                             @MXA 00737005
         AIF   ('&SYSAM64' EQ 'YES').AM640                         @MXA 00738005
&L       SETC  'L'                                                 @MXA 00739005
&LR      SETC  'LR'                                                @MXA 00740005
         AGO   .AM31640                                            @MXA 00741005
.AM640   ANOP                                                      @MXA 00742005
&L       SETC  'LLGT'                                              @MXA 00743005
&LR      SETC  'LGR'                                               @MXA 00744005
.AM31640 ANOP                                                      @MXA 00744105
         ACTR  30000                 INITIALIZE LOOP INHIBITOR     @L2C 00744205
         AIF   (&IHBWTOR).LBL1      IF INVOKED BY WTOR, USE THE LABEL  X00744305
                                    GENERATED BY THE WTOR MACRO    @L2A 00744405
&GNAME   SETC  'IHB'.'&SYSNDX'      SET LABEL NAME                      00744505
.LBL1    ANOP                       LABEL NAME PROPERLY SET        @L2A 00744605
&IWPXBIT SETB  0                    INITIALIZE WPX INDICATOR       @L2A 00744705
&IWPXVER SETC  '1'                  INITIALIZE WPX VERSION         @PJC 00744805
&IWQEBIT SETB  0                    INITIALIZE WQEBLK INDICATOR    @L2A 00744905
&WTOERR  SETB  0                    INITIALIZE SEVERE MNOTE BIT    @L2A 00745005
&MAXLINS SETA  14                   MAXIMUM NUMBER OF LINES OF TEXT    +00746005
                                    ALLOWED WITH SYNCH=YES         @L6A 00747005
&MAXSLLN SETA  126                  MAXIMUM LENGTH OF INLINE TEXT      +00748005
                                    ON A SINGLE LINE WTO           @PHM 00749005
&MAXSRLN SETA  122                  MAXIMUM LENGTH OF INLINE TEXT      +00750005
                                    ON A SINGLE LINE WTOR          @PHM 00760005
         AIF   (&IHBWTOR).WTOROK    IF THIS WAS FROM WTOR, SET         +00770005
                                    MAXIMUM LINE LENGTHS TO ACCOUNT    +00780005
                                    FOR REPLY IDS                  @PHA 00790005
&MAXCLLN SETA  35                   MAXIMUM INLINE LENGTH OF A         +00800005
                                    CONTROL LINETYPE TEXT LINE     @PGA 00810005
&MAXMLLN SETA  71                   MAXIMUM INLINE LENGTH OF ANY       +00820005
                                    OTHER MULTI-LINE TEXT LINE     @PGA 00830005
         AGO   .WTORNO              NOT WTOR                       @PHA 00840005
.WTOROK  ANOP                       WTO CALLED FROM WTOR           @PHA 00850005
&MAXCLLN SETA  31                   MAXIMUM INLINE LENGTH OF A WTOR    +00860005
                                    CONTROL LINETYPE TEXT LINE     @PHA 00870005
&MAXMLLN SETA  67                   MAXIMUM INLINE LENGTH OF ANY       +00880005
                                    OTHER MULTI-LINE TEXT LINE     @PHA 00890005
.WTORNO  ANOP                       SKIP HERE IF NOT WTOR          @PHA 00900005
.********************************************************************** 00901005
.*                                                                 @L2A 00902005
.*       CHECK FOR SPECIFICATION OF THE WQEBLK KEYWORD.            @L2A 00903005
.*       IF SPECIFIED, VERIFY THAT NO OTHER KEYWORDS HAVE          @L2A 00904005
.*       BEEN SPECIFIED. THIS CHECK AUTOMATICALLY ENSURES          @L2A 00905005
.*       THAT THE STANDARD FORM IS BEING USED.                     @L2A 00906005
.*                                                                 @L2A 00907005
.********************************************************************** 00907105
         AIF   ('&WQEBLK' EQ '^').NOWQEB  IF NO WQEBLK, CHECK FOR      X00907205
                                          KEYWORD ERRORS           @L2A 00907305
         AIF   ('&MESG'    NE ''  OR  '&MF'      NE 'I' OR             X00907405
                '&ROUTCDE' NE ''  OR  '&DESC'    NE ''  OR             X00907505
                                      '&AREAID'  NE '').BADWQEB    @L7C 00907605
         AIF   ('&MSGTYP'  NE ''  OR  '&MCSFLAG' NE ''  OR             X00907705
                '&SUBSMOD' NE ''  OR                                   X00907805
                '&CONSID'  NE '^' OR  '&CONNECT' NE '^').BADWQEB   @D2C 00907905
         AIF   ('&JOBID'   NE '^' OR                                   X00908005
                '&JOBNAME' NE '^' OR  '&SYSNAME' NE '^' OR             X00909005
                '&PRTY'    NE '^' OR  '&KEY'     NE '^').BADWQEB   @01C 00909105
         AIF   ('&LINKAGE' NE '^' OR  '&SYNCH'   NE '^' OR             +00909205
                '&WSPARM'  NE '^').BADWQEB                         @L6A 00909305
         AIF   ('&TOKEN'   EQ '^' AND '&CONSNAME' EQ '^' AND           X00909405
                '&CART'    EQ '^' AND '&TEXT'    EQ '^').WQEONLY       X00909505
                                               WQEBLK SPECIFIED.   @L5C 00909605
.BADWQEB ANOP                           MUTUALLY EXCLUSIVE ERROR   @P4A 00909705
         MNOTE 12,'NO TEXT GENERATED. ''WQEBLK'' IS MUTUALLY EXCLUSIVE X00909805
               WITH ALL OTHER KEYWORDS.'                           @L2A 00909905
&WTOERR  SETB  1                        A SEVERE MNOTE WAS ISSUED  @L2A 00910005
         AGO   .END                     DONE WITH MACRO PROCESSING @L2A 00910105
.WQEONLY ANOP                           WQEBLK IS ONLY KEYWORD     @L2A 00910205
         AIF   ('&WQEBLK' NE '').WQEDATA VERIFY DATA SPECIFIED     @L2A 00910305
         MNOTE 12,'''WQEBLK'' KEYWORD IGNORED. NO VALUE SPECIFIED.'    X00910405
                                                                   @L2A 00910505
&WTOERR  SETB  1                        A SEVERE MNOTE WAS ISSUED  @L2A 00910605
         AGO   .END                     DONE WITH MACRO PROCESSING @L2A 00910705
.WQEDATA ANOP                           WQEBLK DATA SPECIFIED      @L2A 00910805
.********************************************************************** 00910905
.*                                                                 @L2A 00911005
.*       PUT WQEBLK INFORMATION INTO REGISTER 0.                   @L2A 00911105
.*                                                                 @L2A 00911205
.********************************************************************** 00911305
         AIF   ('&WQEBLK'(1,1) EQ '(').WBREG  BRANCH IF IN REG     @L2A 00911405
         LA    0,&WQEBLK(1)             PUT WQE ADDRESS INTO REG 0 @P2C 00911505
         AGO   .WBPLIST                 GO ISSUE SVC 35            @L2A 00911605
.WBREG   AIF   ('&WQEBLK'(2,1) EQ '0' OR                               X00911705
                '&WQEBLK'(2,2) EQ 'R0').WBPLIST SKIP LOAD IF ALREADY   X00911805
                                        IN REGISTER 0              @L2A 00911905
         LR    0,&WQEBLK(1)             PUT WQE ADDRESS INTO REG 0 @L2A 00912005
.* GENERATE THE PARAMETER LIST FOR A WQEBLK INVOCATION             @L2A 00912105
.* AND PUT THE ADDRESS OF THE PASSED WQE INTO REGISTER 0           @L2A 00912205
.WBPLIST ANOP                           GENERATE PLIST FOR WQEBLK  @L2A 00912305
         CNOP  0,4                      SET UP PARAMETER LIST      @L2A 00912405
&NAME    BRAS  1,&GNAME.A                                          @LCC 00912505
         DC    AL2(4)                   MESSAGE LENGTH FIELD       @L2A 00912605
         DC    B'0000000000000010'      MCSFLAGS FIELD             @L2A 00912705
&IWQEBIT SETB  1                        INDICATE WQEBLK WAS SET    @L2A 00912805
&GNAME.A DS    0H                                                  @L2A 00912905
         AGO   .EXECUTE                 ISSUE SVC 35 OR BRANCH ENTRY   +00913005
                                        WTO                        @L6C 00914005
.********************************************************************** 00914105
.*                                                                 @L2A 00914205
.*       THE WQEBLK KEYWORD WAS NOT SPECIFIED.                     @L2A 00914305
.*       CHECK FOR THE FOLLOWING TERMINATING ERROR SITUATION:      @L2A 00914405
.*        - LINKAGE KEYWORD ISSUED WITH INVALID ARGUMENT           @L6A 00914505
.*                                                                 @L6A 00914605
.********************************************************************** 00914705
.NOWQEB  ANOP                     WQEBLK NOT SPECIFIED             @L6A 00914805
         AIF   ('&LINKAGE' EQ '^').CHKSYNC       LINKAGE NOT NAMED @L6A 00914905
         AIF   ('&MF(1)' EQ 'L' AND                                    +00915005
                '&LINKAGE' EQ '').CHKSYNC     NULL OK W/LIST FORM  @P9A 00915105
         AIF   ('&LINKAGE(1)' NE 'SVC' AND                             +00915205
                '&LINKAGE(1)' NE 'BRANCH').ERROR1  LINKAGE SPECIFIED   +00915305
                                                WITH INVALID VALUE @L6A 00915405
         AIF   (N'&LINKAGE LE 1 AND                                    +00915505
                N'&LINKAGE(1) LE 1).CHKSYNC     MORE THAN ONE OPERAND  +00915605
                                                  SPECIFIED?       @L6A 00915705
         MNOTE 4,'*** ''LINKAGE=&LINKAGE'' IS TOO LONG.'           @L6A 00915805
         MNOTE '    ARGUMENTS ARE IGNORED AFTER ''&LINKAGE(1)''.'  @L6A 00915905
.********************************************************************** 00916005
.*       CHECK FOR THE FOLLOWING TERMINATING ERROR SITUATIONS:     @L6A 00916105
.*        - SYNCH KEYWORD ISSUED WITH INVALID ARGUMENT             @L6A 00916205
.*        - SYNCH ARGUMENT YES WITHOUT REQUIRED LINKAGE=BRANCH     @L6A 00916305
.*                ON STANDARD OR EXECUTE FORM                      @P9A 00916405
.*        - SYNCH = YES MUTUALLY EXCLUSIVE WITH CONNECT, AREAID,   @L6A 00916505
.*           PRTY, AND WQEBLK KEYWORDS                             @L6A 00916605
.*        - SYNCH = YES MUTUALLY EXCLUSIVE WITH MCSFLAG=HRDCPY     @L6A 00916705
.********************************************************************** 00916805
.CHKSYNC ANOP                                                      @L6A 00916905
         AIF   ('&SYNCH' EQ '^').CHKWSPR       SYNCH NOT NAMED     @L6A 00917005
         AIF   ('&SYNCH(1)' NE 'YES' AND                               +00917105
                '&SYNCH(1)' NE 'NO').ERROR3    SYNCH SPECIFIED WITH    +00917205
                                               WITH INVALID VALUE  @L6A 00917305
         AIF   (N'&SYNCH LE 1 AND                                      +00917405
                N'&SYNCH(1) LE 1).CHKSYN1      MORE THAN ONE OPERAND   +00917505
                                               SPECIFIED?          @L6A 00917605
         MNOTE 4,'*** ''SYNCH=&SYNCH'' IS TOO LONG.'               @L6A 00917705
         MNOTE '    ARGUMENTS ARE IGNORED AFTER ''&SYNCH(1)''.'    @L6A 00917805
.CHKSYN1 ANOP                                                      @L6A 00917905
         AIF   ('&SYNCH(1)' EQ 'NO').CHKWSPR   IF SYNCH^=YES THEN SKIP +00918005
                                               LINKAGE AND MUTUALLY    +00918105
                                               EXCLUSIVE CHECKS    @L6A 00918205
         AIF   ('&LINKAGE(1)' NE 'BRANCH'  AND                         +00918305
                '&MF(1)' NE 'L').ERROR4        LINKAGE WRONG       @P9C 00918405
         AIF   ('&CONNECT' NE '^' OR '&AREAID' NE '').ERROR5           +00918505
                                               CHECK FOR MUTUALLY      +00918605
                                               EXCLUSIVE KEYWORDS  @L6A 00918705
.********************************************************************** 00918805
.*       CHECK FOR THE FOLLOWING TERMINATING ERROR SITUATIONS:     @L6A 00918905
.*        - WSPARM KEYWORD ISSUED WITHOUT AN ARGUMENT- INLINE FORM @PAC 00919005
.*        - WSPARM SPECIFIED WITH VALUE OTHER THAN 0 AND           @L6A 00919105
.*            SYNCH^='YES'                                         @L6A 00919205
.********************************************************************** 00919305
.CHKWSPR ANOP                                                      @L6A 00919405
         AIF   ('&WSPARM' EQ '^').CHKCONN      WSPARM NOT NAMED    @L6A 00919505
         AIF   ('&MF(1)' EQ 'L' AND                                    +00919605
                '&WSPARM' EQ '').CHKCONN      NULL OK W/LIST FORM  @P9A 00919705
         AIF   ('&MF(1)' EQ 'E' AND                                    +00919805
                '&WSPARM' EQ '').CHKCONN    EXEC FORM HAS OWN MSG  @PAC 00919905
         AIF   ('&WSPARM(1)' EQ '').ERROR7     WSPARM KEYWORD SPECIFIED+00920005
                                               WITHOUT AN ARGUMENT @L6A 00920105
         AIF   ('&WSPARM(1)' NE '0' AND '&SYNCH(1)' NE 'YES').ERROR8   +00920205
                                               TEST FOR REQUIRED KEY-  +00920305
                                               WORDS W/ WSPARM^=0  @L6A 00920405
         AIF   (N'&WSPARM LE 1 AND                                     +00920505
                N'&WSPARM(1) LE 1).CHKCONN     MORE THAN ONE OPERAND   +00920605
                                               SPECIFIED?          @L6A 00920705
         MNOTE 4,'*** ''WSPARM=&WSPARM'' IS TOO LONG.'             @L6A 00920805
         MNOTE '    ARGUMENTS ARE IGNORED AFTER ''&WSPARM(1)''.'   @L6A 00920905
.********************************************************************** 00921005
.*       CHECK FOR THE FOLLOWING TERMINATING ERROR SITUATION:      @L6A 00921105
.*        - CONNECT KEYWORD MUTUALLY EXCLUSIVE WITH THE SYSNAME,   @L2A 00921205
.*                    CONSID AND CONSNAME                          @01C 00921305
.*                                                                 @L2A 00921405
.********************************************************************** 00921505
.CHKCONN ANOP                     CHECK FOR CONNECT KEYWORD        @L6A 00921605
         AIF   ('&CONNECT' EQ '^').CONNOK BRANCH IF NO CONNECT     @L2A 00921705
         AIF   ('&CONSID' NE '^' OR '&SYSNAME' NE '^' ).BADCON     @01C 00921805
         AIF   ('&CONSNAME' EQ '^').TEXTK  VERIFY CONNECT NOT ISSUED   X00921905
                              WITH THESE KEYWORDS.. IF NO CONSNAME,    X00922005
                              SKIP OVER CONSNAME ERROR CHECK       @L5A 00922105
.BADCON  ANOP                                                      @L2A 00922205
         MNOTE 12,'NO TEXT GENERATED. ''CONNECT'' IS MUTUALLY EXCLUSIVEX00922305
               WITH THE CONSID, SYSNAME, AND CONSNAME KEYWORDS.'   @01C 00922405
&WTOERR  SETB  1                        A SEVERE MNOTE WAS ISSUED  @L2A 00922505
         AGO   .END                  TERMINATE MACRO PROCESSING    @L3C 00922605
.********************************************************************** 00922705
.*                                                                 @L3A 00922805
.*       THE CONNECT KEYWORD HAS NO ERRORS OR WAS NOT SPECIFIED    @L5C 00922905
.*       CHECK FOR THE FOLLOWING TERMINATING ERROR SITUATION:      @L3A 00923005
.*        - CONSID KEYWORD MUTUALLY EXCLUSIVE WITH THE CONSNAME    @L3A 00923105
.*                                                                 @L3A 00923205
.********************************************************************** 00923305
.CONNOK  ANOP                     NO CONNECT KEYWORD SPECIFIED     @L3A 00923405
         AIF   ('&CONSID' EQ '^').TEXTK  BRANCH IF NO CONSID       @L5C 00923505
         AIF   ('&CONSNAME' EQ '^').TEXTK    CONSID SPECIFIED. VERIFY  X00923605
                                          CONSNAME NOT SPECIFIED.  @L5C 00923705
         MNOTE 12,'NO TEXT GENERATED. ''CONSID'' IS MUTUALLY EXCLUSIVE X00923805
               WITH THE CONSNAME KEYWORD.'                         @L3A 00923905
&WTOERR  SETB  1                        A SEVERE MNOTE WAS ISSUED  @L3A 00924005
         AGO   .END                  TERMINATE MACRO PROCESSING    @L3A 00924105
.******************************************************************@L5A 00924205
.*                                                                 @L5A 00924305
.*       THE CONSID KEYWORD HAS NO ERRORS OR WAS NOT SPECIFIED.    @L5A 00924405
.*       CHECK FOR THE FOLLOWING TERMINATING ERROR SITUATIONS:     @L5A 00924505
.*       - TEXT KEYWORD MUTUALLY EXCLUSIVE WITH INLINE TEXT.       @L5A 00924605
.*                                                                 @L5A 00924705
.******************************************************************@L5A 00924805
.TEXTK   ANOP                        TEXT SPECIFIED                @L5A 00924905
.********************************************************************** 00925005
.*       IF BOTH TEXT AND INLINE TEXT ARE SPECIFIED, ISSUE AN      @L5A 00925105
.*       ERROR MESSAGE.                                            @L5A 00925205
.********************************************************************** 00925305
         AIF   ('&TEXT' EQ '^' OR '&MESG' EQ '').CHCKMF            @L5A 00925405
         MNOTE 12,'NO TEXT GENERATED. ''TEXT'' AND INLINE TEXT ARE MUTUX00925505
               ALLY EXCLUSIVE.'      ISSUE ERROR MESSAGE           @L5A 00925605
&WTOERR  SETB  1                     A SEVERE MNOTE WAS ISSUED     @L5A 00925705
         AGO   .END                  TERMINATE MACRO PROCESSING    @L5A 00925805
.CHCKMF  ANOP                        NO CONNECT/KEYWORDS ERROR     @L3A 00925905
         AIF   ('&TEXT' EQ '^').NOTTEXT   IF TEXT KEYWORD SPECIFIED,   X00926005
                                     USE IT FOR MLWTO CHECK        @L5A 00926105
&MLW     SETB  (N'&TEXT GT 1 OR N'&TEXT(1) GT 1) INDICATE IF THIS      X00926205
                                     IS A MULTI-LINE WTO           @PIC 00926305
         AIF   (&MLW EQ 0).NOTMLW    If not a multiline, move on   @PQA 00926405
         AIF   (N'&TEXT EQ 1).MLW1   If TEXT=textaddr , or,        @PQA 00926505
         AIF   (N'&TEXT EQ 2 AND N'&TEXT(2) LT 2).MLW1 If this is  @PQAX00926605
                                     TEXT=(textaddr,linetype)      @PQAX00926705
                                     then this has only one line   @PQA 00926805
&NUMML   SETA  N'&TEXT               Total number of lines         @PQA 00926905
         AGO   .NOTMLW                                             @PQA 00927005
.MLW1    ANOP                                                      @PQA 00927105
&NUMML   SETA  1                     This has one line of text     @PQA 00927205
.NOTMLW  ANOP                                                      @PQA 00927305
.NOTTEXT ANOP                        NO CONNECT/KEYWORDS ERROR     @L3A 00927405
         AIF    ('&MF' EQ 'I' OR '&MF' EQ 'L').NUMCHK  CHECK FOR LIST  X00927505
                                     OR STANDARD FORM              @L2C 00927605
.********************************************************************** 00927705
.*                                                                      00927805
.*       NEITHER LIST NOR STANDARD FORM SPECIFIED. VERIFY THIS IS       00927905
.*       EXECUTE FORM AND THAT IT WAS PROPERLY SPECIFIED.               00928005
.*                                                                      00928105
.********************************************************************** 00928205
         AIF   (N'&MF EQ 2 AND '&MF(1)' EQ 'E').EXVALID  VERIFY VALID  X00928305
                                     EXECUTE MF STRUCTURE USED     @L2C 00928405
.********************************************************************** 00928505
.*       ISSUE ERROR MESSAGE:                                  @G860PSS 00928605
.* 12,INVALID MF OPERAND SPECIFIED-MF                          @G860PSS 00928705
.********************************************************************** 00928805
         IHBERMAC 35,,&MF                                               00928905
         MEXIT                                                          00929005
.********************************************************************** 00929105
.*                                                             @G860PSS 00929205
.*       EXECUTE FORM VALIDLY SPECIFIED. CHECK FOR             @G860PSS 00929305
.*       SPECIFICATION OF RUN-TIME PARAMETERS. (AN EXECUTE FORM    @L2C 00929405
.*       INVOCATION CAN ONLY REPRESENT A WTO BECAUSE THE WTOR      @L2A 00929505
.*       MACRO DOES ITS OWN EXECUTE FORM PROCESSING.)              @L2A 00929605
.*                                                             @G860PSS 00929705
.********************************************************************** 00929805
.EXVALID ANOP                        EXECUTE FORM VALIDLY USED     @L2A 00929905
&NAME    IHBINNRR &MF(2)             SET UP PARAMETER LIST ADDRESS @MXC 00930005
.********************************************************************** 00940005
.*       ALL DONE IF WTL                                       @G860PSS 00950005
.********************************************************************** 00951005
         AIF   (&IHBWTL).END         IF WTL, GO TO END OF MACRO         00952005
.********************************************************************** 00953005
.*       CHECK FOR EXCESSIVE MULTIPLE LINES WITH SYNCH=YES.        @L6A 00954005
.*       THE MAXIMUM NUMBER OF LINES ALLOWED WHEN SYNCH=YES IS     @L6A 00955005
.*       DEFINED IN THE VARIABLE &MAXLINS                          @L6A 00956005
.********************************************************************** 00957005
         AIF   ('&SYNCH(1)' EQ 'YES' AND                               +00958005
                 N'&SYSLIST GT &MAXLINS).ERROR2     TOO MANY LINES FOR +00959005
                                                    SYNCH=YES      @L6A 00960005
         AIF   ('&SYNCH(1)' EQ 'YES' AND                               +00970005
                 N'&TEXT GT &MAXLINS).ERROR2        TOO MANY LINES FOR +00980005
                                                    SYNCH=YES      @L6A 00990005
.********************************************************************** 01000005
.*       IF THE TEXT KEYWORD IS SPECIFIED, INSERT THE KEYWORD      @L5A 01010005
.*       VALUE INTO THE PARAMETER LIST IN PLACE OF INLINE          @L5A 01011005
.*       MESSAGE TEXT.                                             @L5A 01012005
.********************************************************************** 01013005
.ETEXTID ANOP                           CHECK FOR TEXT                  01013105
         AIF   ('&TEXT' EQ '^').SETTEST SKIP DOWN IF NO TEXT       @L5A 01013205
         AIF   ('&TEXT' NE '').ETEXTDT  VERIFY DATA SPECIFIED      @L5A 01013305
         MNOTE 4,'''TEXT'' KEYWORD IGNORED. NO VALUE SPECIFIED.'   @L5A 01013405
         AGO   .SETTEST                 NO TEXT - SKIP DOWN        @L5A 01013505
.ETEXTDT ANOP                           TEXT KEYWORD SPECIFIED     @L5A 01013605
.********************************************************************** 01013705
.*       SET UP REGISTER 14 TO TEMPORARILY POINT TO MESSAGE TEXT   @L5A 01013805
.*       AREA IN PARAMETER LIST TO STORE TEXT VALUE.               @L5A 01013905
.********************************************************************** 01014005
&EMCS(9) SETB  1                        INDICATE IN EXT MCSFLAGS2  @L5A 01014105
         AIF   (&MLW).ETEXTR2           BRANCH IF MULTILINE        @PQM 01014205
         AIF   ('&TEXT'(1,1) EQ '(').ETEXTRG BRANCH IF IN REGISTER @L5A 01014305
         LA    15,&TEXT(1)              LOAD TEXT VALUE            @L5A 01014405
         ST    15,4(0,1)                STORE TEXT ADDR INTO PLIST @L5A 01014505
         AGO   .SETREG                  SET UP POINTER TO PARMLIST @L5A 01014605
.ETEXTRG ANOP                           TEXT ADDRESS IN REGISTER   @L5A 01014705
         ST    &TEXT(1),4(0,1)          STORE TEXT ADDR INTO PLIST @L5A 01014805
         AGO   .SETREG                  SET UP POINTER TO PARMLIST @L5A 01014905
.ETEXTR2 ANOP                           MULTILINE W/VALUE IN REG   @L5A 01015005
&VALH    SETC  '&TEXT(1)'               Extract line               @PQA 01016005
&VALH1   SETC  '&TEXT(1,1)'             EXTRACT FIRST LINE'S ADDR  @L5A 01017005
         AIF   ('&VALH1' EQ '').SETREG  BRANCH IF NULL ENTRY       @L5A 01018005
         AIF   (N'&TEXT EQ 1).ETEXTLA   If there is only 1 param   @PUAX01018205
                                        there is no line type to   @PUAX01018305
                                        check                      @PUA 01018405
         AIF   (N'&TEXT NE 2 OR N'&TEXT(2) NE 1).LTCHECK           @PUA 01018505
.* Need to special case TEXT=(textaddr1,linetype)                       01018608
.* If a valid line type is specified just note it with an MNOTE 0  @PUA 01018708
         AIF   ('&TEXT(2)' EQ 'C').MN0 Linetype C ok               @08A 01019005
         AIF   ('&TEXT(2)' EQ 'L').MN0 Linetype L ok               @08A 01019105
         AIF   ('&TEXT(2)' EQ 'D').MN0 Linetype D ok               @08A 01019205
         AIF   ('&TEXT(2)' EQ 'DE').MN0 Linetype DE ok             @08A 01019305
         AIF   ('&TEXT(2)' EQ 'E').MN0 Linetype E ok               @08A 01019405
.* Specifying TEXT=(textaddr1,textaddr2) would not generate a           01019508
.* multiline WPL, so treat it like a bad line type.                @PUA 01019608
         MNOTE 12,'INVALID LINETYPE, GENERATION TERMINATED.'       @08A 01019907
         AGO   .END                                                     01020007
.LTCHECK ANOP                           Loop through all lines     @PUA 01020108
.*                                      of input allowing valid    @PUA 01020208
.*                                      line types, but rejecting  @PUA 01020308
.*                                      any other value specified  @PUA 01020408
.*                                      as the second input        @PUA 01020508
&LTINDEX SETA  1                                                   @PUA 01020605
.LTLOOP  AIF   (&LTINDEX GT N'&TEXT).ETEXTLA                       @PUA 01021005
         AIF   (N'&TEXT(&LTINDEX) EQ 1).LTINC    No line type      @PUA 01023306
         AIF   ('&TEXT(&LTINDEX,2)' EQ '').LTINC no linetype ok    @PUA 01023406
         AIF   ('&TEXT(&LTINDEX,2)' EQ 'C').MN0 Linetype C ok      @PUA 01023506
         AIF   ('&TEXT(&LTINDEX,2)' EQ 'L').MN0 Linetype L ok      @PUA 01023606
         AIF   ('&TEXT(&LTINDEX,2)' EQ 'D').MN0 Linetype D ok      @PUA 01023706
         AIF   ('&TEXT(&LTINDEX,2)' EQ 'DE').MN0 Linetype DE ok    @PUA 01023806
         AIF   ('&TEXT(&LTINDEX,2)' EQ 'E').MN0 Linetype E ok      @PUA 01023906
         MNOTE 12,'INVALID LINETYPE, GENERATION TERMINATED.'       @PUM 01024006
         AGO   .END                                                @PUM 01024106
.MN0     ANOP                           Linetype was valid but is  @08AX01024206
                                        ignored on execute form    @08A 01024306
         AIF   (&LTWARN).LTINC          Warning already issued     @0BA 01024407
         MNOTE 0,'LINE TYPE ON EXECUTE FORM IGNORED.'              @PQA 01024506
&LTWARN  SETB  1                        ISSUE WARNING ONCE ONLY    @PQA 01024706
.LTINC   ANOP                                                      @PUA 01024806
&LTINDEX   SETA  &LTINDEX+1                                        @PUA 01024906
         AGO   .LTLOOP                                             @PUA 01025006
.ETEXTLA ANOP                                                      @PQA 01025106
         AIF   (N'&TEXT EQ 2 AND N'&TEXT(2) LT 2).LN11 If this is  @08AX01025206
                                     TEXT=(textaddr,linetype)      @08AX01025306
                                     then need only one paren      @08AX01025406
                                     to indicate a register        @08A 01025506
         AIF   ('&VALH'(1,2) NE '((').ETEXTR4 BRANCH NOT REGISTER  @PQA 01025606
&VALH1   SETC  '&TEXT(1,1,1)'           Strip the parens off the       X01025706
                                        register specification     @PQC 01025806
         AGO   .REGTXT                  Text is a register         @PQA 01025906
.LN11    ANOP                           If one line only, will be      X01026006
                                        one paren for register     @PQA 01026106
         AIF   ('&VALH'(1,1) NE '(').ETEXTR4  BRANCH NOT REGISTER  @PQA 01026206
.REGTXT   ANOP                          Text is a register         @PQA 01026306
         ST    &VALH1,4(0,1)            STORE TEXT ADDRESS         @L5A 01026406
         AGO   .SETREG                  SET UP POINTER TO PARMLIST @L5A 01026506
.ETEXTR4 ANOP                                                      @L5A 01026606
         LA    15,&VALH1                LOAD ADDR OF TEXT FIELD    @P8C 01026706
         ST    15,4(0,1)                STORE TEXT ADDR INTO PLIST @P8A 01026806
         AGO   .SETREG                  SET UP POINTER TO PARMLIST @L5A 01026906
.********************************************************************** 01027006
.*       IF ANY OTHER RUN-TIME WPX KEYWORDS WERE SPECIFIED,        @L5C 01027106
.*       SET REGISTER 14 TO POINT TO THE FIRST BYTE AFTER          @L2A 01027206
.*       THE MESSAGE TEXT FIELD.                                   @L2A 01027306
.********************************************************************** 01027406
.SETTEST ANOP                                                      @L5A 01027506
         AIF   ('&PRTY'    NE '^' OR  '&CONSID'  NE '^' OR             X01027606
                '&JOBID'   NE '^' OR  '&JOBNAME' NE '^' OR             X01027706
                '&KEY'     NE '^' OR  '&TOKEN'   NE '^').SETREG    @P4C 01027806
         AIF   ('&SYSNAME' NE '^' OR                                   X01027906
                '&CONNECT' NE '^').SETREG                          @01C 01028006
         AIF   ('&WSPARM'  NE '^' OR  '&SYNCH(1)' NE '^').SETREG   @PAC 01028106
         AIF   ('&CONSNAME' EQ '^' AND '&CART' EQ '^').EXECUTE         X01028206
                              IF NO RUN-TIME WPX KEYWORDS SPECIFIED,   X01028306
                               SKIP RIGHT TO SVC                   @L7C 01028406
.SETREG  ANOP                                                      @P4A 01028506
         &LR   14,1                     FIRST BYTE OF PARM LIST    @L2A 01028606
         SR    15,15                    CLEAR REGISTER 15          @L2A 01028706
         AH    15,0(1,0)                ADD LENGTH OF TEXT + 4     @L2A 01028806
         AR    14,15                    FIRST BYTE AFTER TEXT      @L2A 01028906
.********************************************************************** 01029006
.*       IF THE PRTY KEYWORD IS SPECIFIED, INSERT IT INTO THE      @L2A 01029106
.*       PARAMETER LIST                                            @L2A 01029206
.********************************************************************** 01029306
         AIF   ('&PRTY' EQ '^').ECONS   SKIP DOWN IF NO PRTY       @L2A 01030005
         AIF   ('&PRTY' NE '').EPRTYDT    VERIFY DATA SPECIFIED    @L2A 01040005
         MNOTE 4,'''PRTY'' KEYWORD IGNORED. NO VALUE SPECIFIED.'   @L2A 01050005
         AGO   .ECONS                   GO CHECK CONSID            @L2A 01060005
.EPRTYDT ANOP                           DATA SPECIFIED             @L2A 01070005
&EMCS(6) SETB  1                        INDICATE IN EXT MCSFLAGS   @L2A 01080005
         AIF   ('&PRTY'(1,1) EQ '(').EPRTYRG BRANCH IF IN REG      @L2A 01090005
         MVC   42(2,14),&PRTY(1)        INSERT PRTY INTO PLIST     @L2A 01100005
         AGO   .ECONS                   GO CHECK CONSID            @L2A 01110005
.EPRTYRG STH   &PRTY(1),42(0,14)        INSERT PRTY INTO PLIST     @L2A 01120005
.********************************************************************** 01130005
.*       IF THE CONSID IS SPECIFIED, INSERT IT INTO THE            @L2A 01140005
.*       PARAMETER LIST                                            @L2A 01150005
.********************************************************************** 01160005
.ECONS   AIF   ('&CONSID' EQ '^').ECART   SKIP DOWN IF NO CONSID   @L4C 01170005
         AIF   ('&CONSID' NE '').ECONSDT  VERIFY DATA SPECIFIED    @L2A 01180005
         MNOTE 4,'''CONSID'' KEYWORD IGNORED. NO VALUE SPECIFIED.' @L2A 01190005
         AGO   .ECART                   GO CHECK CART              @L4C 01200005
.ECONSDT ANOP                           DATA SPECIFIED             @L2A 01210005
&EMCS(2) SETB  1                        INDICATE IN EXT MCSFLAGS   @L2A 01220005
         AIF   ('&CONSID'(1,1) EQ '(').ECONSRG  BRANCH IF IN REG   @L2A 01230005
         L     15,&CONSID(1)            LOAD CONSID                @L2A 01240005
         ST    15,72(0,14)              INSERT CONSID INTO PLIST   @L2A 01250005
         AGO   .ECART                   GO CHECK CART              @L4C 01260005
.ECONSRG ST    &CONSID(1),72(0,14)      INSERT CONSID INTO PLIST   @L2A 01270005
.********************************************************************** 01280005
.*       IF THE CART IS SPECIFIED, INSERT IT'S ADDRESS INTO THE    @L4A 01290005
.*       PARAMETER LIST                                            @L4A 01300005
.********************************************************************** 01310005
.ECART   AIF   ('&CART' EQ '^').ECNNAM    SKIP DOWN IF NO CART     @L4A 01320005
         AIF   ('&CART' NE '').ECARTDT    VERIFY DATA SPECIFIED    @L4A 01330005
         MNOTE 4,'''CART'' KEYWORD IGNORED. NO VALUE SPECIFIED.'   @L4A 01340005
         AGO   .ECNNAM                  GO CHECK CONSNAME          @L4A 01350005
.ECARTDT ANOP                           DATA SPECIFIED             @L4A 01360005
         AIF   ('&CART'(1,1) EQ '(').ECARTRG    BRANCH IF IN REG   @L4A 01370005
         LA    15,&CART(1)              LOAD CART ADDRESS          @L4A 01380005
         ST    15,96(0,14)              INSERT CART ADR INTO PLIST @L4A 01390005
         AGO   .ECNNAM                  GO CHECK CONSNAME          @L4A 01400005
.ECARTRG ST    &CART(1),96(0,14)        INSERT CART ADR INTO PLIST @L4A 01410005
.********************************************************************** 01420005
.*       IF THE CONSNAME IS SPECIFIED, INSERT IT INTO THE          @L3A 01430005
.*       PARAMETER LIST                                            @L3A 01440005
.********************************************************************** 01450005
.ECNNAM  AIF   ('&CONSNAME' EQ '^').EJOBID SKIP DOWN IF NO CONSNAME    X01451005
                                                                   @L3A 01452005
         AIF   ('&CONSNAME' NE '').ECNNADT VERIFY DATA SPECIFIED   @L3A 01453005
         MNOTE 4,'''CONSNAME'' KEYWORD IGNORED. NO VALUE SPECIFIED.'   X01454005
                                                                   @L3A 01455005
         AGO   .EJOBID                  GO CHECK KEY               @L3A 01456005
.ECNNADT ANOP                           DATA SPECIFIED             @L3A 01457005
&EMCS(7) SETB  1                                                   @L3A 01458005
         AIF   ('&CONSNAME'(1,1) EQ '(').ECNNARG BRANCH IF IN REG  @L3A 01459005
         MVC   84(8,14),&CONSNAME(1)    INSERT CONSNAME INTO PLIST @L3A 01460005
         AGO   .EJOBID                  GO CHECK KEY               @L3A 01460105
.ECNNARG MVC   84(8,14),0(&CONSNAME(1)) INSERT CONSNAME INTO PLIST @L3A 01460205
.********************************************************************** 01460305
.*       IF THE JOBID IS SPECIFIED, INSERT IT INTO THE             @L2A 01460405
.*       PARAMETER LIST                                            @L2A 01460505
.********************************************************************** 01460605
.EJOBID  AIF   ('&JOBID' EQ '^').EJOBN   SKIP DOWN IF NO JOBID     @L2A 01460705
         AIF   ('&JOBID' NE '').EJOBIDT  VERIFY DATA SPECIFIED     @L2A 01460805
         MNOTE 4,'''JOBID'' KEYWORD IGNORED. NO VALUE SPECIFIED.'  @L2A 01460905
         AGO   .EJOBN                   GO CHECK JOBNAME           @L2A 01461005
.EJOBIDT ANOP                           DATA SPECIFIED             @L2A 01461105
         AIF   ('&JOBID'(1,1) EQ '(').EJOBIRG  BRANCH IF IN REG    @L2A 01461205
         MVC   44(8,14),&JOBID(1)       INSERT JOBID INTO PLIST    @L2A 01461305
         AGO   .EJOBN                   GO CHECK JOBNAME           @L2A 01461405
.EJOBIRG MVC   44(8,14),0(&JOBID(1))    INSERT JOBID INTO PLIST    @L2A 01461505
.********************************************************************** 01461605
.*       IF THE JOBNAME IS SPECIFIED, INSERT IT INTO THE           @L2A 01461705
.*       PARAMETER LIST                                            @L2A 01461805
.********************************************************************** 01461905
.EJOBN   AIF   ('&JOBNAME' EQ '^').EKEY    SKIP DOWN IF NO JOBNAME @L2A 01462005
         AIF   ('&JOBNAME' NE '').EJOBNDT VERIFY DATA SPECIFIED    @L2A 01463005
         MNOTE 4,'''JOBNAME'' KEYWORD IGNORED. NO VALUE SPECIFIED.'    X01464005
                                                                   @L2A 01465005
         AGO   .EKEY                    GO CHECK KEY               @L2A 01466005
.EJOBNDT ANOP                           DATA SPECIFIED             @L2A 01467005
         AIF   ('&JOBNAME'(1,1) EQ '(').EJOBNRG  BRANCH IF IN REG  @L2A 01468005
         MVC   52(8,14),&JOBNAME(1)     INSERT JOBNAME INTO PLIST  @L2A 01469005
         AGO   .EKEY                    GO CHECK KEY               @L2A 01470005
.EJOBNRG MVC   52(8,14),0(&JOBNAME(1))  INSERT JOBNAME INTO PLIST  @L2A 01471005
.********************************************************************** 01472005
.*       IF THE KEY IS SPECIFIED, INSERT IT INTO THE               @L2A 01473005
.*       PARAMETER LIST                                            @L2A 01474005
.********************************************************************** 01475005
.EKEY    AIF   ('&KEY' EQ '^').ETOKEN   SKIP DOWN IF NO KEY        @L2A 01476005
         AIF   ('&KEY' NE '').EKEYDT    VERIFY DATA SPECIFIED      @L2A 01477005
         MNOTE 4,'''KEY'' KEYWORD IGNORED. NO VALUE SPECIFIED.'    @L2A 01478005
         AGO   .ETOKEN                  GO CHECK TOKEN             @L2A 01479005
.EKEYDT  ANOP                           DATA SPECIFIED             @L2A 01479105
         AIF   ('&KEY'(1,1) EQ '(').EKEYRG KEY IN REG?             @L2A 01479205
         MVC   60(8,14),&KEY(1)         INSERT KEY INTO PLIST      @L2A 01479305
         AGO   .ETOKEN                  GO ISSUE SVC               @L2A 01479405
.EKEYRG  MVC   60(8,14),0(&KEY(1))      INSERT KEY INTO PLIST      @L2A 01479505
.********************************************************************** 01479605
.*       IF THE TOKEN IS SPECIFIED, INSERT IT INTO THE             @L2A 01479705
.*       PARAMETER LIST                                            @L2A 01479805
.********************************************************************** 01479905
.ETOKEN  AIF   ('&TOKEN' EQ '^').ESYSN   SKIP DOWN IF NO TOKEN     @L2A 01480005
         AIF   ('&TOKEN' NE '').ETOKNDT VERIFY DATA SPECIFIED      @L2A 01481005
         MNOTE 4,'''TOKEN'' KEYWORD IGNORED. NO VALUE SPECIFIED.'  @L2A 01482005
         AGO   .ESYSN                   GO CHECK SYSNAME           @L2A 01483005
.ETOKNDT ANOP                           DATA SPECIFIED             @L2A 01484005
         AIF   ('&TOKEN'(1,1) EQ '(').ETOKNRG BRANCH IF IN REG     @L2A 01485005
         L     15,&TOKEN(1)             LOAD TOKEN                 @L2A 01486005
         ST    15,68(0,14)              INSERT TOKEN INTO PLIST    @L2A 01487005
         AGO   .ESYSN                   GO CHECK SYSNAME           @L2A 01488005
.ETOKNRG ST    &TOKEN(1),68(0,14)       INSERT TOKEN INTO PLIST    @L2A 01489005
.********************************************************************** 01490005
.*       IF THE SYSNAME IS SPECIFIED, INSERT IT INTO THE           @L2A 01491005
.*       PARAMETER LIST                                            @L2A 01492005
.********************************************************************** 01493005
.ESYSN   AIF   ('&SYSNAME' EQ '^').ECONN   SKIP DOWN IF NO SYSNAME @L2A 01494005
         AIF   ('&SYSNAME' NE '').ESYSNDT VERIFY DATA SPECIFIED    @L2A 01495005
         MNOTE 4,'''SYSNAME'' KEYWORD IGNORED. NO VALUE SPECIFIED.'    X01496005
                                                                   @L2A 01497005
         AGO   .ECONN                   GO CHECK CONNECT           @01C 01498005
.ESYSNDT ANOP                           DATA SPECIFIED             @L2A 01499005
         AIF   ('&SYSNAME'(1,1) EQ '(').ESYSNRG BRANCH IF IN REG   @L2A 01500005
         MVC   76(8,14),&SYSNAME(1)     INSERT SYSNAME INTO PLIST  @L2A 01501005
         AGO   .ECONN                   GO CHECK CONNECT           @01C 01502005
.ESYSNRG MVC   76(8,14),0(&SYSNAME(1))  INSERT SYSNAME INTO PLIST  @L2A 01503005
.********************************************************************** 01504005
.*       IF THE CONNECT ID IS SPECIFIED, INSERT IT INTO THE        @L2A 01505005
.*       PARAMETER LIST                                            @L2A 01506005
.********************************************************************** 01507005
.ECONN   ANOP                                                      @L6C 01508005
         AIF   ('&CONNECT' EQ '^').ESNCHY  SKIP DOWN IF NO CONNECT @L6A 01509005
         AIF   ('&CONNECT' NE '').ECONNDT  VERIFY DATA SPECIFIED   @L2A 01510005
         MNOTE 4,'''CONNECT'' KEYWORD IGNORED. NO VALUE SPECIFIED.'    X01511005
                                                                   @L2A 01512005
         AGO   .ESNCHY                  GO CHECK SYNCH KEYWORD     @L6C 01513005
.ECONNDT ANOP                           DATA SPECIFIED             @L2A 01514005
&EMCS(4) SETB  1                        INDICATE IN EXT MCSFLAGS   @L2A 01515005
         AIF   ('&CONNECT'(1,1) EQ '(').ECONNRG BRANCH IF IN REG   @L2A 01516005
         L     15,&CONNECT(1)           LOAD CONNECT ID            @L2A 01517005
         ST    15,16(0,14)              INSERT CONNECT INTO PLIST  @L2A 01518005
         AGO   .ESNCHY                  GO CHECK SYNCH KEYWORD     @L6C 01519005
.ECONNRG ST    &CONNECT(1),16(0,14)     INSERT CONNECT INTO PLIST  @L2A 01520005
.********************************************************************** 01530005
.*       IF SYNCH WAS SPECIFIED CHECK IT AND SET BIT IN THE        @PAC 01531005
.*       EXTENDED MCS FLAG FIELD                                   @L6A 01532005
.********************************************************************** 01533005
.ESNCHY  ANOP                                                      @PAA 01534005
         AIF   ('&SYNCH' EQ '^').EWSPRM    SKIP DOWN IF NO SYNCH   @PAA 01535005
         AIF   ('&SYNCH' NE '').ESYNCDT    VERIFY DATA SPECIFIED   @PAA 01536005
         MNOTE 4,'''SYNCH'' KEYWORD IGNORED. NO VALUE SPECIFIED.'  @PAA 01537005
         AGO   .EWSPRM                                             @PAA 01538005
.ESYNCDT ANOP                                                      @PAA 01539005
&SYNN    SETB  ('&SYNCH(1)' EQ 'NO')    SYNCH MUST BE ZEROED       @PAC 01540005
&EMCS(14) SETB  ('&SYNCH(1)' EQ 'YES')  INDICATE IN EXT MCSFLAGS   @PAC 01540105
.********************************************************************** 01540205
.*       IF THE WAIT STATE PARAMETER LIST ADDRESS WAS SPECIFIED    @L6A 01540305
.*       INSERT IT INTO THE PARAMETER LIST.  IF WSPARM=0,          @P9C 01540405
.*       PLACE ZERO IN THE PARAMETER LIST.                         @P9C 01540505
.********************************************************************** 01540605
.EWSPRM  ANOP                                                      @L6A 01540705
         AIF   ('&WSPARM' EQ '^').WPXEMCS  SKIP DOWN IF NO WSPARM  @PAC 01540805
         AIF   ('&WSPARM(1)' EQ '0').EWSNOWS                       @P9C 01540905
         AIF   ('&WSPARM(1)' NE '').EWSDT                          @P9C 01541005
         MNOTE 4,'''WSPARM'' KEYWORD IGNORED. NO VALUE SPECIFIED.' @PAA 01541105
         AGO   .WPXEMCS                                            @PAA 01541205
.EWSDT   ANOP                                                      @PAA 01541305
         AIF   ('&WSPARM'(1,1) EQ '(').EWSPMRG  BRANCH IF IN REG   @L6A 01541405
.EWSPMDT ANOP                           ADDRESS SPECIFIED          @L6A 01541505
         LA    15,&WSPARM(1)            LOAD WSPARM ADDRESS        @P9C 01541605
         ST    15,100(0,14)             INSERT WSPARM INTO PLIST   @L6A 01541705
         AGO   .WPXEMCS                 GENERATE MCS EXT FLAGS     @L6A 01541805
.EWSNOWS ANOP                           WAIT STATE TO BE ZEROED    @P9C 01541905
         SR    15,15                    NO ASSOCIATED WAIT STATE   @P9C 01542005
         ST    15,100(0,14)             ZERO WSPARM FIELD          @P9C 01542105
         AGO   .WPXEMCS                 GENERATE MCS EXT FLAGS     @L6A 01542205
.EWSPMRG ANOP                           REGISTER SPECIFIED         @L6A 01542305
         ST    &WSPARM(1),100(0,14)     INSERT WSPARM  INTO PLIST  @L6A 01542405
.********************************************************************** 01542505
.*       CHECK TO SEE IF ANY OF THE EXTENDED MCSFLAGS NEEDS TO     @L2C 01542605
.*       BE SET. THE FLAGS MUST BE UPDATED IF ANY OF THE           @01C 01542705
.*       CONSID, CONNECT, CONSNAME OR PRTY KEYWORDS WERE           @L4C 01542805
.*       SPECIFIED, OR SYNCH=YES. IF SYNCH=NO WAS SPECIFIED,       @PAC 01542905
.*       TURN THE SYNCH FLAG OFF.                                  @PAA 01543005
.********************************************************************** 01543105
.WPXEMCS ANOP                           SET NEW EXTENDED MCSFLAGS  @L2C 01543205
         AIF   (&EMCS(2) OR &EMCS(3) OR &EMCS(4) OR                    X01543305
                &EMCS(6) OR &EMCS(7) OR &EMCS(14) OR                   +01543405
                &EMCS(9)).WPXEMFS   SET EXTENDED MCS FLAGS, IF ON  @L6C 01543505
         AIF    (&SYNN).WPXSYN      SYNCH MUST BE TURNED OFF       @PAA 01543605
         AGO   .EXECUTE             IF NONE, ISSUE SVC OR BRANCH ENTRY +01543705
                                    WTO                            @L6C 01543805
.********************************************************************** 01543905
.*       TURN ON THE EXTENDED MCSFLAGS WHICH MAY NEED TO BE        @L2A 01544005
.*       SET FOR THE EXECUTE FORM OF THE MACRO                     @L2A 01544105
.********************************************************************** 01544205
.WPXEMFS ANOP                       SET THE EXTENDED MCS FLAGS     @L5A 01544305
         OI    4(14),B'&EMCS(1)&EMCS(2)&EMCS(3)&EMCS(4)&EMCS(5)&EMCS(6)X01544405
               &EMCS(7)&EMCS(8)'        UPDATE EXTENDED MCS FLAGS  @L2A 01544505
         OI    5(14),B'&EMCS(9)&EMCS(10)&EMCS(11)&EMCS(12)&EMCS(13)&EMCX01544605
               S(14)&EMCS(15)&EMCS(16)' UPDATE EXTENDED MCS FLAGS2 @L5A 01544705
.WPXSYN  ANOP                        TURN SYNCH OFF IF NECESSARY   @PAA 01544805
         AIF   (NOT(&SYNN)).WPXETXT     NOT SYNCH=NO               @PAA 01544905
         NI    5(14),B'11111011'        SET SYNCH FLAG OFF         @PAA 01545005
.********************************************************************** 01546005
.*       IF THIS IS A MULTILINE WTO, CHECK TO SEE IF THE TEXT      @L5A 01547005
.*       KEYWORD WAS SPECIFIED. IF SO, STORE THE ADDRESS OF EACH   @L5A 01548005
.*       LINE OF TEXT IN THE PARAMETER LIST.                       @L5A 01549005
.********************************************************************** 01550005
.WPXETXT ANOP                           CHECK FOR TEXT ON MLWTO    @L5A 01551005
         AIF   ('&TEXT' EQ '^' OR NOT &MLW).EXECUTE  SKIP IF NOT A     +01552005
                                        MULTILINE W/TEXT KEYWORD   @L6C 01553005
.********************************************************************** 01553105
.*       MOVE THE TEXT ADDRESSES INTO THE PARAMETER LIST           @L5A 01553205
.********************************************************************** 01553305
&MLTTIND SETA  2                        LINE TYPE INDEX            @L5A 01553405
&MLINDX  SETA  4                        OFFSET TO TEXT ADDRESS     @L5A 01553505
&H       SETA  2                        PROCESSED MAJOR            @L5A 01553605
         AIF   (&H GT &NUMML).EXECUTE   ISSUE SVC OR BRANCH ENTRY WTO  +01553705
                                        WHEN COMPLETE              @PQC 01553805
         XR    15,15                    CLEAR INDEX FOR INSERTS    @L5A 01553905
         IC    15,3(14)                 SET LENGTH OF WPX          @L5A 01554005
         LA    14,4(15,14)              POINT TO MULTILINE ENTRIES @L5A 01555005
.EMLW00  ANOP                           BEGIN LOOP FOR MINORS      @L5A 01556005
         AIF   (&H GT &NUMML).EXECUTE   ISSUE SVC OR BRANCH ENTRY WTO  +01557005
                                        WHEN COMPLETE              @PQC 01558005
&VALH    SETC  '&TEXT(&H)'              EXTRACT CURRENT VALUE      @L5A 01559005
&VALH1   SETC  '&TEXT(&H,1)'            EXTRACT TEXT ADDRESS       @L5A 01560005
&VALH2   SETC  '&TEXT(&H,2)'            EXTRACT LINE TYPE          @PKA 01570005
         AIF   ('&VALH2' EQ '').ETEXTL2       LINE TYPE NOT SPEC.  @04C 01580005
         AIF   (&LTWARN).ETEXTL2        WARNING ALREADY ISSUED     @PKA 01590005
         MNOTE 0,'LINE TYPE ON EXECUTE FORM IGNORED.'              @PKA 01600005
&LTWARN  SETB  1                        ISSUE WARNING ONCE ONLY    @PKA 01610005
.ETEXTL2 ANOP                                                      @PKA 01620005
         AIF   ('&VALH1'  EQ     '').EMLW02 BRANCH IF NULL LINE    @L5A 01630005
         AIF   ('&VALH1'(1,1) EQ '(').EMLW01 BRANCH IF SPECIFIED       X01640005
                                        IN REGISTER                @L5A 01650005
         LA    15,&VALH1                LOAD ADDR OF TEXT FIELD    @P8C 01660005
         ST    15,&MLINDX.(14)          STORE TEXT ADDR INTO PLIST @P8A 01670005
         AGO   .EMLW02                  CONTINUE PROCESSING        @L5A 01680005
.EMLW01  ANOP                           TEXT IN REGISTER           @L5A 01690005
&K       SETA  K'&VALH1                                                 01700005
&VALH1   SETC  '&VALH1'(2,&K-2)                                         01710005
         ST    &VALH1,&MLINDX.(14)      STORE TEXT ADDRESS         @L5A 01720005
.EMLW02  ANOP                           UPDATE POINTERS            @L5A 01730005
&H       SETA  &H+1                     UPDATE NUMBER OF LINES     @L5A 01740005
&MLINDX  SETA  &MLINDX+8                INDEX TO NEXT PLIST ENTRY  @L5A 01750005
         AGO   .EMLW00                  CONTINUE                   @L5A 01760005
.********************************************************************** 01770005
.*                                                                 @L2A 01780005
.*       STANDARD OR LIST FORM SPECIFIED. DETERMINE IF SINGLE-     @L2A 01790005
.*       LINE OR MULTI-LINE WTO AND WHETHER PROPER AMOUNT OF       @L2A 01800005
.*       TEXT SPECIFIED AND CHECK FOR THE FOLLOWING ERROR:         @L5C 01810005
.*                                                                 @L2A 01820005
.*       - NEITHER INLINE TEXT NOR THE TEXT KEYWORD SPECIFIED      @L5A 01830005
.*         ON THE STANDARD OR LIST FORM OF WTO.                    @L5A 01840005
.*                                                                 @L5A 01850005
.********************************************************************** 01860005
.NUMCHK  ANOP                       EITHER STANDARD OR LIST FORM X02007 01870005
         AIF   ('&TEXT' NE '^' OR  '&MESG' NE '').TEXTOK BRANCH IF     X01880005
                                     SOME KIND OF TEXT SPECIFIED   @L5A 01890005
.*       AIF   ('&MF(1)' EQ 'E').TEXTK  NO TEXT VALUE REQUIRED ON THE   01900005
.*                                   EXECUTE FORM OF WTO           @L5A 01910005
         MNOTE 12,'NO TEXT GENERATED. ''TEXT'' OR INLINE TEXT MUST BE SX01920005
               PECIFIED.'                                          @L5A 01930005
&WTOERR  SETB  1                     A SEVERE MNOTE WAS ISSUED     @L5A 01940005
         AGO   .END                  TERMINATE MACRO PROCESSING    @L5A 01950005
.TEXTOK  ANOP                                                      @L5A 01960005
         AIF   ('&TEXT' NE '^').TXTNCHK   IF TEXT KEYWORD SPECIFIED,   X01970005
                                     USE IT FOR MLWTO CHECK        @L5A 01980005
.********************************************************************** 01990005
.*       TEXT KEYWORD NOT SPECIFIED. ASSUME INLINE TEXT, OR MF=L   @L5A 02000005
.*       TEXT KEYWORD NOT SPECIFIED. CHECK USING INLINE TEXT       @L5A 02010005
.********************************************************************** 02020005
         AIF   (&IHBWTOR).MLOK       IF THIS WAS FROM WTOR THE CHECKS  +02030005
                                     AND THE MLW FLAG BIT WAS SET IN   +02040005
                                     THE WTOR MACRO                @L6A 02050005
         AIF   (N'&SYSLIST EQ 0 OR N'&SYSLIST GT 255).NOTXT ERROR IF   X02060005
                   EITHER NO TEXT OR TOO MANY LINES SPECIFIED  @G64DPSS 02070005
         AIF   ('&SYNCH(1)' EQ 'YES' AND                               +02080005
                 N'&SYSLIST GT &MAXLINS).ERROR2     TOO MANY LINES FOR +02090005
                                                    SYNCH=YES      @L6A 02100005
&MLW     SETB  (N'&SYSLIST NE 1 OR N'&SYSLIST(1) NE 1) INDICATE IF     X02110005
                                     THIS IS A MULTI-LINE WTO    X02007 02120005
         AGO   .CONNCHK              CHECK FOR CONNECT WITH SLWTO  @L5A 02130005
.********************************************************************** 02140005
.*       TEXT KEYWORD SPECIFIED. CHECK USING TEXT KEYWORD DATA     @L5A 02150005
.********************************************************************** 02160005
.TXTNCHK ANOP                                                      @L5A 02170005
         AIF   (N'&TEXT EQ 0 AND '&MF' NE 'L').NOTXT  ERROR IF         X02180005
                   ZERO LINES SPECIFIED AND NOT LIST FORM OF MACRO @PIA 02190005
         AIF   (N'&TEXT GT 255).NOTXT   ERROR IF TOO MANY LINES        X02200005
                   SPECIFIED                                       @PIC 02210005
         AIF   ('&SYNCH(1)' EQ 'YES' AND                               +02220005
                 N'&TEXT GT &MAXLINS).ERROR2        TOO MANY LINES FOR +02230005
                                                    SYNCH=YES      @L6A 02240005
.********************************************************************** 02250005
.*                                                                 @L2A 02260005
.*       CHECK FOR THE FOLLOWING TERMINATING ERROR SITUATION:      @L2A 02270005
.*       - CONNECT KEYWORD MUTUALLY EXCLUSIVE WITH SINGLE-LINE WTO @L2A 02280005
.*                                                                 @L2A 02290005
.********************************************************************** 02300005
.CONNCHK ANOP                                                      @L5A 02310005
         AIF   ('&CONNECT' EQ '^' OR &MLW).MLOK  ERROR IF CONNECT      X02320005
                                      USED ON SINGLE-LINE WTO      @L2A 02330005
         MNOTE 12,'NO TEXT GENERATED. ''CONNECT'' IS MUTUALLY EXCLUSIVEX02340005
                WITH SINGLE LINE WTO.'                             @L2A 02350005
&WTOERR  SETB  1                        A SEVERE MNOTE WAS ISSUED  @L2A 02360005
         AGO   .END                  TERMINATE MACRO PROCESSING    @L2A 02370005
.MLOK    ANOP                        NO CONNECT/SINGLE-LINE ERROR  @L2A 02380005
         AIF   ('&MF' EQ 'I').IROUT  CHECK FOR STANDARD FORM            02390005
.********************************************************************** 02400005
.*                                                             @G860PSS 02410005
.*       LIST FORM SPECIFIED                                   @G860PSS 02420005
.*                                                             @G860PSS 02430005
.********************************************************************** 02440005
         AIF   (&IHBWTOR).WPXCHK    BRANCH FOR WTOR                     02450005
&NAME    DS    0F                                                       02460005
         AGO   .WPXCHK                                                  02470005
.*********************************************************************  02480005
.*                                                             @G860PSS 02490005
.*       INLINE FORM WAS SPECIFIED                             @G860PSS 02500005
.*                                                             @G860PSS 02510005
.********************************************************************** 02520005
.IROUT   AIF   (&IHBWTOR).WPXCHK    FOR A WTOR, THE WTOR MACRO HAS     X02530005
                                    ALREADY DONE THE CNOP AND BAL  @L2C 02540005
         CNOP  0,4                                                      02550005
&NAME    BRAS  1,&GNAME.A               BRANCH AROUND MESSAGE      @LCC 02560005
.WPXCHK  ANOP                       DETERMINE WHETHER TO BUILD WPX      02570005
&J       SETA  0                    INITIALIZE INDEX               @L2A 02580005
.TRYLOOP ANOP                                                      @L5A 02590005
         AIF   (&J GE N'&MCSFLAG OR T'&MCSFLAG EQ 'O').TRYKEYS     @L2A 02600005
&J       SETA  &J+1                 MORE MCSFLAG VALUES TO CHECK   @L2A 02610005
.********************************************************************** 02620005
.*                                                                      02630005
.*       MCSFLAG=BUSYEXT is no longer supported. If specified,     @L8A 02640005
.*       still set the appropriate flags but issue an information  @L8A 02650005
.*       MNOTE.                                                    @L8A 02660005
.*                                                                      02670005
.********************************************************************** 02680005
         AIF   ('&MCSFLAG(&J)' NE 'BUSYEXIT').TRYREG0  If not BUSYEXIT X02690005
                                    specified, then check for REG0     X02700005
                                    parameter                      @L8C 02710005
         AIF   (NOT &IHBWTOR).BUSYOK BUSYEXIT NOT ALLOWED ON WTOR  @L2A 02720005
         MNOTE 4,'MCSFLAG=BUSYEXIT IGNORED. NOT VALID ON WTOR.'    @L2A 02730005
         AGO   .TRYLOOP             Test other MCSFLAG values      @L8C 02740005
.BUSYOK  ANOP                       BUSYEXIT VALIDLY SPECIFIED     @L2A 02750005
         MNOTE 0,'MCSFLAG=BUSYEXIT NOT SUPPORTED ON RELEASE JBB7727 OR X02760005
               ABOVE.'                                             @L7C 02770005
&IWPXBIT SETB 1                     INDICATE WPX IS TO BE BUILT    @L2A 02780005
&EMCS(1) SETB 1                     INDICATE BUSYEXIT SPECIFIED VIA    X02790005
                                    EXTENDED MCSFLAG               @L2A 02800005
         AGO .TRYLOOP               Test other MCSFLAG values      @L8C 02810005
.********************************************************************** 02820005
.*                                                                      02830005
.*       MCSFLAG=REG0 and QREG0 are no longer supported. If        @L8A 02840005
.*       specified, reject its use and cause the assembly to fail. @L8A 02850005
.*                                                                      02860005
.********************************************************************** 02870005
.TRYREG0 ANOP                                                      @L8A 02880005
         AIF   ('&MCSFLAG(&J)' EQ 'REG0').BADREG0  If REG0, reject @L8A 02890005
         AIF   ('&MCSFLAG(&J)' EQ 'QREG0').BADQREG0 If QREG0,          X02900005
                                    reject.                        @L8A 02910005
         AGO   .TRYLOOP             Test other MCSFLAG values      @L8A 02920005
.TRYKEYS ANOP                       TEST FOR OTHER WPX KEYWORDS    @L2A 02930005
.********************************************************************** 02940005
.*                                                                 @P4A 02950005
.*       THE FOLLOWING WPX CHECKS ARE SEPARATED SO THIS MACRO      @P4A 02951005
.*       RUNS IN ASSEMBLER F.                                      @P4A 02952005
.*                                                                 @P4A 02953005
.********************************************************************** 02954005
         AIF   ('&JOBID'   NE '^' OR  '&JOBNAME' NE '^' OR             X02955005
                '&SYSNAME' NE '^' OR  '&KEY'     NE '^' OR             X02956005
                '&TOKEN'   NE '^').SETWPX                          @01C 02957005
         AIF   ('&CONSID'  NE '^' OR  '&PRTY'    NE '^' OR             X02958005
                '&SUBSMOD' NE ''  OR                                   X02959005
                '&CONNECT' NE '^' OR  '&CONSNAME' NE '^' ).SETWPX  @D2C 02960005
         AIF   ('&CART'    NE '^' OR  '&TEXT'    NE '^').SETWPX    @PCC 02970005
         AIF   ('&WSPARM'  NE '^' AND '&MF'  NE 'I').SETWPX        @PCA 02980005
         AIF   ('&WSPARM'  NE '^' AND '&WSPARM' NE '0').SETWPX     @PCA 02990005
         AIF   ('&SYNCH'   NE '^' AND '&MF'  NE 'I').SETWPX        @PCA 03000005
         AIF   ('&SYNCH'   NE '^' AND '&SYNCH' NE 'NO').SETWPX     @PCA 03010005
         AIF   (NOT &RCNSPEC).CHEKMCS                              @L3C 03020005
.SETWPX  ANOP                       WPX IS TO BE BUILT             @P4A 03030005
.*  THE FOLLOWING KEYWORDS ARE NEW IN HBB4410. IF ANY OF THEM      @PJA 03040005
.*  IS SPECIFIED, WE BUILD A VERSION 2 WPX. OTHERWISE,             @PJA 03050005
.*  A VERSION 1 WPX WILL BE BUILT.                                 @PJA 03060005
         AIF   ('&CONSNAME' NE '^' OR                                  X03070005
                '&CART'    NE '^' OR  '&TEXT'    NE '^' OR             X03080005
                '&SYNCH'   NE '^' OR  '&WSPARM'  NE '^').SETVER2   @01C 03090005
         AIF   (&RCNSPEC).SETVER2   RPLYISUR WAS SPECIFIED (WTOR)  @PJA 03100005
         AGO    .SETVER1            SET VERSION 1 LEVEL WPX        @PJA 03110005
.SETVER2 ANOP                                                      @PJA 03120005
&IWPXVER SETC '2'                   INDICATE VERSION 2 WPX              03130005
.SETVER1 ANOP                                                      @PJA 03140005
&IWPXBIT SETB 1                     INDICATE WPX IS TO BE BUILT    @L2A 03150005
.CHEKMCS ANOP                       CHECK WHETHER TO SET MCSFLAGS  @L2A 03160005
.*    THE MCS BIT INDICATES WHETHER MCS FLAGS WILL BE SET        X02050 03161005
.*    (ON IF EITHER ROUTING CODES, DESCRIPTOR CODES, MESSAGE TYPE       03162005
.*    INFORMATION IS SPECIFIED)                                    @L7C 03163005
&IHBMCS  SETB  (T'&ROUTCDE NE 'O' OR T'&MSGTYP NE 'O' OR               X03164005
               T'&DESC NE 'O')                                 @YA17152 03165005
.********************************************************************** 03166005
.*                                                                 @L2A 03167005
.*  DETERMINE WHICH ROUTING CODES HAVE BEEN SPECIFIED, IF ANY:     @L2A 03168005
.*    - ONLY ROUTING CODES 1-28 AND 41-128 MAY BE SET.         @YA10057 03169005
.*    - ROUTING CODES 30-40 ARE RESERVED AND IGNORED IF            @PRC 03170005
.*        IF SPECIFIED.                                        @YA10057 03180005
.*    - IF ANY ROUTING CODES GREATER THAN 16 ARE SPECIFIED (WITHIN @L2A 03190005
.*        1-128 AND INCLUDING 30-40) AN EXTENDED FORMAT WPL        @PRA 03200005
.*        (WPX) WILL BE BUILT.                                 @YA10057 03210005
.*    - IF NONE OF ROUTING CODES 1-28 OR 41-128 ARE SET,       @YA10057 03220005
.*        A DEFAULT SETTING OF ROUTING CODE 2 IS APPLIED.      @YA10057 03230005
.*    - IF THE ROUTCDE KEYWORD IS NOT SPECIFIED:                   @L2A 03240005
.*        .If CONSID keyword or CONSNAME is specified,             @L8C 03250005
.*           THEN NO ROUTING CODES ARE SET                         @L2A 03260005
.*        .If CONSID or CONSNAME are not used, if descriptor code  @L8C 03270005
.*           INFORMATION IS SPECIFIED, THEN THE DEFAULT IS SET.    @02C 03280005
.*           OTHERWISE, NO ROUTING CODES ARE SET.                  @02C 03290005
.*                                                                 @L2A 03300005
.********************************************************************** 03310005
         AIF   (T'&ROUTCDE NE 'O').YESROUT ROUTING CODES?          @L2M 03320005
         AIF   ('&CONSID'  NE '^' OR '&CONSNAME' NE '^').ENDROUT       X03330005
                                   IF CONSID OR CONSNAME SPECIFIED     X03340005
                                    THEN SET NO ROUTING CODES      @L3C 03350005
         AIF   ('&MSGTYP' NE '').ENDROUT BYPASS SETTING OF ROUTE CODE  X03360005
                                    2 IF MSGTYP SPECIFIED          @02A 03370005
&RB(2)   SETB  (&IHBMCS)            SET DEFAULT ROUTING CODE   @YA17152 03380005
         AGO   .ENDROUT             DONE WITH ROUTING CODE CHECKS  @L2C 03390005
.YESROUT ANOP                                                           03400005
.*                                                                      03410005
.*    ROUTING CODES HAVE BEEN SPECIFIED. DETERMINE WHICH CODES     @L2C 03420005
.*    ARE TO BE USED AND SET THE APPROPRIATE BITS IN STRING 'RB'.  @L2A 03430005
.*    ROUTING CODE RANGES ARE ACCEPTED AS LONG AS:                 @L2A 03440005
.*      - THE SECOND NUMBER OF THE RANGE  >=  THE FIRST NUMBER     @L2A 03450005
.*      - BOTH NUMBERS ARE WITHIN THE RANGE 1-128                  @L2A 03460005
.*      - THE NUMBERS OF THE RANGE ARE SEPARATED BY A DASH (-)     @L2A 03470005
.*                                                                      03480005
&I       SETA  1                    INITIALIZE LIST INDEX          @L2A 03490005
.DOROUT  ANOP                                                           03500005
&I1      SETA  0                    INITIALIZE ELEMENT INDEX       @L2A 03510005
&RCLEN   SETA  K'&ROUTCDE(&I)       SET LENGTH OF CURRENT ELEMENT  @L2A 03520005
         AIF   (&RCLEN EQ 0).SINGLE IF ELEMENT IS NULL, GO TO SINGLE   X03530005
                                    ROUTING CODE CHECK - IT WILL BE    X03540005
                                    DETERMINED TO ISSUE AN MNOTE   @L2A 03550005
         AIF   (T'&ROUTCDE(&I) EQ 'N').SINGLE IF SINGLE ELEMENT    @L2A 03560005
.*                                                                 @L2A 03570005
.*    A ROUTING CODE RANGE HAS BEEN SPECIFIED.                     @L2A 03580005
.*                                                                 @L2A 03590005
.CHKDASH ANOP                       NOT SINGLE CODE. CHECK RANGE   @L2A 03600005
&I1      SETA  &I1+1                INCREMENT ELEMENT INDEX        @L2A 03610005
         AIF   ('&ROUTCDE(&I)'(&I1,1) EQ '-').GOTDASH              @L2A 03620005
         AIF   (&I1+1 GE &RCLEN).BADRNGE  CHECK INDEX POSITION     @L2A 03630005
         AGO   .CHKDASH             CHECK NEXT CHARACTER           @L2A 03640005
.GOTDASH ANOP                       FOUND A DASH (DELIMITER)       @L2A 03650005
         AIF   (&I1 EQ 1).BADRNGE   IF NO LOWER LIMIT, ISSUE MNOTE @L2A 03660005
&LOW     SETC  '&ROUTCDE(&I)'(1,&I1-1) SET FIRST NUMBER OF RANGE   @L2A 03670005
&HIGH    SETC  '&ROUTCDE(&I)'(&I1+1,&RCLEN-&I1) 2nd number         @07C 03680005
         AIF   ('&LOW' GT '&HIGH').BADRNGE IF FIRST NUMBER GREATER THANX03690005
                                    SECOND NUMBER, ISSUE MNOTE     @L2A 03700005
         AIF   ('&LOW' LT '1' OR '&LOW' GT '128' OR                    X03710005
               '&HIGH' LT '1' OR '&HIGH' GT '128').BADRNGE IF EITHER   X03720005
                                    NUMBER IS NOT WITHIN 1-128     @L2A 03730005
&IWPXBIT SETB  (&IWPXBIT OR '&LOW' GT '16' OR '&HIGH' GT '16') BUILD   X03740005
                                    WPX FOR RCS GREATER THAN 16    @L2A 03750005
&RSVDMNT SETB  (&RSVDMNT OR                                            X03760005
               ('&LOW' LE '40' AND '&HIGH' GE '30')) IF RESERVED       X03770005
                          CODES, SET UP TO ISSUE WARNING MNOTE     @PRC 03780005
&NODFLT  SETB  (&NODFLT OR '&LOW' LT '30' OR '&LOW' GT '40' OR         X03790005
               '&HIGH' LT '30' OR '&HIGH' GT '40') DO NOT USE DEFAULT  X03800005
                                SETTING IF ANY ARE GOOD CODES      @PRC 03810005
&J       SETA  &LOW                 INITIALIZE INDEX               @L2A 03820005
&K       SETA  &HIGH                SET END OF RANGE               @L2A 03830005
.SETLOOP ANOP                       LOOP TO SET ON ROUTING CODES       X03840005
                                    (RESERVED CODES ALSO SET HERE, BUT X03850005
                                    CLEARED BELOW)                 @L2A 03860005
&RB(&J)  SETB  1                    ROUTING CODE N SPECIFIED       @L2A 03870005
&J       SETA  &J+1                 INCREMENT LOOP INDEX           @L2A 03880005
         AIF   (&J LE &K).SETLOOP   IF MORE CODES TO SET           @L2A 03890005
         AGO   .NEXTRC              DETERMINE NEXT ROUTING CODE    @L2A 03900005
.*                                                                 @L2A 03910005
.*    AN INVALID ROUTING CODE RANGE HAS BEEN SPECIFIED. ISSUE AN   @L2A 03920005
.*    MNOTE AND SKIP TO THE NEXT ROUTING CODE.                     @L2A 03930005
.*                                                                 @L2A 03940005
.BADRNGE ANOP                       INVALID ROUTING CODE RANGE     @L2A 03950005
         MNOTE 4,'INVALID RANGE OF ROUTING CODES IGNORED.'         @L2A 03960005
         AGO   .NEXTRC              CHECK NEXT ROUTING CODE        @L2A 03970005
.*                                                                 @L2A 03980005
.*    A SINGLE ROUTING CODE HAS BEEN SPECIFIED. VERIFY THAT IT IS  @L2A 03990005
.*    WITHIN THE PROPER RANGE AND, IF SO, SET THE CORRECT BIT      @L2A 04000005
.*                                                                 @L2A 04010005
.SINGLE  ANOP                                                      @L2A 04020005
&N       SETA  &ROUTCDE(&I)         GET NEXT ROUTING CODE          @L2C 04030005
         AIF   (&N  GE 1 AND &N  LE 128).SETSNGL VALID CODE?       @L2C 04040005
         MNOTE 4,'ROUTCDE &N  IS AN INVALID ROUTING CODE. IT IS IGNOREDX04050005
               .'                                                  @L2C 04060005
         AGO   .NEXTRC              INVALID ROUTING CODE SPECIFIED.    X04070005
                                    CHECK THE NEXT ONE             @L2A 04080005
.SETSNGL ANOP                       VALID ROUTING CODE SPECIFIED        04090005
&IWPXBIT SETB  (&IWPXBIT OR &N  GT 16) BUILD WPX FOR RC > 16       @L2A 04100005
&RSVDMNT SETB  (&RSVDMNT OR (&N  GE 30 AND &N  LE 40)) IF RC 30-40,    X04110005
                                SET UP TO ISSUE WARNING MNOTE      @PRC 04120005
&NODFLT  SETB  (&NODFLT OR &N  LT 30 OR &N  GT 40) DO NOT USE DEFAULT  X04130005
                                SETTING FOR ACCEPTABLE CODES       @PRC 04140005
&RB(&N)  SETB  1                    ROUTING CODE N SPECIFIED            04150005
.NEXTRC  ANOP                       DETERMINE IF MORE CODES        @L2C 04160005
&I       SETA  &I+1                 INCREMENT INDEX                     04170005
         AIF   (&I LE N'&ROUTCDE).DOROUT IF MORE CODES, CHECK NEXT ONE  04180005
         AIF   ('&MSGTYP' NE '').ENDROUT BYPASS SETTING OF ROUTE CODE  X04190005
                                    2 IF MSGTYP SPECIFIED          @02A 04200005
&RB(2)   SETB  (&RB(2) OR NOT &NODFLT) VERIFY THAT DEFAULT IS SET       04210005
.ENDROUT ANOP                       DONE WITH ROUTING CODES        @L2C 04220005
.*                                                                 @L2A 04230005
.*    SET UP ROUTING CODE DC FIELD FOR AN OLD-FORMAT WPL           @L2A 04240005
.*                                                                 @L2A 04250005
&CD(3)   SETC  '&RB(1)&RB(2)&RB(3)&RB(4)&RB(5)&RB(6)&RB(7)&RB(8)'  @L2A 04260005
&CD(4)   SETC  '&RB(9)&RB(10)&RB(11)&RB(12)&RB(13)&RB(14)&RB(15)&RB(16)X04270005
               '                                                   @L2A 04280005
.*                                                                 @L2A 04290005
.*    ROUTING CODES 30-40 ARE RESERVED. IF ANY OF THESE HAVE       @PRC 04300005
.*    BEEN SPECIFIED, ISSUE A WARNING MNOTE AND CLEAR THESE BITS   @L2A 04310005
.*                                                                 @L2A 04320005
         AIF   (NOT &RSVDMNT).WPXDONE  IF ANY RESERVED ROUTING CODES   X04330005
                                    SPECIFIED, ISSUE MNOTE         @L2A 04340005
         MNOTE 4,'RESERVED ROUTING CODE(S) 30-40 IGNORED.'         @PRC 04350005
&I       SETA  30                   INITIALIZE ROUTING CODE INDEX  @PRC 04360005
.NULLIFY ANOP                       VERIFY RCS 30-40 ARE NOT SET       X04370005
                                                                   @PRC 04380005
&RB(&I)  SETB  0                    NULLIFY ROUTING CODE           @L2A 04390005
&I       SETA  &I+1                 INCREMENT INDEX                @L2A 04400005
         AIF   (&I LE 40).NULLIFY   GO TO TURN OFF THE OTHER CODES     X04410005
                                                               @YA10057 04420005
.********************************************************************** 04430005
.*                                                                 @L2A 04440005
.*  CHECK ALL OTHER CONDITIONS RESULTING IN A WPX.                 @L2A 04450005
.*  A WPX WILL BE BUILT IF ANY OF THE FOLLOWING KEYWORDS HAS       @L2A 04460005
.*  BEEN SPECIFIED (EVEN IF WITH INVALID DATA):                    @L2A 04470005
.*    - CONNECT (ALLOWED ON MULTI-LINE WTO ONLY)                   @L2A 04480005
.*    - JOBNAME                                                    @L2A 04490005
.*    - JOBID                                                      @L2A 04500005
.*    - SYSNAME                                                    @L2A 04510005
.*    - KEY                                                        @L2A 04520005
.*    - TOKEN                                                      @L2A 04530005
.*    - CONSNAME                                                   @L3A 04540005
.*    - CONSID                                                     @L2A 04550005
.*    - PRTY                                                       @L2A 04560005
.*    - SUBSMOD                                                    @L2A 04570005
.*    - CART                                                       @L4A 04580005
.*    - TEXT                                                       @L5A 04590005
.*    - SYNCH                                                      @L6A 04600005
.*    - WSPARM                                                     @L6A 04610005
.*                                                                 @L2A 04620005
.********************************************************************** 04630005
.WPXDONE ANOP                       DONE WITH WPX DETERMINATION    @L2A 04640005
&I       SETA  1                    INITIALIZE INDEX                    04650005
&B(3)    SETB  0                                                   MCS  04660005
         AIF   (T'&DESC EQ 'O').SETNCLR     IF NO DESCRIPTOR CODES     X04670005
                        SPECIFIED, THEN SKIP DESCRIPTOR CODE SECTION    04680005
.********************************************************************** 04690005
.*  DETERMINE WHICH DESCRIPTOR CODES WERE SPECIFIED                     04700005
.********************************************************************** 04710005
.DCHK    ANOP                       DESCRIPTOR CODES SPECIFIED          04720005
&N       SETA  &DESC(&I)            GET THE NEXT DESCRIPTOR CODE        04730005
&I       SETA  &I+1                 INCREMENT THE INDEX                 04740005
         AIF   (&N GE 1 AND &N LE 16).ASSIGND VALID DESCRIPTOR CODE?    04750005
         MNOTE 4,'DESC &N  IS AN INVALID DESCRIPTOR CODE. IT IS IGNOREDX04760005
               .'                                                  @L2C 04770005
         AGO   .NXTD                INVALID DESCRIPTOR CODE. ISSUE     X04780005
                                    MNOTE AND CHECK FOR NEXT CODE       04790005
.ASSIGND ANOP                       YES. VALID DESCRIPTOR CODE          04800005
&B(&N)   SETB  1                    VALID DESCRIPTOR CODE N SPECIFIED   04810005
.NXTD    AIF   (&I LE N'&DESC).DCHK IF MORE CODES, CHECK NEXT ONE       04820005
&I       SETA  1                    SET INDEX TO INDICATE DESC CODE     04830005
.********************************************************************** 04840005
.*  SET OUTPUT AREAS AND CLEAR BINARY FLAGS                             04850005
.********************************************************************** 04860005
.SETNCLR ANOP                                                           04870005
&CD(&I)  SETC  '&B(1)&B(2)&B(3)&B(4)&B(5)&B(6)&B(7)&B(8)'               04880005
&CD(&I+1) SETC '&B(9)&B(10)&B(11)&B(12)&B(13)&B(14)&B(15)&B(16)'        04890005
&N       SETA  1                                                        04900005
.CLR     ANOP                       CLEAR 2 BYTES OF BINARY FLAGS       04910005
&B(&N)   SETB  0                    CLEAR PARTICULAR BIT                04920005
&N       SETA  &N+1                 INCREMENT FLAGS INDEX               04930005
         AIF   (&N LT 17).CLR       IF ALL FLAGS CLEARED, GO ON         04940005
         AIF   (&I EQ 5).FLGCHK0    IF JUST FINISHED SETTING MESSAGE   X04950005
                                    TYPE, THEN SET MCS FLAGS            04960005
         AIF   (&I EQ 7).GENDCS     IF JUST FINISHED SETTING MCS FLAGS X04970005
                                    THEN GENERATE DCS            X02007 04980005
.********************************************************************** 04990005
.*  DETERMINE WHICH MESSAGE TYPE FLAGS WERE SPECIFIED                   05000005
.********************************************************************** 05010005
.TYPCHK  ANOP                                                    X02050 05020005
&SWM     SETB  0                    INITIALIZE MSGTYPE INDICATOR   @L2A 05030005
&I       SETA  5                    SET INDEX TO INDICATE MSGTYPE       05040005
         AIF   (T'&MSGTYP EQ 'O').SETNCLR  IF MSGTYP KEYWORD NOT USED  X05050005
                                                                 X02050 05060005
         AIF   ('&MSGTYP(1)' EQ 'N').SETNCLR  OR MSGTYP=N SPECIFIED,   X05070005
                                    THEN SKIP MSGTYPE PROCESSING        05080005
.TYPCHK2 ANOP                       CHECK ALL MSGTYPE INFO       X02050 05090005
&SWM     SETB  1                    INDICATE MSGTYPE SPECIFIED   X02007 05100005
&N       SETA  1                                                        05110005
         AIF   ('&MSGTYP(1)' EQ 'Y' OR '&MSGTYP(1)' EQ 'N').SETNCLR IF X05120005
                                    MSGTYPE=Y OR N SPECIFIED, THEN WE  X05130005
                                    ARE DONE WITH MSGTYPE PROCESSING    05140005
&I       SETA  1                    INITIALIZE INDEX COUNTER            05150005
.* THE FOLLOWING TABLE CONTAINS VALID MESSAGE TYPE VALUES BESIDE Y OR N 05160005
&CFLG(1) SETC  'JOBNAMES'                                               05170005
&CFLG(2) SETC  'STATUS'                                                 05180005
&CFLG(3) SETC  'ACTIVE'                                          X02007 05190005
&CFLG(4) SETC  ''                                                       05200005
&CFLG(5) SETC  'SHOW'                                              CRJE 05210005
&CFLG(6) SETC  'SESS'                                            20034  05220005
.*   DETERMINE WHICH MESSAGE TYPE VALUES WERE SPECIFIED BY COMPARING    05230005
.*   THEM WITH THE TABLE OF VALID VALUES DECLARED ABOVE AND SETTING     05240005
.*   THE VALUES IN BIT STRING B. IF AN INVALID MSGTYPE VALUE IS         05250005
.*   SPECIFIED, AN MNOTE IS ISSUED AND MSGTYPE=N (NO MESSAGE TYPE)      05260005
.*   IS ASSUMED.                                                        05270005
.TCHK    AIF   ('&MSGTYP(&I)' EQ '&CFLG(&N)').SETTYP  COMPARE AGAINST  X05280005
                                  THE NEXT TABLE ENTRY. IF A MATCH,    X05290005
                                  SET MSGTYPE VALUE IN BITSTRING        05300005
&N       SETA  &N+1               INCREMENT TABLE INDEX                 05310005
         AIF   (&N LE 8).TCHK     TEST AGAINST NEXT VALUE IN TABLE      05320005
         MNOTE 4,'MSGTYP FIELD INVALID. N IS ASSUMED'                   05330005
&N       SETA  1                  INITIALIZE MSGTYPE TABLE INDEX X02007 05340005
&I       SETA  5                  SET INDEX TO INDICATE MSGTYPE  X02007 05350005
&SWM     SETB  0                  INDICATE NO MESSAGE TYPE       X02007 05360005
         AGO   .CLR               CLEAR OUT BIT STRING B         X02007 05370005
.SETTYP  AIF   ('&CFLG(&N)' EQ '').ADDIT  IF THIS MSGTYPE VALUE WAS    X05380005
                                  NULL, DONT SET ANY INDICATOR          05390005
&B(&N)   SETB 1                   INDICATE WHICH MSGTYPE VALUE GIVEN    05400005
.ADDIT   ANOP                     SET UP TO CHECK NEXT MSGTYPE VALUE    05410005
&I       SETA  &I+1               INCREMENT MSGTYPE LIST COUNTER        05420005
&N       SETA  1                  RESET MSGTYPE VALUE TABLE INDEX       05430005
         AIF   (&I LE N'&MSGTYP).TCHK IF MORE MSGTYPE PARAMETERS TO    X05440005
                                  CHECK, GO TO CHECK WHAT NEXT ONE IS   05450005
&I       SETA  5                  DONE WITH MSGTYPE. SET FIELD INDEX    05460005
         AGO   .SETNCLR           SET IN MSGTYPE SAVE FIELD             05470005
.********************************************************************** 05480005
.*  DETERMINE WHICH MCSFLAG PARAMETERS WERE SPECIFIED                   05490005
.********************************************************************** 05500005
.FLGCHK0 ANOP                     FIRST SET MCSFLAG BITS THAT WERE NOT X05510005
                                  DETERMINED VIA THE MCSFLAG KEYWORD    05520005
&B(1)    SETB  (&IHBMCS)          MCSFLAG FOR ROUT/DESC CODES  @YA17152 05530005
&B(4)    SETB  (&SWM)             MCSFLAG FOR MESSAGE TYPE FLAGS        05540005
&B(10)   SETB  (&MLW)             MCSFLAG FOR MULTI-LINE         X02007 05550005
&B(12)   SETB  (&IWPXBIT)         MCSFLAG FOR WPX EXISTENCE        @L2A 05560005
&I       SETA  7                  SET INDEX TO INDICATE MCSFLAG FIELD   05570005
.********************************************************************** 05580005
.*  NOW DETERMINE WHICH MCSFLAG KEYWORD VALUES WERE SPECIFIED           05590005
.********************************************************************** 05600005
         AIF   (T'&MCSFLAG EQ 'O').SETNCLR IF NO OTHER MCSFLAG         X05610005
                                  PROCESSING TO PERFORM, THEN SET BITS X05620005
                                  THAT ARE ALREADY INDICATED            05630005
&I       SETA  1                                                        05640005
&N       SETA  1                                                        05650005
.* THE FOLLOWING TABLE CONTAINS ALL VALID MCSFLAG VALUES                05660005
&CFLG(1) SETC  ''                 This was REG0                    @L8C 05670005
&CFLG(2) SETC  'RESP'                                                   05680005
&CFLG(3) SETC  ''                                                       05690005
&CFLG(4) SETC  'REPLY'                                                  05700005
&CFLG(5) SETC  'BRDCST'                                                 05710005
&CFLG(6) SETC  'HRDCPY'                                                 05720005
&CFLG(7) SETC  ''                 This was QREG0                   @L8C 05730005
&CFLG(8) SETC  'NOTIME'                                                 05740005
&CFLG(12) SETC 'CMD'                                               @L1A 05750005
&CFLG(13) SETC 'NOCPY'                                                  05760005
&CFLG(16) SETC 'BUSYEXIT'                                          @L2A 05770005
.*   DETERMINE WHICH MCSFLAG VALUES WERE SPECIFIED BY COMPARING         05780005
.*   THEM WITH THE TABLE OF VALID VALUES DECLARED ABOVE AND SETTING     05790005
.*   THE VALUES IN BIT STRING B. IF AN INVALID MCSFLAG VALUE IS         05800005
.*   SPECIFIED, AN MNOTE IS ISSUED AND THAT VALUE IS IGNORED.           05810005
.FLGCHK  AIF   ('&MCSFLAG(&I)' EQ '&CFLG(&N)').SETFLG  TABLE MATCH?     05820005
&N       SETA  &N+1                    NO MATCH. INCREMENT INDEX        05830005
         AIF   (&N LE 17).FLGCHK       CHECK AGAINST NEXT VALUE    @L4C 05840005
         MNOTE 4,'MCSFLAG= &MCSFLAG(&I) IS INVALID. IT IS IGNORED.'    X05850005
                                                                   @L8C 05860005
         AGO   .ADDI                   INVALID MCSFLAG VALUE. IGNORE   X05870005
                                       AND CHECK NEXT VALUE.       @L8A 05880005
.SETFLG  AIF   ('&CFLG(&N)' EQ '' OR                                   X05890005
                '&CFLG(&N)' EQ 'BUSYEXIT').ADDI IF EITHER NULL OR      X05900005
                                       BUSYEXIT, DONT SET ANY BIT  @D2C 05910005
&B(&N+1) SETB  1                       INDICATE WHICH MCSFLAG SPECIFIED 05920005
.ADDI    ANOP                          SET UP TO CHECK NEXT VALUE       05930005
&I       SETA  &I+1                    INCREMENT COUNTER                05940005
&N       SETA  1                       RESET MCSFLAG TABLE INDEX        05950005
         AIF   (&I LE N'&MCSFLAG).FLGCHK CHECK NEXT MCSFLAG VALUE IF   X05960005
                                       THERE ARE MORE TO CHECK          05970005
         AIF   (&B(7) AND '&SYNCH(1)' EQ 'YES').ERROR6  CHECK FOR      +05980005
                                       MUTUALLY EXCLUSIVE SITUATION    +05990005
                                       SYNCH=YES/MCSFLAG=HRDCPY    @L6A 06000005
         AIF   (&B(7) AND &B(14)).MUTEXC  IF MUTUALLY EXCLUSIVE        X06010005
                                       MCSFLAGS SPECIFIED, ISSUE MNOTE  06020005
         AGO   .SETTER                 NO MUTUALLY EXCLUSIVE PROBLEM    06030005
.MUTEXC  ANOP                          MUTUALLY EXCLUSIVE MCSFLAGS      06040005
&B(14)   SETB  0                       NULLIFY THE 'NOCPY' BIT          06050005
         MNOTE 4,'HRDCPY AND NOCPY MUTUALLY EXCLUSIVE. MCSFLAG=HRDCPY AX06060005
               SSUMED.'                                            @L2C 06070005
.SETTER  ANOP                          DONE WITH MCSFLAG PROCESSING     06080005
&I       SETA  7                       SET INDEX TO INDICATE MCSFLAG    06090005
         AGO   .SETNCLR                SET SPECIFIED MCSFLAGS           06100005
.********************************************************************** 06110005
.*                                                                 @L2A 06120005
.*   PERFORM THE FOLLOWING PROCESSING FOR A MULTI-LINE WTO              06130005
.*                                                                 @L2A 06140005
.********************************************************************** 06150005
.GENDCS  AIF   (NOT &MLW).NOTMLW1  IF NOT MULTI-LINE, SKIP DOWN  X02007 06160005
         AIF   ('&TEXT' NE '^').MLWT00                   CHECK LINE    X06170005
                                   TYPE AS SPECIFIED FOR TEXT KWD  @L5A 06180005
&H       SETA  1                   THIS IS A MULTI-LINE WTO      X02007 06190005
.********************************************************************** 06200005
.*                                                                 @L2A 06210005
.*   CHECK THE LINE TYPE FOR EACH LINE OF THE MULTI-LINE WTO            06220005
.*                                                                 @L2A 06230005
.********************************************************************** 06240005
         AIF   (&IHBWTOR).MLW01A1  COPY VALUES INTO VARIABLES      @L6A 06250005
&ILMEQU  SETC  '&SYSLIST(1,1)'     FIRST LINE TEXT OF WTO          @L6A 06260005
&ILTEQU  SETC  '&SYSLIST(1,2)'     FIRST LINE LINE TYPE            @L6A 06270005
&NUMML   SETA  N'&SYSLIST          TOTAL NUMBER OF LINES           @L6A 06280005
&NUMARG  SETA  N'&SYSLIST(1)       NUMBER OF ARGUMENTS             @L6A 06290005
         AGO   .MLW01A2            BYPASS WTOR SETTING             @L6A 06300005
.MLW01A1 ANOP                      COPIES FOR WTOR INVOCATION      @L6A 06310005
&ILMEQU  SETC  '&SYSLIST(1,1,1)'   FIRST LINE TEXT OF WTOR         @L6A 06320005
&ILTEQU  SETC  '&SYSLIST(1,1,2)'   FIRST LINE LINE TYPE            @L6A 06330005
&NUMML   SETA  N'&SYSLIST(1)       TOTAL NUMBER OF LINES           @L6A 06340005
&NUMARG  SETA  N'&SYSLIST(1,1)     NUMBER OF ARGUMENTS             @L6A 06350005
.MLW01A2 ANOP                                                      @L6A 06360005
         AIF   ('&ILMEQU' EQ '').MLW04 IF FIRST LINE NULL          @L6C 06370005
         AIF   (&NUMARG GT 2).MLW05    INVALID LINE TYPE?          @L6C 06380005
         AIF   ('&ILTEQU' NE 'C').MLW02  NOT CONTROL LINE?         @L6C 06390005
&LT(1)   SETA  80                  INDICATE CONTROL LINE         X02007 06400005
.MLW01   AIF   (&NUMML  LE &H).MLW11   ANY MORE LINES?             @L6C 06410005
&H       SETA  &H+1                MORE LINES TO PROCESS         X02007 06420005
         AIF   (&IHBWTOR).MLW01A3  RESET FOR NEXT WTO LINE         @L6A 06430005
&ILMEQU  SETC  '&SYSLIST(&H,1)'    LINE OF TEXT                    @L6A 06440005
&ILTEQU  SETC  '&SYSLIST(&H,2)'    LINE TYPE FOR LINE              @L6A 06450005
&NUMARG  SETA  N'&SYSLIST(&H)      NUMBER OF ARGUMENTS             @L6A 06460005
         AGO   .MLW01A4                                            @L6A 06470005
.MLW01A3 ANOP                      RESET FOR NEXT WTOR LINE        @L6A 06480005
&ILMEQU  SETC  '&SYSLIST(1,&H,1)'  LINE OF TEXT                    @L6A 06490005
&ILTEQU  SETC  '&SYSLIST(1,&H,2)'  LINE TYPE FOR LINE              @L6A 06500005
&NUMARG  SETA  N'&SYSLIST(1,&H)    NUMBER OF ARGUMENTS             @L6A 06510005
.MLW01A4 ANOP                                                      @L6A 06520005
         AIF   (&NUMARG GT 2).MLW05  ERROR IF INVALID MULTI-           +06530005
                                   LINE TEXT STRUCTURE IS USED     @L6C 06540005
.MLW02   AIF   ('&ILTEQU' NE 'L' OR '&ILMEQU' EQ '').MLW04             +06550005
                                   JUMP IF THIS IS NOT A LABEL LINE    +06560005
                                   THAT HAS TEXT WITH IT           @L6C 06570005
&LT(&H)  SETA  40                  INDICATE VALID LABEL LINE     X02007 06580005
         AIF   (&SECONDL).MLW03    JUMP IF FIRST LINE PROCESSED  X02007 06590005
&SECONDL SETB  1                   INDICATE FIRST LINE PROCESSED X02007 06600005
         AGO   .MLW01              CHECK FOR MORE LINES          X02007 06610005
.MLW03   AIF   (&NUMML LE &H).MLW11 THIS IS AT LEAST LINE 2        @L6C 06620005
&H       SETA  &H+1                INCREMENT LINE INDEX          X02007 06630005
         AIF   (&IHBWTOR).MLW01A5  RESET FOR NEXT WTO LINE         @L6A 06640005
&ILMEQU  SETC  '&SYSLIST(&H,1)'    COPY LINE OF TEXT               @L6A 06650005
&ILTEQU  SETC  '&SYSLIST(&H,2)'    COPY LINE TYPE                  @L6A 06660005
&NUMARG  SETA  N'&SYSLIST(&H)      DETERMINE NUMBER OF ARGUMENTS   @L6A 06670005
         AGO   .MLW01A6                                            @L6A 06680005
.MLW01A5 ANOP                      RESET FOR NEXT WTOR LINE        @L6A 06690005
&ILMEQU  SETC  '&SYSLIST(1,&H,1)'  COPY LINE OF TEXT               @L6A 06700005
&ILTEQU  SETC  '&SYSLIST(1,&H,2)'  COPY LINE TYPE                  @L6A 06710005
&NUMARG  SETA  N'&SYSLIST(1,&H)    DETERMINE NUMBER OF ARGUMENTS   @L6A 06720005
.MLW01A6 ANOP                                                      @L6A 06730005
         AIF   (&NUMARG GT 2).MLW05  ERROR IF INVALID MULTI-LINE       +06740005
                                   TEXT STRUCTURE IS USED          @L6C 06750005
.MLW04   AIF   ('&ILTEQU' EQ 'E').MLW06  IF THIS IS AN END             +06760005
                                   LINE, JUMP AND SET INDICATOR    @L6C 06770005
         AIF   ('&ILMEQU' EQ '').MLW05   NOT AN END LINE. ERROR IF     +06780005
                                   TEXT FIELD IS NULL              @L6C 06790005
         AIF   ('&ILTEQU' EQ 'DE').MLW08   TEXT EXISTS. CHECK          +06800005
                                   FOR DATA-END LINE TYPE          @L6C 06810005
         AIF   ('&ILTEQU' EQ 'L' OR '&ILTEQU' EQ 'C').MLW09        @03C+06820005
                                   NOT DATA-END OR END. ERROR IF THIS  +06830005
                                   IS CONTROL OR LABEL LINE        @L6C 06840005
         AIF   ('&ILTEQU' NE 'D' AND '&ILTEQU' NE '').MLW10            +06850005
                                   ERROR IF INVALID LINE TYPE      @L6C 06860005
&LT(&H)  SETA  20                  INDICATE DATA LINE            X02007 06870005
         AGO   .MLW03              CHECK FOR MORE LINES          X02007 06880005
.MLW05   ANOP                      INVALID LINE TYPE SPECIFIED   X02007 06890005
&E5      SETB  1                   SET INVALID LINE TYPE FLAG    X02007 06900005
&LT(&H)  SETA  10                  ASSUME THIS IS AN END LINE    X02007 06910005
         AGO   .MLW11              DONE WITH ML PROCESSING       X02007 06920005
.MLW06   ANOP                      END LINE SPECIFIED            X02007 06930005
&LT(&H)  SETA  10                  INDICATE END LINE             X02007 06940005
.MLW07   ANOP                      END OR DATA-END INDICATED     X02007 06950005
&E4      SETB  (&H NE &NUMML)      ERROR IF NOT LAST LINE          @L6C 06960005
         AGO   .MLW11              DONE WITH MULTI-LINE CHECKS   X02007 06970005
.MLW08   ANOP                      DATA-END LINE SPECIFIED       X02007 06980005
&LT(&H)  SETA  30                  INDICATE DATA-END LINE        X02007 06990005
         AGO   .MLW07              CHECK IF THIS IS LAST LINE    X02007 07000005
.MLW09   ANOP                      INVALID C OR L LINETYPE       X02007 07010005
&E3      SETB  1                   SET ERROR INDICATOR           X02007 07020005
&LT(&H)  SETA  30                  ASSUME DATA-END LINE          X02007 07030005
         AGO   .MLW11              DO NO MORE MULTI-LINE CHECKS  X02007 07040005
.MLW10   ANOP                      INVALID LINE TYPE SPECIFIED   X02007 07050005
&E5      SETB  1                   SET ERROR INDICATOR           X02007 07060005
&LT(&H)  SETA  30                  ASSUME DATA-END LINE          X02007 07070005
.MLW11   ANOP                      END OF MULTI-LINE PROCESSING  X02007 07080005
&LLCNT   SETA  &H                  SET NUMBER OF LINES PROCESSED X02007 07090005
&H       SETA  1                   SET LINE COUNTER INDEX        X02007 07100005
         AGO   .NOTMLW1            CONTINUE                        @L5A 07110005
.MLWT00  ANOP                                                      @L5A 07120005
.********************************************************************** 07130005
.*                                                                 @L5A 07140005
.*   CHECK THE LINE TYPE FOR EACH LINE OF THE MULTI-LINE WTO       @L5A 07150005
.*   SPECIFIED WITH THE TEXT KEYWORD.                              @L5A 07160005
.*                                                                 @L5A 07170005
.********************************************************************** 07180005
&H       SETA  1                       FIRST MINOR LINE OF TEXT    @L5A 07190005
&VALH    SETC  '&TEXT'                 Get TEXT value              @06A 07200005
         AIF   ('&VALH'(2,1) NE '(').MLWT99 Only line paren group  @06A 07210005
&VALH    SETC  '&TEXT(1)'              EXTRACT FIRST LINE          @L5A 07220005
&VALH1   SETC  '&TEXT(&H,1)'           EXTRACT TEXT ADDRESS        @L5A 07230005
&VALH2   SETC  '&TEXT(&H,2)'           EXTRACT LINE TYPE           @L5A 07240005
&NUMML   SETA  N'&TEXT                 Total number of lines       @06A 07250005
         AGO   .MLWT98                                             @06A 07260005
.MLWT99  ANOP                          TEXT=(line,lt) specified    @06A 07270005
&VALH    SETC  '&TEXT'                 Extract line                @06A 07280005
&VALH1   SETC  '&TEXT(1)'              Extract text address        @06A 07290005
&VALH2   SETC  '&TEXT(2)'              Extract line type           @06A 07300005
&NUMML   SETA  1                       Total number of lines       @06A 07310005
.MLWT98  ANOP                                                      @06A 07320005
         AIF   ('&VALH1' EQ '' AND '&MF' NE 'L').MLWT04 BRANCH IF      X07330005
                              FIRST LINE NULL AND NOT LIST FORM    @PIC 07340005
         AIF   (N'&VALH GT 2).MLWT05   BRANCH IF INVALID LINE TYPE @L5A 07341005
         AIF   ('&VALH2' NE 'C').MLWT02 BRANCH IF NOT CONTROL LINE @L5A 07342005
&LT(1)   SETA  80                      INDICATE CONTROL LINE       @L5A 07343005
.MLWT01  AIF   (&NUMML LE &H).MLWT11 ANY MORE LINES?               @06C 07344005
&H       SETA  &H+1                MORE LINES TO PROCESS           @L5A 07345005
&VALH1   SETC  '&TEXT(&H,1)'           EXTRACT TEXT ADDRESS        @L5A 07346005
&VALH2   SETC  '&TEXT(&H,2)'           EXTRACT LINE TYPE           @L5A 07347005
         AIF   (N'&TEXT(&H)    GT 2).MLWT05 ERROR IF INVALID MULTI-    X07348005
                                   LINE TEXT STRUCTURE IS USED     @L5A 07349005
.MLWT02  AIF   ('&VALH2' NE 'L').MLWT04  JUMP IF THIS IS NOT A LABEL   X07350005
                                       LINE                        @PIA 07360005
         AIF   ('&VALH1' EQ '' AND '&MF' NE 'L').MLWT04                X07370005
                                   JUMP IF A NULL VALUE WAS SPECIFIED  X07380005
                                   FOR TEXT ADDRESS AND THIS IS NOT    X07390005
                                   A LIST FORM INVOCATION OF MACRO @PIC 07400005
&LT(&H)  SETA  40                  INDICATE VALID LABEL LINE       @L5A 07410005
         AIF   (&SECONDL).MLWT03   JUMP IF FIRST LINE PROCESSED    @L5A 07420005
&SECONDL SETB  1                   INDICATE FIRST LINE PROCESSED   @L5A 07430005
         AGO   .MLWT01             CHECK FOR MORE LINES            @L5A 07440005
.MLWT03  AIF   (&NUMML     LE &H).MLWT11 THIS IS AT LEAST LINE 2   @PQC 07450005
&H       SETA  &H+1                INCREMENT LINE INDEX            @L5A 07460005
&VALH1   SETC  '&TEXT(&H,1)'           EXTRACT TEXT ADDRESS        @L5A 07470005
&VALH2   SETC  '&TEXT(&H,2)'           EXTRACT LINE TYPE           @L5A 07480005
         AIF   (N'&TEXT(&H) GT 2).MLWT05 ERROR IF INVALID MULTI-       X07490005
                                   LINE TEXT STRUCTURE IS USED     @L5A 07500005
.MLWT04  AIF   ('&VALH2'         EQ 'E').MLWT06 IF THIS IS AN END      X07510005
                                   LINE, JUMP AND SET INDICATOR    @L5A 07520005
         AIF   ('&VALH1' EQ '' AND '&MF' NE 'L').MLWT05 ERROR IF TEXT  X07530005
                                   FIELD IS NULL AND NOT A LIST FORM   X07540005
                                   INVOCATION OF MACRO             @PIC 07550005
         AIF   ('&VALH2'         EQ 'DE').MLWT08  TEXT EXISTS. CHECK   X07560005
                                   FOR DATA-END LINE TYPE          @L5A 07570005
         AIF   ('&VALH2'   EQ 'L' OR '&VALH2'         EQ 'C').MLWT09   X07580005
                                   NOT DATA-END OR END. ERROR IF THIS  X07590005
                                   IS CONTROL OR LABEL LINE        @L5A 07600005
         AIF   ('&VALH2'   NE 'D' AND '&VALH2'         NE '').MLWT10   *07610005
                                   ERROR IF INVALID LINE TYPE      @L5A 07620005
&LT(&H)  SETA  20                  INDICATE DATA LINE              @L5A 07630005
         AGO   .MLWT03             CHECK FOR MORE LINES            @L5A 07640005
.MLWT05  ANOP                      INVALID LINE TYPE SPECIFIED     @L5A 07650005
&E5      SETB  1                   SET INVALID LINE TYPE FLAG      @L5A 07660005
&LT(&H)  SETA  10                  ASSUME THIS IS AN END LINE      @L5A 07670005
         AGO   .MLWT11             DONE WITH ML PROCESSING         @L5A 07680005
.MLWT06  ANOP                      END LINE SPECIFIED              @L5A 07690005
&LT(&H)  SETA  10                  INDICATE END LINE               @L5A 07700005
.MLWT07  ANOP                      END OR DATA-END INDICATED       @L5A 07710005
&E4      SETB  (&H NE &NUMML)      ERROR IF NOT LAST LINE          @PQC 07720005
         AGO   .MLWT11             DONE WITH MULTI-LINE CHECKS     @L5A 07730005
.MLWT08  ANOP                      DATA-END LINE SPECIFIED         @L5A 07740005
&LT(&H)  SETA  30                  INDICATE DATA-END LINE          @L5A 07750005
         AGO   .MLWT07             CHECK IF THIS IS LAST LINE      @L5A 07760005
.MLWT09  ANOP                      INVALID C OR L LINETYPE         @L5A 07770005
&E3      SETB  1                   SET ERROR INDICATOR             @L5A 07780005
&LT(&H)  SETA  30                  ASSUME DATA-END LINE            @L5A 07790005
         AGO   .MLWT11             DO NO MORE MULTI-LINE CHECKS    @L5A 07800005
.MLWT10  ANOP                      INVALID LINE TYPE SPECIFIED     @L5A 07810005
&E5      SETB  1                   SET ERROR INDICATOR             @L5A 07820005
&LT(&H)  SETA  30                  ASSUME DATA-END LINE            @L5A 07830005
.MLWT11  ANOP                      END OF MULTI-LINE PROCESSING    @L5A 07840005
&LLCNT   SETA  &H                  SET NUMBER OF LINES PROCESSED   @L5A 07850005
&H       SETA  1                   SET LINE COUNTER INDEX          @L5A 07860005
.********************************************************************** 07870005
.*                                                                 @L5A 07880005
.*   IF INLINE MESSAGE TEXT WAS SPECIFIED,                         @L5A 07890005
.*   CHECK FOR DOUBLE QUOTES OR AMPERSANDS (FOR SINGLE AND MULTI-  @L5A 07900005
.*   LINE WTO) AND ADJUST THE MESSAGE LENGTH FOR EACH PAIR FOUND   @L5A 07910005
.*                                                                 @L5A 07920005
.********************************************************************** 07930005
.NOTMLW1 ANOP                      TARGET FOR SINGLE-LINE WTO    X02007 07940005
         AIF   ('&TEXT' NE '^').QDONE0 BRANCH IF TEXT KEYWORD      @L5A 07950005
&I       SETA  1                   INITIALIZE INDEX              X02007 07960005
         AIF   (&IHBWTOR).NOTMLA1  IF WTOR CALL BYPASS WTO COPY    @L6A 07970005
&ILMEQU  SETC  '&SYSLIST(1,1)'     FIRST LINE OF WTO TEXT          @L6A 07980005
         AGO   .NOTMLA2            BYPASS WTOR COPY                @L6A 07990005
.NOTMLA1 ANOP                      WTOR, MAKE COPY OF LINE OF TEXT @L6A 08000005
&ILMEQU  SETC  '&SYSLIST(1,1,1)'   FIRST LINE OF WTOR TEXT         @L6A 08010005
.NOTMLA2 ANOP                                                      @L6A 08020005
&IHBLEN  SETA  K'&ILMEQU-2         SET MESSAGE TEXT LENGTH         @L6C 08030005
&PAIR    SETB  0                   INITIALIZE DOUBLE CHAR. BIT   X02007 08040005
.QLOOP1  ANOP                                                    X02007 08050005
&I       SETA  &I+1+&PAIR          INCREMENT TEXT INDEX          X02007 08060005
         AIF   (&I GE K'&ILMEQU).QDONE1 IF END OF TEXT             @L6C 08070005
&PAIR    SETB  ('&ILMEQU'(&I,2) EQ '''''' OR '&ILMEQU'(&I,2) EQ '&&')  +08080005
                                   CHECK FOR DOUBLE QUOTES OR          +08090005
                                   AMPERSANDS                      @L6C 08100005
&IHBLEN  SETA  &IHBLEN-&PAIR       IF FOUND, DECREMENT TEXT LENGTH     X08110005
                                   BY 1                        @YA17152 08120005
         AGO   .QLOOP1             CHECK REST OF TEXT            X02007 08130005
.QDONE0  ANOP                      TEXT KEYWORD INSTEAD OF INLINE  @L5A 08140005
&AD      SETB  (&LT(1) NE 10)      0 IF E-TYPE LINE, 1 IF NOT      @L5A 08150005
&IHBLEN  SETA  8                   LENGTH OF ADDR PLUS PREFIX      @PLC 08160005
         AGO   .PARMGEN            BEGIN PARMLIST GENERATION       @L5A 08170005
.QDONE1  ANOP                      SEARCHED ENTIRE TEXT FIELD    X02007 08180005
&AD      SETB  (&LT(1) NE 10)      0 IF E-TYPE LINE, 1 IF NOT    X02007 08190005
&IHBLEN  SETA  4+&IHBLEN*&AD                                   @YA17152 08200005
.********************************************************************** 08210005
.*                                                                 @PGA 08220005
.*  CHECK IF INLINE TEXT LENGTH EXCEEDS THE DOCUMENTED MAXIMUM:    @PGA 08230005
.* - MULTI-LINE: CONTROL LINE CAN BE UP TO 35 CHARS                @PGA 08240005
.* - MULTI-LINE: OTHER LINE TYPES CAN BE UP TO 71 CHARS            @PGA 08250005
.* - SINGLE-LINE WTO: CAN BE UP TO 125 CHARS                       @PGA 08260005
.* - SINGLE-LINE WTOR: CAN BE UP TO 122 CHARS                      @PGA 08270005
.*  IF LINE IS TOO LONG, ISSUE INFORMATIONAL MNOTE AND TRUNCATE    @PMC 08280005
.*    LINE                                                         @PMA 08290005
.*                                                                 @PGA 08300005
.********************************************************************** 08310005
.CHKCL   AIF   (&MLW AND &LT(1) EQ 80 AND                              X08320005
                &IHBLEN GT &MAXCLLN+4).BADCL  CHECK CONTROL LINE   @PGA 08330005
.CHKML   AIF   (&MLW AND &LT(1) NE 80 AND                              X08331005
                &IHBLEN GT &MAXMLLN+4).BADML  CHECK OTHER ML LINES @PGA 08332005
.CHKSL   AIF   (NOT &MLW AND NOT &IHBWTOR AND                          X08333005
                &IHBLEN GT &MAXSLLN+4).BADSL  CHECK SL WTO         @PGA 08334005
.CHKSR   AIF   (&MLW OR NOT &IHBWTOR OR                                X08335005
                &IHBLEN LE &MAXSRLN+4).PARMGEN  CHECK SL WTOR      @PGA 08336005
&IHBLEN  SETA  &MAXSRLN+4             TRUNCATE SL WTOR LENGTH      @PGA 08336105
         AGO   .LNGTSL1               GO ISSUE MNOTE               @PGA 08336205
.BADCL   ANOP                         CONTROL LINE TOO LONG        @PGA 08336305
&IHBLEN  SETA  &MAXCLLN+4             TRUNCATE CONTROL LINE LENGTH @PGA 08336405
         AGO   .LNGTML1               GO ISSUE MNOTE               @PGA 08336505
.BADML   ANOP                         MULTI-LINE TOO LONG          @PGA 08336605
&IHBLEN  SETA  &MAXMLLN+4             TRUNCATE MULTI-LINE LENGTH   @PGA 08336705
         AGO   .LNGTML1               GO ISSUE MNOTE               @PGA 08336805
.BADSL   ANOP                         SL WTO TOO LONG              @PGA 08336905
&IHBLEN  SETA  &MAXSLLN+4             TRUNCATE SL WTO LENGTH       @PGA 08337005
.LNGTSL1 ANOP                         ISSUE SINGLE-LINE MNOTE      @PGA 08338005
         MNOTE 0,'INLINE TEXT EXCEEDS ALLOWED MAXIMUM. TEXT LINE HAS BEX08338105
               EN TRUNCATED.'                                      @PMC 08338205
         AGO   .CHOPIT                GO TRUNCATE THE ACTUAL TEXT  @PGA 08338305
.LNGTML1 ANOP                         ISSUE MULTI-LINE MNOTE       @PGA 08338405
         MNOTE 0,'INLINE TEXT EXCEEDS ALLOWED MAXIMUM. TEXT LINE NUMBERX08338505
                1 HAS BEEN TRUNCATED.'                             @PMC 08338605
.CHOPIT  ANOP                          TRUNCATE THE TEXT           @PGA 08338705
&ILMEQU  SETC  '&ILMEQU'(1,&IHBLEN-3)  CHOP DOWN TO MAX LENGTH     @PGA 08338805
&ILMEQU  SETC  '&ILMEQU'.''''          PUT BACK THE ENDING QUOTE   @PGA 08338905
.********************************************************************** 08339005
.*   BEGIN PARAMETER LIST GENERATION UNLESS THIS IS A WTOR         @L2A 08340005
.*   WHERE A WPX DOES NOT EXIST. IN THIS SITUATION, THE WTOR       @L2A 08340105
.*   MACRO WILL GENERATE THE PARAMETER LIST.                       @L2A 08340205
.********************************************************************** 08340305
.PARMGEN ANOP                      PARAMETER LIST GENERATION       @L5C 08340405
         AIF   (&IHBWTOR AND NOT &IWPXBIT).END    DONE IF WTOR WITHOUT X08340505
                                                  A WPX            @L2C 08340605
         DC    AL2(&IHBLEN)             TEXT LENGTH            @YA17152 08340705
         DC    B'&CD(7)&CD(8)'          MCSFLAGS                        08340805
         AIF   ('&MESG' NE '').DCTEXT   INLINE TEXT IN PARMLIST    @L5A 08340905
.********************************************************************** 08341005
.*       INLINE TEXT NOT SPECIFIED. DECLARE TEXT ADDRESS FIELD     @L5A 08342005
.********************************************************************** 08343005
         DC    AL4(0)                   MESSAGE TEXT ADDRESS       @L5A 08344005
         AGO   .SKIPDC             CHECK FOR WPX BUILD             @L5A 08345005
.DCTEXT  ANOP                      PLACE INLINE TEXT IN PARMLIST   @L5A 08346005
         AIF   (&IHBLEN EQ 4).SKIPDC NO TEXT, SKIP THE TEXT DC @YA17152 08347005
         DC    C&ILMEQU                 MESSAGE TEXT               @L6C 08348005
.SKIPDC  AIF   (&IWPXBIT).WPXKEYS  IF WPX IS TO BE BUILT, THEN         X08349005
                                   GENERATE THAT RATHER THAN THE REST  X08350005
                                   OF THE OLD-FORMAT WPL           @L2A 08360005
.********************************************************************** 08370005
.*   GENERATING AN OLD-FORMAT WPL. DETERMINE WHETHER TO            @L2A 08380005
.*   GENERATE MORE FIELDS                                          @L2A 08390005
.********************************************************************** 08400005
         AIF   (NOT &IHBMCS).GENML                             @YA17152 08410005
         DC    B'&CD(1)&CD(2)'          DESCRIPTOR CODES                08420005
         DC    B'&CD(3)&CD(4)'          ROUTING CODES                   08430005
         AIF   ('&MSGTYP(1)' NE 'Y' AND NOT &SWM).GENML            @L2C 08440005
         DC    B'&CD(5)&CD(6)'          MESSAGE TYPE                    08450005
         AGO   .GENML                                              @L2C 08460005
.WPXKEYS ANOP                           GENERATE A WPX             @L2A 08470005
.********************************************************************** 08480005
.*  A WPX IS TO BE GENERATED. FIRST CONVERT THE OBTAINED           @L2A 08490005
.*  ROUTING CODES TO HEXADECIMAL                                   @L2A 08500005
.********************************************************************** 08510005
&DCRC    SETC  ''                   INITIALIZE ROUTING CODE FIELD  @L2A 08520005
&I       SETA  -3                   INITIALIZE ROUTING CODE INDEX  @L2A 08530005
.CNVLOOP ANOP                       TOP OF CONVERSION LOOP         @L2A 08540005
&I       SETA  &I+4                 INCREMENT INDEX TO NEXT ROUTING    X08550005
                                    CODE NIBBLE (GROUP OF 4 BITS)  @L2A 08560005
         AIF   (&I GT 125).ENDCNV   IF DONE CONVERTING, SET EXTENDED   X08570005
                                    MCSFLAGS                       @L2A 08580005
&RNIBBLE SETC  '&RB(&I)&RB(&I+1)&RB(&I+2)&RB(&I+3)'  DEFINE ROUTING    X08590005
                                    CODE NIBBLE (4 BITS)           @L2A 08600005
         AIF   ('&RNIBBLE' NE '0000').TRY1  TEST FOR '0000'        @L2A 08610005
&DCRC    SETC  '&DCRC'.'0'                  APPEND '0' ONTO FIELD  @L2A 08620005
         AGO   .CNVLOOP                                            @L2A 08630005
.TRY1    AIF   ('&RNIBBLE' NE '0001').TRY2  TEST FOR '0001'        @L2A 08640005
&DCRC    SETC  '&DCRC'.'1'                  APPEND '1' ONTO FIELD  @L2A 08650005
         AGO   .CNVLOOP                                            @L2A 08660005
.TRY2    AIF   ('&RNIBBLE' NE '0010').TRY3  TEST FOR '0010'        @L2A 08670005
&DCRC    SETC  '&DCRC'.'2'                  APPEND '2' ONTO FIELD  @L2A 08680005
         AGO   .CNVLOOP                                            @L2A 08690005
.TRY3    AIF   ('&RNIBBLE' NE '0011').TRY4  TEST FOR '0011'        @L2A 08700005
&DCRC    SETC  '&DCRC'.'3'                  APPEND '3' ONTO FIELD  @L2A 08710005
         AGO   .CNVLOOP                                            @L2A 08720005
.TRY4    AIF   ('&RNIBBLE' NE '0100').TRY5  TEST FOR '0100'        @L2A 08730005
&DCRC    SETC  '&DCRC'.'4'                  APPEND '4' ONTO FIELD  @L2A 08740005
         AGO   .CNVLOOP                                            @L2A 08750005
.TRY5    AIF   ('&RNIBBLE' NE '0101').TRY6  TEST FOR '0101'        @L2A 08760005
&DCRC    SETC  '&DCRC'.'5'                  APPEND '5' ONTO FIELD  @L2A 08770005
         AGO   .CNVLOOP                                            @L2A 08780005
.TRY6    AIF   ('&RNIBBLE' NE '0110').TRY7  TEST FOR '0110'        @L2A 08790005
&DCRC    SETC  '&DCRC'.'6'                  APPEND '6' ONTO FIELD  @L2A 08800005
         AGO   .CNVLOOP                                            @L2A 08810005
.TRY7    AIF   ('&RNIBBLE' NE '0111').TRY8  TEST FOR '0111'        @L2A 08820005
&DCRC    SETC  '&DCRC'.'7'                  APPEND '7' ONTO FIELD  @L2A 08830005
         AGO   .CNVLOOP                                            @L2A 08840005
.TRY8    AIF   ('&RNIBBLE' NE '1000').TRY9  TEST FOR '1000'        @L2A 08850005
&DCRC    SETC  '&DCRC'.'8'                  APPEND '8' ONTO FIELD  @L2A 08860005
         AGO   .CNVLOOP                                            @L2A 08870005
.TRY9    AIF   ('&RNIBBLE' NE '1001').TRYA  TEST FOR '1001'        @L2A 08880005
&DCRC    SETC  '&DCRC'.'9'                  APPEND '9' ONTO FIELD  @L2A 08890005
         AGO   .CNVLOOP                                            @L2A 08900005
.TRYA    AIF   ('&RNIBBLE' NE '1010').TRYB  TEST FOR '1010'        @L2A 08910005
&DCRC    SETC  '&DCRC'.'A'                  APPEND 'A' ONTO FIELD  @L2A 08920005
         AGO   .CNVLOOP                                            @L2A 08930005
.TRYB    AIF   ('&RNIBBLE' NE '1011').TRYC  TEST FOR '1011'        @L2A 08940005
&DCRC    SETC  '&DCRC'.'B'                  APPEND 'B' ONTO FIELD  @L2A 08950005
         AGO   .CNVLOOP                                            @L2A 08960005
.TRYC    AIF   ('&RNIBBLE' NE '1100').TRYD  TEST FOR '1100'        @L2A 08970005
&DCRC    SETC  '&DCRC'.'C'                  APPEND 'C' ONTO FIELD  @L2A 08980005
         AGO   .CNVLOOP                                            @L2A 08990005
.TRYD    AIF   ('&RNIBBLE' NE '1101').TRYE  TEST FOR '1101'        @L2A 09000005
&DCRC    SETC  '&DCRC'.'D'                  APPEND 'D' ONTO FIELD  @L2A 09010005
         AGO   .CNVLOOP                                            @L2A 09020005
.TRYE    AIF   ('&RNIBBLE' NE '1110').SETFOX TEST FOR '1110'       @L2A 09030005
&DCRC    SETC  '&DCRC'.'E'                  APPEND 'E' ONTO FIELD  @L2A 09040005
         AGO   .CNVLOOP                                            @L2A 09050005
.SETFOX  ANOP                               MUST BE '1111'         @L2A 09060005
&DCRC    SETC  '&DCRC'.'F'                  APPEND 'F' ONTO FIELD  @L2A 09070005
         AGO   .CNVLOOP                                            @L2A 09080005
.ENDCNV  ANOP                       DONE WITH CONVERSION OF ROUTING    X09090005
                                    CODES                          @L2A 09100005
.********************************************************************** 09110005
.*  SET ON ANY EXTENDED MCSFLAGS THAT DO NOT CORRESPOND            @L2A 09120005
.*  TO THE SPECIFICATION OF A CERTAIN KEYWORD:                     @L2A 09130005
.********************************************************************** 09140005
&EMCS(5) SETB  (&IHBWTOR)               INDICATE WHETHER THIS IS A     X09150005
                                        WTOR WITH EXTENDED PLIST   @L2A 09160005
.********************************************************************** 09170005
.*  PROCESSING FOR THE MISCELLANEOUS FLAGS BYTE IS AS FOLLOWS:     @L2A 09180005
.*    - THE KEYWORDS ARE TO BE USED ON WTO INVOCATIONS ONLY        @L2A 09190005
.*    - ACCEPTABLE SUBSMOD VALUES ARE YES AND NO.                  @L2A 09200005
.*    - THE DEFAULT SUBSMOD VALUE IS NO.                           @L2A 09210005
.********************************************************************** 09220005
         AIF   (&IHBWTOR).ENDFLGS       IGNORE DATA IF WTOR        @L2A 09230005
.CHKSUBS ANOP                           CHECK SUBSMOD KEYWORD      @L2A 09240005
         AIF   ('&SUBSMOD' EQ '').ENDFLGS  IF NO DATA SPECIFIED,       X09250005
                                        DONE WITH KEYWORD          @L2A 09260005
&I       SETA  3                        DATA SPECIFIED. SET INDEX  @L2A 09270005
         AIF   ('&SUBSMOD' NE 'NO').SUBSYES  IF SUBSMOD=NO SPECIFIED,  X09280005
                                        SET APPROPRIATE BIT        @L2A 09290005
&MISCFLG(3) SETB 1                      INDICATE SUBSMOD=NO        @L2A 09300005
         AGO   .ENDFLGS                 DONE WITH MISCELLANEOUS FLAGS  X09310005
                                        BYTE                       @L2A 09320005
.SUBSYES ANOP                           CHECK FOR SUBSMOD=YES      @L2A 09330005
         AIF   ('&SUBSMOD' EQ 'YES').ENDFLGS IF SUBSMOD=YES SPECIFIED, X09340005
                                        SET NOTHING.               @L2A 09350005
         MNOTE 4,'SUBSMOD=YES ASSUMED. SPECIFIED SUBSMOD VALUE WAS NOT X09360005
               YES OR NO.'                                         @L2A 09370005
.ENDFLGS ANOP                           DONE WITH MISCELLANEOUS FLAGS  X09380005
                                        BYTE                       @L2A 09390005
&DCFLGS  SETC  '&MISCFLG(1)&MISCFLG(2)&MISCFLG(3)&MISCFLG(4)&MISCFLG(5)X09400005
               &MISCFLG(6)&MISCFLG(7)&MISCFLG(8)'                  @L2A 09410005
.********************************************************************** 09420005
.*  SET THE FOLLOWING EXTENDED MCS FLAGS:                          @L2A 09430005
.*   FLAG BYTE 1:                                                  @L5A 09440005
.*    - X'40': CONSID KEYWORD SPECIFIED                            @L2A 09450005
.*    - X'10': CONNECT KEYWORD SPECIFIED                           @L2A 09460005
.*    - X'04': PRTY KEYWORD SPECIFIED                              @L2A 09470005
.*    - X'02': CONSNAME KEYWORD SPECIFIED                          @L3A 09480005
.*   FLAG BYTE 2:                                                  @L5A 09490005
.*    - X'80': TEXT KEYWORD SPECIFIED                              @L5A 09500005
.*    - X'04': SYNCH=YES SPECIFIED                                 @L6A 09510005
.********************************************************************** 09520005
&EMCS(2) SETB  ('&CONSID'  NE '^')      IF CONSID KEYWORD SPECIFIED,   X09530005
                                        SET EXTENDED MCSFLAG       @L2A 09540005
&EMCS(4) SETB  ('&CONNECT' NE '^')      IF CONNECT KEYWORD SPECIFIED,  X09550005
                                        SET EXTENDED MCSFLAG       @L2A 09560005
&EMCS(6) SETB  ('&PRTY'    NE '^')      IF PRTY KEYWORD SPECIFIED,     X09570005
                                        SET EXTENDED MCSFLAG       @L2A 09580005
&EMCS(7) SETB  ('&CONSNAME' NE '^')     IF CONSNAME KEYWORD SPECIFIED, X09590005
                                        SET EXTENDED MCSFLAG       @L3A 09600005
&EMCS(9) SETB  ('&TEXT'    NE '^')      IF TEXT KEYWORD SPECIFIED,     X09610005
                                        SET EXTENDED MCSFLAG       @L5A 09620005
&EMCS(14) SETB ('&SYNCH(1)' EQ 'YES')   IF SYNCH=YES SPECIFIED,        +09630005
                                        SET EXTENDED MCSFLAG       @L6A 09640005
.********************************************************************** 09650005
.*                                                                 @L2A 09660005
.*      CHECK FOR INFORMATIONAL OR WARNING MNOTE SITUATIONS        @L2A 09670005
.*      CONCERNING RUN-TIME KEYWORDS.                              @L2A 09680005
.*                                                                 @L2A 09690005
.*      FOR A LIST FORM INVOCATION, IF ANY RUN-TIME WPX KEYWORDS   @L2A 09700005
.*      EXCEPT FOR THE TEXT KEYWORD                                @L5A 09710005
.*      ARE SPECIFIED WITH DATA, ISSUE AN INFORMATIONAL MNOTE:     @L2A 09720005
.*                                                                 @L2A 09730005
.*        'KKKKKKKK' DATA IGNORED ON THE LIST FORM OF WTO.         @L2A 09740005
.*                                                                 @L2A 09750005
.*            WHERE 'KKKKKKKK' MAY BE  CONNECT, CONSID, JOBNAME,   @L2A 09760005
.*            JOBID, PRTY, KEY, TOKEN, SYSNAME, CONSNAME,          @01C 09770005
.*            OR CART                                              @L4A 09780005
.*                                                                 @L2A 09790005
.********************************************************************** 09800005
         AIF   ('&MF' EQ 'I').SMNOTES   IF STANDARD FORM SPECIFIED,    X09810005
                                        CHECK FOR KEYWORD MNOTES   @L2A 09820005
         AIF   ('&CONNECT' EQ '^' OR                                   X09830005
                '&CONNECT' EQ '').LPRTY NO MNOTE IF NO DATA        @01C 09840005
         MNOTE 0,'''CONNECT'' DATA IGNORED ON THE LIST FORM OF WTO.'   X09850005
                                                                   @L2A 09860005
.LPRTY   AIF   ('&PRTY'    EQ '^' OR                                   X09870005
                '&PRTY'    EQ '').LJOBI NO MNOTE IF NO DATA        @L2A 09880005
         MNOTE 0,'''PRTY'' DATA IGNORED ON THE LIST FORM OF WTO.'      X09890005
                                                                   @L2A 09900005
.LJOBI   AIF   ('&JOBID'   EQ '^' OR                                   X09910005
                '&JOBID'   EQ '').LJOBN NO MNOTE IF NO DATA        @L2A 09920005
         MNOTE 0,'''JOBID'' DATA IGNORED ON THE LIST FORM OF WTO.'     X09930005
                                                                   @L2A 09940005
.LJOBN   AIF   ('&JOBNAME' EQ '^' OR                                   X09950005
                '&JOBNAME' EQ '').LKEY  NO MNOTE IF NO DATA        @L2A 09960005
         MNOTE 0,'''JOBNAME'' DATA IGNORED ON THE LIST FORM OF WTO.'   X09970005
                                                                   @L2A 09980005
.LKEY    AIF   ('&KEY'     EQ '^' OR                                   X09990005
                '&KEY'     EQ '').LTOKN NO MNOTE IF NO DATA        @L2A 10000005
         MNOTE 0,'''KEY'' DATA IGNORED ON THE LIST FORM OF WTO.'       X10010005
                                                                   @L2A 10020005
.LTOKN   AIF   ('&TOKEN'   EQ '^' OR                                   X10030005
                '&TOKEN'   EQ '').LCONS NO MNOTE IF NO DATA        @L2A 10040005
         MNOTE 0,'''TOKEN'' DATA IGNORED ON THE LIST FORM OF WTO.'     X10050005
                                                                   @L2A 10060005
.LCONS   AIF   ('&CONSID'  EQ '^' OR                                   X10070005
                '&CONSID'  EQ '').LCNAM NO MNOTE IF NO DATA        @L3C 10080005
         MNOTE 0,'''CONSID'' DATA IGNORED ON THE LIST FORM OF WTO.'    X10090005
                                                                   @L3A 10100005
.LCNAM   AIF   ('&CONSNAME'  EQ '^' OR                                 X10110005
                '&CONSNAME'  EQ '').LRCNA NO MNOTE IF NO DATA      @L3A 10120005
         MNOTE 0,'''CONSNAME'' DATA IGNORED ON THE LIST FORM OF WTO.'  X10130005
                                                                   @L3A 10140005
.LRCNA   AIF   ( NOT &IHBWTOR OR NOT &RCNSPEC  OR                      X10150005
                '&WTORCN'  EQ '').LSYSN NO MNOTE IF NO DATA        @L3A 10160005
         MNOTE 0,'''RPLYISUR'' DATA IGNORED ON THE LIST FORM OF WTO.'  X10170005
                                                                   @L3A 10180005
.LSYSN   AIF   ('&SYSNAME' EQ '^' OR                                   X10190005
                '&SYSNAME' EQ '').LCART  NO MNOTE IF NO DATA       @L4C 10200005
         MNOTE 0,'''SYSNAME'' DATA IGNORED ON THE LIST FORM OF WTO.'   X10210005
                                                                   @L2A 10220005
.LCART   AIF   ('&CART' EQ '^' OR                                      X10230005
                '&CART' EQ '').LLINK  NO MNOTE IF NO DATA          @P9C 10240005
         MNOTE 0,'''CART'' DATA IGNORED ON THE LIST FORM OF WTO.'      X10250005
                                                                   @L4A 10260005
.LLINK   ANOP                                                      @L6A 10270005
         AIF   ('&LINKAGE' EQ '^' OR                                   +10280005
                '&LINKAGE' EQ '').LWSPM     NO MNOTE IF NO DATA    @P9A 10290005
         MNOTE 0,'''LINKAGE'' DATA IGNORED ON THE LIST FORM OF WTO.'   +10300005
                                                                   @P9A 10310005
.LWSPM   ANOP                                                      @L6A 10320005
         AIF   ('&WSPARM'  EQ '^' OR                                   +10330005
                '&WSPARM(1)' EQ '0' OR                                 +10340005
                '&WSPARM'  EQ '').GENWPX    NO MNOTE IF NO DATA    @PAC 10350005
         MNOTE 0,'''WSPARM'' DATA IGNORED ON THE LIST FORM OF WTO.'    +10360005
                                                                   @L6A 10370005
         AGO   .GENWPX                                             @L2A 10380005
.********************************************************************** 10390005
.*                                                                 @L2A 10400005
.*      FOR A STANDARD FORM INVOCATION, IF ANY RUN-TIME KEYWORDS   @L2A 10410005
.*      ARE SPECIFIED WITHOUT DATA, ISSUE A WARNING MNOTE:         @L2A 10420005
.*                                                                 @L2A 10430005
.*        'KKKKKKKK' KEYWORD IGNORED. NO VALUE SPECIFIED.          @L2A 10440005
.*                                                                 @L2A 10450005
.*         WHERE 'KKKKKKKK' MAY BE  CONNECT, CONSID, JOBNAME,      @L2A 10460005
.*            JOBID, PRTY, KEY, TOKEN, SYSNAME, CONSNAME,          @01C 10470005
.*            WSPARM, OR CART.                                     @L6C 10480005
.*                                                                 @L2A 10490005
.********************************************************************** 10500005
.SMNOTES ANOP                                                      @L2A 10510005
         AIF   ('&CONNECT' NE '').SPRTY NO MNOTE IF DATA SPECIFIED @01C 10520005
         MNOTE 4,'''CONNECT'' KEYWORD IGNORED. NO VALUE SPECIFIED.'    X10530005
                                                                   @L2A 10540005
&EMCS(4) SETB  0                        TURN EXT MCSFLAG BACK OFF  @L2A 10550005
.SPRTY   AIF   ('&PRTY' NE '').SCART    NO MNOTE IF DATA SPECIFIED @L4C 10560005
         MNOTE 4,'''PRTY'' KEYWORD IGNORED. NO VALUE SPECIFIED.'       X10570005
                                                                   @L2A 10580005
&EMCS(6) SETB  0                        TURN EXT MCSFLAG BACK OFF  @L2A 10590005
.SCART   AIF   ('&CART' NE '').SJOBI    NO MNOTE IF DATA SPECIFIED @L4A 10600005
         MNOTE 4,'''CART'' KEYWORD IGNORED. NO VALUE SPECIFIED.'       X10610005
                                                                   @L4A 10620005
.SJOBI   AIF   ('&JOBID' NE '').SJOBN   NO MNOTE IF DATA SPECIFIED @L2A 10630005
         MNOTE 4,'''JOBID'' KEYWORD IGNORED. NO VALUE SPECIFIED.'      X10640005
                                                                   @L2A 10650005
.SJOBN   AIF   ('&JOBNAME' NE '').SKEY  NO MNOTE IF DATA SPECIFIED @L2A 10660005
         MNOTE 4,'''JOBNAME'' KEYWORD IGNORED. NO VALUE SPECIFIED.'    X10670005
                                                                   @L2A 10680005
.SKEY    AIF   ('&KEY' NE '').STOKN     NO MNOTE IF DATA SPECIFIED @L2A 10690005
         MNOTE 4,'''KEY'' KEYWORD IGNORED. NO VALUE SPECIFIED.'        X10700005
                                                                   @L2A 10710005
.STOKN   AIF   ('&TOKEN' NE '').SCONS   NO MNOTE IF DATA SPECIFIED @L2A 10720005
         MNOTE 4,'''TOKEN'' KEYWORD IGNORED. NO VALUE SPECIFIED.'      X10730005
                                                                   @L2A 10740005
.SCONS   AIF   ('&CONSID' NE '').SCNAM  NO MNOTE IF DATA SPECIFIED @L3C 10750005
         MNOTE 4,'''CONSID'' KEYWORD IGNORED. NO VALUE SPECIFIED.'     X10760005
                                                                   @L2A 10770005
&EMCS(2) SETB  0                        TURN EXT MCSFLAG BACK OFF  @L2A 10780005
.SCNAM   AIF   ('&CONSNAME' NE '').SRCNA  NO MNOTE IF DATA SPECIFIED   X10790005
                                                                   @L3A 10800005
         MNOTE 4,'''CONSNAME'' KEYWORD IGNORED. NO VALUE SPECIFIED.'   X10810005
                                                                   @L3A 10820005
&EMCS(7) SETB  0                        TURN EXT MCSFLAG BACK OFF  @L2A 10830005
.SRCNA   AIF   (NOT &IHBWTOR OR NOT &RCNSPEC OR                        X10840005
                '&WTORCN' NE '').SSYSN  NO MNOTE IF DATA SPECIFIED @L3A 10850005
         MNOTE 4,'''RPLYISUR'' KEYWORD IGNORED. NO VALUE SPECIFIED.'   X10860005
                                                                   @L3A 10870005
.SSYSN   AIF   ('&SYSNAME' NE '').SWSPRM NO MNOTE IF DATA GIVEN    @L6C 10880005
         MNOTE 4,'''SYSNAME'' KEYWORD IGNORED. NO VALUE SPECIFIED.'    X10890005
                                                                   @L2A 10900005
.SWSPRM  ANOP                                                      @L6A 10910005
         AIF   ('&WSPARM' NE '').SSYNC   NO MNOTE IF DATA GIVEN    @L6A 10920005
         MNOTE 4,'''WSPARM'' KEYWORD IGNORED. NO VALUE SPECIFIED.'     +10930005
                                                                   @L6A 10940005
.SSYNC   ANOP                                                      @L6A 10950005
         AIF   ('&SYNCH' NE '').GENWPX   NO MNOTE IF DATA GIVEN    @L6A 10960005
         MNOTE 4,'''SYNCH'' KEYWORD IGNORED. NO VALUE SPECIFIED.'  @L6A 10970005
&EMCS(14) SETB  0                       TURN EXT MCSFLAG BACK OFF  @L6A 10980005
.********************************************************************** 10990005
.*                                                                 @L2A 11000005
.*   BEGIN GENERATION OF THE WPX SECTION OF THE PARAMETER LIST     @L2A 11010005
.*                                                                 @L2A 11020005
.********************************************************************** 11030005
.GENWPX  ANOP                           GENERATE THE WPX           @L2A 11040005
         DC    AL1(&IWPXVER)            VERSION LEVEL              @PJC 11050005
         DC    B'&DCFLGS'               MISCELLANEOUS FLAGS        @L2A 11060005
.********************************************************************** 11070005
.*   PROCESSING FOR REPLY LENGTH (WTOR) IS AS FOLLOWS:             @L2A 11080005
.*     .WHEN LIST FORM IS SPECIFIED:                               @L2A 11090005
.*       - IF NO DATA SPECIFIED, GENERATE A VALUE OF 0             @L2A 11100005
.*       - IF DATA IS IN A REGISTER, ISSUE AN ERROR MESSAGE        @L2A 11110005
.*                 (THIS IS DONE BY THE WTOR MACRO)                @L2A 11120005
.*       - OTHERWISE, GENERATE WITH THE DATA SPECIFIED             @L2A 11130005
.*     .WHEN STANDARD FORM IS SPECIFIED:                           @L2A 11140005
.*       - IF NO DATA SPECIFIED, ISSUE AN ERROR MESSAGE            @L2A 11150005
.*                 (THIS IS DONE BY THE WTOR MACRO)                @L2A 11160005
.*       - IF DATA IS IN A REGISTER, GENERATE A VALUE OF 0. (THE   @L2A 11170005
.*            ACTUAL DATA WILL BE INSERTED LATER IN THE MACRO)     @L2A 11180005
.*       - OTHERWISE, GENERATE WITH THE DATA SPECIFIED             @L2A 11190005
.********************************************************************** 11200005
         AIF   (NOT &IHBWTOR).DCRL0     GEN ZERO IF NOT A WTOR     @L2A 11210005
         AIF   ('&MF' NE 'L').RLIFORM   BRANCH IF NOT LIST FORM    @L2A 11220005
         AIF   ('&WTOLENR' EQ '').DCRL0  LIST FORM GEN 0 IF NO         X11230005
                                         DATA                  @YA17152 11240005
         AGO   .DCRL                    NOT REG. GEN WITH THE DATA @L2A 11250005
.RLIFORM AIF   (&RLREG).DCRL0           GEN 0 IF DATA IN REG       @L2A 11260005
.DCRL    DC    AL1(&WTOLENR)            REPLY LENGTH           @YA17152 11270005
         AGO   .AFTERRL                 BUILD REST OF PARM LIST    @L2A 11280005
.DCRL0   DC    AL1(0)                   REPLY LENGTH               @L2A 11290005
.AFTERRL ANOP                           DONE WITH REPLY LENGTH     @L2A 11300005
.********************************************************************** 11310005
.*       THE FOLLOWING FIELD MUST BE UPDATED EACH TIME THE LENGTH  @L5A 11320005
.*       OF THE WPX CHANGES.                                       @L5A 11330005
.********************************************************************** 11340005
         AIF   ('&IWPXVER' EQ '2').WPXLEN2   DCL LENGTH, VER2 WPX  @PJA 11350005
         DC    AL1(0)                   RESERVED                   @PJA 11360005
         AGO   .WPXLENE                                            @PJA 11370005
.WPXLEN2 ANOP                                                      @PJA 11380005
         DC    AL1(104)                 LENGTH OF WPX              @L5C 11390005
.WPXLENE ANOP                           FINISHED WPX LENGTH DCL    @PJA 11400005
.********************************************************************** 11410005
.*   DEFINE DC FIELDS FOR EXTENDED MCSFLAGS                        @L2A 11420005
.********************************************************************** 11430005
&EM(1)   SETC  '&EMCS(1)&EMCS(2)&EMCS(3)&EMCS(4)&EMCS(5)&EMCS(6)&EMCS(7X11440005
               )&EMCS(8)'                                          @L2A 11450005
&EM(2)   SETC  '&EMCS(9)&EMCS(10)&EMCS(11)&EMCS(12)&EMCS(13)&EMCS(14)&EX11460005
               MCS(15)&EMCS(16)'                                   @L2A 11470005
         DC    B'&EM(1)&EM(2)'          EXTENDED MCS FLAGS         @L2A 11480005
         DC    AL2(0)                   RESERVED                   @L2A 11490005
.********************************************************************** 11500005
.*   PROCESSING FOR REPLY BUFFER ADDRESS (WTOR) IS AS FOLLOWS:     @P7A 11510005
.*   .WHEN LIST FORM IS SPECIFIED:                                 @P7A 11520005
.*     - IF NO DATA SPECIFIED, GENERATE A VALUE OF 0               @P7A 11530005
.*     - IF DATA IS IN A REGISTER, ISSUE AN ERROR MESSAGE          @P7A 11540005
.*               (THIS IS DONE BY THE WTOR MACRO)                  @P7A 11550005
.*     - OTHERWISE, GENERATE WITH THE DATA SPECIFIED               @P7A 11560005
.*   .WHEN STANDARD FORM IS SPECIFIED                              @P7A 11570005
.*     - IF NO DATA SPECIFIED, ISSUE AN ERROR MESSAGE              @P7A 11580005
.*               (THIS IS DONE BY THE WTOR MACRO)                  @P7A 11590005
.*     - IF DATA IS IN A REGISTER, GENERATE A VALUE OF 0. (THE     @P7A 11600005
.*          ACTUAL DATA WILL BE INSERTED LATER IN THE MACRO)       @P7A 11610005
.*     - OTHERWISE, GENERATE WITH THE DATA SPECIFIED               @P7A 11620005
.********************************************************************** 11630005
         AIF   (NOT &IHBWTOR).DCRA0     GEN ZERO IF NOT A WTOR     @P7A 11640005
         AIF   ('&MF' NE 'L').RAIFORM   BRANCH IF NOT LIST FORM    @P7A 11650005
         AIF   ('&WTORYA' EQ '').DCRA0  LIST FORM. GEN 0 IF NO DATA@P7A 11660005
         AGO   .DCRA                    NOT REG. GEN WITH THE DATA @P7A 11670005
.RAIFORM AIF   (&RAREG).DCRA0           GEN 0 IF DATA IN REG       @P7A 11680005
.DCRA    DC    AL4(&WTORYA)             REPLY BUFFER ADDRESS       @P7A 11690005
         AGO   .AFTERRA                 BUILD REST OF PARM LIST    @P7A 11700005
.DCRA0   DC    AL4(0)                   REPLY BUFFER ADDRESS       @P7C 11710005
.AFTERRA ANOP                           DONE WITH REPLY ADDRESS    @P7A 11720005
.********************************************************************** 11730005
.*   PROCESSING FOR REPLY ECB ADDRESS (WTOR) IS AS FOLLOWS:        @P7A 11740005
.*   .WHEN LIST FORM IS SPECIFIED:                                 @P7A 11750005
.*     - IF NO DATA SPECIFIED, GENERATE A VALUE OF 0               @P7A 11760005
.*     - IF DATA IS IN A REGISTER, ISSUE AN ERROR MESSAGE          @P7A 11770005
.*               (THIS IS DONE BY THE WTOR MACRO)                  @P7A 11780005
.*     - OTHERWISE, GENERATE WITH THE DATA SPECIFIED               @P7A 11790005
.*   .WHEN STANDARD FORM IS SPECIFIED                              @P7A 11800005
.*     - IF NO DATA SPECIFIED, ISSUE AN ERROR MESSAGE              @P7A 11810005
.*               (THIS IS DONE BY THE WTOR MACRO)                  @P7A 11820005
.*     - IF DATA IS IN A REGISTER, GENERATE A VALUE OF 0. (THE     @P7A 11830005
.*          ACTUAL DATA WILL BE INSERTED LATER IN THE MACRO)       @P7A 11840005
.*     - OTHERWISE, GENERATE WITH THE DATA SPECIFIED               @P7A 11850005
.********************************************************************** 11860005
         AIF   (NOT &IHBWTOR).DCEA0     GEN ZERO IF NOT A WTOR     @P7A 11870005
         AIF   ('&MF' NE 'L').EAIFORM   BRANCH IF NOT LIST FORM    @P7A 11880005
         AIF   ('&WTOECB' EQ '').DCEA0  LIST FORM. GEN 0 IF NO DATA@P7A 11890005
         AGO   .DCEA                    NOT REG. GEN WITH THE DATA @P7A 11900005
.EAIFORM AIF   (&EAREG).DCEA0           GEN 0 IF DATA IN REG       @P7A 11910005
.DCEA    DC    AL4(&WTOECB)             REPLY ECB ADDRESS          @P7A 11920005
         AGO   .AFTEREA                 BUILD REST OF PARM LIST    @P7A 11930005
.DCEA0   DC    AL4(0)                   REPLY ECB ADDRESS          @P7C 11940005
.AFTEREA ANOP                           DONE WITH ECB ADDRESS      @P7A 11950005
         DC    AL4(0)                   CONNECT ID                 @01C 11960005
         DC    B'&CD(1)&CD(2)'          DESCRIPTOR CODES           @L2A 11970005
         DC    AL2(0)                   RESERVED                   @L2A 11980005
         DC    XL16'&DCRC'              EXTENDED ROUTING CODES     @L2A 11990005
         DC    B'&CD(5)&CD(6)'          MESSAGE TYPE               @L2A 12000005
         DC    AL2(0)                   MESSAGE'S PRIORITY         @L2A 12010005
         DC    CL8'        '            JOB ID                     @L2A 12020005
         DC    CL8'        '            JOB NAME                   @L2A 12030005
         DC    CL8'        '            RETRIEVAL KEY              @L2A 12040005
         DC    AL4(0)                   TOKEN FOR DOM              @P1C 12050005
         DC    AL4(0)                   CONSOLE ID                 @P1C 12060005
         DC    CL8'        '            SYSTEM NAME                @L2A 12070005
         AIF   ('&IWPXVER' NE '1').GENWPX2                         @PJA 12080005
         DC    AL4(0)                   RESERVED                   @PJA 12090005
         DC    AL4(0)                   RESERVED                   @PJA 12100005
         AGO   .GENML                   FINISHED VER1 WPX          @PJA 12110005
.GENWPX2 ANOP                           VERSION 2 WPX FIELDS       @PJA 12120005
         DC    CL8'        '            CONSOLE NAME               @L3A 12130005
         DC    AL4(0)                   REPLY CONSOLE NAME/ID ADDR @L3A 12140005
         DC    AL4(0)                   CART ADDRESS               @L4C 12150005
.********************************************************************** 12160005
.*   WSPARM IS GENERATED AS ZERO UNLESS IT IS INLINE FORM          @PBA 12170005
.*   WITH A NON-NULL, NONZERO, NON-REGISTER VALUE.                 @PBA 12180005
.*   IT IS INITIALIZED IF INLINE FORM, NOT A REGISTER.             @PBA 12190005
.********************************************************************** 12200005
         AIF   ('&WSPARM' EQ '^' OR '&WSPARM(1)' EQ '').GENWS      @PBA 12210005
         AIF   ('&WSPARM(1)' EQ '0').GENWS                         @PBA 12220005
         AIF   ('&MF(1)' EQ 'L').GENWS                             @PBA 12230005
         AIF   ('&WSPARM'(1,1) EQ '(').GENWS                       @PBA 12240005
         DC    AL4(&WSPARM(1))          WSPARM ADDRESS             @PBA 12250005
         AGO   .GENML                                              @PBA 12260005
.GENWS   ANOP                                                      @PBA 12270005
         DC    AL4(0)                   WSPARM ADDRESS             @L6C 12280005
.********************************************************************** 12290005
.*   DONE WITH COMMON WPL OR WPX GENERATION.  IF THIS IS A         @L2A 12300005
.*   MULTI-LINE WTO, GENERATE THE MULTI-LINE INFORMATION SECTION   @L2A 12310005
.*   OF THE PARAMETER LIST.                                        @L2A 12320005
.********************************************************************** 12330005
.GENML   AIF   (NOT &MLW).NOTMLW2       SKIP THIS SECTION IF NOT A     X12340005
                                        MULTI-LINE WTO             @L2C 12350005
         AIF   ('&TEXT' NE '^').GENMLT  BRANCH IF TEXT KEYWORD USED    X12360005
                                                                   @L5A 12370005
         DC    XL2'&LT(1)00'            LINE TYPE                       12380005
         AIF   ('&AREAID' EQ '').ID0    GEN 0 IF NO AREA ID      X02007 12390005
         DC    CL1'&AREAID'             AREA ID                  X02007 12400005
         AGO   .IDA                     GO GENERATE LINE COUNT   X02007 12410005
.ID0     DC    X'00'                    AREA ID                         12420005
.IDA     ANOP                           GENERATE LINE COUNT      X02007 12430005
         DC    AL1(&LLCNT)              TOTAL NUMBER OF LINES    X02007 12440005
.MLW12   AIF   (&H GE &LLCNT).MLW14     DONE IF ALL LINES GENNED X02007 12450005
&H       SETA  &H+1                     INCREMENT LINE COUNTER   X02007 12460005
         AIF   (&IHBWTOR).MLW12A1       IF WTOR BYPASS WTO SETTING @L6A 12470005
&ILMEQU  SETC  '&SYSLIST(&H,1)'         SET TO NEXT LINE OF WTO    @L6A 12480005
         AGO   .MLW12A2                 BYPASS WTOR SETTING        @L6A 12490005
.MLW12A1 ANOP                           WTOR, SET VARIABLE         @L6A 12500005
&ILMEQU  SETC  '&SYSLIST(1,&H,1)'       SET TO NEXT LINE OF WTOR   @L6A 12510005
.MLW12A2 ANOP                                                      @L6A 12520005
&I       SETA  1                        INITIALIZE CHAR COUNTER  X02007 12530005
&IHBLEN  SETA  K'&ILMEQU-2              LENGTH OF CURRENT LINE     @L6C 12540005
&PAIR    SETB  0                        INITIALIZE NO PAIR FOUND X02007 12550005
.QLOOPH  ANOP                                                    X02007 12560005
&I       SETA  &I+1+&PAIR               INCREMENT CHAR COUNTER   X02007 12570005
         AIF   (&I GE K'&ILMEQU).QDONEH IF DONE WITH THIS LINE     @L6C 12580005
&PAIR    SETB  ('&ILMEQU'(&I,2) EQ '''''' OR '&ILMEQU'(&I,2) EQ '&&')  +12590005
                                        CHECK FOR DOUBLE QUOTE OR      +12600005
                                        DOUBLE AMPERSAND           @L6C 12610005
&IHBLEN  SETA  &IHBLEN-&PAIR            IF A PAIR FOUND, ADJUST LINE   X12620005
                                        LENGTH                 @YA17152 12630005
         AGO   .QLOOPH                  LOOK FOR MORE PAIRS      X02007 12640005
.QDONEH  ANOP                           DONE WITH CURRENT LINE   X02007 12650005
&AD      SETB  (&LT(&H) NE 10)          0 IF A NULL END LINE, 1 IF NOT X12660005
                                                                 X02007 12670005
&IHBLEN  SETA  4+&IHBLEN*&AD            SET TEXT LENGTH        @YA17152 12680005
.********************************************************************** 12690005
.*                                                                 @PGA 12700005
.*  CHECK IF INLINE TEXT LENGTH EXCEEDS THE DOCUMENTED MAXIMUM:    @PGA 12710005
.* - AT THIS POINT, WE MUST BE DEALING WITH A MULTI-LINE AND       @PGA 12720005
.* - NOT A CONTROL LINE, SO THE MAXIMUM LENGTH IS 71 CHARS.        @PGA 12730005
.*  IF LINE IS TOO LONG, ISSUE WARNING MNOTE AND TRUNCATE LINE     @PGA 12740005
.*                                                                 @PGA 12750005
.********************************************************************** 12760005
         AIF   (&IHBLEN LE &MAXMLLN+4).GENMORE  CHECK IF TOO LONG  @PGA 12770005
         MNOTE 0,'INLINE TEXT EXCEEDS ALLOWED MAXIMUM. TEXT LINE NUMBERX12780005
                &H HAS BEEN TRUNCATED.'                            @PNC 12790005
&IHBLEN  SETA  &MAXMLLN+4              SET NEW MAXIMUM LENGTH      @PGA 12800005
&ILMEQU  SETC  '&ILMEQU'(1,&IHBLEN-3)  TRUNCATE THE TEXT           @PGA 12810005
&ILMEQU  SETC  '&ILMEQU'.''''          PUT BACK ENDING QUOTE       @PGA 12820005
.GENMORE ANOP                          GENERATE NEXT LINE OF DCLS  @PGA 12830005
         DC    AL2(&IHBLEN)             MESSAGE LENGTH         @YA17152 12840005
         DC    XL2'&LT(&H)00'           LINE TYPE                       12850005
         AIF   (&IHBLEN EQ 4).MLW12     IF NO TEXT,DONT GEN IT @YA17152 12860005
         DC    C&ILMEQU                 MESSAGE TEXT               @L6C 12870005
         AGO   .MLW12                   CHECK NEXT LINE OF TEXT  X02007 12871005
.MLW14   AIF   (NOT &E4).MLW15                                   X02007 12871105
.********************************************************************** 12871205
.*       ISSUE ERROR MESSAGE:                                  @G860PSS 12871305
.* *,GENERATION TERMINATED BY E OR DE LINE TYPE                @G860PSS 12871405
.********************************************************************** 12871505
         IHBERMAC 242                                                   12871605
.MLW15   AIF   (NOT &E5).MLW17                                   X02007 12871705
.********************************************************************** 12871805
.*       ISSUE ERROR MESSAGE:                                  @G860PSS 12871905
.* 4,INVALID LINE TYPE, E OR DE ASSUMED                        @G860PSS 12872005
.********************************************************************** 12873005
         IHBERMAC 243                                                   12874005
.MLW17   AIF   (NOT &E3).NOTMLW2                                 X02007 12875005
.********************************************************************** 12876005
.*       ISSUE ERROR MESSAGE:                                  @G860PSS 12877005
.* 12,INVALID C OR L LINETYPE, DE ASSUMED--GENERATION TERMINATED        12878005
.********************************************************************** 12879005
         IHBERMAC 244                                                   12880005
         AGO   .NOTMLW2                 CONTINUE                   @L5A 12890005
.********************************************************************** 12900005
.*       GENERATE THE MULTILINE INFORMATION FOR THE PARAMETER LIST @L5A 12910005
.*       WHEN THE TEXT KEYWORD IS SPECIFIED                        @L5A 12920005
.********************************************************************** 12930005
.GENMLT  ANOP                                                      @L5A 12940005
&H       SETA  1                        INITIALIZE COUNTER         @L5A 12950005
         DC    XL2'&LT(1)00'            LINE TYPE                  @L5A 12960005
         AIF   ('&AREAID' EQ '').ID2    GEN 0 IF NO AREA ID        @L5A 12970005
         DC    CL1'&AREAID'             AREA ID                    @L5A 12980005
         AGO   .IDB                     GO GENERATE LINE COUNT     @L5A 12990005
.ID2     DC    X'00'                    AREA ID                    @L5A 13000005
.IDB     ANOP                           GENERATE LINE COUNT        @L5A 13010005
         DC    AL1(&LLCNT)              TOTAL NUMBER OF LINES      @L5A 13020005
.MLWT12  AIF   (&H GE &LLCNT).MLWT14    DONE IF ALL LINES GENNED   @L5A 13030005
&H       SETA  &H+1                     INCREMENT LINE COUNTER     @L5A 13040005
&AD      SETB  (&LT(&H) NE 10)          0 IF A NULL END LINE, 1 IF NOT X13050005
                                                                   @L5A 13060005
&IHBLEN  SETA  8                        SET TEXT LENGTH            @PLC 13070005
         DC    AL2(&IHBLEN)             MESSAGE LENGTH         @YA17152 13080005
         DC    XL2'&LT(&H)00'           LINE TYPE                  @L5A 13090005
         DC    AL4(0)                   TEXT ADDRESS               @L5A 13100005
         AGO   .MLWT12                  CHECK NEXT LINE OF TEXT    @L5A 13110005
.MLWT14  AIF   (NOT &E4).MLWT15                                    @L5A 13120005
.********************************************************************** 13130005
.*       ISSUE ERROR MESSAGE:                                      @L5A 13140005
.* *,GENERATION TERMINATED BY E OR DE LINE TYPE                    @L5A 13150005
.********************************************************************** 13160005
         IHBERMAC 242                                              @L5A 13170005
.MLWT15  AIF   (NOT &E5).MLWT17                                    @L5A 13180005
.********************************************************************** 13190005
.*       ISSUE ERROR MESSAGE:                                      @L5A 13200005
.* 4,INVALID LINE TYPE, E OR DE ASSUMED                            @L5A 13210005
.********************************************************************** 13220005
         IHBERMAC 243                                              @L5A 13230005
.MLWT17  AIF   (NOT &E3).NOTMLW2                                   @L5A 13240005
.********************************************************************** 13250005
.*       ISSUE ERROR MESSAGE:                                      @L5A 13260005
.* 12,INVALID C OR L LINETYPE, DE ASSUMED--GENERATION TERMINATED   @L5A 13270005
.********************************************************************** 13280005
         IHBERMAC 244                                              @L5A 13290005
.********************************************************************** 13300005
.*       THE DS INSTRUCTION THAT FOLLOWS IS NOT EXECUTED FOR       @L2A 13310005
.*       EITHER A LIST FORM WTO OR WTOR, OR A STANDARD             @L2A 13320005
.*       FORM WTOR WITHOUT A WPX. IN THIS CASE, THE WTOR           @L2A 13330005
.*       MACRO WILL GENERATE THE PARAMETER LIST AND WILL           @L2A 13340005
.*       THEN PERFORM THE DS INSTRUCTION.                          @L2A 13350005
.********************************************************************** 13360005
.NOTMLW2 ANOP                                                      @L5A 13370005
         AIF   ('&MF' EQ 'L' OR                                        X13380005
               (&IHBWTOR AND NOT &IWPXBIT)).END                    @L2C 13390005
&GNAME.A DS    0H                                                       13400005
         AIF   (NOT &IWPXBIT).SKIPMOD                              @L2A 13410005
.********************************************************************** 13420005
.*       A WPX EXISTS FOR THIS STANDARD FORM INVOCATION.           @L2A 13430005
.*       SET REGISTER 14 TO POINT TO THE FIRST BYTE AFTER          @L2A 13440005
.*       THE MESSAGE TEXT FIELD.                                   @L2A 13450005
.********************************************************************** 13460005
         &LR   14,1                     FIRST BYTE OF PARM LIST    @L2A 13470005
         SR    15,15                    CLEAR REGISTER 15          @L2A 13480005
         AH    15,0(1,0)                ADD LENGTH OF TEXT + 4     @L2A 13490005
         AR    14,15                    FIRST BYTE AFTER TEXT      @L2A 13500005
.********************************************************************** 13510005
.*       IF THE TEXT KEYWORD IS SPECIFIED, INSERT THE KEYWORD      @L5A 13520005
.*       VALUE INTO THE PARAMETER LIST IN PLACE OF INLINE          @L5A 13530005
.*       MESSAGE TEXT.                                             @L5A 13540005
.********************************************************************** 13550005
.ITEXTID ANOP                           CHECK FOR TEXT                  13560005
         AIF   ('&TEXT' EQ '^').IWTOR   SKIP DOWN IF NO TEXT       @L5A 13570005
         AIF   (&MLW).ITEXTR2           BRANCH IF MULTILINE        @L5A 13580005
         AIF   ('&TEXT'(1,1) EQ '(').ITEXTRG BRANCH IF IN REGISTER @L5A 13590005
         LA    15,&TEXT(1)              LOAD TEXT VALUE            @L5A 13600005
         ST    15,4(0,1)                STORE TEXT ADDR INTO PLIST @L5A 13610005
         AGO   .IWTOR                   CHECK FOR WTOR             @L5A 13620005
.ITEXTRG ANOP                           TEXT ADDRESS IN REGISTER   @L5A 13630005
         AIF   (NOT &IHBWTOR).ITEXTNO   IF NOT WTOR, USE TEXT FLD  @L5A 13640005
&K       SETA  K'&TEXT                  GET LENGTH OF VALUE        @L5A 13650005
&VALH1   SETC  '&TEXT'(2,&K-2)          TAKE STUFF BETWEEN PARENS  @L5A 13660005
         ST    &VALH1,4(0,1)            STORE TEXT ADDRESS         @L5A 13670005
         AGO   .IWTOR                   CHECK FOR WTOR             @L5A 13680005
.ITEXTNO ANOP                           TEXT ADDRESS IN REGISTER   @L5A 13690005
         ST    &TEXT(1),4(0,1)          STORE TEXT ADDR INTO PLIST @L5A 13700005
         AGO   .IWTOR                   CHECK FOR WTOR             @L5A 13710005
.ITEXTR2 ANOP                           MULTILINE W/VALUE IN REG   @L5A 13720005
&VALH1   SETC  '&TEXT(1,1)'             EXTRACT FIRST LINE'S ADDR  @L5A 13730005
         AIF   ('&VALH1' EQ '').IWTOR   BRANCH IF NULL ENTRY       @L5A 13740005
         AIF   (&NUMML EQ 1).LN1        If there is only one line of   X13750005
                                        text, go and do special        X13760005
                                        checks for a register      @PQA 13770005
         AIF   ('&VALH'(1,2) NE  '((').ITEXTR4 For more than one line  X13780005
                                        of text, VALH is equal to      X13790005
                                        (textaddr,linetype) or         X13800005
                                        ((regnum),linetype). Check for X13810005
                                        2 parens to indicate a         X13820005
                                        register is being used     @PQA 13830005
         AGO   .REGTXT1                                            @PQA 13840005
.LN1     ANOP                           1 line of text - do the        X13850005
                                        register check             @PQA 13860005
         AIF   ('&VALH1'(1,1) NE '(').ITEXTR4 VALH1 is the textaddr    X13870005
                                        piece of the TEXT value    @PQC 13880005
.REGTXT1 ANOP                           Text is a register         @PQA 13890005
&VALH1   SETC  '&TEXT(1,1,1)'           Strip the parens off the       X13900005
                                        register specification     @PQA 13910005
         ST    &VALH1,4(0,1)            STORE TEXT ADDRESS         @L5A 13920005
         AGO   .IWTOR                   CHECK FOR WTOR             @L5A 13930005
.ITEXTR4 ANOP                                                      @L5A 13940005
         LA    15,&VALH1                LOAD ADDR OF TEXT FIELD    @P8C 13941005
         ST    15,4(0,1)                STORE TEXT ADDR INTO PLIST @P8A 13942005
.IWTOR   ANOP                                                           13943005
         AIF   (NOT &IHBWTOR).ENDWTOR IF NOT WTOR, BRANCH          @L2A 13944005
.********************************************************************** 13945005
.*       IF THE REPLY ADDRESS IS IN A REGISTER, STORE IT IN        @L2A 13946005
.*       THE PARAMETER LIST                                        @L2A 13947005
.********************************************************************** 13948005
         AIF   ('&WTORYA' EQ '').IECB   BR IF NO DATA SPECIFIED    @L2A 13949005
         AIF   (NOT &RAREG).IECB        BR IF NOT IN REG           @P6C 13950005
         ST    &WTORYA,8(0,14)          STORE REPLY ADDRESS        @L2A 13960005
.********************************************************************** 13970005
.*       IF ECB ADDRESS IS IN A REGISTER, SAVE ITS ADDRESS IN      @L2A 13980005
.*       THE PARAMETER LIST                                        @L2A 13990005
.********************************************************************** 14000005
.IECB    AIF   ('&WTOECB' EQ '').ILEN   BR IF NO DATA SPECIFIED    @L2A 14010005
         AIF   (NOT &EAREG).ILEN        BR IF NOT IN REG           @P6C 14020005
         ST    &WTOECB,12(0,14)         STORE ECB ADDRESS          @L2A 14030005
.********************************************************************** 14040005
.*       IF THE LENGTH IS IN A REGISTER, SAVE ITS ADDRESS IN       @L2A 14050005
.*       THE PARAMETER LIST                                        @L2A 14060005
.********************************************************************** 14070005
.ILEN    AIF   ('&WTOLENR' EQ '').ENDWTOR BR IN NO DATA SPEC.  @YA17152 14080005
         AIF   (NOT &RLREG).ENDWTOR     BR IN NOT IN REG           @L2A 14090005
         STC   &WTOLENR,2(0,14)         STORE REPLY LENGTH     @YA17152 14100005
.ENDWTOR ANOP                           END OF 'WTOR ONLY' INFO    @L2A 14110005
.********************************************************************** 14120005
.*       IF THE PRTY KEYWORD IS SPECIFIED, (FIELD OR REGISTER)     @L2A 14130005
.*       INSERT IT INTO THE PARAMETER LIST                         @L2A 14140005
.********************************************************************** 14150005
         AIF   ('&PRTY' EQ '^' OR                                      X14160005
                '&PRTY' EQ '').IRCON      VERIFY DATA SPECIFIED    @L3C 14170005
         AIF   ('&PRTY'(1,1) EQ '(').IPRTYRG BRANCH IF IN REG      @L2A 14180005
         MVC   42(2,14),&PRTY(1)        INSERT PRTY INTO PLIST     @L2A 14190005
         AGO   .IRCON                   GO CHECK RPLYISUR          @L3C 14200005
.IPRTYRG STH   &PRTY(1),42(0,14)        INSERT PRTY INTO PLIST     @L2A 14210005
.********************************************************************** 14220005
.*       IF THIS IS A WTOR AND THE REPLY CONSOLE NAME/ID ADDRESS   @L3A 14230005
.*       IS SPECIFIED, (FIELD OR REGISTER) INSERT IT INTO          @L3A 14240005
.*       THE PARAMETER LIST                                        @L3A 14250005
.********************************************************************** 14260005
.IRCON   AIF   (NOT &IHBWTOR OR '&WTORCN' EQ '').ICONS INVOKED BY      X14270005
                                          WTOR AND DATA SPECIFIED       14280005
         AIF   (&RCNREG).IRCONRG        BRANCH IF IN A REG         @L3C 14290005
         LA    15,&WTORCN               LOAD REPLY CONSOLE NAME/ID     X14300005
                                        ADDRESS                    @L3A 14310005
         ST    15,92(0,14)              INSERT REPLY CONSOLE NAME/ID   X14320005
                                        ADDRESS IN PLIST           @L3A 14330005
         AGO   .ICONS                   GO CHECK CONSID            @L3A 14340005
.IRCONRG ST    &WTORCN,92(0,14)         INSERT REPLY CONSOLE NAME/ID   X14350005
                                        ADDRESS IN PLIST           @L3A 14360005
.********************************************************************** 14370005
.*       IF THE CONSID KEYWORD IS SPECIFIED, (FIELD OR REGISTER)   @L2A 14380005
.*       INSERT IT INTO THE PARAMETER LIST                         @L2A 14390005
.********************************************************************** 14400005
.ICONS   AIF   ('&CONSID' EQ '^' OR                                    X14410005
                '&CONSID' EQ '').ICNNAM   VERIFY DATA SPECIFIED    @L3C 14420005
         AIF   ('&CONSID'(1,1) EQ '(').ICONSRG  BRANCH IF IN REG   @L2A 14430005
         L     15,&CONSID(1)            LOAD CONSID                @L2A 14440005
         ST    15,72(0,14)              INSERT CONSID INTO PLIST   @L2A 14450005
         AGO   .ICNNAM                  GO CHECK CONSNAME          @L3C 14460005
.ICONSRG ST    &CONSID(1),72(0,14)      INSERT CONSID INTO PLIST   @L2A 14470005
.********************************************************************** 14480005
.*       IF THE CONSNAME KEYWORD IS SPECIFIED, (FIELD OR REGISTER) @L3A 14490005
.*       INSERT IT INTO THE PARAMETER LIST                         @L3A 14500005
.********************************************************************** 14510005
.ICNNAM  AIF   ('&CONSNAME' EQ '^' OR                                  X14520005
                '&CONSNAME' EQ '').IJOBID VERIFY DATA SPECIFIED    @L3A 14530005
         AIF   ('&CONSNAME'(1,1) EQ '(').ICNNARG BRANCH IF IN REG  @L3A 14540005
         MVC   84(8,14),&CONSNAME(1)    INSERT CONSNAME INTO PLIST @POC 14550005
         AGO   .IJOBID                  GO CHECK JOBID             @L3A 14560005
.ICNNARG MVC   84(8,14),0(&CONSNAME(1)) INSERT CONSNAME INTO PLIST @L3A 14570005
.********************************************************************** 14580005
.*       IF THE JOBID KEYWORD IS SPECIFIED, (FIELD OR REGISTER)    @L2A 14590005
.*       INSERT IT INTO THE PARAMETER LIST                         @L2A 14600005
.********************************************************************** 14610005
.IJOBID  AIF   ('&JOBID' EQ '^' OR                                     X14620005
                '&JOBID' EQ '').IJOBN    VERIFY DATA SPECIFIED     @L2A 14630005
         AIF   ('&JOBID'(1,1) EQ '(').IJOBIRG  BRANCH IF IN REG    @L2A 14640005
         MVC   44(8,14),&JOBID(1)       INSERT JOBID INTO PLIST    @L2A 14650005
         AGO   .IJOBN                   GO CHECK JOBNAME           @L2A 14660005
.IJOBIRG MVC   44(8,14),0(&JOBID(1))    INSERT JOBID INTO PLIST    @L2A 14670005
.********************************************************************** 14680005
.*       IF THE JOBNAME KEYWORD IS SPECIFIED, (FIELD OR REGISTER)  @L2A 14690005
.*       INSERT IT INTO THE PARAMETER LIST                         @L2A 14700005
.********************************************************************** 14710005
.IJOBN   AIF   ('&JOBNAME' EQ '^' OR                                   X14720005
                '&JOBNAME' EQ '').IKEY    VERIFY DATA SPECIFIED    @L2A 14730005
         AIF   ('&JOBNAME'(1,1) EQ '(').IJOBNRG  BRANCH IF IN REG  @L2A 14740005
         MVC   52(8,14),&JOBNAME(1)     INSERT JOBNAME INTO PLIST  @L2A 14750005
         AGO   .IKEY                    GO CHECK KEY               @L2A 14760005
.IJOBNRG MVC   52(8,14),0(&JOBNAME(1))  INSERT JOBNAME INTO PLIST  @L2A 14770005
.********************************************************************** 14780005
.*       IF THE KEY KEYWORD IS SPECIFIED, (FIELD OR REGISTER)      @L2A 14790005
.*       INSERT IT INTO THE PARAMETER LIST                         @L2A 14800005
.********************************************************************** 14810005
.IKEY    AIF   ('&KEY' EQ '^' OR                                       X14820005
                '&KEY' EQ '').ITOKEN    VERIFY DATA SPECIFIED      @L2A 14830005
         AIF   ('&KEY'(1,1) EQ '(').IKEYRG KEY IN REG?             @L2A 14840005
         MVC   60(8,14),&KEY(1)         INSERT KEY INTO PLIST      @L2A 14850005
         AGO   .ITOKEN                  GO ISSUE SVC               @L2A 14860005
.IKEYRG  MVC   60(8,14),0(&KEY(1))      INSERT KEY INTO PLIST      @L2A 14870005
.********************************************************************** 14880005
.*       IF THE TOKEN KEYWORD IS SPECIFIED, (FIELD OR REGISTER)    @L2A 14890005
.*       INSERT IT INTO THE PARAMETER LIST                         @L2A 14900005
.********************************************************************** 14910005
.ITOKEN  AIF   ('&TOKEN' EQ '^' OR                                     X14920005
                '&TOKEN' EQ '').ISYSN   VERIFY DATA SPECIFIED      @L2A 14930005
         AIF   ('&TOKEN'(1,1) EQ '(').ITOKNRG BRANCH IF IN REG     @L2A 14940005
         L     15,&TOKEN(1)             LOAD TOKEN                 @L2A 14950005
         ST    15,68(0,14)              INSERT TOKEN INTO PLIST    @L2A 14960005
         AGO   .ISYSN                   GO CHECK SYSNAME           @L2A 14970005
.ITOKNRG ST    &TOKEN(1),68(0,14)       INSERT TOKEN INTO PLIST    @L2A 14980005
.********************************************************************** 14990005
.*       IF THE SYSNAME KEYWORD IS SPECIFIED, (FIELD OR REGISTER)  @L2A 15000005
.*       INSERT IT INTO THE PARAMETER LIST                         @L2A 15010005
.********************************************************************** 15020005
.ISYSN   AIF   ('&SYSNAME' EQ '^' OR                                   X15030005
                '&SYSNAME' EQ '').ICONN   VERIFY DATA SPECIFIED    @01C 15040005
         AIF   ('&SYSNAME'(1,1) EQ '(').ISYSNRG BRANCH IF IN REG   @L2A 15050005
         MVC   76(8,14),&SYSNAME(1)     INSERT SYSNAME INTO PLIST  @L2A 15060005
         AGO   .ICONN                   GO CHECK CONNECT           @01C 15070005
.ISYSNRG MVC   76(8,14),0(&SYSNAME(1))  INSERT SYSNAME INTO PLIST  @L2A 15080005
.********************************************************************** 15090005
.*       IF THE CONNECT KEYWORD IS SPECIFIED, (FIELD OR REGISTER)  @L2A 15100005
.*       INSERT IT INTO THE PARAMETER LIST                         @L2A 15110005
.********************************************************************** 15120005
.ICONN   AIF   ('&CONNECT' EQ '^' OR                                   X15130005
                '&CONNECT' EQ '').ISNCHY   VERIFY DATA SPECIFIED   @L6C 15140005
         AIF   ('&CONNECT'(1,1) EQ '(').ICONNRG BRANCH IF IN REG   @L2A 15150005
         L     15,&CONNECT(1)           LOAD CONNECT ID            @L2A 15160005
         ST    15,16(0,14)              INSERT CONNECT INTO PLIST  @L2A 15170005
         AGO   .ISNCHY                  GO CHECK SYNCH             @L6C 15180005
.ICONNRG ST    &CONNECT(1),16(0,14)     INSERT CONNECT INTO PLIST  @L2A 15190005
.********************************************************************** 15200005
.*       IF THE SYNCH=YES WAS SPECIFIED SET THE BIT IN THE         @L6A 15210005
.*       EXTENDED MCS FLAG FIELD                                   @L6A 15220005
.********************************************************************** 15230005
.ISNCHY  ANOP                                                      @L6A 15240005
&SYNN    SETB  ('&SYNCH(1)' EQ 'NO')    SYNCH MUST BE UPDATED      @PAC 15250005
&EMCS(14) SETB  ('&SYNCH(1)' EQ 'YES')  INDICATE IN EXT MCSFLAGS   @PAC 15260005
.********************************************************************** 15270005
.*       IF THE WAIT STATE PARAMETER LIST ADDRESS WAS SPECIFIED    @L6A 15280005
.*       AS A REGISTER, PUT IT IN THE PARAMETER LIST               @PBC 15290005
.*       IF IT WAS NOT A REGISTER, IT IS ALREADY INITIALIZED.      @PBA 15300005
.********************************************************************** 15310005
.IWSPRM  ANOP                                                      @L6A 15320005
         AIF   ('&WSPARM' EQ '^' OR '&WSPARM(1)' EQ '').ICART      @P9C 15330005
         AIF   ('&WSPARM(1)' EQ '0').ICART                         @PBC 15340005
         AIF   ('&WSPARM'(1,1) NE '(').ICART                       @PBC 15350005
.IWSPMRG ANOP                           REGISTER SPECIFIED         @L6A 15360005
         ST    &WSPARM(1),100(0,14)     INSERT WSPARM  INTO PLIST  @L6A 15370005
.********************************************************************** 15380005
.*       IF THE CART   KEYWORD IS SPECIFIED, (FIELD OR REGISTER)   @L4A 15390005
.*       INSERT IT INTO THE PARAMETER LIST                         @L4A 15400005
.********************************************************************** 15410005
.ICART   AIF   ('&CART' EQ '^' OR                                      X15420005
                '&CART' EQ '').ITEXT    BRANCH IF NO CART          @L5A 15430005
         AIF   ('&CART'(1,1) EQ '(').ICARTRG  BRANCH IF IN REG     @L4A 15440005
         LA    15,&CART(1)              LOAD CART ADDRESS          @L4A 15450005
         ST    15,96(0,14)              INSERT CART ADR INTO PLIST @L4A 15460005
         AGO   .ITEXT                   GO CHECK FOR TEXT KWD      @L5A 15470005
.ICARTRG ST    &CART(1),96(0,14)        INSERT CART ADR INTO PLIST @L4A 15480005
.********************************************************************** 15490005
.*       IF THIS IS A MULTILINE WTO, CHECK TO SEE IF THE TEXT      @L5A 15500005
.*       KEYWORD WAS SPECIFIED. IF SO, STORE THE ADDRESS OF EACH   @L5A 15510005
.*       LINE OF TEXT IN THE PARAMETER LIST.                       @L5A 15520005
.********************************************************************** 15530005
.ITEXT   ANOP                           CHECK FOR TEXT ON MLWTO    @L5A 15540005
         AIF   ('&TEXT' EQ '^' OR NOT &MLW).SKIPMOD  SKIP IF NOT A     X15550005
                                        MULTILINE W/TEXT KEYWORD   @L5A 15560005
.********************************************************************** 15570005
.*       MOVE THE TEXT ADDRESSES INTO THE PARAMETER LIST           @L5A 15580005
.********************************************************************** 15590005
&MLTTIND SETA  2                        LINE TYPE INDEX            @L5A 15600005
&MLINDX  SETA  4                        OFFSET TO TEXT ADDRESS     @L5A 15610005
&H       SETA  2                        PROCESSED MAJOR            @L5A 15620005
         AIF   (&H GT &LLCNT).SKIPMOD   ISSUE SVC WHEN COMPLETE    @L5A 15630005
         XR    15,15                    CLEAR INDEX FOR INSERTS    @L5A 15640005
         IC    15,3(14)                 SET LENGTH OF WPX          @L5A 15650005
         LA    14,4(15,14)              POINT TO MULTILINE ENTRIES @L5A 15660005
.IMLW00  ANOP                           BEGIN LOOP FOR MINORS      @L5A 15670005
         AIF   (&H GT &LLCNT).SKIPMOD   ISSUE SVC WHEN COMPLETE    @L5A 15680005
&VALH    SETC  '&TEXT(&H)'              EXTRACT CURRENT VALUE      @L5A 15690005
&VALH1   SETC  '&TEXT(&H,1)'            EXTRACT TEXT ADDRESS       @L5A 15700005
         AIF   ('&VALH1'  EQ     '').IMLW02 BRANCH IF NULL LINE    @L5A 15710005
         AIF   ('&VALH1'(1,1) EQ '(').IMLW01 BRANCH IF SPECIFIED       X15720005
                                        IN REGISTER                @L5A 15730005
         LA    15,&VALH1                LOAD ADDR OF TEXT FIELD    @P8C 15740005
         ST    15,&MLINDX.(14)          STORE TEXT ADDR INTO PLIST @P8A 15750005
         AGO   .IMLW02                  CONTINUE PROCESSING        @L5A 15760005
.IMLW01  ANOP                           TEXT IN REGISTER           @L5A 15770005
&K       SETA  K'&VALH1                                                 15780005
&VALH1   SETC  '&VALH1'(2,&K-2)                                         15790005
         ST    &VALH1,&MLINDX.(14)      STORE TEXT ADDRESS         @L5A 15800005
.IMLW02  ANOP                           UPDATE POINTERS            @L5A 15810005
&H       SETA  &H+1                     UPDATE NUMBER OF LINES     @L5A 15820005
&MLINDX  SETA  &MLINDX+8                INDEX TO NEXT PLIST ENTRY  @L5A 15830005
         AGO   .IMLW00                  CONTINUE                   @L5A 15840005
.********************************************************************** 15850005
.*       PARAMETER LIST GENERATION AND INSERTS ARE COMPLETE.       @L2A 15860005
.*       IF ANY OTHER ERRORS WERE FOUND DURING PROCESSING,         @L2A 15870005
.*       ISSUE AN ERROR MESSAGE VIA IHBERMAC.                      @L2A 15880005
.********************************************************************** 15890005
.SKIPMOD ANOP                                                      @L2A 15891005
         AIF   ('&MF' EQ 'L').END   IF ENTERED DUE TO FILLING IN TEXT  X15892005
                                    ADDRESSES ON LIST FORM, BRANCH @L5A 15893005
         AIF   (&E6 OR &E3 OR &IHBWTL).END                       X02007 15894005
.EXECUTE ANOP                                                      @L6C 15895005
         AIF   ('&MF' EQ 'L').END       LIST FORM DOES NOT ISSUE SVC OR+15896005
                                        BRANCH ENTRY WTO           @L6C 15897005
         AIF   ('&LINKAGE(1)' EQ 'BRANCH').WTOBALR                 @L6A 15898005
         SVC   35                       ISSUE SVC 35               @L6A 15898105
         AGO   .END                     BRANCH TO EXIT             @L6A 15898205
.WTOBALR ANOP                           BRANCH ENTRY WTO FIND ADDR @L6A 15898305
         AIF    ('&SYSAM64' NE 'YES').AM641                        @MXA 15898405
        MNOTE 8,'WTO ---> LINKAGE=BRANCH IS NOT VALID IN AMODE 64' @MXA 15898505
.AM641   ANOP                                                      @MXA 15898605
         L     15,16(0,0)               ADDRESS OF CVT             @L6A 15898705
         L     15,200(0,15)             ADDRESS OF SCVT            @L6A 15898805
         L     15,20(0,15)              WTO BRANCH ENTRY POINT     @L6A 15898905
         BASR  14,15                    ISSUE BRANCH ENTRY WTO     @LCC 15899005
         AGO   .END                     BRANCH TO EXIT             @L6A 15900005
.********************************************************************** 15910005
.*                                                                      15920005
.*  BEGIN THE LIST OF SEVERITY 12 ERROR MESSAGES                        15930005
.*                                                                      15931005
.********************************************************************** 15932005
.ERROR1  ANOP              INVALID LINKAGE VALUE SPECIFIED         @L6A 15933005
         MNOTE 12,'NO TEXT GENERATED.  SPECIFIED LINKAGE VALUE'    @L6A 15934005
         MNOTE '       WAS NOT SVC OR BRANCH.'                     @L6A 15935005
&WTOERR  SETB  1                        A SEVERE MNOTE WAS ISSUED  @L6A 15936005
         MEXIT                                                     @L6A 15937005
.ERROR2  ANOP              NUMBER OF LINES OF TEXT EXCEEDS MAXIMUM @L6A 15938005
         MNOTE 12,'TOO MANY LINES OF TEXT.  MAX=&MAXLINS WHEN'     @L6A 15939005
         MNOTE '        SYNCH=YES.'                                @L6A 15940005
&WTOERR  SETB  1                        A SEVERE MNOTE WAS ISSUED  @L6A 15950005
         MEXIT                                                     @L6A 15960005
.ERROR3  ANOP              INVALID SYNCH VALUE SPECIFIED           @L6A 15970005
         MNOTE 12,'NO TEXT GENERATED.  SPECIFIED SYNCH VALUE'      @L6A 15980005
         MNOTE '      WAS NOT YES OR NO.'                          @L6A 15990005
&WTOERR  SETB  1                        A SEVERE MNOTE WAS ISSUED  @L6A 15991005
         MEXIT                                                     @L6A 15992005
.ERROR4  ANOP              REQUIRED KEYWORD VALUE MISSING          @L6A 15993005
         MNOTE 12,'NO TEXT GENERATED.  ''SYNCH=YES'' REQUIRES'     @L6A 15994005
         MNOTE '       ''LINKAGE=BRANCH''.'                        @L6A 15995005
&WTOERR  SETB  1                        A SEVERE MNOTE WAS ISSUED  @L6A 15996005
         MEXIT                                                     @L6A 15997005
.ERROR5  ANOP              MUTUAL EXCLUSIVITY ERROR                @L6A 15998005
         MNOTE 12,'NO TEXT GENERATED.  ''SYNCH=YES'' IS MUTUALLY'  @L6A 15999005
         MNOTE '   EXCLUSIVE WITH THE CONNECT AND AREAID KEYWORDS.'    +16000005
                                                                   @L6A 16010005
&WTOERR  SETB  1                        A SEVERE MNOTE WAS ISSUED  @L6A 16020005
         MEXIT                                                     @L6A 16030005
.ERROR6  ANOP              MUTUAL EXCLUSIVITY ERROR                @L6A 16040005
         MNOTE 12,'NO TEXT GENERATED.  ''SYNCH=YES'' IS MUTUALLY'  @L6A 16050005
         MNOTE '    EXCLUSIVE WITH ''MCSFLAG=HDRCPY''.'            @L6A 16051005
&WTOERR  SETB  1                        A SEVERE MNOTE WAS ISSUED  @L6A 16052005
         MEXIT                                                     @L6A 16053005
.ERROR7  ANOP              INVALID WSPARM VALUE SPECIFIED          @L6A 16054005
         MNOTE 12,'NO TEXT GENERATED.  SPECIFIED WSPARM VALUE WAS' @L6A 16055005
         MNOTE '   NOT 0, A REGISTER, OR AN ADDRESS.'              @L6A 16056005
&WTOERR  SETB  1                        A SEVERE MNOTE WAS ISSUED  @L6A 16057005
         MEXIT                                                     @L6A 16058005
.ERROR8  ANOP              REQUIRED KEYWORD VALUE MISSING          @L6A 16059005
         MNOTE 12,'NO TEXT GENERATED.  ''WSPARM ^= 0'' REQUIRES'   @L6A 16060005
         MNOTE '  ''LINKAGE=BRANCH'' AND ''SYNCH=YES''.'           @L6A 16070005
&WTOERR  SETB  1                        A SEVERE MNOTE WAS ISSUED  @L6A 16080005
         MEXIT                                                     @L6A 16090005
.NOTXT   ANOP                                                    X02007 16100005
         MNOTE 12,'NUMBER OF LINES REQUESTED IS 0 OR GREATER THAN 255 -X16110005
                GENERATION TERMINATED'                         @G64DPSS 16120005
&WTOERR  SETB  1                        A SEVERE MNOTE WAS ISSUED  @L2A 16121005
.BADREG0 ANOP                                                      @L8A 16122005
         MNOTE 12,'MCSFLAG=REG0 NOT SUPPORTED ON RELEASE HBB7720 OR ABOX16123005
               VE. USE CONSID= INSTEAD.'                           @L8A 16124005
&WTOERR  SETB  1                        A SEVERE MNOTE WAS ISSUED  @L8A 16125005
         MEXIT                                                     @L8A 16126005
.BADQREG0 ANOP                                                     @L8A 16127005
         MNOTE 12,'MCSFLAG=QREG0 NOT SUPPORTED ON RELEASE HBB7720 OR ABX16128005
               OVE. USE CONSID= INSTEAD.'                          @L8A 16129005
&WTOERR  SETB  1                        A SEVERE MNOTE WAS ISSUED  @L8A 16130005
         MEXIT                                                     @L8A 16140005
.END     MEND                                                           16150005
**/                                                                     16160005
*  WTO: MACRO KEYS(                                                     16170005
*                   ROUTCDE,      /*ROUTING CODES FOR MESSAGE        */ 16180005
*                   DESC,         /*MESSAGE DESCRIPTOR CODES         */ 16190005
*                   MSGTYP,       /*ROUTE TO MESSAGE CONSOLES        */ 16200005
*                   MCSFLAG,      /*MESSAGE ATTRIBUTES               */ 16210005
*                   AREAID,       /*DISPLAY AREA                     */ 16220005
*                   WQEBLK,       /*ADDRESS OF WQE               @L2A*/ 16230005
*                   CONNECT,      /*CONNECT ID FOR MESSAGE       @L2A*/ 16240005
*                   CONSID,       /*CONSOLE ID FOR MESSAGE       @L2A*/ 16250005
*                   CONSNAME,     /*CONSOLE NAME FOR MESSAGE     @L3A*/ 16260005
*                   RPLYISUR,     /*CONSOLE NAME/ID FOR MESSAGE  @L3A*/ 16270005
*                   JOBID,        /*MESSAGE JOB IDENTIFIER       @L2A*/ 16280005
*                   JOBNAME,      /*MESSAGE JOB NAME             @L2A*/ 16290005
*                   SUBSMOD,      /*MODIFICATION CHARACTERISTICS @L2A*/ 16300005
*                   KEY,          /*KEY FOR MESSAGE              @L2A*/ 16310005
*                   TOKEN,        /*TOKEN FOR MESSAGE            @L2A*/ 16320005
*                   SYSNAME,      /*SYSTEM NAME                  @L2A*/ 16330005
*                   RTCD,         /*SVC RETURN CODE                  */ 16340005
*                   CART,         /*COMMAND AND RESPONSE TOKEN   @L4A*/ 16350005
*                   TEXT,         /*ADDRESS OF MESSAGE TEXT      @L5A*/ 16360005
*                   LINKAGE,      /*HOW CONTROL IS PASSED        @L6A*/ 16370005
*                   SYNCH,        /*PROCESS SYNCHRONOUSLY        @L6A*/ 16380005
*                   WSPARM,       /*ASSOCIATED WAIT STATE        @L6A*/ 16390005
*                   CPFLG,        /*CONTROL PROGRAM ONLY FLAGS   @D3A*/ 16400005
*                   ASCB,         /*ASCB                         @PPA*/ 16410005
*                   MF            /*LIST FORMAT                      */ 16420005
*                          );                                           16430005
*    ANS('?'!!MACLABEL!!'WTOP '!!MACLIST!!MACKEYS!!';');                16440005
*%END WTO;                                                              16450005
