         MACRO                                                                  
&NAME    APPCCMD &RPL=,&AAREA=,&ACB=,&AREA=,&AREALEN=,&ARG=,           X        
               &BRANCH=,&CRYPT=,&ECB=,&EXIT=,&OPTCD=,&RECLEN=,         X        
               &CD=,&CGID=,&CONFTXT=,&CONMODE=,&CONTROL=,              X        
               &CONVID=,&CONXMOD=,&DEACTYP=,&FILL=,&LIST=,             X        
               &LOCKS=,&LOGMODE=,&LUAFFIN=,&LUNAME=,&NAMEUSE=,&NETID=, X        
               &QUALIFY=,&RTSRTRN=,&SENSE=,&SESSID=,&SESSIDL=,         X        
               &TYPE=,&USERFLD=,&VTRINA=,&VTRINL=,&VTROUTA=,           X        
               &VTROUTL=                                      @D2C @L3C         
.*                                                                              
.* /***** START OF SPECIFICATIONS ************************************/         
.* /*                                                                */         
.* /*  MACRO NAME: APPCCMD                                           */         
.* /*                                                                */         
.* /*  DESCRIPTIVE NAME: LU6.2 FUNCTION REQUEST MACRO                */         
.* /*                                                                */         
.* /*  COPYRIGHT: LICENSED MATERIALS - PROPERTY OF IBM               */         
.* /*                                                                */         
.* /*             THIS PRODUCT CONTAINS "RESTRICTED MATERIALS OF IBM"*/         
.* /*                                                                */         
.* /*             5694-A01 (C) COPYRIGHT IBM CORP. 1987, 2001.       */         
.* /*             ALL RIGHTS RESERVED.                               */         
.* /*                                                                */         
.* /*             U.S. GOVERNMENT USERS RESTRICTED RIGHTS -          */         
.* /*             USE, DUPLICATION OR DISCLOSURE RESTRICTED BY       */         
.* /*             GSA ADP SCHEDULE CONTRACT WITH IBM CORP.           */         
.* /*                                                                */         
.* /*             SEE COPYRIGHT INSTRUCTIONS.                        */         
.* /*                                                                */         
.* /*  FUNCTION:                                                     */         
.* /*      GENERATES IN-LINE CODE FOR APPCCMD MACRO                  */         
.* /*                                                                */         
.* /*  NOTES:                                                        */         
.* /*      THIS MACRO REQUIRES A "CONTROL=" PARAMETER TO SPECIFY THE */         
.* /*      PARTICULAR FUNCTION DESIRED. THE LIST OF VALID CONTROL    */         
.* /*      VALUES ARE FOLLOWING: ALLOC, SEND, RECEIVE, PREPRCV,      */         
.* /*      DEALLOC, DEALLOCQ, REJECT, CHECK, RCVFMH5, RESETRCV,      */         
.* /*      SENDEXPD, RCVEXPD, TESTSTAT, OPRCNTL, SETSESS, PREALLOC,  */         
.* /*      SENDFMH5 AND SENDRCV.                                     */         
.* /*      THE APPCCMD MACRO WHEN ISSUED MUST BE ACCOMPANIED         */         
.* /*      BY AN RPL THAT CONTAINS A POINTER TO APPC AREA (AAREA=)   */         
.* /*      WHICH WILL BE USED TO STORE THE VTAM APPC REQUEST         */         
.* /*      PARAMETER LIST. THE GENERATED CODE LOADS THE RPL          */         
.* /*      ADDRESS INTO REGISTER 1, MODIFIES RPL FIELDS AS           */         
.* /*      INDICATED BY THE RPL MODIFIERS ON THE APPCCMD. LOADS      */         
.* /*      A REQUEST CODE INTO REGISTER ZERO, AND BRANCHES TO THE    */         
.* /*      INTERFACE ROUTINE WHOSE ADDRESS IS IN THE ACB LOCATED     */         
.* /*      VIA THE RPL. ANY CODE TO MODIFY THE RPL IS BYPASSED IF    */         
.* /*      THE RPL IS ALREADY ACTIVE.                            @L1C*/         
.* /*                                                                */         
.* /*  PROCESSOR: ASSEMBLER                                          */         
.* /*                                                                */         
.* /*  CREATED BY:                                                   */         
.* /*                                                                */         
.* /*  INTERNAL MACROS:                                              */         
.* /*      IST6MCAL,IST6MCDA,IST6MCSE,IST6MCRE,IST6MCPR,IST6MCRJ,    */         
.* /*      IST6MCCK,IST6MCRF,IST6MCRS,IST6MCOC,IST6MCER,IST6MCUA,    */         
.* /*      IST6MCSS,IST6MCSX,IST6MCRX,IST6MCTE,IST6MCPA,IST6MCSF     */         
.*/*       IST6MCSR                                              @D1C*/         
.* /*                                                                */         
.* /*  EXTERNAL REFERENCES: NONE                                     */         
.* /*                                                                */         
.* /*  CHANGE ACTIVITY:                                              */         
.* /*    09/03/86 - DP0053 ALLOW USERFLD ON OPRCNTL          @P041406*/         
.* /*    07/11/88 - ACCEPT NEW CD= KEYWORD ON RECEIVE        @P058398*/         
.* /*    09/07/88 - CORRECT MISPELLED LOGMODE KEYWORD        @P060481*/         
.* /*                                                                */         
.* /* $MAC(APPCCMD),COMP(API),PROD(VTAM): LU6.2 FUNCTION REQUEST     */         
.* /*                                                                */         
.* /* FLAG REASON   RELEASE DATE   ORIGIN  FLAG DESCRIPTORS          */         
.* /* ---- -------- ------- ------ ------  ------------------------- */         
.* /* $F1= FS1@@CLD HVT3302 880425 255471: SYNCPOINT SUPPORT         */         
.* /* $F2= RCR0004  HVT3302 880907 255471: SYNCPOINT RCR SUPPORT     */         
.* /* $Q1= P063278  HVT3302 881205 255471: IMPLEMENT SESSION         */         
.* /*                                      DEACTIVATION DELAYED      */         
.* /*                                      FUNCTION                  */         
.* /* $Q2= P064461  HVT3302 890116 460025: SPLIT RESETRCV INVALIDS   */         
.* /* $Q3= P064622  HVT3302 890118 460025: REMOVE RESYNC PRIORITY    */         
.* /* $BA= ACC@@AMS HVT3401 891025 615520: PL/AS CONVERSION          */         
.* /* $B1= AE@@@AMS HVT3401 890707 460025: SELECTIVE DATA ENCRYPTION */         
.* /* $B2= AP@@@CLD HVT3401 890519 496698: PERSISTENT LU-LU SESSION  */         
.* /* $KF= S4N@@CLD HATAPPN 910326 692313: CP-CP SESSIONS            */         
.* /* $KG= NQNSTG2  NQNAME2 910711 007643: ENHANCED NQN SUPPORT (2)  */         
.* /* $I1= BD@@@MST APPCE03 911021 510689: APPC Deallocate queueing  */         
.* /* $I2= FF@@@MST APPCFDX 911120 879315: APPC Full-Duplex support  */         
.* /* $I3= FT@@@MST APPCTST 910217 510689: APPC TESTSTAT             */         
.* /* $T1= P100610  NQNAME2 920228 879315: KEYWORD VALUE TOO LONG    */         
.* /* $U2= P103324  APPCFDX 920710 879315: Latest code not REQRELed  */         
.* /* $L1= KA@@@PLD APPCRR  930716 446638: DCE Security Services     */         
.* /* $U3= P110887  GENRES  931024 879315: Generic Resource support  */         
.* /* $U4= P111572  GENRES  931029 879315: Split 6MCRE INVALKW list  */         
.* /* $Y1= P114780  APPCRR  940518 576146: DCE Security Services     */         
.* /* $L2= KA@DR006 APPCRR  940713 576146: Vector Format             */         
.* /* $D1= IA@@@MST V51APPC 941025 941213: APPCCMD enhancements      */         
.* /* $D2= ID@@@MST FPAPI   950306 143576: Fast Path API for APPC    */         
.* /* Flag Reason   Release  Date   Origin    Description            */         
.* /* ---- -------- -------- ------ --------  ---------------------- */         
.* /* $L3= R12GRAFF CSV1R2   000829 ROTHWELL: LU level GR AFFIN      */         
.* /* $A1= OW52776  CSV1R4   020208 JPERKINS: Close timing window in */         
.* /*                                         RPL active checking    */         
.* /*                                                                */         
.* /***** END OF SPECIFICATIONS **************************************/         
.*                                                                              
.* A-000000-999999                                             @R495810         
.*                                                                              
.*     THE VALUE 1 SET TO THE FOLLOWING INDICATOR MEANS THAT RPL IS             
.*     SPECIFIED, EXPANSION CODE CAN BE GENERATED. THE VALUE 0 WILL             
.*     MEAN THAT RPL IS NOT SPECIFIED, NO CODE CAN BE GENERATED.                
.*                                                                              
         GBLB  &ISTGEN                      GENERATE CODE INDICATOR             
.*                                                                              
.*     THE FOLLOWING FLAGS ARE USED TO ENSURE THAT THE COPYRIGHT                
.*     STATEMENTS OF EVERY DIFFERENT MACRO ARE GENERATED AT THE                 
.*     FIRST INVOCATION ONLY                                                    
.*                                                                              
         GBLB  &ISTAPPC                     APPCCMD CALL INDICATOR              
         GBLB  &ISTAL                       IST6MCAL CALL INDICATOR             
         GBLB  &ISTCK                       IST6MCCK CALL INDICATOR             
         GBLB  &ISTDA                       IST6MCDA CALL INDICATOR             
         GBLB  &ISTER                       IST6MCER CALL INDICATOR             
         GBLB  &ISTOC                       IST6MCOC CALL INDICATOR             
         GBLB  &ISTPA                      IST6MCPA CALL INDICATOR @L1A         
         GBLB  &ISTPR                       IST6MCPR CALL INDICATOR             
         GBLB  &ISTRE                       IST6MCRE CALL INDICATOR             
         GBLB  &ISTRF                       IST6MCRF CALL INDICATOR             
         GBLB  &ISTRJ                       IST6MCRJ CALL INDICATOR             
         GBLB  &ISTRS                       IST6MCRS CALL INDICATOR             
         GBLB  &ISTSE                       IST6MCSE CALL INDICATOR             
         GBLB  &ISTUA                       IST6MCUA CALL INDICATOR             
         GBLB  &ISTUC                       IST6MCUC CALL INDICATOR             
         GBLB  &ISTUI                       IST6MCUI CALL INDICATOR             
         GBLB  &ISTUP                       IST6MCUP CALL INDICATOR             
         GBLB  &ISTSF                      IST6MCSF CALL INDICATOR @L1A         
         GBLB  &ISTSS                       IST6MCSS CALL INDICATOR             
         GBLB  &ISTRX                      IST6MCRX CALL INDICATOR @I2A         
         GBLB  &ISTSX                      IST6MCSX CALL INDICATOR @I2A         
         GBLB  &ISTTE                      IST6MCTE CALL INDICATOR @I3A         
         GBLB  &ISTSR                      IST6MCSR CALL INDICATOR @D1A         
.*                                                                              
&ISTGEN  SETB  1                                                                
         AIF   (&ISTAPPC EQ 1).CKINVOP                                          
&ISTAPPC SETB  1                                                                
.CKINVOP AIF   (N'&SYSLIST EQ 0).CKRPL      POSITIONAL OPERANDS INVALID         
         IST6MCER 7                                                             
.CKRPL   ANOP                               CHECK REQUIRED PARAMETERS           
         AIF   ('&RPL' NE '').CKCTL                                             
         IST6MCER 1,RPL                                                         
&ISTGEN  SETB  0                                                                
.CKCTL   ANOP                                                                   
         AIF   ('&CONTROL' NE '').VALCTL                                        
         IST6MCER 1,CONTROL                                                     
         MEXIT                                                                  
.VALCTL  ANOP                                                                   
         AIF   ('&CONTROL' EQ 'ALLOC').GENCODE                                  
         AIF   ('&CONTROL' EQ 'CHECK').GENCODE                                  
         AIF   ('&CONTROL' EQ 'RESETRCV').GENCODE                               
         AIF   ('&CONTROL' EQ 'DEALLOC').GENCODE                                
         AIF   ('&CONTROL' EQ 'DEALLOCQ').GENCODE                  @I1A         
         AIF   ('&CONTROL' EQ 'OPRCNTL').GENCODE                                
         AIF   ('&CONTROL' EQ 'PREALLOC').GENCODE                  @L1A         
         AIF   ('&CONTROL' EQ 'PREPRCV').GENCODE                                
         AIF   ('&CONTROL' EQ 'RECEIVE').GENCODE                                
         AIF   ('&CONTROL' EQ 'REJECT').GENCODE                                 
         AIF   ('&CONTROL' EQ 'RCVFMH5').GENCODE                                
         AIF   ('&CONTROL' EQ 'SEND').GENCODE                                   
         AIF   ('&CONTROL' EQ 'SENDFMH5').GENCODE                  @L1A         
         AIF   ('&CONTROL' EQ 'SETSESS').GENCODE                   @F2A         
         AIF   ('&CONTROL' EQ 'RCVEXPD').GENCODE                   @I2A         
         AIF   ('&CONTROL' EQ 'SENDEXPD').GENCODE                  @I2A         
         AIF   ('&CONTROL' EQ 'TESTSTAT').GENCODE                  @I3A         
         AIF   ('&CONTROL' EQ 'SENDRCV').GENCODE                   @D1A         
         IST6MCER 2,CONTROL,&CONTROL                                            
         MEXIT                                                                  
.GENCODE ANOP                                                                   
         AIF   (NOT &ISTGEN).CKCHECK                                            
.CKRPL1  ANOP                                                                   
         AIF   ('&RPL'(1,1) NE '(').CKRPL2  BRANCH IF NOT REGISTER FORM         
         AIF   ('&RPL' EQ '(1)').ENDRPL     NO LR INSTRUCTION NECESSARY         
&NAME    LR    1,&RPL(1)                    LOAD RPL ADDRESS IN REG1            
         AGO   .CKCHECK                                                         
.CKRPL2  ANOP                                                                   
&NAME    LA    1,&RPL                       LOAD RPL ADDRESS IN REG1            
         AGO   .CKCHECK                                                         
.ENDRPL  ANOP                                                                   
         AIF   ('&NAME' EQ '').CKCHECK                                          
&NAME    EQU   *                                                                
*                                                                               
.CKCHECK ANOP                                                                   
         AIF   ('&CONTROL' NE 'CHECK').RPLACT                                   
         IST6MCCK INVALP1=(AREA=&AREA,LOGMODE=&LOGMODE,OPTCD=&OPTCD,ECBX        
               =&ECB,CONVID=&CONVID,LUNAME=&LUNAME,SENSE=&SENSE,EXIT=&EX        
               XIT,BRANCH=&BRANCH,AAREA=&AAREA,ACB=&ACB,FILL=&FILL,TYPEX        
               =&TYPE,QUALIFY=&QUALIFY,LOCKS=&LOCKS,AREALEN=&AREALEN,USX        
               ERFLD=&USERFLD,NAMEUSE=&NAMEUSE,LUAFFIN=&LUAFFIN),      X        
               INVALP2=(CONMODE=&CONMODE,CONFTXT=&CONFTXT,ARG=&ARG,RECLX        
               EN=&RECLEN,SESSID=&SESSID,SESSIDL=&SESSIDL,DEACTYP=&DEACX        
               TYP,CRYPT=&CRYPT,LIST=&LIST,CGID=&CGID,NETID=&NETID,CONXX        
               MOD=&CONXMOD,RTSRTRN=&RTSRTRN,VTRINA=&VTRINA,VTRINL=&VTRX        
               INL,VTROUTA=&VTROUTA,VTROUTL=&VTROUTL)         @D2C @L3C         
         AIF   (NOT &ISTGEN).END                                                
         AGO   .RTNCK                                                           
.RPLACT  ANOP                                                                   
         AIF   (NOT &ISTGEN).CKCTL01                                            
         TM    RPLACTIV-IFGRPL(1),X'FF'     IS THE RPL ACTIVE?                  
         BO    IST6&SYSNDX                  YES BR AROUND MODIFY CODE           
*                                                                               
.CKAAREA ANOP                                                                   
         AIF   ('&AAREA' EQ '').LARPL6                                          
         AIF   ('&AAREA'(1,1) NE '(').CKAARE1                                   
         LR    14,&AAREA(1)                                                     
         AGO   .RPL6ACT                                                         
.CKAARE1 ANOP                                                                   
         LA    14,&AAREA                                                        
.RPL6ACT ANOP                                                                   
         TM    RPL6ACTV-ISTRPL6X(14),X'FF'  IS THE RPL6 ACTIVE?                 
         BO    IST6&SYSNDX                  YES BR AROUND MODIFY CODE           
*                                                                               
         ST    14,RPLAAREA-IFGRPL(1)        STORE AAREA ADDRESS IN RPL          
         ST    1,RPL6RPL-ISTRPL6X(14)    STORE RPL ADDRESS TO APPC AREA         
         LA    15,L'RPL6AREA                GET AAREA LENGTH   @P030295         
         ST    15,RPLAARLN-IFGRPL(1)        STORE AAREA LENGTH IN RPL           
         AGO   .CKACB                                                           
.LARPL6  ANOP                                                                   
         L     14,RPLAAREA-IFGRPL(1)                                            
         ST    1,RPL6RPL-ISTRPL6X(14)    STORE RPL ADDRESS TO APPC AREA         
*                                                                               
.CKACB   ANOP                                                                   
         AIF   ('&ACB' EQ '').CKCTL01                                           
         IST6MCUA KWVAL=&ACB,LOC=RPLDACB-IFGRPL,BASEREG=1,             X        
               KW=ACB_ADDRESS                                                   
.*                                          STORE ACB ADDRESS IN RPL            
.CKCTL01 ANOP                                                                   
.*                      ****  CONTROL=ALLOC  ****                               
.*                                                                              
         AIF   ('&CONTROL' NE 'ALLOC').ALEND                                    
         IST6MCAL AREA=&AREA,RECLEN=&RECLEN,OPTCD=&OPTCD,ECB=&ECB,     X        
               EXIT=&EXIT,BRANCH=&BRANCH,LOGMODE=&LOGMODE,             X        
               CONMODE=&CONMODE,USERFLD=&USERFLD,LUNAME=&LUNAME,       X        
               QUALIFY=&QUALIFY,CGID=&CGID,NETID=&NETID,               X        
               CONXMOD=&CONXMOD,RTSRTRN=&RTSRTRN,NAMEUSE=&NAMEUSE,     X        
               VTRINA=&VTRINA,VTRINL=&VTRINL,VTROUTA=&VTROUTA,         X        
               VTROUTL=&VTROUTL,LUAFFIN=&LUAFFIN,                      X        
               INVALKW=(FILL=&FILL,AREALEN=&AREALEN,CONVID=&CONVID,LOCKX        
               S=&LOCKS,CONFTXT=&CONFTXT,ARG=&ARG,TYPE=&TYPE,CD=&CD,SESX        
               SID=&SESSID,SESSIDL=&SESSIDL,DEACTYP=&DEACTYP,CRYPT=&CRYX        
               PT,LIST=&LIST,SENSE=&SENSE)                    @D2C @L3C         
         AGO   .EXIT                                                            
.ALEND   ANOP                                                                   
.*                      ****  CONTROL=DEALLOC(Q)  ****                          
.*                                                                              
         AIF   ('&CONTROL' EQ 'DEALLOCQ').DAQ                      @I1A         
         AIF   ('&CONTROL' NE 'DEALLOC').DAEND                                  
.DAQ     ANOP                                                      @I1A         
         IST6MCDA AREA=&AREA,RECLEN=&RECLEN,OPTCD=&OPTCD,ECB=&ECB,     X        
               EXIT=&EXIT,BRANCH=&BRANCH,CONVID=&CONVID,SENSE=&SENSE,  X        
               QUALIFY=&QUALIFY,CONMODE=&CONMODE,CONXMOD=&CONXMOD,     X        
               CRYPT=&CRYPT,CONTROL=&CONTROL,VTRINA=&VTRINA,           X        
               VTRINL=&VTRINL,VTROUTA=&VTROUTA,VTROUTL=&VTROUTL,       X        
               INVALP1=(LOGMODE=&LOGMODE,CONFTXT=&CONFTXT,LOCKS=&LOCKS,X        
               FILL=&FILL,AREALEN=&AREALEN,USERFLD=&USERFLD,TYPE=&TYPE,X        
               LUNAME=&LUNAME,ARG=&ARG,CD=&CD,SESSID=&SESSID),         X        
               INVALP2=(SESSIDL=&SESSIDL,DEACTYP=&DEACTYP,LIST=&LIST,  X        
               CGID=&CGID,NETID=&NETID,RTSRTRN=&RTSRTRN,               X        
               NAMEUSE=&NAMEUSE,LUAFFIN=&LUAFFIN)             @D2C @L3C         
         AGO   .EXIT                                                            
.DAEND   ANOP                                                                   
.*                      ****  CONTROL=OPRCNTL  ****                             
.*                                                                              
         AIF   ('&CONTROL' NE 'OPRCNTL').OCEND                                  
         IST6MCOC AREALEN=&AREALEN,OPTCD=&OPTCD,CONFTXT=&CONFTXT,      X        
               EXIT=&EXIT,BRANCH=&BRANCH,RECLEN=&RECLEN,ECB=&ECB,      X        
               LUNAME=&LUNAME,QUALIFY=&QUALIFY,LOGMODE=&LOGMODE,       X        
               AREA=&AREA,ARG=&ARG,USERFLD=&USERFLD,LIST=&LIST,        X        
               LUAFFIN=&LUAFFIN,                                       X        
               NETID=&NETID,NAMEUSE=&NAMEUSE,VTROUTL=&VTROUTL,         X        
               VTRINA=&VTRINA,VTRINL=&VTRINL,VTROUTA=&VTROUTA,         X        
               INVALKW=(CONMODE=&CONMODE,SENSE=&SENSE,CONVID=&CONVID,LOX        
               CKS=&LOCKS,TYPE=&TYPE,FILL=&FILL,CD=&CD,SESSID=&SESSID,SX        
               ESSIDL=&SESSIDL,DEACTYP=&DEACTYP,CRYPT=&CRYPT,CGID=&CGIDX        
               ,CONXMOD=&CONXMOD,RTSRTRN=&RTSRTRN)            @D2C @L3C         
         AGO   .EXIT                                                            
.OCEND   ANOP                                                                   
.*                      ****  CONTROL=PREALLOC  ****               @L1A         
.*                                                                 @L1A         
         AIF   ('&CONTROL' NE 'PREALLOC').PAEND                    @L1A         
         IST6MCPA BRANCH=&BRANCH,CGID=&CGID,CONMODE=&CONMODE,          X        
               CONXMOD=&CONXMOD,ECB=&ECB,EXIT=&EXIT,LOGMODE=&LOGMODE,  X        
               LUNAME=&LUNAME,NETID=&NETID,OPTCD=&OPTCD,               X        
               QUALIFY=&QUALIFY,RTSRTRN=&RTSRTRN,USERFLD=&USERFLD,     X        
               NAMEUSE=&NAMEUSE,VTRINA=&VTRINA,VTRINL=&VTRINL,         X        
               VTROUTA=&VTROUTA,VTROUTL=&VTROUTL,LUAFFIN=&LUAFFIN,     X        
               INVALP1=(AREA=&AREA,AREALEN=&AREALEN,ARG=&ARG,CD=&CD,   X        
               CONFTXT=&CONFTXT,CONVID=&CONVID,CRYPT=&CRYPT,           X        
               DEACTYP=&DEACTYP,FILL=&FILL,LIST=&LIST),                X        
               INVALP2=(LOCKS=&LOCKS,RECLEN=&RECLEN,SENSE=&SENSE,      X        
               SESSID=&SESSID,SESSIDL=&SESSIDL,TYPE=&TYPE)    @D2C @L3C         
         AGO   .EXIT                                               @L1A         
.PAEND   ANOP                                                                   
.*                      ****  CONTROL=PREPRCV  ****                             
.*                                                                              
         AIF   ('&CONTROL' NE 'PREPRCV').PREND                                  
         IST6MCPR AREA=&AREA,RECLEN=&RECLEN,OPTCD=&OPTCD,ECB=&ECB,     X        
               EXIT=&EXIT,BRANCH=&BRANCH,CONMODE=&CONMODE,CRYPT=&CRYPT,X        
               CONVID=&CONVID,QUALIFY=&QUALIFY,LOCKS=&LOCKS,           X        
               CONXMOD=&CONXMOD,VTRINA=&VTRINA,VTRINL=&VTRINL,         X        
               VTROUTA=&VTROUTA,VTROUTL=&VTROUTL,                      X        
               INVALP1=(USERFLD=&USERFLD,LOGMODE=&LOGMODE,FILL=&FILL,ARX        
               EALEN=&AREALEN,SENSE=&SENSE,LUNAME=&LUNAME,TYPE=&TYPE,COX        
               NFTXT=&CONFTXT,ARG=&ARG,CD=&CD,SESSID=&SESSID),         X        
               INVALP2=(SESSIDL=&SESSIDL,DEACTYP=&DEACTYP,LIST=&LIST,  X        
               CGID=&CGID,NETID=&NETID,RTSRTRN=&RTSRTRN,               X        
               NAMEUSE=&NAMEUSE,LUAFFIN=&LUAFFIN)             @D2C @L3C         
         AGO   .EXIT                                                            
.PREND   ANOP                                                                   
.*                      ****  CONTROL=RECEIVE  ****                             
.*                                                                              
         AIF   ('&CONTROL' NE 'RECEIVE').REEND                                  
         IST6MCRE OPTCD=&OPTCD,ECB=&ECB,CONMODE=&CONMODE,FILL=&FILL,   X        
               EXIT=&EXIT,BRANCH=&BRANCH,AREA=&AREA,AREALEN=&AREALEN,  X        
               CONVID=&CONVID,QUALIFY=&QUALIFY,CD=&CD,CONXMOD=&CONXMOD,X        
               VTRINA=&VTRINA,VTRINL=&VTRINL,VTROUTA=&VTROUTA,         X        
               VTROUTL=&VTROUTL,                                       X        
               INVALP1=(RECLEN=&RECLEN,LUNAME=&LUNAME,SENSE=&SENSE,    X        
               TYPE=&TYPE,CONFTXT=&CONFTXT,ARG=&ARG,USERFLD=&USERFLD,  X        
               LOCKS=&LOCKS,LOGMODE=&LOGMODE,SESSID=&SESSID,           X        
               SESSIDL=&SESSIDL,DEACTYP=&DEACTYP,CRYPT=&CRYPT),        X        
               INVALP2=(LIST=&LIST,CGID=&CGID,NETID=&NETID,            X        
               RTSRTRN=&RTSRTRN,NAMEUSE=&NAMEUSE,LUAFFIN=&LUAFFIN)     X        
                                                              @D2C @L3C         
         AGO   .EXIT                                                            
.REEND   ANOP                                                                   
.*                      ****  CONTROL=RCVFMH5  ****                             
.*                                                                              
         AIF   ('&CONTROL' NE 'RCVFMH5').RFEND                                  
         IST6MCRF BRANCH=&BRANCH,AREA=&AREA,AREALEN=&AREALEN,          X        
               USERFLD=&USERFLD,OPTCD=&OPTCD,ECB=&ECB,EXIT=&EXIT,      X        
               CONMODE=&CONMODE,CONXMOD=&CONXMOD,RTSRTRN=&RTSRTRN,     X        
               QUALIFY=&QUALIFY,VTRINA=&VTRINA,VTRINL=&VTRINL,         X        
               FILL=&FILL,CD=&CD,VTROUTA=&VTROUTA,VTROUTL=&VTROUTL,    X        
               INVALP1=(LUNAME=&LUNAME,SENSE=&SENSE,CONFTXT=&CONFTXT,REX        
               CLEN=&RECLEN,CONVID=&CONVID,                            X        
               LOCKS=&LOCKS,LOGMODE=&LOGMODE,TYPE=&TYPE,ARG=&ARG),     X        
               INVALP2=(SESSID=&SESSID,SESSIDL=&SESSIDL,CGID=&CGID,    X        
               DEACTYP=&DEACTYP,CRYPT=&CRYPT,LIST=&LIST,NETID=&NETID,  X        
               NAMEUSE=&NAMEUSE,LUAFFIN=&LUAFFIN)             @D2C @L3C         
         AGO   .EXIT                                                            
.RFEND   ANOP                                                                   
.*                      ****  CONTROL=REJECT  ****                              
.*                                                                              
         AIF   ('&CONTROL' NE 'REJECT').RJEND                                   
         IST6MCRJ OPTCD=&OPTCD,ECB=&ECB,CONVID=&CONVID,SENSE=&SENSE,   X        
               EXIT=&EXIT,BRANCH=&BRANCH,SESSID=&SESSID,SESSIDL=&SESSIDX        
               L,QUALIFY=&QUALIFY,DEACTYP=&DEACTYP,CGID=&CGID,         X        
               VTRINA=&VTRINA,VTRINL=&VTRINL,VTROUTA=&VTROUTA,         X        
               VTROUTL=&VTROUTL,                                       X        
               INVALP1=(CONMODE=&CONMODE,USERFLD=&USERFLD,LOCKS=&LOCKS,X        
               LOGMODE=&LOGMODE,AREA=&AREA,AREALEN=&AREALEN,TYPE=&TYPE,X        
               FILL=&FILL,ARG=&ARG,CONFTXT=&CONFTXT,RECLEN=&RECLEN),   X        
               INVALP2=(LUNAME=&LUNAME,CD=&CD,CRYPT=&CRYPT,LIST=&LIST,NX        
               ETID=&NETID,CONXMOD=&CONXMOD,RTSRTRN=&RTSRTRN,          X        
               NAMEUSE=&NAMEUSE,LUAFFIN=&LUAFFIN)             @D2C @L3C         
         AGO   .EXIT                                                            
.RJEND   ANOP                                                                   
.*                      ****  CONTROL=RESETRCV  ****                            
.*                                                                              
         AIF   ('&CONTROL' NE 'RESETRCV').RSEND                                 
         IST6MCRS CONMODE=&CONMODE,CONXMOD=&CONXMOD,OPTCD=&OPTCD,      X        
               ECB=&ECB,EXIT=&EXIT,BRANCH=&BRANCH,CONVID=&CONVID,      X        
               QUALIFY=&QUALIFY,VTRINA=&VTRINA,VTRINL=&VTRINL,         X        
               VTROUTA=&VTROUTA,VTROUTL=&VTROUTL,                      X        
               INVALP1=(AREALEN=&AREALEN,LOCKS=&LOCKS,USERFLD=&USERFLD,X        
               LOGMODE=&LOGMODE,RECLEN=&RECLEN,CONFTXT=&CONFTXT,LUNAME=X        
               &LUNAME,FILL=&FILL,TYPE=&TYPE,SENSE=&SENSE,             X        
               AREA=&AREA,ARG=&ARG,CD=&CD,CGID=&CGID,CRYPT=&CRYPT),    X        
               INVALP2=(SESSID=&SESSID,SESSIDL=&SESSIDL,LIST=&LIST,    X        
               DEACTYP=&DEACTYP,NETID=&NETID,RTSRTRN=&RTSRTRN,         X        
               NAMEUSE=&NAMEUSE,LUAFFIN=&LUAFFIN)             @D2C @L3C         
         AGO   .EXIT                                                            
.RSEND   ANOP                                                                   
.*                      ****  CONTROL=RCVEXPD  ****                             
.*                                                                              
         AIF   ('&CONTROL' NE 'RCVEXPD').RXEND                     @I2A         
         IST6MCRX AREA=&AREA,AREALEN=&AREALEN,BRANCH=&BRANCH,          X        
               CONMODE=&CONMODE,CONVID=&CONVID,CONXMOD=&CONXMOD,       X        
               ECB=&ECB,EXIT=&EXIT,OPTCD=&OPTCD,QUALIFY=&QUALIFY,      X        
               VTRINA=&VTRINA,VTRINL=&VTRINL,VTROUTA=&VTROUTA,         X        
               VTROUTL=&VTROUTL,                                       X        
               INVALP1=(ARG=&ARG,CD=&CD,CGID=&CGID,CONFTXT=&CONFTXT,   X        
               CRYPT=&CRYPT,DEACTYP=&DEACTYP,FILL=&FILL,LIST=&LIST,    X        
               NAMEUSE=&NAMEUSE,LUAFFIN=&LUAFFIN),                     X        
               INVALP2=(LOCKS=&LOCKS,LOGMODE=&LOGMODE,LUNAME=&LUNAME,  X        
               NETID=&NETID,RECLEN=&RECLEN,RTSRTRN=&RTSRTRN,           X        
               SENSE=&SENSE,SESSID=&SESSID,SESSIDL=&SESSIDL,TYPE=&TYPE,X        
               USERFLD=&USERFLD)                              @L1C @L3C         
         AGO   .EXIT                                               @I2A         
.RXEND   ANOP                                                      @I2A         
.*                      ****  CONTROL=SETSESS  ****                             
.*                                                                              
         AIF   ('&CONTROL' NE 'SETSESS').SETEND                                 
         IST6MCSS OPTCD=&OPTCD,ECB=&ECB,EXIT=&EXIT,BRANCH=&BRANCH,     X        
               CONVID=&CONVID,SESSID=&SESSID,SESSIDL=&SESSIDL,         X        
               QUALIFY=&QUALIFY,VTRINA=&VTRINA,VTRINL=&VTRINL,         X        
               VTROUTA=&VTROUTA,VTROUTL=&VTROUTL,                      X        
               INVALP1=(AREALEN=&AREALEN,LOCKS=&LOCKS,USERFLD=&USERFLD,X        
               LOGMODE=&LOGMODE,RECLEN=&RECLEN,CONFTXT=&CONFTXT,LUNAME=X        
               &LUNAME,FILL=&FILL,TYPE=&TYPE,SENSE=&SENSE,AREA=&AREA), X        
               INVALP2=(ARG=&ARG,DEACTYP=&DEACTYP,CONMODE=&CONMODE,CD=&X        
               CD,CONXMOD=&CONXMOD,CRYPT=&CRYPT,LIST=&LIST,CGID=&CGID, X        
               NETID=&NETID,RTSRTRN=&RTSRTRN,NAMEUSE=&NAMEUSE,         X        
               LUAFFIN=&LUAFFIN)                              @D2C @L3C         
         AGO   .EXIT                                                            
.SETEND  ANOP                                                      @F2A         
.*                      ****  CONTROL=SEND  ****                                
.*                                                                              
         AIF   ('&CONTROL' NE 'SEND').SEEND                                     
         IST6MCSE AREA=&AREA,RECLEN=&RECLEN,OPTCD=&OPTCD,ECB=&ECB,     X        
               EXIT=&EXIT,BRANCH=&BRANCH,SENSE=&SENSE,TYPE=&TYPE,      X        
               CONVID=&CONVID,QUALIFY=&QUALIFY,CONMODE=&CONMODE,       X        
               CONXMOD=&CONXMOD,CRYPT=&CRYPT,VTRINA=&VTRINA,           X        
               VTRINL=&VTRINL,VTROUTA=&VTROUTA,VTROUTL=&VTROUTL,       X        
               INVALP1=(LOCKS=&LOCKS,LUNAME=&LUNAME,FILL=&FILL,AREALEN=X        
               &AREALEN,USERFLD=&USERFLD,ARG=&ARG,LOGMODE=&LOGMODE,CONFX        
               TXT=&CONFTXT,CD=&CD,SESSID=&SESSID,SESSIDL=&SESSIDL),   X        
               INVALP2=(DEACTYP=&DEACTYP,LIST=&LIST,CGID=&CGID,        X        
               NETID=&NETID,RTSRTRN=&RTSRTRN,NAMEUSE=&NAMEUSE,         X        
               LUAFFIN=&LUAFFIN)                              @D2C @L3C         
         AGO   .EXIT                                                            
.SEEND   ANOP                                                                   
.*                      ****  CONTROL=SENDEXPD  ****                            
.*                                                                              
         AIF   ('&CONTROL' NE 'SENDEXPD').SXEND                    @I2A         
         IST6MCSX AREA=&AREA,BRANCH=&BRANCH,CONMODE=&CONMODE,          X        
               CONVID=&CONVID,CONXMOD=&CONXMOD,ECB=&ECB,EXIT=&EXIT,    X        
               OPTCD=&OPTCD,QUALIFY=&QUALIFY,RECLEN=&RECLEN,           X        
               VTRINA=&VTRINA,VTRINL=&VTRINL,VTROUTA=&VTROUTA,         X        
               VTROUTL=&VTROUTL,                                       X        
               INVALP1=(AREALEN=&AREALEN,ARG=&ARG,CD=&CD,CGID=&CGID,   X        
               CONFTXT=&CONFTXT,CRYPT=&CRYPT,DEACTYP=&DEACTYP,         X        
               FILL=&FILL,LIST=&LIST,LOCKS=&LOCKS,LOGMODE=&LOGMODE),   X        
               INVALP2=(LUNAME=&LUNAME,NETID=&NETID,RTSRTRN=&RTSRTRN,  X        
               SENSE=&SENSE,SESSID=&SESSID,SESSIDL=&SESSIDL,           X        
               TYPE=&TYPE,USERFLD=&USERFLD,NAMEUSE=&NAMEUSE,           X        
               LUAFFIN=&LUAFFIN)                              @D2C @L3C         
         AGO   .EXIT                                               @I2A         
.SXEND   ANOP                                                      @I2A         
.*                      ****  CONTROL=SENDFMH5  ****               @L1A         
.*                                                                 @L1A         
         AIF   ('&CONTROL' NE 'SENDFMH5').SFEND                    @L1A         
         IST6MCSF AREA=&AREA,BRANCH=&BRANCH,CONVID=&CONVID,            X        
               ECB=&ECB,EXIT=&EXIT,OPTCD=&OPTCD,QUALIFY=&QUALIFY,      X        
               RECLEN=&RECLEN,VTRINA=&VTRINA,VTRINL=&VTRINL,           X        
               VTROUTA=&VTROUTA,VTROUTL=&VTROUTL,                      X        
               INVALP1=(AREALEN=&AREALEN,ARG=&ARG,CD=&CD,CONFTXT=&CONFTX        
               XT,CRYPT=&CRYPT,DEACTYP=&DEACTYP,                       X        
               FILL=&FILL,LIST=&LIST,LOCKS=&LOCKS,SENSE=&SENSE,        X        
               SESSID=&SESSID,SESSIDL=&SESSIDL,TYPE=&TYPE),            X        
               INVALP2=(CGID=&CGID,CONMODE=&CONMODE,CONXMOD=&CONXMOD,  X        
               LOGMODE=&LOGMODE,LUNAME=&LUNAME,NETID=&NETID,           X        
               RTSRTRN=&RTSRTRN,USERFLD=&USERFLD,NAMEUSE=&NAMEUSE,     X        
               LUAFFIN=&LUAFFIN)                              @D2C @L3C         
         AGO   .EXIT                                               @L1A         
.SFEND   ANOP                                                      @L1A         
.*                      ****  CONTROL=SENDRCV  ****                             
.*                                                                              
         AIF   ('&CONTROL' NE 'SENDRCV').SREND                    @D1A          
         IST6MCSR AREA=&AREA,RECLEN=&RECLEN,OPTCD=&OPTCD,ECB=&ECB,     X        
               BRANCH=&BRANCH,CONMODE=&CONMODE,VTROUTA=&VTROUTA,       X        
               CONVID=&CONVID,QUALIFY=&QUALIFY,VTROUTL=&VTROUTL,       X        
               CONXMOD=&CONXMOD,VTRINA=&VTRINA,                        X        
               VTRINL=&VTRINL,FILL=&FILL,CD=&CD,EXIT=&EXIT,            X        
               INVALP1=(LOCKS=&LOCKS,LUNAME=&LUNAME,AREALEN=&AREALEN,  X        
               USERFLD=&USERFLD,ARG=&ARG,LOGMODE=&LOGMODE,CONFTXT=&CONFX        
               TXT,SESSID=&SESSID,SESSIDL=&SESSID),                    X        
               INVALP2=(DEACTYP=&DEACTYP,LIST=&LIST,CGID=&CGID,        X        
               TYPE=&TYPE,SENSE=&SENSE,                                X        
               NETID=&NETID,RTSRTRN=&RTSRTRN,NAMEUSE=&NAMEUSE,         X        
               LUAFFIN=&LUAFFIN)                              @D2C @L3C         
         AGO   .EXIT                                                            
.SREND   ANOP                                                                   
.*                      ****  CONTROL=TESTSTAT  ****                            
.*                                                                              
         AIF   ('&CONTROL' NE 'TESTSTAT').TEEND                    @I3A         
         IST6MCTE AREA=&AREA,AREALEN=&AREALEN,BRANCH=&BRANCH,          X        
               CONVID=&CONVID,ECB=&ECB,EXIT=&EXIT,OPTCD=&OPTCD,        X        
               QUALIFY=&QUALIFY,VTRINA=&VTRINA,VTRINL=&VTRINL,         X        
               VTROUTA=&VTROUTA,VTROUTL=&VTROUTL,                      X        
               INVALP1=(ARG=&ARG,CD=&CD,CGID=&CGID,CONFTXT=&CONFTXT,   X        
               CRYPT=&CRYPT,DEACTYP=&DEACTYP,FILL=&FILL,LIST=&LIST,    X        
               CONXMOD=&CONXMOD,CONMODE=&CONMODE,NAMEUSE=&NAMEUSE),    X        
               INVALP2=(LOCKS=&LOCKS,LOGMODE=&LOGMODE,LUNAME=&LUNAME,  X        
               NETID=&NETID,RECLEN=&RECLEN,RTSRTRN=&RTSRTRN,           X        
               SENSE=&SENSE,SESSID=&SESSID,SESSIDL=&SESSIDL,TYPE=&TYPE,X        
               USERFLD=&USERFLD,LUAFFIN=&LUAFFIN)             @D2C @L3C         
         AGO   .EXIT                                               @I3A         
.TEEND   ANOP                                                      @I3A         
.EXIT    ANOP                                                                   
         AIF   (NOT &ISTGEN).END                                                
         B     *+14                         Skip error code        @A1A         
IST6&SYSNDX  EQU   *                                                            
         LA    0,RPL6APPC                   Load APPC req code     @A1A         
         LCR   0,0                          Set negative for error @A1A         
         B     *+8                          Continue               @A1A         
         LA    0,RPL6APPC                   LOAD APPC REQ CODE                  
.RTNCK   L     14,RPLDACB-IFGRPL(1)         GET ACB ADDRESS                     
         L     15,ACBINRTN-IFGACB(14)       GET INTERFACE ROUTINE ADDR          
         BALR  14,15                        GO TO INTERFACE ROUTINE             
*                                                                               
.END     MEND                                                                   
