*                                                                       00001000
* %DCL IXLYDLC_INCLUDED CHAR EXT;                                       00002000
* %DEACTIVATE IXLYDLC_INCLUDED;                                         00003000
* %IF IXLYDLC_INCLUDED = '' %THEN                                       00004000
* %DO;                                                                  00005000
*/* Macro made bi-lingual on 18014. CBGEN compile date 15295         */ 00006000
*% /*                                                                   00007000
         MACRO                                                          00008000
         IXLYDLC &DSECT=YES,&LIST=YES,&TITLE=YES,&DLC=YES,             *00009000
               &DLCLISTMONTBLENTRY=COND,&DLCKRGEMONTBLENTRY=COND        00010000
         GBLC  &IXLYDLC_INCLUDED                                        00011000
         GBLC  &ZCBPRINT                                                00012000
&IXLYDLC_INCLUDED SETC 'YES'                                            00013000
         AIF   ('&LIST' EQ 'NONE').P0                                   00014000
         AIF   ('&TITLE' EQ 'NO').P5                                    00015000
 TITLE   'IXLYDLC  - Dumping List Controls Mapping                  '   00016000
.P5      ANOP                                                           00017000
**/ IXLYDLC_1:;                                                         00018000
*/* START OF SPECIFICATIONS ******************************************* 00019000
*                                                                       00020000
*01* PROPRIETARY STATEMENT =                                            00021000
*                                                                       00022000
*    LICENSED MATERIALS - PROPERTY OF IBM                               00023000
*    5650-ZOS COPYRIGHT IBM CORP. 1993, 2017                            00024000
*                                                                       00025000
*01* STATUS = HBB77B0                                                   00026000
*                                                                       00027000
*01* END OF PROPRIETARY STATEMENT                                       00028000
*                                                                       00029000
*01* EXTERNAL CLASSIFICATION: GUPI                                      00030000
*01* END OF EXTERNAL CLASSIFICATION:                                    00031000
*                                                                       00032000
*01* DESCRIPTIVE NAME:  Dumping List Controls Mapping                   00033000
*02*  ACRONYM:  Dlc                                                     00034000
*                                                                       00035000
*01* MACRO NAME:  IXLYDLC                                               00036000
*                                                                       00037000
*01* DSECT NAME:                                                        00038000
*     Dlc                                                               00039000
*     DlcListMonTblEntry                                                00040000
*                                                                       00041000
*01* COMPONENT:  Cross System Extended Services (SCIXL)                 00042000
*                                                                       00043000
*01* EYE-CATCHER:  None                                                 00044000
*02*  OFFSET:  N/A                                                      00045000
*02*  LENGTH:  N/A                                                      00046000
*                                                                       00047000
*01* STORAGE ATTRIBUTES:                                                00048000
*02*  SUBPOOL:  User Defined                                            00049000
*02*  KEY:  User Defined                                                00050000
*02*  RESIDENCY:  User Defined                                          00051000
*                                                                       00052000
*01* SIZE:                                                              00053000
*                DLC                -- X'0108' bytes                    00054000
*                DLCLISTMONTBLENTRY -- X'0008' bytes                    00055000
*                DLCKRGEMONTBLENTRY -- X'0008' bytes                    00056000
*                                                                       00057000
*01* CREATED BY:  The IXLZSTR CF Structure Data Access Service in the   00058000
*                 user defined ANSAREA                                  00059000
*                                                                       00060000
*01* POINTED TO BY: User                                                00061000
*                                                                       00062000
*01* SERIALIZATION:                                                     00063000
*     None required                                                     00064000
*                                                                       00065000
*01* FUNCTION:                                                          00066000
*     Provides a map of the dumping list header controls and the        00067000
*     list monitor table entries found in the list controls.            00068000
*                                                                       00069000
*01* METHOD OF ACCESS:                                                  00070000
*                                                                       00071000
*     PL/AS:                                                            00072000
*         %dcl DlcControlsAttr char                                     00073000
*         %dcl DlcMonTblEntAttr char                                    00074000
*         %DlcControlsAttr = 'based/defined/via attributes'             00075000
*         %DlcMonTblEntAttr = 'based/defined/via attributes'            00076000
*         %INCLUDE SYSLIB(IXLYDLC)                                      00077000
*                                                                       00078000
*         If the any of the above macro variablea are not set,          00079000
*         the associated mapping will be declared as BASED              00080000
*                                                                       00081000
*                                                                       00082000
*01* DELETED BY:  N/A                                                   00083000
*                                                                       00084000
*01* FREQUENCY:  N/A                                                    00085000
*                                                                       00086000
*01* DEPENDENCIES:  N/A                                                 00087000
*                                                                       00088000
*01* DISTRIBUTION LIBRARY:                                              00089000
*     AMACLIB                                                           00090000
*                                                                       00091000
*01* CHANGE ACTIVITY:                                                   00092000
*     $L0= SYSLKDFM HBB5510 920518 PD00LA: XLS Initial Release          00093000
*     $D1= DIG0130  HBB5510 930520 PD00FR: Architecture upgrade         00094000
*     $L1= XESAC    HBB5520 940511 PD00FR: XES service/architecture     00095000
*                                          change                       00096000
*     $L2= AUTOR    HBB6608 980828 PD00GW: Auto Rebuild                 00097000
*     $L3= MQ       JBB6609 981212 PD00DT: MQSeries Support             00098000
*     $L4=CFFLASH   HBB7790 120301 PD00C9: Cf Flash                     00099000
*     $L5=CFOLC     HBB77A0 140808 PD00C9: Opposite List Count          00100000
*     $L6=LSTNOT    HBB77B0 150317 PD00C9: List Notification            00101000
*                                          Enhancements                 00102000
*     $L7=LSTNOT    HBB77B0 160419 PD00C9: List Notification            00103000
*                                          Enhancements                 00104000
*                                                                       00105000
* END OF SPECIFICATIONS *********************************************/  00106000
*% /*                                                                   00107000
.P0      ANOP                                                           00108000
         AIF   ('&ZCBPRINT' EQ 'NO').P1                                 00109000
         AIF   ('&LIST' EQ 'YES').P2                                    00110000
.P1      ANOP                                                           00111000
         PUSH  PRINT                                                    00112000
         PRINT OFF                                                      00113000
.P2      ANOP                                                           00114000
         AIF   ('&DLC' EQ 'NO').L0002                                   00115000
         AIF   ('&DSECT' EQ 'YES').L0003                                00116000
         AIF   ('&DLC' NE 'YES').L0002                                  00117000
.L0003   ANOP                                                           00118000
*                                                                       00119000
* ****************************************************************** *  00120000
* *                                                                  *  00121000
* *               Dumping List Header Controls                       *  00122000
* *                                                                  *  00123000
* ****************************************************************** *  00124000
*                                                                       00125000
*                                                                       00126000
         AIF   ('&DSECT' EQ 'YES').L0004                                00127000
DLC      DS    0F        Mapping for list header controls               00128000
         AGO   .L0005                                                   00129000
.L0004   ANOP                                                           00130000
DLC      DSECT           Mapping for list header controls               00131000
.L0005   ANOP                                                           00132000
DLCCNTLINFO DS 0CL256    Fixed area in the list number controls         00133000
         DS    CL18      Reserved                                       00134000
DLCLISTFLAGS DS 0B       Flag byte                                      00135000
DLCLISTSETSCANSTATE EQU X'80' List set scan state If DlcListSetScanId  *00136000
                         is 0 then the scan is available. Otherwise,   *00137000
                         if the scan state is 0 then the scan is in    *00138000
                         progress. Otherwise the scan is complete.     *00139000
                         (LEVEL8)                                       00140000
         ORG   DLCLISTFLAGS+1                                           00141000
DLCLISTSETSCANID DS B    List set scan Id. If it is 0 then the scan is *00142000
                         available. (LEVEL8)                            00143000
         DS    CL3       Reserved                                       00144000
DLCFLAGS DS    0B        Flags                                          00145000
DLCCURSORDIRECTION EQU X'80' Cursor direction, 0=head to tail, 1=tail  *00146000
                         to head (LEVEL1)                               00147000
DLCOPPLISTCOUNTVALID EQU X'40' 1 = DlcOppListCount is valid for use     00148000
DLCELEMCOUNTINDICATOR EQU X'20' Element Count Indicator (ECI)          *00149000
                         (LEVEL19) 0 = List-entry count (LEC) and      *00150000
                         list-entry-count limit (LECL) are defined. 1  *00151000
                         = List-element count (LELC) and               *00152000
                         list-element-count limit (LELCL) are defined   00153000
DLCKRNDELAY EQU X'02'    Key-range notification delay. Bit 6 (LEVEL22) *00154000
                         0 -> the key-range-notification delay value   *00155000
                         for the structure is applied when notifying   *00156000
                         monitoring instances of empty to not-empty    *00157000
                         state transitions for this list's keyrange. 1 *00158000
                         -> the key-range-notification delay value for *00159000
                         the structure is not applied when notifying   *00160000
                         monitoring instances of empty to not-empty    *00161000
                         state transitions for this list's keyrange.    00162000
DLCLNDELAY EQU X'01'     List notification delay. Bit 7 (LEVEL22). 0   *00163000
                         -> the list notification delay value for the  *00164000
                         structure is applied when notifying           *00165000
                         monitoring instances of empty to not-empty    *00166000
                         state transitions for this list 1 -> the list *00167000
                         notification delay value for the structure is *00168000
                         not applied when notifying monitoring         *00169000
                         instances of empty to not-empty state         *00170000
                         transitions for this list                      00171000
         ORG   DLCFLAGS+1                                               00172000
DLCLISTENTRYCOUNTLIMIT DS 0F List entry count limit - specifies the    *00173000
                         maximum number of possible list entries in a  *00174000
                         list                                           00175000
DLCLISTELEMENTCOUNTLIMIT DS F List element count limit - specifies the *00176000
                         maximum number of possible list elements in a *00177000
                         list                                           00178000
DLCLISTENTRYCOUNT DS 0F  List entry count - number of list entries     *00179000
                         currently on a list that reside in CF real    *00180000
                         memory                                         00181000
DLCLISTELEMENTCOUNT DS F List element count - number of list elements  *00182000
                         currently on a list that reside in CF real    *00183000
                         memory                                         00184000
DLCLSTSTETRANSCT DS F    List state transition count - specifies the   *00185000
                         number of empty to not empty list state       *00186000
                         transitions that have occurred                 00187000
DLCLISTCURSOR DS CL12    List Cursor                                    00188000
DLCLISTAUTH DS CL16      List Authority                                 00189000
DLCLISTDESC DS CL32      List Description - The user specified         *00190000
                         description of the list                        00191000
DLCLISTKEY DS  CL16      List key for key assignment (LEVEL1)           00192000
DLCMAXLISTKEY DS CL16    Maximum list key for key assignment (LEVEL1)   00193000
DLCKEYRANGESTART DS CL16 Lower or starting value of key range (LEVEL9)  00194000
DLCKEYRANGEEND DS CL16   Upper or ending value of key range (LEVEL9)    00195000
DLCKEYRANGEEMPTYCOUNT DS F Number of entries that must remain in the   *00196000
                         keyrange to suppress a notempty to empty list *00197000
                         notification (LEVEL9)                          00198000
DLCKEYRANGENOTEMPTYCOUNT DS F Number of entries that must be included  *00199000
                         in the key range before an empty to notempty  *00200000
                         list notification is generated (LEVEL9)        00201000
DLCLISTEMPTYCOUNT DS F   Number of entries that must remain in the     *00202000
                         list to suppress a notempty to empty list     *00203000
                         notification (LEVEL9)                          00204000
DLCLISTNOTEMPTYCOUNT DS F Number of entries that must be included in   *00205000
                         the list before an empty to notempty list     *00206000
                         notification is generated (LEVEL9)             00207000
DLCSCMLISTENTRYCOUNT DS CL8 SCM List entry count. The number of list   *00208000
                         entries that reside in storage class memory   *00209000
                         (CFLEVEL 19)                                   00210000
DLCSCMLISTELEMENTCOUNT DS CL8 SCM List element count. The number of    *00211000
                         list elements that reside in storage class    *00212000
                         memory (CFLEVEL 19)                            00213000
DLCOPPLISTCOUNT DS F     Valid when DlcOppListCountValid is ON. When   *00214000
                         DlcElemCountIndicator is set to: 0 ->         *00215000
                         DlcOppListCount expressed in number of data   *00216000
                         elements. 1 -> DlcOppListCount expressed in   *00217000
                         number of list entries                         00218000
         DS    CL28      Reserved - bytes 196-223                       00219000
DLCKEYRADDTALLY DS F     Key-range entry added tally bytes 224-227     *00220000
                         (LEVEL22)                                      00221000
DLCLISTADDTALLY DS F     List entry added tally bytes 228-231          *00222000
                         (LEVEL22)                                      00223000
         DS    CL24      Reserved - bytes 232-255                       00224000
DLCLISTMONTBLENTRYARR DS CL8 Array of list monitor table entries       *00225000
                         (LEVEL < 9) or an array of list monitor table *00226000
                         entries followed by an array of keyrange      *00227000
                         monitor table entries (LEVEL >= 9)             00228000
DLC_LEN  EQU   *-DLC                                                    00229000
.L0002   ANOP                                                           00230000
         AIF   ('&DLCLISTMONTBLENTRY' EQ 'NO').L0006                    00231000
         AIF   ('&DSECT' EQ 'YES').L0007                                00232000
         AIF   ('&DLCLISTMONTBLENTRY' NE 'YES').L0006                   00233000
.L0007   ANOP                                                           00234000
*                                                                       00235000
* ****************************************************************** *  00236000
* * The DlcListMonTableArray (LEVEL < 9)                        @L3A *  00237000
* ****************************************************************** *  00238000
* * The DlcListMonTableArray contains an array of                    *  00239000
* *   --- DlcListMonTableEntries                                     *  00240000
* *                                                                  *  00241000
* * To obtain the number of array elements there are in the list     *  00242000
* * monitor table array, take the length of the list controls in     *  00243000
* * the StrBDetail mapping, subract the length of DlcCntlInfo, and   *  00244000
* * then divide by the length of a list monitor table entry.         *  00245000
* * This value can only be obtained after using the access service   *  00246000
* * and mapping the output buffer with the StrBDetail mapping.       *  00247000
* * The list monitor table entries are mapped by the                 *  00248000
* * DlcListMonTblEntry found immediately following.             @L3C *  00249000
* *                                                                  *  00250000
* ****************************************************************** *  00251000
* * The DlcListMonTableArray (LEVEL >= 9)                       @L3A *  00252000
* ****************************************************************** *  00253000
* * The DlcListMonTableArray contains an array of                    *  00254000
* *   --- DlcListMonTableEntries                                     *  00255000
* * followed by an array of                                          *  00256000
* *   --- DlcKRgeMonTableEntries.                                    *  00257000
* *                                                                  *  00258000
* * To obtain the number of array elements there are in the list     *  00259000
* * monitor and keyrange monitor table arrays, take the length of    *  00260000
* * list controls in the StrBDetail mapping, subract the length of   *  00261000
* * DlcCntlInfo, and then divide by the length of a list monitor     *  00262000
* * table entry plus the length of a keyrange monitor table entry.   *  00263000
* * This value can only be obtained after using the access service   *  00264000
* * and mapping the output buffer with the StrBDetail mapping.       *  00265000
* * The list monitor table entries are mapped by the                 *  00266000
* * DlcListMonTblEntry, the keyrange monitor table entries are       *  00267000
* * mapped by DlcKRgeMonTblEntry found immediately following.   @L3C *  00268000
* *                                                                  *  00269000
* ****************************************************************** *  00270000
* *                                                                  *  00271000
* *               Dumping List Monitor Table Entry                   *  00272000
* *                                                                  *  00273000
* ****************************************************************** *  00274000
*                                                                       00275000
*                                                                       00276000
         AIF   ('&DSECT' EQ 'YES').L0008                                00277000
DLCLISTMONTBLENTRY DS 0F List monitor table entry - contains info used *00278000
                         to process the list notification vector of    *00279000
                         each user who has registered interest in the  *00280000
                         state transition of the list                   00281000
         AGO   .L0009                                                   00282000
.L0008   ANOP                                                           00283000
DLCLISTMONTBLENTRY DSECT   List monitor table entry - contains info    *00284000
                         used to process the list notification vector  *00285000
                         of each user who has registered interest in   *00286000
                         the state transition of the list               00287000
.L0009   ANOP                                                           00288000
DLCLISTMONFLAGS DS 0CL1  Flag byte                                      00289000
DLCLISTMONACTIVE EQU X'80' List monitoring active bit - zero indicates *00290000
                         that list monitoring was not active. One      *00291000
                         indicates that list monitoring was active      00292000
DLCLISTNOTIFYREQTYPE EQU X'40' List notification request type. This    *00293000
                         bit is only meaningful if the                 *00294000
                         DlcListMonActive bit is set.                   00295000
DLCLISTDRIVEEXIT EQU X'40' List transition exit bit: This bit is only  *00296000
                         meaningful if the DlcListMonActive bit is     *00297000
                         set. 0 ==> The list transition exit for the   *00298000
                         associated connection will not be driven on   *00299000
                         list state transitions. 1 ==> The list        *00300000
                         transition exit for the associated connection *00301000
                         will be driven on empty to non- empty list    *00302000
                         state transitions or on full to not-full list *00303000
                         state transitions. See DlcListMonitorType to  *00304000
                         determine what type of transitions this        00305000
*                        monitoring registration represents             00306000
DLCLISTNOTIFYONEVERY EQU X'20' List Notification Type bit: This bit is *00307000
                         only meaningful if the DlcListMonActive bit   *00308000
                         is set. 0 = indicates that the index          *00309000
                         identified by DlcListNotifyEntryNum is        *00310000
                         updated whenever the list state transitions   *00311000
                         from the not-empty state to empty and when    *00312000
                         the list state transitions from empty state   *00313000
                         to not-empty state. 1 = indicates that the    *00314000
                         index identified by DlcListNotifyEntryNum is  *00315000
                         updated whenever the list state transitions    00316000
*                        from the not-empty state to empty state and   *00317000
                         every time a list entry is added to the list  *00318000
                         and the list not-empty threshold count is     *00319000
                         exceeded (CFLEVEL >=22)                        00320000
DLCLISTMONITORTYPE EQU X'10' List Monitor Type bit: This bit is only   *00321000
                         meaningful if the DlcListMonActive bit is     *00322000
                         set. 0 = the list is being monitored for      *00323000
                         empty/not-empty transitions. 1 = the list is  *00324000
                         being monitored for full/not-full             *00325000
                         transitions. (CFLEVEL >=22)                    00326000
         ORG   DLCLISTMONFLAGS+1                                        00327000
         DS    CL3       Reserved                                       00328000
DLCLISTNOTIFYENTRYNUM DS F List notification entry number - The number *00329000
                         of list notification entry number              00330000
DLCLISTMONTBLENTRY_LEN EQU *-DLCLISTMONTBLENTRY                         00331000
.L0006   ANOP                                                           00332000
         AIF   ('&DLCKRGEMONTBLENTRY' EQ 'NO').L000A                    00333000
         AIF   ('&DSECT' EQ 'YES').L000B                                00334000
         AIF   ('&DLCKRGEMONTBLENTRY' NE 'YES').L000A                   00335000
.L000B   ANOP                                                           00336000
*                                                                       00337000
* ****************************************************************** *  00338000
* *                                                                  *  00339000
* *               Dumping KeyRange Monitor Table Entry               *  00340000
* *                                                             @L3A *  00341000
* ****************************************************************** *  00342000
*                                                                       00343000
*                                                                       00344000
         AIF   ('&DSECT' EQ 'YES').L000C                                00345000
DLCKRGEMONTBLENTRY DS 0F Key range monitor table entry - contains info *00346000
                         used to process the list notification vector  *00347000
                         of each user who has registered interest in   *00348000
                         the state transition of the keyrange           00349000
         AGO   .L000D                                                   00350000
.L000C   ANOP                                                           00351000
DLCKRGEMONTBLENTRY DSECT   Key range monitor table entry - contains    *00352000
                         info used to process the list notification    *00353000
                         vector of each user who has registered        *00354000
                         interest in the state transition of the       *00355000
                         keyrange                                       00356000
.L000D   ANOP                                                           00357000
DLCKRGEMONFLAGS DS 0CL1  Flag byte                                      00358000
DLCKRGEMONACTIVE EQU X'80' KeyRange monitoring active bit - zero       *00359000
                         indicates keyrange monitoring was not active. *00360000
                         One indicates that keyrange monitoring was    *00361000
                         active                                         00362000
DLCKRGENOTIFYREQTYPE EQU X'40' KeyRange notification request type.     *00363000
                         This bit is only meaningful if the            *00364000
                         DlcKRgeMonActive bit is set.                   00365000
DLCKRGEDRIVEEXIT EQU X'40' KeyRange transition exit bit. This bit is   *00366000
                         only meaningful if the DlcKRgeMonActive bit   *00367000
                         is set. 0 ==> The Keyrange transition exit    *00368000
                         for the associated connection will not be     *00369000
                         driven on empty to non-empty state            *00370000
                         transitions. 1 ==> The Keyrange transition    *00371000
                         exit for the associated connection will be    *00372000
                         driven on empty to non-empty state            *00373000
                         transitions.                                   00374000
DLCKRGENOTIFYONEVERY EQU X'20' KeyRange Notification Type bit: This    *00375000
                         bit is only meaningful if the                 *00376000
                         DlcKRgeMonActive bit is set. 0 = indicates    *00377000
                         that the index identified by                  *00378000
                         DlcKRgeNotifyEntryNum is updated whenever the *00379000
                         key-range state transitions from the          *00380000
                         not-empty state to empty state and when the   *00381000
                         key-range state transitions from empty state  *00382000
                         to not-empty state 1 = indicates that the     *00383000
                         index identified by DlcKRgeNotifyEntryNum is   00384000
*                        updated whenever the key-range state          *00385000
                         transitions from the not-empty state to empty *00386000
                         state and every time a list entry is added to *00387000
                         the key-range and the key-range not-empty     *00388000
                         threshold count is exceeded (CFLEVEL >= 22)    00389000
         ORG   DLCKRGEMONFLAGS+1                                        00390000
         DS    CL3       Reserved                                       00391000
DLCKRGENOTIFYENTRYNUM DS F KeyRange notification entry number - The    *00392000
                         number of keyrange notification vector entry   00393000
DLCKRGEMONTBLENTRY_LEN EQU *-DLCKRGEMONTBLENTRY                         00394000
.L000A   ANOP                                                           00395000
         AIF   ('&ZCBPRINT' EQ 'NO').P3                                 00396000
         AIF   ('&LIST' EQ 'YES').P4                                    00397000
.P3      ANOP                                                           00398000
         POP   PRINT                                                    00399000
.P4      ANOP                                                           00400000
.P_EXIT  ANOP                                                           00401000
         MEND                                                           00402000
**/ IXLYDLC_2:;                                                         00403000
* %IXLYDLC_INCLUDED = 'YES';                                            00404000
* %DCL ZCBPRINT CHAR EXT;                                               00405000
* %DEACTIVATE ZCBPRINT;                                                 00406000
* %DCL IXLYDLC_LIST CHAR EXT;                                           00407000
* %DEACTIVATE IXLYDLC_LIST;                                             00408000
* %IF IXLYDLC_LIST ^= 'NO' &                                            00409000
*    ZCBPRINT ^= 'NO' %THEN                                             00410000
*   %GOTO IXLYDLC_3;                                                    00411000
*   @LIST PUSH NOECHO;                                                  00412000
*   @LIST NOASSEMBLE NOECHO;                                            00413000
*   @LIST OFF C NOECHO;                                                 00414000
* %IXLYDLC_3:;                                                          00415000
*/* Start of PL/X Source                                             */ 00416000
*%IF DlcControlsAttr = '' %THEN                                         00417000
*  %DlcControlsAttr = 'based';                                          00418000
*                                                                       00419000
*%IF DlcMonTblEntAttr = '' %THEN                                        00420000
*  %DlcMonTblEntAttr = 'based';                                         00421000
*                                                                       00422000
*/*******************************************************************/  00423000
*/*                                                                 */  00424000
*/*               Dumping List Header Controls                      */  00425000
*/*                                                                 */  00426000
*/*******************************************************************/  00427000
*declare                                                                00428000
* 1   Dlc     bdy(word) DlcControlsAttr,     /* Mapping for list        00429000
*                                               header controls      */ 00430000
*   3 DlcCntlInfo,                           /* Fixed area in the       00431000
*                                               list number controls */ 00432000
*     5 *                         char(18),  /* Reserved         @L1C*/ 00433000
*     5 DlcListFlags              Bit(8),    /* Flag byte        @L2A*/ 00434000
*       7 DlcListSetScanState Bit(1),    /* List set scan state         00435000
*                                      If DlcListSetScanId is 0         00436000
*                                      then the scan is available.      00437000
*                                      Otherwise, if the scan state is  00438000
*                                      0 then the scan is in progress.  00439000
*                                      Otherwise the scan is complete.  00440000
*                                      (LEVEL8)                  @L2A*/ 00441000
*       7     *                   Bit(7), /* Reserved            @L2A*/ 00442000
*     5 DlcListSetScanId  Bit(8),            /* List set scan Id. If    00443000
*                                            it is 0 then the scan is   00444000
*                                            available.                 00445000
*                                            (LEVEL8)            @L2A*/ 00446000
*     5    *                      char(3),   /* Reserved         @L2A*/ 00447000
*     5 DlcFlags                  BIT(8),    /* Flags            @L1A*/ 00448000
*       7 DlcCursorDirection      BIT(1),    /* Cursor direction,       00449000
*                                               0=head to tail,         00450000
*                                               1=tail to head          00451000
*                                               (LEVEL1)         @L1A*/ 00452000
*       7 DlcOppListCountValid    Bit(1),    /* 1 = DlcOppListCount is  00453000
*                                               valid for use    @L5C*/ 00454000
*       7 DlcElemCountIndicator   Bit(1),    /* Element Count           00455000
*                                               Indicator (ECI)         00456000
*                                               (LEVEL19)               00457000
*                                               0 = List-entry count    00458000
*                                               (LEC) and               00459000
*                                               list-entry-count limit  00460000
*                                               (LECL) are defined.     00461000
*                                               1 = List-element count  00462000
*                                               (LELC) and              00463000
*                                               list-element-count      00464000
*                                               limit (LELCL) are       00465000
*                                               defined          @L4A*/ 00466000
*       7    *              Bit(3),   /* Reserved    bits 3-5    @L6C*/ 00467000
*       7 DlcKRNDelay Bit(1),       /* Key-range notification delay.    00468000
*                                      Bit 6 (LEVEL22)                  00469000
*                                      0 -> the key-range-notification  00470000
*                                      delay value for the structure    00471000
*                                      is applied when notifying        00472000
*                                      monitoring instances of empty to 00473000
*                                      not-empty state transitions      00474000
*                                      for this list's keyrange.        00475000
*                                      1 -> the key-range-notification  00476000
*                                      delay value for the structure    00477000
*                                      is not applied when              00478000
*                                      notifying monitoring instances   00479000
*                                      of empty to not-empty state      00480000
*                                      transitions for this list's      00481000
*                                      keyrange.                 @L6A*/ 00482000
*       7 DlcLNDelay  Bit(1),       /* List notification delay.         00483000
*                                      Bit 7 (LEVEL22).                 00484000
*                                      0 -> the list notification       00485000
*                                      delay value for the structure    00486000
*                                      is applied when notifying        00487000
*                                      monitoring instances of empty to 00488000
*                                      not-empty state transitions      00489000
*                                      for this list                    00490000
*                                      1 -> the list notification delay 00491000
*                                      value for the structure is not   00492000
*                                      applied when notifying           00493000
*                                      monitoring instances of empty to 00494000
*                                      not-empty state transitions for  00495000
*                                      this list                 @L6A*/ 00496000
*     5 DlcListEntryCountLimit   Fixed(32),  /* List entry count        00497000
*                                               limit - specifies the   00498000
*                                               maximum number of       00499000
*                                               possible list entries   00500000
*                                               in a list            */ 00501000
*       7 DlcListElementCountLimit Fixed(32), /* List element count     00502000
*                                               limit - specifies the   00503000
*                                               maximum number of       00504000
*                                               possible list elements  00505000
*                                               in a list        @L4A*/ 00506000
*     5 DlcListEntryCount        Fixed(32),  /* List entry count -      00507000
*                                               number of list entries  00508000
*                                               currently on a list     00509000
*                                               that reside in CF       00510000
*                                               real memory      @L4C*/ 00511000
*       7 DlcListElementCount    Fixed(32),  /* List element count -    00512000
*                                               number of list elements 00513000
*                                               currently on a list     00514000
*                                               that reside in CF       00515000
*                                               real memory      @L4A*/ 00516000
*     5 DlcLstSteTransCt         Fixed(32),  /* List state transition   00517000
*                                               count - specifies the   00518000
*                                               number of empty to      00519000
*                                               not empty list state    00520000
*                                               transitions that have   00521000
*                                               occurred             */ 00522000
*     5 DlcListCursor            Char(12),   /* List Cursor      @D1C*/ 00523000
*     5 DlcListAuth              Char(16),   /* List Authority       */ 00524000
*     5 DlcListDesc              Char(32),   /* List Description -      00525000
*                                               The user specified      00526000
*                                               description of the list 00527000
*                                                                    */ 00528000
*     5 DlcListKey               char(16),   /* List key for key        00529000
*                                               assignment (LEVEL1)     00530000
*                                                                @L1A*/ 00531000
*     5 DlcMaxListKey            char(16),   /* Maximum list key for    00532000
*                                               key assignment (LEVEL1) 00533000
*                                                                @L1A*/ 00534000
*     5 DlcKeyRangeStart         char(16),   /* Lower or starting value 00535000
*                                               of key range (LEVEL9)   00536000
*                                                                @L3A*/ 00537000
*     5 DlcKeyRangeEnd           char(16),   /* Upper or ending value   00538000
*                                               of key range (LEVEL9)   00539000
*                                                                @L3A*/ 00540000
*     5 DlcKeyRangeEmptyCount fixed(32),  /* Number of entries that     00541000
*                                      must remain in the keyrange      00542000
*                                      to suppress a notempty to        00543000
*                                      empty list notification          00544000
*                                      (LEVEL9)                  @L3A*/ 00545000
*     5 DlcKeyRangeNotEmptyCount fixed(32),  /* Number of entries       00546000
*                                      that must be included in the     00547000
*                                      key range before an empty to     00548000
*                                      notempty list notification is    00549000
*                                      generated (LEVEL9)        @L3A*/ 00550000
*     5 DlcListEmptyCount fixed(32),  /* Number of entries that must    00551000
*                                      remain in the list to            00552000
*                                      suppress a notempty to empty     00553000
*                                      list notification (LEVEL9)       00554000
*                                                                @L3A*/ 00555000
*     5 DlcListNotEmptyCount fixed(32),  /*  Number of entries that     00556000
*                                      must be included in the list     00557000
*                                      before an empty to notempty      00558000
*                                      list notification is             00559000
*                                      generated (LEVEL9)        @L3A*/ 00560000
*     5 DlcSCMListEntryCount Char(8),        /* SCM List entry count.   00561000
*                                               The number of list      00562000
*                                               entries that reside in  00563000
*                                               storage class memory    00564000
*                                               (CFLEVEL 19)     @L4A*/ 00565000
*     5 DlcSCMListElementCount Char(8),      /* SCM List element count. 00566000
*                                               The number of list      00567000
*                                               elements that reside in 00568000
*                                               storage class memory    00569000
*                                               (CFLEVEL 19)     @L4A*/ 00570000
*     5 DlcOppListCount Fixed(32), /* Valid when DlcOppListCountValid   00571000
*                                     is ON. When DlcElemCountIndicator 00572000
*                                     is set to:                        00573000
*                                     0 -> DlcOppListCount expressed    00574000
*                                     in number of data elements.       00575000
*                                     1 -> DlcOppListCount expressed    00576000
*                                     in number of list entries  @L5A*/ 00577000
*     5 *   Char(28),              /* Reserved - bytes 196-223   @L7A*/ 00578000
*     5 DlcKeyRAddTally Fixed(32), /* Key-range entry added tally       00579000
*                                     bytes 224-227 (LEVEL22)    @L7A*/ 00580000
*     5 DlcListAddTally Fixed(32), /* List entry added tally            00581000
*                                     bytes 228-231 (LEVEL22)    @L7A*/ 00582000
*     5 *   Char(24),              /* Reserved - bytes 232-255   @L7C*/ 00583000
*   3 DlcListMonTblEntryArr(*)   char(8);    /* Array of list monitor   00584000
*                                               table entries           00585000
*                                               (LEVEL < 9) or          00586000
*                                               an array of list        00587000
*                                               monitor table entries   00588000
*                                               followed by an array of 00589000
*                                               keyrange monitor table  00590000
*                                               entries (LEVEL >= 9)    00591000
*                                                                @L3C*/ 00592000
*/*******************************************************************/  00593000
*/* The DlcListMonTableArray (LEVEL < 9)                        @L3A*/  00594000
*/*******************************************************************/  00595000
*/* The DlcListMonTableArray contains an array of                   */  00596000
*/*   --- DlcListMonTableEntries                                    */  00597000
*/*                                                                 */  00598000
*/* To obtain the number of array elements there are in the list    */  00599000
*/* monitor table array, take the length of the list controls in    */  00600000
*/* the StrBDetail mapping, subract the length of DlcCntlInfo, and  */  00601000
*/* then divide by the length of a list monitor table entry.        */  00602000
*/* This value can only be obtained after using the access service  */  00603000
*/* and mapping the output buffer with the StrBDetail mapping.      */  00604000
*/* The list monitor table entries are mapped by the                */  00605000
*/* DlcListMonTblEntry found immediately following.             @L3C*/  00606000
*/*                                                                 */  00607000
*/*******************************************************************/  00608000
*/* The DlcListMonTableArray (LEVEL >= 9)                       @L3A*/  00609000
*/*******************************************************************/  00610000
*/* The DlcListMonTableArray contains an array of                   */  00611000
*/*   --- DlcListMonTableEntries                                    */  00612000
*/* followed by an array of                                         */  00613000
*/*   --- DlcKRgeMonTableEntries.                                   */  00614000
*/*                                                                 */  00615000
*/* To obtain the number of array elements there are in the list    */  00616000
*/* monitor and keyrange monitor table arrays, take the length of   */  00617000
*/* list controls in the StrBDetail mapping, subract the length of  */  00618000
*/* DlcCntlInfo, and then divide by the length of a list monitor    */  00619000
*/* table entry plus the length of a keyrange monitor table entry.  */  00620000
*/* This value can only be obtained after using the access service  */  00621000
*/* and mapping the output buffer with the StrBDetail mapping.      */  00622000
*/* The list monitor table entries are mapped by the                */  00623000
*/* DlcListMonTblEntry, the keyrange monitor table entries are      */  00624000
*/* mapped by DlcKRgeMonTblEntry found immediately following.   @L3C*/  00625000
*/*                                                                 */  00626000
*/*******************************************************************/  00627000
*/*                                                                 */  00628000
*/*               Dumping List Monitor Table Entry                  */  00629000
*/*                                                                 */  00630000
*/*******************************************************************/  00631000
*declare                                                                00632000
*1   DlcListMonTblEntry char(8) Bdy(word) DlcMonTblEntAttr, /* List     00633000
*                                               monitor table           00634000
*                                               entry - contains info   00635000
*                                               used to process the     00636000
*                                               list notification       00637000
*                                               vector                  00638000
*                                               of each user who has    00639000
*                                               registered interest in  00640000
*                                               the state transition    00641000
*                                               of the list          */ 00642000
*       3 DLcListMonFlags,                   /* Flag byte            */ 00643000
*         5 DlcListMonActive      bit(1),    /* List monitoring active  00644000
*                                               bit - zero indicates    00645000
*                                               that list monitoring    00646000
*                                               was not active.  One    00647000
*                                               indicates that list     00648000
*                                               monitoring was          00649000
*                                               active               */ 00650000
*         5 DlcListNotifyReqType  bit(1),    /* List notification       00651000
*                                   request type.  This bit is only     00652000
*                                   meaningful if the DlcListMonActive  00653000
*                                   bit is set.                      */ 00654000
*           7 DlcListDriveExit   Bit(1), /* List transition exit bit:   00655000
*                                   This bit is only meaningful if      00656000
*                                   the DlcListMonActive bit is set.    00657000
*                                   0 ==> The list transition exit      00658000
*                                     for the associated connection     00659000
*                                     will not be driven on             00660000
*                                     list state transitions.           00661000
*                                   1 ==> The list transition exit      00662000
*                                     for the associated connection     00663000
*                                     will be driven on empty to non-   00664000
*                                     empty list state transitions or   00665000
*                                     on full to not-full list state    00666000
*                                     transitions.  See                 00667000
*                                     DlcListMonitorType to determine   00668000
*                                     what type of transitions this     00669000
*                                     monitoring registration           00670000
*                                     represents                 @L6A*/ 00671000
*         5 DlcListNotifyOnEvery BIT(1), /* List Notification Type bit: 00672000
*                          This bit is only meaningful if               00673000
*                          the DlcListMonActive bit is set.             00674000
*                          0 = indicates that the index identified by   00675000
*                              DlcListNotifyEntryNum is updated         00676000
*                              whenever the list state transitions from 00677000
*                              the not-empty state to empty and when    00678000
*                              the list state transitions from empty    00679000
*                              state to not-empty state.                00680000
*                          1 = indicates that the index identified by   00681000
*                              DlcListNotifyEntryNum is updated         00682000
*                              whenever the list state transitions from 00683000
*                              the not-empty state to empty state and   00684000
*                              every time a list entry is added to the  00685000
*                              list and the list not-empty threshold    00686000
*                              count is exceeded (CFLEVEL >=22)  @L6A*/ 00687000
*         5 DlcListMonitorType Bit(1), /* List Monitor Type bit:        00688000
*                         This bit is only meaningful if                00689000
*                         the DlcListMonActive bit is set.              00690000
*                         0 =  the list is being monitored for          00691000
*                              empty/not-empty transitions.             00692000
*                         1 =  the list is being monitored for          00693000
*                              full/not-full transitions.               00694000
*                              (CFLEVEL >=22)                    @L6A*/ 00695000
*         5 *                     bit(4),    /* Reserved         @L6C*/ 00696000
*       3 *                       Char(3),   /* Reserved             */ 00697000
*       3 DlcListNotifyEntryNum   Fixed(32); /* List notification       00698000
*                                               entry number - The      00699000
*                                               number of list          00700000
*                                               notification entry      00701000
*                                               number               */ 00702000
*/*******************************************************************/  00703000
*/*                                                                 */  00704000
*/*               Dumping KeyRange Monitor Table Entry              */  00705000
*/*                                                             @L3A*/  00706000
*/*******************************************************************/  00707000
*declare                                                                00708000
*1   DlcKRgeMonTblEntry char(8) Bdy(word) DlcMonTblEntAttr, /* Key      00709000
*                                               range monitor table     00710000
*                                               entry - contains info   00711000
*                                               used to process the     00712000
*                                               list notification       00713000
*                                               vector                  00714000
*                                               of each user who has    00715000
*                                               registered interest in  00716000
*                                               the state transition    00717000
*                                               of the keyrange  @L3A*/ 00718000
*       3 DLcKRgeMonFlags,                   /* Flag byte            */ 00719000
*         5 DlcKRgeMonActive      bit(1),    /* KeyRange monitoring     00720000
*                                               active bit - zero       00721000
*                                               indicates keyrange      00722000
*                                               monitoring was not      00723000
*                                               active.  One indicates  00724000
*                                               that keyrange           00725000
*                                               monitoring was          00726000
*                                               active           @L3A*/ 00727000
*         5 DlcKRgeNotifyReqType  bit(1),    /* KeyRange notification   00728000
*                                   request type.  This bit is only     00729000
*                                   meaningful if the DlcKRgeMonActive  00730000
*                                   bit is set.                      */ 00731000
*           7 DlcKRgeDriveExit  Bit(1),  /* KeyRange transition exit    00732000
*                                    bit. This bit is only meaningful   00733000
*                                    if the DlcKRgeMonActive bit        00734000
*                                    is set.                            00735000
*                                    0 ==> The Keyrange transition      00736000
*                                     exit for the associated           00737000
*                                     connection will not be driven     00738000
*                                     on empty to non-empty state       00739000
*                                     transitions.                      00740000
*                                    1 ==> The Keyrange transition      00741000
*                                     exit for the associated           00742000
*                                     connection will be driven         00743000
*                                     on empty to non-empty state       00744000
*                                     transitions.               @L1A*/ 00745000
*         5 DlcKRgeNotifyOnEvery BIT(1),     /* KeyRange Notification   00746000
*                                               Type bit:               00747000
*                          This bit is only meaningful if               00748000
*                          the DlcKRgeMonActive bit is set.             00749000
*                          0 = indicates that the index                 00750000
*                              identified by DlcKRgeNotifyEntryNum      00751000
*                              is updated whenever the                  00752000
*                              key-range state transitions from the     00753000
*                              not-empty state to empty state and       00754000
*                              when the key-range state transitions     00755000
*                              from empty state to not-empty state      00756000
*                          1 = indicates that the index                 00757000
*                              identified by DlcKRgeNotifyEntryNum      00758000
*                              is updated whenever the key-range state  00759000
*                              transitions from the not-empty state to  00760000
*                              empty state and every time a list entry  00761000
*                              is added to the key-range and the        00762000
*                              key-range not-empty threshold count is   00763000
*                              exceeded (CFLEVEL >= 22)          @L6A*/ 00764000
*         5 *                     bit(5),    /* Reserved         @L6C*/ 00765000
*       3 *                       Char(3),   /* Reserved             */ 00766000
*       3 DlcKRgeNotifyEntryNum   Fixed(32); /* KeyRange notification   00767000
*                                               entry number - The      00768000
*                                               number of keyrange      00769000
*                                               notification vector     00770000
*                                               entry            @L3A*/ 00771000
*/* End of PL/X Source                                               */ 00772000
* %IF IXLYDLC_LIST ^= 'NO' &                                            00773000
*    ZCBPRINT ^= 'NO' %THEN                                             00774000
*   %GOTO IXLYDLC_4;                                                    00775000
*   @LIST POP NOECHO;                                                   00776000
* %IXLYDLC_4:;                                                          00777000
* %END;                                                                 00778000
