*%/*                                                                            
         MACRO                                                                  
         EZAENF80 &DSECT=YES,&LIST=YES,&TITLE=YES                               
         GBLC  &EZAENF80_INCLUDED                                               
         GBLC  &ZCBPRINT                                                        
&EZAENF80_INCLUDED SETC 'YES'                                                   
         AIF   ('&LIST' EQ 'NONE').P0                                           
         AIF   ('&TITLE' EQ 'NO').P5                                            
 TITLE   'EZAENF80  - z/OS Communications Server ENF(event code 80) '           
.P5      ANOP                                                                   
.P0      ANOP                                                                   
         AIF   ('&ZCBPRINT' EQ 'NO').P1                                         
         AIF   ('&LIST' EQ 'YES').P2                                            
.P1      ANOP                                                                   
         PUSH  PRINT                                                            
         PRINT OFF                                                              
.P2      ANOP                                                                   
         AIF   ('&DSECT' EQ 'YES').L0002                                        
ENF80           DS    0D          ENF80 mapping                                 
         AGO   .L0003                                                           
.L0002   ANOP                                                                   
ENF80           DSECT ,           ENF80 mapping                                 
.L0003   ANOP                                                                   
ENF80_ID        DS    CL6         Eye catcher 'ENF80 '                          
ENF80_VERSION   DS    X           Version of mapping                            
ENF80_VONE      EQU   1           Version 1                                     
                DS    X           Reserved                                      
ENF80_LENGTH    DS    H           Length of parameter list                      
                DS    XL2         Reserved                                      
ENF80_QUALIFIER DS    XL4         Qualifier code                                
ENF80_RPC_EVENT EQU   X'80000000' RPCBIND event qualifier                       
ENF80_SYSPLEX_EVENT EQU X'40000000' PLEX event qualifier                        
ENF80_SRU_EVENT EQU   X'20000000' SRU event qualifier                           
ENF80_PAG_EVENT EQU   X'10000000' Pagent event qualifier                        
ENF80_END       DS    0H          End of fixed ENF80 control block              
*                                                                               
ENF80_SIZE      EQU   *-ENF80     Length of ENF80 fixed parameter area          
*                                                                               
ENF80_RPC         ORG   ENF80_END   RPCBIND event data                          
ENF80_RPC_FLAGS   DS    X           RPCBIND flags                               
ENF80_RPCINIT     EQU   X'80'       RPCBIND has initialized qualifier           
ENF80_RPCTERM     EQU   X'40'       RPCBIND is ending qualifier                 
ENF80_RPC_RSVD1   DS    XL3         Reserved                                    
ENF80_RPC_JOBNAME DS    CL8         RPCBIND jobname                             
ENF80_SYSPLEX         ORG   ENF80_END  SYSPLEX event data                       
ENF80_SYSPLEX_FLAGS   DS    X       SYSPLEX flags                               
ENF80_SYSPLEX_JOIN    EQU   X'80'   TCP/IP Stack joining SYSPLEX                
ENF80_SYSPLEX_LEAVE   EQU   X'40'   TCP/IP stack leaving SYSPLEX                
ENF80_SYSPLEX_RSVD1   DS    XL3     Reserved                                    
ENF80_SYSPLEX_JOBNAME DS    CL8     TCPIP jobname                               
ENF80_SRU             ORG   ENF80_END  SRU event data                           
ENF80_SRU_FLAGS       DS    X       SRU flags                                   
ENF80_SRU_ISSUE       EQU   X'80'   SRU message issued                          
ENF80_SRU_RSVD1       DS    XL3     Reserved                                    
ENF80_SRU_JOBNAME     DS    CL8     TCPIP jobname                               
ENF80_PAG             ORG   ENF80_END  Pagent event data                        
ENF80_PAG_FLAGS       DS    X       Pagent flags                                
ENF80_PAG_ISSUE       EQU   X'80'   TCP/IP Stack start/refresh                  
ENF80_PAG_RSVD1       DS    XL3     Reserved                                    
ENF80_PAG_JOBNAME     DS    CL8     TCPIP jobname                               
                ORG                                                             
.L0009   ANOP                                                                   
         AIF   ('&ZCBPRINT' EQ 'NO').P3                                         
         AIF   ('&LIST' EQ 'YES').P4                                            
.P3      ANOP                                                                   
         POP   PRINT                                                            
.P4      ANOP                                                                   
.P_EXIT  ANOP                                                                   
         MEND                                                                   
**/;                                                                            
*%Dcl EZAENF80_Include Fixed External;                                          
*%If EZAENF80_Include=0 %Then %Do;                                              
*%EZAENF80_Include=1;                                                           
*%Goto EZAENF80_Data;                                                           
*/********************************************************************/         
*/*                                                                  */         
*/* TITLE:              z/OS Communications Server ENF(event code 80)*/         
*/*                                                                  */         
*/* Descriptive Name:   EZAENF80                                     */         
*/*                                                                  */         
*/* Component Name:     IPIT                                         */         
*/*                                                                  */         
*/* Copyright:  Licensed Materials - Property of IBM                 */         
*/*             5650-ZOS                                             */         
*/*             Copyright IBM Corp. 2013,2021                        */         
*/*                                                                  */         
*/* Status:             ZCSV2R5                                      */         
*/*                                                                  */         
*/* Function:           Define the ENF event code 80 structure for   */         
*/*                     ENF listeners                                */         
*/*                                                                  */         
*/* Part Type:          Macro                                        */         
*/*                                                                  */         
*/* System Build Information:                                        */         
*/*   Load Module:      N/A                                          */         
*/*   Dist Library:     'TCPIP.AEZAMAC1'                             */         
*/*   Location:         'SYS1.MACLIB'                                */         
*/*   Alias Name(s):    N/A                                          */         
*/*                                                                  */         
*/* Method of Access:                                                */         
*/*                                                                  */         
*/*   BAL  - DSECTs are produced if DSECT=YES is specified, and are  */         
*/*                 not produced if DSECT=NO is specified.           */         
*/*                                                                  */         
*/*   BAL Listing - Specify LIST=YES to include symbols in listing,  */         
*/*                 and specify LIST=NO to suppress listing symbols. */         
*/*                                                                  */         
*/*   PL/X Listing - To suppress listing of symbols:                 */         
*/*                                                                  */         
*/*                     @Push Print Noecho                           */         
*/*                     @Print Off Compile Assemble Noecho           */         
*/*                     %Include Syslib(EZAENF80)                    */         
*/*                     @Pop Print Noecho                            */         
*/*                                                                  */         
*/* CHANGE ACTIVITY:                                                 */         
*/*                                                                  */         
*/* Flag Reason   Release  Date   Origin    Description              */         
*/* ---- -------- -------- ------ --------  ------------------------ */         
*/* $V0= RESTKRPC CSV2R1   120607 ANDYT   : Created                  */         
*/* $51= RHNSARAN CSV2R4   181010 mogos   : ENF80 signal for sysplex */         
*/* $61= RINIPSAN ZCSV2R5  200228 Tylerj  : SRU ENF Signal (79149)   */         
*/*                        200825 Tylerj  : Pagent ENF Signal (82392)*/         
*/*                                                                  */         
*/********************************************************************/         
*%EZAENF80_Data:;                                                               
*/********************************************************************/         
*/*                                                                  */         
*/* ENF80 mapping                                                    */         
*/*                                                                  */         
*/********************************************************************/         
*DCL 1 ENF80 BASED,                 /* ENF80 mapping                 */         
*     3 ENF80_ID        CHAR(6),    /* Control Block ID "ENF80 "     */         
*     3 ENF80_VERSION   FIXED(8),   /* Version of mapping            */         
*     3 *               FIXED(8),   /* Reserved                      */         
*     3 ENF80_LENGTH    FIXED(16),  /* Length of parameter list      */         
*     3 *               FIXED(16),  /* Reserved                      */         
*     3 ENF80_QUALIFIER BIT(32),    /* Qualifier code                */         
*     3 ENF80_END       CHAR(0);    /* End of fixed ENF80 control               
*                                      block                         */         
*                                                                               
*DCL                                                                            
*  ENF80_CID     CHAR(6) CONSTANT('ENF80 '), /* Eyecatcher                      
*                                                 constant           */         
*  ENF80_VONE    FIXED(8) CONSTANT(1),       /* Version 1 constant   */         
*  ENF80_SIZE    FIXED(16) CONSTANT(LENGTH(ENF80)); /* Length of                
*                                         ENF80 fixed parameter area */         
*                                                                               
*DCL                                 /* ENF80 Qualifier constants    */         
*  ENF80_RPC_EVENT BIT(32) CONSTANT('80000000'X); /* RPCBIND event              
*                                                    qualifier       */         
*DCL                                 /* ENF80 Qualifier constants    */         
*  ENF80_SYSPLEX_EVENT BIT(32) CONSTANT('40000000'X); /* SYSPLEX event          
*                                                                @51A*/         
*DCL ENF80_SRU_EVENT BIT(32) CONSTANT('20000000'X);/* Stack Really Up           
*                                                                @61A*/         
*DCL ENF80_PAG_EVENT BIT(32) CONSTANT('10000000'X);/*Pagent ENF  @61A*/         
*DCL 1 ENF80_RPC BASED(ADDR(ENF80_END)), /* RPCBIND Event Data       */         
*     3 ENF80_RPC_FLAGS   BIT(8),  /* RPCBIND Flags                  */         
*      5 ENF80_RPCINIT    BIT(1),  /* RPCBIND has initialized        */         
*      5 ENF80_RPCTERM    BIT(1),  /* RPCBIND is ending              */         
*      5 *                BIT(6),  /* Reserved                       */         
*     3 ENF80_RPC_RSVD1   BIT(24), /* Reserved                       */         
*     3 ENF80_RPC_JOBNAME CHAR(8); /* RPCBIND jobname                */         
*DCL 1 ENF80_SYSPLEX BASED(ADDR(ENF80_END)), /*SYSPLEX Event Data@51A*/         
*     3 ENF80_SYSPLEX_FLAGS  BIT(8),  /* SYSPLEX Flags           @51A*/         
*      5 ENF80_SYSPLEX_JOIN  BIT(1),  /* TCP/IP stack joining SYSPLEX           
                                                                 @51A*/         
*      5 ENF80_SYSPLEX_LEAVE BIT(1),  /* TCP/IP stack leaving SYSPLEX           
                                                                 @51A*/         
*      5 *                   BIT(6),  /* Reserved                @51A*/         
*     3 ENF80_SYSPLEX_RSVD1  BIT(24), /* Reserved                @51A*/         
*     3 ENF80_SYSPLEX_JOBNAME  CHAR(8);  /* TCPIP jobname        @51A*/         
*DCL 1 ENF80_SRU BASED(ADDR(ENF80_END)), /* SRU Event Data       @61A*/         
*     3 ENF80_SRU_FLAGS      BIT(8),   /* SRU Flags              @61A*/         
*      5 ENF80_SRU_ISSUE     BIT(1),   /* Issue SRU message      @61A*/         
*      5 *                   BIT(7),   /* Reserved               @61A*/         
*     3 ENF80_SRU_RSVD1      BIT(24),  /* Reserved               @61A*/         
*     3 ENF80_SRU_JOBNAME    CHAR(8);  /* SRU jobname            @61A*/         
*DCL 1 ENF80_PAG BASED(ADDR(ENF80_END)), /* Pagent Event Data    @61A*/         
*     3 ENF80_PAG_FLAGS      BIT(8),   /* Pagent Flags           @61A*/         
*      5 ENF80_PAG_ISSUE     BIT(1),   /* Issue Pagent signal    @61A*/         
*      5 *                   BIT(7),   /* Reserved               @61A*/         
*     3 ENF80_PAG_RSVD1      BIT(24),  /* Reserved               @61A*/         
*     3 ENF80_PAG_JOBNAME    CHAR(8);  /* ENF jobname            @61A*/         
*%End;                                 /*                            */         
