*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IWM4MABN                              -07/17/13-<0> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  Monitor environment abnormal event            * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5650-ZOS COPYRIGHT IBM CORP. 2013                               * 00001200
*                                                                     * 00001300
* STATUS= HBB7790                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      The purpose of this service is to indicate that an abnormal    * 00002100
*      event has occurred for the work request represented by the     * 00002200
*      input monitoring environment. This condition will supplement   * 00002300
*      any existing abnormal conditions recorded in the input         * 00002400
*      monitoring environment (multiple conditions may exist).        * 00002500
*                                                                     * 00002600
*      Note that abnormal conditions are propagated to the parent     * 00002700
*      monitoring environment via IWM4MXFR Function(Return).          * 00002800
*                                                                     * 00002900
*01* EXTERNAL CLASSIFICATION:  PI                                     * 00003000
*                                                                     * 00003100
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00003200
*                                                                     * 00003300
*01* ENVIRONMENT:                                                     * 00003400
*                                                                     * 00003500
*                                                                     * 00003600
*      Dispatchable unit mode: Task or SRB mode.                      * 00003700
*                                                                     * 00003800
*      Minimum authorization:                                         * 00003900
*                                                                     * 00004000
*                                                                     * 00004100
*                        o   Either problem state or supervisor       * 00004200
*                            state.                                   * 00004300
*                                                                     * 00004400
*                        o   PSW key must either be 0 or match the    * 00004500
*                            value supplied on IWM4MCRE for the input * 00004600
*                            monitoring token when MONENVKEYP(PSWKEY) * 00004700
*                            is specified.                            * 00004800
*                                                                     * 00004900
*                        o   MONENVKEYP(VALUE) may only be specified  * 00005000
*                            in supervisor state or with PKM          * 00005100
*                            authority to the key specified by        * 00005200
*                            MONENVKEY.                               * 00005300
*                                                                     * 00005400
*                            Note that the key for IWM4MABN is        * 00005500
*                            located in bit positions 0-3 (using 0    * 00005600
*                            origin), which is the machine            * 00005700
*                            orientation to keeping keys, not the     * 00005800
*                            "natural" way of declaring the key       * 00005900
*                            value.                                   * 00006000
*                                                                     * 00006100
*                        o   MONENVKEYP(UNKNOWN) may only be          * 00006200
*                            specified in supervisor state or with    * 00006300
*                            PKM authority to key 0.                  * 00006400
*                                                                     * 00006500
*                                                                     * 00006600
*                                                                     * 00006700
*      AMODE:            31- or 64-bit.  If in 64-Bit addressing      * 00006800
*                        mode, code SYSSTATE AMODE64=YES before       * 00006900
*                        invoking this macro.                         * 00007000
*                                                                     * 00007100
*      ASC mode:         Primary.                                     * 00007200
*                                                                     * 00007300
*      Cross Memory Mode: Any PASN, any HASN, any SASN.               * 00007400
*                                                                     * 00007500
*      Interrupt status: Enabled for I/O and external interrupts.     * 00007600
*                                                                     * 00007700
*      Locks:            Unlocked                                     * 00007800
*                                                                     * 00007900
*      Control parameters:     Control parameters must be in the      * 00008000
*                        primary address space.                       * 00008100
*                                                                     * 00008200
*                                                                     * 00008300
*                                                                     * 00008400
*01* RESTRICTIONS:                                                    * 00008500
*                                                                     * 00008600
*                                                                     * 00008700
*    1.  This macro may not be used prior to the completion of WLM    * 00008800
*        address space initialization                                 * 00008900
*                                                                     * 00009000
*    2.  All parameter areas must reside in current primary.          * 00009100
*                                                                     * 00009200
*    3.  If the key specified on IWM4MCRE for the input environment   * 00009300
*        was a user key (8-F), then either primary OR secondary       * 00009400
*        addressability must exist to the performance block.          * 00009500
*                                                                     * 00009600
*    4.  The caller must serialize to prevent any delay monitoring    * 00009700
*        services from being invoked concurrently for the input       * 00009800
*        monitoring environment.                                      * 00009900
*                                                                     * 00010000
*    5.  Only limited validity checking is done on the input          * 00010100
*        monitoring token.                                            * 00010200
*                                                                     * 00010300
*    6.  Caller is responsible for error recovery.                    * 00010400
*                                                                     * 00010500
*    7.  This macro may only be used on z/OS V2R1 or higher.          * 00010600
*                                                                     * 00010700
*                                                                     * 00010800
*                                                                     * 00010900
*01* INPUT REGISTERS:  GR0-GR1     Reserved                           * 00011000
*                      GR2-GR13    Undefined                          * 00011100
*                      GR14-GR15   Reserved                           * 00011200
*                      AR0-AR1     Reserved                           * 00011300
*                      AR2-AR13    Undefined                          * 00011400
*                      AR14-AR15   Reserved                           * 00011500
*                                                                     * 00011600
*01* OUTPUT REGISTERS: GR0         Reason code if GR15 return code is * 00011700
*                                  non-zero                           * 00011800
*                      GR1         Used as a work register by the     * 00011900
*                                  macro                              * 00012000
*                      GR2-GR13    Unchanged                          * 00012100
*                      GR14        Used as a work register by the     * 00012200
*                                  macro                              * 00012300
*                      GR15        Return code                        * 00012400
*                      AR0-AR1     Used as a work register by the     * 00012500
*                                  macro                              * 00012600
*                      AR2-AR13    Unchanged                          * 00012700
*                      AR14-AR15   Used as a work register by the     * 00012800
*                                  macro                              * 00012900
*                                                                     * 00013000
*01* PERFORMANCE IMPLICATIONS:                                        * 00013100
*                                                                     * 00013200
*    None                                                             * 00013300
*                                                                     * 00013400
*01* SYNTAX:                                                          * 00013500
*                                                                     * 00013600
*Ýxlabel¨  IWM4MABN     ABNORMAL=xabnormal                            * 00013700
*                    Ð ,MONTKN=xmontkn                                * 00013800
*                    ¿ ,MONTKN64=xmontkn64                            * 00013900
*                    Ð ,MONENVKEYP=VALUE                              * 00014000
*                    !     ,MONENVKEY=xmonenvkey                      * 00014100
*                    Ô ,MONENVKEYP=PSWKEY                             * 00014200
*                    ¿ ,MONENVKEYP=UNKNOWN                            * 00014300
*                    Ð ,MONENV=NOSWITCH                               * 00014400
*                    ¿ ,MONENV=SECONDARY                              * 00014500
*                     Ý,RETCODE=xretcode¨                             * 00014600
*                     Ý,RSNCODE=xrsncode¨                             * 00014700
*                                                                     * 00014800
*                                                                     * 00014900
*      Where:                                                         * 00015000
*                                                                     * 00015100
*                                                                     * 00015200
*      Ýxlabel¨                                                       * 00015300
*          is an optional symbol, starting in column 1, that is the   * 00015400
*          name on the IWM4MABN macro invocation.  The name must      * 00015500
*          conform to the rules for an ordinary assembler language    * 00015600
*          symbol.                                                    * 00015700
*          DEFAULT: No name.                                          * 00015800
*                                                                     * 00015900
*                                                                     * 00016000
*                                                                     * 00016100
*                                                                     * 00016200
*      ABNORMAL=xabnormal                                             * 00016300
*          is the name (RS-type), or address in register (2)-(12), of * 00016400
*          a required 32 bit input which indicates the abnormal mask  * 00016500
*          to use to reflect the abnormality.  Macro IWMYCON contains * 00016600
*          the defined abnormal masks. The mask variable names begin  * 00016700
*          with IWM4MABN, for example - IWMMABNL_SCOPE_LOCALMVS.      * 00016800
*                                                                     * 00016900
*                                                                     * 00017000
*                                                                     * 00017100
*                                                                     * 00017200
*      The following is a set of mutually exclusive keys.  This set   * 00017300
*      is required; only one key must be specified.                   * 00017400
*                                                                     * 00017500
*                                                                     * 00017600
*      MONTKN=xmontkn                                                 * 00017700
*          belongs to a set of mutually exclusive keys. It is the     * 00017800
*          name (RS-type), or address in register (2)-(12), of a 32   * 00017900
*          bit input which contains the delay monitoring token for    * 00018000
*          the environment affected by the abnormality.               * 00018100
*                                                                     * 00018200
*      MONTKN64=xmontkn64                                             * 00018300
*          belongs to a set of mutually exclusive keys. It is the     * 00018400
*          name (RS-type), or address in register (2)-(12), of a 64   * 00018500
*          bit input which contains the long delay monitoring token   * 00018600
*          for the environment affected by the abnormality.           * 00018700
*                                                                     * 00018800
*                                                                     * 00018900
*                                                                     * 00019000
*      End of a set of mutually exclusive required keys.              * 00019100
*                                                                     * 00019200
*                                                                     * 00019300
*                                                                     * 00019400
*      MONENVKEYP=»VALUE!PSWKEY!UNKNOWNº                              * 00019500
*          is a required keyword input which describes whether a key  * 00019600
*          switch is needed to access the input monitoring            * 00019700
*          environment.                                               * 00019800
*                                                                     * 00019900
*                                                                     * 00020000
*          MONENVKEYP=VALUE                                           * 00020100
*                                                                     * 00020200
*              indicates that the key is being passed explicitly via  * 00020300
*              MONENVKEY.                                             * 00020400
*                                                                     * 00020500
*                                                                     * 00020600
*              MONENVKEY=xmonenvkey                                   * 00020700
*                  is the name (RS-type), or address in register      * 00020800
*                  (2)-(12), of a required 8 bit input which contains * 00020900
*                  the key in which the input monitoring environment  * 00021000
*                  must be accessed.  Use of this keyword value       * 00021100
*                  requires that the invoker be in supervisor state   * 00021200
*                  or that the caller have PKM authority to the key   * 00021300
*                  specified.  The leftmost, i.e. high order, 4 bits  * 00021400
*                  contain the key value.                             * 00021500
*                                                                     * 00021600
*                  Note that this is different from the "natural" way * 00021700
*                  of declaring the key, and uses the machine         * 00021800
*                  orientation for keeping the storage key in the     * 00021900
*                  high order bits.                                   * 00022000
*                                                                     * 00022100
*                                                                     * 00022200
*                                                                     * 00022300
*          MONENVKEYP=PSWKEY                                          * 00022400
*                                                                     * 00022500
*              indicates that the current PSW key should be used.     * 00022600
*              Use of this keyword value requires that the input      * 00022700
*              monitoring environment was established with the same   * 00022800
*              key as the current PSW.                                * 00022900
*                                                                     * 00023000
*          MONENVKEYP=UNKNOWN                                         * 00023100
*                                                                     * 00023200
*              indicates that the key associated with the input       * 00023300
*              monitoring environment is unknown.  Use of this        * 00023400
*              keyword value requires that the invoker be in          * 00023500
*              supervisor state or that the caller have PKM authority * 00023600
*              to key 0.                                              * 00023700
*                                                                     * 00023800
*                                                                     * 00023900
*                                                                     * 00024000
*                                                                     * 00024100
*                                                                     * 00024200
*                                                                     * 00024300
*      MONENV=»NOSWITCH!SECONDARYº                                    * 00024400
*          is a required keyword input which describes whether a      * 00024500
*          space switch is needed to access the input monitoring      * 00024600
*          environment.                                               * 00024700
*                                                                     * 00024800
*                                                                     * 00024900
*          MONENV=NOSWITCH                                            * 00025000
*                                                                     * 00025100
*              indicates that NO space switch is needed to access the * 00025200
*              input monitoring environment.  This would be           * 00025300
*              appropriate if the input monitoring environment was    * 00025400
*              established (by IWM4MCRE) to be used by routines in a  * 00025500
*              specific system key or if it was established to be     * 00025600
*              used in a specific user key in the current primary.    * 00025700
*                                                                     * 00025800
*          MONENV=SECONDARY                                           * 00025900
*                                                                     * 00026000
*              indicates that the input monitoring environment was    * 00026100
*              established in current secondary (for use by a         * 00026200
*              specific user key).                                    * 00026300
*                                                                     * 00026400
*                                                                     * 00026500
*                                                                     * 00026600
*                                                                     * 00026700
*                                                                     * 00026800
*                                                                     * 00026900
*      ÝRETCODE=xretcode¨                                             * 00027000
*          is the name (RS-type) of an optional fullword output       * 00027100
*          variable, or register (2)-(12) or (15), into which the     * 00027200
*          return code is to be copied from GPR 15.  If you specify   * 00027300
*          15, GPR15, REG15, or R15 (within or without parentheses),  * 00027400
*          the value will be left in GPR 15.                          * 00027500
*                                                                     * 00027600
*                                                                     * 00027700
*                                                                     * 00027800
*                                                                     * 00027900
*      ÝRSNCODE=xrsncode¨                                             * 00028000
*          is the name (RS-type) of an optional fullword output       * 00028100
*          variable into which the reason code is to be copied from   * 00028200
*          GPR 0.  If you specify 0, 00, GPR0, GPR00, REG0, REG00, or * 00028300
*          R0 (within or without parentheses), the value will be left * 00028400
*          in GPR 0.                                                  * 00028500
*                                                                     * 00028600
*                                                                     * 00028700
*                                                                     * 00028800
*01* ABEND CODES:  None.                                              * 00028900
*                                                                     * 00029000
*01* RETURN CODES:                                                    * 00029100
*                                                                     * 00029200
*                                                                     * 00029300
*            0    IwmRetCodeOk:  Successful completion.               * 00029400
*                                                                     * 00029500
*            4    IwmRetCodeWarning:  Successful completion, unusual  * 00029600
*                 conditions noted.                                   * 00029700
*                                                                     * 00029800
*                 HEX REASON  MEANING                                 * 00029900
*                 CODE                                                * 00030000
*                                                                     * 00030100
*                                                                     * 00030200
*                 xxxx0402    IwmRsncodeNoMonEnv:  Input monitoring   * 00030300
*                             token indicates no monitoring           * 00030400
*                             environment was established.            * 00030500
*                                                                     * 00030600
*                                                                     * 00030700
*                                                                     * 00030800
*                                                                     * 00030900
*            8    IwmRetCodeInvocError:  Invalid invocation           * 00031000
*                 environment or parameters                           * 00031100
*                                                                     * 00031200
*                 HEX REASON  MEANING                                 * 00031300
*                 CODE                                                * 00031400
*                                                                     * 00031500
*                                                                     * 00031600
*                 xxxx0820    IwmRsnCodeBadMonEnv:  Monitoring        * 00031700
*                             environment does not pass verification. * 00031800
*                                                                     * 00031900
*                                                                     * 00032000
*                                                                     * 00032100
*                                                                     * 00032200
*                                                                     * 00032300
*                                                                     * 00032400
*01* REASON CODES:                                                    * 00032500
*                                                                     * 00032600
*       A unique reason code will be returned whenever the return     * 00032700
*       code is non-zero.  Reason codes, as appropriate, are defined  * 00032800
*       under their corresponding return code.  Reason code and       * 00032900
*       return code constants are defined within IWMYCON.  Note that  * 00033000
*       the high order halfword of register 0, and the reason code    * 00033100
*       variable when specified, may be non-zero and represents       * 00033200
*       diagnostic data which is NOT part of the external interface.  * 00033300
*       The high order halfword should thus be excluded from          * 00033400
*       comparison with the reason code values described above.  The  * 00033500
*       constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may be    * 00033600
*       used for this purpose.                                        * 00033700
*                                                                     * 00033800
*01* MODULE TYPE:  ASSEM MACRO                                        * 00033900
*                                                                     * 00034000
*02*   PROCESSOR:  ASSEM                                              * 00034100
*                                                                     * 00034200
*01* COMPONENT:  SCWLM                                                * 00034300
*                                                                     * 00034400
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00034500
*                                                                     * 00034600
*01* MACRO USAGE NOTES:                                               * 00034700
*                                                                     * 00034800
*                                                                     * 00034900
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00035000
*        global macro variable.  Any value other than 'NO' will       * 00035100
*        result in the macro expansion being printed.  The default is * 00035200
*        'YES'.  The following examples illustrate how the ZPRINT     * 00035300
*        variable should be set.                                      * 00035400
*                                                                     * 00035500
*                    GBLC &ZPRINT                                     * 00035600
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00035700
*                                                                     * 00035800
*    2.  The macro IWMYCON must be included to use this macro.        * 00035900
*                                                                     * 00036000
*    3.  The  macro IWMPB must be in the library concatenation, since * 00036100
*        it is included by IWMYCON.                                   * 00036200
*                                                                     * 00036300
*    4.  Note  that  the  high  order halfword of register 0, and the * 00036400
*        reason  code  variable  when  specified, may be non-zero and * 00036500
*        represents diagnostic data which is NOT part of the external * 00036600
*        interface.   The high order halfword should thus be excluded * 00036700
*        from comparison with the reason code values described above. * 00036800
*        The  constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may * 00036900
*        be used for this purpose.                                    * 00037000
*                                                                     * 00037100
*    5.  Registers  0,  1,  14,  and  15 are not preserved across the * 00037200
*        expansion.   In the PL/AS form, Register 2 is also destroyed * 00037300
*        when MONENV(SECONDARY) is specified.                         * 00037400
*                                                                     * 00037500
*                                                                     * 00037600
*                                                                     * 00037700
*01* CHANGE ACTIVITY:                                                 * 00037800
*                                                                     * 00037900
*   Flag LineItem  FMID    Date   ID    Comment                       * 00038000
*                                                                     * 00038100
*    $L0=LPBABV   HBB7790 121023 3241AH:  Initial version PB above 2G * 00038200
*    $P0=ME25540  HBB7790 130122 3241AH:  Assembler AMODE switch base * 00038300
*                                         register usage incorrect    * 00038400
****** END OF SPECIFICATIONS *****************************************/ 00038500
*/********************************************************************* 00038600
         MACRO                                                          00038700
&XLABEL  IWM4MABN &ABNORMAL=,&MONTKN=,&MONTKN64=,&MONENVKEYP=,         *00038800
               &MONENVKEY=,&MONENV=,&RETCODE=,&RSNCODE=                 00038900
.*                                                                      00039000
*                MACDATE -07/17/13-<0>                                  00039100
.*                                                                      00039200
.*******************************************************************    00039300
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00039400
.*******************************************************************    00039500
                GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                 00039600
                GBLC  &ZTEST      YES=TEST NO=NO TEST                   00039700
                GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX           00039800
.*                                                                      00039900
                GBLC  &ZIWM4MABN  YES=MACRO USED AT LEAST ONCE          00040000
.*******************************************************************    00040100
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00040200
.*******************************************************************    00040300
                LCLC  &ZMS        ERROR MESSAGE WORK AREA               00040400
                LCLC  &ZCNDX      SYSNDX CHARACTERS                     00040500
                LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED            00040600
                LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR           00040700
                LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE           00040800
                LCLA  &ZAWRK      USED AS A WORK AREA                   00040900
                LCLA  &ZASIZ      USED FOR SIZE OF VALUE                00041000
                LCLA  &ZN         NUMERIC WORK VARIABLE                 00041100
                LCLC  &ZC         CHARACTER WORK VARIABLE               00041200
                LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE           00041300
                LCLA  &ZTLA       VALUE TOO LONG VARIABLE               00041400
                LCLC  &ZMAC_G     "G" or null                           00041500
&ZMAC_G         SETC  ''                                                00041600
                LCLC  &ZMAC_LR                                          00041700
&ZMAC_LR        SETC  'LR'                                              00041800
                LCLC  &ZMAC_L                                           00041900
&ZMAC_L         SETC  'L'                                               00042000
                LCLC  &ZMAC_ST                                          00042100
&ZMAC_ST        SETC  'ST'                                              00042200
                LCLC  &ZMAC_LLGT                                        00042300
&ZMAC_LLGT      SETC  'L'                                               00042400
                LCLC  &ZMAC_LGR                                         00042500
&ZMAC_LGR       SETC  'LR'                                              00042600
                LCLC  &ZMAC_LG                                          00042700
&ZMAC_LG        SETC  'L'                                               00042800
                LCLC  &ZMAC_STG                                         00042900
&ZMAC_STG       SETC  'ST'                                              00043000
                LCLA  &ZMACRET    MACRO RETURN CODE                     00043100
&ZMACRET        SETA  0           ASSUME NO ERRORS                      00043200
.*                                                                      00043300
                LCLC  &ZCSYSLIST(255)           NONXKEY, POS ARRAY      00043400
                LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()            00043500
                LCLA  &ZPLLEN     PARAMETER LIST LENGTH                 00043600
                LCLC  &ZENDBASEPL               End of base PL          00043700
.*******************************************************************    00043800
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00043900
.*******************************************************************    00044000
                LCLC  &XABNORMAL  ++ NAME                               00044100
                LCLC  &XUSEDMONTKNKEY           ++ NAME                 00044200
                LCLC  &XMONTKN    ++ NAME                               00044300
                LCLC  &XMONTKN64  ++ NAME                               00044400
                LCLC  &XMONENVKEYP              ++ VALUE                00044500
                LCLC  &XMONENVKEY               ++ NAME                 00044600
                LCLC  &XMONENV    ++ VALUE                              00044700
                LCLC  &XRETCODE   ++ NAME                               00044800
                LCLC  &XRSNCODE   ++ NAME                               00044900
.*******************************************************************    00045000
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00045100
.*******************************************************************    00045200
                LCLC  &ZXABNORMAL               ++ INPUT NAME           00045300
                LCLC  &ZXUSEDMONTKNKEY          ++ INPUT NAME           00045400
                LCLC  &ZXMONTKN   ++ INPUT NAME                         00045500
                LCLC  &ZXMONTKN64               ++ INPUT NAME           00045600
                LCLC  &ZXMONENVKEYP             ++ INPUT VALUE          00045700
                LCLC  &ZXMONENVKEY              ++ INPUT NAME           00045800
                LCLC  &ZXMONENV   ++ INPUT VALUE                        00045900
                LCLC  &ZXRETCODE  ++ OUTPUT NAME                        00046000
                LCLC  &ZXRSNCODE  ++ OUTPUT NAME                        00046100
.********************************************************************   00046200
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00046300
.********************************************************************   00046400
                ACTR  10000                                             00046500
.*----------------------------------------------------------------***   00046600
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00046700
                AIF   (N'&ABNORMAL LE 1).ZG2A   CK NUM                  00046800
&ZMS            SETC  '"ABNORMAL='                                      00046900
&ZMS            SETC  '&ZMS.&ABNORMAL"'                                 00047000
&ZMS            SETC  '&ZMS "ABNORMAL"'                                 00047100
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00047200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00047300
.ZG2A           ANOP  ,                                                 00047400
.*-------------------------------------------------------------------   00047500
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00047600
&ZXABNORMAL     SETC  'INPUT'     SET IN/OUTPUT                         00047700
&XABNORMAL      SETC  '&ABNORMAL(1)'            SET XVARIABLE           00047800
                AIF   (N'&ABNORMAL GT 1).ZG2B   MULTI                   00047900
&XABNORMAL      SETC  '&ABNORMAL'               SET XVARIABLE           00048000
.ZG2B           AIF   (K'&ABNORMAL(1) GT 0).ZG2C                        00048100
&ZXABNORMAL     SETC  ''          RESET IN/OUTPUT                       00048200
&ZMS            SETC  ' '                                               00048300
&ZMS            SETC  '&ZMS "ABNORMAL" KEY AND ITS'                     00048400
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  00048500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00048600
.ZG2C           ANOP  ,                                                 00048700
.*-------------------------------------------------------------------   00048800
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00048900
                AIF   (K'&ZXABNORMAL LE 0).ZG2R  NOT I/O                00049000
                AIF   ('&XABNORMAL'(1,1) NE '(').ZG2R                   00049100
&ZCGPR          SETC  '&XABNORMAL'(2,K'&XABNORMAL-2)                    00049200
                AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                       00049300
                AIF   (K'&ZCGPR GT 2).ZG2Q                              00049400
                AIF   ('&ZCGPR' EQ '0').ZG2Q                            00049500
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00049600
                AIF   (T'&ZCGPR NE 'N').ZG2Q    INVALID REG NAME        00049700
.ZG2P           ANOP  ,                                                 00049800
                AIF   (T'&ZCGPR NE 'N').ZG2R    NON NUMERIC             00049900
                AIF   ('&ZCGPR' LT '2').ZG2Q                            00050000
                AIF   ('&ZCGPR' LE '12').ZG2R                           00050100
.ZG2Q           ANOP  ,                                                 00050200
&ZMS            SETC  '"ABNORMAL='                                      00050300
&ZMS            SETC  '&ZMS.&ABNORMAL"'                                 00050400
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00050500
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00050600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00050700
.ZG2R           ANOP  ,                                                 00050800
.*----------------------------------------------------------------***   00050900
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00051000
&XUSEDMONTKNKEY                   SETC  ''      INITIALIZE XVARIABLE    00051100
                AIF   (K'&MONTKN LE 0).ZG5C                             00051200
&ZXUSEDMONTKNKEY                  SETC  'INPUT'  SET IN/OUTPUT          00051300
&XUSEDMONTKNKEY                   SETC  'MONTKN'  SET XVARIABLE         00051400
&ZXMONTKN       SETC  'INPUT'     SET IN/OUTPUT                         00051500
&XMONTKN        SETC  '&MONTKN(1)'              SET XVARIABLE PARM      00051600
                AIF   (N'&MONTKN GT 1).ZG5A                             00051700
&XMONTKN        SETC  '&MONTKN'   SET XVARIABLE PARM                    00051800
.ZG5A           AIF   (N'&MONTKN LE 1).ZG5B     CK NUM                  00051900
&ZMS            SETC  '"MONTKN='                                        00052000
&ZMS            SETC  '&ZMS.&MONTKN"'                                   00052100
&ZMS            SETC  '&ZMS "MONTKN"'                                   00052200
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00052300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00052400
.ZG5B           AIF   (K'&XMONTKN GT 0).ZG5C    ONE PARM                00052500
&ZXUSEDMONTKNKEY                  SETC  ''      RESET IN/OUTPUT         00052600
&ZXMONTKN       SETC  ''          RESET IN/OUTPUT                       00052700
&ZMS            SETC  ' '                                               00052800
&ZMS            SETC  '&ZMS "MONTKN" KEY AND ITS'                       00052900
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  00053000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00053100
.ZG5C           ANOP  ,                                                 00053200
.*----------------------------------------------------------------***   00053300
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00053400
                AIF   (K'&MONTKN64 LE 0).ZG6D   NO ME KEY               00053500
                AIF   (N'&MONTKN64 LE 1).ZG6A   CK NUM                  00053600
&ZMS            SETC  '"MONTKN64='                                      00053700
&ZMS            SETC  '&ZMS.&MONTKN64"'                                 00053800
&ZMS            SETC  '&ZMS "MONTKN64"'                                 00053900
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00054000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00054100
.ZG6A           AIF   (K'&XUSEDMONTKNKEY LE 0).ZG6B                     00054200
&ZMS            SETC  '"MONTKN64'                                       00054300
&ZMS            SETC  '&ZMS.=&MONTKN64"'                                00054400
&ZMS            SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'             00054500
&ZMS            SETC  '&ZMS "&XUSEDMONTKNKEY"'                          00054600
                MNOTE 8,' &ZMS KEY.'                                    00054700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00054800
                AGO   .ZG6D                                             00054900
.*                                                                      00055000
.ZG6B           ANOP  ,                                                 00055100
&ZXUSEDMONTKNKEY                  SETC  'INPUT'  SET IN/OUTPUT          00055200
&XUSEDMONTKNKEY                   SETC  'MONTKN64'  SET XVARIABLE       00055300
&ZXMONTKN64     SETC  'INPUT'     SET IN/OUTPUT                         00055400
&XMONTKN64      SETC  '&MONTKN64(1)'            SET XVARIABLE PARM      00055500
                AIF   (N'&MONTKN64 GT 1).ZG6C                           00055600
&XMONTKN64      SETC  '&MONTKN64'               SET XVARIABLE PARM      00055700
.ZG6C           AIF   (K'&XMONTKN64 GT 0).ZG6D  ONE PARM                00055800
&ZXUSEDMONTKNKEY                  SETC  ''      RESET IN/OUTPUT         00055900
&ZXMONTKN64     SETC  ''          RESET IN/OUTPUT                       00056000
&ZMS            SETC  ' '                                               00056100
&ZMS            SETC  '&ZMS "MONTKN64" KEY AND ITS'                     00056200
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  00056300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00056400
.ZG6D           ANOP  ,                                                 00056500
.*------------------------------------------------------------------    00056600
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           00056700
                AIF   (K'&XUSEDMONTKNKEY GT 0).ZG7B                     00056800
&ZXUSEDMONTKNKEY                  SETC  ''      RESET IN/OUTPUT         00056900
&ZXMONTKN       SETC  ''          RESET IN/OUTPUT                       00057000
&XUSEDMONTKNKEY                   SETC  ''      ENSURE NULL             00057100
&XMONTKN        SETC  ''          ENSURE NULL                           00057200
&ZMS            SETC  'ONE OF THE FOLLOWING'                            00057300
&ZMS            SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'               00057400
&ZMS            SETC  '&ZMS REQUIRED:'                                  00057500
&ZMS            SETC  '&ZMS "MONTKN"'           VALID ME KEY            00057600
&ZMS            SETC  '&ZMS OR "MONTKN64".'     VALID ME KEY            00057700
                MNOTE 8,' &ZMS '                                        00057800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00057900
.ZG7B           ANOP  ,                                                 00058000
.*-------------------------------------------------------------------   00058100
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00058200
.ZG5ZY  AIF    ('&XUSEDMONTKNKEY' NE 'MONTKN').ZG6ZY                    00058300
.*-------------------------------------------------------------------   00058400
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00058500
                AIF   (K'&ZXMONTKN LE 0).ZG5R   NOT I/O                 00058600
                AIF   ('&XMONTKN'(1,1) NE '(').ZG5R                     00058700
&ZCGPR          SETC  '&XMONTKN'(2,K'&XMONTKN-2)                        00058800
                AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                       00058900
                AIF   (K'&ZCGPR GT 2).ZG5Q                              00059000
                AIF   ('&ZCGPR' EQ '0').ZG5Q                            00059100
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00059200
                AIF   (T'&ZCGPR NE 'N').ZG5Q    INVALID REG NAME        00059300
.ZG5P           ANOP  ,                                                 00059400
                AIF   (T'&ZCGPR NE 'N').ZG5R    NON NUMERIC             00059500
                AIF   ('&ZCGPR' LT '2').ZG5Q                            00059600
                AIF   ('&ZCGPR' LE '12').ZG5R                           00059700
.ZG5Q           ANOP  ,                                                 00059800
&ZMS            SETC  '"MONTKN='                                        00059900
&ZMS            SETC  '&ZMS.&MONTKN"'                                   00060000
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00060100
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00060200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00060300
.ZG5R           ANOP  ,                                                 00060400
.*-------------------------------------------------------------------   00060500
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00060600
.ZG6ZY  AIF    ('&XUSEDMONTKNKEY' NE 'MONTKN64').ZG7ZY                  00060700
.*-------------------------------------------------------------------   00060800
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00060900
                AIF   (K'&ZXMONTKN64 LE 0).ZG6R  NOT I/O                00061000
                AIF   ('&XMONTKN64'(1,1) NE '(').ZG6R                   00061100
&ZCGPR          SETC  '&XMONTKN64'(2,K'&XMONTKN64-2)                    00061200
                AIF   ('&ZCGPR'(1,1) NE '0').ZG6P                       00061300
                AIF   (K'&ZCGPR GT 2).ZG6Q                              00061400
                AIF   ('&ZCGPR' EQ '0').ZG6Q                            00061500
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00061600
                AIF   (T'&ZCGPR NE 'N').ZG6Q    INVALID REG NAME        00061700
.ZG6P           ANOP  ,                                                 00061800
                AIF   (T'&ZCGPR NE 'N').ZG6R    NON NUMERIC             00061900
                AIF   ('&ZCGPR' LT '2').ZG6Q                            00062000
                AIF   ('&ZCGPR' LE '12').ZG6R                           00062100
.ZG6Q           ANOP  ,                                                 00062200
&ZMS            SETC  '"MONTKN64='                                      00062300
&ZMS            SETC  '&ZMS.&MONTKN64"'                                 00062400
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00062500
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00062600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00062700
.ZG6R           ANOP  ,                                                 00062800
.*-------------------------------------------------------------------   00062900
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            00063000
.ZG7ZY          ANOP ,            END MUTUALLY EXCLUSIVE KEYS           00063100
.*------------------------------------------------------------------    00063200
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00063300
&XMONENVKEYP    SETC  ''          INITIALIZE XVARIABLE                  00063400
.*-------------------------------------------------------------------   00063500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00063600
.ZG10           ANOP  ,                                                 00063700
                AIF   (K'&MONENVKEYP(1) LE 0).ZG10A                     00063800
&ZTLC           SETC 'VALUE'                                            00063900
                AIF   ('&MONENVKEYP(1)' NE '&ZTLC').ZG14                00064000
&XMONENVKEYP    SETC  'VALUE'     SET KEYWORD                           00064100
                AIF   (N'&MONENVKEYP LE 1).ZG10A  CK NUM                00064200
&ZMS            SETC  '"MONENVKEYP='                                    00064300
&ZMS            SETC  '&ZMS.&MONENVKEYP"'                               00064400
&ZMS            SETC  '&ZMS "MONENVKEYP"'                               00064500
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00064600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00064700
.ZG10A          ANOP  ,                                                 00064800
.*----------------------------------------------------------------***   00064900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00065000
                AIF   (N'&MONENVKEY LE 1).ZG12A  CK NUM                 00065100
&ZMS            SETC  '"MONENVKEY='                                     00065200
&ZMS            SETC  '&ZMS.&MONENVKEY"'                                00065300
&ZMS            SETC  '&ZMS "MONENVKEY"'                                00065400
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00065500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00065600
.ZG12A          ANOP  ,                                                 00065700
.*-------------------------------------------------------------------   00065800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00065900
&ZXMONENVKEY    SETC  'INPUT'     SET IN/OUTPUT                         00066000
&XMONENVKEY     SETC  '&MONENVKEY(1)'           SET XVARIABLE           00066100
                AIF   (N'&MONENVKEY GT 1).ZG12B  MULTI                  00066200
&XMONENVKEY     SETC  '&MONENVKEY'              SET XVARIABLE           00066300
.ZG12B          AIF   (K'&MONENVKEY(1) GT 0).ZG12C                      00066400
&ZXMONENVKEY    SETC  ''          RESET IN/OUTPUT                       00066500
&ZMS            SETC  ' '                                               00066600
&ZMS            SETC  '&ZMS "MONENVKEY" KEY AND ITS'                    00066700
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  00066800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00066900
.ZG12C          ANOP  ,                                                 00067000
.*-------------------------------------------------------------------   00067100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00067200
                AIF   (K'&ZXMONENVKEY LE 0).ZG12R  NOT I/O              00067300
                AIF   ('&XMONENVKEY'(1,1) NE '(').ZG12R                 00067400
&ZCGPR          SETC  '&XMONENVKEY'(2,K'&XMONENVKEY-2)                  00067500
                AIF   ('&ZCGPR'(1,1) NE '0').ZG12P                      00067600
                AIF   (K'&ZCGPR GT 2).ZG12Q                             00067700
                AIF   ('&ZCGPR' EQ '0').ZG12Q                           00067800
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00067900
                AIF   (T'&ZCGPR NE 'N').ZG12Q   INVALID REG NAME        00068000
.ZG12P          ANOP  ,                                                 00068100
                AIF   (T'&ZCGPR NE 'N').ZG12R   NON NUMERIC             00068200
                AIF   ('&ZCGPR' LT '2').ZG12Q                           00068300
                AIF   ('&ZCGPR' LE '12').ZG12R                          00068400
.ZG12Q          ANOP  ,                                                 00068500
&ZMS            SETC  '"MONENVKEY='                                     00068600
&ZMS            SETC  '&ZMS.&MONENVKEY"'                                00068700
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00068800
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00068900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00069000
.ZG12R          ANOP  ,                                                 00069100
.*-------------------------------------------------------------------   00069200
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00069300
.ZG14           ANOP  ,                                                 00069400
&ZTLC           SETC 'PSWKEY'                                           00069500
                AIF   ('&MONENVKEYP(1)' NE '&ZTLC').ZG15                00069600
&XMONENVKEYP    SETC  'PSWKEY'    SET KEYWORD                           00069700
                AIF   (N'&MONENVKEYP LE 1).ZG14A  CK NUM                00069800
&ZMS            SETC  '"MONENVKEYP='                                    00069900
&ZMS            SETC  '&ZMS.&MONENVKEYP"'                               00070000
&ZMS            SETC  '&ZMS "MONENVKEYP"'                               00070100
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00070200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00070300
.ZG14A          ANOP  ,                                                 00070400
.*------------------------------------------------------------------    00070500
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00070600
&ZCVAL          SETC ''           CLEAR ERROR KEY ACCUMULATOR           00070700
.ZG14A0         AIF   (K'&MONENVKEY LE 0).ZG14A1  OK                    00070800
&ZCVAL          SETC '&ZCVAL MONENVKEY'         INCORRECT KEY USED      00070900
.ZG14A1         AIF   (K'&ZCVAL LE 0).ZG14A2    OK                      00071000
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)                             00071100
&ZMS            SETC  '"MONENVKEYP'                                     00071200
&ZMS            SETC  '&ZMS.=&MONENVKEYP"'                              00071300
&ZMS            SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'              00071400
                MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'              00071500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00071600
.ZG14A2         ANOP  ,                                                 00071700
.*-------------------------------------------------------------------   00071800
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00071900
.ZG15           ANOP  ,                                                 00072000
&ZTLC           SETC 'UNKNOWN'                                          00072100
                AIF   ('&MONENVKEYP(1)' NE '&ZTLC').ZG16                00072200
&XMONENVKEYP    SETC  'UNKNOWN'   SET KEYWORD                           00072300
                AIF   (N'&MONENVKEYP LE 1).ZG15A  CK NUM                00072400
&ZMS            SETC  '"MONENVKEYP='                                    00072500
&ZMS            SETC  '&ZMS.&MONENVKEYP"'                               00072600
&ZMS            SETC  '&ZMS "MONENVKEYP"'                               00072700
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00072800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00072900
.ZG15A          ANOP  ,                                                 00073000
.*------------------------------------------------------------------    00073100
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00073200
&ZCVAL          SETC ''           CLEAR ERROR KEY ACCUMULATOR           00073300
.ZG15A0         AIF   (K'&MONENVKEY LE 0).ZG15A1  OK                    00073400
&ZCVAL          SETC '&ZCVAL MONENVKEY'         INCORRECT KEY USED      00073500
.ZG15A1         AIF   (K'&ZCVAL LE 0).ZG15A2    OK                      00073600
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)                             00073700
&ZMS            SETC  '"MONENVKEYP'                                     00073800
&ZMS            SETC  '&ZMS.=&MONENVKEYP"'                              00073900
&ZMS            SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'              00074000
                MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'              00074100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00074200
.ZG15A2         ANOP  ,                                                 00074300
.*------------------------------------------------------------------    00074400
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00074500
.ZG16           ANOP  ,                                                 00074600
&ZXMONENVKEYP   SETC  'INPUT'     SET IN/OUTPUT                         00074700
                AIF   (K'&XMONENVKEYP GT 0).ZG16E  VALID ARG            00074800
                AIF   (T'&MONENVKEYP EQ 'O').ZG16D  OMITTED             00074900
&ZASYSLNDX      SETA  0                                                 00075000
.ZG16A          ANOP  ,           POSITIONAL MACRO KEY                  00075100
&ZASYSLNDX      SETA  &ZASYSLNDX+1                                      00075200
                AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG16C                  00075300
&ZTLC           SETC 'MONENVKEYP'                                       00075400
                AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG16A         00075500
.ZG16B          ANOP  ,                                                 00075600
&ZXMONENVKEYP   SETC  ''          RESET IN/OUTPUT                       00075700
&ZMS            SETC  'THE "MONENVKEYP" KEY'                            00075800
&ZMS            SETC  '&ZMS MUST CONTAIN ONE'                           00075900
                MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                  00076000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00076100
                AGO   .ZG16E                                            00076200
.ZG16C          ANOP  ,                                                 00076300
&ZXMONENVKEYP   SETC  ''          RESET IN/OUTPUT                       00076400
&ZMS            SETC  '"MONENVKEYP='                                    00076500
&ZMS            SETC  '&ZMS.&MONENVKEYP"'                               00076600
&ZMS            SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '         00076700
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00076800
&ZMS            SETC  '&ZMS "VALUE",'                                   00076900
&ZMS            SETC  '&ZMS "PSWKEY",'                                  00077000
&ZMS            SETC  '&ZMS OR "UNKNOWN".'                              00077100
                MNOTE 8,' &ZMS '                                        00077200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00077300
                AGO   .ZG16E                                            00077400
.ZG16D          ANOP  ,                                                 00077500
&XMONENVKEYP    SETC  'VALUE'     SET DEFAULT KEYWORD                   00077600
.ZG16E          ANOP  ,                                                 00077700
.*------------------------------------------------------------------    00077800
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00077900
                AIF   (K'&MONENVKEYP(1) GT 0).ZG16F  PARM               00078000
&XMONENVKEYP    SETC  ''          ENSURE NULL KEYWORD                   00078100
&ZXMONENVKEYP   SETC  ''          RESET IN/OUTPUT                       00078200
&ZMS            SETC  'THE'                                             00078300
&ZMS            SETC  '&ZMS "MONENVKEYP" KEY AND ITS'                   00078400
&ZMS            SETC  '&ZMS ARGUMENT ARE REQUIRED.'                     00078500
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00078600
&ZMS            SETC  '&ZMS "VALUE",'                                   00078700
&ZMS            SETC  '&ZMS "PSWKEY",'                                  00078800
&ZMS            SETC  '&ZMS OR "UNKNOWN".'                              00078900
                MNOTE 8,' &ZMS '                                        00079000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00079100
.ZG16F          ANOP  ,                                                 00079200
.*------------------------------------------------------------------    00079300
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00079400
&XMONENV        SETC  ''          INITIALIZE XVARIABLE                  00079500
.*-------------------------------------------------------------------   00079600
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00079700
.ZG19           ANOP  ,                                                 00079800
                AIF   (K'&MONENV(1) LE 0).ZG19A                         00079900
&ZTLC           SETC 'NOSWITCH'                                         00080000
                AIF   ('&MONENV(1)' NE '&ZTLC').ZG20                    00080100
&XMONENV        SETC  'NOSWITCH'  SET KEYWORD                           00080200
                AIF   (N'&MONENV LE 1).ZG19A    CK NUM                  00080300
&ZMS            SETC  '"MONENV='                                        00080400
&ZMS            SETC  '&ZMS.&MONENV"'                                   00080500
&ZMS            SETC  '&ZMS "MONENV"'                                   00080600
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00080700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00080800
.ZG19A          ANOP  ,                                                 00080900
.*-------------------------------------------------------------------   00081000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00081100
.ZG20           ANOP  ,                                                 00081200
&ZTLC           SETC 'SECONDARY'                                        00081300
                AIF   ('&MONENV(1)' NE '&ZTLC').ZG21                    00081400
&XMONENV        SETC  'SECONDARY'               SET KEYWORD             00081500
                AIF   (N'&MONENV LE 1).ZG20A    CK NUM                  00081600
&ZMS            SETC  '"MONENV='                                        00081700
&ZMS            SETC  '&ZMS.&MONENV"'                                   00081800
&ZMS            SETC  '&ZMS "MONENV"'                                   00081900
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00082000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00082100
.ZG20A          ANOP  ,                                                 00082200
.*------------------------------------------------------------------    00082300
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00082400
.ZG21           ANOP  ,                                                 00082500
&ZXMONENV       SETC  'INPUT'     SET IN/OUTPUT                         00082600
                AIF   (K'&XMONENV GT 0).ZG21E   VALID ARG               00082700
                AIF   (T'&MONENV EQ 'O').ZG21D  OMITTED                 00082800
&ZASYSLNDX      SETA  0                                                 00082900
.ZG21A          ANOP  ,           POSITIONAL MACRO KEY                  00083000
&ZASYSLNDX      SETA  &ZASYSLNDX+1                                      00083100
                AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG21C                  00083200
&ZTLC           SETC 'MONENV'                                           00083300
                AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG21A         00083400
.ZG21B          ANOP  ,                                                 00083500
&ZXMONENV       SETC  ''          RESET IN/OUTPUT                       00083600
&ZMS            SETC  'THE "MONENV" KEY'                                00083700
&ZMS            SETC  '&ZMS MUST CONTAIN ONE'                           00083800
                MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                  00083900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00084000
                AGO   .ZG21E                                            00084100
.ZG21C          ANOP  ,                                                 00084200
&ZXMONENV       SETC  ''          RESET IN/OUTPUT                       00084300
&ZMS            SETC  '"MONENV='                                        00084400
&ZMS            SETC  '&ZMS.&MONENV"'                                   00084500
&ZMS            SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '         00084600
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00084700
&ZMS            SETC  '&ZMS "NOSWITCH"'                                 00084800
&ZMS            SETC  '&ZMS OR "SECONDARY".'                            00084900
                MNOTE 8,' &ZMS '                                        00085000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00085100
                AGO   .ZG21E                                            00085200
.ZG21D          ANOP  ,                                                 00085300
&XMONENV        SETC  'NOSWITCH'  SET DEFAULT KEYWORD                   00085400
.ZG21E          ANOP  ,                                                 00085500
.*------------------------------------------------------------------    00085600
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00085700
                AIF   (K'&MONENV(1) GT 0).ZG21F  PARM                   00085800
&XMONENV        SETC  ''          ENSURE NULL KEYWORD                   00085900
&ZXMONENV       SETC  ''          RESET IN/OUTPUT                       00086000
&ZMS            SETC  'THE'                                             00086100
&ZMS            SETC  '&ZMS "MONENV" KEY AND ITS'                       00086200
&ZMS            SETC  '&ZMS ARGUMENT ARE REQUIRED.'                     00086300
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00086400
&ZMS            SETC  '&ZMS "NOSWITCH"'                                 00086500
&ZMS            SETC  '&ZMS OR "SECONDARY".'                            00086600
                MNOTE 8,' &ZMS '                                        00086700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00086800
.ZG21F          ANOP  ,                                                 00086900
.*----------------------------------------------------------------***   00087000
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00087100
                AIF   (N'&RETCODE LE 1).ZG23A   CK NUM                  00087200
&ZMS            SETC  '"RETCODE='                                       00087300
&ZMS            SETC  '&ZMS.&RETCODE"'                                  00087400
&ZMS            SETC  '&ZMS "RETCODE"'                                  00087500
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00087600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00087700
.ZG23A          ANOP  ,                                                 00087800
.*-------------------------------------------------------------------   00087900
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00088000
                AIF   (K'&RETCODE(1) LE 0).ZG23C  NO PARM               00088100
&ZXRETCODE      SETC  'OUTPUT'    SET OUTPUT                            00088200
&XRETCODE       SETC  '&RETCODE(1)'             SET XVARIABLE           00088300
                AIF   (N'&RETCODE GT 1).ZG23C                           00088400
&XRETCODE       SETC  '&RETCODE'  SET XVARIABLE                         00088500
.ZG23C          ANOP  ,                                                 00088600
.*-------------------------------------------------------------------   00088700
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00088800
                AIF   (K'&ZXRETCODE LE 0).ZG23R  NOT I/O                00088900
                AIF   ('&XRETCODE'(1,1) NE '(').ZG23R                   00089000
&ZCGPR          SETC  '&XRETCODE'(2,K'&XRETCODE-2)                      00089100
                AIF   ('&ZCGPR'(1,1) NE '0').ZG23P                      00089200
                AIF   (K'&ZCGPR GT 2).ZG23Q                             00089300
                AIF   ('&ZCGPR' EQ '0').ZG23Q                           00089400
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00089500
                AIF   (T'&ZCGPR NE 'N').ZG23Q   INVALID REG NAME        00089600
.ZG23P          ANOP  ,                                                 00089700
                AIF   (T'&ZCGPR NE 'N').ZG23R   NON NUMERIC             00089800
                AIF   ('&ZCGPR' EQ '15').ZG23R                          00089900
                AIF   ('&ZCGPR' LT '2').ZG23Q                           00090000
                AIF   ('&ZCGPR' LE '12').ZG23R                          00090100
.ZG23Q          ANOP  ,                                                 00090200
&ZMS            SETC  '"RETCODE='                                       00090300
&ZMS            SETC  '&ZMS.&RETCODE"'                                  00090400
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00090500
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12) OR (15).'          00090600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00090700
.ZG23R          ANOP  ,                                                 00090800
.*----------------------------------------------------------------***   00090900
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00091000
                AIF   (N'&RSNCODE LE 1).ZG26A   CK NUM                  00091100
&ZMS            SETC  '"RSNCODE='                                       00091200
&ZMS            SETC  '&ZMS.&RSNCODE"'                                  00091300
&ZMS            SETC  '&ZMS "RSNCODE"'                                  00091400
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00091500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00091600
.ZG26A          ANOP  ,                                                 00091700
.*-------------------------------------------------------------------   00091800
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00091900
                AIF   (K'&RSNCODE(1) LE 0).ZG26C  NO PARM               00092000
&ZXRSNCODE      SETC  'OUTPUT'    SET OUTPUT                            00092100
&XRSNCODE       SETC  '&RSNCODE(1)'             SET XVARIABLE           00092200
                AIF   (N'&RSNCODE GT 1).ZG26C                           00092300
&XRSNCODE       SETC  '&RSNCODE'  SET XVARIABLE                         00092400
.ZG26C          ANOP  ,                                                 00092500
.*-------------------------------------------------------------------   00092600
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00092700
                AIF   (K'&ZXRSNCODE LE 0).ZG26R  NOT I/O                00092800
                AIF   ('&XRSNCODE'(1,1) NE '(').ZG26R                   00092900
&ZCGPR          SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                      00093000
                AIF   ('&ZCGPR'(1,1) NE '0').ZG26P                      00093100
                AIF   (K'&ZCGPR GT 2).ZG26Q                             00093200
                AIF   ('&ZCGPR' EQ '0').ZG26R                           00093300
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00093400
                AIF   (T'&ZCGPR NE 'N').ZG26Q   INVALID REG NAME        00093500
.ZG26P          ANOP  ,                                                 00093600
                AIF   (T'&ZCGPR NE 'N').ZG26R   NON NUMERIC             00093700
                AIF   ('&ZCGPR' EQ '0').ZG26R                           00093800
                AIF   ('&ZCGPR' LT '2').ZG26Q                           00093900
                AIF   ('&ZCGPR' LE '12').ZG26R                          00094000
.ZG26Q          ANOP  ,                                                 00094100
&ZMS            SETC  '"RSNCODE='                                       00094200
&ZMS            SETC  '&ZMS.&RSNCODE"'                                  00094300
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00094400
                MNOTE 8,' &ZMS IN THE RANGE (0) OR (2)-(12).'           00094500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00094600
.ZG26R          ANOP  ,                                                 00094700
.******************************************************************     00094800
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00094900
.******************************************************************     00095000
                ACTR  10000                                             00095100
.*----------------------------------------------------------------***   00095200
.***AH.P02 EXTRA POSITIONALS                                            00095300
                AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS              00095400
                AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL              00095500
                AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL          00095600
                AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL           00095700
.ZGLISTX1       ANOP  ,                                                 00095800
&ZCVAL          SETC  ''          ERROR FIELD                           00095900
&ZAWRK          SETA  0           POSITIONAL NUMBER                     00096000
.ZGLIST2        ANOP  ,                                                 00096100
&ZAWRK          SETA  &ZAWRK+1    NEXT POSITIONAL                       00096200
                AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE              00096300
&ZCVAL          SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                   00096400
                AGO   .ZGLIST2                                          00096500
.*                                                                      00096600
.ZGLIST3        ANOP  ,                                                 00096700
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)     STRIP COMMA             00096800
&ZMS            SETC  'POSITIONAL ARGUMENT(S),'                         00096900
&ZMS            SETC  '&ZMS "&ZCVAL"'                                   00097000
&ZMS            SETC  '&ZMS CANNOT BE USED.'                            00097100
&ZMS            SETC  '&ZMS NO POSITIONAL ARGUMENTS'                    00097200
                MNOTE 8,' &ZMS ARE ALLOWED.'                            00097300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00097400
.ZGLISTX        ANOP  ,                                                 00097500
&ZASYSLNDX      SETA  0                                                 00097600
.*******************************************************************    00097700
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00097800
.*******************************************************************    00097900
                AIF   (&ZMACRET NE 0).ZLX2      ERROR DETECTED          00098000
.*******************************************************************    00098100
.***AE.01  START OF IWM4MABN MACRO CODE                                 00098200
.*******************************************************************    00098300
                LCLC  &M0M0001                 NAME                     00098400
&M0M0001        SETC  '&XLABEL'                SET NAME                 00098500
                AIF   (K'&XLABEL NE 0).XLAB2                            00098600
&M0M0001        SETC  'M00M&SYSNDX'            DEFAULT NAME             00098700
.*                                                                      00098800
.XLAB2          ANOP  ,                                                 00098900
&M0M0001 DS    0H                             IWM4MABN-0                00099000
.*******************************************************************    00099100
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00099200
.*******************************************************************    00099300
              PUSH  PRINT                                               00099400
                AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON        00099500
                PRINT OFF         ++ PR01                               00099600
                AGO   .ZPRNTXX                                          00099700
.ZPRINTX        PRINT ON                                                00099800
.ZPRNTXX        ANOP  ,                                                 00099900
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00100000
         GBLC  &SYSAM64                                                 00100100
         GBLA  &SYSALVL                                                 00100200
         LCLC  &T1                                                      00100300
.*--------------------------------------------------------------------- 00100400
.* Fetch Monitoring Token                                               00100500
.*--------------------------------------------------------------------- 00100600
         AIF ('&MONTKN' EQ '').MONTKNR2                                 00100700
&T1      SETC  '&MONTKN'                                                00100800
         AIF   ('&MONTKN'(1,1) NE '(').MONTKNR1                         00100900
&T1      SETC  '&MONTKN'(2,K'&MONTKN-2)                                 00101000
&T1      SETC  '0(&T1.)'                                                00101100
.MONTKNR1  ANOP                                                         00101200
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00101300
         LLGT  14,&T1                  FETCH 31BIT MONITORING TOKEN     00101400
         LTGR  14,14                   MONITORING TOKEN PROVIDED?       00101500
         AGO .MONTKNR4                                                  00101600
.MONTKNR2  ANOP                                                         00101700
&T1      SETC  '&MONTKN64'                                              00101800
         AIF   ('&MONTKN64'(1,1) NE '(').MONTKNR3                       00101900
&T1      SETC  '&MONTKN64'(2,K'&MONTKN64-2)                             00102000
&T1      SETC  '0(&T1.)'                                                00102100
.MONTKNR3  ANOP                                                         00102200
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00102300
         AIF   ('&SYSAM64' EQ 'YES').AMODE64                            00102400
         SAM64                         SET AMODE 64                     00102500
.AMODE64 ANOP                                                           00102600
         LTG   14,&T1                  FETCH 64BIT MONITORING TOKEN     00102700
.MONTKNR4  ANOP                                                         00102800
* Check Monitoring token is not 0                                       00102900
         JNZ   MONENV&SYSNDX           BRANCH MON ENV IS PRESENT   @P0C 00103000
         LA    0,IWMRSNCODENOMONENV    SET REASON CODE = NO MON ENV     00103100
         LA    15,IWMRETCODEWARNING    SET WARNING RETURN CODE          00103200
         J     END&SYSNDX              BRANCH TO END LABEL         @P0C 00103300
MONENV&SYSNDX DS    0H                 BRANCH LABEL FOR MON ENV PRESENT 00103400
&T1      SETC  '&ABNORMAL'                                              00103500
         AIF   ('&ABNORMAL'(1,1) NE '(').ABNORMRS                       00103600
&T1      SETC  '&ABNORMAL'(2,K'&ABNORMAL-2)                             00103700
&T1      SETC  '0(&T1.)'                                                00103800
.ABNORMRS  ANOP                                                         00103900
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00104000
         L     15,&T1                      SET ABNORMAL FLAG MASK       00104100
.*                                                                      00104200
.*                                                                      00104300
.*                                                                      00104400
          LCLC  &KEYVALUE                                               00104500
&KEYVALUE SETC  'NO'                                                    00104600
.*                                                                      00104700
.*                                                                      00104800
.*                                                                      00104900
.*                                                                      00105000
.*                                                                      00105100
         LCLC  &SACTO1                                                  00105200
         LCLC  &SACTO2                                                  00105300
         LCLC  &SACBACK1                                                00105400
         LCLC  &SACBACK2                                                00105500
&SACTO1  SETC  'DS'                                                     00105600
&SACTO2  SETC  '0H'                                                     00105700
&SACBACK1 SETC  'DS'                                                    00105800
&SACBACK2 SETC  '0H'                                                    00105900
.*                                                                      00106000
         AIF   ('&XMONENV' NE 'NOSWITCH').ENDNOSWITCH1                  00106100
.*                                                                      00106200
.*                                                                      00106300
.*   THE FOLLOWING CODE HANDLES                                         00106400
.*   ===========================>    MONENV(NOSWITCH)                   00106500
.*                                                                      00106600
.*                                                                      00106700
         LLILF 0,PB_ID_CONST                                       @P0A 00106800
         CL    0,PB_ID-PB(,14)                                     @P0C 00106900
         AGO   .COMMONSFVER1                                            00107000
.*                                                                      00107100
.ENDNOSWITCH1   ANOP                                                    00107200
.*                                                                      00107300
.*   THE FOLLOWING CODE HANDLES                                         00107400
.*   ===========================>    MONENV(SECONDARY)                  00107500
.*                                                                      00107600
&SACTO1  SETC  'SAC'                                                    00107700
&SACTO2  SETC  '256'                                                    00107800
&SACBACK1 SETC  'SAC'                                                   00107900
&SACBACK2 SETC  '0'                                                     00108000
.*                                                                      00108100
.*       THE PB ACRONYM, REFERENCED AS A LITERAL, RESIDES IN CURRENT    00108200
.*         PRIMARY, AND MUST BE LOADED BEFORE CHANGING PSWKEY (SINCE    00108300
.*         THE MODULE MAY BE IN FETCH-PROTECTED STORAGE) AND BEFORE     00108400
.*         CHANGING ASC MODES.                                          00108500
.*                                                                      00108600
.*                       LOGIC:                                         00108700
.*       REG 0 HAS PB_ID (ALL FLOWS FOR SECONDARY)                      00108800
.*       MONENVKEYP(VALUE) ==> REG 1 HAS KEY NEEDED TO UPDATE MONENV    00108900
.*                             SET UP AR14 FOR MONENV PB                00109000
.*                             SAC TO AR                                00109100
.*                             SET REG 1 TO DESIRED VALUE               00109200
.*                                 USING INDEX REGISTER NOTATION        00109300
.*                                                                      00109400
.*       MONENVKEYP(PSWKEY!UNKNOWN) ==> SET REG 1 TO DESIRED VALUE      00109500
.*                             SAC TO SECONDARY                         00109600
.*                                                                      00109700
         LLILF 0,PB_ID_CONST                                       @P0C 00109800
         AIF   ('&MONENVKEYP' NE 'VALUE').COMSECSFVER1 BRANCH IF ^VALUE 00109900
         LA    1,1                                                      00110000
         SAR   14,1                    SET AR15 FOR SECONDARY           00110100
.*                                                                      00110200
.*       MUST ANTICIPATE NEED TO CHANGE PSW KEY,KEPT IN CURRENT PRIMARY 00110300
.*                                                                      00110400
&T1      SETC  '&MONENVKEY'                                             00110500
         AIF   ('&MONENVKEY'(1,1) NE '(').MONENVKEY1                    00110600
&T1      SETC  '&MONENVKEY'(2,K'&MONENVKEY-2)                           00110700
&T1      SETC  '0(&T1.)'                                                00110800
.MONENVKEY1 ANOP                                                        00110900
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00111000
         IC    1,&T1                                                    00111100
&SACTO1  SETC  'SAC'                                                    00111200
&SACTO2  SETC  '512'                                                    00111300
&KEYVALUE SETC  'YES'                                                   00111400
.*                                                                      00111500
         AGO  .COMSECSFVER1                                             00111600
.COMSECSFVER1 ANOP                                                      00111700
.* COMMON CODE FOR MONENV(SECONDARY)                                    00111800
.*                                                                      00111900
         &SACTO1 &SACTO2                                                00112000
&SACTO1  SETC  'DS'                                                     00112100
&SACTO2  SETC  '0H'                                                     00112200
         CL    0,PB_ID-PB(,14)                                     @P0C 00112300
.*                                                                      00112400
.COMMONSFVER1 ANOP                                                      00112500
.*             COMMON CODE FOR SHORT-FORM VERIFICATION                  00112600
         JE    MONENVOK&SYSNDX         BRANCH WHEN MONENV PASSES   @P0C 00112700
         &SACBACK1 &SACBACK2                                            00112800
         LA    0,IWMRSNCODEBADMONENV   SET REASON CODE = BAD MON ENV    00112900
         LA    15,IWMRETCODEINVOCERROR SET INVOCATION ERROR RETURN CODE 00113000
         J     END&SYSNDX              BRANCH TO END LABEL         @P0C 00113100
MONENVOK&SYSNDX DS    0H               BRANCH LABEL FOR MON ENV OK      00113200
.*                                                                      00113300
.*     THE CODE TO SET THE PSW KEY MUST TOLERATE RUNNING IN AR MODE.    00113400
.*     FOR THIS REASON, THE ADDRESS OF THE BYTE CONTAINING THE KEY      00113500
.*        HAS BEEN SAVED IN GPR01 WHEN NECESSARY (I.E. KEYVALUE=YES)    00113600
.*                                                                      00113700
         AIF   ('&MONENVKEYP' EQ 'PSWKEY').PSWKEY   BRANCH IF PSWKEY OK 00113800
         LR    0,2                 SAVE GPR 2 BEFORE USING IPK          00113900
         IPK                       SAVE PSWKEY IN BITS 24-27 OF GPR2    00114000
         AIF   ('&KEYVALUE' EQ 'YES').SPKAINST      BRANCH IF KEY IN R1 00114100
         AIF   ('&MONENVKEYP' EQ 'VALUE').VALUE     BRANCH IF VALUE     00114200
         SPKA  0(0)                SET THE PSW KEY TO 0                 00114300
         AGO   .PSWKEY                                                  00114400
.*                                                                      00114500
.VALUE   ANOP                                                           00114600
&T1      SETC  '&MONENVKEY'                                             00114700
         AIF   ('&MONENVKEY'(1,1) NE '(').MONENVKEY                     00114800
&T1      SETC  '&MONENVKEY'(2,K'&MONENVKEY-2)                           00114900
&T1      SETC  '0(&T1.)'                                                00115000
.MONENVKEY ANOP                                                         00115100
.* &T1 IS NOW A VALID BASE-DISPLACEMENT EXPRESSION                      00115200
         IC    1,&T1                                                    00115300
.SPKAINST ANOP                                                          00115400
         SPKA  0(1)               SET THE PSW KEY FROM GPR 1 BITS 24-27 00115500
.*                                                                      00115600
.PSWKEY ANOP                                                            00115700
.*                                                                      00115800
         &SACTO1 &SACTO2                                                00115900
         USING PB,14                                                    00116000
         O    15,PB_ABNORMAL_FLAGS       OR IN NEW FLAG                 00116100
         ST   15,PB_ABNORMAL_FLAGS       STORE NEW MASK                 00116200
         DROP 14                                                        00116300
         &SACBACK1 &SACBACK2                                            00116400
.*                                                                      00116500
         AIF   ('&MONENVKEYP' EQ 'PSWKEY').PSWKEY2 BRANCH IF PSWKEY OK  00116600
         SPKA  0(2)                    RESTORE PSWKEY FROM GPR 2        00116700
         LR    2,0                     RESTORE GPR 2 TO ORIGINAL VALUE  00116800
.*                                                                      00116900
.PSWKEY2       ANOP                                                     00117000
         LA    15,IWMRETCODEOK SET RETURN CODE = OK                     00117100
END&SYSNDX DS    0H                    END LABEL                        00117200
         AIF   ('&MONTKN64' EQ '' OR '&SYSAM64' EQ 'YES').AMODE31       00117300
         SAM31                         SET AMODE 31                     00117400
.AMODE31 ANOP                                                           00117500
.*******************************************************************    00117600
.***        RETURN CODE PROCESSING                                      00117700
.*******************************************************************    00117800
         AIF   (N'&RETCODE LE 0).IWM4MABN_ENDRC_EXP                     00117900
         AIF   ('&XRETCODE'(1,1) EQ '(').IWM4MABN_RC_REG                00118000
         AIF   ('&XRETCODE' EQ 'GPR15').IWM4MABN_ENDRC_EXP              00118100
         AIF   ('&XRETCODE' EQ 'REG15').IWM4MABN_ENDRC_EXP              00118200
         AIF   ('&XRETCODE' EQ 'R15').IWM4MABN_ENDRC_EXP                00118300
         AIF   ('&XRETCODE' EQ '15').IWM4MABN_ENDRC_EXP                 00118400
         ST    15,&XRETCODE                                             00118500
         AGO   .IWM4MABN_ENDRC_EXP                                      00118600
.*                                                                      00118700
.IWM4MABN_RC_REG      ANOP  ,                                           00118800
&T1      SETC  '&XRETCODE'(2,K'&XRETCODE-2)                             00118900
         AIF   ('&T1' EQ 'GPR15').IWM4MABN_ENDRC_EXP                    00119000
         AIF   ('&T1' EQ 'REG15').IWM4MABN_ENDRC_EXP                    00119100
         AIF   ('&T1' EQ 'R15').IWM4MABN_ENDRC_EXP                      00119200
         AIF   ('&T1' EQ '15').IWM4MABN_ENDRC_EXP                       00119300
         LR    &T1,15                                                   00119400
.IWM4MABN_ENDRC_EXP   ANOP  ,                                           00119500
.*******************************************************************    00119600
.***        REASON CODE PROCESSING                                      00119700
.*******************************************************************    00119800
         AIF   (N'&RSNCODE LE 0).IWM4MABN_ENDRSN_EXP                    00119900
         AIF   ('&XRSNCODE'(1,1) EQ '(').IWM4MABN_RSN_REG               00120000
         AIF   ('&XRSNCODE' EQ 'GPR0').IWM4MABN_ENDRSN_EXP              00120100
         AIF   ('&XRSNCODE' EQ 'GPR00').IWM4MABN_ENDRSN_EXP             00120200
         AIF   ('&XRSNCODE' EQ 'REG0').IWM4MABN_ENDRSN_EXP              00120300
         AIF   ('&XRSNCODE' EQ 'REG00').IWM4MABN_ENDRSN_EXP             00120400
         AIF   ('&XRSNCODE' EQ 'R0').IWM4MABN_ENDRSN_EXP                00120500
         AIF   ('&XRSNCODE' EQ '0').IWM4MABN_ENDRSN_EXP                 00120600
         AIF   ('&XRSNCODE' EQ '00').IWM4MABN_ENDRSN_EXP                00120700
         ST    0,&XRSNCODE                                              00120800
         AGO   .IWM4MABN_ENDRSN_EXP                                     00120900
.*                                                                      00121000
.IWM4MABN_RSN_REG     ANOP  ,                                           00121100
&T1      SETC '&XRSNCODE'(2,K'&XRSNCODE-2)                              00121200
         AIF  ('&ZCGPR' EQ 'GPR0').IWM4MABN_ENDRSN_EXP                  00121300
         AIF  ('&ZCGPR' EQ 'GPR00').IWM4MABN_ENDRSN_EXP                 00121400
         AIF  ('&ZCGPR' EQ 'REG0').IWM4MABN_ENDRSN_EXP                  00121500
         AIF  ('&ZCGPR' EQ 'REG00').IWM4MABN_ENDRSN_EXP                 00121600
         AIF  ('&ZCGPR' EQ 'R0').IWM4MABN_ENDRSN_EXP                    00121700
         AIF  ('&ZCGPR' EQ '0').IWM4MABN_ENDRSN_EXP                     00121800
         AIF  ('&ZCGPR' EQ '00').IWM4MABN_ENDRSN_EXP                    00121900
         LR   &T1,0                                                     00122000
.IWM4MABN_ENDRSN_EXP  ANOP  ,                                           00122100
.*******************************************************************    00122200
&ZIWM4MABN            SETC  'YES'          SET IWM4MABN USED            00122300
         POP   PRINT                                                    00122400
*                                            IWM4MABN END               00122500
         SPACE 1                                                        00122600
         MEXIT                                                          00122700
.NOCODENEEDED ANOP                                                      00122800
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00122900
.********************************************************************   00123000
.***AL.A01  INTERNAL ARRAY TO PRODUCE FORMATTED CODE                    00123100
.********************************************************************   00123200
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00123300
                      LCLA  &ZOPN1         INVOCATION INDEX             00123400
                      LCLC  &ZOPL(4095)    LABEL                        00123500
                      LCLC  &ZOPO(4095)    OPERATION                    00123600
                      LCLC  &ZOPV(4095)    VALUE                        00123700
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00123800
.*                                                                      00123900
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00124000
.*******************************************************************    00124100
.***AO.X02  RETURN CODE PROCESSING                                      00124200
.*******************************************************************    00124300
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00124400
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00124500
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00124600
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00124700
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00124800
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00124900
&ZOPN                 SETA  &ZOPN+1                                     00125000
&ZOPL(&ZOPN)          SETC  ' '                                         00125100
&ZOPO(&ZOPN)          SETC  'ST'                                        00125200
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00125300
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00125400
                      AGO   .ZMRETX                                     00125500
.*                                                                      00125600
.ZMRET2               ANOP  ,                                           00125700
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00125800
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00125900
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00126000
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00126100
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00126200
&ZOPN                 SETA  &ZOPN+1                                     00126300
&ZOPL(&ZOPN)          SETC  ' '                                         00126400
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00126500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00126600
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00126700
.ZMRETX               ANOP  ,                                           00126800
.*******************************************************************    00126900
.***AO.X03  REASON CODE PROCESSING                                      00127000
.*******************************************************************    00127100
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00127200
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00127300
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00127400
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00127500
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00127600
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00127700
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00127800
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00127900
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00128000
&ZOPN                 SETA  &ZOPN+1                                     00128100
&ZOPL(&ZOPN)          SETC  ' '                                         00128200
&ZOPO(&ZOPN)          SETC  'ST'                                        00128300
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00128400
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00128500
                      AGO   .ZMRSNX                                     00128600
.*                                                                      00128700
.ZMRSN2               ANOP  ,                                           00128800
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00128900
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00129000
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00129100
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00129200
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00129300
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00129400
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00129500
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00129600
&ZOPN                 SETA  &ZOPN+1                                     00129700
&ZOPL(&ZOPN)          SETC  ' '                                         00129800
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00129900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00130000
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00130100
.ZMRSNX               ANOP  ,                                           00130200
.*******************************************************************    00130300
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00130400
.*******************************************************************    00130500
                      ACTR  10000                                       00130600
.*                                                                      00130700
                      LCLA  &ZLC           COLUMN POSITION              00130800
                      LCLA  &ZOPX          LIST TABLE INDEX             00130900
                      LCLC  &ZLL           LABEL                        00131000
                      LCLC  &ZLOP          OPERATION                    00131100
                      LCLC  &ZLV           VALUE                        00131200
                      LCLC  &ZLD           DESCRIPTION                  00131300
.*                                                                      00131400
&ZOPX                 SETA  1                                           00131500
.*******************************************************************    00131600
.***AP.X01  FORMAT GENERATED CODE                                       00131700
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00131800
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00131900
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00132000
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00132100
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00132200
                      AIF   (K'&ZLD LE 0).ZL51                          00132300
&ZLC                  SETA  35             COMMENT COLUMN               00132400
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00132500
&ZLC                  SETA  33             COMMENT COLUMN               00132600
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00132700
&ZLV                  SETC  '&ZLV'.' '                                  00132800
                      AGO   .ZL31                                       00132900
.*                                                                      00133000
.ZL41                 ANOP  ,                                           00133100
&ZLV                  SETC  '&ZLV'.' '                                  00133200
.ZL51                 ANOP  ,                                           00133300
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00133400
.*                                                                      00133500
&ZLL     &ZLOP &ZLV                                                     00133600
.*                                                                      00133700
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00133800
                      AGO   .ZL21          CONTINUE LOOPING             00133900
.*                                                                      00134000
.ZLX1                 ANOP  ,                                           00134100
.*******************************************************************    00134200
.***AP.X02  END OF IWM4MABN MACRO                                       00134300
&ZIWM4MABN            SETC  'YES'          SET IWM4MABN USED            00134400
         POP   PRINT                                                    00134500
*                                            IWM4MABN-0                 00134600
         SPACE 1                                                        00134700
.ZLX2                 ANOP  ,                                           00134800
         MEND                                                           00134900
**********************************************************************/ 00135000
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00135100
*%IWM4MABN: MACRO KEYS(ABNORMAL,MONTKN,MONTKN64,MONENVKEYP,MONENVKEY,   00135200
*                 MONENV,RETCODE,RSNCODE);                              00135300
*  ANS('?'!!MACLABEL!!' '!!'IWM4MABP '!!MACLIST!!                       00135400
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              00135500
*%END IWM4MABN;                                                         00135600
