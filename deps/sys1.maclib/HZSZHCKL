*                                                                       00001000
* %DCL HZSZHCKL_INCLUDED CHAR EXT;                                      00002000
* %DEACTIVATE HZSZHCKL_INCLUDED;                                        00003000
* %IF HZSZHCKL_INCLUDED = '' %THEN                                      00004000
* %DO;                                                                  00005000
*/* Macro made bi-lingual on 16179. CBGEN compile date 15295         */ 00006000
*% /*                                                                   00007000
         MACRO                                                          00008000
         HZSZHCKL &DSECT=YES,&LIST=YES,&TITLE=YES,&HCKLOG=YES,         *00009000
               &HCKLOGE=COND                                            00010000
                      GBLC  &HZSZHCKL_INCLUDED                          00011000
                      GBLC  &ZCBPRINT                                   00012000
&HZSZHCKL_INCLUDED    SETC  'YES'                                       00013000
                      AIF   ('&LIST' EQ 'NONE').P0                      00014000
                      AIF   ('&TITLE' EQ 'NO').P5                       00015000
 TITLE                'HZSZHCKL  - Log block                           *00016000
                          '                                             00017000
.P5                   ANOP                                              00018000
**/ HZSZHCKL_1:;                                                        00019000
*/* START OF SPECIFICATIONS ******************************************* 00020000
*                                                                       00021000
*01* PROPRIETARY STATEMENT =                                            00022000
*                                                                       00023000
*    Licensed Materials - Property of IBM                               00024000
*    5650-ZOS                                                           00025000
*    COPYRIGHT IBM CORP. 2005,2015                                      00026000
*                                                                       00027000
*01* STATUS = HBB77A0                                                   00028000
*                                                                       00029000
*01* END OF PROPRIETARY STATEMENT                                       00030000
*                                                                       00031000
*01* EXTERNAL CLASSIFICATION: GUPI                                      00032000
*01* END OF EXTERNAL CLASSIFICATION:                                    00033000
*                                                                       00034000
*01* DESCRIPTIVE NAME:  Log block                                       00035000
*02*  ACRONYM:   n/a                                                    00036000
*                                                                       00037000
*01* MACRO NAME:  HZSZHCKL                                              00038000
*                                                                       00039000
*01* DSECT NAME:                                                        00040000
*     HCKLOG                                                            00041000
*     HCKLOGE                                                           00042000
*                                                                       00043000
*01* COMPONENT:  IBM Health Checker for z/OS (SCHZS)                    00044000
*                                                                       00045000
*01* EYE-CATCHER:  HCKL                                                 00046000
*02*   OFFSET:   0                                                      00047000
*02*   LENGTH:   4                                                      00048000
*                                                                       00049000
*01* STORAGE ATTRIBUTES:                                                00050000
*02*  SUBPOOL: n/a                                                      00051000
*02*  KEY:     8                                                        00052000
*02*  RESIDENCY:                                                        00053000
*                                                                       00054000
*01* SIZE:                                                              00055000
*        HCKLOG  -- X'0118' bytes                                       00056000
*        HCKLOGE -- X'0020' bytes                                       00057000
*                                                                       00058000
*01* CREATED BY:                                                        00059000
*     Health Checker check initialization,                              00060000
*     or as mapped into the answer area for the output of               00061000
*     the HZSQUERY service.                                             00062000
*                                                                       00063000
*01* POINTED TO BY:                                                     00064000
*                                                                       00065000
*    Internally (system use only):                                      00066000
*     Pqe_MB_Stream_Ptr (HZSPQEI)                                       00067000
*                                                                       00068000
*     HCKLOGs are chained via HCKLOG_NP (next/previous).                00069000
*                                                                       00070000
*    Externally:                                                        00071000
*     HzsquaaHHcklAddr (HZSQUAA) in the output answer area              00072000
*     of service HZSQUERY REQUEST=MSGBUFF.                              00073000
*     The returned HzsquaaHNumHckl number of log blocks are             00074000
*     laid out consecutively in the answer area and a next              00075000
*     log block can be addressed by adding                              00076000
*     Hcklog_BufLen to the address of a current log block.              00077000
*                                                                       00078000
*01* SERIALIZATION:                                                     00079000
*     None required                                                     00080000
*                                                                       00081000
*01* FUNCTION:                                                          00082000
*02* Maps the IBM Health Checker for z/OS log block                     00083000
*                                                                       00084000
*01* METHOD OF ACCESS:                                                  00085000
*                                                                       00086000
*02*   PL/X:                                                            00087000
*                                                                       00088000
*        ?ASAADMAC NAME(HCKLOG)                                         00089000
*                                                                       00090000
*        By default, the HCKLOG is based on Hcklog_Ptr. If other        00091000
*        basing is desired, use %HCLBASED='xxxxx'.                      00092000
*                                                                       00093000
*02*   ASM:                                                             00094000
*                                                                       00095000
*        None                                                           00096000
*                                                                       00097000
*02* Maps the data for a check routine called by the                    00098000
*    IBM Health Checker for z/OS.                                       00099000
*                                                                       00100000
*                                                                       00101000
*01* DELETED BY:  IBM Health Checker for z/OS when                      00102000
*                 one of the following occurs:                          00103000
*                 * The check is deleted                                00104000
*                 * The check is refreshed                              00105000
*                 * Health Checker is shutting down                     00106000
*                                                                       00107000
*01* FREQUENCY:  Multiple HCKLOGs may exists for each check.  They      00108000
*                are made available as needed, when message data        00109000
*                exceeds the limit of the buffer size.                  00110000
*                                                                       00111000
*01* DELETED BY:  Health Checker check delete                           00112000
*                                                                       00113000
*01* DEPENDENCIES:  hzshhckl.h Metal C header file                      00114000
*                                                                       00115000
*01* DISTRIBUTION LIBRARY:  AMACLIB                                     00116000
*                                                                       00117000
*01* CHANGE ACTIVITY:                                                   00118000
*                                                                       00119000
*  $L0=HCHECK   HZS7720,040401,PD00MP: Health Checker Initial release   00120000
*  $P1=ME01424  HZS7720,040804,PD00MP: Bilingual support                00121000
*  $L1=ME01560  HZS7720,040821,PD00ZJ: change basing defaults           00122000
*  $P2=ME01833  HZS7720,040931,PD00ZJ: correct/clarify fields           00123000
*  $P3=xxxxxxx  HZS7720,050325,PD00MB: Copy the number of exceptions    00124000
*  $L2=HCR8     HBB7730 051001 PD00XB: R8                               00125000
*  $L3=HCR10    HBB7750 070101 PD00XB: R10                              00126000
*  $P4=ME11573  HBB7750 071015 PD00XB: HCKLOG_Version_1                 00127000
*  $P7=ME20429  HBB7780 101117 RDJPR:  Use BDY(QWORD)                   00128000
*  $L4=ME26966  HBB77A0 140109 RD00UT: Prologue updates (HZSQUERY ref)  00129000
*  $L5=ME27716  HBB77A0 140618 RD00UT: Add comment for                  00130000
*                                       Error_Threshold_Exceeded        00131000
*                                                                       00132000
* ****************************************************************      00133000
* *** Any and all changes to this macro MUST also be reflected ***      00134000
* *** in the corresponding Metal C header file hzshhckl.h      ***      00135000
* ****************************************************************      00136000
*                                                                       00137000
* END OF SPECIFICATIONS *********************************************/  00138000
*% /*                                                                   00139000
.P0                   ANOP                                              00140000
                      AIF   ('&ZCBPRINT' EQ 'NO').P1                    00141000
                      AIF   ('&LIST' EQ 'YES').P2                       00142000
.P1                   ANOP                                              00143000
                      PUSH  PRINT                                       00144000
                      PRINT OFF                                         00145000
.P2                   ANOP                                              00146000
                      AIF   ('&HCKLOG' EQ 'NO').L0002                   00147000
                      AIF   ('&DSECT' EQ 'YES').L0003                   00148000
                      AIF   ('&HCKLOG' NE 'YES').L0002                  00149000
.L0003                ANOP                                              00150000
*                                                                       00151000
* ********************************************************************  00152000
* * The LOG buffers. Within HZSQUERY output, to get from a buffer    *  00153000
* * to the next buffer, add the value in HCKLOG_BufLen               *  00154000
* ********************************************************************  00155000
*                                                                       00156000
*                                                                       00157000
                      AIF   ('&DSECT' EQ 'YES').L0004                   00158000
HCKLOG                DS    0D     HealthChecker logger record          00159000
                      AGO   .L0005                                      00160000
.L0004                ANOP                                              00161000
HCKLOG                DSECT        HealthChecker logger record          00162000
.L0005                ANOP                                              00163000
HckLogHeader          DS    CL280  Message header                       00164000
                      ORG   HckLogHeader                                00165000
HckLog_ID             DS    CL4    Eye catch: 'HCKL'                    00166000
HckLog_Version        DS    F      See equates HckLog_Version_xxx       00167000
HckLog_InFirstBufferOnly DS CL88   Only in the first buffer             00168000
                      ORG   HckLog_InFirstBufferOnly                    00169000
HCKLOG_NonInterface2  DS    CL8    Not part of the intended interface   00170000
                      ORG   HCKLOG_NonInterface2                        00171000
HCKLOG_NonInt2        DS    CL8                                         00172000
                      ORG   HCKLOG_NonInt2                              00173000
HckLog_TotLen         DS    F      Total length of all buffers          00174000
HckLog_NumBufs        DS    F      Total number of buffers              00175000
HCKLOG_Extended_StartTOD DS BL16   Place holder for extended tod        00176000
                      ORG   HCKLOG_Extended_StartTOD                    00177000
                      DS    B      Wrap TOD                             00178000
HCKLOG_StartTOD       DS    BL8    TOD when the check was started       00179000
                      ORG   HCKLOG_StartTOD                             00180000
HCKLOG_StartTODHigh   DS    BL4    High order TOD word                  00181000
HCKLOG_StartTODLow    DS    BL4    Low order TOD word                   00182000
                      DS    BL7    Micro TOD                            00183000
HCKLOG_Extended_EndTOD DS   BL16   Place holder for extended TOD        00184000
                      ORG   HCKLOG_Extended_EndTOD                      00185000
                      DS    B      Wrap TOD                             00186000
HCKLOG_EndTOD         DS    BL8    TOD when the check completed.        00187000
                      ORG   HCKLOG_EndTOD                               00188000
HCKLOG_EndTODHigh     DS    BL4    High order TOD word                  00189000
HCKLOG_EndTODLow      DS    BL4    Low order TOD word                   00190000
                      DS    BL7    Micro TOD                            00191000
HCKLOG_CheckResultDiag DS   CL12   Result and diagnostic data from     *00192000
                                   check                                00193000
                      ORG   HCKLOG_CheckResultDiag                      00194000
HCKLOG_CheckResult    DS    F      Result from check                    00195000
HCKLOG_CheckDiag      DS    CL8    Diagnostic data from check           00196000
HCKLOG_NonInterface3  DS    CL8    Not part of the intended interface   00197000
                      ORG   HCKLOG_NonInterface3                        00198000
HCKLOG_NonInt3        DS    CL8                                         00199000
                      ORG   HCKLOG_NonInt3                              00200000
HckLog_TotNumLines    DS    F      Total number of lines for this      *00201000
                                   check iteration, summed across all  *00202000
                                   message buffers                      00203000
HckLog_TotNumMsgs     DS    F      Total number of messages for this   *00204000
                                   check iteration, summed across all  *00205000
                                   message buffers                      00206000
HCKLOG_BufferFlags    DS    BL4    Buffer flags                         00207000
                      ORG   HCKLOG_BufferFlags                          00208000
HCKLOG_BufferCheckNoRunFlags DS B                                       00209000
*  Bit definitions:                                                     00210000
HCKLOG_Parm_Error     EQU   X'80'  =1: User specified value is in      *00211000
                                   error for this check                 00212000
HCKLOG_NA_Config      EQU   X'40'  =1: This check does not apply in    *00213000
                                   the current system configuration     00214000
HCKLOG_Error_Threshold_Exceeded EQU X'20' Check routine abended        *00215000
                                   consecutive times, or the check     *00216000
                                   initialization routine failed        00217000
HCKLOG_BufferCheckReportFlags DS B Information about this check report  00218000
*  Bit definitions:                                                     00219000
HCKLOG_datalost       EQU   X'80'  Some messages issued have been lost *00220000
                                   (there are not enough buffers       *00221000
                                   available)                           00222000
                      DS    BL2    Reserved for future expansion        00223000
HckLog_MsgToken       DS    CL16   Message token corresponding to this *00224000
                                   message buffer                       00225000
                      ORG   HckLog_MsgToken                             00226000
                      DS    CL8                                         00227000
HckLog_CheckHasRunCount DS  F      This corresponds to                 *00228000
                                   PQE_Cum_Check_Count within HZSPQE.  *00229000
                                   Despite its location (not in        *00230000
                                   "InEveryBuffer"), this value is     *00231000
                                   actually set in every buffer.        00232000
                      DS    CL4                                         00233000
                      DS    CL8    Reserved                             00234000
HckLog_InEveryBuffer  DS    CL184  In every buffer                      00235000
                      ORG   HckLog_InEveryBuffer                        00236000
HckLog_BufLen         DS    F      Total length of this buffer          00237000
HckLog_MaxLines       DS    H      Maximum number of lines that might  *00238000
                                   be in the message area. This is     *00239000
                                   based on the message text length     00240000
HckLog_MaxMsgTextLen  DS    H      Maximum message text length across  *00241000
                                   the messages in the message area     00242000
HckLog_MessageAreaOffset DS F      Offset to the message area in this  *00243000
                                   buffer. Add this value to the       *00244000
                                   address of the HCKLOG to get the    *00245000
                                   address of the first message in     *00246000
                                   this buffer.                         00247000
HckLog_BufNum         DS    F      Which buffer this is                 00248000
HckLog_NumBufs_Copy   DS    F      Copy of Hcklog_NumBufs               00249000
HckLog_NumLines       DS    F      number of messages lines in this    *00250000
                                   buffer                               00251000
HCKLOG_SysplexName    DS    CL8    Sysplex name where check was        *00252000
                                   executed                             00253000
HCKLOG_SystemName     DS    CL8    System name where check was         *00254000
                                   executed                             00255000
HCKLOG_CheckOwnerName DS    CL48                                        00256000
                      ORG   HCKLOG_CheckOwnerName                       00257000
HCKLOG_CheckOwner     DS    CL16   Owning company and/or component      00258000
HckLog_CheckName      DS    CL32   Name of the check routine that      *00259000
                                   'wrote' this message buffer          00260000
HckLog_NumMsgs        DS    F      number of messages completed in     *00261000
                                   this buffer                          00262000
HckLog_WriteFlags     DS    B      write flags                          00263000
*  Bit definitions:                                                     00264000
HckLog_Saved          EQU   X'80'  This buffer was save to the log     *00265000
                                   stream                               00266000
                      DS    CL3                                         00267000
HCKLOG_LogStreamLastWriteInfo DS CL52 Information about the previous   *00268000
                                   message buffer (for this check)     *00269000
                                   that has been written to the log    *00270000
                                   stream buffer                       *00271000
                                   (HCKLOG_LogStreamLastWriteInfo is   *00272000
                                   zeroes if there is no previous      *00273000
                                   message buffer written to the log   *00274000
                                   stream. CAUTION: if this changes,   *00275000
                                   update DPQE too where this area is  *00276000
                                   saved                                00277000
                      ORG   HCKLOG_LogStreamLastWriteInfo               00278000
HCKLOG_PreviousBlkId  DS    CL8    Block ID of the previous message    *00279000
                                   buffer that was written to the      *00280000
                                   message buffer                       00281000
HCKLOG_PreviousTimeStamp DS CL16   Time stamp returned by IXGWRITE     *00282000
                                   when the previous message buffer    *00283000
                                   was written to the log stream        00284000
HCKLOG_PreviousLogStreamName DS CL26 The name of the log stream where  *00285000
                                   the previous message buffer was     *00286000
                                   saved                                00287000
                      DS    CL2    reserved. CAUTION: if fields are    *00288000
                                   added, update DPQE too where this   *00289000
                                   area is saved                        00290000
HCKLOG_NumExceptions  DS    F      Number of exceptions exceptions     *00291000
                                   issued by this iteration of the     *00292000
                                   check                                00293000
HCKLOG_FirstLineSTCK  DS    CL8    STCK timestamp when the first line  *00294000
                                   was put into the buffer. 0 if no    *00295000
                                   lines in this buffer                 00296000
HCKLOG_NonInterface1  DS    CL16   Not part of the intended interface   00297000
                      DS    CL8    Reserved                             00298000
HckLog_Version_0      EQU   0      Original release                     00299000
HckLog_Version_1      EQU   1      z/OS 1.10                            00300000
HckLog_Version_Current EQU  1                                           00301000
HCKLOG_LENGTH         EQU   *-HCKLOG                                    00302000
.L0002                ANOP                                              00303000
                      AIF   ('&HCKLOGE' EQ 'NO').L0006                  00304000
                      AIF   ('&DSECT' EQ 'YES').L0007                   00305000
                      AIF   ('&HCKLOGE' NE 'YES').L0006                 00306000
.L0007                ANOP                                              00307000
*                                                                       00308000
* ********************************************************************  00309000
* * The LOG entries. Lines are contiguous in this area. Each line    *  00310000
* * is mapped by the HCKLOGE DSECT. The length of each line is       *  00311000
* * contained in field HCKLOGE_Len. The first line begins at the     *  00312000
* * offset contained in HckLog_MessageAreaOffset. To get from a line *  00313000
* * to the next line, add the value in HCKLOGE_Len to the address    *  00314000
* * of the line.                                                     *  00315000
* ********************************************************************  00316000
*                                                                       00317000
*                                                                       00318000
                      AIF   ('&DSECT' EQ 'YES').L0008                   00319000
HCKLOGE               DS    0F     A LOG line entry                     00320000
                      AGO   .L0009                                      00321000
.L0008                ANOP                                              00322000
HCKLOGE               DSECT        A LOG line entry                     00323000
.L0009                ANOP                                              00324000
HCKLOGE_MsgPrefix     DS    CL32   Message line descriptor              00325000
                      ORG   HCKLOGE_MsgPrefix                           00326000
HCKLOGE_MsgNum        DS    CL10   Current message number               00327000
HCKLOGE_Len           DS    H      The length of the HCKLOG line       *00328000
                                   entry.                               00329000
HCKLOGE_MsgFlgs       DS    BL4    flags for the current msg line       00330000
                      ORG   HCKLOGE_MsgFlgs                             00331000
HCKLOGE_MsgStopStartFlags DS B                                          00332000
*  Bit definitions:                                                     00333000
HCKLOGE_MsgStart      EQU   X'80'  Start of new message                 00334000
HCKLOGE_MsgEnd        EQU   X'40'  Last line of current message         00335000
HCKLOGE_SectionStart  EQU   X'20'  Start of new message section         00336000
HCKLOGE_SectionEnd    EQU   X'10'  Last line of current message        *00337000
                                   section                              00338000
HCKLOGE_MsgExceptTxt  EQU   X'08'  Exception detected info no msgid is *00339000
                                   associated with this line            00340000
HCKLOGE_MsgReason     EQU   X'04'  Reason line, associated with an     *00341000
                                   exception message                    00342000
HCKLOGE_MsgTypeFlags  DS    B                                           00343000
*  Bit definitions:                                                     00344000
HCKLOGE_MsgException  EQU   X'80'  Current message is an exception     *00345000
                                   message                              00346000
HCKLOGE_MsgDebug      EQU   X'40'  Current message is a logonly debug  *00347000
                                   message 'L' type msg                 00348000
HCKLOGE_MsgReport     EQU   X'20'  Current message is a detailed       *00349000
                                   report                               00350000
HCKLOGE_MsgInfo       EQU   X'10'  Current message is informational     00351000
HCKLOGE_Stop          EQU   X'08'  STOP message                         00352000
HCKLOGE_HzsMsg        EQU   X'04'  HZSMSG message                       00353000
HCKLOGE_HzsHzs        EQU   X'02'  Start/stop message                   00354000
HCKLOGE_MsgSectionTypeFlags DS BL2                                      00355000
                      ORG   HCKLOGE_MsgSectionTypeFlags                 00356000
HCKLOGE_MsgSectionTypeFlagsB1 DS B Byte 1                               00357000
*  Bit definitions:                                                     00358000
HCKLOGE_MsgMsg        EQU   X'80'  Current line is within the main     *00359000
                                   message text section of the message *00360000
                                   Message sections are part of an     *00361000
                                   exception message                    00362000
HCKLOGE_Explanation   EQU   X'40'  Explanation section                  00363000
HCKLOGE_Sysact        EQU   X'20'  system action section                00364000
HCKLOGE_oresp         EQU   X'10'  Operator response section            00365000
HCKLOGE_spresp        EQU   X'08'  System Programmer response           00366000
HCKLOGE_probd         EQU   X'04'  Problem determination section        00367000
HCKLOGE_refdoc        EQU   X'02'  Manual reference section             00368000
HCKLOGE_source        EQU   X'01'  component reference section          00369000
HCKLOGE_MsgSectionTypeFlagsB2 DS B Byte 1                               00370000
*  Bit definitions:                                                     00371000
HCKLOGE_Automation    EQU   X'80'  Automation section                   00372000
HCKLOGE_OReason       EQU   X'20'  Owner Reason                         00373000
HCKLOGE_Parms         EQU   X'10'  Current parameters                   00374000
                      ORG   HCKLOGE_MsgFlgs+4                           00375000
                      DS    CL14   reserved                             00376000
HCKLOGE_MsgTextLen    DS    H      Length of MsgText in                *00377000
                                   HCKLOGE_MsgText                      00378000
HCKLOGE_MsgText       DS    0C     Message text line. Its length is in *00379000
                                   HCKLOGE_MsgTextLen                   00380000
cHCKL_acronym         EQU   C'HCKL' Eye catcher for HCKL                00381000
HckLOG_LoggerBufSize  EQU   65536  Maximum buffer size.                 00382000
HCKLOGE_LENGTH        EQU   *-HCKLOGE                                   00383000
.L0006                ANOP                                              00384000
                      AIF   ('&ZCBPRINT' EQ 'NO').P3                    00385000
                      AIF   ('&LIST' EQ 'YES').P4                       00386000
.P3                   ANOP                                              00387000
                      POP   PRINT                                       00388000
.P4                   ANOP                                              00389000
.P_EXIT               ANOP                                              00390000
                      MEND                                              00391000
**/ HZSZHCKL_2:;                                                        00392000
* %HZSZHCKL_INCLUDED = 'YES';                                           00393000
* %DCL ZCBPRINT CHAR EXT;                                               00394000
* %DEACTIVATE ZCBPRINT;                                                 00395000
* %DCL HZSZHCKL_LIST CHAR EXT;                                          00396000
* %DEACTIVATE HZSZHCKL_LIST;                                            00397000
* %IF HZSZHCKL_LIST ^= 'NO' &                                           00398000
*    ZCBPRINT ^= 'NO' %THEN                                             00399000
*   %GOTO HZSZHCKL_3;                                                   00400000
*   @LIST PUSH NOECHO;                                                  00401000
*   @LIST NOASSEMBLE NOECHO;                                            00402000
*   @LIST OFF C NOECHO;                                                 00403000
* %HZSZHCKL_3:;                                                         00404000
*/* Start of PL/X Source                                             */ 00405000
*%DCL HZS_INTERNAL char external;                                       00406000
*%IF HZSZHCKL_TYPE = 'YES' %Then                                        00407000
*%DO;                                                                   00408000
*  %hclbased = 'TYPE';                                                  00409000
*  %HZSALET = '';                                                       00410000
*  DCL bHCKLOG isa(HCKLOG) based;                             /* @L3C*/ 00411000
*  DCL firstHCKLOG isa(HCKLOG) based;                         /* @L3C*/ 00412000
*  DCL bHCKLOGE isa(HCKLOGE) based;                           /* @L3C*/ 00413000
*%END;                                                                  00414000
*%ELSE                                                                  00415000
*%If hclbased = '' %then                                                00416000
*  %DO;                                                                 00417000
*    %HZSALET = '';                                                     00418000
*    %hclbased = 'based(Hcklog_Ptr)';                                   00419000
*   %IF HZS_INTERNAL='YES' %THEN    /*                           @L3A*/ 00420000
*   %DO;                            /*                           @L3A*/ 00421000
*    %IF Translate(HZSZHCKL_Hcklog_Ptr_NoReg) ^= 'YES' %THEN  /* @L3A*/ 00422000
*    %DO;                                                     /* @L3A*/ 00423000
*    Dcl Hcklog_Ptr isa(Hzsptr);                              /* @L3A*/ 00424000
*    %END;                                                    /* @L3A*/ 00425000
*    %ELSE %DO;                                               /* @L3A*/ 00426000
*    Dcl Hcklog_Ptr isa(Hzsptr) Noreg;                        /* @L3A*/ 00427000
*    %END;                                                    /* @L3A*/ 00428000
*   %END;                           /*                           @L3A*/ 00429000
*   %ELSE %DO;                      /*                           @L3A*/ 00430000
*    %IF Translate(HZSZHCKL_Hcklog_Ptr_NoReg) ^= 'YES' %THEN            00431000
*    %DO;                                                               00432000
*    Dcl Hcklog_Ptr Ptr(31);                                            00433000
*    %END;                                                              00434000
*    %ELSE %DO;                                                         00435000
*    Dcl Hcklog_Ptr Ptr(31) Noreg;                                      00436000
*    %END;                                                              00437000
*   %END;                           /*                           @L3A*/ 00438000
*  %End;                                                                00439000
*                                                                       00440000
*                                                                       00441000
*/********************************************************************/ 00442000
*/* The LOG buffers. Within HZSQUERY output, to get from a buffer    */ 00443000
*/* to the next buffer, add the value in HCKLOG_BufLen               */ 00444000
*/********************************************************************/ 00445000
*                                                                       00446000
*?ASAXMAC SetZArchInfo;                                                 00447000
*dcl                                                                    00448000
*  1 HCKLOG hclbased HZSALET BDY(AsaxmacQword), /* HealthChecker        00449000
*                                      logger record                 */ 00450000
*   3  HckLogHeader Bdy(AsaxmacQword), /* Message header             */ 00451000
*     5  HckLog_ID      Char(4),    /* Eye catch: 'HCKL'             */ 00452000
*     5  HckLog_Version Fixed(31),  /* See equates                      00453000
*                                      HckLog_Version_xxx               00454000
*                                                                @L3C*/ 00455000
*     5  HckLog_InFirstBufferOnly Bdy(DWord),  /*                       00456000
*                                      Only in the first buffer      */ 00457000
*      7 HCKLOG_NonInterface2,      /* Not part of the intended         00458000
*                                      interface                     */ 00459000
*       8 HCKLOG_NonInt2 Char(8) Bdy(Word),                             00460000
*      9 HckLog_TotLen fixed(31),   /* Total length of all buffers   */ 00461000
*      9 HckLog_NumBufs Fixed(31),  /* Total number of buffers       */ 00462000
*      7 HCKLOG_Extended_StartTOD Bit(128) Bdy(DWord), /* Place holder  00463000
*                                      for extended tod              */ 00464000
*       9  *        Bit(8),           /* Wrap TOD                    */ 00465000
*       9  HCKLOG_StartTOD Bit(64), /* TOD when the check was           00466000
*                                      started                       */ 00467000
*        11  HCKLOG_StartTODHigh Bit(32),   /* High order TOD word   */ 00468000
*        11  HCKLOG_StartTODLow  Bit(32),  /* Low order TOD word     */ 00469000
*       9  *        Bit(56),          /* Micro TOD                   */ 00470000
*      7 HCKLOG_Extended_EndTOD BIT(128) Bdy(DWord), /* Place holder    00471000
*                                      for extended TOD              */ 00472000
*       9  *        Bit(8),           /* Wrap TOD                    */ 00473000
*       9  HCKLOG_EndTOD Bit(64),   /* TOD when the check completed.    00474000
*                                                                    */ 00475000
*        11  HCKLOG_EndTODHigh Bit(32), /* High order TOD word       */ 00476000
*        11  HCKLOG_EndTODLow Bit(32), /* Low order TOD word         */ 00477000
*       9  *        Bit(56),          /* Micro TOD                   */ 00478000
*      7 HCKLOG_CheckResultDiag char(12) Bdy(WORD), /* Result and       00479000
*                                      diagnostic data from check    */ 00480000
*       9  HCKLOG_CheckResult fixed(31), /* Result from check        */ 00481000
*       9  HCKLOG_CheckDiag Char(8), /* Diagnostic data from check   */ 00482000
*      7 HCKLOG_NonInterface3,      /* Not part of the intended         00483000
*                                      interface                     */ 00484000
*       8 HCKLOG_NonInt3 Char(8) Bdy(Word),                             00485000
*      9 HckLog_TotNumLines FIXED(31), /* Total number of lines for     00486000
*                                      this check iteration, summed     00487000
*                                      across all message buffers    */ 00488000
*      9 HckLog_TotNumMsgs fixed(31),  /* Total number of messages for  00489000
*                                      this check iteration, summed     00490000
*                                      across all message buffers    */ 00491000
*      7 HCKLOG_BufferFlags bit(32), /* Buffer flags                 */ 00492000
*       9 HCKLOG_BufferCheckNoRunFlags Bit(8),                          00493000
*        11 HCKLOG_Parm_Error BIT(1), /* =1: User specified value is in 00494000
*                                      error for this check          */ 00495000
*        11 HCKLOG_NA_Config  BIT(1), /* =1: This check does not apply  00496000
*                                      in the current system            00497000
*                                      configuration                 */ 00498000
*        11 HCKLOG_Error_Threshold_Exceeded Bit(1), /* Check routine    00499000
*                                      abended consecutive times, or    00500000
*                                      the check initialization routine 00501000
*                                      failed */                        00502000
*       9 HCKLOG_BufferCheckReportFlags Bit(8),                         00503000
*                                   /* Information about this check     00504000
*                                      report                        */ 00505000
*        11 HCKLOG_datalost bit(1),  /* Some messages issued have been  00506000
*                                      lost (there are not enough       00507000
*                                      buffers available)            */ 00508000
*        11 *        Bit(7),        /* Reserved for future expansion */ 00509000
*       9  *        Bit(16),        /* Reserved for future expansion */ 00510000
*      7  HckLog_MsgToken Char(16) BDY(DWORD), /* Message token         00511000
*                                      corresponding to this message    00512000
*                                      buffer                        */ 00513000
*    %IF HZS_Internal = 'YES' %Then                                     00514000
*      %DO;                                                             00515000
*        9 * Union,                                                     00516000
*          11 *,                                                        00517000
*            13 HckLog_MsgTokenI isa(HZS_MsgToken),                     00518000
*          11 *,                                                        00519000
*      %END;                                                            00520000
*          13 * Char(8),                                                00521000
*          13 HckLog_CheckHasRunCount Fixed(31),  /* This corresponds   00522000
*                                      to PQE_Cum_Check_Count within    00523000
*                                      HZSPQE. Despite its location     00524000
*                                      (not in "InEveryBuffer"),        00525000
*                                      this value is actually set in    00526000
*                                      every buffer.             @L3A*/ 00527000
*          13 * Char(4),                                                00528000
*      7 * Char(8),                 /* Reserved                      */ 00529000
*     5  HckLog_InEveryBuffer Bdy(AsaxmacQword), /* In every buffer  */ 00530000
*      7 HckLog_BufLen fixed(31),   /* Total length of this             00531000
*                                      buffer                        */ 00532000
*      7 HckLog_MaxLines fixed(15), /* Maximum number of lines that     00533000
*                                      might be in the message area.    00534000
*                                      This is based on the message     00535000
*                                      text length                   */ 00536000
*      7 HckLog_MaxMsgTextLen Fixed(15),  /* Maximum message text       00537000
*                                      length across the messages       00538000
*                                      in the message area           */ 00539000
*      7 HckLog_MessageAreaOffset FIXED(31), /* Offset to the message   00540000
*                                      area in this buffer. Add this    00541000
*                                      value to the address of the      00542000
*                                      HCKLOG to get the address of     00543000
*                                      the first message in this        00544000
*                                      buffer.                       */ 00545000
*      7 HckLog_BufNum Fixed(31),   /* Which buffer this is          */ 00546000
*      7 HckLog_NumBufs_Copy Fixed(31),  /* Copy of Hcklog_NumBufs   */ 00547000
*      7 HckLog_NumLines FIXED(31), /* number of messages lines in      00548000
*                                      this buffer               @P2C*/ 00549000
*      7 HCKLOG_SysplexName CHAR(8) Bdy(DWord), /* Sysplex name where   00550000
*                                      check was executed            */ 00551000
*      7 HCKLOG_SystemName char(8) Bdy(DWord), /* System name where     00552000
*                                      check was executed            */ 00553000
*      7 HCKLOG_CheckOwnerName char(48) Bdy(DWord), /*               */ 00554000
*       9  HCKLOG_CheckOwner Char(16) Bdy(DWord), /* Owning             00555000
*                                      company and/or component      */ 00556000
*       9  HckLog_CheckName Char(32), /* Name of the check routine that 00557000
*                                      'wrote' this message buffer   */ 00558000
*      7 HckLog_NumMsgs fixed(31),  /* number of messages completed in  00559000
*                                      this buffer               @P2C*/ 00560000
*      7 HckLog_WriteFlags bit(8),  /* write flags                   */ 00561000
*        9  HckLog_Saved bit(1),    /* This buffer was save to the log  00562000
*                                      stream                        */ 00563000
*        9  *        bit(7),        /* reserved                      */ 00564000
*      7 *         Char(3),         /*                               */ 00565000
*      7 HCKLOG_LogStreamLastWriteInfo, /* Information about the        00566000
*                                     previous message buffer (for this 00567000
*                                      check) that has been written to  00568000
*                                      the log stream buffer            00569000
*                                      (HCKLOG_LogStreamLastWriteInfo   00570000
*                                      is zeroes if there is no         00571000
*                                      previous message buffer written  00572000
*                                      to the log stream.               00573000
*                                      CAUTION: if this changes,        00574000
*                                      update DPQE too where this area  00575000
*                                      is saved                      */ 00576000
*        9  HCKLOG_PreviousBlkId CHAR(8), /* Block ID of the previous   00577000
*                                      message buffer that was written  00578000
*                                      to the message buffer         */ 00579000
*        9  HCKLOG_PreviousTimeStamp char(16), /* Time stamp returned   00580000
*                                      by IXGWRITE when the previous    00581000
*                                      message buffer was written to    00582000
*                                      the log stream                */ 00583000
*        9  HCKLOG_PreviousLogStreamName char(26), /* The name of the   00584000
*                                      log stream where the previous    00585000
*                                      message buffer was saved      */ 00586000
*        9  *        Char(2),       /* reserved.                        00587000
*                                      CAUTION: if fields are added,    00588000
*                                      update DPQE too where this area  00589000
*                                      is saved                      */ 00590000
*      7 HCKLOG_NumExceptions FIXED, /* Number of exceptions exceptions 00591000
*                                      issued by this iteration of the  00592000
*                                      check                         */ 00593000
*      7 HCKLOG_FirstLineSTCK Char(8) Bdy(Dword), /* STCK timestamp     00594000
*                                      when the first line was put      00595000
*                                      into the buffer. 0 if no         00596000
*                                      lines in this buffer      @L3A*/ 00597000
*      7 HCKLOG_NonInterface1,      /* Not part of the intended         00598000
*                                      interface                     */ 00599000
*       8 HCKLOG_NonInt1 Char(16) Bdy(AsaxmacQword),                    00600000
*  %IF HZS_INTERNAL='YES' %THEN     /*                           @P3A*/ 00601000
*    %DO;                           /*                           @P3A*/ 00602000
*         9 HCKLOG_NP Isa(Hzs_QueueNP64) Bdy(AsaxmacQword),  /*  @L3C*/ 00603000
*    %END;                          /*                           @P3A*/ 00604000
*      7 * Char(8)                  /* Reserved                  @L3C*/ 00605000
*   ;                                                                   00606000
*Dcl HckLog_Version_0 Constant(0);  /* Original release          @L3A*/ 00607000
*Dcl HckLog_Version_1 Constant(1);  /* z/OS 1.10                 @P4C*/ 00608000
*Dcl HckLog_Version_Current Constant(HckLog_Version_1);       /* @L3A*/ 00609000
*/********************************************************************/ 00610000
*/* The LOG entries. Lines are contiguous in this area. Each line    */ 00611000
*/* is mapped by the HCKLOGE DSECT. The length of each line is       */ 00612000
*/* contained in field HCKLOGE_Len. The first line begins at the     */ 00613000
*/* offset contained in HckLog_MessageAreaOffset. To get from a line */ 00614000
*/* to the next line, add the value in HCKLOGE_Len to the address    */ 00615000
*/* of the line.                                                     */ 00616000
*/********************************************************************/ 00617000
*DCL 1 HCKLOGE TYPE,               /* A LOG line entry               */ 00618000
*     5 HCKLOGE_MsgPrefix CHAR(32) Bdy(Word), /*                        00619000
*                                      Message line descriptor       */ 00620000
*       7  HCKLOGE_MsgNum char(10), /* Current message number        */ 00621000
*       7  HCKLOGE_Len Fixed(15),   /* The length of the HCKLOG line    00622000
*                                    entry.                          */ 00623000
*       7  HCKLOGE_MsgFlgs Bit(32), /* flags for the current msg line*/ 00624000
*         9  HCKLOGE_MsgStopStartFlags Bit(8),                          00625000
*           11 HCKLOGE_MsgStart Bit(1), /* Start of new message      */ 00626000
*           11 HCKLOGE_MsgEnd Bit(1),/* Last line of current message */ 00627000
*           11 HCKLOGE_SectionStart Bit(1), /* Start of new message     00628000
*                                      section                       */ 00629000
*           11 HCKLOGE_SectionEnd Bit(1), /* Last line of current       00630000
*                                      message section               */ 00631000
*           11 HCKLOGE_MsgExceptTxt Bit(1), /* Exception detected info  00632000
*                                        no msgid is associated with    00633000
*                                        this line                   */ 00634000
*           11 HCKLOGE_MsgReason Bit(1), /* Reason line, associated     00635000
*                                        with an  exception message  */ 00636000
*           11 *        Bit(2),     /* Reserved for future expansion */ 00637000
*         9  HCKLOGE_MsgTypeFlags Bit(8),                               00638000
*           11 HCKLOGE_MsgException BIT(1), /* Current message is an    00639000
*                                      exception message             */ 00640000
*           11 HCKLOGE_MsgDebug Bit(1), /* Current message is a logonly 00641000
*                                      debug message 'L' type msg    */ 00642000
*           11 HCKLOGE_MsgReport Bit(1), /* Current message is a        00643000
*                                      detailed report               */ 00644000
*           11 HCKLOGE_MsgInfo Bit(1), /* Current message is            00645000
*                                      informational                 */ 00646000
*           11 HCKLOGE_Stop Bit(1),   /* STOP message            @P2A*/ 00647000
*           11 HCKLOGE_HzsMsg Bit(1), /* HZSMSG  message         @P2A*/ 00648000
*           11 HCKLOGE_HzsHzs Bit(1), /* Start/stop message      @P2A*/ 00649000
*           11 *        Bit(1),     /* Reserved                  @P2A*/ 00650000
*         9  HCKLOGE_MsgSectionTypeFlags BIT(16),                       00651000
*          10 HCKLOGE_MsgSectionTypeFlagsB1 bit(8), /* Byte 1    @P1A*/ 00652000
*                                                                       00653000
*           11 HCKLOGE_MsgMsg BIT(1), /* Current line is within the     00654000
*                                      main message text section of the 00655000
*                                      message                       */ 00656000
*                                    /* Message sections are part of    00657000
*                                       an exception message         */ 00658000
*           11 HCKLOGE_Explanation BiT(1), /* Explanation section    */ 00659000
*           11 HCKLOGE_Sysact BIT(1), /* system action section       */ 00660000
*           11 HCKLOGE_oresp Bit(1), /* Operator response section    */ 00661000
*           11 HCKLOGE_spresp Bit(1), /* System Programmer response  */ 00662000
*           11 HCKLOGE_probd BIT(1),/* Problem determination section */ 00663000
*           11 HCKLOGE_refdoc Bit(1), /* Manual reference section    */ 00664000
*           11 HCKLOGE_source Bit(1), /* component reference section */ 00665000
*          10 HCKLOGE_MsgSectionTypeFlagsB2 bit(8), /* Byte 1    @P1A*/ 00666000
*           11 HCKLOGE_Automation Bit(1), /* Automation section      */ 00667000
*           11 *                 Bit(1), /* reserved             @P?C*/ 00668000
*           11 HCKLOGE_OReason   Bit(1), /* Owner Reason         @P2C*/ 00669000
*           11 HCKLOGE_Parms     Bit(1), /* Current parameters   @P2C*/ 00670000
*           11 *                 Bit(4), /* reserved for future      */ 00671000
*       7  * Char(14),              /* reserved                      */ 00672000
*       7  HCKLOGE_MsgTextLen Fixed(15) Unsigned,  /* Length of MsgText 00673000
*                                    in HCKLOGE_MsgText              */ 00674000
*     5  HCKLOGE_MsgText Char(*); /* Message text line. Its length is   00675000
*                                    in HCKLOGE_MsgTextLen           */ 00676000
*DCL                                                                    00677000
* cHCKL_acronym  Constant('HCKL') Char(*), /* Eye catcher for HCKL      00678000
*                                                                @P1C*/ 00679000
* HckLOG_LoggerBufSize FIXED(32) constant(64K);  /*                     00680000
*                                      Maximum buffer size.          */ 00681000
*%IF HZS_INTERNAL = 'YES' %THEN                                         00682000
*%DO;                                                                   00683000
* Dcl OffsetCheck_HCKLOG_NP Fixed(32) Constant(                         00684000
*       (Offset(HCKLOG.HCKLOG_NP)/16)*16 -                              00685000
*        Offset(HCKLOG.HCKLOG_NP)                                       00686000
*                                    );  /* Check for Quadword   @L3A*/ 00687000
*%END;                                                                  00688000
*@LOGIC;                                                                00689000
*#PRAGMA TOOL=CBGEN.                                                    00690000
*#USEORG.                                                               00691000
*#ALIGNOP.                                                              00692000
*#NOTUPPER.                                                             00693000
*#DELETE.HCKLOG_NONINT1                                                 00694000
*#LENGTHSUFFIX._LENGTH                                                  00695000
*#EPRAGMA.                                                              00696000
*@ENDLOGIC;                                                             00697000
*/* End of PL/X Source                                               */ 00698000
* %IF HZSZHCKL_LIST ^= 'NO' &                                           00699000
*    ZCBPRINT ^= 'NO' %THEN                                             00700000
*   %GOTO HZSZHCKL_4;                                                   00701000
*   @LIST POP NOECHO;                                                   00702000
* %HZSZHCKL_4:;                                                         00703000
* %END;                                                                 00704000
