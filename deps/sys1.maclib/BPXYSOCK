*        %GOTO SOCKPRO  ;         /* Bilingual header                           
         MACRO                                                                  
         BPXYSOCK  &DSECT=YES,&LIST=YES                                         
         GBLB  &SOCK411                                                         
         AIF   (&SOCK411 EQ 1).E411                                             
&SOCK411 SETB  1                                                                
         AIF   ('&LIST' EQ 'YES').A411                                          
         PUSH  PRINT  BPXYSOCK: OpenMVS Socket Address Structure                
         PRINT OFF                                                              
         AGO   .A411                                                            
*                                  */                                           
*%SOCKPRO : ;                                                                   
*/****START OF SPECIFICATIONS******************************************         
*                                                                               
*    $MAC (BPXYSOCK) COMP(SCPX1) PROD(BPX):                                     
*                                                                               
*01* MACRO NAME: BPXYSOCK                                                       
*                                                                               
*01* DSECT NAME: N/A                                                            
*                                                                               
*01* DESCRIPTIVE NAME: OpenMVS Socket Address structure control block           
*                                                                               
*02*   ACRONYM: SOCK                                                            
**/                                                                             
*/*01* PROPRIETARY STATEMENT=                                        */         
*/***PROPRIETARY_STATEMENT********************************************/         
*/*                                                                  */         
*/*                                                                  */         
*/* LICENSED MATERIALS - PROPERTY OF IBM                             */         
*/* 5650-ZOS COPYRIGHT IBM CORP. 1993, 2021                          */         
*/*                                                                  */         
*/* STATUS= HBB77D0                                                  */         
*/*                                                                  */         
*/***END_OF_PROPRIETARY_STATEMENT*************************************/         
*/*                                                                             
*01* EXTERNAL CLASSIFICATION:  GUPI                                             
*01* END OF EXTERNAL CLASSIFICATION:                                            
*                                                                               
*01* FUNCTION:                                                                  
*                                                                               
*    This file contains the definitions of the socket address                   
*    structure control block for the supported address families.                
*                                                                               
*01* METHOD OF ACCESS:                                                          
*                                                                               
*02*   PL/X:                                                                    
*                                                                               
*        %INCLUDE SYSLIB(BPXYSOCK)                                              
*        By default, the SOCK is based on SOCKPTR. If                           
*        other basing is desired, use %SOCKBASE='BASED(XXXXXX)'.                
*        If %SOCKBASE='BASED(SOCKPTR)' is coded, a Declare for                  
*        SOCKPTR is also generated.                                             
*                                                                               
*        The Sockaddr PL/X data type is defined by this macro.     @P3A         
*        To have only the type defined, and not the instance       @P3A         
*        named "SockAddr", use %SOCKBASE = 'TYPEONLY'.             @P3A         
*                                                                               
*        The socket address is a parameter on the following                     
*        syscalls: Accept                                                       
*                  Bind                                                         
*                  Connect                                                      
*                  GetName                                                      
*                  SndtoRcvfrom                                                 
*                  SetPeer                                                      
*                                                                               
*        To include the Multicast Source Structures in PL/X        @DFA         
*        you must specify: %BPXY_MULTICAST_STRUCTS = 'Yes'         @DFA         
*                                                                               
*        To include the IsSrcAddr Structure in PL/X                @DJA         
*        you must specify: %BPXY_ISSRCADDR_STRUCTS = 'Yes'         @DJA         
*                                                                               
*                                                                               
*02*   ASM:                                                                     
*                                                                               
*        None                                                                   
*                                                                               
*01* SIZE: Release dependent.  Refer to the mapping.                            
*                                                                               
*01* POINTED TO BY: Input parameter                                             
*                                                                               
*01* CREATED BY:    caller                                                      
*                                                                               
*01* DELETED BY:    caller                                                      
*                                                                               
*01* STORAGE ATTRIBUTES:                                                        
*02*   SUBPOOL:                                                                 
*02*   KEY:                                                                     
*02*   RESIDENCY:                                                               
*                                                                               
*01* FREQUENCY:                                                                 
*                                                                               
*01* SERIALIZATION: N/A                                                         
*                                                                               
*01* DEPENDENCIES: None                                                         
*                                                                               
*01* NOTES: None                                                                
*                                                                               
*01* COMPONENT: OpenMVS (SCPX1)                                                 
*                                                                               
*01* DISTRIBUTION LIBRARY:  AMACLIB                                             
*                                                                               
*01* EYE-CATCHER: None - this is the interface block from the user.             
*02*   OFFSET:  N/A                                                             
*02*   LENGTH:  N/A                                                             
*                                                                               
*01* CHANGE-ACTIVITY:                                                           
*                                                                               
*  $D0=DOAA002  HOM1120 920316 PDCL: Dcr A002.02 Socket support                 
*  $D1=DOAA002  HOM1120 931005 PDJZ: Dcr A002.08 Unix domain sockets            
*  $P0=POA0284  HOM1120 940126 PDXX: Adapt SOCKADDR to BSD 4.4 defines          
*  $P0=PPF0001  HOM1130 940126 PDXX: Adapt SOCKADDR to BSD 4.4 defines          
*  $P1=PPF0038  HOM1130 940531 PDJV: Add define for INADDR_ANY                  
*  $D2=DPFA053, HOM1130 940609 PDHR: Add support for converging                 
*                                    sockets changes                            
*  $D3=DPFA053  HOM1130 950202 PDJV: DCR A053.09 - Local INET support           
*  $P2=PPF0381  HOM1130 950418 PDJV: Add definitions for Protocol               
*  $P3=PRG0095  HOM1140 951221 PDJV: Make sockaddr a type declare               
*                                    Also correct ASM Sock_Sin_Addr             
*  $D4=DSPA158  HOM1150 960312 PDJT: AF_ESCON                                   
*  $D5=DRGA146  HOM1150 960410 PDWE: A146.03 SetIBMSockOpt                      
*  $P4=PQC1723  HBB6603 960725 PDWE: Add Tcp_nodelay for TCP/IP 3.3             
*  $P5=PQC2129  HBB6603 960815 PDJV: Add new SOCKBAS2 use                       
*  $P6=PQC2529  HBB6603 960925 PDJV: Make constants 4 bytes long                
*  $P7=PUX0159  HBB6605 970509 PDJT: New setibmsockopt's for TCP/IP 3.4         
*  $D6=DVTA265  HBB6606 971009 PDJT: SLA/Multicast setsockopt's                 
*  $D7=DWAA274  JBB6607 980309 PDSK: Fast CGI (A274.03)                         
*  $P8=PVT0656  JBB6607 980323 PDJT: Sysplex TCP/IP and IPv6 additions          
*  $P9=PWA0114  JBB6607 980430 PDJT: Change IP_TOS from 10 to 2 OW33172         
*  $PA=PWA0227  JBB6607 980717 PDJV: Add SO_EioIfNewTP for setibmsockop         
*  $PB=PWY0744  JBB6609 990721 PDJT: Add IpV6 Structures                        
*  $D8=DXDA400  HBB7703 990818 PDJT: SO_SECINFO Structures                      
*  $PC=PX01145  HBB7705 001229 PDJV: Add comments                               
*  $D9=DYVA574  HBB7707 010602 PDJT: IPv6 Options                               
*  $01=OW48918  HBB7707 010613 PDJT: Fix DSECT=NO for all DSECTs                
*  $DA=DYVA574  HBB7707 010523 PDNU: IPV6 Routing        (A574.02)              
*  $PD=PYN0220  HBB7708 020301 PDFO: Bilingual fixup                            
*  $xx=TYN1055  HBB7708 020415 PDNU: Rollup IPV6                                
*  $xx=TJK0336  HBB7709 020430 PDNU: Rollup IPV6                                
*  $DB=DJKA625  HBB7708 020716 PDJT: Icmp6 Filtering Constants                  
*  $PE=PJK0208  HBB7708 020910 PDJT: Sock#So_AcceptECONNABORTED.                
*  $02=OW57275  HBB7708 021112 PDJT: Socket() With Affinity                     
*  $03=OW57331  HBB7703 021127 PDJT: Excl Writes                                
*  $DC=DDEA628  HBB7720 040505 PDGY: IPv6 Options                               
*  $PF=ME00891  HBB7720 040607 PDGY: Remove semicolons from comments            
*  $DD=ME01516  HBB7720 040805 PDGY: IPv6 Options update                        
*  $04=OA12711  HBB7707 050808 PDJT: EQUates for DCs                            
*  $DE=ME07022  HBB7740 060407 PDJT: Multicast Source Filter RFC 3678           
*  $DF=ME07094  HBB7740 060407 PDJT: %BPXY_MULTICAST_STRUCTS                    
*  $DG=ME07876  HBB7740 060919 PDJT: Move ip_mreq                               
*  $DH=ME11672  HBB7750 070709 PDJT: SO_RECVUSERNAME & SO_REUSEPORT             
*  $DI=DCRB575  HBB7760 080728 PDJN: Disable SO_EXCLWRT                         
*  $DJ=DCRB864  HBB7770 090427 PDJT: RFC 5014 APIs                              
*  $DK=DCRB990  HBB7780 091115 PD2R: Add Support for IP_PKTINFO                 
*  $PG=ME22015  HBB7790 110808 PDJT: Improve Sock_Len doc                       
*  $DL=DCRC595  HBB77A0 140328 PDSK: AMODE64 64-bit autodata                    
*  $DM=WI409478 HBB77D0 210716 PDX8: Add Support for IP_TTL                     
*                                        (TRSQ OA61799)                         
*  $DN=                                                                         
*  $PH=                                                                         
*  $PI=                                                                         
*  $DO=WI427422 HBB77D0 220301 SAW : Socket autocvt - add AF_LOCAL              
*  $PJ=                                                                         
*                                                                               
****END OF SPECIFICATIONS*********************************************/         
*        %GOTO SOCKPLX  ;         /* Bilingual header                           
.A411    ANOP  ,                                                                
*                                                                               
***********************************************************************         
** BPXYSOCK: OpenMVS Socket Address Structure                         *         
** Used By: Sockets PFS                                               *         
***********************************************************************         
*                                                                               
         AIF   ('&DSECT' EQ 'NO').B411                                          
SOCKADDR             DSECT ,                                                    
         AGO   .C411                                                            
.B411    ANOP  ,                                                                
SOCKADDR             DS    0F                                                   
.C411    ANOP  ,                                                                
SOCKBEGIN            DS    0F                                                   
*                                                                               
SOCK_LEN             DS    X          Address Length -            @PGC X        
                                       Ignored for AF_INET & AF_INET6. X        
                                       For AF_UNIX this must be the    X        
                                       length of name in SOCK_SUN_NAME.         
*          Note: The SOCK_LEN field is from the BSD sa_len field which          
*            was not included in POSIX so we can't require it be used           
*            with network sockets in z/OS UNIX.                   @PGA          
SOCK_FAMILY          DS    X          Address Family                            
SOCK_DATA            DS    0C         Protocol specific area                    
*                                                                               
SOCK#LEN             EQU   *-SOCKADDR Constant - Fixed length of SOCK           
*                                                                               
***********************************************************************         
*                                                                     *         
*   AF_Inet Socket Address Structure                                  *         
*                                                                     *         
***********************************************************************         
*                                                                               
                     ORG  SOCK_DATA   Start of AF_Inet unique area              
SOCK_SIN             DS   0C                                                    
SOCK_SIN_PORT        DS   H           Port number used by the appl              
SOCK_SIN_ADDR        DS   CL4         INET address (netid)                      
                     DS   CL8         Reserved area not used                    
*                                                                               
SOCK_SIN#LEN         EQU  *-SOCK_SIN  Constant - Fixed length of                
*                                     AF_Inet unique area                       
*                                                                               
*                                                                               
***********************************************************************         
*                                                                     *         
*   AF_Unix Socket Address Structure                                  *         
*                                                                     *         
***********************************************************************         
*                                                                               
                     ORG  SOCK_DATA   Start of AF_Unix unique area              
SOCK_SUN             DS   0C                                                    
SOCK_SUN_NAME        DS   CL108       Path name of the socket  @P0C             
*                                     Length 108 matchs RS/6000@P0A             
*                                                                               
SOCK_SUN#LEN         EQU  *-SOCK_SUN  Constant - Fixed length of                
*                                     AF_Unix unique area                       
*                                                                               
***********************************************************************         
*                                                                     *         
*   AF_Inet6 Socket Address Structure                                 *         
*                                                                     *         
***********************************************************************         
*                                                                               
                     ORG  SOCK_DATA   Start of AF_Inet6 area       @PBA         
SOCK_SIN6            DS   0C                                       @PBA         
SOCK_SIN6_PORT       DS   H           Port number used by the appl @PBA         
SOCK_SIN6_FLOWINFO   DS   CL4         FLOW INFORMATION             @PBA         
SOCK_SIN6_ADDR       DS   CL16        INET address (netid)         @PBA         
SOCK_SIN6_SCOPE_ID   DS   CL4         SCOPE ID                     @PBA         
*                                                                  @PBA         
SOCK_SIN6#LEN        EQU  *-SOCK_SIN6 Length of AF_INET6 area      @PBA         
*                                                                               
***********************************************************************         
*                                                                     *         
*   Equates for Address Families                                      *         
*                                                                     *         
***********************************************************************         
*                                                                               
AF_UNSPEC            EQU  0           Unspecified                               
AF_UNIX              EQU  1           Unix Domain                               
AF_LOCAL             EQU  1           Local Domain                 @DOA         
AF_INET              EQU  2           Internetwork: UDP TCP                     
AF_IMPLINK           EQU  3           Arpanet imp addresses                     
AF_PUP               EQU  4           pup protocols: BSP                        
AF_CHAOS             EQU  5           mit CHAOS protocols                       
AF_NS                EQU  6           XEROX NS protocols                        
AF_NBS               EQU  7           nbs protocols                             
AF_ECMA              EQU  8           European computer man.                    
AF_DATAKIT           EQU  9           datakit protocols                         
AF_CCITT             EQU  10          CCITT protocols: X.25                     
AF_SNA               EQU  11          IBM SNA                                   
AF_DECNET            EQU  12          DECNet                                    
AF_DLI               EQU  13          Direct data link interface                
AF_LAT               EQU  14          LAT                                       
AF_HYLINK            EQU  15          NSC hyperchannel                          
AF_APPLETALK         EQU  16          Apple Talk                                
AF_IUCV              EQU  17          IBM IUCV                                  
AF_ESCON             EQU  18          ESCON UDP                  @D4A           
AF_INET6             EQU  19          IPv6                       @P8A           
AF_ROUTE             EQU  20          Routing Sockets            @P8A           
AF_MAX               EQU  21                                     @P8C           
*                                                                               
*********************************************************************           
*   Equates for protocol                                         @P2A           
*********************************************************************           
*                                                                               
IPPROTO_IP           EQU   0          DEFAULT PROTOCOL                          
IPPROTO_TCP          EQU   6          TCP                                       
IPPROTO_UDP          EQU  17          USER DATAGRAM                             
IPPROTO_IPV6         EQU  41          IPv6                        @PBA          
IPPROTO_ICMPV6       EQU  58          IPv6 ICMP                   @D9A          
*                                                                               
IPPROTO_HOPOPTS      EQU   0                                     @DAA           
IPPROTO_ROUTING      EQU  43                                     @DAA           
IPPROTO_FRAGMENT     EQU  44                                     @DAA           
IPPROTO_ESP          EQU  50                                     @DAA           
IPPROTO_AH           EQU  51                                     @DAA           
IPPROTO_NONE         EQU  59                                     @DAA           
IPPROTO_DSTOPTS      EQU  60                                     @DAA           
*                                                                               
***********************************************************************         
*                                                                     *         
*   Equates for setpeer options                                       *         
*                                                                     *         
***********************************************************************         
*                                                                               
SOCK#SO_SET          DC   X'00000200'                                           
SOCK#SO_SET_EQU      EQU  X'00000200'                       @04A                
SOCK#SO_UNSET        DC   X'00000400'                                           
SOCK#SO_UNSET_EQU    EQU  X'00000400'                       @04A                
*                                                                               
***********************************************************************         
*                                                                     *         
*   Equates for socket types                                          *         
*                                                                     *         
***********************************************************************         
*                                                                               
SOCK#_STREAM         EQU  1                                                     
SOCK#_DGRAM          EQU  2                                                     
SOCK#_RAW            EQU  3                                                     
SOCK#_RDM            EQU  4                                                     
SOCK#_SEQPACKET      EQU  5                                                     
*                                                                               
***********************************************************************         
*                                                                     *         
*   Equates for Dimension   (socket/socketpair syscall)               *         
*                                                                     *         
***********************************************************************         
*                                                                               
SOCK#DIM_SOCKET      EQU  1                                                     
SOCK#DIM_SOCKETPAIR  EQU  2                                                     
SOCK#DIM_SOCKETWAFFINITY     EQU  3                              @02A           
SOCK#DIM_SOCKETPAIRWAFFINITY EQU  4                              @02A           
*                                                                               
***********************************************************************         
*                                                                     *         
*   Equates for getname option                                        *         
*                                                                     *         
***********************************************************************         
*                                                                               
SOCK#GNMOPTGETPEERNAME EQU  1                                                   
SOCK#GNMOPTGETSOCKNAME EQU  2                                                   
*                                                                               
***********************************************************************         
*                                                                     *         
*   Equates for sockopt                                               *         
*                                                                     *         
***********************************************************************         
*                                                                               
SOCK#OPTOPTGETSOCKOPT    EQU  1                                                 
SOCK#OPTOPTSETSOCKOPT    EQU  2                                                 
SOCK#OPTOPTSETIBMSOCKOPT EQU  3                                   @D5A          
*                                                                               
***********************************************************************         
*                                                                     *         
*   Equates for Shutdown options                                      *         
*                                                                     *         
***********************************************************************         
*                                                                               
SOCK#SHUTDOWNREAD      EQU  0                                                   
SOCK#SHUTDOWNWRITE     EQU  1                                                   
SOCK#SHUTDOWNBOTH      EQU  2                                                   
*                                                                               
*                                                                               
***********************************************************************         
*                                                                     *         
*   Equate for Level Number for socket options                        *         
*                                                                     *         
***********************************************************************         
*                                                                               
SOCK#SOL_SOCKET      DC   X'0000FFFF'                                           
SOCK#SOL_SOCKET_EQU  EQU  X'0000FFFF'                       @04A                
*                                                                               
*                                                                               
***********************************************************************         
*                                                                     *         
*   Equate for InAddrAny for bind requests                            *         
*                                                                     *         
***********************************************************************         
*                                                                               
INADDR_ANY           DC   X'00000000'                                           
INADDR_ANY_EQU       EQU  X'00000000'                       @04A                
*                                                                               
INADDR_LOOPBACK      DC   X'7F000001'                             @PBA          
INADDR_LOOPBACK_EQU  EQU  X'7F000001'                       @04A                
IN6ADDR_ANY          DC   X'00000000000000000000000000000000'     @PBA          
IN6ADDR_LOOPBACK     DC   X'00000000000000000000000000000001'     @PBA          
IN6ADDR_MAPPEDV4     DC   X'00000000000000000000FFFF'             @D9A          
IN6ADDR_COMPATV4     DC   X'000000000000000000000000'             @D9A          
*                                                                               
***********************************************************************         
*                                                                     *         
*   Equates for Socket options                                        *         
*                                                                     *         
***********************************************************************         
*                                                                               
SOCK#SO_DEBUG        DC   X'00000001'                                           
SOCK#SO_ACCEPTCONN   DC   X'00000002'                                           
SOCK#SO_REUSEADDR    DC   X'00000004'                                           
SOCK#SO_KEEPALIVE    DC   X'00000008'                                           
SOCK#SO_DONTROUTE    DC   X'00000010'                                           
SOCK#SO_BROADCAST    DC   X'00000020'                                           
SOCK#SO_USELOOPBACK  DC   X'00000040'                                           
SOCK#SO_LINGER       DC   X'00000080'                                           
SOCK#SO_OOBINLINE    DC   X'00000100'                                           
SOCK#SO_REUSEPORT   EQU   X'00000200'     To match socket.h       @DHA          
SOCK#SO_REUSEPORT2  EQU   X'00000007'     As implemented in TCPIP @DHA          
*                                                                               
SOCK#SO_SNDBUF       DC   X'00001001'                                           
SOCK#SO_RCVBUF       DC   X'00001002'                                           
SOCK#SO_SNDLOWAT     DC   X'00001003'                                           
SOCK#SO_RCVLOWAT     DC   X'00001004'                                           
SOCK#SO_SNDTIMEO     DC   X'00001005'                                           
SOCK#SO_RCVTIMEO     DC   X'00001006'                                           
SOCK#SO_ERROR        DC   X'00001007'                                           
SOCK#SO_TYPE         DC   X'00001008'                                           
*                                                                               
* Non-standard sockopts                                                         
*                                                                               
SO_PROPAGATEID       DC   X'00004000'                           @D7A            
SO_CLUSTERCONNTYPE   DC   X'00004001'                           @P8A            
SO_SECINFO           DC   X'00004002'                              @D9A         
SO_RECVUSERNAME      EQU  X'00004003'                           @DHA            
*                                                           @04A                
*  EQUated Versions                                         @04A                
*                                                           @04A                
SOCK#SO_DEBUG_EQU       EQU  X'00000001'                    @04A                
SOCK#SO_ACCEPTCONN_EQU  EQU  X'00000002'                    @04A                
SOCK#SO_REUSEADDR_EQU   EQU  X'00000004'                    @04A                
SOCK#SO_KEEPALIVE_EQU   EQU  X'00000008'                    @04A                
SOCK#SO_DONTROUTE_EQU   EQU  X'00000010'                    @04A                
SOCK#SO_BROADCAST_EQU   EQU  X'00000020'                    @04A                
SOCK#SO_USELOOPBACK_EQU EQU  X'00000040'                    @04A                
SOCK#SO_LINGER_EQU      EQU  X'00000080'                    @04A                
SOCK#SO_OOBINLINE_EQU   EQU  X'00000100'                    @04A                
SOCK#SO_SNDBUF_EQU      EQU  X'00001001'                    @04A                
SOCK#SO_RCVBUF_EQU      EQU  X'00001002'                    @04A                
SOCK#SO_SNDLOWAT_EQU    EQU  X'00001003'                    @04A                
SOCK#SO_RCVLOWAT_EQU    EQU  X'00001004'                    @04A                
SOCK#SO_SNDTIMEO_EQU    EQU  X'00001005'                    @04A                
SOCK#SO_RCVTIMEO_EQU    EQU  X'00001006'                    @04A                
SOCK#SO_ERROR_EQU       EQU  X'00001007'                    @04A                
SOCK#SO_TYPE_EQU        EQU  X'00001008'                    @04A                
SO_PROPAGATEID_EQU      EQU  X'00004000'                    @04A                
SO_CLUSTERCONNTYPE_EQU  EQU  X'00004001'                    @04A                
SO_SECINFO_EQU          EQU  X'00004002'                    @04A                
*                                                                               
* SO_CLUSTERCONNTYPE Output Values                                              
*                                                                               
SO_CLUSTERCONNTYPE_NOCONN        EQU  0                         @P8A            
SO_CLUSTERCONNTYPE_NONE          EQU  1                         @P8A            
SO_CLUSTERCONNTYPE_SAME_CLUSTER  EQU  2                         @P8A            
SO_CLUSTERCONNTYPE_SAME_IMAGE    EQU  4                         @P8A            
SO_CLUSTERCONNTYPE_INTERNAL      EQU  8                         @P8A            
*                                                                               
*                                                                               
* IPPROTO_IP Options                                                            
*                                                                               
IP_TOS                    EQU 2                             @P9C@D6A            
IP_MULTICAST_TTL          EQU 3                                 @D6A            
IP_MULTICAST_LOOP         EQU 4                                 @D6A            
IP_ADD_MEMBERSHIP         EQU 5                                 @D6A            
IP_DROP_MEMBERSHIP        EQU 6                                 @D6A            
IP_MULTICAST_IF           EQU 7                             @P9C@D6A            
IP_DEFAULT_MULTICAST_TTL  EQU 1                                 @D6A            
IP_DEFAULT_MULTICAST_LOOP EQU 1                                 @D6A            
IP_MAX_MEMBERSHIPS        EQU 20                                @D6A            
IP_BLOCK_SOURCE           EQU 10                                @DEA            
IP_UNBLOCK_SOURCE         EQU 11                                @DEA            
IP_ADD_SOURCE_MEMBERSHIP  EQU 12                                @DEA            
IP_DROP_SOURCE_MEMBERSHIP EQU 13                                @DEA            
IP_TTL                    EQU 14                                @DMA            
IP_RECVPKTINFO            EQU 102                               @DKA            
*                                                                               
IP_PKTINFO                EQU 101     Ancillary Data Type       @DKA            
***********************************************************************         
*    Multicast Source Filter Structures from RFC 3678                 *         
****************************************************************** @DEA         
         AIF   ('&DSECT' EQ 'NO').B425                             @DEA         
SOCKADDR_STORAGE_STRUCT DSECT ,                                    @DEA         
         AGO   .C425                                               @DEA         
.B425    ANOP  ,                                                   @DEA         
SOCKADDR_STORAGE_STRUCT DS 0D                                      @DEA         
.C425    ANOP  ,                                                   @DEA         
SOCKADDR_STORAGE DS CL128                                          @DEA         
*                                                                               
* setibmsockopt options                                                         
*                                                                               
SOCK#SO_BULKMODE           DC X'00008000'                      @D5A             
SOCK#SO_IGNOREINCOMINGPUSH DC X'00000001'                        @D5A           
SOCK#SO_NONBLOCKLOCAL      DC X'00008001'                        @P7A           
SOCK#SO_IGNORESOURCEVIPA   DC X'00000002'                        @P7A           
*                       Toggles the use of non-VIPA addresses.  When            
*                       enabled, non-VIPA addresses will be used for            
*                       outbound IP packets.                                    
SOCK#SO_OPTMSS             DC X'00008003'                        @P7A           
*                Toggles the use of optimal TCP segment size.                   
*                When enabled, the TCP segment size may be optimally            
*                increased on outbound data transfers.  This may                
*                reduce the amount of TCP outbound and inbound                  
*                acknowledgement packet processing; therefore,                  
*                minimizing CPU consumption.                     @P7A           
SOCK#SO_OPTACK             DC X'00008004'   Optimize Acks        @P7A           
SOCK#SO_EIOIFNEWTP         DC X'00000005'   Notify of new tp     @PAA           
SOCK#SO_ACCEPTECONNABORTED DC X'00000006'   Notify of conn abtd  @PEA           
SOCK#SO_EXCLWRT            DC X'00000007'   Write Serialization  @03A           
*                          Control Stream Write Serialization    @03A           
*                    SetIbmSockOpt option to toggle system supplied             
*                    serialization on TCP stream socket writes.                 
*                    NOTE: This function has been disabled and its @DIC         
*                          use is thus discouraged.  This function @DIC         
*                          may be withdrawn in a future release.   @DIC         
*  EQUated Versions                                         @04A                
SOCK#SO_BULKMODE_EQU           EQU X'00008000'              @04A                
SOCK#SO_IGNOREINCOMINGPUSH_EQU EQU X'00000001'              @04A                
SOCK#SO_NONBLOCKLOCAL_EQU      EQU X'00008001'              @04A                
SOCK#SO_IGNORESOURCEVIPA_EQU   EQU X'00000002'              @04A                
SOCK#SO_OPTMSS_EQU             EQU X'00008003'              @04A                
SOCK#SO_OPTACK_EQU             EQU X'00008004'              @04A                
SOCK#SO_EIOIFNEWTP_EQU         EQU X'00000005'              @04A                
SOCK#SO_ACCEPTECONNABORTED_EQU EQU X'00000006'              @04A                
SOCK#SO_EXCLWRT_EQU            EQU X'00000007'              @04A                
*                                                                               
***********************************************************************         
*                                                                     *         
*   Equates for So_   option values                                   *         
*                                                                     *         
***********************************************************************         
SOCK#SO_SETOPTIONON       DC  X'00000001'                        @PAA           
SOCK#SO_SETOPTIONON_EQU   EQU X'00000001'                        @04A           
SOCK#SO_SETOPTIONOFF      DC  X'00000000'                        @PAA           
SOCK#SO_SETOPTIONOFF_EQU  EQU X'00000000'                        @04A           
***********************************************************************         
*                                                                     *         
*   Equates for IPPROTO_TCP options                                   *         
*                                                                     *         
***********************************************************************         
SOCK#TCP_NODELAY          DC  X'00000001'                        @P4A           
SOCK#TCP_NODELAY_EQU      EQU X'00000001'                        @04A           
SOCK#TCP_KEEPALIVE        DC  X'00000008'                        @P9A           
SOCK#TCP_KEEPALIVE_EQU    EQU X'00000008'                        @04A           
*                                                                               
***********************************************************************         
*                                                                     *         
*   Equates for Socket Port Constant                                  *         
*                                                                     *         
***********************************************************************         
*                                                                               
SOCK#LASTRESERVEPORT   EQU  1023                                 @D2A           
*                                                                               
*                                                                               
         AIF   ('&DSECT' EQ 'NO').B412                           @01A           
IP_MREQ         DSECT ,                                     @P9M@D6A            
         AGO   .C412                                             @01A           
.B412    ANOP  ,                                                 @01A           
IP_MREQ          DS 0F                                           @01A           
.C412    ANOP  ,                                                 @01A           
IMR_MULTIADDR    DS CL4            IP MULTICAST ADDR OF GROUP   @D6A            
IMR_INTERFACE    DS CL4            LOCAL IP ADDR OF INTERFACE   @D6A            
*                                                                               
***********************************************************************         
*                                                                     *         
* IP_MREQ_SOURCE STRUCTURE                                            *         
*                                                                     *         
****************************************************************** @DEA         
         AIF   ('&DSECT' EQ 'NO').B422                             @DEA         
IP_MREQ_SOURCE DSECT ,                                             @DEA         
         AGO   .C422                                               @DEA         
.B422    ANOP  ,                                                   @DEA         
IP_MREQ_SOURCE DS 0F                                               @DEA         
.C422    ANOP   ,                                                  @DEA         
IMRS_MULTIADDR  DS CL4              IP MULTICAST ADDR              @DEA         
IMRS_SOURCEADDR DS CL4              IP SOURCE ADDR                 @DEA         
IMRS_INTERFACE  DS CL4              LOCAL IP ADDR OF INTERFACE     @DEA         
*                                                                  @DEA         
***********************************************************************         
*                                                                     *         
* GROUP_REQ STRUCTURE                                                 *         
*                                                                     *         
****************************************************************** @DEA         
         AIF   ('&DSECT' EQ 'NO').B423                             @DEA         
GROUP_REQ DSECT ,                                                  @DEA         
         AGO   .C423                                               @DEA         
.B423    ANOP  ,                                                   @DEA         
GROUP_REQ DS   0F                                                  @DEA         
.C423    ANOP  ,                                                   @DEA         
GR_INTERFACE DS CL4                 INTERFACE INDEX                @DEA         
         DS    CL4                  PADDING                        @DEA         
GR_GROUP DS    CL(L'SOCKADDR_STORAGE) GROUP ADDRESS                @DEA         
         ORG   GR_GROUP                                            @DEA         
GR_MULTISOCKADDR4 DS CL(SOCK#LEN+SOCK_SIN#LEN)                     @DEA         
         ORG   GR_GROUP                                            @DEA         
GR_MULTISOCKADDR6 DS CL(SOCK#LEN+SOCK_SIN6#LEN)                    @DEA         
*                                                                  @DEA         
***********************************************************************         
*                                                                     *         
* GROUP_SOURCE_REQ STRUCTURE                                          *         
*                                                                     *         
****************************************************************** @DEA         
         AIF   ('&DSECT' EQ 'NO').B424                             @DEA         
GROUP_SOURCE_REQ DSECT ,                                           @DEA         
         AGO   .C424                                               @DEA         
.B424    ANOP  ,                                                   @DEA         
GROUP_SOURCE_REQ DS 0D                                             @DEA         
.C424    ANOP  ,                                                   @DEA         
GSR_INTERFACE DS CL4                INTERFACE INDEX                @DEA         
         DS    CL4                  PADDING                        @DEA         
GSR_GROUP DS   CL(L'SOCKADDR_STORAGE) GROUP ADDRESS                @DEA         
         ORG   GSR_GROUP                                           @DEA         
GSR_GROUPADDR4 DS CL(SOCK#LEN+SOCK_SIN#LEN)                        @DEA         
         ORG   GSR_GROUP                                           @DEA         
GSR_GROUPADDR6 DS CL(SOCK#LEN+SOCK_SIN6#LEN)                       @DEA         
GSR_SOURCE DS  CL(L'SOCKADDR_STORAGE) SOURCE ADDRESS               @DEA         
         ORG   GSR_SOURCE                                          @DEA         
GSR_SOURCEADDR4 DS CL(SOCK#LEN+SOCK_SIN#LEN)                       @DEA         
         ORG   GSR_SOURCE                                          @DEA         
GSR_SOURCEADDR6 DS CL(SOCK#LEN+SOCK_SIN6#LEN)                      @DEA         
*                                                                  @DEA         
***********************************************************************         
*                                                                     *         
*   Structure for So_Linger                                           *         
*                                                                 @D3A*         
***********************************************************************         
*                                                                               
         AIF   ('&DSECT' EQ 'NO').B413                           @01A           
SOCK_LINGER_STRUCT DSECT ,                                         @P9A         
         AGO   .C413                                             @01A           
.B413    ANOP  ,                                                 @01A           
SOCK_LINGER_STRUCT   DS   0F                                     @01A           
.C413    ANOP  ,                                                 @01A           
SOCK_L_ONOFF         DS    F          On/Off indicator         @P9M@D3A         
SOCK_L_LINGER        DS    F          Length of time to linger @P9M@D3C         
***********************************************************************         
*                                                                     *         
*   Equates for IPPROTO_IPV6 Options                             @D9A *         
*                                                                     *         
***********************************************************************         
SOCK#IPV6_UNICAST_HOPS    EQU 3                                  @D9A           
SOCK#IPV6_MULTICAST_LOOP  EQU 4                                                 
SOCK#IPV6_JOIN_GROUP      EQU 5                                                 
SOCK#IPV6_LEAVE_GROUP     EQU 6                                                 
SOCK#IPV6_MULTICAST_IF    EQU 7                                                 
SOCK#IPV6_MULTICAST_HOPS  EQU 9                                                 
                                                                                
SOCK#IPV6_V6ONLY          EQU 10                                                
SOCK#IPV6_HOPLIMIT        EQU 11            ANC DATA ONLY                       
SOCK#IPV6_PATHMTU         EQU 12                                                
SOCK#IPV6_PKTINFO         EQU 13            ANC DATA ONLY                       
SOCK#IPV6_RECVHOPLIMIT    EQU 14                                                
SOCK#IPV6_RECVPKTINFO     EQU 15                                                
SOCK#IPV6_RECVPATHMTU     EQU 16                                                
SOCK#IPV6_REACHCONF       EQU 17                                                
SOCK#IPV6_USE_MIN_MTU     EQU 18                                                
SOCK#IPV6_CHECKSUM        EQU 19                                                
                                                                                
SOCK#IPV6_NEXTHOP          EQU 20                                               
SOCK#IPV6_RTHDR            EQU 21                                               
SOCK#IPV6_HOPOPTS          EQU 22                                               
SOCK#IPV6_DSTOPTS          EQU 23                                               
SOCK#IPV6_RTHDRDSTOPTS     EQU 24                                               
SOCK#IPV6_RECVRTHDR        EQU 25                                               
SOCK#IPV6_RECVHOPOPTS      EQU 26                                               
*SOCK#IPV6_RECVRTHDRDSOPTS EQU 27                                @DCD           
SOCK#IPV6_RECVDSTOPTS      EQU 28                                               
SOCK#IPV6_DONTFRAG         EQU 29                                @DCA           
SOCK#IPV6_TCLASS           EQU 30                                @DCA           
SOCK#IPV6_RECVTCLASS       EQU 31                                @DCA           
SOCK#IPV6_ADDR_PREFERENCES EQU 32                                @DJA           
                                                                                
SOCK#IPV6_RTHDR_TYPE_0     EQU 0        IPv6 Routing hdr type 0  @D9A           
***********************************************************************         
*   Protocol Independent Options                                 @DEA *         
***********************************************************************         
SOCK#MCAST_JOIN_GROUP         EQU 40                             @DEA           
SOCK#MCAST_LEAVE_GROUP        EQU 41                             @DEA           
SOCK#MCAST_JOIN_SOURCE_GROUP  EQU 42                             @DEA           
SOCK#MCAST_LEAVE_SOURCE_GROUP EQU 43                             @DEA           
SOCK#MCAST_BLOCK_SOURCE       EQU 44                             @DEA           
SOCK#MCAST_UNBLOCK_SOURCE     EQU 45                             @DEA           
***********************************************************************         
*                                                                     *         
*   Equates for IPPROTO_ICMPV6 options                           @D9A *         
*                                                                     *         
***********************************************************************         
SOCK#ICMP6_FILTER          EQU 1                                                
                                                                                
***********************************************************************         
*                                                                     *         
*   Structure for Packet Source/Destination Information - IPv4   @DKA *         
*                                                                     *         
***********************************************************************         
*                                                                               
         AIF   ('&DSECT' EQ 'NO').B414A                                         
IN_PKTINFO        DSECT ,                                                       
         AGO   .C414A                                                           
.B414A   ANOP  ,                                                                
IN_PKTINFO          DS   0C                                                     
.C414A   ANOP  ,                                                                
IPI_ADDR            DS    CL4        IPv4 Addr                                  
IPI_IFINDEX         DS    F          Interface Index                            
                                                                                
***********************************************************************         
*                                                                     *         
*   Structure for Packet Source/Destination Information - IPv6   @D9A *         
*                                                                     *         
***********************************************************************         
*                                                                               
         AIF   ('&DSECT' EQ 'NO').B414                                          
IN6_PKTINFO        DSECT ,                                                      
         AGO   .C414                                                            
.B414    ANOP  ,                                                                
IN6_PKTINFO          DS   0F                                                    
.C414    ANOP  ,                                                                
IPI6_ADDR            DS    CL16       IPv6 Addr                                 
IPI6_IFINDEX         DS    F          Interface Index                           
                                                                                
***********************************************************************         
*                                                                     *         
*   Structure for Multicast Mreq                                 @D9A *         
*                                                                     *         
***********************************************************************         
*                                                                               
         AIF   ('&DSECT' EQ 'NO').B415                                          
IPV6_MREQ          DSECT ,                                                      
         AGO   .C415                                                            
.B415    ANOP  ,                                                                
IPV6_MREQ            DS   0F                                                    
.C415    ANOP  ,                                                                
IPV6MR_MULTIADDR     DS    CL16       IPv6 Addr                                 
IPV6MR_INTERFACE     DS    F          Interface index                           
                                                                                
***********************************************************************         
*                                                                     *         
*   Structure for CInet Interface Index                          @D9A *         
*                                                                     *         
***********************************************************************         
*                                                                               
         AIF   ('&DSECT' EQ 'NO').B416                                          
IFINDEX            DSECT ,                                                      
         AGO   .C416                                                            
.B416    ANOP  ,                                                                
IFINDEX              DS   0F                                                    
.C416    ANOP  ,                                                                
IFI_TDX              DS    H          Cinet Td Index                            
IFI_INDEX            DS    H          Stacks  Interface Index                   
                                                                                
***********************************************************************         
*                                                                     *         
*   Structure for Icmp6 Filtering                                @D9A *         
*                                                                     *         
***********************************************************************         
*                                                                               
         AIF   ('&DSECT' EQ 'NO').B417                                          
ICMP6_FILTER       DSECT ,                                                      
         AGO   .C417                                                            
.B417    ANOP  ,                                                                
ICMP6_FILTER         DS    0F                                    @DBC           
.C417    ANOP  ,                                                                
ICMP6_FILT           DS    8F         8*32 = 256 bits                           
*                                                                               
*                                                                               
ICMP6_DST_UNREACH       EQU   1                                  @DBA           
ICMP6_PACKET_TOO_BIG    EQU   2                                  @DBA           
ICMP6_TIME_EXCEEDED     EQU   3                                  @DBA           
ICMP6_PARAM_PROB        EQU   4                                  @DBA           
ICMP6_INFOMSG_MASK      EQU 128                                  @DBA           
ICMP6_ECHO_REQUEST      EQU 128                                  @DBA           
ICMP6_ECHO_REPLY        EQU 129                                  @DBA           
MLD_LISTENER_QUERY      EQU 130                                  @DBA           
MLD_LISTENER_REPORT     EQU 131                                  @DBA           
MLD_LISTENER_REDUCTION  EQU 132                                  @DBA           
ND_ROUTER_SOLICIT       EQU 133                                  @DBA           
ND_ROUTER_ADVERT        EQU 134                                  @DBA           
ND_NEIGHBOR_SOLICIT     EQU 135                                  @DBA           
ND_NEIGHBOR_ADVERT      EQU 136                                  @DBA           
ND_REDIRECT             EQU 137                                  @DBA           
*                                                                               
***********************************************************************         
*                                                                     *         
*   Routing header                                               @DCA *         
*                                                                     *         
***********************************************************************         
*                                                                               
         AIF   ('&DSECT' EQ 'NO').B418                                          
IP6_RTHDR          DSECT ,                                                      
         AGO   .C418                                                            
.B418    ANOP  ,                                                                
IP6_RTHDR            DS   0F                                                    
.C418    ANOP  ,                                                                
IP6R_NXT             DS   BL1         Next header                               
IP6R_LEN             DS   BL1         Length in units of 8 octets               
IP6R_TYPE            DS   BL1         Routing type                              
IP6R_SEGLEFT         DS   BL1         Segments left                             
*                                                                               
***********************************************************************         
*                                                                     *         
*   Type 0 Routing header                                        @DCA *         
*                                                                     *         
***********************************************************************         
*                                                                               
         AIF   ('&DSECT' EQ 'NO').B419                                          
IP6_RTHDR0         DSECT ,                                                      
         AGO   .C419                                                            
.B419    ANOP  ,                                                                
IP6_RTHDR0           DS   0F                                                    
.C419    ANOP  ,                                                                
IP6R0_NXT            DS   BL1         Next header                               
IP6R0_LEN            DS   BL1         Length in units of 8 octets               
IP6R0_TYPE           DS   BL1         Always zero                               
IP6R0_SEGLEFT        DS   BL1         Segments left                             
IP6R0_RESERVED       DS   FL4         Reserved field                            
IP6R0_ADDR           DS   0CL16       Upto 127 in6_addr          @DDA           
*                                                                               
***********************************************************************         
*                                                                     *         
*   Hop-by-Hop options header                                    @DCA *         
*                                                                     *         
***********************************************************************         
*                                                                               
         AIF   ('&DSECT' EQ 'NO').B41A                                          
IP6_HBH            DSECT ,                                                      
         AGO   .C41A                                                            
.B41A    ANOP  ,                                                                
IP6_HBH              DS   0F                                                    
.C41A    ANOP  ,                                                                
IP6H_NXT             DS   BL1         Next header                               
IP6H_LEN             DS   BL1         Length in units of 8 octets               
IP6H_OPTIONS         DS   0C          Options                    @DDA           
*                                                                               
***********************************************************************         
*                                                                     *         
*   Destination options header                                   @DCA *         
*                                                                     *         
***********************************************************************         
*                                                                               
         AIF   ('&DSECT' EQ 'NO').B41B                                          
IP6_DEST           DSECT ,                                                      
         AGO   .C41B                                                            
.B41B    ANOP  ,                                                                
IP6_DEST             DS   0F                                                    
.C41B    ANOP  ,                                                                
IP6D_NXT             DS   BL1         Next header                               
IP6D_LEN             DS   BL1         Length in units of 8 octets               
IP6D_OPTIONS         DS   0C          Options                    @DDA           
*                                                                               
***********************************************************************         
*                                                                     *         
*   MTU Information                                              @DCA *         
*                                                                     *         
***********************************************************************         
*                                                                               
         AIF   ('&DSECT' EQ 'NO').B41C                                          
IP6_MTUINFO        DSECT ,                                                      
         AGO   .C41C                                                            
.B41C    ANOP  ,                                                                
IP6_MTUINFO          DS   0F                                                    
.C41C    ANOP  ,                                                                
IP6M_ADDR            DS   CL28        Dst address including zone ID             
IP6M_MTU             DS   F           Path MTU in host byte order               
*                                                                               
***********************************************************************         
*                                                                     *         
*   IPv6 Options Header                                          @DCA *         
*                                                                     *         
***********************************************************************         
*                                                                               
         AIF   ('&DSECT' EQ 'NO').B41D                                          
IP6_OPT            DSECT ,                                                      
         AGO   .C41D                                                            
.B41D    ANOP  ,                                                                
IP6_OPT              DS   0F                                                    
.C41D    ANOP  ,                                                                
IP6O_TYPE            DS   BL1                                                   
IP6O_LEN             DS   BL1                                                   
*                                                                               
IP6OPT_TYPE                EQU x'C0'                             @DCA           
IP6OPT_TYPE_SKIP           EQU x'00'                             @DCA           
IP6OPT_TYPE_DISCARD        EQU x'40'                             @DCA           
IP6OPT_TYPE_FORCEICMP      EQU x'80'                             @DCA           
IP6OPT_TYPE_ICMP           EQU x'C0'                             @DCA           
IP6OPT_MUTABLE             EQU x'20'                             @DCA           
*                                                                               
IP6OPT_PAD1                EQU x'00'                             @DCA           
IP6OPT_PADN                EQU x'01'                             @DCA           
*                                                                               
IP6OPT_JUMBO               EQU x'C2'                             @DCA           
IP6OPT_NSAP_ADDR           EQU x'C3'                             @DCA           
IP6OPT_TUNNEL_LIMIT        EQU x'04'                             @DCA           
IP6OPT_ROUTER_ALERT        EQU x'05'                             @DCA           
*                                                                               
***********************************************************************         
*                                                                     *         
*   Jumbo Payload Option                                         @DCA *         
*                                                                     *         
***********************************************************************         
*                                                                               
         AIF   ('&DSECT' EQ 'NO').B41E                                          
IP6_OPT_JUMBO      DSECT ,                                                      
         AGO   .C41E                                                            
.B41E    ANOP  ,                                                                
IP6_OPT_JUMBO        DS   0F                                                    
.C41E    ANOP  ,                                                                
IP6OJ_TYPE           DS   BL1                                                   
IP6OJ_LEN            DS   BL1                                                   
IP6OJ_JUMBO_LEN      DS  4BL1                                                   
*                                                                               
IP6OPT_JUMBO_LEN           EQU 6                                                
*                                                                               
***********************************************************************         
*                                                                     *         
*   NSAP Address Option                                          @DCA *         
*                                                                     *         
***********************************************************************         
*                                                                               
         AIF   ('&DSECT' EQ 'NO').B41F                                          
IP6_OPT_NSAP       DSECT ,                                                      
         AGO   .C41F                                                            
.B41F    ANOP  ,                                                                
IP6_OPT_NSAP         DS   0F                                                    
.C41F    ANOP  ,                                                                
IP6ON_TYPE           DS   BL1                                                   
IP6ON_LEN            DS   BL1                                                   
IP6ON_SRC_NSAP_LEN   DS   BL1                                                   
IP6ON_DST_NSAP_LEN   DS   BL1                                                   
IP6ON_SRC_NSAP       DS   0C                                                    
IP6ON_DST_NSAP       DS   0C                                                    
*                                                                               
***********************************************************************         
*                                                                     *         
*   Tunnel Limit Option                                          @DCA *         
*                                                                     *         
***********************************************************************         
*                                                                               
         AIF   ('&DSECT' EQ 'NO').B420                                          
IP6_OPT_TUNNEL     DSECT ,                                                      
         AGO   .C420                                                            
.B420    ANOP  ,                                                                
IP6_OPT_TUNNEL       DS   0F                                                    
.C420    ANOP  ,                                                                
IP6OT_TYPE           DS   BL1                                                   
IP6OT_LEN            DS   BL1                                                   
IP6OT_ENCAP_LIMIT    DS   BL1                                                   
*                                                                               
***********************************************************************         
*                                                                     *         
*   Router Alert Option                                          @DCA *         
*                                                                     *         
***********************************************************************         
*                                                                               
         AIF   ('&DSECT' EQ 'NO').B421                                          
IP6_OPT_ROUTER     DSECT ,                                                      
         AGO   .C421                                                            
.B421    ANOP  ,                                                                
IP6_OPT_ROUTER       DS   0F                                                    
.C421    ANOP  ,                                                                
IP6OR_TYPE           DS   BL1                                                   
IP6OR_LEN            DS   BL1                                                   
IP6OR_VALUE          DS  2BL1                                                   
*                                                                               
***********************************************************************         
*                                                                     *         
*   Router alert values (in network byte order)                  @DCA *         
*                                                                     *         
***********************************************************************         
*                                                                               
IP6_ALERT_MLD             EQU  0                                                
IP6_ALERT_RSVP            EQU  1                                                
IP6_ALERT_AN              EQU  2                                                
*                                                                               
***********************************************************************         
*                                                                               
*  Source address selection preferences                          @DJA           
*                                                                               
*    Used with setsockopt/getsockopt(Sock#IPV6_ADDR_PREFERENCES)                
*      and BPX1PCT(PC#IsSrcAddr) for inet6_is_srcaddr() function                
*                                                                               
***********************************************************************         
*                                                                               
IPV6_PREFER_SRC_HOME    EQU x'00000001'  Prefer home address                    
IPV6_PREFER_SRC_COA     EQU x'00000002'  Prefer care of address                 
IPV6_PREFER_SRC_TMP     EQU x'00000004'  Prefer temporary address               
IPV6_PREFER_SRC_PUBLIC  EQU x'00000008'  Prefer public address                  
IPV6_PREFER_SRC_CGA     EQU x'00000010'  Prefer Cryptographically               
*                                        generated address                      
IPV6_PREFER_SRC_NONCGA  EQU x'00000020'  Prefer non-cryptographically           
*                                        generated address                      
***********************************************************************         
*                                                                               
*  BPX1PCT(PC#IsSrcAddr) Argument for inet6_is_srcaddr()         @DJA           
*                                                                               
*     inet6_is_srcaddr(IsSrcAddrIpAddr, IsSrcAddrFlags)                         
*     is implemented with BPX1PCT(' ',PC#IsSrcAddr,ISSRCADDR#LEN,               
*                                     ISSRCADDR, Rv, Rc, Rsn)                   
*     where the ISSRCADDR argument is defined as follows:                       
*                                                                               
***********************************************************************         
         AIF   ('&DSECT' EQ 'NO').B426                                          
ISSRCADDR         DSECT ,                                                       
         AGO   .C426                                                            
.B426    ANOP  ,                                                                
ISSRCADDR         DS  0F                                                        
.C426    ANOP  ,                                                                
ISSRCADDRVER      DS XL1           Version. 1                                   
ISSRCADDRVER1     EQU 1            Version value                                
                  DS XL3           Reserved. Must be 0                          
ISSRCADDRIPADDR   DS CL(SOCK#LEN+SOCK_SIN6#LEN)  sockaddr_in6                   
ISSRCADDRFLAGS    DS F             Flags. See IPV6_PREFER_SRC_*                 
                  DS 6F            Reserved. Must be 0                          
*                                                                               
ISSRCADDR#LEN     EQU *-ISSRCADDR  Length of ISSRCADDR area                     
*                                                                               
** BPXYSOCK End                                                                 
         SPACE 3                                                                
         AIF   ('&LIST' EQ 'YES').E411                                          
         POP   PRINT                                                            
.E411    ANOP  ,                                                                
         MEND  ,                  Terminating PL/X comment           */         
*                                                                               
*%SOCKPLX : ;                                                                   
* %DCL SOCKBAS2 CHAR EXT;                                     /* @P5A*/         
* %DCL ASABEGIN_AMODE CHAR EXTERNAL;                          /* @DLA*/         
* %DCL PTR_64 CHAR EXTERNAL;                                  /* @DLA*/         
* %IF SOCKBAS2 ^='' & SOCKBASE = '' %THEN                     /* @P5A*/         
*   %SOCKBASE = SOCKBAS2;                                     /* @P5A*/         
* %IF Translate(SOCKBASE) ^= 'TYPEONLY' %THEN                 /* @P3A*/         
*  %DO;                                                       /* @P3A*/         
*   %IF SOCKBASE='' %THEN                                                       
*    %DO;                                                                       
*     %SOCKBASE='Based(SockPtr)';                                               
*    %END;                                                                      
*   %IF TRANSLATE(SOCKBASE)='BASED(SOCKPTR)'  %THEN                             
*    %DO;                                                                       
*     %IF ASABEGIN_AMODE='64' ! PTR_64='YES'                  /* @DLA*/         
*      %THEN                                                  /* @DLA*/         
*      %DO;                                                   /* @DLA*/         
*        DCL SockPtr Ptr(64);                                 /* @DLA*/         
*      %END;                                                  /* @DLA*/         
*     %ELSE                                                   /* @DLA*/         
*      %DO;                                                   /* @DLA*/         
*        DCL SockPtr Ptr(31);                                                   
*      %END;                                                  /* @DLA*/         
*    %END;                                                                      
*   %IF SOCKVBSE='' %THEN                                     /* @P3M*/         
*    %DO;                                                     /* @P3M*/         
*     %SOCKVBSE='Based(ADDR(Sock_data)) Via(Alet(Sock_data))';/* @P3M*/         
*    %END;                                                    /* @P3M*/         
*                                                                               
*   /*****************************************************************/         
*   /*                                                               */         
*   /* Declare an instance of a SockAddr Header                  @P3A*/         
*   /*                                                               */         
*   /*****************************************************************/         
*   Dcl SockAddr IsA(Sock_Header) SOCKBASE BDY(WORD);         /* @P3A*/         
*                                                                               
*   /*****************************************************************/         
*   /*                                                               */         
*   /* Declare an instance of the Inet Part of the rest of the       */         
*   /* SockAddr.                                                     */         
*   /*                                                           @P3A*/         
*   /*****************************************************************/         
*   DCL Sock_sin IsA(Sock_Inet_Part)  SOCKVBSE;               /* @P3M*/         
*                                                                               
*   /*****************************************************************/         
*   /*                                                               */         
*   /* Declare an instance of the Inet6 Part of the rest of the      */         
*   /* SockAddr.                                                     */         
*   /*                                                           @PBA*/         
*   /*****************************************************************/         
*   DCL Sock_sin6 IsA(Sock_Inet6_Part)  SOCKVBSE;             /* @PBA*/         
*                                                                               
*   /*****************************************************************/         
*   /*                                                               */         
*   /* Declare an instance of the Unix Part of the rest of the       */         
*   /* SockAddr.                                                     */         
*   /*                                                           @P3A*/         
*   /*****************************************************************/         
*   Dcl Sock_sun IsA(Sock_Unix_Part) SOCKVBSE;                /* @P3M*/         
*                                                                               
*  %END;                                                      /* @P3A*/         
*                                                                               
*/********************************************************************/         
*/*                                                                  */         
*/* Declare the types for both the Inet and Unix SockAddr's.         */         
*/* In order to do this, also declare types for each of the          */         
*/* parts - the Common Header, the Inet specific part and the        */         
*/* Unix specific part.                                              */         
*/*                                                              @P3A*/         
*/********************************************************************/         
*DCL                                                                            
* 1    Sock_Inet_SockAddr   Type,                             /* @P3A*/         
*  3   Sock_Inet_Hdr     IsA(Sock_Header),                    /* @P3A*/         
*  3   Sock_Inet_Rest    IsA(Sock_Inet_Part);                 /* @P3A*/         
*                                                                               
*DCL                                                          /* @PBA*/         
* 1    Sock_Inet6_SockAddr  Type,                             /* @PBA*/         
*  3   Sock_Inet6_Hdr    IsA(Sock_Header),                    /* @PBA*/         
*  3   Sock_Inet6_Rest   IsA(Sock_Inet6_Part);                /* @PBA*/         
*                                                                               
*DCL                                                                            
* 1    Sock_Unix_SockAddr   Type,                             /* @P3A*/         
*  3   Sock_Unix_Hdr     IsA(Sock_Header),                    /* @P3A*/         
*  3   Sock_Unix_Rest    IsA(Sock_Unix_Part);                 /* @P3A*/         
*                                                                               
*DCL                                                                            
* 1    Sock_Header          Type,                             /* @P3C*/         
*  3   Sock_len     Fixed(8),    /* Address length - this value is:  */         
*                                /*   For AF_INET  - Ignored.    @PGC*/         
*                                /*   For AF_INET6 - Ignored.    @PGC*/         
*                                /*   For AF_UNIX  - Must be the     */         
*                                /*            length of the name    */         
*                                /*            in Sock_sun_Name. @PCC*/         
*  3   Sock_family  Fixed(8),    /* Address family               @P0C*/         
*  3   Sock_data    Char(0);     /* Protocol specific area           */         
*                                                                               
*               /* Note: The Sock_len field is from the BSD sa_len              
*                        field which was not included in POSIX so we            
*                        can't require its use in z/OS UNIX.     @PGA*/         
*DCL                                                                            
* SOCKADDR#Len Fixed(24) Constant(Length(Sock_Header));/* len of  @P3C          
*                                                      Sockaddr hdr  */         
*/********************************************************************/         
*/*                                                                  */         
*/* Af_Inet Socket Address Structure                                 */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
*DCL 1 Sock_Inet_Part   Type,       /* Af_Inet specific address                 
*                                      structure                     */         
*      3 Sock_sin_Port  Fixed(16),  /* Port number used by the appl  */         
*      3 Sock_sin_Addr  Char(4),    /* Inet addr (netid)             */         
*      3 *              Char(8) ;   /* unused                        */         
*                                                                               
*DCL Sock_sin#Len   Fixed(24) Constant(LENGTH(Sock_Inet_Part));/*@P3C*/         
*                                                                               
*/********************************************************************/         
*/*                                                                  */         
*/* Af_Inet6 Socket Address Structure                            @PBA*/         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
*DCL 1 Sock_Inet6_Part  Type,       /* Af_Inet6 specific address @PBA*/         
*      3 Sock_sin6_Port     Fixed(16),  /* Port number           @PBA*/         
*      3 Sock_sin6_FlowInfo Char(4),    /* Flow information      @PBA*/         
*      3 Sock_sin6_Addr     Char(16),   /* Inet6 addr (netid)    @PBA*/         
*        5 * Union ,                                                            
*          7 Sock_sin6_addr_Word(4) Char(4),                                    
*          7 Sock_sin6_addr_MappedV4 Char(12),                                  
*      3 Sock_sin6_Scope_Id Char(4);    /* Scope id              @PBA*/         
*                                                                               
*                                                                               
*DCL Sock_sin6#Len Fixed(24) Constant(LENGTH(Sock_Inet6_Part)); ]@PBA           
*                                                                               
*/********************************************************************/         
*/*                                                                  */         
*/* Af_Unix Socket Address Structure                                 */         
*/*                                                                  */         
*/********************************************************************/         
*                                                                               
*Dcl 1 Sock_Unix_Part      Type,     /* Af_Unix specific address                
*                                        structure                   */         
*/*  Deleted field use SOCK_LEN instead  Length of the path name1@P0D*/         
*      3 Sock_sun_Name     Char(108); /* Path name of the socket @P0C*/         
*/*  Length of 108 matchs RS/6000 maximum selection              @P0A*/         
*                                                                               
*Dcl Sock_sun#Len   Fixed(24) Constant(LENGTH(Sock_Unix_Part));/*@P3C*/         
*                                                                               
*/********************************************************************/         
*/*                                                                  */         
*/* Structure for So_Linger                                          */         
*/*                                                              @D3A*/         
*/********************************************************************/         
*                                                                               
* Dcl 1 Sock_Linger_Struct Based,                                               
*       3 Sock_L_OnOff   Fixed(32),  /* On/Off indicator         @D3A*/         
*       3 Sock_L_Linger  Fixed(32);  /* Length of time to linger @D3C*/         
*                                                                               
* /*******************************************************************/         
* /* Declares for address families                                   */         
* /*   Changed from Fixed(32) to Fixed(8) to match Sock_Family 19@P0C*/         
* /*   and back to Fixed(32) since constants will be truncated 20@P6C*/         
* /*******************************************************************/         
*                                                                               
* Dcl AF_Unspec     Fixed(32) Constant(0),  /* Unspecified           */         
*     AF_Unix       Fixed(32) Constant(1),  /* Local to host - pipes */         
*     AF_Local      Fixed(32) Constant(1),  /* Local to host    @DOA */         
*     AF_Inet       Fixed(32) Constant(2),  /* Internetwork: UDP, TCP*/         
*     AF_ImpLink    Fixed(32) Constant(3),  /* Arpanet imp addresses */         
*     AF_Pup        Fixed(32) Constant(4),  /* pup protocols: BSP    */         
*     AF_Chaos      Fixed(32) Constant(5),  /* mit CHAOS protocols   */         
*     AF_NS         Fixed(32) Constant(6),  /* Xerox NS protocols    */         
*     AF_NBS        Fixed(32) Constant(7),  /* nbs protocols         */         
*     AF_Ecma       Fixed(32) Constant(8),  /* European computer man.*/         
*     AF_DataKit    Fixed(32) Constant(9),  /* datakit protocols     */         
*     AF_CCITT      Fixed(32) Constant(10), /* CCITT protocols: X.25 */         
*     AF_SNA        Fixed(32) Constant(11), /* IBM SNA               */         
*     AF_DECnet     Fixed(32) Constant(12), /* DECNet                */         
*     AF_DLI        Fixed(32) Constant(13), /* Direct data link int  */         
*     AF_LAT        Fixed(32) Constant(14), /* LAT                   */         
*     AF_Hylink     Fixed(32) Constant(15), /* NSC Hyperchannel      */         
*     AF_AppleTalk  Fixed(32) Constant(16), /* Apple Talk            */         
*     AF_Iucv       Fixed(32) Constant(17), /* IBM IUCV              */         
*     AF_ESCON      Fixed(32) Constant(18), /* ESCON UDP         @D4A*/         
*     AF_Inet6      Fixed(32) Constant(19), /* IPv6              @P8A*/         
*     AF_Route      Fixed(32) Constant(20), /* Routing Sockets   @P8A*/         
*                                                                               
*     AF_Max        Fixed(32) Constant(21); /*                   @P8C*/         
*                                                                               
* /*******************************************************************/         
* /* Declares for protocol                                       @P2A*/         
* /*******************************************************************/         
*                                                                               
* Dcl IPPROTO_IP     Fixed(32) Constant(0),  /* default protocol @P2A*/         
*     IPPROTO_TCP    Fixed(32) Constant(6),  /* tcp              @P2A*/         
*     IPPROTO_UDP    Fixed(32) Constant(17), /* user datagram    @P2A*/         
*     IPPROTO_IPV6   Fixed(32) Constant(41), /* IPv6             @PBA*/         
*     IPPROTO_ICMPV6 Fixed(32) Constant(58); /* IPv6 ICMP        @D9A*/         
*                                                                               
* Dcl IPPROTO_HOPOPTS  Fixed(32) Constant(0),                  /*@DAA*/         
*     IPPROTO_ROUTING  Fixed(32) Constant(43),                 /*@DAA*/         
*     IPPROTO_FRAGMENT Fixed(32) Constant(44),                 /*@DAA*/         
*     IPPROTO_ESP      Fixed(32) Constant(50),                 /*@DAA*/         
*     IPPROTO_AH       Fixed(32) Constant(51),                 /*@DAA*/         
*     IPPROTO_NONE     Fixed(32) Constant(59),                 /*@DAA*/         
*     IPPROTO_DSTOPTS  Fixed(32) Constant(60);                 /*@DAA*/         
*                                                                               
* /*******************************************************************/         
* /* Declares for setpeer options                                    */         
* /*******************************************************************/         
*                                                                               
* Dcl Sock#SO_SET        Fixed(32) Constant(200x);                              
* Dcl Sock#SO_UNSET      Fixed(32) Constant(400x);                              
*                                                                               
* /*******************************************************************/         
* /* Declares for socket types                                       */         
* /*******************************************************************/         
* Dcl Sock#_Stream    Fixed(32) Constant(1);                                    
* Dcl Sock#_Dgram     Fixed(32) Constant(2);                                    
* Dcl Sock#_Raw       Fixed(32) Constant(3);                                    
* Dcl Sock#_Rdm       Fixed(32) Constant(4);                                    
* Dcl Sock#_SeqPacket Fixed(32) Constant(5);                                    
*                                                                               
* /*******************************************************************/         
* /* Declares for Dimension   (socket/socketpair syscall)            */         
* /*******************************************************************/         
* Dcl Sock#Dim_Socket     Fixed(31) Constant(1);                                
* Dcl Sock#Dim_Socketpair Fixed(31) Constant(2);                                
* Dcl Sock#Dim_SocketWAffinity     Fixed(31) Constant(3);      /*@02A*/         
* Dcl Sock#Dim_SocketpairWAffinity Fixed(31) Constant(4);      /*@02A*/         
*                                                                               
* /*******************************************************************/         
* /* Declares for getname option                                     */         
* /*******************************************************************/         
* Dcl Sock#GnmOptGetPeerName  Fixed(32) Constant(1);                            
* Dcl Sock#GnmOptGetSockName  Fixed(32) Constant(2);                            
*                                                                               
* /*******************************************************************/         
* /* Declares for Sockopt                                            */         
* /*******************************************************************/         
* Dcl Sock#OptOptGetSockOpt    Fixed(32) Constant(1);                           
* Dcl Sock#OptOptSetSockOpt    Fixed(32) Constant(2);                           
* Dcl Sock#OptOptSetIBMSockOpt Fixed(32) Constant(3);        /* @D5A */         
*                                                                               
* /*******************************************************************/         
* /* Declares for Shutdown options                                   */         
* /*******************************************************************/         
* Dcl Sock#ShutdownRead       Fixed(32) Constant(0);                            
* Dcl Sock#ShutdownWrite      Fixed(32) Constant(1);                            
* Dcl Sock#ShutdownBoth       Fixed(32) Constant(2);                            
*                                                                               
* /*******************************************************************/         
* /* Declare for Level Number for Socket Options                     */         
* /*******************************************************************/         
* Dcl Sock#Sol_Socket         Fixed(32) Constant('0000FFFF'x);/* @P6C*/         
*                                                                               
* /*******************************************************************/         
* /* Declare for InAddr_Any for Bind requests                    @P1A*/         
* /*******************************************************************/         
* Dcl InAddr_Any              Bit(32) Constant('00000000'x);  /* @P1A*/         
* Dcl InAddr_Loopback         Bit(32) Constant('7F000001'x);  /* @PBA*/         
* Dcl In6Addr_Any             Bit(128)                        /* @PBA*/         
*            Constant('00000000000000000000000000000000'x);   /* @PBA*/         
* Dcl In6Addr_Loopback        Bit(128)                        /* @PBA*/         
*            Constant('00000000000000000000000000000001'x);   /* @PBA*/         
*                                                                               
* Dcl In6Addr_MappedV4        Char(12)                        /* @D9A*/         
*            Constant('00000000000000000000FFFF'x);           /* @D9A*/         
*                                                                               
* Dcl In6Addr_CompatV4        Char(12)                        /* @DAA*/         
*            Constant('000000000000000000000000'x);           /* @DAA*/         
* /*******************************************************************/         
* /* Declare Socket options - for setsockopt() and getsockopt()      */         
* /*******************************************************************/         
* Dcl Sock#So_Debug           Fixed(32) Constant(1);                            
* Dcl Sock#So_AcceptConn      Fixed(32) Constant(2);                            
* Dcl Sock#So_ReuseAddr       Fixed(32) Constant(4);                            
* Dcl Sock#So_KeepAlive       Fixed(32) Constant(8);                            
* Dcl Sock#So_DontRoute       Fixed(32) Constant(10x);                          
* Dcl Sock#So_Broadcast       Fixed(32) Constant(20x);                          
* Dcl Sock#So_UseLoopBack     Fixed(32) Constant(40x);                          
* Dcl Sock#So_Linger          Fixed(32) Constant(80x);                          
* Dcl Sock#So_OOBInline       Fixed(32) Constant(100x);                         
* ] So_ReusePort was defined in socket.h as 200x but implemented   @DHA         
* ] in TCPIP as 7 so they now support both values.                 @DHA         
* Dcl Sock#So_ReusePort       Fixed(32) Constant(200x); ] socket.h @DHA         
* Dcl Sock#So_ReusePort2      Fixed(32) Constant(7);    ] TCPIP    @DHA         
*                                                                               
* Dcl Sock#So_SndBuf          Fixed(32) Constant(1001x);                        
* Dcl Sock#So_RcvBuf          Fixed(32) Constant(1002x);                        
* Dcl Sock#So_SndLoWat        Fixed(32) Constant(1003x);                        
* Dcl Sock#So_RcvLoWat        Fixed(32) Constant(1004x);                        
* Dcl Sock#So_SndTimeO        Fixed(32) Constant(1005x);                        
* Dcl Sock#So_RcvTimeO        Fixed(32) Constant(1006x);                        
* Dcl Sock#So_Error           Fixed(32) Constant(1007x);                        
* Dcl Sock#So_Type            Fixed(32) Constant(1008x);                        
*                                                                               
* /*-----------------------------------------------------------------*/         
* /* Non-standard sockopts                                           */         
* /*-----------------------------------------------------------------*/         
* Dcl SO_PropagateId          Fixed(32) Constant(4000x);      /* @D7A*/         
* Dcl SO_ClusterConnType      Fixed(32) Constant(4001x);      /* @P8A*/         
* Dcl SO_SecInfo              Fixed(32) Constant(4002x);      /* @D8A*/         
* Dcl SO_RecvUserName         Fixed(32) Constant(4003x);      /* @DHA*/         
*                                                                               
* /*-----------------------------------------------------------------*/         
* /* getsockopt(SO_ClusterConnType) Output values                    */         
* /*-----------------------------------------------------------------*/         
* Dcl SO_CLUSTERCONNTYPE_NOCONN        Fixed(32) Constant(0), /* @P8A*/         
*     SO_CLUSTERCONNTYPE_NONE          Fixed(32) Constant(1), /* @P8A*/         
*     SO_CLUSTERCONNTYPE_SAME_CLUSTER  Fixed(32) Constant(2), /* @P8A*/         
*     SO_CLUSTERCONNTYPE_SAME_IMAGE    Fixed(32) Constant(4), /* @P8A*/         
*     SO_CLUSTERCONNTYPE_INTERNAL      Fixed(32) Constant(8); /* @P8A*/         
*                                                                               
* /*-----------------------------------------------------------------*/         
* /* IPPROTO_IP Options                                              */         
* /*-----------------------------------------------------------------*/         
* Declare (                                                                     
*          IP_MULTICAST_TTL    Constant(3),                    /*@D6A*/         
*          IP_MULTICAST_LOOP   Constant(4),                    /*@D6A*/         
*          IP_ADD_MEMBERSHIP   Constant(5),                    /*@D6A*/         
*          IP_DROP_MEMBERSHIP  Constant(6),                    /*@D6A*/         
*          IP_MULTICAST_IF     Constant(7),                /*@P9C@D6A*/         
*                                                                               
*          IP_DEFAULT_MULTICAST_TTL  Constant(1),              /*@D6A*/         
*          IP_DEFAULT_MULTICAST_LOOP Constant(1),              /*@D6A*/         
*          IP_MAX_MEMBERSHIPS  Constant(20),                   /*@D6A*/         
*                                                                               
*          IP_TOS              Constant(2),                /*@P9C@D6A*/         
*                                                                               
*          IP_BLOCK_SOURCE           Constant(10),             /*@DEA*/         
*          IP_UNBLOCK_SOURCE         Constant(11),             /*@DEA*/         
*          IP_ADD_SOURCE_MEMBERSHIP  Constant(12),             /*@DEA*/         
*          IP_DROP_SOURCE_MEMBERSHIP Constant(13),             /*@DEA*/         
*          IP_TTL                    Constant(14),             /*@DMA*/         
*          IP_RECVPKTINFO            Constant(102)            /* @DKA*/         
*                                          ) Fixed(31);    /*@P9C@D6A*/         
*                                                                               
* Dcl IP_PKTINFO  Fixed(32)  Constant(101);  /* Anc. data type   @DKA*/         
*                                                                               
* Dcl 1 ip_mreq Bdy(Word) Based,                        /*3@DGM 3@D6A*/         
*       2 imr_multiaddr Fixed(32),     /* IP multicast addr of group */         
*       2 imr_interface Fixed(32);     /* local IP addr of interface */         
*                                                                               
*%IF Translate(BPXY_MULTICAST_STRUCTS) = 'YES' %Then          /* @DFA*/         
* %DO;                                                        /* @DFA*/         
* /*-------------------------------------------------------------@DEA*/         
* /*    Multicast Source Filter Structures from RFC 3678         @DEA*/         
* /*-------------------------------------------------------------@DEA*/         
* Dcl SockAddr_Storage Char(128) Bdy(DWord) Type;             /* @DEA*/         
*                                                                               
* Dcl 1 ip_mreq_source Bdy(Word) Based,                       /* @DEA*/         
*       2 imrs_multiaddr Fixed(32),    /* IP multicast addr      @DEA*/         
*       2 imrs_sourceaddr Fixed(32),   /* IP source addr         @DEA*/         
*       2 imrs_interface Fixed(32);    /* local IP addr of intf  @DEA*/         
*                                                                               
* Dcl 1 group_req Bdy(DWord) Based,                           /* @DEA*/         
*       2 gr_interface   Fixed(32),    /* Interface index        @DEA*/         
*       2 *              Fixed(32),    /* Padding                @DEA*/         
*       2 gr_group isa(SockAddr_Storage), /* multicast address   @DEA*/         
*         3 * union,                     /*                      @DEA*/         
*           4 gr_MultiSockAddr4 isa(Sock_Inet_SockAddr),      /* @DEA*/         
*           4 gr_MultiSockAddr6 isa(Sock_Inet6_SockAddr);     /* @DEA*/         
*                                                                               
* Dcl 1 group_source_req Bdy(DWord) Based,                    /* @DEA*/         
*       2 gsr_interface   Fixed(32),   /* Interface index        @DEA*/         
*       2 *               Fixed(32),   /* Padding                @DEA*/         
*       2 gsr_group isa(SockAddr_Storage), /* multicast address  @DEA*/         
*         3 * union,                     /*                      @DEA*/         
*           4 gsr_MultiSockAddr4 isa(Sock_Inet_SockAddr),     /* @DEA*/         
*           4 gsr_MultiSockAddr6 isa(Sock_Inet6_SockAddr),    /* @DEA*/         
*       2 gsr_source isa(SockAddr_Storage), /* multicast address @DEA*/         
*         3 * union,                     /*                      @DEA*/         
*           4 gsr_MultiSockAddr4 isa(Sock_Inet_SockAddr),     /* @DEA*/         
*           4 gsr_MultiSockAddr6 isa(Sock_Inet6_SockAddr);    /* @DEA*/         
*%End;  /* End Inclusion of Multicast Source Filter Structures   @DFA*/         
*                                                                               
* /*-------------------------------------------------------------@D9A*/         
* /* IPPROTO_IPV6 Options                                        @D9A*/         
* /*-------------------------------------------------------------@D9A*/         
* Declare (Sock#IPV6_UNICAST_HOPS   Constant( 3),            /*21@D9A*/         
*          Sock#IPV6_MULTICAST_LOOP Constant( 4),                               
*          Sock#IPV6_JOIN_GROUP     Constant( 5),                               
*          Sock#IPV6_LEAVE_GROUP    Constant( 6),                               
*          Sock#IPV6_MULTICAST_IF   Constant( 7),                               
*          Sock#IPV6_MULTICAST_HOPS Constant( 9),                               
*                                                                               
*          Sock#IPV6_V6ONLY         Constant(10),                               
*          Sock#IPV6_HOPLIMIT       Constant(11),  /* anc data only  */         
*          Sock#IPV6_PATHMTU        Constant(12),                               
*          Sock#IPV6_PKTINFO        Constant(13),                               
*          Sock#IPV6_RECVHOPLIMIT   Constant(14),                               
*          Sock#IPV6_RECVPKTINFO    Constant(15),                               
*          Sock#IPV6_RECVPATHMTU    Constant(16),                               
*          Sock#IPV6_REACHCONF      Constant(17),                               
*          Sock#IPV6_USE_MIN_MTU    Constant(18),                               
*          Sock#IPV6_CHECKSUM       Constant(19),                               
*                                                             /*3@DCD*/         
*          Sock#IPV6_NEXTHOP         Constant(20),                              
*          Sock#IPV6_RTHDR           Constant(21),                              
*          Sock#IPV6_HOPOPTS         Constant(22),                              
*          Sock#IPV6_DSTOPTS         Constant(23),                              
*          Sock#IPV6_RTHDRDSTOPTS    Constant(24),                              
*          Sock#IPV6_RECVRTHDR       Constant(25),                              
*          Sock#IPV6_RECVHOPOPTS     Constant(26),                              
*         ]Sock#IPV6_RECVRTHDRDSOPTS Constant(27),             /*@DCD*/         
*          Sock#IPV6_RECVDSTOPTS     Constant(28),                              
*          Sock#IPV6_DONTFRAG        Constant(29),             /*@DCA*/         
*          Sock#IPV6_TCLASS          Constant(30),             /*@DCA*/         
*          Sock#IPV6_RECVTCLASS      Constant(31),             /*@DCA*/         
*          Sock#IPV6_ADDR_PREFERENCES Constant(32)             /*@DJA*/         
*                                                ) Fixed(31);  /*@D9A*/         
*                                                                               
* /* Protocol Independent Options                                @DEA*/         
*                                                                               
* Declare (                                                    /*@DEA*/         
*          SOCK#MCAST_JOIN_GROUP         Constant(40),         /*@DEA*/         
*          SOCK#MCAST_LEAVE_GROUP        Constant(41),         /*@DEA*/         
*          SOCK#MCAST_JOIN_SOURCE_GROUP  Constant(42),         /*@DEA*/         
*          SOCK#MCAST_LEAVE_SOURCE_GROUP Constant(43),         /*@DEA*/         
*          SOCK#MCAST_BLOCK_SOURCE       Constant(44),         /*@DEA*/         
*          SOCK#MCAST_UNBLOCK_SOURCE     Constant(45)          /*@DEA*/         
*                                          ) Fixed(31);        /*@DEA*/         
*                                                                               
* Dcl Sock#IPV6_RTHDR_TYPE_0          /* IPv6 Routing hdr type 0 @D9A*/         
*                   Constant(0) Fixed(31);                                      
*                                                                               
* /*******************************************************************/         
* /* IPv4 Packet Source/Destination Information                      */         
* /*                                                                 */         
* /*     struct in_pktinfo {                                         */         
* /*          struct in_addr ipi_addr                                */         
* /*          unsigned int ipi_ifindex                               */         
* /*     }                                                       @DKA*/         
* /*******************************************************************/         
* Dcl 1 in_pktinfo Bdy(Byte) Based,                            /*@DKA*/         
*       2 ipi_addr     Char(4),              /* IPv4 Addr        @DKA*/         
*       2 ipi_ifindex  Fixed(32) Bdy(Byte);  /* Interface Index  @DKA*/         
*                                                              /*@DKA*/         
* /*-------------------------------------------------------------@D9A*/         
* /* IPv6 Packet Source/Destination Information                  @D9A*/         
* /*                                                             @D9A*/         
* /*     struct in6_pktinfo {                                    @D9A*/         
* /*          struct in6_addr ipi6_addr                          @D9A*/         
* /*             unsigned int ipi6_ifindex                       @D9A*/         
* /*     }                                                       @D9A*/         
* /*-------------------------------------------------------------@D9A*/         
* Dcl 1 in6_pktinfo Bdy(Word) Based,                           /*@D9A*/         
*       2 ipi6_addr     Char(16),      /* IPv6 Addr              @D9A*/         
*       2 ipi6_ifindex  Fixed(32);     /* Interface Index        @D9A*/         
*                                                              /*@D9A*/         
* /*-------------------------------------------------------------@D9A*/         
* /* Multicast Mreq Structure                                    @D9A*/         
* /*                                                             @D9A*/         
* /*     struct ipv6_mreq {                                      @D9A*/         
* /*        struct in6_addr ipv6mr_multiaddr                     @D9A*/         
* /*           unsigned int ipv6mr_interface                     @D9A*/         
* /*     }                                                       @D9A*/         
* /*-------------------------------------------------------------@D9A*/         
* Dcl 1 Ipv6_mreq  Bdy(Word) Based,                            /*@D9A*/         
*       2 Ipv6mr_multiaddr  Char(16),  /* IPv6 Addr              @D9A*/         
*       2 Ipv6mr_interface  Fixed(32); /* Interface Index        @D9A*/         
*                                                              /*@D9A*/         
* /*-------------------------------------------------------------@D9A*/         
* /*------- CInet Interface Index  ---------                     @D9A*/         
* /*-------------------------------------------------------------@D9A*/         
* Dcl 1 IfIndex Fixed(32) Based,     /* IPv6 Interface Index:    @D9A*/         
*       3 Ifi_Tdx   Fixed(16),       /*  Cinet Td Index          @D9A*/         
*       3 Ifi_Index Fixed(16);       /*  Stack's Interface Index @D9A*/         
*                                                              /*@D9A*/         
* /*-------------------------------------------------------------@D9A*/         
* /* Icmp6 Filtering                                             @D9A*/         
* /*                                                             @D9A*/         
* /*     struct icmp6_filter {                                   @D9A*/         
* /*       uint32_t  icmp6_filtÝ8¨             8*32 = 256 bits   @D9A*/         
* /*     }                                                       @D9A*/         
* /*                                                                 */         
* /*   The ICMP6_FILTER structure is composed of 8 words,        @DBA*/         
* /*    or 8*32 = 256 bits. Each bit represents an ICMPv6        @DBA*/         
* /*   message type value. The bit positions are mapped as       @DBA*/         
* /*   follows:                                                  @DBA*/         
* /*                                                             @DBA*/         
* /* Word 1            Word 2                 etc. up to bit 255 @DBA*/         
* /* ----------------  -------------------                       @DBA*/         
* /* 31 30 29...2 1 0  63 62 61...34 33 32                       @DBA*/         
* /*                                                             @DBA*/         
* /* Turning on the bit corresponding to a specific ICMPv6       @DBA*/         
* /* message type indicates that ICMPv6 messages of that type    @DBA*/         
* /* should be presented to the application. Turning off a bit   @DBA*/         
* /* indicates that the corresponding ICMPv6 message will not    @DBA*/         
* /* be passed to the application.                               @DBA*/         
* /*                                                                 */         
* /*-------------------------------------------------------------@D9A*/         
* Dcl 1 icmp6_filter Bdy(Word) Based,                          /*@D9A*/         
*       2 icmp6_filt(8)   Fixed(32);                           /*@D9A*/         
*                                                                               
*                                                                               
* DCL ICMP6_DST_UNREACH       Fixed(8) constant(1),            /*@DBA*/         
*     ICMP6_PACKET_TOO_BIG    Fixed(8) constant(2),            /*@DBA*/         
*     ICMP6_TIME_EXCEEDED     Fixed(8) constant(3),            /*@DBA*/         
*     ICMP6_PARAM_PROB        Fixed(8) constant(4),            /*@DBA*/         
*     ICMP6_INFOMSG_MASK      Fixed(8) constant(128),          /*@DBA*/         
*     ICMP6_ECHO_REQUEST      Fixed(8) constant(128),          /*@DBA*/         
*     ICMP6_ECHO_REPLY        Fixed(8) constant(129),          /*@DBA*/         
*     MLD_LISTENER_QUERY      Fixed(8) constant(130),          /*@DBA*/         
*     MLD_LISTENER_REPORT     Fixed(8) constant(131),          /*@DBA*/         
*     MLD_LISTENER_REDUCTION  Fixed(8) constant(132),          /*@DBA*/         
*     ND_ROUTER_SOLICIT       Fixed(8) constant(133),          /*@DBA*/         
*     ND_ROUTER_ADVERT        Fixed(8) constant(134),          /*@DBA*/         
*     ND_NEIGHBOR_SOLICIT     Fixed(8) constant(135),          /*@DBA*/         
*     ND_NEIGHBOR_ADVERT      Fixed(8) constant(136),          /*@DBA*/         
*     ND_REDIRECT             Fixed(8) constant(137);          /*@DBA*/         
*                                                                               
* /*-------------------------------------------------------------@D9A*/         
* /* IPPROTO_ICMPV6 options                                      @D9A*/         
* /*-------------------------------------------------------------@D9A*/         
* Declare (Sock#ICMP6_FILTER       Constant(1) ) Fixed(31);    /*@D9A*/         
*                                                                               
* /**********************************************************@PFC@DCA*/         
* /* Routing Header                                                  */         
* /*                                                                 */         
* /*    struct ip6_rthdr {                                           */         
* /*            uint8_t  ip6r_nxt                                    */         
* /*            uint8_t  ip6r_len                                    */         
* /*            uint8_t  ip6r_type                                   */         
* /*            uint8_t  ip6r_segleft                                */         
* /*    }                                                            */         
* /*******************************************************************/         
* Dcl 1 ip6_rthdr   Based,                                     /*@DCA*/         
*       2 ip6r_nxt      Fixed(8),      /* Next header            @DCA*/         
*       2 ip6r_len      Fixed(8),  /* Length in units of 8 octets@DCA*/         
*       2 ip6r_type     Fixed(8),      /* Routing type           @DCA*/         
*       2 ip6r_segleft  Fixed(8);      /* Segments left          @DCA*/         
*                                                                               
* /**********************************************************@PFC@DCA*/         
* /* Type 0 Routing Header                                           */         
* /*                                                                 */         
* /*    struct ip6_rthdr0 {                                          */         
* /*            uint8_t  ip6r0_nxt                                   */         
* /*            uint8_t  ip6r0_len                                   */         
* /*            uint8_t  ip6r0_type                                  */         
* /*            uint8_t  ip6r0_segleft                               */         
* /*            uint32_t ip6r0_reserved                              */         
* /*    }                                                            */         
* /*******************************************************************/         
* Dcl 1 ip6_rthdr0  Bdy(Word) Based,                           /*@DCA*/         
*      2 ip6r0_header,                                         /*@DDA*/         
*       3 ip6r0_nxt      Fixed(8),     /* Next header            @DCA*/         
*       3 ip6r0_len      Fixed(8), /* Length in units of 8 octets@DCA*/         
*       3 ip6r0_type     Fixed(8),     /* Always zero            @DCA*/         
*       3 ip6r0_segleft  Fixed(8),     /* Segments left          @DCA*/         
*       3 ip6r0_reserved Fixed(32),    /* Reserved field         @DCA*/         
*                       /* Followed by up to 127 struct in6_addr @DDA*/         
*      2 ip6r0_addr(*)  Char(16);                              /*@DDA*/         
*                                                                               
* /**********************************************************@PFC@DCA*/         
* /* Hop-by-Hop Options Header                                       */         
* /*                                                                 */         
* /*    struct ip6_hbh {                                             */         
* /*            uint8_t  ip6h_nxt                                    */         
* /*            uint8_t  ip6h_len                                    */         
* /*    }                                                            */         
* /*******************************************************************/         
* Dcl 1 ip6_hbh     Based,                                     /*@DCA*/         
*      2 ip6h_header,                                          /*@DDA*/         
*       3 ip6h_nxt      Fixed(8),      /* Next header            @DCA*/         
*       3 ip6h_len      Fixed(8),  /* Length in units of 8 octets@DCA*/         
*      2 ip6h_options  Char(*);        /* Options                @DDA*/         
*                                                                               
* /**********************************************************@PFC@DCA*/         
* /* Destination Options Header                                      */         
* /*                                                                 */         
* /*    struct ip6_dest {                                            */         
* /*            uint8_t  ip6d_nxt                                    */         
* /*            uint8_t  ip6d_len                                    */         
* /*    }                                                            */         
* /*******************************************************************/         
* Dcl 1 ip6_dest    Based,                                     /*@DCA*/         
*      2 ip6d_header,                                          /*@DDA*/         
*       3 ip6d_nxt      Fixed(8),      /* Next header            @DCA*/         
*       3 ip6d_len      Fixed(8),  /* Length in units of 8 octets@DCA*/         
*      2 ip6d_options  Char(*);        /* Options                @DDA*/         
*                                                                               
* /**********************************************************@PFC@DCA*/         
* /* MTU Information                                                 */         
* /*                                                                 */         
* /*    struct ip6_mtuinfo {                                         */         
* /*            sockaddr_in6  ip6m_addr                              */         
* /*            uint32_t      ip6m_mtu                               */         
* /*    }                                                            */         
* /*******************************************************************/         
* Dcl 1 ip6_mtuinfo Bdy(Word) Based,                           /*@DCA*/         
*       2 ip6m_addr    Char(28), /*Dst address including zone ID @DCA*/         
*       2 ip6m_mtu     Fixed(32);  /* Path MTU in host byte order@DCA*/         
*                                                                               
* /**********************************************************@PFC@DCA*/         
* /* IPv6 Options Header                                             */         
* /*                                                                 */         
* /*    struct ip6_opt {                                             */         
* /*            uint8_t  ip6o_nxt                                    */         
* /*            uint8_t  ip6o_len                                    */         
* /*    }                                                            */         
* /*******************************************************************/         
* Dcl 1 ip6_opt     Based,                                     /*@DCA*/         
*       2 ip6o_type     Fixed(8),/*Dst address including zone ID @DCA*/         
*       2 ip6o_len      Fixed(8);  /* Path MTU in host byte order@DCA*/         
*                                                                               
* /*******************************************************************/         
* /* IPv6 Options                                                @DCA*/         
* /*******************************************************************/         
* Dcl IP6OPT_TYPE           Fixed(8) Constant('C0'x),          /*@DCA*/         
*     IP6OPT_TYPE_SKIP      Fixed(8) Constant('00'x),          /*@DCA*/         
*     IP6OPT_TYPE_DISCARD   Fixed(8) Constant('40'x),          /*@DCA*/         
*     IP6OPT_TYPE_FORCEICMP Fixed(8) Constant('80'x),          /*@DCA*/         
*     IP6OPT_TYPE_ICMP      Fixed(8) Constant('C0'x),          /*@DCA*/         
*     IP6OPT_MUTABLE        Fixed(8) Constant('20'x),          /*@DCA*/         
*                                                                               
*     IP6OPT_PAD1           Fixed(8) Constant('00'x),/*00 0 00000@DCA*/         
*     IP6OPT_PADN           Fixed(8) Constant('01'x),/*00 0 00001@DCA*/         
*                                                                               
*     IP6OPT_JUMBO          Fixed(8) Constant('C2'x),/*11 0 00010@DCA*/         
*     IP6OPT_NSAP_ADDR      Fixed(8) Constant('C3'x),/*11 0 00011@DCA*/         
*     IP6OPT_TUNNEL_LIMIT   Fixed(8) Constant('04'x),/*00 0 00100@DCA*/         
*     IP6OPT_ROUTER_ALERT   Fixed(8) Constant('05'x);/*00 0 00101@DCA*/         
*                                                                               
* /**********************************************************@PFC@DCA*/         
* /* Jumbo Payload Option                                            */         
* /*                                                                 */         
* /*    struct ip6_opt_jumbo {                                       */         
* /*            uint8_t  ip6oj_type                                  */         
* /*            uint8_t  ip6oj_len                                   */         
* /*            uint8_t  ip6oj_jumbo_lenÝ4¨                          */         
* /*    }                                                            */         
* /*******************************************************************/         
* Dcl 1 ip6_opt_jumbo Based,                                   /*@DCA*/         
*       2 ip6oj_type         Fixed(8),                         /*@DCA*/         
*       2 ip6oj_len          Fixed(8),                         /*@DCA*/         
*       2 ip6oj_jumbo_len(4) Fixed(8);                         /*@DCA*/         
*                                                                               
* /*******************************************************************/         
* /* Declare                                                     @DCA*/         
* /*******************************************************************/         
* Dcl IP6OPT_JUMBO_LEN       Fixed(8) Constant(6);             /*@DCA*/         
*                                                                               
* /**********************************************************@PFC@DCA*/         
* /* NSAP Address Option                                             */         
* /*                                                                 */         
* /*    struct ip6_opt_nsap {                                        */         
* /*            uint8_t  ip6on_type                                  */         
* /*            uint8_t  ip6on_len                                   */         
* /*            uint8_t  ip6on_src_nsap_len                          */         
* /*            uint8_t  ip6on_dst_nsap_len                          */         
* /*    }                                                            */         
* /*******************************************************************/         
* Dcl 1 ip6_opt_nsap  Based,                                   /*@DCA*/         
*      2 ip6on_header,                                         /*@DDA*/         
*       3 ip6on_type         Fixed(8),                         /*@DCA*/         
*       3 ip6on_len          Fixed(8),                         /*@DCA*/         
*       3 ip6on_src_nsap_len Fixed(8),                         /*@DCA*/         
*       3 ip6on_dst_nsap_len Fixed(8),                         /*@DCA*/         
*                              /* Followed by source NSAP        @DDA*/         
*      2 ip6on_src_nsap     Char(*),                           /*@DDA*/         
*                              /* Followed by destination NSAP   @DDA*/         
*        ip6on_dst_nsap     Char(*)                            /*@DDA*/         
*          based(addr(ip6on_src_nsap(ip6on_src_nsap_len+1)));  /*@DDA*/         
*                                                                               
* /**********************************************************@PFC@DCA*/         
* /* Tunnel Limit Option                                             */         
* /*                                                                 */         
* /*    struct ip6_opt_tunnel {                                      */         
* /*            uint8_t  ip6ot_type                                  */         
* /*            uint8_t  ip6ot_len                                   */         
* /*            uint8_t  ip6ot_encap_limit                           */         
* /*    }                                                            */         
* /*******************************************************************/         
* Dcl 1 ip6_opt_tunnel Based,                                  /*@DCA*/         
*       2 ip6ot_type         Fixed(8),                         /*@DCA*/         
*       2 ip6ot_len          Fixed(8),                         /*@DCA*/         
*       2 ip6ot_encap_limit  Fixed(8);                         /*@DCA*/         
*                                                                               
* /**********************************************************@PFC@DCA*/         
* /* Router Alert Option                                             */         
* /*                                                                 */         
* /*    struct ip6_opt_router {                                      */         
* /*            uint8_t  ip6or_type                                  */         
* /*            uint8_t  ip6or_len                                   */         
* /*            uint8_t  ip6or_valueÝ2¨                              */         
* /*    }                                                            */         
* /*******************************************************************/         
* Dcl 1 ip6_opt_router Based,                                  /*@DCA*/         
*       2 ip6or_type         Fixed(8),                         /*@DCA*/         
*       2 ip6or_len          Fixed(8),                         /*@DCA*/         
*       2 ip6or_value(2)     Fixed(8);                         /*@DCA*/         
*                                                                               
* /*******************************************************************/         
* /* Declare Router alert values (in network byte order)         @DCA*/         
* /*******************************************************************/         
* Dcl IP6_ALERT_MLD           Fixed(8)  Constant(0000x),       /*@DCA*/         
*     IP6_ALERT_RSVP          Fixed(8)  Constant(0001x),       /*@DCA*/         
*     IP6_ALERT_AN            Fixed(8)  Constant(0002x);       /*@DCA*/         
*                                                                               
* /*******************************************************************/         
* /*                                                                 */         
* /*  Source address selection preferences                       @DJA*/         
* /*                                                                 */         
* /*    Used with setsockopt/getsockopt(Sock#IPV6_ADDR_PREFERENCES)  */         
* /*      and BPX1PCT(PC#IsSrcAddr) for inet6_is_srcaddr() function  */         
* /*                                                                 */         
* /*******************************************************************/         
* Dcl 1 IPv6_ADDR_PREFERENCES_FLAGS Bit(32) Bdy(Word) Based,   /*@DJA*/         
*        3 *                        Bit(24),      /* Undefined   @DJA*/         
*        3 *                         Bit(2),      /* Undefined   @DJA*/         
*        3 IPV6_PREFER_SRC_NONCGA    Bit(1), /* Prefer non-CGA   @DJA*/         
*        3 IPV6_PREFER_SRC_CGA       Bit(1), /* Prefer CGA addr  @DJA*/         
*        3 IPV6_PREFER_SRC_PUBLIC   Bit(1),  /* Public address   @DJA*/         
*        3 IPV6_PREFER_SRC_TMP      Bit(1),  /* Temporary addr   @DJA*/         
*        3 IPV6_PREFER_SRC_COA      Bit(1),  /* Care-of address  @DJA*/         
*        3 IPV6_PREFER_SRC_HOME     Bit(1);  /* Home address     @DJA*/         
*                                                              /*@DJA*/         
* Dcl IPV6_PREFERENCES_FLAGS_MASKINVALID BIT(32)               /*@DJA*/         
*        Constant('FFFFFFC0'X);        /* Invalid Flags Mask     @DJA*/         
*                                                                               
*%IF Translate(BPXY_ISSRCADDR_STRUCTS) = 'YES' %Then          /* @DJA*/         
* %DO;                                                        /* @DJA*/         
* /*******************************************************************/         
* /*                                                                 */         
* /* BPX1PCT(PC#IsSrcAddr) Argument for inet6_is_srcaddr()       @DJA*/         
* /*                                                                 */         
* /*  inet6_is_srcaddr(IsSrcAddrIpAddr, IsSrcAddrFlags)              */         
* /*  is implemented with BPX1PCT(' ',PC#IsSrcAddr,Length(IsSrcAddr),*/         
* /*                                  IsSrcAddr, Rv, Rc, Rsn)        */         
* /*  where the IsSrcAddr argument is defined as follows:            */         
* /*                                                                 */         
* /*******************************************************************/         
* Dcl 1 IsSrcAddr Bdy(Word) Based ,                            /*@DJA*/         
*       2 IsSrcAddrVer    Fixed(8),   /* Version = 1             @DJA*/         
*       2  *              Char(3),    /* Reserved. Must be 0     @DJA*/         
*       2 IsSrcAddrIpAddr Isa(Sock_inet6_sockaddr),            /*@DJA*/         
*       2 IsSrcAddrFlags  Bit(32),    /* IPV6_PREFER_SRC_* flags @DJA*/         
*       2  *              Char(24);   /* Reserved. Must be 0     @DJA*/         
*                                                              /*@DJA*/         
*   Dcl IsSrcAddrVer1 Fixed(8) Constant(1);                    /*@DJA*/         
*%End;  /* End Inclusion of IsSrcAddr Structures                 @DJA*/         
*                                                                               
* /*******************************************************************/         
* /* Declare IPPROTO_TCP options                                     */         
* /*******************************************************************/         
* Dcl Sock#TCP_Nodelay        Fixed(32) Constant(1),      /*    @P4A */         
*     Sock#TCP_KeepAlive      Fixed(32) Constant(8);           /*@P9A*/         
*                                                                               
* /*-----------------------------------------------------------------*/         
* /* SetIbmSockOpt options                                           */         
* /*-----------------------------------------------------------------*/         
* Dcl Sock#So_Bulkmode        Fixed(32) Constant(8000x);  /*    @D5A */         
* Dcl Sock#So_IgnoreIncomingPush Fixed(32) Constant(1);   /*    @D5A */         
* Dcl Sock#So_NonBlockLocal    Fixed(32) Constant(8001x), /* RTL @P7A*/         
*     Sock#So_IgnoreSourceVIPA Fixed(32) Constant(2),          /*@P7A           
*                       Toggles the use of non-VIPA addresses.  When            
*                       enabled, non-VIPA addresses will be used for            
*                       outbound IP packets.                     @P7A*/         
*     Sock#So_OptMSS           Fixed(32) Constant(8003x),      /*@P7A           
*                  Toggles the use of optimal TCP segment size.                 
*                  When enabled, the TCP segment size may be optimally          
*                  increased on outbound data transfers.  This may              
*                  reduce the amount of TCP outbound and inbound                
*                  acknowledgement packet processing, therefore,                
*                  minimizing CPU consumption.                   @P7A*/         
*     Sock#So_OptAck           Fixed(32) Constant(8004x),      /*@P7A           
*                       Optimize Acknowledgments                 @P7A*/         
*     Sock#So_EioIfNewTP       Fixed(32) Constant(0005x),      /*@PAA           
*                       Notify this application of new transports@PAA*/         
*     Sock#So_AcceptECONNABORTED Fixed(32) Constant( 6 ),      /*@PEA           
*                       Notify this appl of aborted connections  @PEA*/         
*     Sock#So_ExclWrt            Fixed(32) Constant( 7 );      /*@03A           
*                     Control Stream Write Serialization                        
*                     SetIbmSockOpt option to toggle system supplied            
*                     serialization on TCP stream socket writes.                
*                                                                               
*                     NOTE: This function has been disabled and its             
*                           use is thus discouraged.  This function             
*                           may be withdrawn in a future release.               
*                                                          @DIC, @03A*/         
* /*******************************************************************/         
* /* Declare Constants for on and off when setting options       @PAA*/         
* /*******************************************************************/         
* Dcl Sock#So_SetOptionOn     Fixed(32) Constant(1),      /*     @PAA*/         
*     Sock#So_SetOptionOff    Fixed(32) Constant(0);      /*     @PAA*/         
*                                                                               
* /*******************************************************************/         
* /* Declare Socket Port constant                                    */         
* /*******************************************************************/         
* Dcl Sock#LastReservePort    Fixed(16) Constant(1023); /*       @D2A*/         
*                                                                               
* /*-------------------------------------------------------------@D8A*/         
* /*  SO_SECINFO Sender's Security Info Ancillary Data           @D8A*/         
* /*-------------------------------------------------------------@D8A*/         
* DCL                                                                           
*    1 SecSInfo  Based Bdy(Word) ,                                              
*      2 SecsEUid       Fixed(32), /* POSIX Effective UID            */         
*      2 SecsEGid       Fixed(32), /* POSIX Effective GID            */         
*      2 SecsField1     Char(10),                                               
*        3 SecsUserID     Char(8), /* MVS User ID padded with zeros  */         
*        3 SecsNull1      Char(1), /* null terminate Mvs User ID     */         
*        3 *              Char(1), /* reserved                       */         
*      2 SecsField2     Char(10),                                               
*        3 SecsJobName    Char(8), /* MVS Job Name padded with blanks*/         
*        3 SecsNull2      Char(1), /* null terminate Mvs Job Name    */         
*        3 *              Char(1), /* reserved                       */         
*      2  *             Char(16);  /* Available for Expansion        */         
*                                                                               
*                                                                               
*                                                                               
