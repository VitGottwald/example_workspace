*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IARST64                               -08/08/19-<0> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  64-bit Storage services                       * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5650-ZOS COPYRIGHT IBM CORP. 2008, 2019                         * 00001200
*                                                                     * 00001300
* STATUS= HBB77C0                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      IARST64 allows you to to request 64-bit Storage services.      * 00002100
*                                                                     * 00002200
*      With IARST64, you can request services to:                     * 00002300
*                                                                     * 00002400
*                                                                     * 00002500
*      o   Obtain storage (REQUEST=GET)                               * 00002600
*                                                                     * 00002700
*      o   Return storage (REQUEST=FREE)                              * 00002800
*                                                                     * 00002900
*                                                                     * 00003000
*                                                                     * 00003100
*01* EXTERNAL CLASSIFICATION:                                         * 00003200
*                                                                     * 00003300
*02* PI:   BASE                                                       * 00003400
*                                                                     * 00003500
*02* NONE: FIELDS                                                     * 00003600
*          R0VALUE                                                    * 00003700
*          R1VALUE                                                    * 00003800
*                                                                     * 00003900
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00004000
*                                                                     * 00004100
*01* ENVIRONMENT:                                                     * 00004200
*                                                                     * 00004300
*                                                                     * 00004400
*      Minimum authorization: Use of the COMMON=YES, TYPE=DREF,       * 00004500
*                        TYPE=FIXED, OWNINGTASK=RCT, or the Key00ToF0 * 00004600
*                        parameter with a value other than 9 require  * 00004700
*                        the caller to be running in key 0-7.  Use of * 00004800
*                        MEMLIMIT=NO or LOCALSYSAREA=YES require key  * 00004900
*                        0-7 or supervisor state.  All other options  * 00005000
*                        have a minimum authorization of Problem      * 00005100
*                        state and PSW key 8-15.  The Storage         * 00005200
*                        obtained with LOCALSYSAREA=YES, does not     * 00005300
*                        count against the MEMLIMIT.                  * 00005400
*                                                                     * 00005500
*      Dispatchable unit mode: Task or SRB mode.                      * 00005600
*                                                                     * 00005700
*      Cross Memory Mode: Any PASN, any HASN, any SASN.               * 00005800
*                                                                     * 00005900
*      AMODE:            64-bit.                                      * 00006000
*                                                                     * 00006100
*      ASC mode:         Primary or Access Register.                  * 00006200
*                                                                     * 00006300
*      Interrupt status:                                              * 00006400
*                                                                     * 00006500
*                                                                     * 00006600
*                        o   The caller may be enabled or disabled    * 00006700
*                            for interrupts when requesting storage   * 00006800
*                            that is defined as COMMON=YES and        * 00006900
*                            TYPE=DREF or TYPE=FIXED.                 * 00007000
*                                                                     * 00007100
*                        o   For all other parameter combinations,    * 00007200
*                            the caller must be enabled for           * 00007300
*                            interrupts.                              * 00007400
*                                                                     * 00007500
*                                                                     * 00007600
*                                                                     * 00007700
*      Locks:                                                         * 00007800
*                                                                     * 00007900
*                        For the GET request, the following locks may * 00008000
*                        be held by the caller or must be obtainable  * 00008100
*                        by IARST64:                                  * 00008200
*                                                                     * 00008300
*                                                                     * 00008400
*                        o   For requests with COMMON=NO, the locking * 00008500
*                            restrictions are the same as for IARV64  * 00008600
*                            REQUEST=GETSTOR.                         * 00008700
*                                                                     * 00008800
*                        o   For requests with COMMON=YES, the        * 00008900
*                            locking restrictions are the same as for * 00009000
*                            IARV64 REQUEST=GETCOMMON.                * 00009100
*                                                                     * 00009200
*                                                                     * 00009300
*                                                                     * 00009400
*                        For the FREE request, the caller may hold    * 00009500
*                        locks but is not required to hold any.       * 00009600
*                                                                     * 00009700
*      Control parameters: Control parameters must be in the primary  * 00009800
*                        address space.                               * 00009900
*                                                                     * 00010000
*                                                                     * 00010100
*                                                                     * 00010200
*01* PROGRAMMING REQUIREMENTS:                                        * 00010300
*                                                                     * 00010400
*    None                                                             * 00010500
*                                                                     * 00010600
*01* RESTRICTIONS:                                                    * 00010700
*                                                                     * 00010800
*    None                                                             * 00010900
*                                                                     * 00011000
*01* INPUT REGISTER INFORMATION:                                      * 00011100
*                                                                     * 00011200
*    Before issuing the IARST64 macro, the caller does not have to    * 00011300
*    place any information into any general purpose register (GPR) or * 00011400
*    access register (AR) unless using it in register notation for a  * 00011500
*    particular parameter, or using it as a base register.            * 00011600
*                                                                     * 00011700
*01* OUTPUT REGISTER INFORMATION:                                     * 00011800
*                                                                     * 00011900
*    When control returns to the caller, the 64-bit GPRs contain:     * 00012000
*                                                                     * 00012100
*    For REQUEST=GET                                                  * 00012200
*                                                                     * 00012300
*                                                                     * 00012400
*    REGISTER    CONTENTS                                             * 00012500
*                                                                     * 00012600
*    0           Reason code in the low 32 bits if the return code is * 00012700
*                not 0. Otherwise, used as a work register by the     * 00012800
*                system.                                              * 00012900
*                                                                     * 00013000
*    1           The address of the obtained storage                  * 00013100
*                                                                     * 00013200
*    2-12        Unchanged if REGS=SAVE was specified, used as work   * 00013300
*                registers by the system if REGS=USE was specified.   * 00013400
*                                                                     * 00013500
*    13          Unchanged                                            * 00013600
*                                                                     * 00013700
*    14          Used as a work register by the system                * 00013800
*                                                                     * 00013900
*    15          Return code in the low 32 bits                       * 00014000
*                                                                     * 00014100
*                                                                     * 00014200
*                                                                     * 00014300
*    For REQUEST=FREE                                                 * 00014400
*                                                                     * 00014500
*                                                                     * 00014600
*    REGISTER    CONTENTS                                             * 00014700
*                                                                     * 00014800
*    0-1         Used as work registers by the system                 * 00014900
*                                                                     * 00015000
*    2-12        Unchanged if REGS=SAVE was specified, used as work   * 00015100
*                registers by the system if REGS=USE was specified.   * 00015200
*                                                                     * 00015300
*    13          Unchanged                                            * 00015400
*                                                                     * 00015500
*    14-15       Used as work registers by the system                 * 00015600
*                                                                     * 00015700
*                                                                     * 00015800
*                                                                     * 00015900
*    When control returns to the caller, the ARs contain:             * 00016000
*                                                                     * 00016100
*                                                                     * 00016200
*    REGISTER    CONTENTS                                             * 00016300
*                                                                     * 00016400
*    0-1         Used as work registers by the system                 * 00016500
*                                                                     * 00016600
*    2-13        Unchanged                                            * 00016700
*                                                                     * 00016800
*    14-15       Used as work registers by the system                 * 00016900
*                                                                     * 00017000
*                                                                     * 00017100
*                                                                     * 00017200
*    Some callers depend on register contents remaining the same      * 00017300
*    before and after issuing a service.  If the system changes the   * 00017400
*    contents of registers on which the caller depends, the caller    * 00017500
*    must save them before issuing the service, and restore them      * 00017600
*    after the system returns control.                                * 00017700
*                                                                     * 00017800
*01* PERFORMANCE IMPLICATIONS:                                        * 00017900
*    None.                                                            * 00018000
*                                                                     * 00018100
*01* MACRO USAGE NOTES:                                               * 00018200
*                                                                     * 00018300
*                                                                     * 00018400
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00018500
*        global macro variable.  Any value other than 'NO' will       * 00018600
*        result in the macro expansion being printed.  The default is * 00018700
*        'YES'.  The following examples illustrate how the ZPRINT     * 00018800
*        variable should be set.                                      * 00018900
*                                                                     * 00019000
*                    GBLC &ZPRINT                                     * 00019100
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00019200
*                                                                     * 00019300
*                                                                     * 00019400
*    2.  All keys currently contained in the IARST64 macro correspond * 00019500
*        to  version 0.  If you specify PLISTVER, use a value of 0 or * 00019600
*        MAX.                                                         * 00019700
*                                                                     * 00019800
*                                                                     * 00019900
*    3.  There  is  diagnostic support for 64 bit cell pools, created * 00020000
*        by  IARST64,  in IPCS via the CBFORMAT command.  In order to * 00020100
*        locate  the  cell  pool  of interest, you need to follow the * 00020200
*        pointers from HP1, to HP2, to the CPHD.  For common storage, * 00020300
*        the  HP1  is  located in the ECVT.  CBF ECVT will format the * 00020400
*        ECVT, then do a FIND on HP1.  Extract the address of the HP1 * 00020500
*        from the ECVT and                                            * 00020600
*        CBF addrhp1 STR(IAXHP1)                                      * 00020700
*        will  format  the HP1.   Each entry in the HP1 represents an * 00020800
*        attribute  set  (storage  key, storage type (pageable, DREF, * 00020900
*        FIXED),  and  Fetch  Protection (ON or OFF)) The output from * 00021000
*        this  command  will  contain  CBF commands for any connected * 00021100
*        HP2s.    Select  the  CBF  command of interest and run it to * 00021200
*        format  the HP2.   The HP2 consists of pointers to cell pool * 00021300
*        headers  for  different sizes.   Choose the size of interest * 00021400
*        and select the command that will look like this:             * 00021500
*        CBF addrcphd STR(IAXCPHD).                                   * 00021600
*        This will format the cell pool header.  To see details about * 00021700
*        all  of  the  cells  in  the  pool,  use  the EXIT option as * 00021800
*        follows:                                                     * 00021900
*        CBF addrcphd STR(IAXCPHD) EXIT.                              * 00022000
*        For  private  storage, the HP1 is anchored in the STCB.  The * 00022100
*        quickest  way to locate the HP1 is to run the SUMMARY FORMAT * 00022200
*        command  for  the address space of interest.  Locate the TCB * 00022300
*        that  owns  the  storage of interest and then scroll down to * 00022400
*        the  formatted STCB.   The HP1 field contains the address of * 00022500
*        the HP1.  From here, the processing is the same as described * 00022600
*        for common storage above.                                    * 00022700
*        You can also use the EXIT option as follows:                 * 00022800
*        CBF addrhp1 STR(IAXHP1) EXIT                                 * 00022900
*        to  produce a report that summarizes the storage usage under * 00023000
*        that HP1.                                                    * 00023100
*                                                                     * 00023200
*                                                                     * 00023300
*                                                                     * 00023400
*01* SYNTAX:                                                          * 00023500
*                                                                     * 00023600
*Ýxlabel¨  IARST64  Ð  REQUEST=GET                                    * 00023700
*                   !     ,SIZE=xsize                                 * 00023800
*                   !    Ý,AREAADDR=xareaaddr¨                        * 00023900
*                   !    Ý,SENSITIVE=»UNKNOWN!YES!NOº¨                * 00024000
*                   !   Ð ,COMMON=NO                                  * 00024100
*                   !   !   Ð ,OWNINGTASK=CURRENT                     * 00024200
*                   !   !   Ô ,OWNINGTASK=MOTHER                      * 00024300
*                   !   !   Ô ,OWNINGTASK=IPT                         * 00024400
*                   !   !   Ô ,OWNINGTASK=JOBSTEP                     * 00024500
*                   !   !   Ô ,OWNINGTASK=CMRO                        * 00024600
*                   !   !   ¿ ,OWNINGTASK=RCT                         * 00024700
*                   !   !   ÐÝ,MEMLIMIT=YES¨                          * 00024800
*                   !   !   ¿Ý,MEMLIMIT=NO¨                           * 00024900
*                   !   !   ÐÝ,LOCALSYSAREA=NO¨                       * 00025000
*                   !   !   ¿Ý,LOCALSYSAREA=YES¨                      * 00025100
*                   !   ¿ ,COMMON=YES                                 * 00025200
*                   !       Ð ,OWNER=HOME                             * 00025300
*                   !       Ô ,OWNER=PRIMARY                          * 00025400
*                   !       Ô ,OWNER=SECONDARY                        * 00025500
*                   !       Ô ,OWNER=SYSTEM                           * 00025600
*                   !       ¿ ,OWNER=BYASID                           * 00025700
*                   !             ,OWNINGASID=xowningasid             * 00025800
*                   !   Ð ,FPROT=YES                                  * 00025900
*                   !   ¿ ,FPROT=NO                                   * 00026000
*                   !   Ð ,TYPE=PAGEABLE                              * 00026100
*                   !   Ô ,TYPE=DREF                                  * 00026200
*                   !   ¿ ,TYPE=FIXED                                 * 00026300
*                   !   Ð ,CALLERKEY=YES                              * 00026400
*                   !   ¿ ,CALLERKEY=NO                               * 00026500
*                   !         ,KEY00TOF0=xkey00tof0                   * 00026600
*                   !    Ý,R0VALUE=»xr0value!NO_R0VALUEº              * 00026700
*                   !         ,R1VALUE=xr1value¨                      * 00026800
*                   !   Ð ,FAILMODE=RC                                * 00026900
*                   !   ¿ ,FAILMODE=ABEND                             * 00027000
*                   !   Ð ,REGS=SAVE                                  * 00027100
*                   !   ¿ ,REGS=USE                                   * 00027200
*                   ¿ ,REQUEST=FREE                                   * 00027300
*                       Ð ,AREANAME=xareaname                         * 00027400
*                       ¿ ,AREAADDR=xareaaddr                         * 00027500
*                       Ð ,REGS=SAVE                                  * 00027600
*                       ¿ ,REGS=USE                                   * 00027700
*                    Ý,RETCODE=xretcode¨                              * 00027800
*                    Ý,RSNCODE=xrsncode¨                              * 00027900
*                                                                     * 00028000
*                                                                     * 00028100
*      Where:                                                         * 00028200
*                                                                     * 00028300
*                                                                     * 00028400
*      Ýxlabel¨                                                       * 00028500
*          is an optional symbol, starting in column 1, that is the   * 00028600
*          name on the IARST64 macro invocation.  The name must       * 00028700
*          conform to the rules for an ordinary assembler language    * 00028800
*          symbol.                                                    * 00028900
*          DEFAULT: No name.                                          * 00029000
*                                                                     * 00029100
*                                                                     * 00029200
*                                                                     * 00029300
*                                                                     * 00029400
*      REQUEST=»GET!FREEº                                             * 00029500
*          is a required keyword input that indicates the type of     * 00029600
*          request.                                                   * 00029700
*                                                                     * 00029800
*                                                                     * 00029900
*          REQUEST=GET                                                * 00030000
*              indicates to get storage                               * 00030100
*                                                                     * 00030200
*                                                                     * 00030300
*              SIZE=xsize                                             * 00030400
*                  is the name (RS-type), or address in register      * 00030500
*                  (2)-(12), of a required fullword input that        * 00030600
*                  indicates the size of the storage to be obtained.  * 00030700
*                  The size can be anywhere between 1 and 128K bytes. * 00030800
*                  The size will be rounded up to a power of 2.       * 00030900
*                  Sizes returned are 64, 128, 256, 512, 1024, 2048,  * 00031000
*                  4096, 8192, 16,384, 32,768, 65,536, and 131,072    * 00031100
*                  bytes.  The smallest size that will contain the    * 00031200
*                  request will be used.  When the requested size is  * 00031300
*                  at least 4 bytes less than the rounded up size, a  * 00031400
*                  trailer will be added to check for storage         * 00031500
*                  overruns.  For storage that is larger than what    * 00031600
*                  IARST64 supports, consider using IARCP64 or IARV64 * 00031700
*                  GETSTOR or GETCOMMON.  Do not specify a value      * 00031800
*                  exceeding 128K or incorrect results may ensue.     * 00031900
*                                                                     * 00032000
*                                                                     * 00032100
*                                                                     * 00032200
*                                                                     * 00032300
*              ÝAREAADDR=xareaaddr¨                                   * 00032400
*                  is the name (RS-type), or address in register      * 00032500
*                  (2)-(12), of an optional 8 byte output that will   * 00032600
*                  contain the address of the obtained storage.  If   * 00032700
*                  AREAADDR is not specified, the address is left in  * 00032800
*                  register 1.                                        * 00032900
*                                                                     * 00033000
*                                                                     * 00033100
*                                                                     * 00033200
*                                                                     * 00033300
*              ÝSENSITIVE=»UNKNOWN!YES!NOº¨                           * 00033400
*                  is an optional keyword input that specifies        * 00033500
*                  whether the memory will contain data that is       * 00033600
*                  potentially sensitive.  Marking data as sensitive  * 00033700
*                  allows installations to easily remove it from      * 00033800
*                  certain system diagnostics.                        * 00033900
*                  DEFAULT: UNKNOWN                                   * 00034000
*                                                                     * 00034100
*                                                                     * 00034200
*                  SENSITIVE=UNKNOWN                                  * 00034300
*                      specifies that the sensitivity of this data is * 00034400
*                      not known.  It may or may not contain          * 00034500
*                      sensitive data.                                * 00034600
*                                                                     * 00034700
*                  SENSITIVE=YES                                      * 00034800
*                      specifies that the memory contains sensitive   * 00034900
*                      data.                                          * 00035000
*                                                                     * 00035100
*                  SENSITIVE=NO                                       * 00035200
*                      specifies that the memory does not contain     * 00035300
*                      sensitive data.                                * 00035400
*                                                                     * 00035500
*                                                                     * 00035600
*                                                                     * 00035700
*                                                                     * 00035800
*                                                                     * 00035900
*                                                                     * 00036000
*              COMMON=»NO!YESº                                        * 00036100
*                  is a required keyword input that indicates if the  * 00036200
*                  pool is to reside in common storage.               * 00036300
*                                                                     * 00036400
*                                                                     * 00036500
*                  COMMON=NO                                          * 00036600
*                      indicates the pool is not to reside in common  * 00036700
*                      storage.                                       * 00036800
*                                                                     * 00036900
*                                                                     * 00037000
*                      OWNINGTASK=»CURRENT!MOTHER!IPT!JOBSTEP!CMRO!RC * 00037100
*                          Tº                                         * 00037200
*                          is a required keyword input that indicates * 00037300
*                          the task that is to be considered the      * 00037400
*                          owner.                                     * 00037500
*                                                                     * 00037600
*                                                                     * 00037700
*                          OWNINGTASK=CURRENT                         * 00037800
*                              indicates the current task is to be    * 00037900
*                              the owner.  Do not specify this unless * 00038000
*                              the program is in task mode.           * 00038100
*                                                                     * 00038200
*                          OWNINGTASK=MOTHER                          * 00038300
*                              indicates the mother task of the       * 00038400
*                              current task is to be the owner.  If   * 00038500
*                              the current task is the cross-memory   * 00038600
*                              resource owning task, the request will * 00038700
*                              fail.  Do not specify this unless the  * 00038800
*                              program is in task mode.               * 00038900
*                                                                     * 00039000
*                          OWNINGTASK=IPT                             * 00039100
*                              indicates the initial pthread task is  * 00039200
*                              to be the owner.  If the current task  * 00039300
*                              or mother task is not the IPT, then    * 00039400
*                              this will default to the current task  * 00039500
*                              as the owner.  Do not specify this     * 00039600
*                              unless the program is in task mode.    * 00039700
*                                                                     * 00039800
*                          OWNINGTASK=JOBSTEP                         * 00039900
*                              indicates the jobstep task of the      * 00040000
*                              current task (the task with TCB        * 00040100
*                              address in field TCBJSTCB of the       * 00040200
*                              current task's TCB) is to be the       * 00040300
*                              owner.  Do not specify this unless the * 00040400
*                              program is in task mode.               * 00040500
*                                                                     * 00040600
*                          OWNINGTASK=CMRO                            * 00040700
*                              indicates the cross-memory             * 00040800
*                              resource-owning task is to be      the * 00040900
*                              owner.                                 * 00041000
*                                                                     * 00041100
*                          OWNINGTASK=RCT                             * 00041200
*                              indicates the region control task      * 00041300
*                              (RCT) is to be the owner.  You must be * 00041400
*                              key 0-7 to request this option.        * 00041500
*                                                                     * 00041600
*                                                                     * 00041700
*                                                                     * 00041800
*                                                                     * 00041900
*                                                                     * 00042000
*                                                                     * 00042100
*                      ÝMEMLIMIT=»YES!NOº¨                            * 00042200
*                          is an optional keyword input that          * 00042300
*                          indicates whether MEMLIMIT applies if an   * 00042400
*                          additional 1M segment is obtained to       * 00042500
*                          satisfy the request.                       * 00042600
*                          DEFAULT: YES                               * 00042700
*                                                                     * 00042800
*                                                                     * 00042900
*                          ÝMEMLIMIT=YES¨                             * 00043000
*                              indicates that MEMLIMIT applies.       * 00043100
*                                                                     * 00043200
*                          ÝMEMLIMIT=NO¨                              * 00043300
*                              indicates that MEMLIMIT does not       * 00043400
*                              apply.                                 * 00043500
*                                                                     * 00043600
*                                                                     * 00043700
*                                                                     * 00043800
*                                                                     * 00043900
*                                                                     * 00044000
*                                                                     * 00044100
*                      ÝLOCALSYSAREA=»NO!YESº¨                        * 00044200
*                          is an optional keyword input that          * 00044300
*                          specifies whether this is an explicit      * 00044400
*                          allocation request for 64-bit virtual      * 00044500
*                          storage in the local system area.  The     * 00044600
*                          localsysarea parameter can be used only by * 00044700
*                          callers running in supervisor state or     * 00044800
*                          with a PSW key 0-7.                        * 00044900
*                          DEFAULT: NO                                * 00045000
*                                                                     * 00045100
*                                                                     * 00045200
*                          ÝLOCALSYSAREA=NO¨                          * 00045300
*                              The request will not be satisfied from * 00045400
*                              the local system area.                 * 00045500
*                                                                     * 00045600
*                          ÝLOCALSYSAREA=YES¨                         * 00045700
*                              The request is to be satisfied from    * 00045800
*                              the local system area. The Storage     * 00045900
*                              obtained with this keyword will not be * 00046000
*                              copied during Fork processing.  The    * 00046100
*                              use of local system area storage does  * 00046200
*                              not preclude checkpoint/ restart from  * 00046300
*                              succeeding.                            * 00046400
*                                                                     * 00046500
*                                                                     * 00046600
*                                                                     * 00046700
*                                                                     * 00046800
*                                                                     * 00046900
*                  COMMON=YES                                         * 00047000
*                      indicates the pool is to reside in common      * 00047100
*                      storage.                                       * 00047200
*                                                                     * 00047300
*                                                                     * 00047400
*                      OWNER=»HOME!PRIMARY!SECONDARY!SYSTEM!BYASIDº   * 00047500
*                                                                     * 00047600
*                          is a required keyword input that           * 00047700
*                          designates the owner of the storage.       * 00047800
*                                                                     * 00047900
*                                                                     * 00048000
*                          OWNER=HOME                                 * 00048100
*                              indicates the home address space is to * 00048200
*                              be the owner.                          * 00048300
*                                                                     * 00048400
*                          OWNER=PRIMARY                              * 00048500
*                              indicates the primary address space is * 00048600
*                              to be the owner.                       * 00048700
*                                                                     * 00048800
*                          OWNER=SECONDARY                            * 00048900
*                              indicates the secondary address space  * 00049000
*                              is to be the owner.                    * 00049100
*                                                                     * 00049200
*                          OWNER=SYSTEM                               * 00049300
*                              indicates the system is to be the      * 00049400
*                              owner. Use this only when there is no  * 00049500
*                              specific address space which can be    * 00049600
*                              considered the owner.                  * 00049700
*                                                                     * 00049800
*                          OWNER=BYASID                               * 00049900
*                              indicates the owner is the ASID        * 00050000
*                              specified by the OwningASID parameter. * 00050100
*                                                                     * 00050200
*                                                                     * 00050300
*                              OWNINGASID=xowningasid                 * 00050400
*                                  is the name (RS-type), or address  * 00050500
*                                  in register (2)-(12), of a         * 00050600
*                                  required halfword input that       * 00050700
*                                  specifies the ASID that is to be   * 00050800
*                                  the owner.  A value of 0 is        * 00050900
*                                  equivalent to having specified     * 00051000
*                                  OWNER=SYSTEM.  Do not specify a    * 00051100
*                                  value exceeding 32767 or incorrect * 00051200
*                                  results may ensue.                 * 00051300
*                                                                     * 00051400
*                                                                     * 00051500
*                                                                     * 00051600
*                                                                     * 00051700
*                                                                     * 00051800
*                                                                     * 00051900
*                                                                     * 00052000
*                                                                     * 00052100
*                                                                     * 00052200
*                                                                     * 00052300
*                                                                     * 00052400
*                                                                     * 00052500
*              FPROT=»YES!NOº                                         * 00052600
*                  is a required keyword input that indicates if the  * 00052700
*                  pool storage is to be fetch-protected.             * 00052800
*                                                                     * 00052900
*                                                                     * 00053000
*                  FPROT=YES                                          * 00053100
*                      indicates the pool storage is to be            * 00053200
*                      fetch-protected.                               * 00053300
*                                                                     * 00053400
*                  FPROT=NO                                           * 00053500
*                      indicates the pool storage is not to be        * 00053600
*                      fetch-protected.                               * 00053700
*                                                                     * 00053800
*                                                                     * 00053900
*                                                                     * 00054000
*                                                                     * 00054100
*                                                                     * 00054200
*                                                                     * 00054300
*              TYPE=»PAGEABLE!DREF!FIXEDº                             * 00054400
*                  is a required keyword input that indicates the     * 00054500
*                  type of storage for the pool.                      * 00054600
*                                                                     * 00054700
*                                                                     * 00054800
*                  TYPE=PAGEABLE                                      * 00054900
*                      indicates the pool storage is to be pageable.  * 00055000
*                                                                     * 00055100
*                  TYPE=DREF                                          * 00055200
*                      indicates the pool storage is to be            * 00055300
*                      disabled-reference (DREF).                     * 00055400
*                                                                     * 00055500
*                  TYPE=FIXED                                         * 00055600
*                      indicates the pool storage is to be            * 00055700
*                      page-fixed.                                    * 00055800
*                                                                     * 00055900
*                                                                     * 00056000
*                                                                     * 00056100
*                                                                     * 00056200
*                                                                     * 00056300
*                                                                     * 00056400
*              CALLERKEY=»YES!NOº                                     * 00056500
*                  is a required keyword input that indicates if the  * 00056600
*                  pool storage is to be in the key of the caller of  * 00056700
*                  the GET request.                                   * 00056800
*                                                                     * 00056900
*                                                                     * 00057000
*                  CALLERKEY=YES                                      * 00057100
*                      indicates the pool storage is to be in the key * 00057200
*                      of the caller.                                 * 00057300
*                                                                     * 00057400
*                  CALLERKEY=NO                                       * 00057500
*                      indicates the pool storage is not to be in the * 00057600
*                      key of the caller, but instead in the key      * 00057700
*                      specified by the Key00ToF0 parameter.          * 00057800
*                                                                     * 00057900
*                                                                     * 00058000
*                      KEY00TOF0=xkey00tof0                           * 00058100
*                          is the name (RS-type), or address in       * 00058200
*                          register (2)-(12), of a required byte      * 00058300
*                          input that indicates the key for the pool  * 00058400
*                          storage. The value should be in the range  * 00058500
*                          x'00' to x'70' (i.e., the key 0-7 in the   * 00058600
*                          high 4 bits of the byte) for a caller that * 00058700
*                          is key 0.  For caller's in key 1-7, there  * 00058800
*                          is no reason to use this parameter. The    * 00058900
*                          value x'90' is the only accepted key for a * 00059000
*                          caller that is key 8-15.  Be sure that the * 00059100
*                          value is a multiple of 16 within the       * 00059200
*                          required range or incorrect results may    * 00059300
*                          ensue.                                     * 00059400
*                                                                     * 00059500
*                                                                     * 00059600
*                                                                     * 00059700
*                                                                     * 00059800
*                                                                     * 00059900
*                                                                     * 00060000
*                                                                     * 00060100
*                                                                     * 00060200
*              ÝR0VALUE=»xr0value!NO_R0VALUEº                         * 00060300
*                  is the name (RS-type), or address in register      * 00060400
*                  (2)-(12), of an optional doubleword input that     * 00060500
*                  contains the value to be placed into 64-bit GPR 0  * 00060600
*                  DEFAULT: NO_R0VALUE                                * 00060700
*                                                                     * 00060800
*                                                                     * 00060900
*                  R1VALUE=xr1value¨                                  * 00061000
*                      is the name (RS-type), or address in register  * 00061100
*                      (2)-(12), of a required doubleword input that  * 00061200
*                      contains the value to be placed into 64-bit    * 00061300
*                      GPR 1                                          * 00061400
*                      DEFAULT: NO_R1VALUE                            * 00061500
*                                                                     * 00061600
*                                                                     * 00061700
*                                                                     * 00061800
*                                                                     * 00061900
*                                                                     * 00062000
*                                                                     * 00062100
*              FAILMODE=»RC!ABENDº                                    * 00062200
*                  is a required keyword input that indicates what to * 00062300
*                  do if the GET request was not successful due to    * 00062400
*                  out of memory in the requested area conditions.    * 00062500
*                                                                     * 00062600
*                                                                     * 00062700
*                  FAILMODE=RC                                        * 00062800
*                      indicates to return with a failure return      * 00062900
*                      code.  Note that there will be cases for which * 00063000
*                      an ABEND occurs regardless of the              * 00063100
*                      specification of FAILMODE=RC.                  * 00063200
*                                                                     * 00063300
*                  FAILMODE=ABEND                                     * 00063400
*                      indicates to abend.                            * 00063500
*                                                                     * 00063600
*                                                                     * 00063700
*                                                                     * 00063800
*                                                                     * 00063900
*                                                                     * 00064000
*                                                                     * 00064100
*              REGS=»SAVE!USEº                                        * 00064200
*                  is a required keyword input that indicates how to  * 00064300
*                  deal with the registers                            * 00064400
*                                                                     * 00064500
*                                                                     * 00064600
*                  REGS=SAVE                                          * 00064700
*                      indicates to save and preserve the contents of * 00064800
*                      64-bit GPRs 2 - 12 starting at offset 40 in a  * 00064900
*                      144 byte area pointed to by register 13.       * 00065000
*                                                                     * 00065100
*                  REGS=USE                                           * 00065200
*                      indicates to allow use of registers 2 - 12.    * 00065300
*                                                                     * 00065400
*                                                                     * 00065500
*                                                                     * 00065600
*                                                                     * 00065700
*                                                                     * 00065800
*          REQUEST=FREE                                               * 00065900
*              indicates to return storage.  Note that this request   * 00066000
*              is unconditional, and will abend if there is a         * 00066100
*              problem. No return and reason codes are provided, so   * 00066200
*              do not specify the RETCODE and RSNCODE parameters.     * 00066300
*                                                                     * 00066400
*                                                                     * 00066500
*              The following is a set of mutually exclusive keys.     * 00066600
*              This set is required; only one key must be specified.  * 00066700
*                                                                     * 00066800
*                                                                     * 00066900
*              AREANAME=xareaname                                     * 00067000
*                  belongs to a set of mutually exclusive keys. It is * 00067100
*                  the name (RS-type), or address in register         * 00067200
*                  (2)-(12), of a character input that is the area to * 00067300
*                  free.                                              * 00067400
*                                                                     * 00067500
*              AREAADDR=xareaaddr                                     * 00067600
*                  belongs to a set of mutually exclusive keys. It is * 00067700
*                  the name (RS-type), or address in register         * 00067800
*                  (2)-(12), of an 8 byte input that contains the     * 00067900
*                  address of the area to free.                       * 00068000
*                                                                     * 00068100
*                                                                     * 00068200
*                                                                     * 00068300
*              End of a set of mutually exclusive required keys.      * 00068400
*                                                                     * 00068500
*                                                                     * 00068600
*                                                                     * 00068700
*              REGS=»SAVE!USEº                                        * 00068800
*                  is a required keyword input that indicates how to  * 00068900
*                  deal with the registers                            * 00069000
*                                                                     * 00069100
*                                                                     * 00069200
*                  REGS=SAVE                                          * 00069300
*                      indicates to save and preserve the contents of * 00069400
*                      64-bit GPRs 2 - 12 starting at offset 40 in a  * 00069500
*                      144 byte area pointed to by register 13.       * 00069600
*                                                                     * 00069700
*                  REGS=USE                                           * 00069800
*                      indicates to allow use of registers 2 - 12.    * 00069900
*                                                                     * 00070000
*                                                                     * 00070100
*                                                                     * 00070200
*                                                                     * 00070300
*                                                                     * 00070400
*                                                                     * 00070500
*                                                                     * 00070600
*                                                                     * 00070700
*                                                                     * 00070800
*                                                                     * 00070900
*      ÝRETCODE=xretcode¨                                             * 00071000
*          is the name (RS-type) of an optional fullword output       * 00071100
*          variable, or register (2)-(12) or (15), into which the     * 00071200
*          return code is to be copied from GPR 15.  If you specify   * 00071300
*          15, GPR15, REG15, or R15 (within or without parentheses),  * 00071400
*          the value will be left in GPR 15.                          * 00071500
*                                                                     * 00071600
*                                                                     * 00071700
*                                                                     * 00071800
*                                                                     * 00071900
*      ÝRSNCODE=xrsncode¨                                             * 00072000
*          is the name (RS-type) of an optional fullword output       * 00072100
*          variable into which the reason code is to be copied from   * 00072200
*          GPR 0.  If you specify 0, 00, GPR0, GPR00, REG0, REG00, or * 00072300
*          R0 (within or without parentheses), the value will be left * 00072400
*          in GPR 0.                                                  * 00072500
*                                                                     * 00072600
*                                                                     * 00072700
*                                                                     * 00072800
*01* RETURN CODES:                                                    * 00072900
*                                                                     * 00073000
*                                                                     * 00073100
*                 Macro IAXSERVC provides equate symbols for the      * 00073200
*                 return and reason codes.                            * 00073300
*                                                                     * 00073400
*       0         Name: IARST64Rc_OK                                  * 00073500
*                                                                     * 00073600
*                 Meaning: IARST64 request successful.                * 00073700
*                                                                     * 00073800
*                 Action: None required.                              * 00073900
*                                                                     * 00074000
*                                                                     * 00074100
*                 GET       MEANING: storage obtained of requested    * 00074200
*                           size and attributes                       * 00074300
*                                                                     * 00074400
*                           ACTION: None required.                    * 00074500
*                                                                     * 00074600
*                 FREE      MEANING: storage freed                    * 00074700
*                                                                     * 00074800
*                           ACTION: None required.                    * 00074900
*                                                                     * 00075000
*                                                                     * 00075100
*                                                                     * 00075200
*                                                                     * 00075300
*       8         Name: IARST64Rc_Fail                                * 00075400
*                                                                     * 00075500
*                 Meaning: Service failed due to running out of       * 00075600
*                 resources                                           * 00075700
*                                                                     * 00075800
*                 Action: Refer to the action provided with the       * 00075900
*                 specific reason  code.                              * 00076000
*                                                                     * 00076100
*                                                                     * 00076200
*                                                                     * 00076300
*                 HEX REASON  MEANING/ACTION                          * 00076400
*                 CODE                                                * 00076500
*                                                                     * 00076600
*                 xx0401xx    Name: IARST64RsnMemlimitExhausted       * 00076700
*                                                                     * 00076800
*                             Meaning: The request to the IARST64 GET * 00076900
*                             service was not able to obtain storage  * 00077000
*                             due to address space limits.            * 00077100
*                                                                     * 00077200
*                             Action: Either raise the MEMLIMIT of    * 00077300
*                             the address space or  determine if      * 00077400
*                             private storage is being consumed       * 00077500
*                             excessively somewhere.  Authorized      * 00077600
*                             callers can specify MEMLIMIT=NO on the  * 00077700
*                             IARCP64 BUILD to bypass the address     * 00077800
*                             space limit checking.                   * 00077900
*                                                                     * 00078000
*                 xx0402xx    Name: IARST64Rsn64BitCommonExhausted    * 00078100
*                                                                     * 00078200
*                             Meaning: The request to the IARST64 GET * 00078300
*                             service was not able to obtain storage  * 00078400
*                             due to system limits.                   * 00078500
*                                                                     * 00078600
*                             Action: For common storage, either      * 00078700
*                             raise the system limit on common        * 00078800
*                             (HVCOMMON) or determine if common       * 00078900
*                             storage is being consumed excessively   * 00079000
*                             somewhere.                              * 00079100
*                                                                     * 00079200
*                 xx0403xx    Name: IARST64RsnMemlimitZero            * 00079300
*                                                                     * 00079400
*                             Meaning: The request to IARST64 GET was * 00079500
*                             not able to obtain private storage due  * 00079600
*                             to the address space MEMLIMIT being set * 00079700
*                             to zero.                                * 00079800
*                                                                     * 00079900
*                             Action: Either set the MEMLIMIT of the  * 00080000
*                             address space to a non-zero value or if * 00080100
*                             authorized, specify MEMLIMIT=NO on the  * 00080200
*                             IARST64 GET call to tell the service to * 00080300
*                             bypass the address space MEMLIMIT.      * 00080400
*                                                                     * 00080500
*                 xx0404xx    Name: IARST64RsnLocking                 * 00080600
*                                                                     * 00080700
*                             Meaning: The request to IARST64         * 00080800
*                             BUILD/GET was unable to obtain common   * 00080900
*                             storage because the invoker holds a     * 00081000
*                             lock that prevents creation/expansion   * 00081100
*                             of the cellpool.  This reason code is   * 00081200
*                             not part of the programming interface.  * 00081300
*                                                                     * 00081400
*                             Action: None                            * 00081500
*                                                                     * 00081600
*                                                                     * 00081700
*                                                                     * 00081800
*                                                                     * 00081900
*                                                                     * 00082000
*                                                                     * 00082100
*                                                                     * 00082200
*01* REASON CODES:                                                    * 00082300
*       Reason codes, as appropriate, are defined under their         * 00082400
*       corresponding return code.                                    * 00082500
*                                                                     * 00082600
*01* ABEND CODES:                                                     * 00082700
*                                                                     * 00082800
*                                                                     * 00082900
*       DC4       IARST64 failed                                      * 00083000
*                                                                     * 00083100
*                                                                     * 00083200
*                                                                     * 00083300
*01* ABEND REASON CODES:                                              * 00083400
*                                                                     * 00083500
*       In the following IARST64 abend reason codes, the bytes        * 00083600
*       designated "xx" are for diagnostic purposes and have no       * 00083700
*       significance to the external interface.  Equate               * 00083800
*       IARST64AbendRsncodeMask has been provided to let you build a  * 00083900
*       mask to ignore those bytes.                                   * 00084000
*                                                                     * 00084100
*       REASON    ABEND                                               * 00084200
*       CODE      CODE      DESCRIPTION                               * 00084300
*       --------  --------  -----------                               * 00084400
*                                                                     * 00084500
*                                                                     * 00084600
*       xx0410xx  DC4       Name: IARST64AbendRsnCellAddrLow          * 00084700
*                           Meaning: The storage address passed to    * 00084800
*                           the IARST64 FREE service is within a meg  * 00084900
*                           used for storage pools, but the address   * 00085000
*                           is less than the address of the 1st       * 00085100
*                           usable storage address.                   * 00085200
*                           Action: Correct the address passed to     * 00085300
*                           IARST64 FREE, making sure it is the same  * 00085400
*                           address that was returned from IARST64    * 00085500
*                           GET.                                      * 00085600
*                                                                     * 00085700
*       xx0511xx  DC4       Name: IARST64AbendRsnKeyGT7Common         * 00085800
*                           Meaning: The request to IARST64 GET was   * 00085900
*                           for common storage, but the requested or  * 00086000
*                           caller key was greater than key 7.  You   * 00086100
*                           cannot allocate common storage in key 8   * 00086200
*                           or above.                                 * 00086300
*                           Action: Correct the key passed to IARST64 * 00086400
*                           GET or change your request to get private * 00086500
*                           storage.                                  * 00086600
*                                                                     * 00086700
*       xx0512xx  DC4       Name: IARST64AbendRsnGetMotherFromCmro    * 00086800
*                           Meaning: The request was to the IARST64   * 00086900
*                           GET service and specified                 * 00087000
*                           OWNINGTASK(MOTHER), but the caller is     * 00087100
*                           running on the CMRO task.  You can't      * 00087200
*                           request the mother task be the storage    * 00087300
*                           owner from the CMRO task.                 * 00087400
*                           Action: Either specify CMRO as the owner  * 00087500
*                           or specify RCT if you want the storage to * 00087600
*                           persist across termination of the CMRO.   * 00087700
*                                                                     * 00087800
*       xx0413xx  DC4       Name: IARST64AbendRsnCellNotInExtent      * 00087900
*                           Meaning: The request was to the IARCP64   * 00088000
*                           or IARST64 FREE service and the address   * 00088100
*                           of the storage passed in, is not within   * 00088200
*                           the bounds of a cell pool.                * 00088300
*                           Action: The address passed to IARST64     * 00088400
*                           REQUEST=FREE must be the same as the      * 00088500
*                           address obtained from IARST64             * 00088600
*                           REQUEST=GET.                              * 00088700
*                                                                     * 00088800
*       xx0514xx  DC4       Name: IARST64AbendRsnGetNotRctOrCmro      * 00088900
*                           Meaning: The request was to the IARST64   * 00089000
*                           GET service for private storage and the   * 00089100
*                           caller was running in cross memory mode   * 00089200
*                           or SRB mode.  In these envrionments the   * 00089300
*                           OWNINGTASK parameter must be set to RCT   * 00089400
*                           or CMRO.  Neither of these was specified, * 00089500
*                           so the request is failed.                 * 00089600
*                           Action: Specify the OWNINGTASK parameter  * 00089700
*                           as RCT or CMRO.                           * 00089800
*                                                                     * 00089900
*       xx0515xx  DC4       Name: IARST64AbendRsnGetCellSizeZero      * 00090000
*                           Meaning: The request was to the IARST64   * 00090100
*                           GET service and specified a length of     * 00090200
*                           zero.                                     * 00090300
*                           Action: Specify a length between 1 and    * 00090400
*                           128K.                                     * 00090500
*                                                                     * 00090600
*       xx0516xx  DC4       Name: IARST64AbendRsnGetNotAuth           * 00090700
*                           Meaning: The request was to the IARST64   * 00090800
*                           GET service and specified a parameter     * 00090900
*                           that requires the caller to be running in * 00091000
*                           key 0-7.  The caller is not authorized to * 00091100
*                           use authorized options of COMMON, DREF,   * 00091200
*                           FIXED, OWNINGTASK(RCT), CALLERKEY(NO) and * 00091300
*                           Key00ToF0 set to a system key.            * 00091400
*                           Action: Either run the code in key 0-7 or * 00091500
*                           do not use authorized options.            * 00091600
*                                                                     * 00091700
*       xx0517xx  DC4       Name: IARST64AbendRsnGetCellSizeTooBig    * 00091800
*                           Meaning: The request was to the IARST64   * 00091900
*                           GET service and specified a length        * 00092000
*                           greater than 128K.                        * 00092100
*                           Action: Specify a size between 1 and      * 00092200
*                           128K.  If larger storage is needed,       * 00092300
*                           consider using IARCP64 or IARV64 GETSTOR  * 00092400
*                           or GETCOMMON.                             * 00092500
*                                                                     * 00092600
*       xx0518xx  DC4       Name: IARST64AbendRsnGetKeyNot9           * 00092700
*                           Meaning: The request was to the IARST64   * 00092800
*                           GET service and specified a CALLERKEY(NO) * 00092900
*                           and a value for Key00ToF0 that was not    * 00093000
*                           key 9 and the caller is not authorized.   * 00093100
*                           Action: The only key that an unauthorized * 00093200
*                           user can specify is key 9.  Either        * 00093300
*                           request key 9 or change the specification * 00093400
*                           to CALLERKEY(YES).                        * 00093500
*                                                                     * 00093600
*       xx0419xx  DC4       Name: IARST64AbendRsnCellOverRun          * 00093700
*                           Meaning: The request was to the IARCP64   * 00093800
*                           or IARST64 FREE service and the trailer   * 00093900
*                           data at the end of the cell was detected  * 00094000
*                           as being overrun.  If the overrun is      * 00094100
*                           sufficiently large, it will cause damage  * 00094200
*                           to the following cell.  The caller is     * 00094300
*                           abended so they can fix the code to not   * 00094400
*                           use more storage than is requested.       * 00094500
*                           Action: Determine whether the storage has * 00094600
*                           been overrun or whether the trailer data  * 00094700
*                           was overlaid by some other code.   Fix    * 00094800
*                           the code so it only uses the amount of    * 00094900
*                           storage requested.                        * 00095000
*                                                                     * 00095100
*       xx041Axx  DC4       Name: IARST64AbendRsnCellNotInUse         * 00095200
*                           Meaning: The request was to the IARCP64   * 00095300
*                           or IARST64 FREE service and the address   * 00095400
*                           of the storage passed in, is already in   * 00095500
*                           the freed state.  This will happen when   * 00095600
*                           an application frees the storage twice.   * 00095700
*                           Action: Determine whether the current     * 00095800
*                           application is freeing the storage twice  * 00095900
*                           or whether it is using a cell that some   * 00096000
*                           other storage is freeing twice.           * 00096100
*                                                                     * 00096200
*       xx041Bxx  DC4       Name: IARST64AbendRsnNotOnCellBoundary    * 00096300
*                           Meaning: The request was to the IARCP64   * 00096400
*                           or IARST64 FREE service and the address   * 00096500
*                           of the storage passed in is not on a cell * 00096600
*                           boundary in the cell pool from which the  * 00096700
*                           GET request was satisfied.                * 00096800
*                           Action: When freeing storage with IARST64 * 00096900
*                           REQUEST=FREE, make sure to specify the    * 00097000
*                           address that was returned by IARST64      * 00097100
*                           REQUEST=GET.                              * 00097200
*                                                                     * 00097300
*       xx041Cxx  DC4       Name: IARST64AbendRsnIARV64Error          * 00097400
*                           Meaning: During processing of IARST64     * 00097500
*                           GET, a call to the IARV64 service for     * 00097600
*                           GETSTOR, GETCOMMON, PAGEFIX or PROTECT    * 00097700
*                           failed.  The failing return code from     * 00097800
*                           IARV64 was placed in register 2 prior to  * 00097900
*                           the abend.  The failing reason code from  * 00098000
*                           IARV64 was placed in register 3 prior to  * 00098100
*                           the abend.                                * 00098200
*                           Action: Examine the return and reason     * 00098300
*                           code as documented under IARV64 to        * 00098400
*                           determine if the problem is one that you  * 00098500
*                           can resolve.                              * 00098600
*                                                                     * 00098700
*       xx0420xx  DC4       Name: IARST64AbendRsnCphaNotQueue         * 00098800
*                           Meaning: The cell pool header authorized  * 00098900
*                           area was not queued to the owning task as * 00099000
*                           expected.  This could happen due to       * 00099100
*                           storage overlays or the caller bypassing  * 00099200
*                           the IARST64 macro and PCing directly to   * 00099300
*                           the service with incorrect input          * 00099400
*                           paramters.                                * 00099500
*                           Action: Make sure the application is      * 00099600
*                           using the IARST64 macro to request        * 00099700
*                           storage.  If the problem persists,        * 00099800
*                           collect a dump and contact IBM service.   * 00099900
*                                                                     * 00100000
*       xx0425xx  DC4       Name: IARST64AbendRsnPoolNotInCallerKey   * 00100100
*                           Meaning: The request to IARST64 GET was   * 00100200
*                           against a storage pool that was not in    * 00100300
*                           the key of the caller. Normally this will * 00100400
*                           abend with an 0C4, but if the pool is out * 00100500
*                           of cells and is in storage that is not    * 00100600
*                           fetch protected, the pool expand routine  * 00100700
*                           verifies that the caller is allowed to    * 00100800
*                           modify this storage pool.                 * 00100900
*                           Action: You must be in a key that has the * 00101000
*                           ability to modify the pool storage for    * 00101100
*                           the request to be processed.              * 00101200
*                                                                     * 00101300
*       xx0426xx  DC4       Name:                                     * 00101400
*                           IARST64AbendRsnPrimaryExtentOverlaid      * 00101500
*                           Meaning: The request to IARST64 or        * 00101600
*                           IARCP64 GET was against a storage pool    * 00101700
*                           where the primary extent control          * 00101800
*                           information has been overlaid.            * 00101900
*                           Action: Collect a dump and report the     * 00102000
*                           problem to IBM.                           * 00102100
*                                                                     * 00102200
*       xx0427xx  DC4       Name:                                     * 00102300
*                           IARST64AbendRsnSecondaryExtentOverlaid    * 00102400
*                           Meaning: The request to IARST64 or        * 00102500
*                           IARCP64 GET was against a storage pool    * 00102600
*                           where the secondary extent control        * 00102700
*                           information has been overlaid.            * 00102800
*                           Action: Collect a dump and report the     * 00102900
*                           problem to IBM.                           * 00103000
*                                                                     * 00103100
*       xx0428xx  DC4       Name: IARST64AbendRsnUnexpectedError      * 00103200
*                           Meaning: During processing of IARST64 GET * 00103300
*                           an unexpected abend occured.  An SDUMP    * 00103400
*                           should have been generated.               * 00103500
*                           Action: Collect the dump and report the   * 00103600
*                           problem to IBM.                           * 00103700
*                                                                     * 00103800
*       xx0529xx  DC4       Name: IARST64AbendRsnGetSizeTooBig        * 00103900
*                           Meaning: The call to the IARST64 GET      * 00104000
*                           service specified a cell size larger than * 00104100
*                           the maximum size supported.               * 00104200
*                           Action: Specify a size between 1 and      * 00104300
*                           128K.  If a larger storage area is        * 00104400
*                           needed, consider using IARCP64 or IARV64  * 00104500
*                           REQUEST=GETSTOR or GETCOMMON.             * 00104600
*                                                                     * 00104700
*       xx052Axx  DC4       Name: IARST64AbendRsnValidationError      * 00104800
*                           Meaning: The call to the IARST64 GET      * 00104900
*                           service detected a validation error when  * 00105000
*                           locating the storage pool to be used.     * 00105100
*                           Possible cause is storage overlay of the  * 00105200
*                           storage pool control block in the         * 00105300
*                           caller's key.                             * 00105400
*                           Action: Collect a dump and report the     * 00105500
*                           problem to IBM.                           * 00105600
*                                                                     * 00105700
*       xx052Bxx  DC4       Name: IARST64AbendRsnMemLimitNoUnauth     * 00105800
*                           Meaning: The call to the IARST64 GET      * 00105900
*                           service requested MEMLIMIT=NO, but is     * 00106000
*                           running unauthorized (key 8-15 and        * 00106100
*                           problem program state).                   * 00106200
*                           Action: Either specify MEMLIMIT=YES or    * 00106300
*                           call from an authorized environment.      * 00106400
*                                                                     * 00106500
*       xx052Cxx  DC4       Name: IARST64AbendRsnCellLT4Gig           * 00106600
*                           Meaning: The call to the IARCP64 or       * 00106700
*                           IARST64 FREE service was passed a cell    * 00106800
*                           address less than 4 Gig, so it can't      * 00106900
*                           possibly be a valid cell address in a 64  * 00107000
*                           bit cell pool.                            * 00107100
*                           Action: Only pass a storage address that  * 00107200
*                           was obtained with IARCP64 or IARST64 GET. * 00107300
*                                                                     * 00107400
*       xx052Dxx  DC4       Name:                                     * 00107500
*                           IARST64AbendRsnLocalSysAreaYesUnauth      * 00107600
*                           Meaning: The call to the IARST64 GET      * 00107700
*                           service requested LocalSysArea=Yes, but   * 00107800
*                           is running unauthorized (key 8-15 and     * 00107900
*                           problem program state).                   * 00108000
*                           Action: Either specify LocalSysArea=No or * 00108100
*                           call from an authorized environment.      * 00108200
*                                                                     * 00108300
*       xx052Exx  DC4       Name: IARST64AbendRsnKeyGT7               * 00108400
*                           Meaning: An IARST64 GET service requested * 00108500
*                           private storage, with CALLERKEY(NO) and   * 00108600
*                           Key00ToF0 greater than key 7 when the     * 00108700
*                           callerkey was less than key 8.  An        * 00108800
*                           authorized caller can't request           * 00108900
*                           unauthorized storage.                     * 00109000
*                           Action: Correct the key of the requested  * 00109100
*                           storage or change the caller key.         * 00109200
*                                                                     * 00109300
*                                                                     * 00109400
*                                                                     * 00109500
*01* MODULE TYPE:  ASSEM MACRO                                        * 00109600
*                                                                     * 00109700
*02*   PROCESSOR:  ASSEM                                              * 00109800
*                                                                     * 00109900
*01* COMPONENT:  SC1CR                                                * 00110000
*                                                                     * 00110100
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00110200
*                                                                     * 00110300
*01* EXAMPLES:                                                        * 00110400
*                                                                     * 00110500
*    Example 1                                                        * 00110600
*                                                                     * 00110700
*    Operation:                                                       * 00110800
*                                                                     * 00110900
*                                                                     * 00111000
*    1.  Obtain storage                                               * 00111100
*                                                                     * 00111200
*                                                                     * 00111300
*        o   32-byte area                                             * 00111400
*                                                                     * 00111500
*        o   In private storage                                       * 00111600
*                                                                     * 00111700
*        o   With an owning task of the current task                  * 00111800
*                                                                     * 00111900
*        o   Dumped similar to "LSQA" processing (triggered by DREF   * 00112000
*            or FIXED)                                                * 00112100
*                                                                     * 00112200
*        o   Fetch-protected                                          * 00112300
*                                                                     * 00112400
*        o   DREF storage                                             * 00112500
*                                                                     * 00112600
*        o   In Key 7                                                 * 00112700
*                                                                     * 00112800
*        o   Provide Return Code if the request is not successful     * 00112900
*                                                                     * 00113000
*        o   Save and restore registers                               * 00113100
*                                                                     * 00113200
*                                                                     * 00113300
*                                                                     * 00113400
*                                                                     * 00113500
*                                                                     * 00113600
*    The code is as follows.                                          * 00113700
*                                                                     * 00113800
*             IARST64 REQUEST=GET,                                *   * 00113900
*                   AREAADDR=theAreaAddr,                         *   * 00114000
*                   SIZE=theAreaSize,                             *   * 00114100
*                   COMMON=NO,OWNINGTASK=CURRENT,                 *   * 00114200
*                   FPROT=YES,TYPE=DREF,                          *   * 00114300
*                   CALLERKEY=NO,KEY00TOF0=theKEY,                *   * 00114400
*                   FAILMODE=RC,                                  *   * 00114500
*                   REGS=SAVE,                                    *   * 00114600
*                   RETCODE=LRETCODE,RSNCODE=LRSNCODE,                * 00114700
*    *                                                                * 00114800
*    * Place code to check return/reason codes here.                  * 00114900
*    *                                                                * 00115000
*    theAreaSize DC   F'32'         32-byte area                      * 00115100
*    theKey      DC   X'70'         Key 7 (bits 0-3 of the byte)      * 00115200
*             IAXSERVC              Return/Reason code information    * 00115300
*    DYNAREA  DSECT                                                   * 00115400
*    LRETCODE DS    F                                                 * 00115500
*    LRSNCODE DS    F                                                 * 00115600
*    theAreaAddr DS D                                                 * 00115700
*                                                                     * 00115800
*                                                                     * 00115900
*    Example 2                                                        * 00116000
*                                                                     * 00116100
*    Operation:                                                       * 00116200
*                                                                     * 00116300
*                                                                     * 00116400
*    1.  Free the storage                                             * 00116500
*                                                                     * 00116600
*                                                                     * 00116700
*        o   Save and restore registers                               * 00116800
*                                                                     * 00116900
*                                                                     * 00117000
*                                                                     * 00117100
*                                                                     * 00117200
*                                                                     * 00117300
*    The code is as follows.                                          * 00117400
*                                                                     * 00117500
*             IARST64 REQUEST=FREE,                               *   * 00117600
*                   AREAADDR=theAreaAddr,                         *   * 00117700
*                   REGS=SAVE                                         * 00117800
*    *                                                                * 00117900
*    * Place code to check return/reason codes here.                  * 00118000
*    *                                                                * 00118100
*             IAXSERVC              Return/Reason code information    * 00118200
*    DYNAREA  DSECT                                                   * 00118300
*    LRETCODE DS    F                                                 * 00118400
*    LRSNCODE DS    F                                                 * 00118500
*    theAreaAddr DS D                                                 * 00118600
*                                                                     * 00118700
*                                                                     * 00118800
*01* CHANGE ACTIVITY:                                                 * 00118900
*                                                                     * 00119000
*   Flag LineItem  FMID    Date   ID    Comment                       * 00119100
*                                                                     * 00119200
*    $L0=CP64AMG  HBB7750 070301 PD00XB:  64 bit storage manager      * 00119300
*    $L1=64COMMON HBB7750 070301 PD00XB:  64 bit storage manager      * 00119400
*    $P1=ME11424  HBB7750 071002 PD00XB:  Fix SYSASCE check           * 00119500
*    $P2=ME11859  HBB7750 071109 PD00XB:  Remove TRACE option         * 00119600
*    $01=OA25905  HBB7750 080731 PD00OH:  R15 not set before BASR     * 00119700
*    $P3=ME13668  HBB7760 080825 PD00KC:  Initialize FlagVal to       * 00119800
*                                         prevent comperrs            * 00119900
*    $02=OA26396  HBB7750 080905 PD00OH:  Reship due to APAR OA25905  * 00120000
*                                         error                       * 00120100
*    $P4=ME19060  HBB7780 100521 PD00VE:  Support for LocalSysArea    * 00120200
*                                         parameter                   * 00120300
*    $L2=ST128K   JBB778H 110418 PD00A8:  Support for 128K            * 00120400
*    $03=OA39189  HBB7790 120330 PD00CS:  Reason code update (only at * 00120500
*                                         HBB7790 and up)             * 00120600
*    $L3=WI88366  HBB77B0 150601 PD00XB:  zPLX                        * 00120700
*    $P5=WI82498  HBB77B0 151007 PD00A8:  Correct Typo (ME29047)      * 00120800
*    $04=OA50552  HBB7780 170113 PD00VE:  Reason code update (only at * 00120900
*                                         HBB7780 and up)             * 00121000
*    $L4=W155246  HBB77B0 170113 PD00XB:  zPLX                        * 00121100
*    $L5=W155759  HBB77B0 170123 PD00XB:  IARST64_GenFlows = YES      * 00121200
*    $L6=W297966  HBB77C0 190131 PD00XB:  Gen Ctrl                    * 00121300
*    $AG=SENSDMP  HBB77C0 190620 PD00PS:  Add SENSITIVE keyword       * 00121400
*    $P6=WI304668 HBB77C0 190314 PDFX:  Correct backwards SENSITIVE   * 00121500
*                                         wording                     * 00121600
*    $AG=SENSDMP  HBB77C0 190624 PDFX:  Update SENSITIVE wording      * 00121700
****** END OF SPECIFICATIONS *****************************************/ 00121800
*/********************************************************************* 00121900
         MACRO                                                          00122000
&XLABEL  IARST64 &REQUEST=,&SIZE=,&AREAADDR=,&SENSITIVE=,&COMMON=,     *00122100
               &OWNINGTASK=,&MEMLIMIT=,&LOCALSYSAREA=,&OWNER=,         *00122200
               &OWNINGASID=,&FPROT=,&TYPE=,&CALLERKEY=,&KEY00TOF0=,    *00122300
               &R0VALUE=,&R1VALUE=,&FAILMODE=,&REGS=,&AREANAME=,       *00122400
               &RETCODE=,&RSNCODE=                                      00122500
.*                                                                      00122600
*                  MACDATE -08/08/19-<0>                                00122700
.*                                                                      00122800
.*******************************************************************    00122900
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00123000
.*******************************************************************    00123100
                  GBLC  &ZPRINT     YES=PRINT NO=NO PRINT               00123200
                  GBLC  &ZTEST      YES=TEST NO=NO TEST                 00123300
                  GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX         00123400
.*                                                                      00123500
                  GBLC  &ZIARST64   YES=MACRO USED AT LEAST ONCE        00123600
.*******************************************************************    00123700
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00123800
.*******************************************************************    00123900
                  LCLC  &ZMS        ERROR MESSAGE WORK AREA             00124000
                  LCLC  &ZCNDX      SYSNDX CHARACTERS                   00124100
                  LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED          00124200
                  LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR         00124300
                  LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE         00124400
                  LCLA  &ZAWRK      USED AS A WORK AREA                 00124500
                  LCLA  &ZASIZ      USED FOR SIZE OF VALUE              00124600
                  LCLA  &ZN         NUMERIC WORK VARIABLE               00124700
                  LCLC  &ZC         CHARACTER WORK VARIABLE             00124800
                  LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE         00124900
                  LCLA  &ZTLA       VALUE TOO LONG VARIABLE             00125000
                  LCLC  &ZMAC_G     "G" or null                         00125100
&ZMAC_G           SETC  ''                                              00125200
                  LCLC  &ZMAC_LR                                        00125300
&ZMAC_LR          SETC  'LR'                                            00125400
                  LCLC  &ZMAC_L                                         00125500
&ZMAC_L           SETC  'L'                                             00125600
                  LCLC  &ZMAC_ST                                        00125700
&ZMAC_ST          SETC  'ST'                                            00125800
                  LCLC  &ZMAC_LLGT                                      00125900
&ZMAC_LLGT        SETC  'L'                                             00126000
                  LCLC  &ZMAC_LGR                                       00126100
&ZMAC_LGR         SETC  'LR'                                            00126200
                  LCLC  &ZMAC_LG                                        00126300
&ZMAC_LG          SETC  'L'                                             00126400
                  LCLC  &ZMAC_STG                                       00126500
&ZMAC_STG         SETC  'ST'                                            00126600
                  LCLA  &ZMACRET    MACRO RETURN CODE                   00126700
&ZMACRET          SETA  0           ASSUME NO ERRORS                    00126800
.*                                                                      00126900
                  LCLC  &ZCSYSLIST(255)         NONXKEY, POS ARRAY      00127000
                  LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()          00127100
                  LCLA  &ZPLLEN     PARAMETER LIST LENGTH               00127200
                  LCLC  &ZENDBASEPL             End of base PL          00127300
.********************************************************************   00127400
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00127500
.********************************************************************   00127600
                  GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL             00127700
                  GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE      00127800
                  GBLA  &SYSALVL    SYSSTATE ARCHLVL                    00127900
                  GBLC  &SYSAM64    SYSSTATE AMODE64                    00128000
.*                                                                      00128100
                  AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED      00128200
                  AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED       00128300
                  SPLEVEL  TEST                                         00128400
.ZSYS2            ANOP  ,                                               00128500
                  AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1           00128600
                  AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1           00128700
                  SYSSTATE TEST                                         00128800
                  AGO   .ZSYS4                                          00128900
.ZSYS3            ANOP  ,                                               00129000
&SYSASCE          SETC  'P'         ASSUME SYSSTATE PRIMARY             00129100
.ZSYS4            ANOP  ,                                               00129200
                  AIF   ('&SYSAM64' NE 'YES').ZSYSN64                   00129300
&ZMAC_LLGT        SETC 'LLGT'                                           00129400
&ZMAC_LGR         SETC 'LGR'                                            00129500
&ZMAC_LG          SETC 'LG'                                             00129600
&ZMAC_STG         SETC 'STG'                                            00129700
.ZSYSN64          ANOP  ,                                               00129800
.*******************************************************************    00129900
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00130000
.*******************************************************************    00130100
                  LCLC  &XREQUEST   ++ VALUE                            00130200
                  LCLC  &XSIZE      ++ NAME                             00130300
                  LCLC  &XAREAADDR  ++ NAME                             00130400
                  LCLC  &XSENSITIVE             ++ VALUE                00130500
                  LCLC  &XCOMMON    ++ VALUE                            00130600
                  LCLC  &XOWNINGTASK            ++ VALUE                00130700
                  LCLC  &XMEMLIMIT  ++ VALUE                            00130800
                  LCLC  &XLOCALSYSAREA          ++ VALUE                00130900
                  LCLC  &XOWNER     ++ VALUE                            00131000
                  LCLC  &XOWNINGASID            ++ NAME                 00131100
                  LCLC  &XFPROT     ++ VALUE                            00131200
                  LCLC  &XTYPE      ++ VALUE                            00131300
                  LCLC  &XCALLERKEY             ++ VALUE                00131400
                  LCLC  &XKEY00TOF0             ++ NAME                 00131500
                  LCLC  &XR0VALUE   ++ NAME                             00131600
                  LCLC  &XR1VALUE   ++ NAME                             00131700
                  LCLC  &XFAILMODE  ++ VALUE                            00131800
                  LCLC  &XREGS      ++ VALUE                            00131900
                  LCLC  &XDUMMY1    ++ NAME                             00132000
                  LCLC  &XAREANAME  ++ NAME                             00132100
                  LCLC  &XRETCODE   ++ NAME                             00132200
                  LCLC  &XRSNCODE   ++ NAME                             00132300
.*******************************************************************    00132400
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00132500
.*******************************************************************    00132600
                  LCLC  &ZXREQUEST  ++ INPUT VALUE                      00132700
                  LCLC  &ZXSIZE     ++ INPUT NAME                       00132800
                  LCLC  &ZXAREAADDR             ++ OUTPUT NAME          00132900
                  LCLC  &ZXSENSITIVE            ++ INPUT VALUE          00133000
                  LCLC  &ZXCOMMON   ++ INPUT VALUE                      00133100
                  LCLC  &ZXOWNINGTASK           ++ INPUT VALUE          00133200
                  LCLC  &ZXMEMLIMIT             ++ INPUT VALUE          00133300
                  LCLC  &ZXLOCALSYSAREA         ++ INPUT VALUE          00133400
                  LCLC  &ZXOWNER    ++ INPUT VALUE                      00133500
                  LCLC  &ZXOWNINGASID           ++ INPUT NAME           00133600
                  LCLC  &ZXFPROT    ++ INPUT VALUE                      00133700
                  LCLC  &ZXTYPE     ++ INPUT VALUE                      00133800
                  LCLC  &ZXCALLERKEY            ++ INPUT VALUE          00133900
                  LCLC  &ZXKEY00TOF0            ++ INPUT NAME           00134000
                  LCLC  &ZXR0VALUE  ++ INPUT NAME                       00134100
                  LCLC  &ZXR1VALUE  ++ INPUT NAME                       00134200
                  LCLC  &ZXFAILMODE             ++ INPUT VALUE          00134300
                  LCLC  &ZXREGS     ++ INPUT VALUE                      00134400
                  LCLC  &ZXDUMMY1   ++ INPUT NAME                       00134500
                  LCLC  &ZXAREANAME             ++ INPUT NAME           00134600
                  LCLC  &ZXRETCODE  ++ OUTPUT NAME                      00134700
                  LCLC  &ZXRSNCODE  ++ OUTPUT NAME                      00134800
.********************************************************************   00134900
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00135000
.********************************************************************   00135100
                  ACTR  10000                                           00135200
.*------------------------------------------------------------------    00135300
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00135400
&XREQUEST         SETC  ''          INITIALIZE XVARIABLE                00135500
.*-------------------------------------------------------------------   00135600
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00135700
.ZG3              ANOP  ,                                               00135800
                  AIF   (K'&REQUEST(1) LE 0).ZG3A                       00135900
&ZTLC             SETC 'GET'                                            00136000
                  AIF   ('&REQUEST(1)' NE '&ZTLC').ZG86                 00136100
&XREQUEST         SETC  'GET'       SET KEYWORD                         00136200
                  AIF   (N'&REQUEST LE 1).ZG3A  CK NUM                  00136300
&ZMS              SETC  '"REQUEST='                                     00136400
&ZMS              SETC  '&ZMS.&REQUEST"'                                00136500
&ZMS              SETC  '&ZMS "REQUEST"'                                00136600
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00136700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00136800
.ZG3A             ANOP  ,                                               00136900
.*------------------------------------------------------------------    00137000
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00137100
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00137200
.ZG3A0            AIF   (K'&AREANAME LE 0).ZG3A1  OK                    00137300
&ZCVAL            SETC '&ZCVAL AREANAME'        INCORRECT KEY USED      00137400
.ZG3A1            AIF   (K'&ZCVAL LE 0).ZG3A2   OK                      00137500
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00137600
&ZMS              SETC  '"REQUEST'                                      00137700
&ZMS              SETC  '&ZMS.=&REQUEST"'                               00137800
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00137900
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00138000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00138100
.ZG3A2            ANOP  ,                                               00138200
.*----------------------------------------------------------------***   00138300
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00138400
                  AIF   (N'&SIZE LE 1).ZG5A     CK NUM                  00138500
&ZMS              SETC  '"SIZE='                                        00138600
&ZMS              SETC  '&ZMS.&SIZE"'                                   00138700
&ZMS              SETC  '&ZMS "SIZE"'                                   00138800
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00138900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00139000
.ZG5A             ANOP  ,                                               00139100
.*-------------------------------------------------------------------   00139200
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00139300
&ZXSIZE           SETC  'INPUT'     SET IN/OUTPUT                       00139400
&XSIZE            SETC  '&SIZE(1)'  SET XVARIABLE                       00139500
                  AIF   (N'&SIZE GT 1).ZG5B     MULTI                   00139600
&XSIZE            SETC  '&SIZE'     SET XVARIABLE                       00139700
.ZG5B             AIF   (K'&SIZE(1) GT 0).ZG5C                          00139800
&ZXSIZE           SETC  ''          RESET IN/OUTPUT                     00139900
&ZMS              SETC  ' '                                             00140000
&ZMS              SETC  '&ZMS "SIZE" KEY AND ITS'                       00140100
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00140200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00140300
.ZG5C             ANOP  ,                                               00140400
.*-------------------------------------------------------------------   00140500
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00140600
                  AIF   (K'&ZXSIZE LE 0).ZG5R   NOT I/O                 00140700
                  AIF   ('&XSIZE'(1,1) NE '(').ZG5R                     00140800
&ZCGPR            SETC  '&XSIZE'(2,K'&XSIZE-2)                          00140900
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                     00141000
                  AIF   (K'&ZCGPR GT 2).ZG5Q                            00141100
                  AIF   ('&ZCGPR' EQ '0').ZG5Q                          00141200
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00141300
                  AIF   (T'&ZCGPR NE 'N').ZG5Q  INVALID REG NAME        00141400
.ZG5P             ANOP  ,                                               00141500
                  AIF   (T'&ZCGPR NE 'N').ZG5R  NON NUMERIC             00141600
                  AIF   ('&ZCGPR' LT '2').ZG5Q                          00141700
                  AIF   ('&ZCGPR' LE '12').ZG5R                         00141800
.ZG5Q             ANOP  ,                                               00141900
&ZMS              SETC  '"SIZE='                                        00142000
&ZMS              SETC  '&ZMS.&SIZE"'                                   00142100
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00142200
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00142300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00142400
.ZG5R             ANOP  ,                                               00142500
.*----------------------------------------------------------------***   00142600
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00142700
                  AIF   (N'&AREAADDR LE 1).ZG8A  CK NUM                 00142800
&ZMS              SETC  '"AREAADDR='                                    00142900
&ZMS              SETC  '&ZMS.&AREAADDR"'                               00143000
&ZMS              SETC  '&ZMS "AREAADDR"'                               00143100
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00143200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00143300
.ZG8A             ANOP  ,                                               00143400
.*-------------------------------------------------------------------   00143500
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00143600
                  AIF   (K'&AREAADDR(1) LE 0).ZG8C  NO PARM             00143700
&ZXAREAADDR       SETC  'OUTPUT'    SET OUTPUT                          00143800
&XAREAADDR        SETC  '&AREAADDR(1)'          SET XVARIABLE           00143900
                  AIF   (N'&AREAADDR GT 1).ZG8C                         00144000
&XAREAADDR        SETC  '&AREAADDR'             SET XVARIABLE           00144100
.ZG8C             ANOP  ,                                               00144200
.*-------------------------------------------------------------------   00144300
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00144400
                  AIF   (K'&ZXAREAADDR LE 0).ZG8R  NOT I/O              00144500
                  AIF   ('&XAREAADDR'(1,1) NE '(').ZG8R                 00144600
&ZCGPR            SETC  '&XAREAADDR'(2,K'&XAREAADDR-2)                  00144700
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                     00144800
                  AIF   (K'&ZCGPR GT 2).ZG8Q                            00144900
                  AIF   ('&ZCGPR' EQ '0').ZG8Q                          00145000
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00145100
                  AIF   (T'&ZCGPR NE 'N').ZG8Q  INVALID REG NAME        00145200
.ZG8P             ANOP  ,                                               00145300
                  AIF   (T'&ZCGPR NE 'N').ZG8R  NON NUMERIC             00145400
                  AIF   ('&ZCGPR' LT '2').ZG8Q                          00145500
                  AIF   ('&ZCGPR' LE '12').ZG8R                         00145600
.ZG8Q             ANOP  ,                                               00145700
&ZMS              SETC  '"AREAADDR='                                    00145800
&ZMS              SETC  '&ZMS.&AREAADDR"'                               00145900
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00146000
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00146100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00146200
.ZG8R             ANOP  ,                                               00146300
.*----------------------------------------------------------------***   00146400
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00146500
                  AIF   (N'&SENSITIVE LE 1).ZG11A  CK NUM               00146600
&ZMS              SETC  '"SENSITIVE='                                   00146700
&ZMS              SETC  '&ZMS.&SENSITIVE"'                              00146800
&ZMS              SETC  '&ZMS "SENSITIVE"'                              00146900
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00147000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00147100
.ZG11A            ANOP  ,                                               00147200
.*-------------------------------------------------------------------   00147300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00147400
&XSENSITIVE       SETC  ''          INITIALIZE XVARIABLE                00147500
.ZG12A   AIF   ('&SENSITIVE(1)' NE 'UNKNOWN').ZG13A                     00147600
&XSENSITIVE       SETC  'UNKNOWN'   SET KEYWORD                         00147700
.*-------------------------------------------------------------------   00147800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00147900
.ZG13A   AIF   ('&SENSITIVE(1)' NE 'YES').ZG14A                         00148000
&XSENSITIVE       SETC  'YES'       SET KEYWORD                         00148100
.*-------------------------------------------------------------------   00148200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00148300
.ZG14A   AIF   ('&SENSITIVE(1)' NE 'NO').ZG15A                          00148400
&XSENSITIVE       SETC  'NO'        SET KEYWORD                         00148500
.*-------------------------------------------------------------------   00148600
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00148700
.ZG15A            AIF   (K'&XSENSITIVE GT 0).ZG15C  KEYWORD             00148800
                  AIF   (K'&SENSITIVE(1) LE 0).ZG15B                    00148900
&ZMS              SETC  '"SENSITIVE='                                   00149000
&ZMS              SETC  '&ZMS.&SENSITIVE"'                              00149100
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00149200
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00149300
&ZMS              SETC  '&ZMS "UNKNOWN",'                               00149400
&ZMS              SETC  '&ZMS "YES",'                                   00149500
&ZMS              SETC  '&ZMS OR "NO".'                                 00149600
                  MNOTE 8,' &ZMS '                                      00149700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00149800
.ZG15B            ANOP  ,                                               00149900
&XSENSITIVE       SETC  'UNKNOWN'   SET DEFAULT KEYWORD                 00150000
.ZG15C            ANOP  ,                                               00150100
&ZXSENSITIVE      SETC  'INPUT'     SET IN/OUTPUT                       00150200
.*------------------------------------------------------------------    00150300
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00150400
&XCOMMON          SETC  ''          INITIALIZE XVARIABLE                00150500
.*-------------------------------------------------------------------   00150600
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00150700
.ZG18             ANOP  ,                                               00150800
                  AIF   (K'&COMMON(1) LE 0).ZG18A                       00150900
&ZTLC             SETC 'NO'                                             00151000
                  AIF   ('&COMMON(1)' NE '&ZTLC').ZG38                  00151100
&XCOMMON          SETC  'NO'        SET KEYWORD                         00151200
                  AIF   (N'&COMMON LE 1).ZG18A  CK NUM                  00151300
&ZMS              SETC  '"COMMON='                                      00151400
&ZMS              SETC  '&ZMS.&COMMON"'                                 00151500
&ZMS              SETC  '&ZMS "COMMON"'                                 00151600
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00151700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00151800
.ZG18A            ANOP  ,                                               00151900
.*------------------------------------------------------------------    00152000
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00152100
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00152200
.ZG18A0           AIF   (K'&OWNER LE 0).ZG18A1  OK                      00152300
&ZCVAL            SETC '&ZCVAL OWNER'           INCORRECT KEY USED      00152400
.ZG18A1           AIF   (K'&OWNINGASID LE 0).ZG18A2  OK                 00152500
&ZCVAL            SETC '&ZCVAL OWNINGASID'      INCORRECT KEY USED      00152600
.ZG18A2           AIF   (K'&ZCVAL LE 0).ZG18A3  OK                      00152700
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00152800
&ZMS              SETC  '"COMMON'                                       00152900
&ZMS              SETC  '&ZMS.=&COMMON"'                                00153000
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00153100
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00153200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00153300
.ZG18A3           ANOP  ,                                               00153400
.*------------------------------------------------------------------    00153500
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00153600
&XOWNINGTASK      SETC  ''          INITIALIZE XVARIABLE                00153700
.*-------------------------------------------------------------------   00153800
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00153900
.ZG21             ANOP  ,                                               00154000
                  AIF   (K'&OWNINGTASK(1) LE 0).ZG21A                   00154100
&ZTLC             SETC 'CURRENT'                                        00154200
                  AIF   ('&OWNINGTASK(1)' NE '&ZTLC').ZG22              00154300
&XOWNINGTASK      SETC  'CURRENT'   SET KEYWORD                         00154400
                  AIF   (N'&OWNINGTASK LE 1).ZG21A  CK NUM              00154500
&ZMS              SETC  '"OWNINGTASK='                                  00154600
&ZMS              SETC  '&ZMS.&OWNINGTASK"'                             00154700
&ZMS              SETC  '&ZMS "OWNINGTASK"'                             00154800
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00154900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00155000
.ZG21A            ANOP  ,                                               00155100
.*-------------------------------------------------------------------   00155200
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00155300
.ZG22             ANOP  ,                                               00155400
&ZTLC             SETC 'MOTHER'                                         00155500
                  AIF   ('&OWNINGTASK(1)' NE '&ZTLC').ZG23              00155600
&XOWNINGTASK      SETC  'MOTHER'    SET KEYWORD                         00155700
                  AIF   (N'&OWNINGTASK LE 1).ZG22A  CK NUM              00155800
&ZMS              SETC  '"OWNINGTASK='                                  00155900
&ZMS              SETC  '&ZMS.&OWNINGTASK"'                             00156000
&ZMS              SETC  '&ZMS "OWNINGTASK"'                             00156100
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00156200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00156300
.ZG22A            ANOP  ,                                               00156400
.*-------------------------------------------------------------------   00156500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00156600
.ZG23             ANOP  ,                                               00156700
&ZTLC             SETC 'IPT'                                            00156800
                  AIF   ('&OWNINGTASK(1)' NE '&ZTLC').ZG24              00156900
&XOWNINGTASK      SETC  'IPT'       SET KEYWORD                         00157000
                  AIF   (N'&OWNINGTASK LE 1).ZG23A  CK NUM              00157100
&ZMS              SETC  '"OWNINGTASK='                                  00157200
&ZMS              SETC  '&ZMS.&OWNINGTASK"'                             00157300
&ZMS              SETC  '&ZMS "OWNINGTASK"'                             00157400
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00157500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00157600
.ZG23A            ANOP  ,                                               00157700
.*-------------------------------------------------------------------   00157800
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00157900
.ZG24             ANOP  ,                                               00158000
&ZTLC             SETC 'JOBSTEP'                                        00158100
                  AIF   ('&OWNINGTASK(1)' NE '&ZTLC').ZG25              00158200
&XOWNINGTASK      SETC  'JOBSTEP'   SET KEYWORD                         00158300
                  AIF   (N'&OWNINGTASK LE 1).ZG24A  CK NUM              00158400
&ZMS              SETC  '"OWNINGTASK='                                  00158500
&ZMS              SETC  '&ZMS.&OWNINGTASK"'                             00158600
&ZMS              SETC  '&ZMS "OWNINGTASK"'                             00158700
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00158800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00158900
.ZG24A            ANOP  ,                                               00159000
.*-------------------------------------------------------------------   00159100
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00159200
.ZG25             ANOP  ,                                               00159300
&ZTLC             SETC 'CMRO'                                           00159400
                  AIF   ('&OWNINGTASK(1)' NE '&ZTLC').ZG26              00159500
&XOWNINGTASK      SETC  'CMRO'      SET KEYWORD                         00159600
                  AIF   (N'&OWNINGTASK LE 1).ZG25A  CK NUM              00159700
&ZMS              SETC  '"OWNINGTASK='                                  00159800
&ZMS              SETC  '&ZMS.&OWNINGTASK"'                             00159900
&ZMS              SETC  '&ZMS "OWNINGTASK"'                             00160000
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00160100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00160200
.ZG25A            ANOP  ,                                               00160300
.*-------------------------------------------------------------------   00160400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00160500
.ZG26             ANOP  ,                                               00160600
&ZTLC             SETC 'RCT'                                            00160700
                  AIF   ('&OWNINGTASK(1)' NE '&ZTLC').ZG27              00160800
&XOWNINGTASK      SETC  'RCT'       SET KEYWORD                         00160900
                  AIF   (N'&OWNINGTASK LE 1).ZG26A  CK NUM              00161000
&ZMS              SETC  '"OWNINGTASK='                                  00161100
&ZMS              SETC  '&ZMS.&OWNINGTASK"'                             00161200
&ZMS              SETC  '&ZMS "OWNINGTASK"'                             00161300
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00161400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00161500
.ZG26A            ANOP  ,                                               00161600
.*------------------------------------------------------------------    00161700
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00161800
.ZG27             ANOP  ,                                               00161900
&ZXOWNINGTASK     SETC  'INPUT'     SET IN/OUTPUT                       00162000
                  AIF   (K'&XOWNINGTASK GT 0).ZG27E  VALID ARG          00162100
                  AIF   (T'&OWNINGTASK EQ 'O').ZG27D  OMITTED           00162200
&ZASYSLNDX        SETA  0                                               00162300
.ZG27A            ANOP  ,           POSITIONAL MACRO KEY                00162400
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00162500
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG27C                00162600
&ZTLC             SETC 'OWNINGTASK'                                     00162700
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG27A       00162800
.ZG27B            ANOP  ,                                               00162900
&ZXOWNINGTASK     SETC  ''          RESET IN/OUTPUT                     00163000
&ZMS              SETC  'THE "OWNINGTASK" KEY'                          00163100
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00163200
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00163300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00163400
                  AGO   .ZG27E                                          00163500
.ZG27C            ANOP  ,                                               00163600
&ZXOWNINGTASK     SETC  ''          RESET IN/OUTPUT                     00163700
&ZMS              SETC  '"OWNINGTASK='                                  00163800
&ZMS              SETC  '&ZMS.&OWNINGTASK"'                             00163900
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00164000
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00164100
&ZMS              SETC  '&ZMS "CURRENT",'                               00164200
&ZMS              SETC  '&ZMS "MOTHER",'                                00164300
&ZMS              SETC  '&ZMS "IPT",'                                   00164400
&ZMS              SETC  '&ZMS "JOBSTEP",'                               00164500
&ZMS              SETC  '&ZMS "CMRO",'                                  00164600
&ZMS              SETC  '&ZMS OR "RCT".'                                00164700
                  MNOTE 8,' &ZMS '                                      00164800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00164900
                  AGO   .ZG27E                                          00165000
.ZG27D            ANOP  ,                                               00165100
&XOWNINGTASK      SETC  'CURRENT'   SET DEFAULT KEYWORD                 00165200
.ZG27E            ANOP  ,                                               00165300
.*------------------------------------------------------------------    00165400
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00165500
                  AIF   (K'&OWNINGTASK(1) GT 0).ZG27F  PARM             00165600
&XOWNINGTASK      SETC  ''          ENSURE NULL KEYWORD                 00165700
&ZXOWNINGTASK     SETC  ''          RESET IN/OUTPUT                     00165800
&ZMS              SETC  'THE'                                           00165900
&ZMS              SETC  '&ZMS "OWNINGTASK" KEY AND ITS'                 00166000
&ZMS              SETC  '&ZMS ARGUMENT ARE REQUIRED.'                   00166100
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00166200
&ZMS              SETC  '&ZMS "CURRENT",'                               00166300
&ZMS              SETC  '&ZMS "MOTHER",'                                00166400
&ZMS              SETC  '&ZMS "IPT",'                                   00166500
&ZMS              SETC  '&ZMS "JOBSTEP",'                               00166600
&ZMS              SETC  '&ZMS "CMRO",'                                  00166700
&ZMS              SETC  '&ZMS OR "RCT".'                                00166800
                  MNOTE 8,' &ZMS '                                      00166900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00167000
.ZG27F            ANOP  ,                                               00167100
.*------------------------------------------------------------------    00167200
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00167300
&XMEMLIMIT        SETC  ''          INITIALIZE XVARIABLE                00167400
.*-------------------------------------------------------------------   00167500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00167600
.ZG30             ANOP  ,                                               00167700
                  AIF   (K'&MEMLIMIT(1) LE 0).ZG30A                     00167800
&ZTLC             SETC 'YES'                                            00167900
                  AIF   ('&MEMLIMIT(1)' NE '&ZTLC').ZG31                00168000
&XMEMLIMIT        SETC  'YES'       SET KEYWORD                         00168100
                  AIF   (N'&MEMLIMIT LE 1).ZG30A  CK NUM                00168200
&ZMS              SETC  '"MEMLIMIT='                                    00168300
&ZMS              SETC  '&ZMS.&MEMLIMIT"'                               00168400
&ZMS              SETC  '&ZMS "MEMLIMIT"'                               00168500
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00168600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00168700
.ZG30A            ANOP  ,                                               00168800
.*-------------------------------------------------------------------   00168900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00169000
.ZG31             ANOP  ,                                               00169100
&ZTLC             SETC 'NO'                                             00169200
                  AIF   ('&MEMLIMIT(1)' NE '&ZTLC').ZG32                00169300
&XMEMLIMIT        SETC  'NO'        SET KEYWORD                         00169400
                  AIF   (N'&MEMLIMIT LE 1).ZG31A  CK NUM                00169500
&ZMS              SETC  '"MEMLIMIT='                                    00169600
&ZMS              SETC  '&ZMS.&MEMLIMIT"'                               00169700
&ZMS              SETC  '&ZMS "MEMLIMIT"'                               00169800
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00169900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00170000
.ZG31A            ANOP  ,                                               00170100
.*------------------------------------------------------------------    00170200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00170300
.ZG32             ANOP  ,                                               00170400
&ZXMEMLIMIT       SETC  'INPUT'     SET IN/OUTPUT                       00170500
                  AIF   (K'&XMEMLIMIT GT 0).ZG32E  VALID ARG            00170600
                  AIF   (T'&MEMLIMIT EQ 'O').ZG32D  OMITTED             00170700
&ZASYSLNDX        SETA  0                                               00170800
.ZG32A            ANOP  ,           POSITIONAL MACRO KEY                00170900
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00171000
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG32C                00171100
&ZTLC             SETC 'MEMLIMIT'                                       00171200
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG32A       00171300
.ZG32B            ANOP  ,                                               00171400
&ZXMEMLIMIT       SETC  ''          RESET IN/OUTPUT                     00171500
&ZMS              SETC  'THE "MEMLIMIT" KEY'                            00171600
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00171700
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00171800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00171900
                  AGO   .ZG32E                                          00172000
.ZG32C            ANOP  ,                                               00172100
&ZXMEMLIMIT       SETC  ''          RESET IN/OUTPUT                     00172200
&ZMS              SETC  '"MEMLIMIT='                                    00172300
&ZMS              SETC  '&ZMS.&MEMLIMIT"'                               00172400
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00172500
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00172600
&ZMS              SETC  '&ZMS "YES"'                                    00172700
&ZMS              SETC  '&ZMS OR "NO".'                                 00172800
                  MNOTE 8,' &ZMS '                                      00172900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00173000
                  AGO   .ZG32E                                          00173100
.ZG32D            ANOP  ,                                               00173200
&XMEMLIMIT        SETC  'YES'       SET DEFAULT KEYWORD                 00173300
.ZG32E            ANOP  ,                                               00173400
.*------------------------------------------------------------------    00173500
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00173600
&XLOCALSYSAREA    SETC  ''          INITIALIZE XVARIABLE                00173700
.*-------------------------------------------------------------------   00173800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00173900
.ZG35             ANOP  ,                                               00174000
                  AIF   (K'&LOCALSYSAREA(1) LE 0).ZG35A                 00174100
&ZTLC             SETC 'NO'                                             00174200
                  AIF   ('&LOCALSYSAREA(1)' NE '&ZTLC').ZG36            00174300
&XLOCALSYSAREA    SETC  'NO'        SET KEYWORD                         00174400
                  AIF   (N'&LOCALSYSAREA LE 1).ZG35A  CK NUM            00174500
&ZMS              SETC  '"LOCALSYSAREA='                                00174600
&ZMS              SETC  '&ZMS.&LOCALSYSAREA"'                           00174700
&ZMS              SETC  '&ZMS "LOCALSYSAREA"'                           00174800
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00174900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00175000
.ZG35A            ANOP  ,                                               00175100
.*-------------------------------------------------------------------   00175200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00175300
.ZG36             ANOP  ,                                               00175400
&ZTLC             SETC 'YES'                                            00175500
                  AIF   ('&LOCALSYSAREA(1)' NE '&ZTLC').ZG37            00175600
&XLOCALSYSAREA    SETC  'YES'       SET KEYWORD                         00175700
                  AIF   (N'&LOCALSYSAREA LE 1).ZG36A  CK NUM            00175800
&ZMS              SETC  '"LOCALSYSAREA='                                00175900
&ZMS              SETC  '&ZMS.&LOCALSYSAREA"'                           00176000
&ZMS              SETC  '&ZMS "LOCALSYSAREA"'                           00176100
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00176200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00176300
.ZG36A            ANOP  ,                                               00176400
.*------------------------------------------------------------------    00176500
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00176600
.ZG37             ANOP  ,                                               00176700
&ZXLOCALSYSAREA   SETC  'INPUT'     SET IN/OUTPUT                       00176800
                  AIF   (K'&XLOCALSYSAREA GT 0).ZG37E  VALID ARG        00176900
                  AIF   (T'&LOCALSYSAREA EQ 'O').ZG37D  OMITTED         00177000
&ZASYSLNDX        SETA  0                                               00177100
.ZG37A            ANOP  ,           POSITIONAL MACRO KEY                00177200
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00177300
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG37C                00177400
&ZTLC             SETC 'LOCALSYSAREA'                                   00177500
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG37A       00177600
.ZG37B            ANOP  ,                                               00177700
&ZXLOCALSYSAREA   SETC  ''          RESET IN/OUTPUT                     00177800
&ZMS              SETC  'THE "LOCALSYSAREA" KEY'                        00177900
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00178000
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00178100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00178200
                  AGO   .ZG37E                                          00178300
.ZG37C            ANOP  ,                                               00178400
&ZXLOCALSYSAREA   SETC  ''          RESET IN/OUTPUT                     00178500
&ZMS              SETC  '"LOCALSYSAREA='                                00178600
&ZMS              SETC  '&ZMS.&LOCALSYSAREA"'                           00178700
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00178800
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00178900
&ZMS              SETC  '&ZMS "NO"'                                     00179000
&ZMS              SETC  '&ZMS OR "YES".'                                00179100
                  MNOTE 8,' &ZMS '                                      00179200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00179300
                  AGO   .ZG37E                                          00179400
.ZG37D            ANOP  ,                                               00179500
&XLOCALSYSAREA    SETC  'NO'        SET DEFAULT KEYWORD                 00179600
.ZG37E            ANOP  ,                                               00179700
.*-------------------------------------------------------------------   00179800
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00179900
.ZG38             ANOP  ,                                               00180000
&ZTLC             SETC 'YES'                                            00180100
                  AIF   ('&COMMON(1)' NE '&ZTLC').ZG50                  00180200
&XCOMMON          SETC  'YES'       SET KEYWORD                         00180300
                  AIF   (N'&COMMON LE 1).ZG38A  CK NUM                  00180400
&ZMS              SETC  '"COMMON='                                      00180500
&ZMS              SETC  '&ZMS.&COMMON"'                                 00180600
&ZMS              SETC  '&ZMS "COMMON"'                                 00180700
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00180800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00180900
.ZG38A            ANOP  ,                                               00181000
.*------------------------------------------------------------------    00181100
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00181200
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00181300
.ZG38A0           AIF   (K'&OWNINGTASK LE 0).ZG38A1  OK                 00181400
&ZCVAL            SETC '&ZCVAL OWNINGTASK'      INCORRECT KEY USED      00181500
.ZG38A1           AIF   (K'&MEMLIMIT LE 0).ZG38A2  OK                   00181600
&ZCVAL            SETC '&ZCVAL MEMLIMIT'        INCORRECT KEY USED      00181700
.ZG38A2           AIF   (K'&LOCALSYSAREA LE 0).ZG38A3  OK               00181800
&ZCVAL            SETC '&ZCVAL LOCALSYSAREA'    INCORRECT KEY USED      00181900
.ZG38A3           AIF   (K'&ZCVAL LE 0).ZG38A4  OK                      00182000
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00182100
&ZMS              SETC  '"COMMON'                                       00182200
&ZMS              SETC  '&ZMS.=&COMMON"'                                00182300
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00182400
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00182500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00182600
.ZG38A4           ANOP  ,                                               00182700
.*------------------------------------------------------------------    00182800
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00182900
&XOWNER           SETC  ''          INITIALIZE XVARIABLE                00183000
.*-------------------------------------------------------------------   00183100
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00183200
.ZG41             ANOP  ,                                               00183300
                  AIF   (K'&OWNER(1) LE 0).ZG41A                        00183400
&ZTLC             SETC 'HOME'                                           00183500
                  AIF   ('&OWNER(1)' NE '&ZTLC').ZG42                   00183600
&XOWNER           SETC  'HOME'      SET KEYWORD                         00183700
                  AIF   (N'&OWNER LE 1).ZG41A   CK NUM                  00183800
&ZMS              SETC  '"OWNER='                                       00183900
&ZMS              SETC  '&ZMS.&OWNER"'                                  00184000
&ZMS              SETC  '&ZMS "OWNER"'                                  00184100
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00184200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00184300
.ZG41A            ANOP  ,                                               00184400
.*------------------------------------------------------------------    00184500
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00184600
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00184700
.ZG41A0           AIF   (K'&OWNINGASID LE 0).ZG41A1  OK                 00184800
&ZCVAL            SETC '&ZCVAL OWNINGASID'      INCORRECT KEY USED      00184900
.ZG41A1           AIF   (K'&ZCVAL LE 0).ZG41A2  OK                      00185000
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00185100
&ZMS              SETC  '"OWNER'                                        00185200
&ZMS              SETC  '&ZMS.=&OWNER"'                                 00185300
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00185400
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00185500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00185600
.ZG41A2           ANOP  ,                                               00185700
.*-------------------------------------------------------------------   00185800
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00185900
.ZG42             ANOP  ,                                               00186000
&ZTLC             SETC 'PRIMARY'                                        00186100
                  AIF   ('&OWNER(1)' NE '&ZTLC').ZG43                   00186200
&XOWNER           SETC  'PRIMARY'   SET KEYWORD                         00186300
                  AIF   (N'&OWNER LE 1).ZG42A   CK NUM                  00186400
&ZMS              SETC  '"OWNER='                                       00186500
&ZMS              SETC  '&ZMS.&OWNER"'                                  00186600
&ZMS              SETC  '&ZMS "OWNER"'                                  00186700
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00186800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00186900
.ZG42A            ANOP  ,                                               00187000
.*------------------------------------------------------------------    00187100
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00187200
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00187300
.ZG42A0           AIF   (K'&OWNINGASID LE 0).ZG42A1  OK                 00187400
&ZCVAL            SETC '&ZCVAL OWNINGASID'      INCORRECT KEY USED      00187500
.ZG42A1           AIF   (K'&ZCVAL LE 0).ZG42A2  OK                      00187600
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00187700
&ZMS              SETC  '"OWNER'                                        00187800
&ZMS              SETC  '&ZMS.=&OWNER"'                                 00187900
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00188000
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00188100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00188200
.ZG42A2           ANOP  ,                                               00188300
.*-------------------------------------------------------------------   00188400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00188500
.ZG43             ANOP  ,                                               00188600
&ZTLC             SETC 'SECONDARY'                                      00188700
                  AIF   ('&OWNER(1)' NE '&ZTLC').ZG44                   00188800
&XOWNER           SETC  'SECONDARY'             SET KEYWORD             00188900
                  AIF   (N'&OWNER LE 1).ZG43A   CK NUM                  00189000
&ZMS              SETC  '"OWNER='                                       00189100
&ZMS              SETC  '&ZMS.&OWNER"'                                  00189200
&ZMS              SETC  '&ZMS "OWNER"'                                  00189300
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00189400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00189500
.ZG43A            ANOP  ,                                               00189600
.*------------------------------------------------------------------    00189700
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00189800
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00189900
.ZG43A0           AIF   (K'&OWNINGASID LE 0).ZG43A1  OK                 00190000
&ZCVAL            SETC '&ZCVAL OWNINGASID'      INCORRECT KEY USED      00190100
.ZG43A1           AIF   (K'&ZCVAL LE 0).ZG43A2  OK                      00190200
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00190300
&ZMS              SETC  '"OWNER'                                        00190400
&ZMS              SETC  '&ZMS.=&OWNER"'                                 00190500
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00190600
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00190700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00190800
.ZG43A2           ANOP  ,                                               00190900
.*-------------------------------------------------------------------   00191000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00191100
.ZG44             ANOP  ,                                               00191200
&ZTLC             SETC 'SYSTEM'                                         00191300
                  AIF   ('&OWNER(1)' NE '&ZTLC').ZG45                   00191400
&XOWNER           SETC  'SYSTEM'    SET KEYWORD                         00191500
                  AIF   (N'&OWNER LE 1).ZG44A   CK NUM                  00191600
&ZMS              SETC  '"OWNER='                                       00191700
&ZMS              SETC  '&ZMS.&OWNER"'                                  00191800
&ZMS              SETC  '&ZMS "OWNER"'                                  00191900
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00192000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00192100
.ZG44A            ANOP  ,                                               00192200
.*------------------------------------------------------------------    00192300
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00192400
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00192500
.ZG44A0           AIF   (K'&OWNINGASID LE 0).ZG44A1  OK                 00192600
&ZCVAL            SETC '&ZCVAL OWNINGASID'      INCORRECT KEY USED      00192700
.ZG44A1           AIF   (K'&ZCVAL LE 0).ZG44A2  OK                      00192800
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00192900
&ZMS              SETC  '"OWNER'                                        00193000
&ZMS              SETC  '&ZMS.=&OWNER"'                                 00193100
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00193200
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00193300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00193400
.ZG44A2           ANOP  ,                                               00193500
.*-------------------------------------------------------------------   00193600
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00193700
.ZG45             ANOP  ,                                               00193800
&ZTLC             SETC 'BYASID'                                         00193900
                  AIF   ('&OWNER(1)' NE '&ZTLC').ZG49                   00194000
&XOWNER           SETC  'BYASID'    SET KEYWORD                         00194100
                  AIF   (N'&OWNER LE 1).ZG45A   CK NUM                  00194200
&ZMS              SETC  '"OWNER='                                       00194300
&ZMS              SETC  '&ZMS.&OWNER"'                                  00194400
&ZMS              SETC  '&ZMS "OWNER"'                                  00194500
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00194600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00194700
.ZG45A            ANOP  ,                                               00194800
.*----------------------------------------------------------------***   00194900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00195000
                  AIF   (N'&OWNINGASID LE 1).ZG47A  CK NUM              00195100
&ZMS              SETC  '"OWNINGASID='                                  00195200
&ZMS              SETC  '&ZMS.&OWNINGASID"'                             00195300
&ZMS              SETC  '&ZMS "OWNINGASID"'                             00195400
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00195500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00195600
.ZG47A            ANOP  ,                                               00195700
.*-------------------------------------------------------------------   00195800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00195900
&ZXOWNINGASID     SETC  'INPUT'     SET IN/OUTPUT                       00196000
&XOWNINGASID      SETC  '&OWNINGASID(1)'        SET XVARIABLE           00196100
                  AIF   (N'&OWNINGASID GT 1).ZG47B  MULTI               00196200
&XOWNINGASID      SETC  '&OWNINGASID'           SET XVARIABLE           00196300
.ZG47B            AIF   (K'&OWNINGASID(1) GT 0).ZG47C                   00196400
&ZXOWNINGASID     SETC  ''          RESET IN/OUTPUT                     00196500
&ZMS              SETC  ' '                                             00196600
&ZMS              SETC  '&ZMS "OWNINGASID" KEY AND ITS'                 00196700
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00196800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00196900
.ZG47C            ANOP  ,                                               00197000
.*-------------------------------------------------------------------   00197100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00197200
                  AIF   (K'&ZXOWNINGASID LE 0).ZG47R  NOT I/O           00197300
                  AIF   ('&XOWNINGASID'(1,1) NE '(').ZG47R              00197400
&ZCGPR            SETC  '&XOWNINGASID'(2,K'&XOWNINGASID-2)              00197500
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG47P                    00197600
                  AIF   (K'&ZCGPR GT 2).ZG47Q                           00197700
                  AIF   ('&ZCGPR' EQ '0').ZG47Q                         00197800
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00197900
                  AIF   (T'&ZCGPR NE 'N').ZG47Q  INVALID REG NAME       00198000
.ZG47P            ANOP  ,                                               00198100
                  AIF   (T'&ZCGPR NE 'N').ZG47R  NON NUMERIC            00198200
                  AIF   ('&ZCGPR' LT '2').ZG47Q                         00198300
                  AIF   ('&ZCGPR' LE '12').ZG47R                        00198400
.ZG47Q            ANOP  ,                                               00198500
&ZMS              SETC  '"OWNINGASID='                                  00198600
&ZMS              SETC  '&ZMS.&OWNINGASID"'                             00198700
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00198800
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00198900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00199000
.ZG47R            ANOP  ,                                               00199100
.*------------------------------------------------------------------    00199200
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00199300
.ZG49             ANOP  ,                                               00199400
&ZXOWNER          SETC  'INPUT'     SET IN/OUTPUT                       00199500
                  AIF   (K'&XOWNER GT 0).ZG49E  VALID ARG               00199600
                  AIF   (T'&OWNER EQ 'O').ZG49D  OMITTED                00199700
&ZASYSLNDX        SETA  0                                               00199800
.ZG49A            ANOP  ,           POSITIONAL MACRO KEY                00199900
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00200000
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG49C                00200100
&ZTLC             SETC 'OWNER'                                          00200200
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG49A       00200300
.ZG49B            ANOP  ,                                               00200400
&ZXOWNER          SETC  ''          RESET IN/OUTPUT                     00200500
&ZMS              SETC  'THE "OWNER" KEY'                               00200600
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00200700
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00200800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00200900
                  AGO   .ZG49E                                          00201000
.ZG49C            ANOP  ,                                               00201100
&ZXOWNER          SETC  ''          RESET IN/OUTPUT                     00201200
&ZMS              SETC  '"OWNER='                                       00201300
&ZMS              SETC  '&ZMS.&OWNER"'                                  00201400
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00201500
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00201600
&ZMS              SETC  '&ZMS "HOME",'                                  00201700
&ZMS              SETC  '&ZMS "PRIMARY",'                               00201800
&ZMS              SETC  '&ZMS "SECONDARY",'                             00201900
&ZMS              SETC  '&ZMS "SYSTEM",'                                00202000
&ZMS              SETC  '&ZMS OR "BYASID".'                             00202100
                  MNOTE 8,' &ZMS '                                      00202200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00202300
                  AGO   .ZG49E                                          00202400
.ZG49D            ANOP  ,                                               00202500
&XOWNER           SETC  'HOME'      SET DEFAULT KEYWORD                 00202600
.ZG49E            ANOP  ,                                               00202700
.*------------------------------------------------------------------    00202800
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00202900
                  AIF   (K'&OWNER(1) GT 0).ZG49F  PARM                  00203000
&XOWNER           SETC  ''          ENSURE NULL KEYWORD                 00203100
&ZXOWNER          SETC  ''          RESET IN/OUTPUT                     00203200
&ZMS              SETC  'THE'                                           00203300
&ZMS              SETC  '&ZMS "OWNER" KEY AND ITS'                      00203400
&ZMS              SETC  '&ZMS ARGUMENT ARE REQUIRED.'                   00203500
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00203600
&ZMS              SETC  '&ZMS "HOME",'                                  00203700
&ZMS              SETC  '&ZMS "PRIMARY",'                               00203800
&ZMS              SETC  '&ZMS "SECONDARY",'                             00203900
&ZMS              SETC  '&ZMS "SYSTEM",'                                00204000
&ZMS              SETC  '&ZMS OR "BYASID".'                             00204100
                  MNOTE 8,' &ZMS '                                      00204200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00204300
.ZG49F            ANOP  ,                                               00204400
.*------------------------------------------------------------------    00204500
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00204600
.ZG50             ANOP  ,                                               00204700
&ZXCOMMON         SETC  'INPUT'     SET IN/OUTPUT                       00204800
                  AIF   (K'&XCOMMON GT 0).ZG50E  VALID ARG              00204900
                  AIF   (T'&COMMON EQ 'O').ZG50D  OMITTED               00205000
&ZASYSLNDX        SETA  0                                               00205100
.ZG50A            ANOP  ,           POSITIONAL MACRO KEY                00205200
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00205300
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG50C                00205400
&ZTLC             SETC 'COMMON'                                         00205500
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG50A       00205600
.ZG50B            ANOP  ,                                               00205700
&ZXCOMMON         SETC  ''          RESET IN/OUTPUT                     00205800
&ZMS              SETC  'THE "COMMON" KEY'                              00205900
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00206000
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00206100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00206200
                  AGO   .ZG50E                                          00206300
.ZG50C            ANOP  ,                                               00206400
&ZXCOMMON         SETC  ''          RESET IN/OUTPUT                     00206500
&ZMS              SETC  '"COMMON='                                      00206600
&ZMS              SETC  '&ZMS.&COMMON"'                                 00206700
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00206800
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00206900
&ZMS              SETC  '&ZMS "NO"'                                     00207000
&ZMS              SETC  '&ZMS OR "YES".'                                00207100
                  MNOTE 8,' &ZMS '                                      00207200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00207300
                  AGO   .ZG50E                                          00207400
.ZG50D            ANOP  ,                                               00207500
&XCOMMON          SETC  'NO'        SET DEFAULT KEYWORD                 00207600
.ZG50E            ANOP  ,                                               00207700
.*------------------------------------------------------------------    00207800
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00207900
                  AIF   (K'&COMMON(1) GT 0).ZG50F  PARM                 00208000
&XCOMMON          SETC  ''          ENSURE NULL KEYWORD                 00208100
&ZXCOMMON         SETC  ''          RESET IN/OUTPUT                     00208200
&ZMS              SETC  'THE'                                           00208300
&ZMS              SETC  '&ZMS "COMMON" KEY AND ITS'                     00208400
&ZMS              SETC  '&ZMS ARGUMENT ARE REQUIRED.'                   00208500
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00208600
&ZMS              SETC  '&ZMS "NO"'                                     00208700
&ZMS              SETC  '&ZMS OR "YES".'                                00208800
                  MNOTE 8,' &ZMS '                                      00208900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00209000
.ZG50F            ANOP  ,                                               00209100
.*------------------------------------------------------------------    00209200
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00209300
&XFPROT           SETC  ''          INITIALIZE XVARIABLE                00209400
.*-------------------------------------------------------------------   00209500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00209600
.ZG53             ANOP  ,                                               00209700
                  AIF   (K'&FPROT(1) LE 0).ZG53A                        00209800
&ZTLC             SETC 'YES'                                            00209900
                  AIF   ('&FPROT(1)' NE '&ZTLC').ZG54                   00210000
&XFPROT           SETC  'YES'       SET KEYWORD                         00210100
                  AIF   (N'&FPROT LE 1).ZG53A   CK NUM                  00210200
&ZMS              SETC  '"FPROT='                                       00210300
&ZMS              SETC  '&ZMS.&FPROT"'                                  00210400
&ZMS              SETC  '&ZMS "FPROT"'                                  00210500
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00210600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00210700
.ZG53A            ANOP  ,                                               00210800
.*-------------------------------------------------------------------   00210900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00211000
.ZG54             ANOP  ,                                               00211100
&ZTLC             SETC 'NO'                                             00211200
                  AIF   ('&FPROT(1)' NE '&ZTLC').ZG55                   00211300
&XFPROT           SETC  'NO'        SET KEYWORD                         00211400
                  AIF   (N'&FPROT LE 1).ZG54A   CK NUM                  00211500
&ZMS              SETC  '"FPROT='                                       00211600
&ZMS              SETC  '&ZMS.&FPROT"'                                  00211700
&ZMS              SETC  '&ZMS "FPROT"'                                  00211800
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00211900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00212000
.ZG54A            ANOP  ,                                               00212100
.*------------------------------------------------------------------    00212200
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00212300
.ZG55             ANOP  ,                                               00212400
&ZXFPROT          SETC  'INPUT'     SET IN/OUTPUT                       00212500
                  AIF   (K'&XFPROT GT 0).ZG55E  VALID ARG               00212600
                  AIF   (T'&FPROT EQ 'O').ZG55D  OMITTED                00212700
&ZASYSLNDX        SETA  0                                               00212800
.ZG55A            ANOP  ,           POSITIONAL MACRO KEY                00212900
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00213000
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG55C                00213100
&ZTLC             SETC 'FPROT'                                          00213200
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG55A       00213300
.ZG55B            ANOP  ,                                               00213400
&ZXFPROT          SETC  ''          RESET IN/OUTPUT                     00213500
&ZMS              SETC  'THE "FPROT" KEY'                               00213600
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00213700
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00213800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00213900
                  AGO   .ZG55E                                          00214000
.ZG55C            ANOP  ,                                               00214100
&ZXFPROT          SETC  ''          RESET IN/OUTPUT                     00214200
&ZMS              SETC  '"FPROT='                                       00214300
&ZMS              SETC  '&ZMS.&FPROT"'                                  00214400
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00214500
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00214600
&ZMS              SETC  '&ZMS "YES"'                                    00214700
&ZMS              SETC  '&ZMS OR "NO".'                                 00214800
                  MNOTE 8,' &ZMS '                                      00214900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00215000
                  AGO   .ZG55E                                          00215100
.ZG55D            ANOP  ,                                               00215200
&XFPROT           SETC  'YES'       SET DEFAULT KEYWORD                 00215300
.ZG55E            ANOP  ,                                               00215400
.*------------------------------------------------------------------    00215500
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00215600
                  AIF   (K'&FPROT(1) GT 0).ZG55F  PARM                  00215700
&XFPROT           SETC  ''          ENSURE NULL KEYWORD                 00215800
&ZXFPROT          SETC  ''          RESET IN/OUTPUT                     00215900
&ZMS              SETC  'THE'                                           00216000
&ZMS              SETC  '&ZMS "FPROT" KEY AND ITS'                      00216100
&ZMS              SETC  '&ZMS ARGUMENT ARE REQUIRED.'                   00216200
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00216300
&ZMS              SETC  '&ZMS "YES"'                                    00216400
&ZMS              SETC  '&ZMS OR "NO".'                                 00216500
                  MNOTE 8,' &ZMS '                                      00216600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00216700
.ZG55F            ANOP  ,                                               00216800
.*------------------------------------------------------------------    00216900
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00217000
&XTYPE            SETC  ''          INITIALIZE XVARIABLE                00217100
.*-------------------------------------------------------------------   00217200
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00217300
.ZG58             ANOP  ,                                               00217400
                  AIF   (K'&TYPE(1) LE 0).ZG58A                         00217500
&ZTLC             SETC 'PAGEABLE'                                       00217600
                  AIF   ('&TYPE(1)' NE '&ZTLC').ZG59                    00217700
&XTYPE            SETC  'PAGEABLE'  SET KEYWORD                         00217800
                  AIF   (N'&TYPE LE 1).ZG58A    CK NUM                  00217900
&ZMS              SETC  '"TYPE='                                        00218000
&ZMS              SETC  '&ZMS.&TYPE"'                                   00218100
&ZMS              SETC  '&ZMS "TYPE"'                                   00218200
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00218300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00218400
.ZG58A            ANOP  ,                                               00218500
.*-------------------------------------------------------------------   00218600
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00218700
.ZG59             ANOP  ,                                               00218800
&ZTLC             SETC 'DREF'                                           00218900
                  AIF   ('&TYPE(1)' NE '&ZTLC').ZG60                    00219000
&XTYPE            SETC  'DREF'      SET KEYWORD                         00219100
                  AIF   (N'&TYPE LE 1).ZG59A    CK NUM                  00219200
&ZMS              SETC  '"TYPE='                                        00219300
&ZMS              SETC  '&ZMS.&TYPE"'                                   00219400
&ZMS              SETC  '&ZMS "TYPE"'                                   00219500
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00219600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00219700
.ZG59A            ANOP  ,                                               00219800
.*-------------------------------------------------------------------   00219900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00220000
.ZG60             ANOP  ,                                               00220100
&ZTLC             SETC 'FIXED'                                          00220200
                  AIF   ('&TYPE(1)' NE '&ZTLC').ZG61                    00220300
&XTYPE            SETC  'FIXED'     SET KEYWORD                         00220400
                  AIF   (N'&TYPE LE 1).ZG60A    CK NUM                  00220500
&ZMS              SETC  '"TYPE='                                        00220600
&ZMS              SETC  '&ZMS.&TYPE"'                                   00220700
&ZMS              SETC  '&ZMS "TYPE"'                                   00220800
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00220900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00221000
.ZG60A            ANOP  ,                                               00221100
.*------------------------------------------------------------------    00221200
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00221300
.ZG61             ANOP  ,                                               00221400
&ZXTYPE           SETC  'INPUT'     SET IN/OUTPUT                       00221500
                  AIF   (K'&XTYPE GT 0).ZG61E   VALID ARG               00221600
                  AIF   (T'&TYPE EQ 'O').ZG61D  OMITTED                 00221700
&ZASYSLNDX        SETA  0                                               00221800
.ZG61A            ANOP  ,           POSITIONAL MACRO KEY                00221900
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00222000
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG61C                00222100
&ZTLC             SETC 'TYPE'                                           00222200
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG61A       00222300
.ZG61B            ANOP  ,                                               00222400
&ZXTYPE           SETC  ''          RESET IN/OUTPUT                     00222500
&ZMS              SETC  'THE "TYPE" KEY'                                00222600
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00222700
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00222800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00222900
                  AGO   .ZG61E                                          00223000
.ZG61C            ANOP  ,                                               00223100
&ZXTYPE           SETC  ''          RESET IN/OUTPUT                     00223200
&ZMS              SETC  '"TYPE='                                        00223300
&ZMS              SETC  '&ZMS.&TYPE"'                                   00223400
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00223500
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00223600
&ZMS              SETC  '&ZMS "PAGEABLE",'                              00223700
&ZMS              SETC  '&ZMS "DREF",'                                  00223800
&ZMS              SETC  '&ZMS OR "FIXED".'                              00223900
                  MNOTE 8,' &ZMS '                                      00224000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00224100
                  AGO   .ZG61E                                          00224200
.ZG61D            ANOP  ,                                               00224300
&XTYPE            SETC  'PAGEABLE'  SET DEFAULT KEYWORD                 00224400
.ZG61E            ANOP  ,                                               00224500
.*------------------------------------------------------------------    00224600
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00224700
                  AIF   (K'&TYPE(1) GT 0).ZG61F  PARM                   00224800
&XTYPE            SETC  ''          ENSURE NULL KEYWORD                 00224900
&ZXTYPE           SETC  ''          RESET IN/OUTPUT                     00225000
&ZMS              SETC  'THE'                                           00225100
&ZMS              SETC  '&ZMS "TYPE" KEY AND ITS'                       00225200
&ZMS              SETC  '&ZMS ARGUMENT ARE REQUIRED.'                   00225300
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00225400
&ZMS              SETC  '&ZMS "PAGEABLE",'                              00225500
&ZMS              SETC  '&ZMS "DREF",'                                  00225600
&ZMS              SETC  '&ZMS OR "FIXED".'                              00225700
                  MNOTE 8,' &ZMS '                                      00225800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00225900
.ZG61F            ANOP  ,                                               00226000
.*------------------------------------------------------------------    00226100
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00226200
&XCALLERKEY       SETC  ''          INITIALIZE XVARIABLE                00226300
.*-------------------------------------------------------------------   00226400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00226500
.ZG64             ANOP  ,                                               00226600
                  AIF   (K'&CALLERKEY(1) LE 0).ZG64A                    00226700
&ZTLC             SETC 'YES'                                            00226800
                  AIF   ('&CALLERKEY(1)' NE '&ZTLC').ZG65               00226900
&XCALLERKEY       SETC  'YES'       SET KEYWORD                         00227000
                  AIF   (N'&CALLERKEY LE 1).ZG64A  CK NUM               00227100
&ZMS              SETC  '"CALLERKEY='                                   00227200
&ZMS              SETC  '&ZMS.&CALLERKEY"'                              00227300
&ZMS              SETC  '&ZMS "CALLERKEY"'                              00227400
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00227500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00227600
.ZG64A            ANOP  ,                                               00227700
.*------------------------------------------------------------------    00227800
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00227900
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00228000
.ZG64A0           AIF   (K'&KEY00TOF0 LE 0).ZG64A1  OK                  00228100
&ZCVAL            SETC '&ZCVAL KEY00TOF0'       INCORRECT KEY USED      00228200
.ZG64A1           AIF   (K'&ZCVAL LE 0).ZG64A2  OK                      00228300
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00228400
&ZMS              SETC  '"CALLERKEY'                                    00228500
&ZMS              SETC  '&ZMS.=&CALLERKEY"'                             00228600
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00228700
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00228800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00228900
.ZG64A2           ANOP  ,                                               00229000
.*-------------------------------------------------------------------   00229100
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00229200
.ZG65             ANOP  ,                                               00229300
&ZTLC             SETC 'NO'                                             00229400
                  AIF   ('&CALLERKEY(1)' NE '&ZTLC').ZG69               00229500
&XCALLERKEY       SETC  'NO'        SET KEYWORD                         00229600
                  AIF   (N'&CALLERKEY LE 1).ZG65A  CK NUM               00229700
&ZMS              SETC  '"CALLERKEY='                                   00229800
&ZMS              SETC  '&ZMS.&CALLERKEY"'                              00229900
&ZMS              SETC  '&ZMS "CALLERKEY"'                              00230000
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00230100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00230200
.ZG65A            ANOP  ,                                               00230300
.*----------------------------------------------------------------***   00230400
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00230500
                  AIF   (N'&KEY00TOF0 LE 1).ZG67A  CK NUM               00230600
&ZMS              SETC  '"KEY00TOF0='                                   00230700
&ZMS              SETC  '&ZMS.&KEY00TOF0"'                              00230800
&ZMS              SETC  '&ZMS "KEY00TOF0"'                              00230900
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00231000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00231100
.ZG67A            ANOP  ,                                               00231200
.*-------------------------------------------------------------------   00231300
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00231400
&ZXKEY00TOF0      SETC  'INPUT'     SET IN/OUTPUT                       00231500
&XKEY00TOF0       SETC  '&KEY00TOF0(1)'         SET XVARIABLE           00231600
                  AIF   (N'&KEY00TOF0 GT 1).ZG67B  MULTI                00231700
&XKEY00TOF0       SETC  '&KEY00TOF0'            SET XVARIABLE           00231800
.ZG67B            AIF   (K'&KEY00TOF0(1) GT 0).ZG67C                    00231900
&ZXKEY00TOF0      SETC  ''          RESET IN/OUTPUT                     00232000
&ZMS              SETC  ' '                                             00232100
&ZMS              SETC  '&ZMS "KEY00TOF0" KEY AND ITS'                  00232200
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00232300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00232400
.ZG67C            ANOP  ,                                               00232500
.*-------------------------------------------------------------------   00232600
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00232700
                  AIF   (K'&ZXKEY00TOF0 LE 0).ZG67R  NOT I/O            00232800
                  AIF   ('&XKEY00TOF0'(1,1) NE '(').ZG67R               00232900
&ZCGPR            SETC  '&XKEY00TOF0'(2,K'&XKEY00TOF0-2)                00233000
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG67P                    00233100
                  AIF   (K'&ZCGPR GT 2).ZG67Q                           00233200
                  AIF   ('&ZCGPR' EQ '0').ZG67Q                         00233300
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00233400
                  AIF   (T'&ZCGPR NE 'N').ZG67Q  INVALID REG NAME       00233500
.ZG67P            ANOP  ,                                               00233600
                  AIF   (T'&ZCGPR NE 'N').ZG67R  NON NUMERIC            00233700
                  AIF   ('&ZCGPR' LT '2').ZG67Q                         00233800
                  AIF   ('&ZCGPR' LE '12').ZG67R                        00233900
.ZG67Q            ANOP  ,                                               00234000
&ZMS              SETC  '"KEY00TOF0='                                   00234100
&ZMS              SETC  '&ZMS.&KEY00TOF0"'                              00234200
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00234300
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00234400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00234500
.ZG67R            ANOP  ,                                               00234600
.*------------------------------------------------------------------    00234700
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00234800
.ZG69             ANOP  ,                                               00234900
&ZXCALLERKEY      SETC  'INPUT'     SET IN/OUTPUT                       00235000
                  AIF   (K'&XCALLERKEY GT 0).ZG69E  VALID ARG           00235100
                  AIF   (T'&CALLERKEY EQ 'O').ZG69D  OMITTED            00235200
&ZASYSLNDX        SETA  0                                               00235300
.ZG69A            ANOP  ,           POSITIONAL MACRO KEY                00235400
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00235500
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG69C                00235600
&ZTLC             SETC 'CALLERKEY'                                      00235700
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG69A       00235800
.ZG69B            ANOP  ,                                               00235900
&ZXCALLERKEY      SETC  ''          RESET IN/OUTPUT                     00236000
&ZMS              SETC  'THE "CALLERKEY" KEY'                           00236100
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00236200
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00236300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00236400
                  AGO   .ZG69E                                          00236500
.ZG69C            ANOP  ,                                               00236600
&ZXCALLERKEY      SETC  ''          RESET IN/OUTPUT                     00236700
&ZMS              SETC  '"CALLERKEY='                                   00236800
&ZMS              SETC  '&ZMS.&CALLERKEY"'                              00236900
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00237000
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00237100
&ZMS              SETC  '&ZMS "YES"'                                    00237200
&ZMS              SETC  '&ZMS OR "NO".'                                 00237300
                  MNOTE 8,' &ZMS '                                      00237400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00237500
                  AGO   .ZG69E                                          00237600
.ZG69D            ANOP  ,                                               00237700
&XCALLERKEY       SETC  'YES'       SET DEFAULT KEYWORD                 00237800
.ZG69E            ANOP  ,                                               00237900
.*------------------------------------------------------------------    00238000
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00238100
                  AIF   (K'&CALLERKEY(1) GT 0).ZG69F  PARM              00238200
&XCALLERKEY       SETC  ''          ENSURE NULL KEYWORD                 00238300
&ZXCALLERKEY      SETC  ''          RESET IN/OUTPUT                     00238400
&ZMS              SETC  'THE'                                           00238500
&ZMS              SETC  '&ZMS "CALLERKEY" KEY AND ITS'                  00238600
&ZMS              SETC  '&ZMS ARGUMENT ARE REQUIRED.'                   00238700
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00238800
&ZMS              SETC  '&ZMS "YES"'                                    00238900
&ZMS              SETC  '&ZMS OR "NO".'                                 00239000
                  MNOTE 8,' &ZMS '                                      00239100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00239200
.ZG69F            ANOP  ,                                               00239300
.*----------------------------------------------------------------***   00239400
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00239500
                  AIF   (N'&R0VALUE LE 1).ZG71A  CK NUM                 00239600
&ZMS              SETC  '"R0VALUE='                                     00239700
&ZMS              SETC  '&ZMS.&R0VALUE"'                                00239800
&ZMS              SETC  '&ZMS "R0VALUE"'                                00239900
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00240000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00240100
.ZG71A            ANOP  ,                                               00240200
.*-------------------------------------------------------------------   00240300
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00240400
&ZXR0VALUE        SETC  'INPUT'     SET IN/OUTPUT                       00240500
&XR0VALUE         SETC  'NO_R0VALUE'                                    00240600
                  AIF   (K'&R0VALUE(1) LE 0).ZG71B  PARM                00240700
&XR0VALUE         SETC  '&R0VALUE(1)'           SET XVARIABLE           00240800
                  AIF   (N'&R0VALUE GT 1).ZG71B  MULTI                  00240900
&XR0VALUE         SETC  '&R0VALUE'  SET XVARIABLE                       00241000
.ZG71B            ANOP  ,                                               00241100
.*-------------------------------------------------------------------   00241200
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00241300
                  AIF   (K'&ZXR0VALUE LE 0).ZG71R  NOT I/O              00241400
         AIF   ('&XR0VALUE' EQ 'NO_R0VALUE').ZG71R                      00241500
                  AIF   ('&XR0VALUE'(1,1) NE '(').ZG71R                 00241600
&ZCGPR            SETC  '&XR0VALUE'(2,K'&XR0VALUE-2)                    00241700
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG71P                    00241800
                  AIF   (K'&ZCGPR GT 2).ZG71Q                           00241900
                  AIF   ('&ZCGPR' EQ '0').ZG71Q                         00242000
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00242100
                  AIF   (T'&ZCGPR NE 'N').ZG71Q  INVALID REG NAME       00242200
.ZG71P            ANOP  ,                                               00242300
                  AIF   (T'&ZCGPR NE 'N').ZG71R  NON NUMERIC            00242400
                  AIF   ('&ZCGPR' LT '2').ZG71Q                         00242500
                  AIF   ('&ZCGPR' LE '12').ZG71R                        00242600
.ZG71Q            ANOP  ,                                               00242700
&ZMS              SETC  '"R0VALUE='                                     00242800
&ZMS              SETC  '&ZMS.&R0VALUE"'                                00242900
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00243000
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00243100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00243200
.ZG71R            ANOP  ,                                               00243300
.*----------------------------------------------------------------***   00243400
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00243500
                  AIF   (N'&R1VALUE LE 1).ZG73A  CK NUM                 00243600
&ZMS              SETC  '"R1VALUE='                                     00243700
&ZMS              SETC  '&ZMS.&R1VALUE"'                                00243800
&ZMS              SETC  '&ZMS "R1VALUE"'                                00243900
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00244000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00244100
.ZG73A            ANOP  ,                                               00244200
.*-------------------------------------------------------------------   00244300
.***AG.KXVAR09 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00244400
&ZXR1VALUE        SETC  'INPUT'     SET IN/OUTPUT                       00244500
&XR1VALUE         SETC  '&R1VALUE(1)'           SET XVARIABLE           00244600
                  AIF   (N'&R1VALUE GT 1).ZG73B  MULTI                  00244700
&XR1VALUE         SETC  '&R1VALUE'  SET XVARIABLE                       00244800
.ZG73B            AIF   (K'&R0VALUE(1) GT 0).ZG73C  KEY                 00244900
                  AIF   (K'&R1VALUE(1) LE 0).ZG73D  PARM                00245000
&ZMS              SETC  '"R1VALUE'                                      00245100
&ZMS              SETC  '&ZMS.=&R1VALUE"'                               00245200
&ZMS              SETC  '&ZMS CAN ONLY BE SPECIFIED IF'                 00245300
&ZMS              SETC  '&ZMS '                                         00245400
&ZMS              SETC  '&ZMS "R0VALUE"'                                00245500
                  MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                    00245600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00245700
                  AGO   .ZG73E                                          00245800
.*                                                                      00245900
.ZG73C            AIF   (K'&R1VALUE(1) GT 0).ZG73E  PARM                00246000
&ZXR1VALUE        SETC  ''          RESET IN/OUTPUT                     00246100
&ZMS              SETC  ' '                                             00246200
&ZMS              SETC  '&ZMS "R1VALUE" KEY AND ITS'                    00246300
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00246400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00246500
.ZG73D            ANOP  ,                                               00246600
&XR1VALUE         SETC  'NO_R1VALUE'            SET DEFAULT             00246700
.ZG73E            ANOP  ,                                               00246800
.*-------------------------------------------------------------------   00246900
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00247000
                  AIF   (K'&ZXR1VALUE LE 0).ZG73R  NOT I/O              00247100
         AIF   ('&XR1VALUE' EQ 'NO_R1VALUE').ZG73R                      00247200
                  AIF   ('&XR1VALUE'(1,1) NE '(').ZG73R                 00247300
&ZCGPR            SETC  '&XR1VALUE'(2,K'&XR1VALUE-2)                    00247400
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG73P                    00247500
                  AIF   (K'&ZCGPR GT 2).ZG73Q                           00247600
                  AIF   ('&ZCGPR' EQ '0').ZG73Q                         00247700
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00247800
                  AIF   (T'&ZCGPR NE 'N').ZG73Q  INVALID REG NAME       00247900
.ZG73P            ANOP  ,                                               00248000
                  AIF   (T'&ZCGPR NE 'N').ZG73R  NON NUMERIC            00248100
                  AIF   ('&ZCGPR' LT '2').ZG73Q                         00248200
                  AIF   ('&ZCGPR' LE '12').ZG73R                        00248300
.ZG73Q            ANOP  ,                                               00248400
&ZMS              SETC  '"R1VALUE='                                     00248500
&ZMS              SETC  '&ZMS.&R1VALUE"'                                00248600
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00248700
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00248800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00248900
.ZG73R            ANOP  ,                                               00249000
.*------------------------------------------------------------------    00249100
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00249200
&XFAILMODE        SETC  ''          INITIALIZE XVARIABLE                00249300
.*-------------------------------------------------------------------   00249400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00249500
.ZG78             ANOP  ,                                               00249600
                  AIF   (K'&FAILMODE(1) LE 0).ZG78A                     00249700
&ZTLC             SETC 'RC'                                             00249800
                  AIF   ('&FAILMODE(1)' NE '&ZTLC').ZG79                00249900
&XFAILMODE        SETC  'RC'        SET KEYWORD                         00250000
                  AIF   (N'&FAILMODE LE 1).ZG78A  CK NUM                00250100
&ZMS              SETC  '"FAILMODE='                                    00250200
&ZMS              SETC  '&ZMS.&FAILMODE"'                               00250300
&ZMS              SETC  '&ZMS "FAILMODE"'                               00250400
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00250500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00250600
.ZG78A            ANOP  ,                                               00250700
.*-------------------------------------------------------------------   00250800
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00250900
.ZG79             ANOP  ,                                               00251000
&ZTLC             SETC 'ABEND'                                          00251100
                  AIF   ('&FAILMODE(1)' NE '&ZTLC').ZG80                00251200
&XFAILMODE        SETC  'ABEND'     SET KEYWORD                         00251300
                  AIF   (N'&FAILMODE LE 1).ZG79A  CK NUM                00251400
&ZMS              SETC  '"FAILMODE='                                    00251500
&ZMS              SETC  '&ZMS.&FAILMODE"'                               00251600
&ZMS              SETC  '&ZMS "FAILMODE"'                               00251700
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00251800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00251900
.ZG79A            ANOP  ,                                               00252000
.*------------------------------------------------------------------    00252100
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00252200
.ZG80             ANOP  ,                                               00252300
&ZXFAILMODE       SETC  'INPUT'     SET IN/OUTPUT                       00252400
                  AIF   (K'&XFAILMODE GT 0).ZG80E  VALID ARG            00252500
                  AIF   (T'&FAILMODE EQ 'O').ZG80D  OMITTED             00252600
&ZASYSLNDX        SETA  0                                               00252700
.ZG80A            ANOP  ,           POSITIONAL MACRO KEY                00252800
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00252900
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG80C                00253000
&ZTLC             SETC 'FAILMODE'                                       00253100
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG80A       00253200
.ZG80B            ANOP  ,                                               00253300
&ZXFAILMODE       SETC  ''          RESET IN/OUTPUT                     00253400
&ZMS              SETC  'THE "FAILMODE" KEY'                            00253500
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00253600
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00253700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00253800
                  AGO   .ZG80E                                          00253900
.ZG80C            ANOP  ,                                               00254000
&ZXFAILMODE       SETC  ''          RESET IN/OUTPUT                     00254100
&ZMS              SETC  '"FAILMODE='                                    00254200
&ZMS              SETC  '&ZMS.&FAILMODE"'                               00254300
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00254400
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00254500
&ZMS              SETC  '&ZMS "RC"'                                     00254600
&ZMS              SETC  '&ZMS OR "ABEND".'                              00254700
                  MNOTE 8,' &ZMS '                                      00254800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00254900
                  AGO   .ZG80E                                          00255000
.ZG80D            ANOP  ,                                               00255100
&XFAILMODE        SETC  'RC'        SET DEFAULT KEYWORD                 00255200
.ZG80E            ANOP  ,                                               00255300
.*------------------------------------------------------------------    00255400
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00255500
                  AIF   (K'&FAILMODE(1) GT 0).ZG80F  PARM               00255600
&XFAILMODE        SETC  ''          ENSURE NULL KEYWORD                 00255700
&ZXFAILMODE       SETC  ''          RESET IN/OUTPUT                     00255800
&ZMS              SETC  'THE'                                           00255900
&ZMS              SETC  '&ZMS "FAILMODE" KEY AND ITS'                   00256000
&ZMS              SETC  '&ZMS ARGUMENT ARE REQUIRED.'                   00256100
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00256200
&ZMS              SETC  '&ZMS "RC"'                                     00256300
&ZMS              SETC  '&ZMS OR "ABEND".'                              00256400
                  MNOTE 8,' &ZMS '                                      00256500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00256600
.ZG80F            ANOP  ,                                               00256700
.*------------------------------------------------------------------    00256800
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00256900
&XREGS            SETC  ''          INITIALIZE XVARIABLE                00257000
.*-------------------------------------------------------------------   00257100
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00257200
.ZG83             ANOP  ,                                               00257300
                  AIF   (K'&REGS(1) LE 0).ZG83A                         00257400
&ZTLC             SETC 'SAVE'                                           00257500
                  AIF   ('&REGS(1)' NE '&ZTLC').ZG84                    00257600
&XREGS            SETC  'SAVE'      SET KEYWORD                         00257700
                  AIF   (N'&REGS LE 1).ZG83A    CK NUM                  00257800
&ZMS              SETC  '"REGS='                                        00257900
&ZMS              SETC  '&ZMS.&REGS"'                                   00258000
&ZMS              SETC  '&ZMS "REGS"'                                   00258100
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00258200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00258300
.ZG83A            ANOP  ,                                               00258400
.*-------------------------------------------------------------------   00258500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00258600
.ZG84             ANOP  ,                                               00258700
&ZTLC             SETC 'USE'                                            00258800
                  AIF   ('&REGS(1)' NE '&ZTLC').ZG85                    00258900
&XREGS            SETC  'USE'       SET KEYWORD                         00259000
                  AIF   (N'&REGS LE 1).ZG84A    CK NUM                  00259100
&ZMS              SETC  '"REGS='                                        00259200
&ZMS              SETC  '&ZMS.&REGS"'                                   00259300
&ZMS              SETC  '&ZMS "REGS"'                                   00259400
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00259500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00259600
.ZG84A            ANOP  ,                                               00259700
.*------------------------------------------------------------------    00259800
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00259900
.ZG85             ANOP  ,                                               00260000
&ZXREGS           SETC  'INPUT'     SET IN/OUTPUT                       00260100
                  AIF   (K'&XREGS GT 0).ZG85E   VALID ARG               00260200
                  AIF   (T'&REGS EQ 'O').ZG85D  OMITTED                 00260300
&ZASYSLNDX        SETA  0                                               00260400
.ZG85A            ANOP  ,           POSITIONAL MACRO KEY                00260500
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00260600
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG85C                00260700
&ZTLC             SETC 'REGS'                                           00260800
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG85A       00260900
.ZG85B            ANOP  ,                                               00261000
&ZXREGS           SETC  ''          RESET IN/OUTPUT                     00261100
&ZMS              SETC  'THE "REGS" KEY'                                00261200
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00261300
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00261400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00261500
                  AGO   .ZG85E                                          00261600
.ZG85C            ANOP  ,                                               00261700
&ZXREGS           SETC  ''          RESET IN/OUTPUT                     00261800
&ZMS              SETC  '"REGS='                                        00261900
&ZMS              SETC  '&ZMS.&REGS"'                                   00262000
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00262100
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00262200
&ZMS              SETC  '&ZMS "SAVE"'                                   00262300
&ZMS              SETC  '&ZMS OR "USE".'                                00262400
                  MNOTE 8,' &ZMS '                                      00262500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00262600
                  AGO   .ZG85E                                          00262700
.ZG85D            ANOP  ,                                               00262800
&XREGS            SETC  'SAVE'      SET DEFAULT KEYWORD                 00262900
.ZG85E            ANOP  ,                                               00263000
.*------------------------------------------------------------------    00263100
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00263200
                  AIF   (K'&REGS(1) GT 0).ZG85F  PARM                   00263300
&XREGS            SETC  ''          ENSURE NULL KEYWORD                 00263400
&ZXREGS           SETC  ''          RESET IN/OUTPUT                     00263500
&ZMS              SETC  'THE'                                           00263600
&ZMS              SETC  '&ZMS "REGS" KEY AND ITS'                       00263700
&ZMS              SETC  '&ZMS ARGUMENT ARE REQUIRED.'                   00263800
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00263900
&ZMS              SETC  '&ZMS "SAVE"'                                   00264000
&ZMS              SETC  '&ZMS OR "USE".'                                00264100
                  MNOTE 8,' &ZMS '                                      00264200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00264300
.ZG85F            ANOP  ,                                               00264400
.*-------------------------------------------------------------------   00264500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00264600
.ZG86             ANOP  ,                                               00264700
&ZTLC             SETC 'FREE'                                           00264800
                  AIF   ('&REQUEST(1)' NE '&ZTLC').ZG96                 00264900
&XREQUEST         SETC  'FREE'      SET KEYWORD                         00265000
                  AIF   (N'&REQUEST LE 1).ZG86A  CK NUM                 00265100
&ZMS              SETC  '"REQUEST='                                     00265200
&ZMS              SETC  '&ZMS.&REQUEST"'                                00265300
&ZMS              SETC  '&ZMS "REQUEST"'                                00265400
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00265500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00265600
.ZG86A            ANOP  ,                                               00265700
.*------------------------------------------------------------------    00265800
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00265900
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00266000
.ZG86A0           AIF   (K'&SIZE LE 0).ZG86A1   OK                      00266100
&ZCVAL            SETC '&ZCVAL SIZE'            INCORRECT KEY USED      00266200
.ZG86A1           AIF   (K'&SENSITIVE LE 0).ZG86A2  OK                  00266300
&ZCVAL            SETC '&ZCVAL SENSITIVE'       INCORRECT KEY USED      00266400
.ZG86A2           AIF   (K'&COMMON LE 0).ZG86A3  OK                     00266500
&ZCVAL            SETC '&ZCVAL COMMON'          INCORRECT KEY USED      00266600
.ZG86A3           AIF   (K'&OWNINGTASK LE 0).ZG86A4  OK                 00266700
&ZCVAL            SETC '&ZCVAL OWNINGTASK'      INCORRECT KEY USED      00266800
.ZG86A4           AIF   (K'&MEMLIMIT LE 0).ZG86A5  OK                   00266900
&ZCVAL            SETC '&ZCVAL MEMLIMIT'        INCORRECT KEY USED      00267000
.ZG86A5           AIF   (K'&LOCALSYSAREA LE 0).ZG86A6  OK               00267100
&ZCVAL            SETC '&ZCVAL LOCALSYSAREA'    INCORRECT KEY USED      00267200
.ZG86A6           AIF   (K'&OWNER LE 0).ZG86A7  OK                      00267300
&ZCVAL            SETC '&ZCVAL OWNER'           INCORRECT KEY USED      00267400
.ZG86A7           AIF   (K'&OWNINGASID LE 0).ZG86A8  OK                 00267500
&ZCVAL            SETC '&ZCVAL OWNINGASID'      INCORRECT KEY USED      00267600
.ZG86A8           AIF   (K'&FPROT LE 0).ZG86A9  OK                      00267700
&ZCVAL            SETC '&ZCVAL FPROT'           INCORRECT KEY USED      00267800
.ZG86A9           AIF   (K'&TYPE LE 0).ZG86A10  OK                      00267900
&ZCVAL            SETC '&ZCVAL TYPE'            INCORRECT KEY USED      00268000
.ZG86A10          AIF   (K'&CALLERKEY LE 0).ZG86A11  OK                 00268100
&ZCVAL            SETC '&ZCVAL CALLERKEY'       INCORRECT KEY USED      00268200
.ZG86A11          AIF   (K'&KEY00TOF0 LE 0).ZG86A12  OK                 00268300
&ZCVAL            SETC '&ZCVAL KEY00TOF0'       INCORRECT KEY USED      00268400
.ZG86A12          AIF   (K'&R0VALUE LE 0).ZG86A13  OK                   00268500
&ZCVAL            SETC '&ZCVAL R0VALUE'         INCORRECT KEY USED      00268600
.ZG86A13          AIF   (K'&R1VALUE LE 0).ZG86A14  OK                   00268700
&ZCVAL            SETC '&ZCVAL R1VALUE'         INCORRECT KEY USED      00268800
.ZG86A14          AIF   (K'&FAILMODE LE 0).ZG86A15  OK                  00268900
&ZCVAL            SETC '&ZCVAL FAILMODE'        INCORRECT KEY USED      00269000
.ZG86A15          AIF   (K'&ZCVAL LE 0).ZG86A16  OK                     00269100
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00269200
&ZMS              SETC  '"REQUEST'                                      00269300
&ZMS              SETC  '&ZMS.=&REQUEST"'                               00269400
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00269500
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00269600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00269700
.ZG86A16          ANOP  ,                                               00269800
.*----------------------------------------------------------------***   00269900
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00270000
&XDUMMY1          SETC  ''          INITIALIZE XVARIABLE                00270100
                  AIF   (K'&AREANAME LE 0).ZG88C                        00270200
&ZXDUMMY1         SETC  'INPUT'     SET IN/OUTPUT                       00270300
&XDUMMY1          SETC  'AREANAME'  SET XVARIABLE                       00270400
&ZXAREANAME       SETC  'INPUT'     SET IN/OUTPUT                       00270500
&XAREANAME        SETC  '&AREANAME(1)'          SET XVARIABLE PARM      00270600
                  AIF   (N'&AREANAME GT 1).ZG88A                        00270700
&XAREANAME        SETC  '&AREANAME'             SET XVARIABLE PARM      00270800
.ZG88A            AIF   (N'&AREANAME LE 1).ZG88B  CK NUM                00270900
&ZMS              SETC  '"AREANAME='                                    00271000
&ZMS              SETC  '&ZMS.&AREANAME"'                               00271100
&ZMS              SETC  '&ZMS "AREANAME"'                               00271200
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00271300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00271400
.ZG88B            AIF   (K'&XAREANAME GT 0).ZG88C  ONE PARM             00271500
&ZXDUMMY1         SETC  ''          RESET IN/OUTPUT                     00271600
&ZXAREANAME       SETC  ''          RESET IN/OUTPUT                     00271700
&ZMS              SETC  ' '                                             00271800
&ZMS              SETC  '&ZMS "AREANAME" KEY AND ITS'                   00271900
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00272000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00272100
.ZG88C            ANOP  ,                                               00272200
.*----------------------------------------------------------------***   00272300
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00272400
                  AIF   (K'&AREAADDR LE 0).ZG89D  NO ME KEY             00272500
                  AIF   (N'&AREAADDR LE 1).ZG89A  CK NUM                00272600
&ZMS              SETC  '"AREAADDR='                                    00272700
&ZMS              SETC  '&ZMS.&AREAADDR"'                               00272800
&ZMS              SETC  '&ZMS "AREAADDR"'                               00272900
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00273000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00273100
.ZG89A            AIF   (K'&XDUMMY1 LE 0).ZG89B                         00273200
&ZMS              SETC  '"AREAADDR'                                     00273300
&ZMS              SETC  '&ZMS.=&AREAADDR"'                              00273400
&ZMS              SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'           00273500
&ZMS              SETC  '&ZMS "&XDUMMY1"'                               00273600
                  MNOTE 8,' &ZMS KEY.'                                  00273700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00273800
                  AGO   .ZG89D                                          00273900
.*                                                                      00274000
.ZG89B            ANOP  ,                                               00274100
&ZXDUMMY1         SETC  'INPUT'     SET IN/OUTPUT                       00274200
&XDUMMY1          SETC  'AREAADDR'  SET XVARIABLE                       00274300
&ZXAREAADDR       SETC  'INPUT'     SET IN/OUTPUT                       00274400
&XAREAADDR        SETC  '&AREAADDR(1)'          SET XVARIABLE PARM      00274500
                  AIF   (N'&AREAADDR GT 1).ZG89C                        00274600
&XAREAADDR        SETC  '&AREAADDR'             SET XVARIABLE PARM      00274700
.ZG89C            AIF   (K'&XAREAADDR GT 0).ZG89D  ONE PARM             00274800
&ZXDUMMY1         SETC  ''          RESET IN/OUTPUT                     00274900
&ZXAREAADDR       SETC  ''          RESET IN/OUTPUT                     00275000
&ZMS              SETC  ' '                                             00275100
&ZMS              SETC  '&ZMS "AREAADDR" KEY AND ITS'                   00275200
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00275300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00275400
.ZG89D            ANOP  ,                                               00275500
.*------------------------------------------------------------------    00275600
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           00275700
                  AIF   (K'&XDUMMY1 GT 0).ZG90B                         00275800
&ZXDUMMY1         SETC  ''          RESET IN/OUTPUT                     00275900
&ZXAREANAME       SETC  ''          RESET IN/OUTPUT                     00276000
&XDUMMY1          SETC  ''          ENSURE NULL                         00276100
&XAREANAME        SETC  ''          ENSURE NULL                         00276200
&ZMS              SETC  'ONE OF THE FOLLOWING'                          00276300
&ZMS              SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'             00276400
&ZMS              SETC  '&ZMS REQUIRED:'                                00276500
&ZMS              SETC  '&ZMS "AREANAME"'       VALID ME KEY            00276600
&ZMS              SETC  '&ZMS OR "AREAADDR".'   VALID ME KEY            00276700
                  MNOTE 8,' &ZMS '                                      00276800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00276900
.ZG90B            ANOP  ,                                               00277000
.*-------------------------------------------------------------------   00277100
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00277200
.ZG88ZY  AIF    ('&XDUMMY1' NE 'AREANAME').ZG89ZY                       00277300
.*-------------------------------------------------------------------   00277400
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00277500
                  AIF   (K'&ZXAREANAME LE 0).ZG88R  NOT I/O             00277600
                  AIF   ('&XAREANAME'(1,1) NE '(').ZG88R                00277700
&ZCGPR            SETC  '&XAREANAME'(2,K'&XAREANAME-2)                  00277800
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG88P                    00277900
                  AIF   (K'&ZCGPR GT 2).ZG88Q                           00278000
                  AIF   ('&ZCGPR' EQ '0').ZG88Q                         00278100
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00278200
                  AIF   (T'&ZCGPR NE 'N').ZG88Q  INVALID REG NAME       00278300
.ZG88P            ANOP  ,                                               00278400
                  AIF   (T'&ZCGPR NE 'N').ZG88R  NON NUMERIC            00278500
                  AIF   ('&ZCGPR' LT '2').ZG88Q                         00278600
                  AIF   ('&ZCGPR' LE '12').ZG88R                        00278700
.ZG88Q            ANOP  ,                                               00278800
&ZMS              SETC  '"AREANAME='                                    00278900
&ZMS              SETC  '&ZMS.&AREANAME"'                               00279000
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00279100
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00279200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00279300
.ZG88R            ANOP  ,                                               00279400
.*-------------------------------------------------------------------   00279500
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00279600
.ZG89ZY  AIF    ('&XDUMMY1' NE 'AREAADDR').ZG90ZY                       00279700
.*-------------------------------------------------------------------   00279800
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00279900
                  AIF   (K'&ZXAREAADDR LE 0).ZG89R  NOT I/O             00280000
                  AIF   ('&XAREAADDR'(1,1) NE '(').ZG89R                00280100
&ZCGPR            SETC  '&XAREAADDR'(2,K'&XAREAADDR-2)                  00280200
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG89P                    00280300
                  AIF   (K'&ZCGPR GT 2).ZG89Q                           00280400
                  AIF   ('&ZCGPR' EQ '0').ZG89Q                         00280500
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00280600
                  AIF   (T'&ZCGPR NE 'N').ZG89Q  INVALID REG NAME       00280700
.ZG89P            ANOP  ,                                               00280800
                  AIF   (T'&ZCGPR NE 'N').ZG89R  NON NUMERIC            00280900
                  AIF   ('&ZCGPR' LT '2').ZG89Q                         00281000
                  AIF   ('&ZCGPR' LE '12').ZG89R                        00281100
.ZG89Q            ANOP  ,                                               00281200
&ZMS              SETC  '"AREAADDR='                                    00281300
&ZMS              SETC  '&ZMS.&AREAADDR"'                               00281400
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00281500
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00281600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00281700
.ZG89R            ANOP  ,                                               00281800
.*-------------------------------------------------------------------   00281900
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            00282000
.ZG90ZY           ANOP ,            END MUTUALLY EXCLUSIVE KEYS         00282100
.*------------------------------------------------------------------    00282200
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00282300
&XREGS            SETC  ''          INITIALIZE XVARIABLE                00282400
.*-------------------------------------------------------------------   00282500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00282600
.ZG93             ANOP  ,                                               00282700
                  AIF   (K'&REGS(1) LE 0).ZG93A                         00282800
&ZTLC             SETC 'SAVE'                                           00282900
                  AIF   ('&REGS(1)' NE '&ZTLC').ZG94                    00283000
&XREGS            SETC  'SAVE'      SET KEYWORD                         00283100
                  AIF   (N'&REGS LE 1).ZG93A    CK NUM                  00283200
&ZMS              SETC  '"REGS='                                        00283300
&ZMS              SETC  '&ZMS.&REGS"'                                   00283400
&ZMS              SETC  '&ZMS "REGS"'                                   00283500
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00283600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00283700
.ZG93A            ANOP  ,                                               00283800
.*-------------------------------------------------------------------   00283900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00284000
.ZG94             ANOP  ,                                               00284100
&ZTLC             SETC 'USE'                                            00284200
                  AIF   ('&REGS(1)' NE '&ZTLC').ZG95                    00284300
&XREGS            SETC  'USE'       SET KEYWORD                         00284400
                  AIF   (N'&REGS LE 1).ZG94A    CK NUM                  00284500
&ZMS              SETC  '"REGS='                                        00284600
&ZMS              SETC  '&ZMS.&REGS"'                                   00284700
&ZMS              SETC  '&ZMS "REGS"'                                   00284800
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00284900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00285000
.ZG94A            ANOP  ,                                               00285100
.*------------------------------------------------------------------    00285200
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00285300
.ZG95             ANOP  ,                                               00285400
&ZXREGS           SETC  'INPUT'     SET IN/OUTPUT                       00285500
                  AIF   (K'&XREGS GT 0).ZG95E   VALID ARG               00285600
                  AIF   (T'&REGS EQ 'O').ZG95D  OMITTED                 00285700
&ZASYSLNDX        SETA  0                                               00285800
.ZG95A            ANOP  ,           POSITIONAL MACRO KEY                00285900
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00286000
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG95C                00286100
&ZTLC             SETC 'REGS'                                           00286200
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG95A       00286300
.ZG95B            ANOP  ,                                               00286400
&ZXREGS           SETC  ''          RESET IN/OUTPUT                     00286500
&ZMS              SETC  'THE "REGS" KEY'                                00286600
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00286700
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00286800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00286900
                  AGO   .ZG95E                                          00287000
.ZG95C            ANOP  ,                                               00287100
&ZXREGS           SETC  ''          RESET IN/OUTPUT                     00287200
&ZMS              SETC  '"REGS='                                        00287300
&ZMS              SETC  '&ZMS.&REGS"'                                   00287400
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00287500
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00287600
&ZMS              SETC  '&ZMS "SAVE"'                                   00287700
&ZMS              SETC  '&ZMS OR "USE".'                                00287800
                  MNOTE 8,' &ZMS '                                      00287900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00288000
                  AGO   .ZG95E                                          00288100
.ZG95D            ANOP  ,                                               00288200
&XREGS            SETC  'SAVE'      SET DEFAULT KEYWORD                 00288300
.ZG95E            ANOP  ,                                               00288400
.*------------------------------------------------------------------    00288500
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00288600
                  AIF   (K'&REGS(1) GT 0).ZG95F  PARM                   00288700
&XREGS            SETC  ''          ENSURE NULL KEYWORD                 00288800
&ZXREGS           SETC  ''          RESET IN/OUTPUT                     00288900
&ZMS              SETC  'THE'                                           00289000
&ZMS              SETC  '&ZMS "REGS" KEY AND ITS'                       00289100
&ZMS              SETC  '&ZMS ARGUMENT ARE REQUIRED.'                   00289200
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00289300
&ZMS              SETC  '&ZMS "SAVE"'                                   00289400
&ZMS              SETC  '&ZMS OR "USE".'                                00289500
                  MNOTE 8,' &ZMS '                                      00289600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00289700
.ZG95F            ANOP  ,                                               00289800
.*------------------------------------------------------------------    00289900
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00290000
.ZG96             ANOP  ,                                               00290100
&ZXREQUEST        SETC  'INPUT'     SET IN/OUTPUT                       00290200
                  AIF   (K'&XREQUEST GT 0).ZG96E  VALID ARG             00290300
                  AIF   (T'&REQUEST EQ 'O').ZG96D  OMITTED              00290400
&ZASYSLNDX        SETA  0                                               00290500
.ZG96A            ANOP  ,           POSITIONAL MACRO KEY                00290600
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00290700
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG96C                00290800
&ZTLC             SETC 'REQUEST'                                        00290900
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG96A       00291000
.ZG96B            ANOP  ,                                               00291100
&ZXREQUEST        SETC  ''          RESET IN/OUTPUT                     00291200
&ZMS              SETC  'THE "REQUEST" KEY'                             00291300
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00291400
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00291500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00291600
                  AGO   .ZG96E                                          00291700
.ZG96C            ANOP  ,                                               00291800
&ZXREQUEST        SETC  ''          RESET IN/OUTPUT                     00291900
&ZMS              SETC  '"REQUEST='                                     00292000
&ZMS              SETC  '&ZMS.&REQUEST"'                                00292100
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00292200
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00292300
&ZMS              SETC  '&ZMS "GET"'                                    00292400
&ZMS              SETC  '&ZMS OR "FREE".'                               00292500
                  MNOTE 8,' &ZMS '                                      00292600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00292700
                  AGO   .ZG96E                                          00292800
.ZG96D            ANOP  ,                                               00292900
&XREQUEST         SETC  'GET'       SET DEFAULT KEYWORD                 00293000
.ZG96E            ANOP  ,                                               00293100
.*------------------------------------------------------------------    00293200
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00293300
                  AIF   (K'&REQUEST(1) GT 0).ZG96F  PARM                00293400
&XREQUEST         SETC  ''          ENSURE NULL KEYWORD                 00293500
&ZXREQUEST        SETC  ''          RESET IN/OUTPUT                     00293600
&ZMS              SETC  'THE'                                           00293700
&ZMS              SETC  '&ZMS "REQUEST" KEY AND ITS'                    00293800
&ZMS              SETC  '&ZMS ARGUMENT ARE REQUIRED.'                   00293900
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00294000
&ZMS              SETC  '&ZMS "GET"'                                    00294100
&ZMS              SETC  '&ZMS OR "FREE".'                               00294200
                  MNOTE 8,' &ZMS '                                      00294300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00294400
.ZG96F            ANOP  ,                                               00294500
.*----------------------------------------------------------------***   00294600
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00294700
                  AIF   (N'&RETCODE LE 1).ZG98A  CK NUM                 00294800
&ZMS              SETC  '"RETCODE='                                     00294900
&ZMS              SETC  '&ZMS.&RETCODE"'                                00295000
&ZMS              SETC  '&ZMS "RETCODE"'                                00295100
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00295200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00295300
.ZG98A            ANOP  ,                                               00295400
.*-------------------------------------------------------------------   00295500
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00295600
                  AIF   (K'&RETCODE(1) LE 0).ZG98C  NO PARM             00295700
&ZXRETCODE        SETC  'OUTPUT'    SET OUTPUT                          00295800
&XRETCODE         SETC  '&RETCODE(1)'           SET XVARIABLE           00295900
                  AIF   (N'&RETCODE GT 1).ZG98C                         00296000
&XRETCODE         SETC  '&RETCODE'  SET XVARIABLE                       00296100
.ZG98C            ANOP  ,                                               00296200
.*-------------------------------------------------------------------   00296300
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00296400
                  AIF   (K'&ZXRETCODE LE 0).ZG98R  NOT I/O              00296500
                  AIF   ('&XRETCODE'(1,1) NE '(').ZG98R                 00296600
&ZCGPR            SETC  '&XRETCODE'(2,K'&XRETCODE-2)                    00296700
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG98P                    00296800
                  AIF   (K'&ZCGPR GT 2).ZG98Q                           00296900
                  AIF   ('&ZCGPR' EQ '0').ZG98Q                         00297000
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00297100
                  AIF   (T'&ZCGPR NE 'N').ZG98Q  INVALID REG NAME       00297200
.ZG98P            ANOP  ,                                               00297300
                  AIF   (T'&ZCGPR NE 'N').ZG98R  NON NUMERIC            00297400
                  AIF   ('&ZCGPR' EQ '15').ZG98R                        00297500
                  AIF   ('&ZCGPR' LT '2').ZG98Q                         00297600
                  AIF   ('&ZCGPR' LE '12').ZG98R                        00297700
.ZG98Q            ANOP  ,                                               00297800
&ZMS              SETC  '"RETCODE='                                     00297900
&ZMS              SETC  '&ZMS.&RETCODE"'                                00298000
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00298100
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12) OR (15).'        00298200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00298300
.ZG98R            ANOP  ,                                               00298400
.*----------------------------------------------------------------***   00298500
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00298600
                  AIF   (N'&RSNCODE LE 1).ZG101A  CK NUM                00298700
&ZMS              SETC  '"RSNCODE='                                     00298800
&ZMS              SETC  '&ZMS.&RSNCODE"'                                00298900
&ZMS              SETC  '&ZMS "RSNCODE"'                                00299000
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00299100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00299200
.ZG101A           ANOP  ,                                               00299300
.*-------------------------------------------------------------------   00299400
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00299500
                  AIF   (K'&RSNCODE(1) LE 0).ZG101C  NO PARM            00299600
&ZXRSNCODE        SETC  'OUTPUT'    SET OUTPUT                          00299700
&XRSNCODE         SETC  '&RSNCODE(1)'           SET XVARIABLE           00299800
                  AIF   (N'&RSNCODE GT 1).ZG101C                        00299900
&XRSNCODE         SETC  '&RSNCODE'  SET XVARIABLE                       00300000
.ZG101C           ANOP  ,                                               00300100
.*-------------------------------------------------------------------   00300200
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00300300
                  AIF   (K'&ZXRSNCODE LE 0).ZG101R  NOT I/O             00300400
                  AIF   ('&XRSNCODE'(1,1) NE '(').ZG101R                00300500
&ZCGPR            SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                    00300600
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG101P                   00300700
                  AIF   (K'&ZCGPR GT 2).ZG101Q                          00300800
                  AIF   ('&ZCGPR' EQ '0').ZG101R                        00300900
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00301000
                  AIF   (T'&ZCGPR NE 'N').ZG101Q  INVALID REG NAME      00301100
.ZG101P           ANOP  ,                                               00301200
                  AIF   (T'&ZCGPR NE 'N').ZG101R  NON NUMERIC           00301300
                  AIF   ('&ZCGPR' EQ '0').ZG101R                        00301400
                  AIF   ('&ZCGPR' LT '2').ZG101Q                        00301500
                  AIF   ('&ZCGPR' LE '12').ZG101R                       00301600
.ZG101Q           ANOP  ,                                               00301700
&ZMS              SETC  '"RSNCODE='                                     00301800
&ZMS              SETC  '&ZMS.&RSNCODE"'                                00301900
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00302000
                  MNOTE 8,' &ZMS IN THE RANGE (0) OR (2)-(12).'         00302100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00302200
.ZG101R           ANOP  ,                                               00302300
.******************************************************************     00302400
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00302500
.******************************************************************     00302600
                  ACTR  10000                                           00302700
.*----------------------------------------------------------------***   00302800
.***AH.P02 EXTRA POSITIONALS                                            00302900
                  AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS            00303000
                  AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL            00303100
                  AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL        00303200
                  AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL         00303300
.ZGLISTX1         ANOP  ,                                               00303400
&ZCVAL            SETC  ''          ERROR FIELD                         00303500
&ZAWRK            SETA  0           POSITIONAL NUMBER                   00303600
.ZGLIST2          ANOP  ,                                               00303700
&ZAWRK            SETA  &ZAWRK+1    NEXT POSITIONAL                     00303800
                  AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE            00303900
&ZCVAL            SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                 00304000
                  AGO   .ZGLIST2                                        00304100
.*                                                                      00304200
.ZGLIST3          ANOP  ,                                               00304300
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)   STRIP COMMA             00304400
&ZMS              SETC  'POSITIONAL ARGUMENT(S),'                       00304500
&ZMS              SETC  '&ZMS "&ZCVAL"'                                 00304600
&ZMS              SETC  '&ZMS CANNOT BE USED.'                          00304700
&ZMS              SETC  '&ZMS NO POSITIONAL ARGUMENTS'                  00304800
                  MNOTE 8,' &ZMS ARE ALLOWED.'                          00304900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00305000
.ZGLISTX          ANOP  ,                                               00305100
&ZASYSLNDX        SETA  0                                               00305200
.*******************************************************************    00305300
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00305400
.*******************************************************************    00305500
                  AIF   (&ZMACRET NE 0).ZLX2    ERROR DETECTED          00305600
.*******************************************************************    00305700
.***AE.01  START OF IARST64 MACRO CODE                                  00305800
.*******************************************************************    00305900
                  LCLC  &M0M0001                 NAME                   00306000
&M0M0001          SETC  '&XLABEL'                SET NAME               00306100
                  AIF   (K'&XLABEL NE 0).XLAB2                          00306200
&M0M0001          SETC  'M00M&SYSNDX'            DEFAULT NAME           00306300
.*                                                                      00306400
.XLAB2            ANOP  ,                                               00306500
&M0M0001 DS    0H                             IARST64-0                 00306600
.*******************************************************************    00306700
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00306800
.*******************************************************************    00306900
              PUSH  PRINT                                               00307000
                  AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON      00307100
                  PRINT OFF         ++ PR01                             00307200
                  AGO   .ZPRNTXX                                        00307300
.ZPRINTX          PRINT ON                                              00307400
.ZPRNTXX          ANOP  ,                                               00307500
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00307600
         LCLC  &T1                                                      00307700
         LCLB  &B(64)                                                   00307800
         AIF   ('&SYSAM64' EQ 'YES').AM64OK                        @L1A 00307900
&ZMS     SETC  'SYSSTATE AMODE64=YES MUST BE IN EFFECT'            @L1A 00308000
         MNOTE 8,'&ZMS'                                            @L1A 00308100
         POP   PRINT                                               @L1A 00308200
         MEXIT                                                     @L1A 00308300
.AM64OK  ANOP                                                      @L1A 00308400
         AIF   ('&REQUEST' NE 'GET').NOTGET                        @L1A 00308500
         AIF   ('&XR0VALUE' EQ 'NO_R0VALUE').GETR0VALUEOK          @L1A 00308600
&ZMS     SETC  'R0VALUE IS NOT ALLOWED WITH REQUEST=GET'           @L1A 00308700
         MNOTE 8,'&ZMS'                                            @L1A 00308800
         POP   PRINT                                               @L1A 00308900
         MEXIT                                                     @L1A 00309000
.GETR0VALUEOK ANOP                                                 @L1A 00309100
         AIF   ('&XR1VALUE' EQ 'NO_R1VALUE').GETR1VALUEOK          @L1A 00309200
&ZMS     SETC  'R1VALUE IS NOT ALLOWED WITH REQUEST=GET'           @L1A 00309300
         MNOTE 8,'&ZMS'                                            @L1A 00309400
         POP   PRINT                                               @L1A 00309500
         MEXIT                                                     @L1A 00309600
.GETR1VALUEOK ANOP                                                 @L1A 00309700
         AIF   ('&REGS' NE 'SAVE').GETNOSAVE                            00309800
         STMG  2,12,40(13)                                              00309900
.GETNOSAVE ANOP                                                         00310000
.* See IAXST64's ST64ParmOpts for a mapping of this area                00310100
&B(1)    SETB  0                                                        00310200
&B(2)    SETB  ('&XFPROT' EQ 'YES')                                     00310300
&B(3)    SETB  ('&XTYPE' EQ 'DREF')                                     00310400
&B(4)    SETB  ('&XTYPE' EQ 'FIXED')                                    00310500
&B(5)    SETB  ('&XFAILMODE' EQ 'RC')                                   00310600
&B(6)    SETB  ('&XCOMMON' EQ 'YES')                                    00310700
&B(7)    SETB  ('&XMEMLIMIT' EQ 'NO')                                   00310800
&B(8)    SETB  ('&XLocalSysArea' EQ 'YES')                              00310900
&B(9)    SETB  0                                                        00311000
&B(10)   SETB  0                                                        00311100
&B(11)   SETB  0                                                        00311200
&B(12)   SETB  ('&XCALLERKEY' EQ 'NO')                                  00311300
&B(13)   SETB  ('&XOWNER' EQ 'PRIMARY')                                 00311400
&B(14)   SETB  ('&XOWNER' EQ 'SECONDARY')                               00311500
&B(15)   SETB  ('&XOWNER' EQ 'SYSTEM')                                  00311600
&B(16)   SETB  ('&XOWNER' EQ 'BYASID')                                  00311700
&B(17)   SETB  ('&XOWNINGTASK' EQ 'MOTHER')                             00311800
&B(18)   SETB  ('&XOWNINGTASK' EQ 'IPT')                                00311900
&B(19)   SETB  ('&XOWNINGTASK' EQ 'JOBSTEP')                            00312000
&B(20)   SETB  ('&XOWNINGTASK' EQ 'CMRO')                               00312100
&B(21)   SETB  ('&XOWNINGTASK' EQ 'RCT')                                00312200
&B(22)   SETB  0                                                        00312300
&B(23)   SETB  0                                                        00312400
&B(24)   SETB  0                                                        00312500
&B(25)   SETB  ('&XSENSITIVE' EQ 'YES')                                 00312600
&B(26)   SETB  ('&XSENSITIVE' EQ 'NO')                                  00312700
&B(27)   SETB  0                                                        00312800
&B(28)   SETB  0                                                        00312900
&B(29)   SETB  0                                                        00313000
&B(30)   SETB  0                                                        00313100
&B(31)   SETB  0                                                        00313200
&B(32)   SETB  0                                                        00313300
         LGHI  0,0                                                      00313400
&T1      SETC  '&B(1)&B(2)&B(3)&B(4)&B(5)&B(6)&B(7)&B(8)'               00313500
&T1      SETC  '&T1&B(9)&B(10)&B(11)&B(12)&B(13)&B(14)&B(15)&B(16)'     00313600
         AIF   ('&T1' EQ '0000000000000000').NO1                        00313700
         OIHH  0,B'&T1.'                                                00313800
.NO1     ANOP                                                           00313900
&T1      SETC  '&B(17)&B(18)&B(19)&B(20)&B(21)&B(22)&B(23)&B(24)'       00314000
&T1    SETC  '&T1&B(25)&B(26)&B(27)&B(28)&B(29)&B(30)&B(31)&B(32)' @AGC 00314100
         AIF   ('&T1' EQ '0000000000000000').NO2                        00314200
         OIHL  0,B'&T1.'                                                00314300
.NO2     ANOP                                                           00314400
.* Reg 1: 00 !! Key !! ASID !! 00 !! Size                               00314500
         AIF   ('&XSIZE'(1,1) NE '(').GET1A                             00314600
&T1      SETC  '0&XSIZE'                                                00314700
         AGO   .GET1B                                                   00314800
.GET1A   ANOP                                                           00314900
&T1      SETC  '&XSIZE'                                                 00315000
.GET1B   ANOP                                                           00315100
         LLGF  1,&T1                                                    00315200
         AIF   ('&XOWNER' NE 'BYASID').NOTBYASID                        00315300
         AIF   ('&XOWNINGASID'(1,1) NE '(').BYASID1A                    00315400
         ICMH  1,B'0011',0&XOWNINGASID                                  00315500
         AGO   .BYASID1B                                                00315600
.BYASID1A ANOP                                                          00315700
         ICMH  1,B'0011',&XOWNINGASID                                   00315800
.BYASID1B ANOP                                                          00315900
.NOTBYASID ANOP                                                         00316000
         AIF   ('&XCALLERKEY' EQ 'YES').CALLERKEYYES                    00316100
         AIF   ('&XKEY00TOF0'(1,1) NE '(').KEY00TOF01A                  00316200
         ICMH  1,B'0100',0&XKEY00TOF0                                   00316300
         AGO   .KEY00TOF01B                                             00316400
.KEY00TOF01A ANOP                                                       00316500
         ICMH  1,B'0100',&XKEY00TOF0                                    00316600
.KEY00TOF01B ANOP                                                       00316700
.CALLERKEYYES ANOP                                                      00316800
         LG    14,x'7A8'(0,0)          Get XCVT address            @L1A 00316900
         LG    15,X'018'(14,0)         Get service address         @01C 00317000
         AIF   ('&SYSASCE' EQ 'P').NOTAR1                          @P1C 00317100
         SAC   0                                                        00317200
.NOTAR1  ANOP                                                      @L1A 00317300
         BASR  14,15                   Call service                @L1A 00317400
         AIF   ('&SYSASCE' EQ 'P').NOTAR2                          @P1C 00317500
         SAC   512                                                      00317600
.NOTAR2  ANOP                                                      @L1A 00317700
         AIF   ('&REGS' NE 'SAVE').GETNORESTORE                         00317800
         LMG   2,12,40(13)                                              00317900
.GETNORESTORE ANOP                                                      00318000
         AIF   ('&AREAADDR' EQ '').GET2C                                00318100
         AIF   ('&XAREAADDR'(1,1) NE '(').GET2A                         00318200
&T1      SETC  '0&XAREAADDR'                                            00318300
         AGO   .GET2B                                                   00318400
.GET2A   ANOP                                                           00318500
&T1      SETC  '&XAREAADDR'                                             00318600
.GET2B   ANOP                                                           00318700
         STG   1,&T1                                                    00318800
.GET2C   ANOP                                                           00318900
         AGO   .SAVERETRSN                                              00319000
.NOTGET  ANOP                                                      @L1A 00319100
         AIF   ('&REQUEST' NE 'FREE').NOTFREE                      @L1A 00319200
         AIF   ('&RETCODE' EQ '').FREERETCODEOK                    @L1A 00319300
&ZMS     SETC  'RETCODE IS NOT ALLOWED WITH REQUEST=FREE'          @L1A 00319400
         MNOTE 8,'&ZMS'                                            @L1A 00319500
         POP   PRINT                                               @L1A 00319600
         MEXIT                                                     @L1A 00319700
.FREERETCODEOK ANOP                                                @L1A 00319800
         AIF   ('&RSNCODE' EQ '').FREERSNCODEOK                    @L1A 00319900
&ZMS     SETC  'RSNCODE IS NOT ALLOWED WITH REQUEST=FREE'          @L1A 00320000
         MNOTE 8,'&ZMS'                                            @L1A 00320100
         POP   PRINT                                               @L1A 00320200
         MEXIT                                                     @L1A 00320300
.FREERSNCODEOK ANOP                                                @L1A 00320400
         AIF   ('&REGS' NE 'SAVE').FREENOSAVE                           00320500
         STMG  2,12,40(13)                                              00320600
.FREENOSAVE ANOP                                                        00320700
         AIF   ('&AREAADDR' EQ '').FREENOAREAADDR                       00320800
         AIF   ('&AREAADDR'(1,1) NE '(').FREE1A                         00320900
&T1      SETC  '0&XAREAADDR'                                            00321000
         AGO   .FREE1B                                                  00321100
.FREE1A  ANOP                                                           00321200
&T1      SETC  '&XAREAADDR'                                             00321300
.FREE1B  ANOP                                                           00321400
         LG    1,&T1                                                    00321500
.FREENOAREAADDR ANOP                                                    00321600
         AIF   ('&AREANAME' EQ '').FREENOAREANAME                       00321700
         AIF   ('&AREANAME'(1,1) NE '(').FREE2A                         00321800
         AIF   ('&AREANAME(1)' EQ '1').FREE2B                           00321900
         LGR   1,&AREANAME(1)                                           00322000
         AGO   .FREE2B                                                  00322100
.FREE2A  ANOP                                                           00322200
         LA    1,&XAREANAME                                             00322300
.FREE2B  ANOP                                                           00322400
.FREENOAREANAME ANOP                                                    00322500
         LG    14,x'7A8'(0,0)          Get XCVT address            @L1A 00322600
         LG    15,X'020'(14,0)         Get service address         @01C 00322700
         AIF   ('&SYSASCE' EQ 'P').NOTAR3                          @P1C 00322800
         SAC   0                                                        00322900
.NOTAR3  ANOP                                                      @L1A 00323000
         BASR  14,15                   Call service                @L1A 00323100
         AIF   ('&SYSASCE' EQ 'P').NOTAR4                          @P1C 00323200
         SAC   512                                                      00323300
.NOTAR4  ANOP                                                      @L1A 00323400
         AIF   ('&REGS' NE 'SAVE').FREENORESTORE                        00323500
         LMG   2,12,40(13)                                              00323600
.FREENORESTORE ANOP                                                     00323700
.SAVERETRSN ANOP                                                        00323800
         AIF   ('&RSNCODE' EQ '').SAVENORSN                             00323900
         AIF   ('&RSNCODE'(1,1) NE '(').SAVERSN1A                       00324000
         LR    &RSNCODE(1),0                                            00324100
         AGO   .SAVERSN1B                                               00324200
.SAVERSN1A ANOP                                                         00324300
         ST    0,&RSNCODE                                               00324400
.SAVERSN1B ANOP                                                         00324500
.SAVENORSN ANOP                                                         00324600
         AIF   ('&RETCODE' EQ '').SAVENORET                             00324700
         AIF   ('&RETCODE'(1,1) NE '(').SAVERET1A                       00324800
         LR    &RETCODE(1),15                                           00324900
         AGO   .SAVERET1B                                               00325000
.SAVERET1A ANOP                                                         00325100
         ST    15,&RETCODE                                              00325200
.SAVERET1B ANOP                                                         00325300
.SAVENORET ANOP                                                         00325400
         POP   PRINT                                               @L1A 00325500
         MEXIT                                                     @L1A 00325600
.NOTFREE ANOP                                                      @L1A 00325700
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00325800
.********************************************************************   00325900
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00326000
.********************************************************************   00326100
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00326200
                      LCLA  &ZOPN1         INVOCATION INDEX             00326300
                      LCLC  &ZOPL(4095)    LABEL                        00326400
                      LCLC  &ZOPO(4095)    OPERATION                    00326500
                      LCLC  &ZOPV(4095)    VALUE                        00326600
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00326700
.*                                                                      00326800
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00326900
.******************************************************************     00327000
.***AL.L04 IARST64 FMT=LIST PARAMETERS                                  00327100
.******************************************************************     00327200
&XMFCTRL              SETC  '#Z'.'&SYSNDX'.'A'                          00327300
&XMFATTR              SETC  '0D'                                        00327400
.*                                                                      00327500
&ZOPN                 SETA  &ZOPN+1                                     00327600
&ZOPL(&ZOPN)          SETC  ' '                                         00327700
                      AIF   (&SYSALVL NE 0).ZALVL4A                     00327800
&ZOPO(&ZOPN)          SETC  'B'                                         00327900
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.N'                                00328000
                      AGO   .ZALVL4B                                    00328100
.ZALVL4A              ANOP                                              00328200
&ZOPO(&ZOPN)          SETC  'CNOP'                                      00328300
&ZOPV(&ZOPN)          SETC  '4,8'                                       00328400
&ZOPN                 SETA  &ZOPN+1                                     00328500
&ZOPL(&ZOPN)          SETC  ' '                                         00328600
&ZOPO(&ZOPN)          SETC  'BRAS'                                      00328700
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.N'                              00328800
.ZALVL4B              ANOP                                              00328900
&ZOPD(&ZOPN)          SETC  '++ IARST64 ARG PARMS'                      00329000
.*-------------------------------------------------------------------   00329100
.***AM.L00  IARST64 FMT=LIST name                                       00329200
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00329300
&ZOPN                 SETA &ZOPN+1                                      00329400
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00329500
&ZOPO(&ZOPN)          SETC 'EQU'                                        00329600
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00329700
&ZOPD(&ZOPN)          SETC '++ IARST64 NAME'                            00329800
.ZLMFSL2M             ANOP  ,                                           00329900
.*-------------------------------------------------------------------   00330000
.***AM.L01  IARST64 FMT=LIST PARAMETERS                                 00330100
&ZOPN                 SETA &ZOPN+1                                      00330200
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00330300
&ZOPO(&ZOPN)          SETC 'DS'                                         00330400
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00330500
&ZOPD(&ZOPN)          SETC '++ IARST64 PARM LIST'                       00330600
.*-------------------------------------------------------------------   00330700
.***AM.L02 XVERSION XL1                                                 00330800
&ZOPN                 SETA &ZOPN+1                                      00330900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00331000
&ZOPO(&ZOPN)          SETC 'DS'                                         00331100
&ZOPV(&ZOPN)          SETC 'XL1'                                        00331200
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00331300
.*-------------------------------------------------------------------   00331400
.***AM.L03 XFLAGS1 BL.8                                                 00331500
&ZOPN                 SETA &ZOPN+1                                      00331600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFLAGS1'                          00331700
&ZOPO(&ZOPN)          SETC 'DS'                                         00331800
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00331900
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00332000
.*                                                                      00332100
&ZOPN                 SETA  &ZOPN+1                                     00332200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XCOMMON_YES'                     00332300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00332400
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00332500
&ZOPD(&ZOPN)          SETC  '++ XCOMMON.'                               00332600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00332700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00332800
.*                                                                      00332900
&ZOPN                 SETA  &ZOPN+1                                     00333000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XFPROT_YES'                      00333100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00333200
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00333300
&ZOPD(&ZOPN)          SETC  '++ XFPROT.'                                00333400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00333500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00333600
.*                                                                      00333700
&ZOPN                 SETA  &ZOPN+1                                     00333800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTYPE_DREF'                      00333900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00334000
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             00334100
&ZOPD(&ZOPN)          SETC  '++ XTYPE.'                                 00334200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DREF'                         00334300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00334400
.*                                                                      00334500
&ZOPN                 SETA  &ZOPN+1                                     00334600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTYPE_FIXED'                     00334700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00334800
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             00334900
&ZOPD(&ZOPN)          SETC  '++ XTYPE.'                                 00335000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).FIXED'                        00335100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00335200
.*                                                                      00335300
&ZOPN                 SETA  &ZOPN+1                                     00335400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XFAILMODE_RC'                    00335500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00335600
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             00335700
&ZOPD(&ZOPN)          SETC  '++ XFAILMODE.'                             00335800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).RC'                           00335900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00336000
.*-------------------------------------------------------------------   00336100
.***AM.L03 XFLAGS2 BL.8                                                 00336200
&ZOPN                 SETA &ZOPN+1                                      00336300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFLAGS2'                          00336400
&ZOPO(&ZOPN)          SETC 'DS'                                         00336500
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00336600
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00336700
.*                                                                      00336800
&ZOPN                 SETA  &ZOPN+1                                     00336900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XOWNER_PRIMARY'                  00337000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00337100
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             00337200
&ZOPD(&ZOPN)          SETC  '++ XOWNER.'                                00337300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).PRIMARY'                      00337400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00337500
.*                                                                      00337600
&ZOPN                 SETA  &ZOPN+1                                     00337700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XOWNER_SECONDARY'                00337800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00337900
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             00338000
&ZOPD(&ZOPN)          SETC  '++ XOWNER.'                                00338100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SECONDARY'                    00338200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00338300
.*                                                                      00338400
&ZOPN                 SETA  &ZOPN+1                                     00338500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XOWNER_HOME'                     00338600
&ZOPO(&ZOPN)          SETC  'EQU'                                       00338700
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             00338800
&ZOPD(&ZOPN)          SETC  '++ XOWNER.'                                00338900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).HOME'                         00339000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00339100
.*                                                                      00339200
&ZOPN                 SETA  &ZOPN+1                                     00339300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XOWNER_SYSTEM'                   00339400
&ZOPO(&ZOPN)          SETC  'EQU'                                       00339500
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             00339600
&ZOPD(&ZOPN)          SETC  '++ XOWNER.'                                00339700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SYSTEM'                       00339800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00339900
.*                                                                      00340000
&ZOPN                 SETA  &ZOPN+1                                     00340100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XOWNER_BYASID'                   00340200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00340300
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             00340400
&ZOPD(&ZOPN)          SETC  '++ XOWNER.'                                00340500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).BYASID'                       00340600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00340700
.*                                                                      00340800
&ZOPN                 SETA  &ZOPN+1                                     00340900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XCALLERKEY_NO'                   00341000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00341100
&ZOPV(&ZOPN)          SETC  'B''00000001'''                             00341200
&ZOPD(&ZOPN)          SETC  '++ XCALLERKEY.'                            00341300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).NO'                           00341400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00341500
.*-------------------------------------------------------------------   00341600
.***AM.L09  XFLAGS3 BL.8                                                00341700
&ZOPN                 SETA &ZOPN+1                                      00341800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFLAGS3'                          00341900
&ZOPO(&ZOPN)          SETC 'DS'                                         00342000
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00342100
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            00342200
.*-------------------------------------------------------------------   00342300
.***AM.L03 XOWNINGTASK BL.8                                             00342400
&ZOPN                 SETA &ZOPN+1                                      00342500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XOWNINGTASK'                      00342600
&ZOPO(&ZOPN)          SETC 'DS'                                         00342700
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00342800
&ZOPD(&ZOPN)          SETC '++ INPUT'                                   00342900
.*                                                                      00343000
&ZOPN                 SETA  &ZOPN+1                                     00343100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XOWNINGTASK_MOTHER'              00343200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00343300
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00343400
&ZOPD(&ZOPN)          SETC  '++ XOWNINGTASK.'                           00343500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).MOTHER'                       00343600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00343700
.*                                                                      00343800
&ZOPN                 SETA  &ZOPN+1                                     00343900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XOWNINGTASK_IPT'                 00344000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00344100
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00344200
&ZOPD(&ZOPN)          SETC  '++ XOWNINGTASK.'                           00344300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).IPT'                          00344400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00344500
.*                                                                      00344600
&ZOPN                 SETA  &ZOPN+1                                     00344700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XOWNINGTASK_JOBSTEP'             00344800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00344900
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             00345000
&ZOPD(&ZOPN)          SETC  '++ XOWNINGTASK.'                           00345100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).JOBSTEP'                      00345200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00345300
.*                                                                      00345400
&ZOPN                 SETA  &ZOPN+1                                     00345500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XOWNINGTASK_CMRO'                00345600
&ZOPO(&ZOPN)          SETC  'EQU'                                       00345700
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             00345800
&ZOPD(&ZOPN)          SETC  '++ XOWNINGTASK.'                           00345900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).CMRO'                         00346000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00346100
.*                                                                      00346200
&ZOPN                 SETA  &ZOPN+1                                     00346300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XOWNINGTASK_RCT'                 00346400
&ZOPO(&ZOPN)          SETC  'EQU'                                       00346500
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             00346600
&ZOPD(&ZOPN)          SETC  '++ XOWNINGTASK.'                           00346700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).RCT'                          00346800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00346900
.*-------------------------------------------------------------------   00347000
.***AM.L09  XRSV00001 CL2                                               00347100
&ZOPN                 SETA &ZOPN+1                                      00347200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV00001'                        00347300
&ZOPO(&ZOPN)          SETC 'DS'                                         00347400
&ZOPV(&ZOPN)          SETC 'CL2'                                        00347500
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00347600
.*-------------------------------------------------------------------   00347700
.***AM.L09  XKEY00TOF0 XL1                                              00347800
&ZOPN                 SETA &ZOPN+1                                      00347900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XKEY00TOF0'                       00348000
&ZOPO(&ZOPN)          SETC 'DS'                                         00348100
&ZOPV(&ZOPN)          SETC 'XL1'                                        00348200
&ZOPD(&ZOPN)          SETC '++ &ZXKEY00TOF0 '                           00348300
.*-------------------------------------------------------------------   00348400
.***AM.L09  XOWNINGASID XL2                                             00348500
&ZOPN                 SETA &ZOPN+1                                      00348600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XOWNINGASID'                      00348700
&ZOPO(&ZOPN)          SETC 'DS'                                         00348800
&ZOPV(&ZOPN)          SETC 'XL2'                                        00348900
&ZOPD(&ZOPN)          SETC '++ &ZXOWNINGASID '                          00349000
.*-------------------------------------------------------------------   00349100
.***AM.L09  XSIZE F                                                     00349200
&ZOPN                 SETA &ZOPN+1                                      00349300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSIZE'                            00349400
&ZOPO(&ZOPN)          SETC 'DS'                                         00349500
&ZOPV(&ZOPN)          SETC 'F'                                          00349600
&ZOPD(&ZOPN)          SETC '++ &ZXSIZE '                                00349700
.*-------------------------------------------------------------------   00349800
.***AM.L10 END OF IARST64 LIST PARAMETERS                               00349900
&ZOPN                 SETA &ZOPN+1                                      00350000
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00350100
&ZOPO(&ZOPN)          SETC 'EQU'                                        00350200
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00350300
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00350400
.*                                                                      00350500
&ZOPN                 SETA &ZOPN+1                                      00350600
&ZOPL(&ZOPN)          SETC ' '                                          00350700
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00350800
&ZOPV(&ZOPN)          SETC '1'                                          00350900
&ZOPD(&ZOPN)          SETC ' '                                          00351000
.*-------------------------------------------------------------------   00351100
.***AL.L05 IARST64 FMT=LIST PARAMETERS                                  00351200
&ZOPN                 SETA  &ZOPN+1                                     00351300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.N'                                00351400
&ZOPO(&ZOPN)          SETC  'DC'                                        00351500
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00351600
&ZOPD(&ZOPN)          SETC  '++ IARST64 ARG PARMS'                      00351700
.*                                                                      00351800
.*-------------------------------------------------------------------   00351900
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00352000
&ZPLLEN               SETA 14                                           00352100
.*                                                                      00352200
.******************************************************************     00352300
.***AI.L01 IARST64 FMT=LIST FILL IN PARAMETER AREA                      00352400
.******************************************************************     00352500
                      ACTR  10000                                       00352600
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00352700
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00352800
&ZCVAL                SETC  'LAE'          XAX MODE                     00352900
.ZIMFXA               ANOP ,                                            00353000
.*                                                                      00353100
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00353200
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00353300
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00353400
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00353500
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00353600
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00353700
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00353800
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00353900
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00354000
&ZOPN                 SETA  &ZOPN+1                                     00354100
&ZOPL(&ZOPN)          SETC  ' '                                         00354200
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00354300
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00354400
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00354500
                      AGO   .ZIMFNX                                     00354600
.*                                                                      00354700
.ZIMFN2               ANOP ,                                            00354800
                      AIF   (&SYSALVL EQ 0).ZIMFNX1                     00354900
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     00355000
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  00355100
&ZOPN                 SETA  &ZOPN+1                                     00355200
&ZOPL(&ZOPN)          SETC  ' '                                         00355300
&ZOPO(&ZOPN)          SETC  'LAE'                                       00355400
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  00355500
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00355600
                      AGO   .ZIMFNX                                     00355700
.ZIMFNX1              ANOP ,                                            00355800
&ZOPN                 SETA  &ZOPN+1                                     00355900
&ZOPL(&ZOPN)          SETC  ' '                                         00356000
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00356100
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00356200
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00356300
.ZIMFNX               ANOP ,                                            00356400
.*                                                                      00356500
&ZOPN                 SETA  &ZOPN+1                                     00356600
&ZOPL(&ZOPN)          SETC  ' '                                         00356700
&ZOPO(&ZOPN)          SETC  'XC'                                        00356800
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00356900
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00357000
.ZIMFLX               ANOP  ,                                           00357100
.*-------------------------------------------------------------------   00357200
.***AI.L05 XFLAGS1 BL1                                                  00357300
&ZW                   SETC  ''                                          00357400
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00357500
.*-------------------------------------------------------------------   00357600
.***AI.L08 XFLAGS1 "YES"                                                00357700
.***      BL1'1XXXXXXX'                                                 00357800
         AIF   ('&XCOMMON' NE 'YES').ZI3A                               00357900
&ZW                   SETC  '&ZW.1'                                     00358000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00358100
                      AGO   .ZI3C                                       00358200
.*                                                                      00358300
.ZI3A                 ANOP  ,                                           00358400
&ZW                   SETC  '&ZW.0'                                     00358500
.ZI3C                 ANOP  ,                                           00358600
.*-------------------------------------------------------------------   00358700
.***AI.L08 XFLAGS1 "YES"                                                00358800
.***      BL1'X1XXXXXX'                                                 00358900
         AIF   ('&XFPROT' NE 'YES').ZI4A                                00359000
&ZW                   SETC  '&ZW.1'                                     00359100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00359200
                      AGO   .ZI4C                                       00359300
.*                                                                      00359400
.ZI4A                 ANOP  ,                                           00359500
&ZW                   SETC  '&ZW.0'                                     00359600
.ZI4C                 ANOP  ,                                           00359700
.*-------------------------------------------------------------------   00359800
.***AI.L08 XFLAGS1 "DREF"                                               00359900
.***      BL1'XX1XXXXX'                                                 00360000
         AIF   ('&XTYPE' NE 'DREF').ZI5A                                00360100
&ZW                   SETC  '&ZW.1'                                     00360200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00360300
                      AGO   .ZI5C                                       00360400
.*                                                                      00360500
.ZI5A                 ANOP  ,                                           00360600
&ZW                   SETC  '&ZW.0'                                     00360700
.ZI5C                 ANOP  ,                                           00360800
.*-------------------------------------------------------------------   00360900
.***AI.L08 XFLAGS1 "FIXED"                                              00361000
.***      BL1'XXX1XXXX'                                                 00361100
         AIF   ('&XTYPE' NE 'FIXED').ZI6A                               00361200
&ZW                   SETC  '&ZW.1'                                     00361300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00361400
                      AGO   .ZI6C                                       00361500
.*                                                                      00361600
.ZI6A                 ANOP  ,                                           00361700
&ZW                   SETC  '&ZW.0'                                     00361800
.ZI6C                 ANOP  ,                                           00361900
.*-------------------------------------------------------------------   00362000
.***AI.L08 XFLAGS1 "RC"                                                 00362100
.***      BL1'XXXXX1XX'                                                 00362200
         AIF   ('&XFAILMODE' NE 'RC').ZI7A                              00362300
&ZW                   SETC  '&ZW.0100'                                  00362400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00362500
                      AGO   .ZI7C                                       00362600
.*                                                                      00362700
.ZI7A                 ANOP  ,                                           00362800
&ZW                   SETC  '&ZW.0000'                                  00362900
.ZI7C                 ANOP  ,                                           00363000
.*-------------------------------------------------------------------   00363100
.***AI.L11 XFLAGS1 BL1                                                  00363200
                      AIF   ('&ZCLNG' NE 'YES').ZI7E  ALL ZERO BITS     00363300
&ZOPN                 SETA  &ZOPN+1                                     00363400
&ZOPL(&ZOPN)          SETC  ' '                                         00363500
&ZOPO(&ZOPN)          SETC  'OI'                                        00363600
&ZOPV(&ZOPN)          SETC  '1(1),B''&ZW'''                             00363700
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00363800
.ZI7E                 ANOP  ,                                           00363900
.*-------------------------------------------------------------------   00364000
.***AI.L05 XFLAGS2 BL1                                                  00364100
&ZW                   SETC  ''                                          00364200
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00364300
.*-------------------------------------------------------------------   00364400
.***AI.L08 XFLAGS2 "PRIMARY"                                            00364500
.***      BL1'XX1XXXXX'                                                 00364600
         AIF   ('&XOWNER' NE 'PRIMARY').ZI9A                            00364700
&ZW                   SETC  '&ZW.001'                                   00364800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00364900
                      AGO   .ZI9C                                       00365000
.*                                                                      00365100
.ZI9A                 ANOP  ,                                           00365200
&ZW                   SETC  '&ZW.000'                                   00365300
.ZI9C                 ANOP  ,                                           00365400
.*-------------------------------------------------------------------   00365500
.***AI.L08 XFLAGS2 "SECONDARY"                                          00365600
.***      BL1'XXX1XXXX'                                                 00365700
         AIF   ('&XOWNER' NE 'SECONDARY').ZI10A                         00365800
&ZW                   SETC  '&ZW.1'                                     00365900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00366000
                      AGO   .ZI10C                                      00366100
.*                                                                      00366200
.ZI10A                ANOP  ,                                           00366300
&ZW                   SETC  '&ZW.0'                                     00366400
.ZI10C                ANOP  ,                                           00366500
.*-------------------------------------------------------------------   00366600
.***AI.L08 XFLAGS2 "HOME"                                               00366700
.***      BL1'XXXX1XXX'                                                 00366800
         AIF   ('&XOWNER' NE 'HOME').ZI11A                              00366900
&ZW                   SETC  '&ZW.1'                                     00367000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00367100
                      AGO   .ZI11C                                      00367200
.*                                                                      00367300
.ZI11A                ANOP  ,                                           00367400
&ZW                   SETC  '&ZW.0'                                     00367500
.ZI11C                ANOP  ,                                           00367600
.*-------------------------------------------------------------------   00367700
.***AI.L08 XFLAGS2 "SYSTEM"                                             00367800
.***      BL1'XXXXX1XX'                                                 00367900
         AIF   ('&XOWNER' NE 'SYSTEM').ZI12A                            00368000
&ZW                   SETC  '&ZW.1'                                     00368100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00368200
                      AGO   .ZI12C                                      00368300
.*                                                                      00368400
.ZI12A                ANOP  ,                                           00368500
&ZW                   SETC  '&ZW.0'                                     00368600
.ZI12C                ANOP  ,                                           00368700
.*-------------------------------------------------------------------   00368800
.***AI.L08 XFLAGS2 "BYASID"                                             00368900
.***      BL1'XXXXXX1X'                                                 00369000
         AIF   ('&XOWNER' NE 'BYASID').ZI13A                            00369100
&ZW                   SETC  '&ZW.1'                                     00369200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00369300
                      AGO   .ZI13C                                      00369400
.*                                                                      00369500
.ZI13A                ANOP  ,                                           00369600
&ZW                   SETC  '&ZW.0'                                     00369700
.ZI13C                ANOP  ,                                           00369800
.*-------------------------------------------------------------------   00369900
.***AI.L08 XFLAGS2 "NO"                                                 00370000
.***      BL1'XXXXXXX1'                                                 00370100
         AIF   ('&XCALLERKEY' NE 'NO').ZI14A                            00370200
&ZW                   SETC  '&ZW.1'                                     00370300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00370400
                      AGO   .ZI14C                                      00370500
.*                                                                      00370600
.ZI14A                ANOP  ,                                           00370700
&ZW                   SETC  '&ZW.0'                                     00370800
.ZI14C                ANOP  ,                                           00370900
.*-------------------------------------------------------------------   00371000
.***AI.L11 XFLAGS2 BL1                                                  00371100
                      AIF   ('&ZCLNG' NE 'YES').ZI14E  ALL ZERO BITS    00371200
&ZOPN                 SETA  &ZOPN+1                                     00371300
&ZOPL(&ZOPN)          SETC  ' '                                         00371400
&ZOPO(&ZOPN)          SETC  'OI'                                        00371500
&ZOPV(&ZOPN)          SETC  '2(1),B''&ZW'''                             00371600
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00371700
.ZI14E                ANOP  ,                                           00371800
.*-------------------------------------------------------------------   00371900
.***AI.L05 XOWNINGTASK BL1                                              00372000
&ZW                   SETC  ''                                          00372100
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00372200
.*-------------------------------------------------------------------   00372300
.***AI.L08 XOWNINGTASK "MOTHER"                                         00372400
.***      BL1'1XXXXXXX'                                                 00372500
         AIF   ('&XOWNINGTASK' NE 'MOTHER').ZI17A                       00372600
&ZW                   SETC  '&ZW.1'                                     00372700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00372800
                      AGO   .ZI17C                                      00372900
.*                                                                      00373000
.ZI17A                ANOP  ,                                           00373100
&ZW                   SETC  '&ZW.0'                                     00373200
.ZI17C                ANOP  ,                                           00373300
.*-------------------------------------------------------------------   00373400
.***AI.L08 XOWNINGTASK "IPT"                                            00373500
.***      BL1'X1XXXXXX'                                                 00373600
         AIF   ('&XOWNINGTASK' NE 'IPT').ZI18A                          00373700
&ZW                   SETC  '&ZW.1'                                     00373800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00373900
                      AGO   .ZI18C                                      00374000
.*                                                                      00374100
.ZI18A                ANOP  ,                                           00374200
&ZW                   SETC  '&ZW.0'                                     00374300
.ZI18C                ANOP  ,                                           00374400
.*-------------------------------------------------------------------   00374500
.***AI.L08 XOWNINGTASK "JOBSTEP"                                        00374600
.***      BL1'XX1XXXXX'                                                 00374700
         AIF   ('&XOWNINGTASK' NE 'JOBSTEP').ZI19A                      00374800
&ZW                   SETC  '&ZW.1'                                     00374900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00375000
                      AGO   .ZI19C                                      00375100
.*                                                                      00375200
.ZI19A                ANOP  ,                                           00375300
&ZW                   SETC  '&ZW.0'                                     00375400
.ZI19C                ANOP  ,                                           00375500
.*-------------------------------------------------------------------   00375600
.***AI.L08 XOWNINGTASK "CMRO"                                           00375700
.***      BL1'XXX1XXXX'                                                 00375800
         AIF   ('&XOWNINGTASK' NE 'CMRO').ZI20A                         00375900
&ZW                   SETC  '&ZW.1'                                     00376000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00376100
                      AGO   .ZI20C                                      00376200
.*                                                                      00376300
.ZI20A                ANOP  ,                                           00376400
&ZW                   SETC  '&ZW.0'                                     00376500
.ZI20C                ANOP  ,                                           00376600
.*-------------------------------------------------------------------   00376700
.***AI.L08 XOWNINGTASK "RCT"                                            00376800
.***      BL1'XXXX1XXX'                                                 00376900
         AIF   ('&XOWNINGTASK' NE 'RCT').ZI21A                          00377000
&ZW                   SETC  '&ZW.1000'                                  00377100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00377200
                      AGO   .ZI21C                                      00377300
.*                                                                      00377400
.ZI21A                ANOP  ,                                           00377500
&ZW                   SETC  '&ZW.0000'                                  00377600
.ZI21C                ANOP  ,                                           00377700
.*-------------------------------------------------------------------   00377800
.***AI.L11 XOWNINGTASK BL1                                              00377900
                      AIF   ('&ZCLNG' NE 'YES').ZI21E  ALL ZERO BITS    00378000
&ZOPN                 SETA  &ZOPN+1                                     00378100
&ZOPL(&ZOPN)          SETC  ' '                                         00378200
&ZOPO(&ZOPN)          SETC  'OI'                                        00378300
&ZOPV(&ZOPN)          SETC  '4(1),B''&ZW'''                             00378400
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00378500
.ZI21E                ANOP  ,                                           00378600
.*-------------------------------------------------------------------   00378700
.***AI.L25  XKEY00TOF0 XL1                                              00378800
                      AIF   ('&ZXKEY00TOF0' EQ '').ZI23E                00378900
                      AIF   ('&ZXKEY00TOF0' EQ 'OUTPUT').ZI23E          00379000
&ZCGPR                SETC  '&XKEY00TOF0'                               00379100
.*                                                                      00379200
                      AIF   ('&XKEY00TOF0'(1,1) NE '(').ZI23B           00379300
&ZCGPR   SETC  '0('.'&XKEY00TOF0'(2,K'&XKEY00TOF0-2).')'                00379400
                      AGO   .ZI23D                                      00379500
.ZI23B                ANOP  ,                                           00379600
.*                                                                      00379700
&ZC                   SETC  '&XKEY00TOF0'(1,1)                          00379800
                      AIF   (T'&ZC NE 'N').ZI23D                        00379900
&ZC                   SETC  '&XKEY00TOF0'                               00380000
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI23D               00380100
&ZCGPR                SETC  '=AL1(&XKEY00TOF0)'                         00380200
.*                                                                      00380300
.ZI23D                ANOP  ,                                           00380400
.*                                                                      00380500
&ZOPN                 SETA  &ZOPN+1                                     00380600
&ZOPL(&ZOPN)          SETC  ' '                                         00380700
&ZOPO(&ZOPN)          SETC  'MVC'                                       00380800
&ZOPV(&ZOPN)          SETC  '7(1,1),&ZCGPR'                             00380900
&ZOPD(&ZOPN)          SETC  '++ &ZXKEY00TOF0 XKEY00TOF0'                00381000
.*                                                                      00381100
.ZI23E                ANOP  ,                                           00381200
.*-------------------------------------------------------------------   00381300
.***AI.L25  XOWNINGASID XL2                                             00381400
                      AIF   ('&ZXOWNINGASID' EQ '').ZI24E               00381500
                      AIF   ('&ZXOWNINGASID' EQ 'OUTPUT').ZI24E         00381600
&ZCGPR                SETC  '&XOWNINGASID'                              00381700
.*                                                                      00381800
                      AIF   ('&XOWNINGASID'(1,1) NE '(').ZI24B          00381900
&ZCGPR   SETC  '0('.'&XOWNINGASID'(2,K'&XOWNINGASID-2).')'              00382000
                      AGO   .ZI24D                                      00382100
.ZI24B                ANOP  ,                                           00382200
.*                                                                      00382300
&ZC                   SETC  '&XOWNINGASID'(1,1)                         00382400
                      AIF   (T'&ZC NE 'N').ZI24D                        00382500
&ZC                   SETC  '&XOWNINGASID'                              00382600
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI24D               00382700
&ZCGPR                SETC  '=FL2''&XOWNINGASID'''                      00382800
.*                                                                      00382900
.ZI24D                ANOP  ,                                           00383000
.*                                                                      00383100
&ZOPN                 SETA  &ZOPN+1                                     00383200
&ZOPL(&ZOPN)          SETC  ' '                                         00383300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00383400
&ZOPV(&ZOPN)          SETC  '8(2,1),&ZCGPR'                             00383500
&ZOPD(&ZOPN)          SETC  '++ &ZXOWNINGASID XOWNINGASID'              00383600
.*                                                                      00383700
.ZI24E                ANOP  ,                                           00383800
.*-------------------------------------------------------------------   00383900
.***AI.L25  XSIZE F                                                     00384000
                      AIF   ('&ZXSIZE' EQ '').ZI25E                     00384100
                      AIF   ('&ZXSIZE' EQ 'OUTPUT').ZI25E               00384200
&ZCGPR                SETC  '&XSIZE'                                    00384300
.*                                                                      00384400
                      AIF   ('&XSIZE'(1,1) NE '(').ZI25B                00384500
&ZCGPR   SETC  '0('.'&XSIZE'(2,K'&XSIZE-2).')'                          00384600
                      AGO   .ZI25D                                      00384700
.ZI25B                ANOP  ,                                           00384800
.*                                                                      00384900
&ZC                   SETC  '&XSIZE'(1,1)                               00385000
                      AIF   (T'&ZC NE 'N').ZI25D                        00385100
&ZC                   SETC  '&XSIZE'                                    00385200
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI25D               00385300
&ZCGPR                SETC  '=FL4''&XSIZE'''                            00385400
.*                                                                      00385500
.ZI25D                ANOP  ,                                           00385600
.*                                                                      00385700
&ZOPN                 SETA  &ZOPN+1                                     00385800
&ZOPL(&ZOPN)          SETC  ' '                                         00385900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00386000
&ZOPV(&ZOPN)          SETC  '10(4,1),&ZCGPR'                            00386100
&ZOPD(&ZOPN)          SETC  '++ &ZXSIZE XSIZE'                          00386200
.*                                                                      00386300
.ZI25E                ANOP  ,                                           00386400
.*-------------------------------------------------------------------   00386500
&ZOPN1                SETA &ZOPN                                        00386600
.*******************************************************************    00386700
.***  PROCESS IARST64 OUTPUT PARAMETERS                                 00386800
.*******************************************************************    00386900
                      ACTR  10000                                       00387000
.*******************************************************************    00387100
.***AO.X02  RETURN CODE PROCESSING                                      00387200
.*******************************************************************    00387300
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00387400
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00387500
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00387600
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00387700
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00387800
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00387900
&ZOPN                 SETA  &ZOPN+1                                     00388000
&ZOPL(&ZOPN)          SETC  ' '                                         00388100
&ZOPO(&ZOPN)          SETC  'ST'                                        00388200
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00388300
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00388400
                      AGO   .ZMRETX                                     00388500
.*                                                                      00388600
.ZMRET2               ANOP  ,                                           00388700
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00388800
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00388900
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00389000
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00389100
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00389200
&ZOPN                 SETA  &ZOPN+1                                     00389300
&ZOPL(&ZOPN)          SETC  ' '                                         00389400
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00389500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00389600
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00389700
.ZMRETX               ANOP  ,                                           00389800
.*******************************************************************    00389900
.***AO.X03  REASON CODE PROCESSING                                      00390000
.*******************************************************************    00390100
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00390200
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00390300
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00390400
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00390500
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00390600
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00390700
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00390800
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00390900
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00391000
&ZOPN                 SETA  &ZOPN+1                                     00391100
&ZOPL(&ZOPN)          SETC  ' '                                         00391200
&ZOPO(&ZOPN)          SETC  'ST'                                        00391300
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00391400
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00391500
                      AGO   .ZMRSNX                                     00391600
.*                                                                      00391700
.ZMRSN2               ANOP  ,                                           00391800
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00391900
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00392000
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00392100
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00392200
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00392300
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00392400
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00392500
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00392600
&ZOPN                 SETA  &ZOPN+1                                     00392700
&ZOPL(&ZOPN)          SETC  ' '                                         00392800
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00392900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00393000
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00393100
.ZMRSNX               ANOP  ,                                           00393200
.*******************************************************************    00393300
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00393400
.*******************************************************************    00393500
                      ACTR  10000                                       00393600
.*                                                                      00393700
                      LCLA  &ZLC           COLUMN POSITION              00393800
                      LCLA  &ZOPX          LIST TABLE INDEX             00393900
                      LCLC  &ZLL           LABEL                        00394000
                      LCLC  &ZLOP          OPERATION                    00394100
                      LCLC  &ZLV           VALUE                        00394200
                      LCLC  &ZLD           DESCRIPTION                  00394300
.*                                                                      00394400
&ZOPX                 SETA  1                                           00394500
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00394600
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00394700
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00394800
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00394900
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00395000
                      AIF   (K'&ZLD LE 0).ZL5                           00395100
&ZLC                  SETA  35             COMMENT COLUMN               00395200
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00395300
&ZLC                  SETA  33             COMMMENT COLUMN              00395400
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00395500
&ZLV                  SETC  '&ZLV'.' '                                  00395600
                      AGO   .ZL3                                        00395700
.*                                                                      00395800
.ZL4                  ANOP  ,                                           00395900
&ZLV                  SETC  '&ZLV'.' '                                  00396000
.ZL5                  ANOP  ,                                           00396100
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00396200
.*                                                                      00396300
&ZLL     &ZLOP &ZLV                                                     00396400
.*                                                                      00396500
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00396600
                      AGO   .ZL2           CONTINUE LOOPING             00396700
.*                                                                      00396800
.ZLX                  ANOP  ,                                           00396900
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00397000
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00397100
.*******************************************************************    00397200
.***AP.X01  FORMAT GENERATED CODE                                       00397300
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00397400
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00397500
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00397600
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00397700
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00397800
                      AIF   (K'&ZLD LE 0).ZL51                          00397900
&ZLC                  SETA  35             COMMENT COLUMN               00398000
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00398100
&ZLC                  SETA  33             COMMENT COLUMN               00398200
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00398300
&ZLV                  SETC  '&ZLV'.' '                                  00398400
                      AGO   .ZL31                                       00398500
.*                                                                      00398600
.ZL41                 ANOP  ,                                           00398700
&ZLV                  SETC  '&ZLV'.' '                                  00398800
.ZL51                 ANOP  ,                                           00398900
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00399000
.*                                                                      00399100
&ZLL     &ZLOP &ZLV                                                     00399200
.*                                                                      00399300
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00399400
                      AGO   .ZL21          CONTINUE LOOPING             00399500
.*                                                                      00399600
.ZLX1                 ANOP  ,                                           00399700
.*******************************************************************    00399800
.***AP.X02  END OF IARST64 MACRO                                        00399900
&ZIARST64             SETC  'YES'          SET IARST64 USED             00400000
         POP   PRINT                                                    00400100
*                                            IARST64-0                  00400200
         SPACE 1                                                        00400300
.ZLX2                 ANOP  ,                                           00400400
         MEND                                                           00400500
**********************************************************************/ 00400600
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00400700
*%IARST64: MACRO KEYS(REQUEST,SIZE,AREAADDR,SENSITIVE,COMMON,           00400800
*                 OWNINGTASK,MEMLIMIT,LOCALSYSAREA,OWNER,OWNINGASID,    00400900
*                 FPROT,TYPE,CALLERKEY,KEY00TOF0,R0VALUE,R1VALUE,       00401000
*                 FAILMODE,REGS,AREANAME,RETCODE,RSNCODE);              00401100
*  ANS('?'!!MACLABEL!!' '!!'IARST64P '!!MACLIST!!                       00401200
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              00401300
*%END IARST64;                                                          00401400
