*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IWM4CON                               -04/05/08-<1> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  WLM Connect service                           * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5694-A01 COPYRIGHT IBM CORP. 2004, 2009                         * 00001200
*                                                                     * 00001300
* STATUS= HBB7760                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      The purpose of this service is to connect a calling address    * 00002100
*      space to WLM.  This service returns a token which is needed to * 00002200
*      invoke other services.  This service can be used to:           * 00002300
*                                                                     * 00002400
*                                                                     * 00002500
*      o   Request that WLM Work Management services be available to  * 00002600
*          the connecting address space and optionally to pass        * 00002700
*          topology information to WLM.                               * 00002800
*                                                                     * 00002900
*      o   Request that WLM Work Queuing services be available to the * 00003000
*          connecting address space.                                  * 00003100
*                                                                     * 00003200
*      o   Request that WLM Work Execution services be available to   * 00003300
*          the connecting address space.                              * 00003400
*                                                                     * 00003500
*      o   Request that WLM Work Balancing services be available to   * 00003600
*          the connecting address space.                              * 00003700
*                                                                     * 00003800
*      o   Request that WLM export and import services be available   * 00003900
*          to the connecting address space.                           * 00004000
*                                                                     * 00004100
*                                                                     * 00004200
*      Note that:                                                     * 00004300
*                                                                     * 00004400
*                                                                     * 00004500
*      o   The space which is connected is the current home address   * 00004600
*          space.                                                     * 00004700
*                                                                     * 00004800
*      o   Only a single connection is allowed to be active for a     * 00004900
*          given address space at any given time.                     * 00005000
*                                                                     * 00005100
*      o   For each connected task/space, WLM will establish a        * 00005200
*          dynamic resource manager (RESMGR) to be associated with    * 00005300
*          the current task/space.  When it receives control, it will * 00005400
*          free any accumulated resources and delete any enclaves     * 00005500
*          associated with the connect token.  This implies that the  * 00005600
*          resource manager will logically perform the disconnect     * 00005700
*          function and the connect token can no longer be passed to  * 00005800
*          WLM services.                                              * 00005900
*                                                                     * 00006000
*                                                                     * 00006100
*                                                                     * 00006200
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00006300
*                                                                     * 00006400
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00006500
*                                                                     * 00006600
*01* ENVIRONMENT:                                                     * 00006700
*                                                                     * 00006800
*                                                                     * 00006900
*      Minimum authorization: For WORK_MANAGER=YES, ROUTER=YES,       * 00007000
*                        QUEUE_MANAGER=YES, or EXPTIMPT=YES,          * 00007100
*                        supervisor state or program key mask (PKM)   * 00007200
*                        allowing keys 0-7.                           * 00007300
*                                                                     * 00007400
*                        For SERVER_MANAGER=YES, problem state with   * 00007500
*                        any PSW key.                                 * 00007600
*                                                                     * 00007700
*      Dispatchable unit mode: Task mode.                             * 00007800
*                                                                     * 00007900
*      Cross Memory Mode: Non-XMEM when input key is a user key or    * 00008000
*                        SERVER_MANAGER = YES, otherwise XMEM, any    * 00008100
*                        P,S,H.                                       * 00008200
*                                                                     * 00008300
*      AMODE:            31- or 64-bit.  If in 64-Bit addressing      * 00008400
*                        mode, code SYSSTATE AMODE64=YES before       * 00008500
*                        invoking this macro.                         * 00008600
*                                                                     * 00008700
*      ASC mode:         Primary.                                     * 00008800
*                                                                     * 00008900
*      Interrupt status: Enabled for I/O and external interrupts.     * 00009000
*                                                                     * 00009100
*      Locks:            No locks held.                               * 00009200
*                                                                     * 00009300
*      Control parameters: Control parameters must be in the primary  * 00009400
*                        address space.                               * 00009500
*                                                                     * 00009600
*                                                                     * 00009700
*                                                                     * 00009800
*01* PROGRAMMING REQUIREMENTS:                                        * 00009900
*                                                                     * 00010000
*                                                                     * 00010100
*    1.  Make sure no EUT FRRs are established.                       * 00010200
*                                                                     * 00010300
*    2.  The macro CVT must be included to use this macro.            * 00010400
*                                                                     * 00010500
*    3.  The macro IWMYCON must be included to use this macro.        * 00010600
*                                                                     * 00010700
*    4.  The macro IWMPB must be in the library concatenation, since  * 00010800
*        it is included by IWMYCON.                                   * 00010900
*                                                                     * 00011000
*    5.  Note that the high order halfword of register 0, and the     * 00011100
*        reason code variable when specified, may be non-zero and     * 00011200
*        represents diagnostic data which is NOT part of the external * 00011300
*        interface.  The high order halfword should thus be excluded  * 00011400
*        from comparison with the reason code values described above. * 00011500
*        The constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may  * 00011600
*        be used for this purpose.                                    * 00011700
*                                                                     * 00011800
*    6.  All character data, unless otherwise specified, is assumed   * 00011900
*        to be left justified and padded with blanks on the right, as * 00012000
*        needed, to occupy the specified number of bytes.             * 00012100
*                                                                     * 00012200
*                                                                     * 00012300
*                                                                     * 00012400
*01* RESTRICTIONS:                                                    * 00012500
*                                                                     * 00012600
*                                                                     * 00012700
*    1.  The PL/AS version of the macro needs the EPILOG macro to be  * 00012800
*        included.                                                    * 00012900
*                                                                     * 00013000
*    2.  This macro may not be used prior to the completion of WLM    * 00013100
*        address space initialization.                                * 00013200
*                                                                     * 00013300
*    3.  This macro may only be used on MVS/ESA (version 3 or         * 00013400
*        higher), NOT versions 1 or 2 of MVS.                         * 00013500
*                                                                     * 00013600
*    4.  This macro may not be used during task/address space         * 00013700
*        termination.                                                 * 00013800
*                                                                     * 00013900
*    5.  Only a single connection is allowed to be active for a given * 00014000
*        address space at any given time.                             * 00014100
*                                                                     * 00014200
*    6.  Specification of both Queue_Manager=Yes, and                 * 00014300
*        Server_Manager=Yes requires that Server_Type=Queue.          * 00014400
*        Specification of Server_Type=Routing is rejected.            * 00014500
*                                                                     * 00014600
*    7.  Specification of both Router=Yes, and Server_Manager=Yes     * 00014700
*        requires that Server_Type=Routing.  Specification of         * 00014800
*        Server_Type=Queue is rejected.                               * 00014900
*                                                                     * 00015000
*    8.  If the callers recovery routine should get control as a      * 00015100
*        result of requesting this service, the function cannot be    * 00015200
*        guaranteed to be complete.  It is possible that a token has  * 00015300
*        been saved in the parameter list where the connect token     * 00015400
*        would reside upon successful completion.  This token may be  * 00015500
*        passed to IWM4DIS to prevent the address space from being    * 00015600
*        disabled from future IWM4CON requests, but the token should  * 00015700
*        not be used for other services.  IWM4DIS in these            * 00015800
*        circumstances may give a warning return code indicating that * 00015900
*        no connection was established, however.                      * 00016000
*                                                                     * 00016100
*    9.  If the key specified on IWM4CON is a user key (8-F) or       * 00016200
*        SERVER_MANAGER=YES was specified, then the caller must be in * 00016300
*        non-cross-memory mode (P=S=H)                                * 00016400
*                                                                     * 00016500
*    10. While not a restriction for IWM4CON, it should be noted that * 00016600
*        when the key specified is a user key (8-F), the connect      * 00016700
*        token may only be passed to IWMCLSFY, IWMRPT, or IWMMNTFY    * 00016800
*        services, when the current primary matches primary at the    * 00016900
*        time IWM4CON is invoked.                                     * 00017000
*                                                                     * 00017100
*                                                                     * 00017200
*                                                                     * 00017300
*01* INPUT REGISTER INFORMATION:                                      * 00017400
*                                                                     * 00017500
*    Before issuing the IWM4CON macro, the caller does not have to    * 00017600
*    place any information into any register unless using it in       * 00017700
*    register notation for a particular parameter, or using it as a   * 00017800
*    base register.                                                   * 00017900
*                                                                     * 00018000
*01* OUTPUT REGISTER INFORMATION:                                     * 00018100
*                                                                     * 00018200
*    When control returns to the caller, the GPRs contain:            * 00018300
*                                                                     * 00018400
*                                                                     * 00018500
*    REGISTER  CONTENTS                                               * 00018600
*                                                                     * 00018700
*    0         Reason code if GR15 return code is non-zero            * 00018800
*                                                                     * 00018900
*    1         Used as work registers by the system                   * 00019000
*                                                                     * 00019100
*    2-13      Unchanged                                              * 00019200
*                                                                     * 00019300
*    14        Used as work registers by the system                   * 00019400
*                                                                     * 00019500
*    15        Return code                                            * 00019600
*                                                                     * 00019700
*                                                                     * 00019800
*                                                                     * 00019900
*    When control returns to the caller, the ARs contain:             * 00020000
*                                                                     * 00020100
*                                                                     * 00020200
*    REGISTER  CONTENTS                                               * 00020300
*                                                                     * 00020400
*    0-1       Used as work registers by the system                   * 00020500
*                                                                     * 00020600
*    2-13      Unchanged                                              * 00020700
*                                                                     * 00020800
*    14-15     Used as work registers by the system                   * 00020900
*                                                                     * 00021000
*                                                                     * 00021100
*                                                                     * 00021200
*    Some callers depend on register contents remaining the same      * 00021300
*    before and after issuing a service.  If the system changes the   * 00021400
*    contents of registers on which the caller depends, the caller    * 00021500
*    must save them before issuing the service, and restore them      * 00021600
*    after the system returns control.                                * 00021700
*                                                                     * 00021800
*01* PERFORMANCE IMPLICATIONS:                                        * 00021900
*                                                                     * 00022000
*    None                                                             * 00022100
*                                                                     * 00022200
*01* SYNTAX:                                                          * 00022300
*                                                                     * 00022400
*Ýxlabel¨  IWM4CON  ÐÝ WORK_MANAGER=YES                               * 00022500
*                   !    Ý,TOPOLOGY=»xtopology!NO_TOPOLOGYº           * 00022600
*                   !         ,NUMBERASCB=xnumberascb¨                * 00022700
*                   !   ÐÝ,EWLM=NO¨                                   * 00022800
*                   !   ¿Ý,EWLM=YES¨                                  * 00022900
*                   !   Ð ,CONNTKNKEYP=VALUE                          * 00023000
*                   !   !     ,CONNTKNKEY=xconntknkey                 * 00023100
*                   !   ¿ ,CONNTKNKEYP=PSWKEY¨                        * 00023200
*                   ¿Ý,WORK_MANAGER=NO¨                               * 00023300
*                   ÐÝ,ROUTER=NO                                      * 00023400
*                   !   ÐÝ,QUEUE_MANAGER=NO¨                          * 00023500
*                   !   ¿Ý,QUEUE_MANAGER=YES                          * 00023600
*                   !        Ý,QMGR_EXIT@                             * 00023700
*                   !                     =»xqmgr_exit@!NO_QMGR_EXIT@ * 00023800
*                   !                     º¨¨¨                        * 00023900
*                   ¿Ý,ROUTER=YES¨                                    * 00024000
*                   ÐÝ,SERVER_MANAGER=NO¨                             * 00024100
*                   ¿Ý,SERVER_MANAGER=YES                             * 00024200
*                         ,APPLENV=xapplenv                           * 00024300
*                       ÐÝ,DYNAMIC=NO¨                                * 00024400
*                       ¿Ý,DYNAMIC=YES¨                               * 00024500
*                         ,PARALLEL_EU=xparallel_eu                   * 00024600
*                        Ý,REGION_TOKEN=xregion_token¨                * 00024700
*                       ÐÝ,SERVER_TYPE=QUEUE                          * 00024800
*                       !   ÐÝ,MANAGE_TASKS=NO¨                       * 00024900
*                       !   ¿Ý,MANAGE_TASKS=YES                       * 00025000
*                       !        Ý,SERVER_LIMIT                       * 00025100
*                       !                       =»xserver_limit!1000º * 00025200
*                       !                       ¨¨¨                   * 00025300
*                       ¿Ý,SERVER_TYPE=ROUTING                        * 00025400
*                             ,SERVER_DATA=xserver_data               * 00025500
*                             ,SRV_MGR_EXIT@                          * 00025600
*                                            =xsrv_mgr_exit@¨¨        * 00025700
*                   ÐÝ,EXPTIMPT=NO¨                                   * 00025800
*                   ¿Ý,EXPTIMPT=YES¨                                  * 00025900
*                     ,SUBSYS=xsubsys                                 * 00026000
*                     ,SUBSYSNM=xsubsysnm                             * 00026100
*                    Ý,NODENM=»xnodenm!NO_NODENMº¨                    * 00026200
*                    Ý,GROUPNM=»xgroupnm!NO_GROUPNMº                  * 00026300
*                         ,GROUPNM_LEN=xgroupnm_len¨                  * 00026400
*                     ,CONNTKN=xconntkn                               * 00026500
*                    Ý,RETCODE=xretcode¨                              * 00026600
*                    Ý,RSNCODE=xrsncode¨                              * 00026700
*                    Ý,PLISTVER=»xplistver!IMPLIED_VERSIONº¨          * 00026800
*                   ÐÝ,MF=S¨                                          * 00026900
*                   ÔÝ,MF=(L,xmfctrl»,xmfattr!0Dº)¨                   * 00027000
*                   ¿Ý,MF=(E,xmfctrl»,COMPLETEº)¨                     * 00027100
*                                                                     * 00027200
*                                                                     * 00027300
*      Where:                                                         * 00027400
*                                                                     * 00027500
*                                                                     * 00027600
*      Ýxlabel¨                                                       * 00027700
*          is an optional symbol, starting in column 1, that is the   * 00027800
*          name on the IWM4CON macro invocation.  The name must       * 00027900
*          conform to the rules for an ordinary assembler language    * 00028000
*          symbol.                                                    * 00028100
*          DEFAULT: No name.                                          * 00028200
*                                                                     * 00028300
*                                                                     * 00028400
*                                                                     * 00028500
*                                                                     * 00028600
*      ÝWORK_MANAGER=»YES!NOº¨                                        * 00028700
*          is an optional keyword input indicating that WLM Work      * 00028800
*          Management services be available to the connecting address * 00028900
*          space. For example:                                        * 00029000
*                                                                     * 00029100
*                                                                     * 00029200
*          o   Classify (Iwmclsfy)                                    * 00029300
*                                                                     * 00029400
*          o   Report (Iwmrpt)                                        * 00029500
*                                                                     * 00029600
*          o   Notify (Iwmmntfy)                                      * 00029700
*                                                                     * 00029800
*          o   Enclave Create (Iwm4ecre)                              * 00029900
*                                                                     * 00030000
*          o   Modify Connect (Iwmwmcon)                              * 00030100
*                                                                     * 00030200
*                                                                     * 00030300
*                                                                     * 00030400
*          If NO is specified, the above services cannot be used,     * 00030500
*          except for the form of Notify that doesn't pass an input   * 00030600
*          connect token.                                             * 00030700
*          DEFAULT: YES                                               * 00030800
*                                                                     * 00030900
*                                                                     * 00031000
*          ÝWORK_MANAGER=YES                                          * 00031100
*              The connecting address space will be using the WLM     * 00031200
*              Work Management services.                              * 00031300
*                                                                     * 00031400
*                                                                     * 00031500
*              ÝTOPOLOGY=»xtopology!NO_TOPOLOGYº                      * 00031600
*                  is the name (RS-type), or address in register      * 00031700
*                  (2)-(12), of an optional character input which     * 00031800
*                  represents a list of ASCB addresses for the        * 00031900
*                  address spaces which comprise the subsystem. This  * 00032000
*                  list should ONLY include address spaces which do   * 00032100
*                  NOT surface as the current home address space when * 00032200
*                  IWM4MINI or Iwmmrela are used to establish the     * 00032300
*                  delay monitoring environments, but that may        * 00032400
*                  participate as dispatchable units (TCBs or SRBs)   * 00032500
*                  in serving work requests.  If the current primary  * 00032600
*                  or home space is a space not surfacing in a        * 00032700
*                  monitoring environment and its execution can       * 00032800
*                  affect the response time of work flowing through   * 00032900
*                  the subsystem, then it should appear in the list.  * 00033000
*                  Neither current primary nor current home are       * 00033100
*                  defaults.  While there are no limits on the number * 00033200
*                  of address spaces, this information is less        * 00033300
*                  precise than that provided by monitoring           * 00033400
*                  environments.                                      * 00033500
*                  DEFAULT: NO_TOPOLOGY indicates that no topology    * 00033600
*                  information was passed.                            * 00033700
*                                                                     * 00033800
*                                                                     * 00033900
*                  NUMBERASCB=xnumberascb¨                            * 00034000
*                      is the name (RS-type), or address in register  * 00034100
*                      (2)-(12), of a required fullword input which   * 00034200
*                      contains the number of ASCBs in the list       * 00034300
*                      passed via xTOPOLOGY.  While there is no       * 00034400
*                      restriction on the number of entries in the    * 00034500
*                      list, the current support will only look at    * 00034600
*                      the first 10 entries.  The number specified    * 00034700
*                      must be positive (hence also non-zero).        * 00034800
*                                                                     * 00034900
*                                                                     * 00035000
*                                                                     * 00035100
*                                                                     * 00035200
*                                                                     * 00035300
*                                                                     * 00035400
*              ÝEWLM=»NO!YESº¨                                        * 00035500
*                  is an optional keyword input which indicates if    * 00035600
*                  this work manager intents to participate in cross  * 00035700
*                  platform Enterprise Workload Management (eWLM).    * 00035800
*                  DEFAULT: NO                                        * 00035900
*                                                                     * 00036000
*                                                                     * 00036100
*                  ÝEWLM=NO¨                                          * 00036200
*                      The work manager interacts only with WLM and   * 00036300
*                      no interaction with eWLM takes place.          * 00036400
*                                                                     * 00036500
*                  ÝEWLM=YES¨                                         * 00036600
*                      The work manager participates in cross         * 00036700
*                      platform Enterprise Workload Management and    * 00036800
*                      interacts with eWLM.                           * 00036900
*                                                                     * 00037000
*                                                                     * 00037100
*                                                                     * 00037200
*                                                                     * 00037300
*                                                                     * 00037400
*                                                                     * 00037500
*              CONNTKNKEYP=»VALUE!PSWKEYº                             * 00037600
*                  is a required keyword input which describes how    * 00037700
*                  the input key should be obtained.                  * 00037800
*                                                                     * 00037900
*                                                                     * 00038000
*                  CONNTKNKEYP=VALUE                                  * 00038100
*                                                                     * 00038200
*                      indicates that the key is being passed         * 00038300
*                      explicitly via CONNTKNKEY.                     * 00038400
*                                                                     * 00038500
*                                                                     * 00038600
*                      CONNTKNKEY=xconntknkey                         * 00038700
*                          is the name (RS-type), or address in       * 00038800
*                          register (2)-(12), of a required 8 bit     * 00038900
*                          input which contains the key for which the * 00039000
*                          various branch entry services using the    * 00039100
*                          CONNTKN returned by IWM4CON must have PSW  * 00039200
*                          update authority.  These other services    * 00039300
*                          include Classify (Iwmclsfy), Report        * 00039400
*                          (Iwmrpt), Notify (Iwmmntfy). Create        * 00039500
*                          (Iwm4mcre) is a PC interface and hence is  * 00039600
*                          excluded.  The low order 4 bits (bits 4-7) * 00039700
*                          contain the key value.  The high order 4   * 00039800
*                          bits (bits 0-3) must be zeros.             * 00039900
*                                                                     * 00040000
*                                                                     * 00040100
*                                                                     * 00040200
*                  CONNTKNKEYP=PSWKEY¨                                * 00040300
*                                                                     * 00040400
*                      indicates that the current PSW key should be   * 00040500
*                      used.                                          * 00040600
*                                                                     * 00040700
*                                                                     * 00040800
*                                                                     * 00040900
*                                                                     * 00041000
*                                                                     * 00041100
*          ÝWORK_MANAGER=NO¨                                          * 00041200
*              The connecting address space will not use the WLM Work * 00041300
*              Management services. Specifying this keyword may       * 00041400
*              reduce the use of system resources.                    * 00041500
*                                                                     * 00041600
*                                                                     * 00041700
*                                                                     * 00041800
*                                                                     * 00041900
*                                                                     * 00042000
*                                                                     * 00042100
*      ÝROUTER=»NO!YESº¨                                              * 00042200
*          is an optional keyword input which describes whether       * 00042300
*          recommendations for sysplex routing to servers associated  * 00042400
*          with the same subsystem type and name are requested.       * 00042500
*          DEFAULT: NO                                                * 00042600
*                                                                     * 00042700
*                                                                     * 00042800
*          ÝROUTER=NO                                                 * 00042900
*                                                                     * 00043000
*              indicates that recommendations for sysplex routing via * 00043100
*              IWMSRFSV are not required.                             * 00043200
*                                                                     * 00043300
*                                                                     * 00043400
*              ÝQUEUE_MANAGER=»NO!YESº¨                               * 00043500
*                  is an optional keyword input indicating that WLM   * 00043600
*                  Work Queuing services be available to the          * 00043700
*                  connecting address space. For example:             * 00043800
*                                                                     * 00043900
*                                                                     * 00044000
*                  o   Insert (IWM4QIN)                               * 00044100
*                                                                     * 00044200
*                  o   Delete (IWM4QDE)                               * 00044300
*                                                                     * 00044400
*                                                                     * 00044500
*                                                                     * 00044600
*                  If YES is specified, the combination of the        * 00044700
*                  subsystem type and the subsystem name must be      * 00044800
*                  unique to that MVS system.                         * 00044900
*                  DEFAULT: NO                                        * 00045000
*                                                                     * 00045100
*                                                                     * 00045200
*                  ÝQUEUE_MANAGER=NO¨                                 * 00045300
*                      The connecting address space will not use the  * 00045400
*                      WLM Work Queuing services.                     * 00045500
*                                                                     * 00045600
*                  ÝQUEUE_MANAGER=YES                                 * 00045700
*                      The connecting address space will be using the * 00045800
*                      WLM Work Queuing services.                     * 00045900
*                                                                     * 00046000
*                                                                     * 00046100
*                      ÝQMGR_EXIT@=»xqmgr_exit@!NO_QMGR_EXIT@º¨¨¨     * 00046200
*                          is the name (RS-type), or address in       * 00046300
*                          register (2)-(12), of an optional 4 byte   * 00046400
*                          input that contains the address of the     * 00046500
*                          Queue Manager Connect Exit to be invoked   * 00046600
*                          when the system wishes to inform the queue * 00046700
*                          manager of actions it should perform.  The * 00046800
*                          exit will be called in enabled, unlocked   * 00046900
*                          TCB mode with no FRRs set, but may be      * 00047000
*                          called in a cross-memory environment.  The * 00047100
*                          mapping of the parameter list for the exit * 00047200
*                          and its invocation environment is given by * 00047300
*                          the list form of the IWMQCXIT macro.       * 00047400
*                                                                     * 00047500
*                          The system may chose to discontinue        * 00047600
*                          calling the exit upon repetitive abnormal  * 00047700
*                          completions, i.e. where the system         * 00047800
*                          recovery routine is percolated to from an  * 00047900
*                          error within the exit.  The exit must be   * 00048000
*                          callable from any address space and remain * 00048100
*                          available after the queue manager          * 00048200
*                          disconnects or terminates.                 * 00048300
*                          DEFAULT: NO_QMGR_EXIT@ indicates that no   * 00048400
*                          queue manager exit is provided.            * 00048500
*                                                                     * 00048600
*                                                                     * 00048700
*                                                                     * 00048800
*                                                                     * 00048900
*                                                                     * 00049000
*                                                                     * 00049100
*                                                                     * 00049200
*          ÝROUTER=YES¨                                               * 00049300
*                                                                     * 00049400
*              indicates that recommendations for sysplex routing via * 00049500
*              IWMSRFSV is required.  Note that only server spaces    * 00049600
*              which have the same Subsystem type and name AND which  * 00049700
*              specified Server_Type=Routing are considered when      * 00049800
*              IWMSRFSV is invoked.                                   * 00049900
*                                                                     * 00050000
*              If YES is specified, the combination of the subsystem  * 00050100
*              type and the subsystem name must be unique to that MVS * 00050200
*              system.                                                * 00050300
*                                                                     * 00050400
*                                                                     * 00050500
*                                                                     * 00050600
*                                                                     * 00050700
*                                                                     * 00050800
*                                                                     * 00050900
*      ÝSERVER_MANAGER=»NO!YESº                                       * 00051000
*          is an optional keyword input indicating whether the space  * 00051100
*          needs access to a family of services specified by          * 00051200
*          SERVER_TYPE.                                               * 00051300
*          DEFAULT: NO                                                * 00051400
*                                                                     * 00051500
*                                                                     * 00051600
*          ÝSERVER_MANAGER=NO¨                                        * 00051700
*              The connecting address space will not use any of the   * 00051800
*              various server related WLM services documented under   * 00051900
*              SERVER_TYPE.                                           * 00052000
*                                                                     * 00052100
*          ÝSERVER_MANAGER=YES                                        * 00052200
*              The connecting address space will be acting in the     * 00052300
*              role of a server and needs access to the family of     * 00052400
*              services specified by SERVER_TYPE.                     * 00052500
*                                                                     * 00052600
*              Specification of both Queue_Manager=Yes, and           * 00052700
*              Server_Manager=Yes requires that Server_Type=Queue.    * 00052800
*              Specification of Server_Type=Routing is rejected.      * 00052900
*                                                                     * 00053000
*              Specification of both Router=Yes, and                  * 00053100
*              Server_Manager=Yes requires that Server_Type=Routing.  * 00053200
*              Specification of Server_Type=Queue is rejected.        * 00053300
*                                                                     * 00053400
*                                                                     * 00053500
*              APPLENV=xapplenv                                       * 00053600
*                  is the name (RS-type), or address in register      * 00053700
*                  (2)-(12), of a required 32 character input which   * 00053800
*                  contains the application environment under which   * 00053900
*                  work requests are served.                          * 00054000
*                                                                     * 00054100
*                                                                     * 00054200
*                                                                     * 00054300
*                                                                     * 00054400
*              ÝDYNAMIC=»NO!YESº¨                                     * 00054500
*                  is an optional keyword input indicating whether    * 00054600
*                  the server manager connects to a dynamic or static * 00054700
*                  application environment                            * 00054800
*                  DEFAULT: NO                                        * 00054900
*                                                                     * 00055000
*                                                                     * 00055100
*                  ÝDYNAMIC=NO¨                                       * 00055200
*                      The server manager connects to a static        * 00055300
*                      application environment (default).             * 00055400
*                                                                     * 00055500
*                  ÝDYNAMIC=YES¨                                      * 00055600
*                      The server manager connects to a dynamic       * 00055700
*                      application environment.                       * 00055800
*                                                                     * 00055900
*                                                                     * 00056000
*                                                                     * 00056100
*                                                                     * 00056200
*                                                                     * 00056300
*                                                                     * 00056400
*              PARALLEL_EU=xparallel_eu                               * 00056500
*                  is the name (RS-type), or address in register      * 00056600
*                  (2)-(12), of a required fullword input which       * 00056700
*                  contains the maximum number of tasks (TCBs) within * 00056800
*                  the address space which will be used to            * 00056900
*                  concurrently process distinct work requests if     * 00057000
*                  MANAGE_TASKS=YES is not in effect. Valid values    * 00057100
*                  range from 1 to 65534.  When Select (IWM4SSL) is   * 00057200
*                  used to obtain a work request, which might then be * 00057300
*                  passed to another task (TCB) for processing under  * 00057400
*                  a Begin (IWM4STBG) environment, this count         * 00057500
*                  represents the number of tasks (TCBs) which can be * 00057600
*                  running concurrently against these work requests,  * 00057700
*                  i.e. the number of concurrent Begin environments.  * 00057800
*                  It is important that this count represent the      * 00057900
*                  actual number of tasks (TCBs) which can be         * 00058000
*                  utilized, and not merely some approximate upper    * 00058100
*                  bound, as this value will influence system         * 00058200
*                  algorithms.                                        * 00058300
*                                                                     * 00058400
*                  If MANAGE_TASKS=YES is in effect, the application  * 00058500
*                  environment managed by WLM PARALLEL_EU is not      * 00058600
*                  used. In this case the parameter is only used as   * 00058700
*                  described above if no  procedure name was defined  * 00058800
*                  for the application environment.                   * 00058900
*                                                                     * 00059000
*                                                                     * 00059100
*                                                                     * 00059200
*                                                                     * 00059300
*              ÝREGION_TOKEN=xregion_token¨                           * 00059400
*                  is the name (RS-type), or address in register      * 00059500
*                  (2)-(12), of an optional 16 character output which * 00059600
*                  contains a region token.  A queueing manager can   * 00059700
*                  use the region token to queue work requests to a   * 00059800
*                  specific server region. These work requests are    * 00059900
*                  considered to belong to a set of the work request  * 00060000
*                  all needing access to same status information      * 00060100
*                  which exists only in the virtual storage of the    * 00060200
*                  server region.  They are selected using the        * 00060300
*                  IWM4SSL macro.  It is assumed that the application * 00060400
*                  uses the service IWM4TAF to tell WLM when the      * 00060500
*                  temporary affinity to the defined server region    * 00060600
*                  begins and ends.                                   * 00060700
*                                                                     * 00060800
*                                                                     * 00060900
*                                                                     * 00061000
*                                                                     * 00061100
*              ÝSERVER_TYPE=»QUEUE!ROUTINGº¨¨                         * 00061200
*                  is an optional keyword input which describes what  * 00061300
*                  type of services are used by the server.           * 00061400
*                  DEFAULT: QUEUE                                     * 00061500
*                                                                     * 00061600
*                                                                     * 00061700
*                  ÝSERVER_TYPE=QUEUE                                 * 00061800
*                                                                     * 00061900
*                      indicates that the server selects work from a  * 00062000
*                      queue, and thus requests that WLM Work         * 00062100
*                      Execution services be available to the         * 00062200
*                      connecting address space. For example:         * 00062300
*                                                                     * 00062400
*                                                                     * 00062500
*                      o   Select (IWM4SSL)                           * 00062600
*                                                                     * 00062700
*                      o   Begin  (IWM4STBG)                          * 00062800
*                                                                     * 00062900
*                      o   End    (IWM4STEN)                          * 00063000
*                                                                     * 00063100
*                                                                     * 00063200
*                                                                     * 00063300
*                      The server also has the WLM Work Queuing       * 00063400
*                      services available to the connecting address   * 00063500
*                      space when the corresponding Queue Manager     * 00063600
*                      with the same subsystem type and name is       * 00063700
*                      active on the same MVS image (see following    * 00063800
*                      macros for macro specific restrictions).  For  * 00063900
*                      example:                                       * 00064000
*                                                                     * 00064100
*                                                                     * 00064200
*                      o   Insert (IWM4QIN)                           * 00064300
*                                                                     * 00064400
*                      o   Delete (IWM4QDE)                           * 00064500
*                                                                     * 00064600
*                                                                     * 00064700
*                                                                     * 00064800
*                                                                     * 00064900
*                      ÝMANAGE_TASKS=»NO!YESº¨                        * 00065000
*                          is an optional keyword input indicating    * 00065100
*                          the WLM will manage the server instances   * 00065200
*                          (tasks) selecting work from a work queue.  * 00065300
*                                                                     * 00065400
*                          If YES is specified the caller must use    * 00065500
*                          service IWMSINF to obtain the number of    * 00065600
*                          server instances to start from WLM.        * 00065700
*                                                                     * 00065800
*                          The meaning of PARALLEL_EU changes in this * 00065900
*                          case. PARALLEL_EU is only used to          * 00066000
*                          determine the number of tasks to start if  * 00066100
*                          the application environment can't be       * 00066200
*                          managed by WLM. Otherwise PARALLEL_EU can  * 00066300
*                          be used to limit the number of server      * 00066400
*                          tasks to start initially.                  * 00066500
*                                                                     * 00066600
*                          The server can define the SERVER_LIMIT     * 00066700
*                          parameter to specify a limit for the       * 00066800
*                          number of server tasks supported by the    * 00066900
*                          application.                               * 00067000
*                          DEFAULT: NO                                * 00067100
*                                                                     * 00067200
*                                                                     * 00067300
*                          ÝMANAGE_TASKS=NO¨                          * 00067400
*                              The connecting address space starts    * 00067500
*                              the number of server instances as      * 00067600
*                              provided with parallel_eu.             * 00067700
*                                                                     * 00067800
*                          ÝMANAGE_TASKS=YES                          * 00067900
*                              The connecting address spaces uses     * 00068000
*                              IWMSINF to obtain the number of server * 00068100
*                              instances to start from WLM.           * 00068200
*                                                                     * 00068300
*                                                                     * 00068400
*                              ÝSERVER_LIMIT=»xserver_limit!1000º¨¨¨  * 00068500
*                                                                     * 00068600
*                                  is the name (RS-type), or address  * 00068700
*                                  in register (2)-(12), of an        * 00068800
*                                  optional fullword input parameter  * 00068900
*                                  indicating a limit for the number  * 00069000
*                                  of server instances which a single * 00069100
*                                  server address space can handle.   * 00069200
*                                                                     * 00069300
*                                  This parameter can be used to tell * 00069400
*                                  WLM the upper limit up to which it * 00069500
*                                  will recommend to start server     * 00069600
*                                  instances.  The maximum number of  * 00069700
*                                  server instances per address space * 00069800
*                                  supported by WLM is 65534.         * 00069900
*                                  DEFAULT: 1000 if the parameter is  * 00070000
*                                  omitted.                           * 00070100
*                                                                     * 00070200
*                                                                     * 00070300
*                                                                     * 00070400
*                                                                     * 00070500
*                                                                     * 00070600
*                                                                     * 00070700
*                                                                     * 00070800
*                  ÝSERVER_TYPE=ROUTING                               * 00070900
*                                                                     * 00071000
*                      indicates that the server receives work by way * 00071100
*                      of routing, and may be selected by the         * 00071200
*                      IWMSRFSV (Find Server) macro interface.  Note  * 00071300
*                      that the space which invokes the IWMSRFSV      * 00071400
*                      service must Connect with Router=Yes.          * 00071500
*                                                                     * 00071600
*                      Termination of the router with the same        * 00071700
*                      subsystem type and name on the same MVS image  * 00071800
*                      will not cause notification to the server to   * 00071900
*                      terminate.  This coordination, if required,    * 00072000
*                      must be handled through a different protocol   * 00072100
*                      than use of Connect.                           * 00072200
*                                                                     * 00072300
*                                                                     * 00072400
*                      SERVER_DATA=xserver_data                       * 00072500
*                          is the name (RS-type), or address in       * 00072600
*                          register (2)-(12), of a required 32        * 00072700
*                          character input which contains whatever    * 00072800
*                          data is needed to uniquely identify the    * 00072900
*                          server when recommended by MVS through use * 00073000
*                          of the IWMSRFSV interface.  The structure  * 00073100
*                          of this data is undefined to MVS, and will * 00073200
*                          be returned to the program invoking        * 00073300
*                          IWMSRFSV when the server is returned.      * 00073400
*                                                                     * 00073500
*                                                                     * 00073600
*                                                                     * 00073700
*                                                                     * 00073800
*                      SRV_MGR_EXIT@=xsrv_mgr_exit@¨¨                 * 00073900
*                          is the name (RS-type), or address in       * 00074000
*                          register (2)-(12), of a required 4 byte    * 00074100
*                          input that contains the address of the     * 00074200
*                          Server Manager Connect Exit to be invoked  * 00074300
*                          when the system wishes to inform the       * 00074400
*                          server of actions it should perform.  This * 00074500
*                          exit will be called in SRB mode, with a    * 00074600
*                          non cross-memory environment, where        * 00074700
*                          HASN=SASN=PASN=HASN at the time IWM4CON    * 00074800
*                          was invoked.  The mapping of the parameter * 00074900
*                          list for the exit and its invocation       * 00075000
*                          environment is given by the list form of   * 00075100
*                          the IWMSCXIT macro.                        * 00075200
*                                                                     * 00075300
*                          Note that it may be possible for the exit  * 00075400
*                          to be called before the caller has         * 00075500
*                          received control back from IWM4CON.  The   * 00075600
*                          exit or any program it drives              * 00075700
*                          (synchronously or asynchronously) must     * 00075800
*                          synchronize with the program issuing       * 00075900
*                          IWM4CON to ensure that IWM4CON has         * 00076000
*                          returned a connect token prior to issuing  * 00076100
*                          IWM4DIS (disconnect) or any other services * 00076200
*                          that need the connect token.               * 00076300
*                                                                     * 00076400
*                          The system may cause the space to become   * 00076500
*                          ineligible to be recommended by IWMSRFSV   * 00076600
*                          upon repetitive errors in calling the exit * 00076700
*                          specified. The exit must be callable from  * 00076800
*                          the server address space and remain        * 00076900
*                          available after the server manager         * 00077000
*                          disconnects or the connecting server TCB   * 00077100
*                          terminates. The exit need not persist upon * 00077200
*                          memory termination of the server.          * 00077300
*                                                                     * 00077400
*                                                                     * 00077500
*                                                                     * 00077600
*                                                                     * 00077700
*                                                                     * 00077800
*                                                                     * 00077900
*                                                                     * 00078000
*                                                                     * 00078100
*                                                                     * 00078200
*                                                                     * 00078300
*                                                                     * 00078400
*                                                                     * 00078500
*      ÝEXPTIMPT=»NO!YESº¨                                            * 00078600
*          is an optional keyword input indicating whether the space  * 00078700
*          needs access to the export and import services (IWMEXPT,   * 00078800
*          IWMUEXPT, IWMIMPT, IWMUIMPT).                              * 00078900
*          DEFAULT: NO                                                * 00079000
*                                                                     * 00079100
*                                                                     * 00079200
*          ÝEXPTIMPT=NO¨                                              * 00079300
*              The connecting address space will not use the export   * 00079400
*              and import services.                                   * 00079500
*                                                                     * 00079600
*          ÝEXPTIMPT=YES¨                                             * 00079700
*              The connecting address space will use the export and   * 00079800
*              import services.                                       * 00079900
*                                                                     * 00080000
*                                                                     * 00080100
*                                                                     * 00080200
*                                                                     * 00080300
*                                                                     * 00080400
*                                                                     * 00080500
*      SUBSYS=xsubsys                                                 * 00080600
*          is the name (RS-type), or address in register (2)-(12), of * 00080700
*          a required 4 character input which contains the generic    * 00080800
*          subsystem type (e.g. IMS, CICS, etc.).  When               * 00080900
*          WORK_MANAGER=YES is specified, this is the primary         * 00081000
*          category under which classification rules are grouped.     * 00081100
*                                                                     * 00081200
*          If the caller connects to the WLM work queueing services   * 00081300
*          by specifying QUEUE_MANAGER=YES, or requests sysplex       * 00081400
*          routing by specifying ROUTER=YES, the combination of the   * 00081500
*          subsystem type and the subsystem name must be unique to    * 00081600
*          that MVS system.                                           * 00081700
*                                                                     * 00081800
*                                                                     * 00081900
*                                                                     * 00082000
*                                                                     * 00082100
*      SUBSYSNM=xsubsysnm                                             * 00082200
*          is the name (RS-type), or address in register (2)-(12), of * 00082300
*          a required 8 character input which contains the subsystem  * 00082400
*          name to be used for classifying work requests when         * 00082500
*          Work_Manager=Yes is specified or taken as default.  The    * 00082600
*          subsystem name identifies a specific instance of the       * 00082700
*          generic subsystem type.                                    * 00082800
*                                                                     * 00082900
*          When Server_Manager=Yes and Server_Type=Queue is           * 00083000
*          specified, the subsystem name should match the subsystem   * 00083100
*          name specified on the corresponding Connect for the        * 00083200
*          Queue_Manager, i.e. all servers associated with the        * 00083300
*          Queue_Manager have identical subsystem names.              * 00083400
*                                                                     * 00083500
*          When Server_Manager=Yes and Server_Type=Routing is         * 00083600
*          specified, the subsystem name should match the subsystem   * 00083700
*          name specified on the corresponding Connect for            * 00083800
*          Router=Yes, i.e. all servers associated with the Router    * 00083900
*          have identical subsystem names.                            * 00084000
*                                                                     * 00084100
*          If a product choses to use both Work_Manager=Yes and       * 00084200
*          Server_Manager=Yes on a single invocation of IWM4CON for a * 00084300
*          space, then the rules for Server_Manager apply, i.e. the   * 00084400
*          subsystem name refers to the subsystem name of the space   * 00084500
*          playing the role of Queue_Manager or Router.               * 00084600
*                                                                     * 00084700
*          If the caller connects to the WLM work queueing services,  * 00084800
*          or to sysplex routing services, the combination of the     * 00084900
*          subsystem type and the subsystem name must be unique to    * 00085000
*          that MVS system.                                           * 00085100
*                                                                     * 00085200
*                                                                     * 00085300
*                                                                     * 00085400
*                                                                     * 00085500
*      ÝNODENM=»xnodenm!NO_NODENMº¨                                   * 00085600
*          is the name (RS-type), or address in register (2)-(12), of * 00085700
*          an optional 8 character input which contains the node name * 00085800
*          to be used for classifying work requests when              * 00085900
*          Work_Manager=Yes is specified or taken as default.  The    * 00086000
*          node name identifies a specific subcomponent of the        * 00086100
*          generic subsystem type.                                    * 00086200
*                                                                     * 00086300
*          When Server_Manager=Yes and Server_Type=Queue is           * 00086400
*          specified, the node name should match the node name        * 00086500
*          specified on the corresponding Connect for the             * 00086600
*          Queue_Manager, i.e. all servers associated with the        * 00086700
*          Queue_Manager have identical node names.                   * 00086800
*                                                                     * 00086900
*          If a product choses to use both Work_Manager=Yes and       * 00087000
*          Server_Manager=Yes on a single invocation of IWM4CON for a * 00087100
*          space, then the rules for Server_Manager apply, i.e. the   * 00087200
*          node name refers to the node name of the space playing the * 00087300
*          role of Queue_Manager.                                     * 00087400
*                                                                     * 00087500
*          If the caller connects to the WLM work queueing services,  * 00087600
*          the combination of the subsystem type, node name and the   * 00087700
*          subsystem name must be unique to that MVS system. Node     * 00087800
*          name can be omitted.                                       * 00087900
*          DEFAULT: NO_NODENM                                         * 00088000
*                                                                     * 00088100
*                                                                     * 00088200
*                                                                     * 00088300
*                                                                     * 00088400
*      ÝGROUPNM=»xgroupnm!NO_GROUPNMº                                 * 00088500
*          is the name (RS-type), or address in register (2)-(12), of * 00088600
*          an optional character input which contains the name of an  * 00088700
*          application group, i.e. a group of similar or cooperating  * 00088800
*          subsystem instances. A group name can be up to 255         * 00088900
*          characters long.  Provision of a data area initialized to  * 00089000
*          all blanks is equivalent to specification of NO_GROUPNM.   * 00089100
*          DEFAULT: NO_GROUPNM indicates that no group name is        * 00089200
*          passed.                                                    * 00089300
*                                                                     * 00089400
*                                                                     * 00089500
*          GROUPNM_LEN=xgroupnm_len¨                                  * 00089600
*              is the name (RS-type), or address in register          * 00089700
*              (2)-(12), of a required fullword input which contains  * 00089800
*              the length of the group name.  A group name can be up  * 00089900
*              to 255 characters long.                                * 00090000
*                                                                     * 00090100
*                                                                     * 00090200
*                                                                     * 00090300
*                                                                     * 00090400
*                                                                     * 00090500
*                                                                     * 00090600
*      CONNTKN=xconntkn                                               * 00090700
*          is the name (RS-type), or address in register (2)-(12), of * 00090800
*          a required 32 bit output which will receive the connect    * 00090900
*          token.                                                     * 00091000
*                                                                     * 00091100
*                                                                     * 00091200
*                                                                     * 00091300
*                                                                     * 00091400
*      ÝRETCODE=xretcode¨                                             * 00091500
*          is the name (RS-type) of an optional fullword output       * 00091600
*          variable, or register (2)-(12) or (15), into which the     * 00091700
*          return code is to be copied from GPR 15.  If you specify   * 00091800
*          15, GPR15, REG15, or R15 (within or without parentheses),  * 00091900
*          the value will be left in GPR 15.                          * 00092000
*                                                                     * 00092100
*                                                                     * 00092200
*                                                                     * 00092300
*                                                                     * 00092400
*      ÝRSNCODE=xrsncode¨                                             * 00092500
*          is the name (RS-type) of an optional fullword output       * 00092600
*          variable into which the reason code is to be copied from   * 00092700
*          GPR 0.  If you specify 0, 00, GPR0, GPR00, REG0, REG00, or * 00092800
*          R0 (within or without parentheses), the value will be left * 00092900
*          in GPR 0.                                                  * 00093000
*                                                                     * 00093100
*                                                                     * 00093200
*                                                                     * 00093300
*                                                                     * 00093400
*      ÝPLISTVER=»xplistver!IMPLIED_VERSIONº¨                         * 00093500
*          is an optional byte input decimal value in the "0-1" range * 00093600
*          that specifies the macro version.  PLISTVER is the only    * 00093700
*          key allowed on the list form of MF and determines which    * 00093800
*          parameter list is generated.  The macro keys associated    * 00093900
*          with each supported version of the macro are listed in     * 00094000
*          MACRO USAGE NOTE 2.  Note that MAX may be specified        * 00094100
*          instead of a number, and the parameter list will be of the * 00094200
*          largest size currently supported. This size may grow from  * 00094300
*          release to release (thus possibly affecting the amount of  * 00094400
*          storage needed by your program).  If your program can      * 00094500
*          tolerate this, IBM recommends that you always specify MAX  * 00094600
*          when creating the list form parameter list as that will    * 00094700
*          ensure that the list form parameter list is always long    * 00094800
*          enough to hold whatever parameters might be specified on   * 00094900
*          the execute form.                                          * 00095000
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00095100
*          default is the lowest version which allows all of the      * 00095200
*          parameters specified on the invocation to be processed.    * 00095300
*                                                                     * 00095400
*                                                                     * 00095500
*                                                                     * 00095600
*                                                                     * 00095700
*      ÝMF=»S!L!Eº¨                                                   * 00095800
*          is an optional keyword input which specifies the macro     * 00095900
*          form.                                                      * 00096000
*          DEFAULT: S                                                 * 00096100
*                                                                     * 00096200
*                                                                     * 00096300
*          ÝMF=S¨                                                     * 00096400
*              specifies the standard form of the macro.  The "S"     * 00096500
*              form generates code to put the parameters into an      * 00096600
*              in-line parameter list and invoke the desired service. * 00096700
*              Full checking for required macro keys is done along    * 00096800
*              with supplying defaults for omitted optional           * 00096900
*              parameters.                                            * 00097000
*                                                                     * 00097100
*          ÝMF=(L,xmfctrl»,xmfattr!0Dº)¨                              * 00097200
*              specifies the list form of the macro.  The "L" form    * 00097300
*              defines an area to be used for the parameter list.     * 00097400
*              Only the PLISTVER key may be specified on the          * 00097500
*              invocation.  All other macro parameters are flagged as * 00097600
*              errors.  If PLISTVER is not specified, the original    * 00097700
*              parameter list definition is used.                     * 00097800
*                                                                     * 00097900
*            ,xmfctrl                                                 * 00098000
*              is a required input.  It is the name of a storage area * 00098100
*              for the parameter list.                                * 00098200
*                                                                     * 00098300
*            »,xmfattr!0Dº                                            * 00098400
*              is an optional 60 character input string that varies   * 00098500
*              from 1 to 60 characters. Use it to force boundary      * 00098600
*              alignment of the parameter list. Use only 0F or 0D.    * 00098700
*              DEFAULT: 0D which forces the parameter list to a       * 00098800
*              doubleword boundary.                                   * 00098900
*                                                                     * 00099000
*          ÝMF=(E,xmfctrl»,COMPLETEº)¨                                * 00099100
*              specifies the execute form of the macro.  The "E" form * 00099200
*              generates code to put the parameters into the          * 00099300
*              parameter list specified by xmfctrl and provides full  * 00099400
*              syntax checking with default setting.                  * 00099500
*                                                                     * 00099600
*            ,xmfctrl                                                 * 00099700
*              is a required input.  It is the name (RS-type), or     * 00099800
*              address in register (1)-(12), of a storage area for    * 00099900
*              the parameter list.                                    * 00100000
*                                                                     * 00100100
*            »,COMPLETEº                                              * 00100200
*              is an optional keyword input which specifies the       * 00100300
*              degree of macro parameter syntax checking.             * 00100400
*              DEFAULT: COMPLETE                                      * 00100500
*                                                                     * 00100600
*                                                                     * 00100700
*              COMPLETE                                               * 00100800
*                  Checking for required macro keys is done and       * 00100900
*                  defaults are supplied for omitted optional         * 00101000
*                  parameters.                                        * 00101100
*                                                                     * 00101200
*                                                                     * 00101300
*                                                                     * 00101400
*                                                                     * 00101500
*                                                                     * 00101600
*                                                                     * 00101700
*                                                                     * 00101800
*01* ABEND CODES:  None.                                              * 00101900
*                                                                     * 00102000
*01* RETURN CODES:                                                    * 00102100
*                                                                     * 00102200
*                                                                     * 00102300
*            0    Name: IwmRetCodeOk                                  * 00102400
*                                                                     * 00102500
*                 Meaning: Successful completion.                     * 00102600
*                                                                     * 00102700
*                 Action: None required.                              * 00102800
*                                                                     * 00102900
*            4    Name: IwmRetCodeWarning                             * 00103000
*                                                                     * 00103100
*                 Meaning: Successful completion, unusual conditions  * 00103200
*                 noted.                                              * 00103300
*                                                                     * 00103400
*                                                                     * 00103500
*                 HEX REASON  MEANING/ACTION                          * 00103600
*                 CODE                                                * 00103700
*                                                                     * 00103800
*                 xxxx0401    Name: IwmRsnCodeNoWLM                   * 00103900
*                                                                     * 00104000
*                             Meaning:  System does not support work  * 00104100
*                             manager services.  This return code is  * 00104200
*                             only set when the MVS release is prior  * 00104300
*                             to MVS/ESA SP5.1.0 or prior to HBB6603  * 00104400
*                             for IWM4CON                             * 00104500
*                             QUEUE_MANAGER/SERVER_MANAGER services.  * 00104600
*                                                                     * 00104700
*                             Action: None required.                  * 00104800
*                                                                     * 00104900
*                                                                     * 00105000
*                                                                     * 00105100
*            8    Name: IwmRetCodeInvocError                          * 00105200
*                                                                     * 00105300
*                 Meaning: Invalid invocation environment or          * 00105400
*                 parameters.                                         * 00105500
*                                                                     * 00105600
*                                                                     * 00105700
*                 HEX REASON  MEANING/ACTION                          * 00105800
*                 CODE                                                * 00105900
*                                                                     * 00106000
*                 xxxx0801    Name: IwmRsnCodeSrbMode                 * 00106100
*                                                                     * 00106200
*                             Meaning:  Caller is in SRB mode.        * 00106300
*                                                                     * 00106400
*                             Action: Avoid requesting this function  * 00106500
*                             while in SRB mode.                      * 00106600
*                                                                     * 00106700
*                 xxxx0802    Name: IwmRsnCodeXmemUserKeyTkn          * 00106800
*                                                                     * 00106900
*                             Meaning:  Caller is in cross-memory     * 00107000
*                             mode while the token was requested in   * 00107100
*                             user key.                               * 00107200
*                                                                     * 00107300
*                             Action: Avoid requesting this function  * 00107400
*                             while in cross-memory mode.             * 00107500
*                                                                     * 00107600
*                 xxxx0803    Name: IwmRsnCodeDisabled                * 00107700
*                                                                     * 00107800
*                             Meaning: Caller is disabled.            * 00107900
*                                                                     * 00108000
*                             Action: Avoid requesting this function  * 00108100
*                             while disabled.                         * 00108200
*                                                                     * 00108300
*                 xxxx0804    Name: IwmRsnCodeLocked                  * 00108400
*                                                                     * 00108500
*                             Meaning: Caller is locked.              * 00108600
*                                                                     * 00108700
*                             Action: Avoid requesting this function  * 00108800
*                             while locked.                           * 00108900
*                                                                     * 00109000
*                 xxxx080B    Name: IwmRsnCodeBadPl                   * 00109100
*                                                                     * 00109200
*                             Meaning:  Error accessing parameter     * 00109300
*                             list.                                   * 00109400
*                                                                     * 00109500
*                             Action: Check for possible storage      * 00109600
*                             overlay.                                * 00109700
*                                                                     * 00109800
*                 xxxx0810    Name: IwmRsnCodeEutFrr                  * 00109900
*                                                                     * 00110000
*                             Meaning:  Caller has EUT FRR            * 00110100
*                             established.                            * 00110200
*                                                                     * 00110300
*                             Action: Avoid requesting this function  * 00110400
*                             with an EUT FRR set.                    * 00110500
*                                                                     * 00110600
*                 xxxx0812    Name: IwmRsnCodeBadAscb                 * 00110700
*                                                                     * 00110800
*                             Meaning:  Bad ASCB address passed.      * 00110900
*                                                                     * 00111000
*                             Action: Check for possible storage      * 00111100
*                             overlay.                                * 00111200
*                                                                     * 00111300
*                 xxxx0823    Name: IwmRsnCodeDatoff                  * 00111400
*                                                                     * 00111500
*                             Meaning: Caller invoked service while   * 00111600
*                             DATOFF                                  * 00111700
*                                                                     * 00111800
*                             Action: Avoid requesting this function  * 00111900
*                             in this environment.                    * 00112000
*                                                                     * 00112100
*                 xxxx0824    Name: IwmRsnCodeAmode24                 * 00112200
*                                                                     * 00112300
*                             Meaning: Caller invoked service but was * 00112400
*                             in 24 bit addressing mode.              * 00112500
*                                                                     * 00112600
*                             Action: Request this function only when * 00112700
*                             you are in 31 bit addressing mode.      * 00112800
*                                                                     * 00112900
*                 xxxx0825    Name: IwmRsnCodeAscModeNotPrimary       * 00113000
*                                                                     * 00113100
*                             Meaning: Caller invoked service but was * 00113200
*                             not DAT on Primary ASC mode.            * 00113300
*                                                                     * 00113400
*                             Action: Avoid requesting this function  * 00113500
*                             in this environment.                    * 00113600
*                                                                     * 00113700
*                 xxxx0826    Name: IwmRsnCodeTaskTerm                * 00113800
*                                                                     * 00113900
*                             Meaning:  Caller invoked service while  * 00114000
*                             task termination is in progress for the * 00114100
*                             TCB associated with the owner.          * 00114200
*                                                                     * 00114300
*                             Action: Avoid requesting this function  * 00114400
*                             in this environment.                    * 00114500
*                                                                     * 00114600
*                 xxxx0827    Name: IwmRsnCodeRsvdNot0                * 00114700
*                                                                     * 00114800
*                             Meaning:  Reserved field in parameter   * 00114900
*                             list was non-zero.                      * 00115000
*                                                                     * 00115100
*                             Action: Check for possible storage      * 00115200
*                             overlay of the parameter list.          * 00115300
*                                                                     * 00115400
*                 xxxx0828    Name: IwmRsnCodeBadVersion              * 00115500
*                                                                     * 00115600
*                             Meaning: Version number in parameter    * 00115700
*                             list is not valid.                      * 00115800
*                                                                     * 00115900
*                             Action: Check for possible storage      * 00116000
*                             overlay of the parameter list.          * 00116100
*                                                                     * 00116200
*                 xxxx0829    Name: IwmRsnCodeBadOptions              * 00116300
*                                                                     * 00116400
*                             Meaning:  Parameter list omits required * 00116500
*                             parameters or supplies mutually         * 00116600
*                             exclusive parameters or provides data   * 00116700
*                             associated with options not selected.   * 00116800
*                                                                     * 00116900
*                             Action: Check for possible storage      * 00117000
*                             overlay of the parameter list.          * 00117100
*                                                                     * 00117200
*                 xxxx082C    Name: IwmRsnCodeBadNumberAscb           * 00117300
*                                                                     * 00117400
*                             Meaning:  NUMBERASCB variable is not a  * 00117500
*                             positive value.                         * 00117600
*                                                                     * 00117700
*                             Action: Check for possible storage      * 00117800
*                             overlay of the parameter list or        * 00117900
*                             variable.                               * 00118000
*                                                                     * 00118100
*                 xxxx082E    Name: IwmRsnCodeConnectExists           * 00118200
*                                                                     * 00118300
*                             Meaning:  Connect has already been      * 00118400
*                             established for the current home        * 00118500
*                             address space.                          * 00118600
*                                                                     * 00118700
*                             Action: Avoid requesting this function  * 00118800
*                             when a connection already exists.       * 00118900
*                                                                     * 00119000
*                 xxxx0840    Name: IwmRsnCodeServiceNotEnabled       * 00119100
*                                                                     * 00119200
*                             Meaning:  Requested connection type     * 00119300
*                             cannot be established in the current    * 00119400
*                             execution environment.  This occurs     * 00119500
*                             when SERVER_MANAGER=YES is specified    * 00119600
*                             and the program is run as a batch job   * 00119700
*                             in a WLM-managed job class.             * 00119800
*                                                                     * 00119900
*                             Action: Run the program as a started    * 00120000
*                             task.                                   * 00120100
*                                                                     * 00120200
*                 xxxx0841    Name: IwmRsnCodeXMemMode                * 00120300
*                                                                     * 00120400
*                             Meaning:  Caller is in cross memory     * 00120500
*                             mode.                                   * 00120600
*                                                                     * 00120700
*                             Action: Invoke the function in          * 00120800
*                             non-cross memory mode.                  * 00120900
*                                                                     * 00121000
*                 xxxx0847    Name: IwmRsnCodeOtherSpaceConnected     * 00121100
*                                                                     * 00121200
*                             Meaning:  Another address space with    * 00121300
*                             the same subsystem type and name is     * 00121400
*                             connected to WLM on the MVS image and   * 00121500
*                             has the role of queue manager or        * 00121600
*                             router.                                 * 00121700
*                                                                     * 00121800
*                             Action: Avoid requesting this function  * 00121900
*                             with duplicate values.                  * 00122000
*                                                                     * 00122100
*                 xxxx0849    Name: IwmRsnCodeWLMServBadAPPL          * 00122200
*                                                                     * 00122300
*                             Meaning:  The application environment   * 00122400
*                             name (APPLENV=) specified is not the    * 00122500
*                             same as the one used by WLM to start    * 00122600
*                             the server.                             * 00122700
*                                                                     * 00122800
*                             Action: Verify that the start           * 00122900
*                             parameters for the application          * 00123000
*                             environment are coded correctly in the  * 00123100
*                             WLM ISPF application, and that those    * 00123200
*                             parameters are used by the started JCL  * 00123300
*                             procedure.                              * 00123400
*                                                                     * 00123500
*                 xxxx084A    Name: IwmRsnCodeWLMServBadSSN           * 00123600
*                                                                     * 00123700
*                             Meaning:  The subsystem name            * 00123800
*                             (SUBSYSNM=) specified is not the same   * 00123900
*                             as the one used by WLM to start the     * 00124000
*                             server.                                 * 00124100
*                                                                     * 00124200
*                             Action: Verify that the start           * 00124300
*                             parameters for the application          * 00124400
*                             environment are coded correctly in the  * 00124500
*                             WLM ISPF application, and that those    * 00124600
*                             parameters are used by the started JCL  * 00124700
*                             procedure.                              * 00124800
*                                                                     * 00124900
*                 xxxx084B    Name: IwmRsnCodeWLMServBadSST           * 00125000
*                                                                     * 00125100
*                             Meaning:  The subsystem type (SUBSYS=)  * 00125200
*                             specified is not the same as the one    * 00125300
*                             used by WLM to start the server.        * 00125400
*                                                                     * 00125500
*                             Action: Verify that the start           * 00125600
*                             parameters for the application          * 00125700
*                             environment are coded correctly in the  * 00125800
*                             WLM ISPF application, and that those    * 00125900
*                             parameters are used by the started JCL  * 00126000
*                             procedure.                              * 00126100
*                                                                     * 00126200
*                 xxxx084D    Name: IwmRsnCodeNotAuthConnect          * 00126300
*                                                                     * 00126400
*                             Meaning:  The caller must be supervisor * 00126500
*                             state or have PSW key mask 0-7          * 00126600
*                             authority to connect to the requested   * 00126700
*                             WLM services.                           * 00126800
*                                                                     * 00126900
*                             Action: Avoid requesting this function  * 00127000
*                             in this environment.                    * 00127100
*                                                                     * 00127200
*                 xxxx084E    Name: IwmRsnCodeWlmServBadType          * 00127300
*                                                                     * 00127400
*                             Meaning:  For WLM started servers, the  * 00127500
*                             SERVER_TYPE= is not the one used to     * 00127600
*                             start the server.                       * 00127700
*                                                                     * 00127800
*                             Action: Specify the correct             * 00127900
*                             SERVER_TYPE.                            * 00128000
*                                                                     * 00128100
*                 xxxx0853    Name: IwmRsnCodeWlmQmBadType            * 00128200
*                                                                     * 00128300
*                             Meaning:  There is a queue manager or   * 00128400
*                             router environment of the specified     * 00128500
*                             subsystem name, but of a different type * 00128600
*                             than that specified by the caller.      * 00128700
*                                                                     * 00128800
*                             Action: Verify that the option for      * 00128900
*                             queue manager/router is specified       * 00129000
*                             correctly on IWM4CON. If the option is  * 00129100
*                             correct, then server address spaces for * 00129200
*                             a different Server_Type exist and must  * 00129300
*                             terminate before the current space may  * 00129400
*                             connect as a queue manager or router.   * 00129500
*                                                                     * 00129600
*                 xxxx0855    Name: IwmRsnCodeBadNumEUMax             * 00129700
*                                                                     * 00129800
*                             Meaning:  PARALLEL_EU variable is       * 00129900
*                             greater than the maximum of 65534.      * 00130000
*                                                                     * 00130100
*                             Action: Specify a value between 1 and   * 00130200
*                             65534.                                  * 00130300
*                                                                     * 00130400
*                 xxxx0856    Name: IwmRsnCodeBadNumEUMin             * 00130500
*                                                                     * 00130600
*                             Meaning:  PARALLEL_EU variable is less  * 00130700
*                             than the minimum of 1.                  * 00130800
*                                                                     * 00130900
*                             Action: Specify a value between 1 and   * 00131000
*                             65534.                                  * 00131100
*                                                                     * 00131200
*                 xxxx085C    Name: IwmRsnCodeWrongNumEU              * 00131300
*                                                                     * 00131400
*                             Meaning:  Caller invoked service with a * 00131500
*                             PARALLEL_EU value which is different    * 00131600
*                             from the PARALLEL_EU of existing        * 00131700
*                             servers in the application environment  * 00131800
*                                                                     * 00131900
*                             Action: Ensure that all servers in the  * 00132000
*                             application environment specify the     * 00132100
*                             same PARALLEL_EU value.                 * 00132200
*                                                                     * 00132300
*                 xxxx0873    Name: IwmRsnCodeWrongSrvLmt             * 00132400
*                                                                     * 00132500
*                             Meaning:  Caller invoked service with a * 00132600
*                             SERVER_LIMIT parameter setting which is * 00132700
*                             different from the SERVER_LIMIT of      * 00132800
*                             existing servers in the application     * 00132900
*                             environment                             * 00133000
*                                                                     * 00133100
*                             Action: Ensure that all servers in the  * 00133200
*                             application environment specify the     * 00133300
*                             same SERVER_LIMIT value.                * 00133400
*                                                                     * 00133500
*                 xxxx0874    Name: IwmRsnCodeWrongMngTsk             * 00133600
*                                                                     * 00133700
*                             Meaning:  Caller invoked service with a * 00133800
*                             MANAGE_TASKS parameter setting which is * 00133900
*                             different from the MANAGE_TASKS of      * 00134000
*                             existing servers in the application     * 00134100
*                             environment                             * 00134200
*                                                                     * 00134300
*                             Action: Ensure that all servers in the  * 00134400
*                             application environment specify the     * 00134500
*                             same MANAGE_TASKS value.                * 00134600
*                                                                     * 00134700
*                 xxxx0878    Name: IwmRsnCodeBadNumLimitMax          * 00134800
*                                                                     * 00134900
*                             Meaning:  Caller invoked service with a * 00135000
*                             SERVER_LIMIT parameter setting which    * 00135100
*                             exceeds the maximum number of tasks     * 00135200
*                             which can be started in a server        * 00135300
*                             address space.                          * 00135400
*                                                                     * 00135500
*                             Action: Correct number or do not        * 00135600
*                             specify SERVER_LIMIT parameter in order * 00135700
*                             to use the default.                     * 00135800
*                                                                     * 00135900
*                 xxxx0879    Name: IwmRsnCodeBadNumLimitMin          * 00136000
*                                                                     * 00136100
*                             Meaning:  Caller invoked service with a * 00136200
*                             SERVER_LIMIT parameter setting which is * 00136300
*                             less than what has been defined on the  * 00136400
*                             PARALLEL_EU parameter.                  * 00136500
*                                                                     * 00136600
*                             Action: Ensure that SERVER_LIMIT is     * 00136700
*                             always greater or equal to PARALLEL_EU. * 00136800
*                                                                     * 00136900
*                 xxxx087A    Name: IwmRsnCodeNoQServer               * 00137000
*                                                                     * 00137100
*                             Meaning:  The MANAGE_TASKS parameter is * 00137200
*                             not allowed when QUEUE_SERVER=YES has   * 00137300
*                             been specified.                         * 00137400
*                                                                     * 00137500
*                             Action: Ensure to use the parameters    * 00137600
*                             correctly.                              * 00137700
*                                                                     * 00137800
*                 xxxx088E    Name: IwmRsnCodeWlmServBadSSND          * 00137900
*                                                                     * 00138000
*                             Meaning:  For WLM started servers, the  * 00138100
*                             NODENM= is not the one used to start    * 00138200
*                             the server.                             * 00138300
*                                                                     * 00138400
*                             Action: Specify the correct NODENM.     * 00138500
*                                                                     * 00138600
*                 xxxx088F    Name: IwmRsnCodeApplNotSSN              * 00138700
*                                                                     * 00138800
*                             Meaning:  The application environment   * 00138900
*                             name is defined for use by a different  * 00139000
*                             subsystem node.                         * 00139100
*                                                                     * 00139200
*                             Action: Check whether the correct       * 00139300
*                             application environment name is being   * 00139400
*                             used.                                   * 00139500
*                                                                     * 00139600
*                                                                     * 00139700
*                                                                     * 00139800
*            C    Name: IwmRetCodeEnvError                            * 00139900
*                                                                     * 00140000
*                 Meaning: Environmental error.                       * 00140100
*                                                                     * 00140200
*                                                                     * 00140300
*                 HEX REASON  MEANING/ACTION                          * 00140400
*                 CODE                                                * 00140500
*                                                                     * 00140600
*                 xxxx0C01    Name: IwmRsnCodeNoStg                   * 00140700
*                                                                     * 00140800
*                             Meaning:  Storage is not available for  * 00140900
*                             the request.                            * 00141000
*                                                                     * 00141100
*                             Action: There is a storage shortage.    * 00141200
*                             The function may work successfully at a * 00141300
*                             later time.                             * 00141400
*                                                                     * 00141500
*                 xxxx0C09    Name: IwmRsnCodeNoResmgr                * 00141600
*                                                                     * 00141700
*                             Meaning: Resource manager could not be  * 00141800
*                             established.                            * 00141900
*                                                                     * 00142000
*                             Action: No action required.  This       * 00142100
*                             condition may be due to a storage       * 00142200
*                             shortage condition.                     * 00142300
*                                                                     * 00142400
*                 xxxx0C14    Name: IwmRsnCodeNoWorkShutDown          * 00142500
*                                                                     * 00142600
*                             Meaning: No work selected. Caller is to * 00142700
*                             shutdown.                               * 00142800
*                                                                     * 00142900
*                             Action: The server should shut down     * 00143000
*                             (terminate).                            * 00143100
*                                                                     * 00143200
*                 xxxx0C19    Name: IwmRsnCodeNotSecAuthConnect       * 00143300
*                                                                     * 00143400
*                             Meaning:  The caller is not authorized  * 00143500
*                             by SAF to connect to WLM with           * 00143600
*                             SERVER_MANAGER=YES.                     * 00143700
*                                                                     * 00143800
*                             Action: The security administrator must * 00143900
*                             grant access to the appropriate         * 00144000
*                             resource.                               * 00144100
*                                                                     * 00144200
*                 xxxx0C1A    Name: IwmRsnCodeApplNotDefined          * 00144300
*                                                                     * 00144400
*                             Meaning:  The application environment   * 00144500
*                             name is not defined in the active WLM   * 00144600
*                             policy.                                 * 00144700
*                                                                     * 00144800
*                             Action: Check whether the correct       * 00144900
*                             application environment name is being   * 00145000
*                             used.  If so, a service administrator   * 00145100
*                             must define the application environment * 00145200
*                             in the WLM service definition.          * 00145300
*                                                                     * 00145400
*                 xxxx0C1B    Name: IwmRsnCodeApplNotSST              * 00145500
*                                                                     * 00145600
*                             Meaning:  The application environment   * 00145700
*                             name is defined for use by a different  * 00145800
*                             subsystem type in the active WLM        * 00145900
*                             policy.                                 * 00146000
*                                                                     * 00146100
*                             Action: Check whether the correct       * 00146200
*                             application environment name is being   * 00146300
*                             used.  If so, a service administrator   * 00146400
*                             must change the application environment * 00146500
*                             in the WLM service definition to        * 00146600
*                             specify the correct subsystem type.     * 00146700
*                                                                     * 00146800
*                 xxxx0C1F    Name: IwmRsnCodeServerExists            * 00146900
*                                                                     * 00147000
*                             Meaning:  A server exists for the       * 00147100
*                             specified application environment which * 00147200
*                             only allows 1 such server in the        * 00147300
*                             sysplex.                                * 00147400
*                                                                     * 00147500
*                             Action: Check whether the correct       * 00147600
*                             application environment name is being   * 00147700
*                             used.  If so and the current server is  * 00147800
*                             shutting down, a retry may be           * 00147900
*                             successful after a delay.               * 00148000
*                                                                     * 00148100
*                 xxxx0C22    Name: IwmRsnCodeApplEnvQuiesced         * 00148200
*                                                                     * 00148300
*                             Meaning:  The specified application     * 00148400
*                             environment has been quiesced, server   * 00148500
*                             cannot be started for the request.      * 00148600
*                                                                     * 00148700
*                             Action: Restart the application         * 00148800
*                             environment and then retry the request. * 00148900
*                                                                     * 00149000
*                                                                     * 00149100
*                                                                     * 00149200
*            10   Name: IwmRetCodeCompError                           * 00149300
*                                                                     * 00149400
*                 Meaning: Component error.                           * 00149500
*                                                                     * 00149600
*                 Action: No action required.  The function may be    * 00149700
*                 successful if invoked again.                        * 00149800
*                                                                     * 00149900
*                                                                     * 00150000
*                                                                     * 00150100
*01* REASON CODES:                                                    * 00150200
*                                                                     * 00150300
*       A unique reason code will be returned whenever the return     * 00150400
*       code is non-zero.  Reason codes, as appropriate, are defined  * 00150500
*       under their corresponding return code.  Reason code and       * 00150600
*       return code constants are defined within IWMYCON.  Note that  * 00150700
*       the high order halfword of register 0, and the reason code    * 00150800
*       variable when specified, may be non-zero and represents       * 00150900
*       diagnostic data which is NOT part of the external interface.  * 00151000
*       The high order halfword should thus be excluded from          * 00151100
*       comparison with the reason code values described above.  The  * 00151200
*       constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may be    * 00151300
*       used for this purpose.                                        * 00151400
*                                                                     * 00151500
*01* MODULE TYPE:  ASSEM MACRO                                        * 00151600
*                                                                     * 00151700
*02*   PROCESSOR:  ASSEM                                              * 00151800
*                                                                     * 00151900
*01* COMPONENT:  SCWLM                                                * 00152000
*                                                                     * 00152100
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00152200
*                                                                     * 00152300
*01* EXAMPLES:                                                        * 00152400
*                                                                     * 00152500
*    To connect to workload management specifying a key value of 8,   * 00152600
*    and a list of 7 address spaces involved in processing work,      * 00152700
*    specify:                                                         * 00152800
*                                                                     * 00152900
*    IWM4CON  SUBSYS=GENSUB,SUBSYSNM=SUBNAME,                         * 00153000
*          TOPOLOGY=LISTASCB,NUMBERASCB=NUMSPACE,                     * 00153100
*          CONNTKN=CTKN,CONNTKNKEYP=VALUE,CONNTKNKEY=KEY,             * 00153200
*          RETCODE=RC,RSNCODE=RSN                                     * 00153300
*                                                                     * 00153400
*    Where the following are declared:                                * 00153500
*                                                                     * 00153600
*    GENSUB   DS    CL4          Generic subsystem type               * 00153700
*    SUBNAME  DS    CL8          Subsystem name                       * 00153800
*    LISTASCB DS    CL28         List of 7 address spaces             * 00153900
*    NUMSPACE DC    F'7'         Number of ASCBs                      * 00154000
*    CTKN     DS    FL4          Connect token                        * 00154100
*    KEY      DS    XL1          Key value                            * 00154200
*                                                                     * 00154300
*01* MACRO USAGE NOTES:                                               * 00154400
*                                                                     * 00154500
*                                                                     * 00154600
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00154700
*        global macro variable.  Any value other than 'NO' will       * 00154800
*        result in the macro expansion being printed.  The default is * 00154900
*        'YES'.  The following examples illustrate how the ZPRINT     * 00155000
*        variable should be set.                                      * 00155100
*                                                                     * 00155200
*                    GBLC &ZPRINT                                     * 00155300
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00155400
*                                                                     * 00155500
*                                                                     * 00155600
*    2.  The  IWM4CON macro supports multiple versions. The macro key * 00155700
*        list  below  contains the version level in which the key was * 00155800
*        first  introduced.  Positionals  are  identified by the word * 00155900
*        'Positional'  followed by the numeric value of its position. * 00156000
*        Nested  positionals  are  preceded  by their outer key.  The * 00156100
*        lowest value represents the original version and the highest * 00156200
*        value  represents  the  most  recent  version of the IWM4CON * 00156300
*        macro.    When  specifying  PLISTVER,  be sure that it is at * 00156400
*        least  as high as the highest version number of all the keys * 00156500
*        being used.                                                  * 00156600
*                                                                     * 00156700
*        VERSION   KEY                                                * 00156800
*                                                                     * 00156900
*              0      APPLENV                                         * 00157000
*                     CONNTKN                                         * 00157100
*                     CONNTKNKEY                                      * 00157200
*                     CONNTKNKEYP                                     * 00157300
*                     DYNAMIC                                         * 00157400
*                     EWLM                                            * 00157500
*                     EXPTIMPT                                        * 00157600
*                     GROUPNM                                         * 00157700
*                     GROUPNM_LEN                                     * 00157800
*                     MANAGE_TASKS                                    * 00157900
*                     NODENM                                          * 00158000
*                     NUMBERASCB                                      * 00158100
*                     PARALLEL_EU                                     * 00158200
*                     QMGR_EXIT@                                      * 00158300
*                     QUEUE_MANAGER                                   * 00158400
*                     ROUTER                                          * 00158500
*                     SERVER_DATA                                     * 00158600
*                     SERVER_LIMIT                                    * 00158700
*                     SERVER_MANAGER                                  * 00158800
*                     SERVER_TYPE                                     * 00158900
*                     SRV_MGR_EXIT@                                   * 00159000
*                     SUBSYS                                          * 00159100
*                     SUBSYSNM                                        * 00159200
*                     TOPOLOGY                                        * 00159300
*                     WORK_MANAGER                                    * 00159400
*              1      REGION_TOKEN                                    * 00159500
*                                                                     * 00159600
*                                                                     * 00159700
*                                                                     * 00159800
*01* CHANGE ACTIVITY:                                                 * 00159900
*                                                                     * 00160000
*   Flag LineItem  FMID    Date   ID    Comment                       * 00160100
*                                                                     * 00160200
*    $L0=WLMP64W  HBB7709 030315 3241NN:  WLM 64-bit support copied   * 00160300
*                                         from IWMCONN  with flag L9  * 00160400
*    $P1=ME01430  HBB7709 040923 3241SW:  Removed xxxxRRRR reason     * 00160500
*                                         code.                       * 00160600
*    $P2=ME01176  HBB7720 041011 3241DW:  Doc changes only.  Service  * 00160700
*                                         names changed to reflect    * 00160800
*                                         the 64bit name.             * 00160900
*    $P3=LRETOK   HBB7760 071018 3241TB:  Added REGION_TOKEN          * 00161000
*                                         parameter.                  * 00161100
****** END OF SPECIFICATIONS *****************************************/ 00161200
*/********************************************************************* 00161300
         MACRO                                                          00161400
&XLABEL  IWM4CON &WORK_MANAGER=,&TOPOLOGY=,&NUMBERASCB=,&EWLM=,        *00161500
               &CONNTKNKEYP=,&CONNTKNKEY=,&ROUTER=,&QUEUE_MANAGER=,    *00161600
               &QMGR_EXIT@=,&SERVER_MANAGER=,&APPLENV=,&DYNAMIC=,      *00161700
               &PARALLEL_EU=,&REGION_TOKEN=,&SERVER_TYPE=,             *00161800
               &MANAGE_TASKS=,&SERVER_LIMIT=,&SERVER_DATA=,            *00161900
               &SRV_MGR_EXIT@=,&EXPTIMPT=,&SUBSYS=,&SUBSYSNM=,&NODENM=,*00162000
               &GROUPNM=,&GROUPNM_LEN=,&CONNTKN=,&RETCODE=,&RSNCODE=,  *00162100
               &PLISTVER=,&MF=                                          00162200
.*                                                                      00162300
*                    MACDATE -04/05/08-<1>                              00162400
.*                                                                      00162500
.*******************************************************************    00162600
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00162700
.*******************************************************************    00162800
                    GBLC  &ZPRINT     YES=PRINT NO=NO PRINT             00162900
                    GBLC  &ZTEST      YES=TEST NO=NO TEST               00163000
                    GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX       00163100
.*                                                                      00163200
                    GBLC  &ZIWM4CON   YES=MACRO USED AT LEAST ONCE      00163300
.*******************************************************************    00163400
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00163500
.*******************************************************************    00163600
                    LCLC  &ZMS        ERROR MESSAGE WORK AREA           00163700
                    LCLC  &ZCNDX      SYSNDX CHARACTERS                 00163800
                    LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED        00163900
                    LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR       00164000
                    LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE       00164100
                    LCLA  &ZAWRK      USED AS A WORK AREA               00164200
                    LCLA  &ZASIZ      USED FOR SIZE OF VALUE            00164300
                    LCLA  &ZN         NUMERIC WORK VARIABLE             00164400
                    LCLC  &ZC         CHARACTER WORK VARIABLE           00164500
                    LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE       00164600
                    LCLA  &ZTLA       VALUE TOO LONG VARIABLE           00164700
                    LCLC  &ZMAC_G     "G" or null                       00164800
&ZMAC_G             SETC  ''                                            00164900
                    LCLC  &ZMAC_LR                                      00165000
&ZMAC_LR            SETC  'LR'                                          00165100
                    LCLC  &ZMAC_L                                       00165200
&ZMAC_L             SETC  'L'                                           00165300
                    LCLC  &ZMAC_ST                                      00165400
&ZMAC_ST            SETC  'ST'                                          00165500
                    LCLA  &ZMACRET    MACRO RETURN CODE                 00165600
&ZMACRET            SETA  0           ASSUME NO ERRORS                  00165700
.*                                                                      00165800
                    LCLC  &ZCSYSLIST(255)       NONXKEY, POS ARRAY      00165900
                    LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()        00166000
                    LCLA  &ZPLLEN     PARAMETER LIST LENGTH             00166100
                    LCLC  &ZENDBASEPL           End of base PL          00166200
                    LCLA  &ZPLWORKA   PARAMETER LIST LENGTH             00166300
.*******************************************************************    00166400
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00166500
.*******************************************************************    00166600
                    LCLA  &ZI         INDEX FOR ARRAY                   00166700
                    LCLA  &ZJ         INDEX FOR PARMS                   00166800
                    LCLA  &ZK         INDEX FOR PARSE                   00166900
                    LCLA  &ZLO        LOW RANGE VALUE                   00167000
                    LCLA  &ZHI        HIGH RANGE VALUE                  00167100
                    LCLC  &ZW         WORK AREA FOR PARM                00167200
.********************************************************************   00167300
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00167400
.********************************************************************   00167500
                    GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL           00167600
                    GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE    00167700
                    GBLA  &SYSALVL    SYSSTATE ARCHLVL                  00167800
                    GBLC  &SYSAM64    SYSSTATE AMODE64                  00167900
.*                                                                      00168000
                    AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED    00168100
                    AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED     00168200
                    SPLEVEL  TEST                                       00168300
.ZSYS2              ANOP  ,                                             00168400
                    AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1         00168500
                    AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1         00168600
                    SYSSTATE TEST                                       00168700
&ZMAC_G             SETC 'G'                                            00168800
&ZMAC_LR            SETC 'LGR'                                          00168900
&ZMAC_L             SETC 'LG'                                           00169000
&ZMAC_ST            SETC 'STG'                                          00169100
                    AGO   .ZSYS4                                        00169200
.ZSYS3              ANOP  ,                                             00169300
&SYSASCE            SETC  'P'         ASSUME SYSSTATE PRIMARY           00169400
.ZSYS4              ANOP  ,                                             00169500
.*******************************************************************    00169600
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00169700
.*******************************************************************    00169800
                    LCLC  &XWORK_MANAGER        ++ VALUE                00169900
                    LCLC  &XTOPOLOGY  ++ NAME                           00170000
                    LCLC  &XNUMBERASCB          ++ NAME                 00170100
                    LCLC  &XEWLM      ++ VALUE                          00170200
                    LCLC  &XCONNTKNKEYP         ++ VALUE                00170300
                    LCLC  &XCONNTKNKEY          ++ NAME                 00170400
                    LCLC  &XROUTER    ++ VALUE                          00170500
                    LCLC  &XQUEUE_MANAGER       ++ VALUE                00170600
                    LCLC  &XQMGR_EXIT@          ++ NAME                 00170700
                    LCLC  &XSERVER_MANAGER      ++ VALUE                00170800
                    LCLC  &XAPPLENV   ++ NAME                           00170900
                    LCLC  &XDYNAMIC   ++ VALUE                          00171000
                    LCLC  &XPARALLEL_EU         ++ NAME                 00171100
                    LCLC  &XREGION_TOKEN        ++ NAME                 00171200
                    LCLC  &XSERVER_TYPE         ++ VALUE                00171300
                    LCLC  &XMANAGE_TASKS        ++ VALUE                00171400
                    LCLC  &XSERVER_LIMIT        ++ NAME                 00171500
                    LCLC  &XSERVER_DATA         ++ NAME                 00171600
                    LCLC  &XSRV_MGR_EXIT@       ++ NAME                 00171700
                    LCLC  &XEXPTIMPT  ++ VALUE                          00171800
                    LCLC  &XSUBSYS    ++ NAME                           00171900
                    LCLC  &XSUBSYSNM  ++ NAME                           00172000
                    LCLC  &XNODENM    ++ NAME                           00172100
                    LCLC  &XGROUPNM   ++ NAME                           00172200
                    LCLC  &XGROUPNM_LEN         ++ NAME                 00172300
                    LCLC  &XCONNTKN   ++ NAME                           00172400
                    LCLC  &XRETCODE   ++ NAME                           00172500
                    LCLC  &XRSNCODE   ++ NAME                           00172600
                    LCLA  &XPLISTVER  ++ VALUE                          00172700
                    LCLC  &XMF        ++ VALUE                          00172800
                    LCLC  &XMFCTRL    ++ NAME                           00172900
                    LCLC  &XMFATTR    ++ VALUE                          00173000
                    LCLC  &XMFSCK     ++ VALUE                          00173100
.*******************************************************************    00173200
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00173300
.*******************************************************************    00173400
                    LCLC  &ZXWORK_MANAGER       ++ INPUT VALUE          00173500
                    LCLC  &ZXTOPOLOGY           ++ INPUT NAME           00173600
                    LCLC  &ZXNUMBERASCB         ++ INPUT NAME           00173700
                    LCLC  &ZXEWLM     ++ INPUT VALUE                    00173800
                    LCLC  &ZXCONNTKNKEYP        ++ INPUT VALUE          00173900
                    LCLC  &ZXCONNTKNKEY         ++ INPUT NAME           00174000
                    LCLC  &ZXROUTER   ++ INPUT VALUE                    00174100
                    LCLC  &ZXQUEUE_MANAGER      ++ INPUT VALUE          00174200
                    LCLC  &ZXQMGR_EXIT@         ++ INPUT NAME           00174300
                    LCLC  &ZXSERVER_MANAGER     ++ INPUT VALUE          00174400
                    LCLC  &ZXAPPLENV  ++ INPUT NAME                     00174500
                    LCLC  &ZXDYNAMIC  ++ INPUT VALUE                    00174600
                    LCLC  &ZXPARALLEL_EU        ++ INPUT NAME           00174700
                    LCLC  &ZXREGION_TOKEN       ++ OUTPUT NAME          00174800
                    LCLC  &ZXSERVER_TYPE        ++ INPUT VALUE          00174900
                    LCLC  &ZXMANAGE_TASKS       ++ INPUT VALUE          00175000
                    LCLC  &ZXSERVER_LIMIT       ++ INPUT NAME           00175100
                    LCLC  &ZXSERVER_DATA        ++ INPUT NAME           00175200
                    LCLC  &ZXSRV_MGR_EXIT@      ++ INPUT NAME           00175300
                    LCLC  &ZXEXPTIMPT           ++ INPUT VALUE          00175400
                    LCLC  &ZXSUBSYS   ++ INPUT NAME                     00175500
                    LCLC  &ZXSUBSYSNM           ++ INPUT NAME           00175600
                    LCLC  &ZXNODENM   ++ INPUT NAME                     00175700
                    LCLC  &ZXGROUPNM  ++ INPUT NAME                     00175800
                    LCLC  &ZXGROUPNM_LEN        ++ INPUT NAME           00175900
                    LCLC  &ZXCONNTKN  ++ OUTPUT NAME                    00176000
                    LCLC  &ZXRETCODE  ++ OUTPUT NAME                    00176100
                    LCLC  &ZXRSNCODE  ++ OUTPUT NAME                    00176200
                    LCLC  &ZXPLISTVER           ++ INPUT VALUE          00176300
                    LCLC  &ZXMF       ++ INPUT VALUE                    00176400
                    LCLC  &ZXMFCTRL   ++ INPUT NAME                     00176500
                    LCLC  &ZXMFATTR   ++ INPUT VALUE                    00176600
                    LCLC  &ZXMFSCK    ++ INPUT VALUE                    00176700
.********************************************************************   00176800
.***AC.PLV01  PROCESS PLISTVER                                      *   00176900
.********************************************************************   00177000
&XPLISTVER      SETA  0                                                 00177100
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00177200
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00177300
&XPLISTVER      SETA  1                                                 00177400
.ZPLV0          ANOP  ,                                                 00177500
.*                                                                      00177600
                AIF   ('&REGION_TOKEN' EQ '').ZPLV1E                    00177700
                AIF   (&XPLISTVER GE 1).ZPLV1E                          00177800
&XPLISTVER      SETA  1                                                 00177900
.ZPLV1E         ANOP  ,                                                 00178000
.*                                                                      00178100
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00178200
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00178300
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00178400
.*-------------------------------------------------------------------   00178500
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00178600
&ZMS            SETC  '"PLISTVER='                                      00178700
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00178800
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00178900
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00179000
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00179100
                AGO   .ZPVCK2                                           00179200
.ZPVCK3         ANOP  ,                                                 00179300
.*-------------------------------------------------------------------   00179400
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00179500
&ZMS            SETC  '"PLISTVER='                                      00179600
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00179700
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00179800
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00179900
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00180000
                AGO   .ZPVCKE                                           00180100
.ZPVCK2         ANOP  ,                                                 00180200
.*-------------------------------------------------------------------   00180300
&ZCVAL          SETC  '&PLISTVER(1)'                                    00180400
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00180500
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00180600
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00180700
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00180800
                AIF   (&ZN LE 1).ZPVCK4A   NOT HIGH                     00180900
.ZPVCK6         ANOP  ,                                                 00181000
&ZMS            SETC  '"PLISTVER='                                      00181100
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00181200
&ZMS            SETC  '&ZMS THE RANGE IS "0-1"'                         00181300
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00181400
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00181500
&XPLISTVER      SETA  1                                                 00181600
                AGO   .ZPVCKE                                           00181700
.*-------------------------------------------------------------------   00181800
.ZPVCK4A        ANOP  ,                                                 00181900
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00182000
&ZMS            SETC  'PLISTVER='                                       00182100
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00182200
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00182300
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00182400
                MNOTE 8,' &ZMS IS REQUIRED.'                            00182500
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00182600
                AGO   .ZPVCK5                                           00182700
.ZPVCK4         ANOP  ,                                                 00182800
&XPLISTVER      SETA  &PLISTVER(1)                                      00182900
.ZPVCK5         ANOP  ,                                                 00183000
.ZPVCKE         ANOP  ,                                                 00183100
.********************************************************************   00183200
.***AG.MF01 PROCESS MF MACRO FORMS                                      00183300
.********************************************************************   00183400
                    ACTR  10000                                         00183500
.*------------------------------------------------------------------    00183600
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00183700
&XMF                SETC  ''          INITIALIZE XVARIABLE              00183800
.*-------------------------------------------------------------------   00183900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00184000
.ZG110              ANOP  ,                                             00184100
&ZTLC               SETC 'S'                                            00184200
                    AIF   ('&MF(1)' NE '&ZTLC').ZG111                   00184300
&XMF                SETC  'S'         SET KEYWORD                       00184400
                    AIF   (N'&MF LE 1).ZG110A   CK NUM                  00184500
&ZMS                SETC  '"MF='                                        00184600
&ZMS                SETC  '&ZMS.&MF"'                                   00184700
&ZMS                SETC  '&ZMS "MF"'                                   00184800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00184900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00185000
.ZG110A             ANOP  ,                                             00185100
.*-------------------------------------------------------------------   00185200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00185300
.ZG111              ANOP  ,                                             00185400
&ZTLC               SETC 'L'                                            00185500
                    AIF   ('&MF(1)' NE '&ZTLC').ZG118                   00185600
&XMF                SETC  'L'         SET KEYWORD                       00185700
                    AIF   (N'&MF LE 3).ZG111A   CK NUM                  00185800
&ZMS                SETC  '"MF='                                        00185900
&ZMS                SETC  '&ZMS.&MF"'                                   00186000
&ZMS                SETC  '&ZMS "MF"'                                   00186100
                    MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'          00186200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00186300
.ZG111A             ANOP  ,                                             00186400
.*-------------------------------------------------------------------   00186500
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00186600
                    AIF   (N'&SYSLIST NE 0).ZG111B  POSITIONALS?        00186700
                    AIF   ('&WORK_MANAGER' NE '').ZG111B  KEYS?         00186800
                    AIF   ('&TOPOLOGY' NE '').ZG111B  KEYS?             00186900
                    AIF   ('&NUMBERASCB' NE '').ZG111B  KEYS?           00187000
                    AIF   ('&EWLM' NE '').ZG111B  KEYS?                 00187100
                    AIF   ('&CONNTKNKEYP' NE '').ZG111B  KEYS?          00187200
                    AIF   ('&CONNTKNKEY' NE '').ZG111B  KEYS?           00187300
                    AIF   ('&ROUTER' NE '').ZG111B  KEYS?               00187400
                    AIF   ('&QUEUE_MANAGER' NE '').ZG111B  KEYS?        00187500
                    AIF   ('&QMGR_EXIT@' NE '').ZG111B  KEYS?           00187600
                    AIF   ('&SERVER_MANAGER' NE '').ZG111B  KEYS?       00187700
                    AIF   ('&APPLENV' NE '').ZG111B  KEYS?              00187800
                    AIF   ('&DYNAMIC' NE '').ZG111B  KEYS?              00187900
                    AIF   ('&PARALLEL_EU' NE '').ZG111B  KEYS?          00188000
                    AIF   ('&REGION_TOKEN' NE '').ZG111B  KEYS?         00188100
                    AIF   ('&SERVER_TYPE' NE '').ZG111B  KEYS?          00188200
                    AIF   ('&MANAGE_TASKS' NE '').ZG111B  KEYS?         00188300
                    AIF   ('&SERVER_LIMIT' NE '').ZG111B  KEYS?         00188400
                    AIF   ('&SERVER_DATA' NE '').ZG111B  KEYS?          00188500
                    AIF   ('&SRV_MGR_EXIT@' NE '').ZG111B  KEYS?        00188600
                    AIF   ('&EXPTIMPT' NE '').ZG111B  KEYS?             00188700
                    AIF   ('&SUBSYS' NE '').ZG111B  KEYS?               00188800
                    AIF   ('&SUBSYSNM' NE '').ZG111B  KEYS?             00188900
                    AIF   ('&NODENM' NE '').ZG111B  KEYS?               00189000
                    AIF   ('&GROUPNM' NE '').ZG111B  KEYS?              00189100
                    AIF   ('&GROUPNM_LEN' NE '').ZG111B  KEYS?          00189200
                    AIF   ('&CONNTKN' NE '').ZG111B  KEYS?              00189300
                    AIF   ('&RETCODE' NE '').ZG111B  KEYS?              00189400
                    AIF   ('&RSNCODE' NE '').ZG111B  KEYS?              00189500
                    AGO    .ZG111C    INVOCATION OKAY                   00189600
.ZG111B             ANOP  ,                                             00189700
&ZMS                SETC  'THE "L" FORM OF "MF"'                        00189800
&ZMS                SETC  '&ZMS CAN ONLY HAVE'                          00189900
&ZMS                SETC  '&ZMS THE "PLISTVER" KEY'                     00190000
                    MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'        00190100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00190200
.ZG111C             ANOP  ,                                             00190300
.*-------------------------------------------------------------------   00190400
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00190500
&ZXMFCTRL           SETC  'INPUT'     SET IN/OUTPUT                     00190600
&XMFCTRL            SETC  '&MF(2,1)'  SET XVARIABLE                     00190700
                    AIF   (N'&MF(2) GT 1).ZG113B  MULTI PARMS           00190800
&XMFCTRL            SETC  '&MF(2)'    SET XVARIABLE                     00190900
.ZG113B             AIF   (K'&MF(2) GT 0).ZG113C                        00191000
&ZXMFCTRL           SETC  ''          RESET IN/OUTPUT                   00191100
&ZMS                SETC  'WHEN "L" IS SPECIFIED'                       00191200
&ZMS                SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'           00191300
                    MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                  00191400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00191500
.ZG113C             ANOP  ,                                             00191600
.*-------------------------------------------------------------------   00191700
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00191800
                    AIF   (K'&ZXMFCTRL LE 0).ZG113P  NOT I/O            00191900
                    AIF   ('&XMFCTRL'(1,1) NE '(').ZG113P               00192000
&ZXMFCTRL           SETC  ''          RESET IN/OUTPUT                   00192100
&ZMS                SETC  '"MF='                                        00192200
&ZMS                SETC  '&ZMS.&MF"'                                   00192300
&ZMS                SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'     00192400
                    MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'             00192500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00192600
.ZG113P             ANOP  ,                                             00192700
.*-------------------------------------------------------------------   00192800
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00192900
&ZXMFATTR           SETC  'INPUT'     SET IN/OUTPUT                     00193000
&XMFATTR            SETC  '0D'                                          00193100
                    AIF   (K'&MF(3) LE 0).ZG116B  PARM                  00193200
&XMFATTR            SETC  '&MF(3,1)'  SET XVARIABLE                     00193300
                    AIF   (N'&MF(3) GT 1).ZG116B  MULTI                 00193400
&XMFATTR            SETC  '&MF(3)'    SET XVARIABLE                     00193500
.ZG116B             ANOP  ,                                             00193600
.*-------------------------------------------------------------------   00193700
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00193800
                    AIF   (K'&ZXMFATTR LE 0).ZG116P  NOT I/O            00193900
                    AIF   ('&XMFATTR'(1,1) NE '(').ZG116P               00194000
&ZXMFATTR           SETC  ''          RESET IN/OUTPUT                   00194100
&ZMS                SETC  '"MF='                                        00194200
&ZMS                SETC  '&ZMS.&MF"'                                   00194300
&ZMS                SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'     00194400
                    MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'             00194500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00194600
.ZG116P             ANOP  ,                                             00194700
.*-------------------------------------------------------------------   00194800
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00194900
                    AIF   (K'&ZXMFATTR LE 0).ZG116S  NOT I/O            00195000
                    AIF   (K'&XMFATTR LE 60).ZG116S  LNG OK             00195100
&ZXMFATTR           SETC  ''          RESET IN/OUTPUT                   00195200
&ZMS                SETC  '"MF='                                        00195300
&ZMS                SETC  '&ZMS.&MF"'                                   00195400
&ZMS                SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'         00195500
                    MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'            00195600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00195700
.ZG116S             ANOP  ,                                             00195800
.*-------------------------------------------------------------------   00195900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00196000
.ZG118              ANOP  ,                                             00196100
&ZTLC               SETC 'E'                                            00196200
                    AIF   ('&MF(1)' NE '&ZTLC').ZG126                   00196300
&XMF                SETC  'E'         SET KEYWORD                       00196400
                    AIF   (N'&MF LE 3).ZG118A   CK NUM                  00196500
&ZMS                SETC  '"MF='                                        00196600
&ZMS                SETC  '&ZMS.&MF"'                                   00196700
&ZMS                SETC  '&ZMS "MF"'                                   00196800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'          00196900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00197000
.ZG118A             ANOP  ,                                             00197100
.*-------------------------------------------------------------------   00197200
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00197300
&ZXMFCTRL           SETC  'INPUT'     SET IN/OUTPUT                     00197400
&XMFCTRL            SETC  '&MF(2,1)'  SET XVARIABLE                     00197500
                    AIF   (N'&MF(2) GT 1).ZG120B  MULTI PARMS           00197600
&XMFCTRL            SETC  '&MF(2)'    SET XVARIABLE                     00197700
.ZG120B             AIF   (K'&MF(2) GT 0).ZG120C                        00197800
&ZXMFCTRL           SETC  ''          RESET IN/OUTPUT                   00197900
&ZMS                SETC  'WHEN "E" IS SPECIFIED'                       00198000
&ZMS                SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'           00198100
                    MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                  00198200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00198300
.ZG120C             ANOP  ,                                             00198400
.*-------------------------------------------------------------------   00198500
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00198600
                    AIF   (K'&ZXMFCTRL LE 0).ZG120R  NOT I/O            00198700
                    AIF   ('&XMFCTRL'(1,1) NE '(').ZG120R               00198800
&ZCGPR              SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                    00198900
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG120P                 00199000
                    AIF   (K'&ZCGPR GT 2).ZG120Q                        00199100
                    AIF   ('&ZCGPR' EQ '0').ZG120Q                      00199200
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00199300
                    AIF   (T'&ZCGPR NE 'N').ZG120Q  INVALID REG NAME    00199400
.ZG120P             ANOP  ,                                             00199500
                    AIF   (T'&ZCGPR NE 'N').ZG120R  NON NUMERIC         00199600
                    AIF   ('&ZCGPR' LT '1').ZG120Q                      00199700
                    AIF   ('&ZCGPR' LE '12').ZG120R                     00199800
.ZG120Q             ANOP  ,                                             00199900
&ZMS                SETC  '"MF='                                        00200000
&ZMS                SETC  '&ZMS.&MF"'                                   00200100
&ZMS                SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'     00200200
                    MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'              00200300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00200400
.ZG120R             ANOP  ,                                             00200500
.*-------------------------------------------------------------------   00200600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00200700
&XMFSCK             SETC  ''          INITIALIZE XVARIABLE              00200800
.ZG124A   AIF   ('&MF(3)' NE 'COMPLETE').ZG125A                         00200900
&XMFSCK             SETC  'COMPLETE'  SET KEYWORD                       00201000
.*-------------------------------------------------------------------   00201100
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00201200
.ZG125A             AIF   (K'&XMFSCK GT 0).ZG125C  KEYWORD              00201300
                    AIF   (K'&MF(3) LE 0).ZG125B                        00201400
&ZMS                SETC  '"MF='                                        00201500
&ZMS                SETC  '&ZMS.&MF"'                                   00201600
&ZMS                SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '     00201700
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00201800
&ZMS                SETC  '&ZMS "COMPLETE".'                            00201900
                    MNOTE 8,' &ZMS '                                    00202000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00202100
.ZG125B             ANOP  ,                                             00202200
&XMFSCK             SETC  'COMPLETE'  SET DEFAULT KEYWORD               00202300
.ZG125C             ANOP  ,                                             00202400
&ZXMFSCK            SETC  'INPUT'     SET IN/OUTPUT                     00202500
.*------------------------------------------------------------------    00202600
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00202700
.ZG126              ANOP  ,                                             00202800
&ZXMF               SETC  'INPUT'     SET IN/OUTPUT                     00202900
                    AIF   (K'&XMF GT 0).ZG126E  VALID ARG               00203000
                    AIF   (T'&MF EQ 'O').ZG126D  OMITTED                00203100
&ZASYSLNDX          SETA  0                                             00203200
.ZG126A             ANOP  ,           POSITIONAL MACRO KEY              00203300
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  00203400
                    AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG126C             00203500
&ZTLC               SETC 'MF'                                           00203600
                    AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG126A    00203700
.ZG126B             ANOP  ,                                             00203800
&ZXMF               SETC  ''          RESET IN/OUTPUT                   00203900
&ZMS                SETC  'THE "MF" KEY'                                00204000
&ZMS                SETC  '&ZMS MUST CONTAIN ONE'                       00204100
                    MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'              00204200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00204300
                    AGO   .ZG126E                                       00204400
.ZG126C             ANOP  ,                                             00204500
&ZXMF               SETC  ''          RESET IN/OUTPUT                   00204600
&ZMS                SETC  '"MF='                                        00204700
&ZMS                SETC  '&ZMS.&MF"'                                   00204800
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00204900
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00205000
&ZMS                SETC  '&ZMS "S",'                                   00205100
&ZMS                SETC  '&ZMS "L",'                                   00205200
&ZMS                SETC  '&ZMS OR "E".'                                00205300
                    MNOTE 8,' &ZMS '                                    00205400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00205500
                    AGO   .ZG126E                                       00205600
.ZG126D             ANOP  ,                                             00205700
&XMF                SETC  'S'         SET DEFAULT KEYWORD               00205800
&XMFSCK             SETC  'COMPLETE'  COMPLETE CHECKING                 00205900
.ZG126E             ANOP  ,                                             00206000
.********************************************************************   00206100
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00206200
.********************************************************************   00206300
                    ACTR  10000                                         00206400
.*-------------------------------------------------------------------   00206500
.***AG.MF03 MF=(SLE)                                                    00206600
                    AIF   ('&XMF' EQ 'L').ZGMFX                         00206700
.*------------------------------------------------------------------    00206800
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00206900
&XWORK_MANAGER      SETC  ''          INITIALIZE XVARIABLE              00207000
.*-------------------------------------------------------------------   00207100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00207200
.ZG3                ANOP  ,                                             00207300
                    AIF   (K'&WORK_MANAGER(1) LE 0).ZG3A                00207400
&ZTLC               SETC 'YES'                                          00207500
                    AIF   ('&WORK_MANAGER(1)' NE '&ZTLC').ZG23          00207600
&XWORK_MANAGER      SETC  'YES'       SET KEYWORD                       00207700
                    AIF   (N'&WORK_MANAGER LE 1).ZG3A  CK NUM           00207800
&ZMS                SETC  '"WORK_MANAGER='                              00207900
&ZMS                SETC  '&ZMS.&WORK_MANAGER"'                         00208000
&ZMS                SETC  '&ZMS "WORK_MANAGER"'                         00208100
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00208200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00208300
.ZG3A               ANOP  ,                                             00208400
.*----------------------------------------------------------------***   00208500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00208600
                    AIF   (N'&TOPOLOGY LE 1).ZG5A  CK NUM               00208700
&ZMS                SETC  '"TOPOLOGY='                                  00208800
&ZMS                SETC  '&ZMS.&TOPOLOGY"'                             00208900
&ZMS                SETC  '&ZMS "TOPOLOGY"'                             00209000
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00209100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00209200
.ZG5A               ANOP  ,                                             00209300
.*-------------------------------------------------------------------   00209400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00209500
&ZXTOPOLOGY         SETC  'INPUT'     SET IN/OUTPUT                     00209600
&XTOPOLOGY          SETC  'NO_TOPOLOGY'                                 00209700
                    AIF   (K'&TOPOLOGY(1) LE 0).ZG5B  PARM              00209800
&XTOPOLOGY          SETC  '&TOPOLOGY(1)'        SET XVARIABLE           00209900
                    AIF   (N'&TOPOLOGY GT 1).ZG5B  MULTI                00210000
&XTOPOLOGY          SETC  '&TOPOLOGY'           SET XVARIABLE           00210100
.ZG5B               ANOP  ,                                             00210200
.*-------------------------------------------------------------------   00210300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00210400
                    AIF   (K'&ZXTOPOLOGY LE 0).ZG5R  NOT I/O            00210500
         AIF   ('&XTOPOLOGY' EQ 'NO_TOPOLOGY').ZG5R                     00210600
                    AIF   ('&XTOPOLOGY'(1,1) NE '(').ZG5R               00210700
&ZCGPR              SETC  '&XTOPOLOGY'(2,K'&XTOPOLOGY-2)                00210800
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                   00210900
                    AIF   (K'&ZCGPR GT 2).ZG5Q                          00211000
                    AIF   ('&ZCGPR' EQ '0').ZG5Q                        00211100
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00211200
                    AIF   (T'&ZCGPR NE 'N').ZG5Q  INVALID REG NAME      00211300
.ZG5P               ANOP  ,                                             00211400
                    AIF   (T'&ZCGPR NE 'N').ZG5R  NON NUMERIC           00211500
                    AIF   ('&ZCGPR' LT '2').ZG5Q                        00211600
                    AIF   ('&ZCGPR' LE '12').ZG5R                       00211700
.ZG5Q               ANOP  ,                                             00211800
&ZMS                SETC  '"TOPOLOGY='                                  00211900
&ZMS                SETC  '&ZMS.&TOPOLOGY"'                             00212000
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00212100
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00212200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00212300
.ZG5R               ANOP  ,                                             00212400
.*----------------------------------------------------------------***   00212500
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00212600
                    AIF   (N'&NUMBERASCB LE 1).ZG7A  CK NUM             00212700
&ZMS                SETC  '"NUMBERASCB='                                00212800
&ZMS                SETC  '&ZMS.&NUMBERASCB"'                           00212900
&ZMS                SETC  '&ZMS "NUMBERASCB"'                           00213000
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00213100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00213200
.ZG7A               ANOP  ,                                             00213300
.*-------------------------------------------------------------------   00213400
.***AG.KXVAR09 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00213500
&ZXNUMBERASCB       SETC  'INPUT'     SET IN/OUTPUT                     00213600
&XNUMBERASCB        SETC  '&NUMBERASCB(1)'      SET XVARIABLE           00213700
                    AIF   (N'&NUMBERASCB GT 1).ZG7B  MULTI PARMS        00213800
&XNUMBERASCB        SETC  '&NUMBERASCB'         SET XVARIABLE           00213900
.ZG7B               AIF   (K'&TOPOLOGY(1) GT 0).ZG7C  KEY               00214000
                    AIF   (K'&NUMBERASCB(1) LE 0).ZG7D  PARM            00214100
&ZMS                SETC  '"NUMBERASCB'                                 00214200
&ZMS                SETC  '&ZMS.=&NUMBERASCB"'                          00214300
&ZMS                SETC  '&ZMS CAN ONLY BE SPECIFIED IF'               00214400
&ZMS                SETC  '&ZMS '                                       00214500
&ZMS                SETC  '&ZMS "TOPOLOGY"'                             00214600
                    MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                  00214700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00214800
                    AGO   .ZG7E                                         00214900
.*                                                                      00215000
.ZG7C               AIF   (K'&NUMBERASCB(1) GT 0).ZG7E  PARM            00215100
&ZXNUMBERASCB       SETC  ''          RESET IN/OUTPUT                   00215200
&ZMS                SETC  ' '                                           00215300
&ZMS                SETC  '&ZMS "NUMBERASCB" KEY AND ITS'               00215400
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00215500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00215600
.ZG7D               ANOP  ,                                             00215700
&XNUMBERASCB        SETC  '0'         SET DEFAULT                       00215800
.ZG7E               ANOP  ,                                             00215900
.*-------------------------------------------------------------------   00216000
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00216100
                    AIF   (K'&ZXNUMBERASCB LE 0).ZG7R  NOT I/O          00216200
                    AIF   ('&XNUMBERASCB'(1,1) NE '(').ZG7R             00216300
&ZCGPR              SETC  '&XNUMBERASCB'(2,K'&XNUMBERASCB-2)            00216400
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG7P                   00216500
                    AIF   (K'&ZCGPR GT 2).ZG7Q                          00216600
                    AIF   ('&ZCGPR' EQ '0').ZG7Q                        00216700
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00216800
                    AIF   (T'&ZCGPR NE 'N').ZG7Q  INVALID REG NAME      00216900
.ZG7P               ANOP  ,                                             00217000
                    AIF   (T'&ZCGPR NE 'N').ZG7R  NON NUMERIC           00217100
                    AIF   ('&ZCGPR' LT '2').ZG7Q                        00217200
                    AIF   ('&ZCGPR' LE '12').ZG7R                       00217300
.ZG7Q               ANOP  ,                                             00217400
&ZMS                SETC  '"NUMBERASCB='                                00217500
&ZMS                SETC  '&ZMS.&NUMBERASCB"'                           00217600
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00217700
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00217800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00217900
.ZG7R               ANOP  ,                                             00218000
.*------------------------------------------------------------------    00218100
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00218200
&XEWLM              SETC  ''          INITIALIZE XVARIABLE              00218300
.*-------------------------------------------------------------------   00218400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00218500
.ZG12               ANOP  ,                                             00218600
                    AIF   (K'&EWLM(1) LE 0).ZG12A                       00218700
&ZTLC               SETC 'NO'                                           00218800
                    AIF   ('&EWLM(1)' NE '&ZTLC').ZG13                  00218900
&XEWLM              SETC  'NO'        SET KEYWORD                       00219000
                    AIF   (N'&EWLM LE 1).ZG12A  CK NUM                  00219100
&ZMS                SETC  '"EWLM='                                      00219200
&ZMS                SETC  '&ZMS.&EWLM"'                                 00219300
&ZMS                SETC  '&ZMS "EWLM"'                                 00219400
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00219500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00219600
.ZG12A              ANOP  ,                                             00219700
.*-------------------------------------------------------------------   00219800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00219900
.ZG13               ANOP  ,                                             00220000
&ZTLC               SETC 'YES'                                          00220100
                    AIF   ('&EWLM(1)' NE '&ZTLC').ZG14                  00220200
&XEWLM              SETC  'YES'       SET KEYWORD                       00220300
                    AIF   (N'&EWLM LE 1).ZG13A  CK NUM                  00220400
&ZMS                SETC  '"EWLM='                                      00220500
&ZMS                SETC  '&ZMS.&EWLM"'                                 00220600
&ZMS                SETC  '&ZMS "EWLM"'                                 00220700
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00220800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00220900
.ZG13A              ANOP  ,                                             00221000
.*------------------------------------------------------------------    00221100
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00221200
.ZG14               ANOP  ,                                             00221300
&ZXEWLM             SETC  'INPUT'     SET IN/OUTPUT                     00221400
                    AIF   (K'&XEWLM GT 0).ZG14E  VALID ARG              00221500
                    AIF   (T'&EWLM EQ 'O').ZG14D  OMITTED               00221600
&ZASYSLNDX          SETA  0                                             00221700
.ZG14A              ANOP  ,           POSITIONAL MACRO KEY              00221800
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  00221900
                    AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG14C              00222000
&ZTLC               SETC 'EWLM'                                         00222100
                    AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG14A     00222200
.ZG14B              ANOP  ,                                             00222300
&ZXEWLM             SETC  ''          RESET IN/OUTPUT                   00222400
&ZMS                SETC  'THE "EWLM" KEY'                              00222500
&ZMS                SETC  '&ZMS MUST CONTAIN ONE'                       00222600
                    MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'              00222700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00222800
                    AGO   .ZG14E                                        00222900
.ZG14C              ANOP  ,                                             00223000
&ZXEWLM             SETC  ''          RESET IN/OUTPUT                   00223100
&ZMS                SETC  '"EWLM='                                      00223200
&ZMS                SETC  '&ZMS.&EWLM"'                                 00223300
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00223400
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00223500
&ZMS                SETC  '&ZMS "NO"'                                   00223600
&ZMS                SETC  '&ZMS OR "YES".'                              00223700
                    MNOTE 8,' &ZMS '                                    00223800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00223900
                    AGO   .ZG14E                                        00224000
.ZG14D              ANOP  ,                                             00224100
&XEWLM              SETC  'NO'        SET DEFAULT KEYWORD               00224200
.ZG14E              ANOP  ,                                             00224300
.*------------------------------------------------------------------    00224400
.***AG.KKCTL01 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00224500
&XCONNTKNKEYP       SETC  ''          INITIALIZE XVARIABLE              00224600
.*-------------------------------------------------------------------   00224700
.***AG.KKCTL02 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00224800
.ZG17               ANOP  ,                                             00224900
                    AIF   (K'&CONNTKNKEYP(1) LE 0).ZG17A                00225000
&ZTLC               SETC 'VALUE'                                        00225100
                    AIF   ('&CONNTKNKEYP(1)' NE '&ZTLC').ZG21           00225200
&XCONNTKNKEYP       SETC  'VALUE'     SET KEYWORD                       00225300
                    AIF   (N'&CONNTKNKEYP LE 1).ZG17A  CK NUM           00225400
&ZMS                SETC  '"CONNTKNKEYP='                               00225500
&ZMS                SETC  '&ZMS.&CONNTKNKEYP"'                          00225600
&ZMS                SETC  '&ZMS "CONNTKNKEYP"'                          00225700
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00225800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00225900
.ZG17A              ANOP  ,                                             00226000
.*----------------------------------------------------------------***   00226100
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00226200
                    AIF   (N'&CONNTKNKEY LE 1).ZG19A  CK NUM            00226300
&ZMS                SETC  '"CONNTKNKEY='                                00226400
&ZMS                SETC  '&ZMS.&CONNTKNKEY"'                           00226500
&ZMS                SETC  '&ZMS "CONNTKNKEY"'                           00226600
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00226700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00226800
.ZG19A              ANOP  ,                                             00226900
.*-------------------------------------------------------------------   00227000
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00227100
&ZXCONNTKNKEY       SETC  'INPUT'     SET IN/OUTPUT                     00227200
&XCONNTKNKEY        SETC  '&CONNTKNKEY(1)'      SET XVARIABLE           00227300
                    AIF   (N'&CONNTKNKEY GT 1).ZG19B  MULTI PARMS       00227400
&XCONNTKNKEY        SETC  '&CONNTKNKEY'         SET XVARIABLE           00227500
.ZG19B              AIF   (K'&CONNTKNKEY(1) GT 0).ZG19C                 00227600
&ZXCONNTKNKEY       SETC  ''          RESET IN/OUTPUT                   00227700
&ZMS                SETC  ' '                                           00227800
&ZMS                SETC  '&ZMS "CONNTKNKEY" KEY AND ITS'               00227900
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00228000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00228100
.ZG19C              ANOP  ,                                             00228200
.*-------------------------------------------------------------------   00228300
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00228400
                    AIF   (K'&ZXCONNTKNKEY LE 0).ZG19R  NOT I/O         00228500
                    AIF   ('&XCONNTKNKEY'(1,1) NE '(').ZG19R            00228600
&ZCGPR              SETC  '&XCONNTKNKEY'(2,K'&XCONNTKNKEY-2)            00228700
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG19P                  00228800
                    AIF   (K'&ZCGPR GT 2).ZG19Q                         00228900
                    AIF   ('&ZCGPR' EQ '0').ZG19Q                       00229000
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00229100
                    AIF   (T'&ZCGPR NE 'N').ZG19Q  INVALID REG NAME     00229200
.ZG19P              ANOP  ,                                             00229300
                    AIF   (T'&ZCGPR NE 'N').ZG19R  NON NUMERIC          00229400
                    AIF   ('&ZCGPR' LT '2').ZG19Q                       00229500
                    AIF   ('&ZCGPR' LE '12').ZG19R                      00229600
.ZG19Q              ANOP  ,                                             00229700
&ZMS                SETC  '"CONNTKNKEY='                                00229800
&ZMS                SETC  '&ZMS.&CONNTKNKEY"'                           00229900
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00230000
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00230100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00230200
.ZG19R              ANOP  ,                                             00230300
.*-------------------------------------------------------------------   00230400
.***AG.KKCTL02 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00230500
.ZG21               ANOP  ,                                             00230600
&ZTLC               SETC 'PSWKEY'                                       00230700
                    AIF   ('&CONNTKNKEYP(1)' NE '&ZTLC').ZG22           00230800
&XCONNTKNKEYP       SETC  'PSWKEY'    SET KEYWORD                       00230900
                    AIF   (N'&CONNTKNKEYP LE 1).ZG21A  CK NUM           00231000
&ZMS                SETC  '"CONNTKNKEYP='                               00231100
&ZMS                SETC  '&ZMS.&CONNTKNKEYP"'                          00231200
&ZMS                SETC  '&ZMS "CONNTKNKEYP"'                          00231300
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00231400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00231500
.ZG21A              ANOP  ,                                             00231600
.*------------------------------------------------------------------    00231700
.***AG.KKCTL03 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00231800
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       00231900
.ZG21A0             AIF   (K'&CONNTKNKEY LE 0).ZG21A1  OK               00232000
&ZCVAL              SETC '&ZCVAL CONNTKNKEY'    INCORRECT KEY USED      00232100
.ZG21A1             AIF   (K'&ZCVAL LE 0).ZG21A2  OK                    00232200
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00232300
&ZMS                SETC  '"CONNTKNKEYP'                                00232400
&ZMS                SETC  '&ZMS.=&CONNTKNKEYP"'                         00232500
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00232600
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00232700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00232800
.ZG21A2             ANOP  ,                                             00232900
.*------------------------------------------------------------------    00233000
.***AG.KKCTL04 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00233100
.ZG22               ANOP  ,                                             00233200
&ZXCONNTKNKEYP      SETC  'INPUT'     SET IN/OUTPUT                     00233300
                    AIF   (K'&XCONNTKNKEYP GT 0).ZG22E  VALID ARG       00233400
                    AIF   (T'&CONNTKNKEYP EQ 'O').ZG22D  OMITTED        00233500
&ZASYSLNDX          SETA  0                                             00233600
.ZG22A              ANOP  ,           POSITIONAL MACRO KEY              00233700
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  00233800
                    AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG22C              00233900
&ZTLC               SETC 'CONNTKNKEYP'                                  00234000
                    AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG22A     00234100
.ZG22B              ANOP  ,                                             00234200
&ZXCONNTKNKEYP      SETC  ''          RESET IN/OUTPUT                   00234300
&ZMS                SETC  'THE "CONNTKNKEYP" KEY'                       00234400
&ZMS                SETC  '&ZMS MUST CONTAIN ONE'                       00234500
                    MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'              00234600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00234700
                    AGO   .ZG22E                                        00234800
.ZG22C              ANOP  ,                                             00234900
&ZXCONNTKNKEYP      SETC  ''          RESET IN/OUTPUT                   00235000
&ZMS                SETC  '"CONNTKNKEYP='                               00235100
&ZMS                SETC  '&ZMS.&CONNTKNKEYP"'                          00235200
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00235300
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00235400
&ZMS                SETC  '&ZMS "VALUE"'                                00235500
&ZMS                SETC  '&ZMS OR "PSWKEY".'                           00235600
                    MNOTE 8,' &ZMS '                                    00235700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00235800
                    AGO   .ZG22E                                        00235900
.ZG22D              ANOP  ,                                             00236000
&XCONNTKNKEYP       SETC  'VALUE'     SET DEFAULT KEYWORD               00236100
.ZG22E              ANOP  ,                                             00236200
.*------------------------------------------------------------------    00236300
.***AG.KKCTL05 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00236400
                    AIF   (K'&CONNTKNKEYP(1) GT 0).ZG22F  PARM          00236500
&XCONNTKNKEYP       SETC  ''          ENSURE NULL KEYWORD               00236600
&ZXCONNTKNKEYP      SETC  ''          RESET IN/OUTPUT                   00236700
&ZMS                SETC  'THE'                                         00236800
&ZMS                SETC  '&ZMS "CONNTKNKEYP" KEY AND ITS'              00236900
&ZMS                SETC  '&ZMS ARGUMENT ARE REQUIRED.'                 00237000
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00237100
&ZMS                SETC  '&ZMS "VALUE"'                                00237200
&ZMS                SETC  '&ZMS OR "PSWKEY".'                           00237300
                    MNOTE 8,' &ZMS '                                    00237400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00237500
.ZG22F              ANOP  ,                                             00237600
.*-------------------------------------------------------------------   00237700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00237800
.ZG23               ANOP  ,                                             00237900
&ZTLC               SETC 'NO'                                           00238000
                    AIF   ('&WORK_MANAGER(1)' NE '&ZTLC').ZG24          00238100
&XWORK_MANAGER      SETC  'NO'        SET KEYWORD                       00238200
                    AIF   (N'&WORK_MANAGER LE 1).ZG23A  CK NUM          00238300
&ZMS                SETC  '"WORK_MANAGER='                              00238400
&ZMS                SETC  '&ZMS.&WORK_MANAGER"'                         00238500
&ZMS                SETC  '&ZMS "WORK_MANAGER"'                         00238600
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00238700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00238800
.ZG23A              ANOP  ,                                             00238900
.*------------------------------------------------------------------    00239000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00239100
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       00239200
.ZG23A0             AIF   (K'&TOPOLOGY LE 0).ZG23A1  OK                 00239300
&ZCVAL              SETC '&ZCVAL TOPOLOGY'      INCORRECT KEY USED      00239400
.ZG23A1             AIF   (K'&NUMBERASCB LE 0).ZG23A2  OK               00239500
&ZCVAL              SETC '&ZCVAL NUMBERASCB'    INCORRECT KEY USED      00239600
.ZG23A2             AIF   (K'&EWLM LE 0).ZG23A3  OK                     00239700
&ZCVAL              SETC '&ZCVAL EWLM'          INCORRECT KEY USED      00239800
.ZG23A3             AIF   (K'&CONNTKNKEYP LE 0).ZG23A4  OK              00239900
&ZCVAL              SETC '&ZCVAL CONNTKNKEYP'   INCORRECT KEY USED      00240000
.ZG23A4             AIF   (K'&CONNTKNKEY LE 0).ZG23A5  OK               00240100
&ZCVAL              SETC '&ZCVAL CONNTKNKEY'    INCORRECT KEY USED      00240200
.ZG23A5             AIF   (K'&ZCVAL LE 0).ZG23A6  OK                    00240300
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00240400
&ZMS                SETC  '"WORK_MANAGER'                               00240500
&ZMS                SETC  '&ZMS.=&WORK_MANAGER"'                        00240600
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00240700
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00240800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00240900
.ZG23A6             ANOP  ,                                             00241000
.*------------------------------------------------------------------    00241100
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00241200
.ZG24               ANOP  ,                                             00241300
&ZXWORK_MANAGER     SETC  'INPUT'     SET IN/OUTPUT                     00241400
                    AIF   (K'&XWORK_MANAGER GT 0).ZG24E  VALID ARG      00241500
                    AIF   (T'&WORK_MANAGER EQ 'O').ZG24D  OMITTED       00241600
&ZASYSLNDX          SETA  0                                             00241700
.ZG24A              ANOP  ,           POSITIONAL MACRO KEY              00241800
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  00241900
                    AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG24C              00242000
&ZTLC               SETC 'WORK_MANAGER'                                 00242100
                    AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG24A     00242200
.ZG24B              ANOP  ,                                             00242300
&ZXWORK_MANAGER     SETC  ''          RESET IN/OUTPUT                   00242400
&ZMS                SETC  'THE "WORK_MANAGER" KEY'                      00242500
&ZMS                SETC  '&ZMS MUST CONTAIN ONE'                       00242600
                    MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'              00242700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00242800
                    AGO   .ZG24E                                        00242900
.ZG24C              ANOP  ,                                             00243000
&ZXWORK_MANAGER     SETC  ''          RESET IN/OUTPUT                   00243100
&ZMS                SETC  '"WORK_MANAGER='                              00243200
&ZMS                SETC  '&ZMS.&WORK_MANAGER"'                         00243300
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00243400
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00243500
&ZMS                SETC  '&ZMS "YES"'                                  00243600
&ZMS                SETC  '&ZMS OR "NO".'                               00243700
                    MNOTE 8,' &ZMS '                                    00243800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00243900
                    AGO   .ZG24E                                        00244000
.ZG24D              ANOP  ,                                             00244100
&XWORK_MANAGER      SETC  'YES'       SET DEFAULT KEYWORD               00244200
.ZG24E              ANOP  ,                                             00244300
.*------------------------------------------------------------------    00244400
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00244500
&XROUTER            SETC  ''          INITIALIZE XVARIABLE              00244600
.*-------------------------------------------------------------------   00244700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00244800
.ZG27               ANOP  ,                                             00244900
                    AIF   (K'&ROUTER(1) LE 0).ZG27A                     00245000
&ZTLC               SETC 'NO'                                           00245100
                    AIF   ('&ROUTER(1)' NE '&ZTLC').ZG36                00245200
&XROUTER            SETC  'NO'        SET KEYWORD                       00245300
                    AIF   (N'&ROUTER LE 1).ZG27A  CK NUM                00245400
&ZMS                SETC  '"ROUTER='                                    00245500
&ZMS                SETC  '&ZMS.&ROUTER"'                               00245600
&ZMS                SETC  '&ZMS "ROUTER"'                               00245700
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00245800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00245900
.ZG27A              ANOP  ,                                             00246000
.*------------------------------------------------------------------    00246100
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00246200
&XQUEUE_MANAGER     SETC  ''          INITIALIZE XVARIABLE              00246300
.*-------------------------------------------------------------------   00246400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00246500
.ZG30               ANOP  ,                                             00246600
                    AIF   (K'&QUEUE_MANAGER(1) LE 0).ZG30A              00246700
&ZTLC               SETC 'NO'                                           00246800
                    AIF   ('&QUEUE_MANAGER(1)' NE '&ZTLC').ZG31         00246900
&XQUEUE_MANAGER     SETC  'NO'        SET KEYWORD                       00247000
                    AIF   (N'&QUEUE_MANAGER LE 1).ZG30A  CK NUM         00247100
&ZMS                SETC  '"QUEUE_MANAGER='                             00247200
&ZMS                SETC  '&ZMS.&QUEUE_MANAGER"'                        00247300
&ZMS                SETC  '&ZMS "QUEUE_MANAGER"'                        00247400
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00247500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00247600
.ZG30A              ANOP  ,                                             00247700
.*------------------------------------------------------------------    00247800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00247900
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       00248000
.ZG30A0             AIF   (K'&QMGR_EXIT@ LE 0).ZG30A1  OK               00248100
&ZCVAL              SETC '&ZCVAL QMGR_EXIT@'    INCORRECT KEY USED      00248200
.ZG30A1             AIF   (K'&ZCVAL LE 0).ZG30A2  OK                    00248300
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00248400
&ZMS                SETC  '"QUEUE_MANAGER'                              00248500
&ZMS                SETC  '&ZMS.=&QUEUE_MANAGER"'                       00248600
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00248700
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00248800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00248900
.ZG30A2             ANOP  ,                                             00249000
.*-------------------------------------------------------------------   00249100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00249200
.ZG31               ANOP  ,                                             00249300
&ZTLC               SETC 'YES'                                          00249400
                    AIF   ('&QUEUE_MANAGER(1)' NE '&ZTLC').ZG35         00249500
&XQUEUE_MANAGER     SETC  'YES'       SET KEYWORD                       00249600
                    AIF   (N'&QUEUE_MANAGER LE 1).ZG31A  CK NUM         00249700
&ZMS                SETC  '"QUEUE_MANAGER='                             00249800
&ZMS                SETC  '&ZMS.&QUEUE_MANAGER"'                        00249900
&ZMS                SETC  '&ZMS "QUEUE_MANAGER"'                        00250000
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00250100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00250200
.ZG31A              ANOP  ,                                             00250300
.*----------------------------------------------------------------***   00250400
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00250500
                    AIF   (N'&QMGR_EXIT@ LE 1).ZG33A  CK NUM            00250600
&ZMS                SETC  '"QMGR_EXIT@='                                00250700
&ZMS                SETC  '&ZMS.&QMGR_EXIT@"'                           00250800
&ZMS                SETC  '&ZMS "QMGR_EXIT@"'                           00250900
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00251000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00251100
.ZG33A              ANOP  ,                                             00251200
.*-------------------------------------------------------------------   00251300
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00251400
&ZXQMGR_EXIT@       SETC  'INPUT'     SET IN/OUTPUT                     00251500
&XQMGR_EXIT@        SETC  'NO_QMGR_EXIT@'                               00251600
                    AIF   (K'&QMGR_EXIT@(1) LE 0).ZG33B  PARM           00251700
&XQMGR_EXIT@        SETC  '&QMGR_EXIT@(1)'      SET XVARIABLE           00251800
                    AIF   (N'&QMGR_EXIT@ GT 1).ZG33B  MULTI             00251900
&XQMGR_EXIT@        SETC  '&QMGR_EXIT@'         SET XVARIABLE           00252000
.ZG33B              ANOP  ,                                             00252100
.*-------------------------------------------------------------------   00252200
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00252300
                    AIF   (K'&ZXQMGR_EXIT@ LE 0).ZG33R  NOT I/O         00252400
         AIF   ('&XQMGR_EXIT@' EQ 'NO_QMGR_EXIT@').ZG33R                00252500
                    AIF   ('&XQMGR_EXIT@'(1,1) NE '(').ZG33R            00252600
&ZCGPR              SETC  '&XQMGR_EXIT@'(2,K'&XQMGR_EXIT@-2)            00252700
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG33P                  00252800
                    AIF   (K'&ZCGPR GT 2).ZG33Q                         00252900
                    AIF   ('&ZCGPR' EQ '0').ZG33Q                       00253000
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00253100
                    AIF   (T'&ZCGPR NE 'N').ZG33Q  INVALID REG NAME     00253200
.ZG33P              ANOP  ,                                             00253300
                    AIF   (T'&ZCGPR NE 'N').ZG33R  NON NUMERIC          00253400
                    AIF   ('&ZCGPR' LT '2').ZG33Q                       00253500
                    AIF   ('&ZCGPR' LE '12').ZG33R                      00253600
.ZG33Q              ANOP  ,                                             00253700
&ZMS                SETC  '"QMGR_EXIT@='                                00253800
&ZMS                SETC  '&ZMS.&QMGR_EXIT@"'                           00253900
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00254000
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00254100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00254200
.ZG33R              ANOP  ,                                             00254300
.*------------------------------------------------------------------    00254400
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00254500
.ZG35               ANOP  ,                                             00254600
&ZXQUEUE_MANAGER    SETC  'INPUT'     SET IN/OUTPUT                     00254700
                    AIF   (K'&XQUEUE_MANAGER GT 0).ZG35E  VALID ARG     00254800
                    AIF   (T'&QUEUE_MANAGER EQ 'O').ZG35D  OMITTED      00254900
&ZASYSLNDX          SETA  0                                             00255000
.ZG35A              ANOP  ,           POSITIONAL MACRO KEY              00255100
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  00255200
                    AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG35C              00255300
&ZTLC               SETC 'QUEUE_MANAGER'                                00255400
                    AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG35A     00255500
.ZG35B              ANOP  ,                                             00255600
&ZXQUEUE_MANAGER    SETC  ''          RESET IN/OUTPUT                   00255700
&ZMS                SETC  'THE "QUEUE_MANAGER" KEY'                     00255800
&ZMS                SETC  '&ZMS MUST CONTAIN ONE'                       00255900
                    MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'              00256000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00256100
                    AGO   .ZG35E                                        00256200
.ZG35C              ANOP  ,                                             00256300
&ZXQUEUE_MANAGER    SETC  ''          RESET IN/OUTPUT                   00256400
&ZMS                SETC  '"QUEUE_MANAGER='                             00256500
&ZMS                SETC  '&ZMS.&QUEUE_MANAGER"'                        00256600
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00256700
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00256800
&ZMS                SETC  '&ZMS "NO"'                                   00256900
&ZMS                SETC  '&ZMS OR "YES".'                              00257000
                    MNOTE 8,' &ZMS '                                    00257100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00257200
                    AGO   .ZG35E                                        00257300
.ZG35D              ANOP  ,                                             00257400
&XQUEUE_MANAGER     SETC  'NO'        SET DEFAULT KEYWORD               00257500
.ZG35E              ANOP  ,                                             00257600
.*-------------------------------------------------------------------   00257700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00257800
.ZG36               ANOP  ,                                             00257900
&ZTLC               SETC 'YES'                                          00258000
                    AIF   ('&ROUTER(1)' NE '&ZTLC').ZG37                00258100
&XROUTER            SETC  'YES'       SET KEYWORD                       00258200
                    AIF   (N'&ROUTER LE 1).ZG36A  CK NUM                00258300
&ZMS                SETC  '"ROUTER='                                    00258400
&ZMS                SETC  '&ZMS.&ROUTER"'                               00258500
&ZMS                SETC  '&ZMS "ROUTER"'                               00258600
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00258700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00258800
.ZG36A              ANOP  ,                                             00258900
.*------------------------------------------------------------------    00259000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00259100
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       00259200
.ZG36A0             AIF   (K'&QUEUE_MANAGER LE 0).ZG36A1  OK            00259300
&ZCVAL              SETC '&ZCVAL QUEUE_MANAGER'  INCORRECT KEY USED     00259400
.ZG36A1             AIF   (K'&QMGR_EXIT@ LE 0).ZG36A2  OK               00259500
&ZCVAL              SETC '&ZCVAL QMGR_EXIT@'    INCORRECT KEY USED      00259600
.ZG36A2             AIF   (K'&ZCVAL LE 0).ZG36A3  OK                    00259700
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00259800
&ZMS                SETC  '"ROUTER'                                     00259900
&ZMS                SETC  '&ZMS.=&ROUTER"'                              00260000
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00260100
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00260200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00260300
.ZG36A3             ANOP  ,                                             00260400
.*------------------------------------------------------------------    00260500
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00260600
.ZG37               ANOP  ,                                             00260700
&ZXROUTER           SETC  'INPUT'     SET IN/OUTPUT                     00260800
                    AIF   (K'&XROUTER GT 0).ZG37E  VALID ARG            00260900
                    AIF   (T'&ROUTER EQ 'O').ZG37D  OMITTED             00261000
&ZASYSLNDX          SETA  0                                             00261100
.ZG37A              ANOP  ,           POSITIONAL MACRO KEY              00261200
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  00261300
                    AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG37C              00261400
&ZTLC               SETC 'ROUTER'                                       00261500
                    AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG37A     00261600
.ZG37B              ANOP  ,                                             00261700
&ZXROUTER           SETC  ''          RESET IN/OUTPUT                   00261800
&ZMS                SETC  'THE "ROUTER" KEY'                            00261900
&ZMS                SETC  '&ZMS MUST CONTAIN ONE'                       00262000
                    MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'              00262100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00262200
                    AGO   .ZG37E                                        00262300
.ZG37C              ANOP  ,                                             00262400
&ZXROUTER           SETC  ''          RESET IN/OUTPUT                   00262500
&ZMS                SETC  '"ROUTER='                                    00262600
&ZMS                SETC  '&ZMS.&ROUTER"'                               00262700
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00262800
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00262900
&ZMS                SETC  '&ZMS "NO"'                                   00263000
&ZMS                SETC  '&ZMS OR "YES".'                              00263100
                    MNOTE 8,' &ZMS '                                    00263200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00263300
                    AGO   .ZG37E                                        00263400
.ZG37D              ANOP  ,                                             00263500
&XROUTER            SETC  'NO'        SET DEFAULT KEYWORD               00263600
.ZG37E              ANOP  ,                                             00263700
.*------------------------------------------------------------------    00263800
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00263900
&XSERVER_MANAGER    SETC  ''          INITIALIZE XVARIABLE              00264000
.*-------------------------------------------------------------------   00264100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00264200
.ZG40               ANOP  ,                                             00264300
                    AIF   (K'&SERVER_MANAGER(1) LE 0).ZG40A             00264400
&ZTLC               SETC 'NO'                                           00264500
                    AIF   ('&SERVER_MANAGER(1)' NE '&ZTLC').ZG41        00264600
&XSERVER_MANAGER    SETC  'NO'        SET KEYWORD                       00264700
                    AIF   (N'&SERVER_MANAGER LE 1).ZG40A  CK NUM        00264800
&ZMS                SETC  '"SERVER_MANAGER='                            00264900
&ZMS                SETC  '&ZMS.&SERVER_MANAGER"'                       00265000
&ZMS                SETC  '&ZMS "SERVER_MANAGER"'                       00265100
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00265200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00265300
.ZG40A              ANOP  ,                                             00265400
.*------------------------------------------------------------------    00265500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00265600
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       00265700
.ZG40A0             AIF   (K'&APPLENV LE 0).ZG40A1  OK                  00265800
&ZCVAL              SETC '&ZCVAL APPLENV'       INCORRECT KEY USED      00265900
.ZG40A1             AIF   (K'&DYNAMIC LE 0).ZG40A2  OK                  00266000
&ZCVAL              SETC '&ZCVAL DYNAMIC'       INCORRECT KEY USED      00266100
.ZG40A2             AIF   (K'&PARALLEL_EU LE 0).ZG40A3  OK              00266200
&ZCVAL              SETC '&ZCVAL PARALLEL_EU'   INCORRECT KEY USED      00266300
.ZG40A3             AIF   (K'&REGION_TOKEN LE 0).ZG40A4  OK             00266400
&ZCVAL              SETC '&ZCVAL REGION_TOKEN'  INCORRECT KEY USED      00266500
.ZG40A4             AIF   (K'&SERVER_TYPE LE 0).ZG40A5  OK              00266600
&ZCVAL              SETC '&ZCVAL SERVER_TYPE'   INCORRECT KEY USED      00266700
.ZG40A5             AIF   (K'&MANAGE_TASKS LE 0).ZG40A6  OK             00266800
&ZCVAL              SETC '&ZCVAL MANAGE_TASKS'  INCORRECT KEY USED      00266900
.ZG40A6             AIF   (K'&SERVER_LIMIT LE 0).ZG40A7  OK             00267000
&ZCVAL              SETC '&ZCVAL SERVER_LIMIT'  INCORRECT KEY USED      00267100
.ZG40A7             AIF   (K'&SERVER_DATA LE 0).ZG40A8  OK              00267200
&ZCVAL              SETC '&ZCVAL SERVER_DATA'   INCORRECT KEY USED      00267300
.ZG40A8             AIF   (K'&SRV_MGR_EXIT@ LE 0).ZG40A9  OK            00267400
&ZCVAL              SETC '&ZCVAL SRV_MGR_EXIT@'  INCORRECT KEY USED     00267500
.ZG40A9             AIF   (K'&ZCVAL LE 0).ZG40A10  OK                   00267600
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00267700
&ZMS                SETC  '"SERVER_MANAGER'                             00267800
&ZMS                SETC  '&ZMS.=&SERVER_MANAGER"'                      00267900
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00268000
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00268100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00268200
.ZG40A10            ANOP  ,                                             00268300
.*-------------------------------------------------------------------   00268400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00268500
.ZG41               ANOP  ,                                             00268600
&ZTLC               SETC 'YES'                                          00268700
                    AIF   ('&SERVER_MANAGER(1)' NE '&ZTLC').ZG75        00268800
&XSERVER_MANAGER    SETC  'YES'       SET KEYWORD                       00268900
                    AIF   (N'&SERVER_MANAGER LE 1).ZG41A  CK NUM        00269000
&ZMS                SETC  '"SERVER_MANAGER='                            00269100
&ZMS                SETC  '&ZMS.&SERVER_MANAGER"'                       00269200
&ZMS                SETC  '&ZMS "SERVER_MANAGER"'                       00269300
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00269400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00269500
.ZG41A              ANOP  ,                                             00269600
.*----------------------------------------------------------------***   00269700
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00269800
                    AIF   (N'&APPLENV LE 1).ZG43A  CK NUM               00269900
&ZMS                SETC  '"APPLENV='                                   00270000
&ZMS                SETC  '&ZMS.&APPLENV"'                              00270100
&ZMS                SETC  '&ZMS "APPLENV"'                              00270200
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00270300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00270400
.ZG43A              ANOP  ,                                             00270500
.*-------------------------------------------------------------------   00270600
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00270700
&ZXAPPLENV          SETC  'INPUT'     SET IN/OUTPUT                     00270800
&XAPPLENV           SETC  '&APPLENV(1)'         SET XVARIABLE           00270900
                    AIF   (N'&APPLENV GT 1).ZG43B  MULTI PARMS          00271000
&XAPPLENV           SETC  '&APPLENV'  SET XVARIABLE                     00271100
.ZG43B              AIF   (K'&APPLENV(1) GT 0).ZG43C                    00271200
&ZXAPPLENV          SETC  ''          RESET IN/OUTPUT                   00271300
&ZMS                SETC  ' '                                           00271400
&ZMS                SETC  '&ZMS "APPLENV" KEY AND ITS'                  00271500
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00271600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00271700
.ZG43C              ANOP  ,                                             00271800
.*-------------------------------------------------------------------   00271900
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00272000
                    AIF   (K'&ZXAPPLENV LE 0).ZG43R  NOT I/O            00272100
                    AIF   ('&XAPPLENV'(1,1) NE '(').ZG43R               00272200
&ZCGPR              SETC  '&XAPPLENV'(2,K'&XAPPLENV-2)                  00272300
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG43P                  00272400
                    AIF   (K'&ZCGPR GT 2).ZG43Q                         00272500
                    AIF   ('&ZCGPR' EQ '0').ZG43Q                       00272600
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00272700
                    AIF   (T'&ZCGPR NE 'N').ZG43Q  INVALID REG NAME     00272800
.ZG43P              ANOP  ,                                             00272900
                    AIF   (T'&ZCGPR NE 'N').ZG43R  NON NUMERIC          00273000
                    AIF   ('&ZCGPR' LT '2').ZG43Q                       00273100
                    AIF   ('&ZCGPR' LE '12').ZG43R                      00273200
.ZG43Q              ANOP  ,                                             00273300
&ZMS                SETC  '"APPLENV='                                   00273400
&ZMS                SETC  '&ZMS.&APPLENV"'                              00273500
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00273600
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00273700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00273800
.ZG43R              ANOP  ,                                             00273900
.*------------------------------------------------------------------    00274000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00274100
&XDYNAMIC           SETC  ''          INITIALIZE XVARIABLE              00274200
.*-------------------------------------------------------------------   00274300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00274400
.ZG47               ANOP  ,                                             00274500
                    AIF   (K'&DYNAMIC(1) LE 0).ZG47A                    00274600
&ZTLC               SETC 'NO'                                           00274700
                    AIF   ('&DYNAMIC(1)' NE '&ZTLC').ZG48               00274800
&XDYNAMIC           SETC  'NO'        SET KEYWORD                       00274900
                    AIF   (N'&DYNAMIC LE 1).ZG47A  CK NUM               00275000
&ZMS                SETC  '"DYNAMIC='                                   00275100
&ZMS                SETC  '&ZMS.&DYNAMIC"'                              00275200
&ZMS                SETC  '&ZMS "DYNAMIC"'                              00275300
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00275400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00275500
.ZG47A              ANOP  ,                                             00275600
.*-------------------------------------------------------------------   00275700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00275800
.ZG48               ANOP  ,                                             00275900
&ZTLC               SETC 'YES'                                          00276000
                    AIF   ('&DYNAMIC(1)' NE '&ZTLC').ZG49               00276100
&XDYNAMIC           SETC  'YES'       SET KEYWORD                       00276200
                    AIF   (N'&DYNAMIC LE 1).ZG48A  CK NUM               00276300
&ZMS                SETC  '"DYNAMIC='                                   00276400
&ZMS                SETC  '&ZMS.&DYNAMIC"'                              00276500
&ZMS                SETC  '&ZMS "DYNAMIC"'                              00276600
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00276700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00276800
.ZG48A              ANOP  ,                                             00276900
.*------------------------------------------------------------------    00277000
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00277100
.ZG49               ANOP  ,                                             00277200
&ZXDYNAMIC          SETC  'INPUT'     SET IN/OUTPUT                     00277300
                    AIF   (K'&XDYNAMIC GT 0).ZG49E  VALID ARG           00277400
                    AIF   (T'&DYNAMIC EQ 'O').ZG49D  OMITTED            00277500
&ZASYSLNDX          SETA  0                                             00277600
.ZG49A              ANOP  ,           POSITIONAL MACRO KEY              00277700
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  00277800
                    AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG49C              00277900
&ZTLC               SETC 'DYNAMIC'                                      00278000
                    AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG49A     00278100
.ZG49B              ANOP  ,                                             00278200
&ZXDYNAMIC          SETC  ''          RESET IN/OUTPUT                   00278300
&ZMS                SETC  'THE "DYNAMIC" KEY'                           00278400
&ZMS                SETC  '&ZMS MUST CONTAIN ONE'                       00278500
                    MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'              00278600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00278700
                    AGO   .ZG49E                                        00278800
.ZG49C              ANOP  ,                                             00278900
&ZXDYNAMIC          SETC  ''          RESET IN/OUTPUT                   00279000
&ZMS                SETC  '"DYNAMIC='                                   00279100
&ZMS                SETC  '&ZMS.&DYNAMIC"'                              00279200
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00279300
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00279400
&ZMS                SETC  '&ZMS "NO"'                                   00279500
&ZMS                SETC  '&ZMS OR "YES".'                              00279600
                    MNOTE 8,' &ZMS '                                    00279700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00279800
                    AGO   .ZG49E                                        00279900
.ZG49D              ANOP  ,                                             00280000
&XDYNAMIC           SETC  'NO'        SET DEFAULT KEYWORD               00280100
.ZG49E              ANOP  ,                                             00280200
.*----------------------------------------------------------------***   00280300
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00280400
                    AIF   (N'&PARALLEL_EU LE 1).ZG51A  CK NUM           00280500
&ZMS                SETC  '"PARALLEL_EU='                               00280600
&ZMS                SETC  '&ZMS.&PARALLEL_EU"'                          00280700
&ZMS                SETC  '&ZMS "PARALLEL_EU"'                          00280800
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00280900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00281000
.ZG51A              ANOP  ,                                             00281100
.*-------------------------------------------------------------------   00281200
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00281300
&ZXPARALLEL_EU      SETC  'INPUT'     SET IN/OUTPUT                     00281400
&XPARALLEL_EU       SETC  '&PARALLEL_EU(1)'     SET XVARIABLE           00281500
                    AIF   (N'&PARALLEL_EU GT 1).ZG51B  MULTI PARMS      00281600
&XPARALLEL_EU       SETC  '&PARALLEL_EU'        SET XVARIABLE           00281700
.ZG51B              AIF   (K'&PARALLEL_EU(1) GT 0).ZG51C                00281800
&ZXPARALLEL_EU      SETC  ''          RESET IN/OUTPUT                   00281900
&ZMS                SETC  ' '                                           00282000
&ZMS                SETC  '&ZMS "PARALLEL_EU" KEY AND ITS'              00282100
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00282200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00282300
.ZG51C              ANOP  ,                                             00282400
.*-------------------------------------------------------------------   00282500
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00282600
                    AIF   (K'&ZXPARALLEL_EU LE 0).ZG51R  NOT I/O        00282700
                    AIF   ('&XPARALLEL_EU'(1,1) NE '(').ZG51R           00282800
&ZCGPR              SETC  '&XPARALLEL_EU'(2,K'&XPARALLEL_EU-2)          00282900
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG51P                  00283000
                    AIF   (K'&ZCGPR GT 2).ZG51Q                         00283100
                    AIF   ('&ZCGPR' EQ '0').ZG51Q                       00283200
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00283300
                    AIF   (T'&ZCGPR NE 'N').ZG51Q  INVALID REG NAME     00283400
.ZG51P              ANOP  ,                                             00283500
                    AIF   (T'&ZCGPR NE 'N').ZG51R  NON NUMERIC          00283600
                    AIF   ('&ZCGPR' LT '2').ZG51Q                       00283700
                    AIF   ('&ZCGPR' LE '12').ZG51R                      00283800
.ZG51Q              ANOP  ,                                             00283900
&ZMS                SETC  '"PARALLEL_EU='                               00284000
&ZMS                SETC  '&ZMS.&PARALLEL_EU"'                          00284100
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00284200
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00284300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00284400
.ZG51R              ANOP  ,                                             00284500
.*----------------------------------------------------------------***   00284600
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00284700
                    AIF   (N'&REGION_TOKEN LE 1).ZG54A  CK NUM          00284800
&ZMS                SETC  '"REGION_TOKEN='                              00284900
&ZMS                SETC  '&ZMS.&REGION_TOKEN"'                         00285000
&ZMS                SETC  '&ZMS "REGION_TOKEN"'                         00285100
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00285200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00285300
.ZG54A              ANOP  ,                                             00285400
.*-------------------------------------------------------------------   00285500
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00285600
                    AIF   (K'&REGION_TOKEN(1) LE 0).ZG54C  NO PARM      00285700
&ZXREGION_TOKEN     SETC  'OUTPUT'    SET OUTPUT                        00285800
&XREGION_TOKEN      SETC  '&REGION_TOKEN(1)'    SET XVARIABLE           00285900
                    AIF   (N'&REGION_TOKEN GT 1).ZG54C                  00286000
&XREGION_TOKEN      SETC  '&REGION_TOKEN'       SET XVARIABLE           00286100
.ZG54C              ANOP  ,                                             00286200
.*-------------------------------------------------------------------   00286300
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00286400
                    AIF   (K'&ZXREGION_TOKEN LE 0).ZG54R  NOT I/O       00286500
                    AIF   ('&XREGION_TOKEN'(1,1) NE '(').ZG54R          00286600
&ZCGPR              SETC  '&XREGION_TOKEN'(2,K'&XREGION_TOKEN-2)        00286700
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG54P                  00286800
                    AIF   (K'&ZCGPR GT 2).ZG54Q                         00286900
                    AIF   ('&ZCGPR' EQ '0').ZG54Q                       00287000
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00287100
                    AIF   (T'&ZCGPR NE 'N').ZG54Q  INVALID REG NAME     00287200
.ZG54P              ANOP  ,                                             00287300
                    AIF   (T'&ZCGPR NE 'N').ZG54R  NON NUMERIC          00287400
                    AIF   ('&ZCGPR' LT '2').ZG54Q                       00287500
                    AIF   ('&ZCGPR' LE '12').ZG54R                      00287600
.ZG54Q              ANOP  ,                                             00287700
&ZMS                SETC  '"REGION_TOKEN='                              00287800
&ZMS                SETC  '&ZMS.&REGION_TOKEN"'                         00287900
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00288000
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00288100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00288200
.ZG54R              ANOP  ,                                             00288300
.*------------------------------------------------------------------    00288400
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00288500
&XSERVER_TYPE       SETC  ''          INITIALIZE XVARIABLE              00288600
.*-------------------------------------------------------------------   00288700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00288800
.ZG58               ANOP  ,                                             00288900
                    AIF   (K'&SERVER_TYPE(1) LE 0).ZG58A                00289000
&ZTLC               SETC 'QUEUE'                                        00289100
                    AIF   ('&SERVER_TYPE(1)' NE '&ZTLC').ZG67           00289200
&XSERVER_TYPE       SETC  'QUEUE'     SET KEYWORD                       00289300
                    AIF   (N'&SERVER_TYPE LE 1).ZG58A  CK NUM           00289400
&ZMS                SETC  '"SERVER_TYPE='                               00289500
&ZMS                SETC  '&ZMS.&SERVER_TYPE"'                          00289600
&ZMS                SETC  '&ZMS "SERVER_TYPE"'                          00289700
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00289800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00289900
.ZG58A              ANOP  ,                                             00290000
.*------------------------------------------------------------------    00290100
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00290200
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       00290300
.ZG58A0             AIF   (K'&SERVER_DATA LE 0).ZG58A1  OK              00290400
&ZCVAL              SETC '&ZCVAL SERVER_DATA'   INCORRECT KEY USED      00290500
.ZG58A1             AIF   (K'&SRV_MGR_EXIT@ LE 0).ZG58A2  OK            00290600
&ZCVAL              SETC '&ZCVAL SRV_MGR_EXIT@'  INCORRECT KEY USED     00290700
.ZG58A2             AIF   (K'&ZCVAL LE 0).ZG58A3  OK                    00290800
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00290900
&ZMS                SETC  '"SERVER_TYPE'                                00291000
&ZMS                SETC  '&ZMS.=&SERVER_TYPE"'                         00291100
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00291200
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00291300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00291400
.ZG58A3             ANOP  ,                                             00291500
.*------------------------------------------------------------------    00291600
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00291700
&XMANAGE_TASKS      SETC  ''          INITIALIZE XVARIABLE              00291800
.*-------------------------------------------------------------------   00291900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00292000
.ZG61               ANOP  ,                                             00292100
                    AIF   (K'&MANAGE_TASKS(1) LE 0).ZG61A               00292200
&ZTLC               SETC 'NO'                                           00292300
                    AIF   ('&MANAGE_TASKS(1)' NE '&ZTLC').ZG62          00292400
&XMANAGE_TASKS      SETC  'NO'        SET KEYWORD                       00292500
                    AIF   (N'&MANAGE_TASKS LE 1).ZG61A  CK NUM          00292600
&ZMS                SETC  '"MANAGE_TASKS='                              00292700
&ZMS                SETC  '&ZMS.&MANAGE_TASKS"'                         00292800
&ZMS                SETC  '&ZMS "MANAGE_TASKS"'                         00292900
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00293000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00293100
.ZG61A              ANOP  ,                                             00293200
.*------------------------------------------------------------------    00293300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00293400
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       00293500
.ZG61A0             AIF   (K'&SERVER_LIMIT LE 0).ZG61A1  OK             00293600
&ZCVAL              SETC '&ZCVAL SERVER_LIMIT'  INCORRECT KEY USED      00293700
.ZG61A1             AIF   (K'&ZCVAL LE 0).ZG61A2  OK                    00293800
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00293900
&ZMS                SETC  '"MANAGE_TASKS'                               00294000
&ZMS                SETC  '&ZMS.=&MANAGE_TASKS"'                        00294100
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00294200
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00294300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00294400
.ZG61A2             ANOP  ,                                             00294500
.*-------------------------------------------------------------------   00294600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00294700
.ZG62               ANOP  ,                                             00294800
&ZTLC               SETC 'YES'                                          00294900
                    AIF   ('&MANAGE_TASKS(1)' NE '&ZTLC').ZG66          00295000
&XMANAGE_TASKS      SETC  'YES'       SET KEYWORD                       00295100
                    AIF   (N'&MANAGE_TASKS LE 1).ZG62A  CK NUM          00295200
&ZMS                SETC  '"MANAGE_TASKS='                              00295300
&ZMS                SETC  '&ZMS.&MANAGE_TASKS"'                         00295400
&ZMS                SETC  '&ZMS "MANAGE_TASKS"'                         00295500
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00295600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00295700
.ZG62A              ANOP  ,                                             00295800
.*----------------------------------------------------------------***   00295900
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00296000
                    AIF   (N'&SERVER_LIMIT LE 1).ZG64A  CK NUM          00296100
&ZMS                SETC  '"SERVER_LIMIT='                              00296200
&ZMS                SETC  '&ZMS.&SERVER_LIMIT"'                         00296300
&ZMS                SETC  '&ZMS "SERVER_LIMIT"'                         00296400
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00296500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00296600
.ZG64A              ANOP  ,                                             00296700
.*-------------------------------------------------------------------   00296800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00296900
&ZXSERVER_LIMIT     SETC  'INPUT'     SET IN/OUTPUT                     00297000
&XSERVER_LIMIT      SETC  '1000'                                        00297100
                    AIF   (K'&SERVER_LIMIT(1) LE 0).ZG64B  PARM         00297200
&XSERVER_LIMIT      SETC  '&SERVER_LIMIT(1)'    SET XVARIABLE           00297300
                    AIF   (N'&SERVER_LIMIT GT 1).ZG64B  MULTI           00297400
&XSERVER_LIMIT      SETC  '&SERVER_LIMIT'       SET XVARIABLE           00297500
.ZG64B              ANOP  ,                                             00297600
.*-------------------------------------------------------------------   00297700
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00297800
                    AIF   (K'&ZXSERVER_LIMIT LE 0).ZG64R  NOT I/O       00297900
                    AIF   ('&XSERVER_LIMIT'(1,1) NE '(').ZG64R          00298000
&ZCGPR              SETC  '&XSERVER_LIMIT'(2,K'&XSERVER_LIMIT-2)        00298100
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG64P                  00298200
                    AIF   (K'&ZCGPR GT 2).ZG64Q                         00298300
                    AIF   ('&ZCGPR' EQ '0').ZG64Q                       00298400
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00298500
                    AIF   (T'&ZCGPR NE 'N').ZG64Q  INVALID REG NAME     00298600
.ZG64P              ANOP  ,                                             00298700
                    AIF   (T'&ZCGPR NE 'N').ZG64R  NON NUMERIC          00298800
                    AIF   ('&ZCGPR' LT '2').ZG64Q                       00298900
                    AIF   ('&ZCGPR' LE '12').ZG64R                      00299000
.ZG64Q              ANOP  ,                                             00299100
&ZMS                SETC  '"SERVER_LIMIT='                              00299200
&ZMS                SETC  '&ZMS.&SERVER_LIMIT"'                         00299300
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00299400
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00299500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00299600
.ZG64R              ANOP  ,                                             00299700
.*------------------------------------------------------------------    00299800
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00299900
.ZG66               ANOP  ,                                             00300000
&ZXMANAGE_TASKS     SETC  'INPUT'     SET IN/OUTPUT                     00300100
                    AIF   (K'&XMANAGE_TASKS GT 0).ZG66E  VALID ARG      00300200
                    AIF   (T'&MANAGE_TASKS EQ 'O').ZG66D  OMITTED       00300300
&ZASYSLNDX          SETA  0                                             00300400
.ZG66A              ANOP  ,           POSITIONAL MACRO KEY              00300500
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  00300600
                    AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG66C              00300700
&ZTLC               SETC 'MANAGE_TASKS'                                 00300800
                    AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG66A     00300900
.ZG66B              ANOP  ,                                             00301000
&ZXMANAGE_TASKS     SETC  ''          RESET IN/OUTPUT                   00301100
&ZMS                SETC  'THE "MANAGE_TASKS" KEY'                      00301200
&ZMS                SETC  '&ZMS MUST CONTAIN ONE'                       00301300
                    MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'              00301400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00301500
                    AGO   .ZG66E                                        00301600
.ZG66C              ANOP  ,                                             00301700
&ZXMANAGE_TASKS     SETC  ''          RESET IN/OUTPUT                   00301800
&ZMS                SETC  '"MANAGE_TASKS='                              00301900
&ZMS                SETC  '&ZMS.&MANAGE_TASKS"'                         00302000
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00302100
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00302200
&ZMS                SETC  '&ZMS "NO"'                                   00302300
&ZMS                SETC  '&ZMS OR "YES".'                              00302400
                    MNOTE 8,' &ZMS '                                    00302500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00302600
                    AGO   .ZG66E                                        00302700
.ZG66D              ANOP  ,                                             00302800
&XMANAGE_TASKS      SETC  'NO'        SET DEFAULT KEYWORD               00302900
.ZG66E              ANOP  ,                                             00303000
.*-------------------------------------------------------------------   00303100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00303200
.ZG67               ANOP  ,                                             00303300
&ZTLC               SETC 'ROUTING'                                      00303400
                    AIF   ('&SERVER_TYPE(1)' NE '&ZTLC').ZG74           00303500
&XSERVER_TYPE       SETC  'ROUTING'   SET KEYWORD                       00303600
                    AIF   (N'&SERVER_TYPE LE 1).ZG67A  CK NUM           00303700
&ZMS                SETC  '"SERVER_TYPE='                               00303800
&ZMS                SETC  '&ZMS.&SERVER_TYPE"'                          00303900
&ZMS                SETC  '&ZMS "SERVER_TYPE"'                          00304000
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00304100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00304200
.ZG67A              ANOP  ,                                             00304300
.*------------------------------------------------------------------    00304400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00304500
&ZCVAL              SETC ''           CLEAR ERROR KEY ACCUMULATOR       00304600
.ZG67A0             AIF   (K'&MANAGE_TASKS LE 0).ZG67A1  OK             00304700
&ZCVAL              SETC '&ZCVAL MANAGE_TASKS'  INCORRECT KEY USED      00304800
.ZG67A1             AIF   (K'&SERVER_LIMIT LE 0).ZG67A2  OK             00304900
&ZCVAL              SETC '&ZCVAL SERVER_LIMIT'  INCORRECT KEY USED      00305000
.ZG67A2             AIF   (K'&ZCVAL LE 0).ZG67A3  OK                    00305100
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)                         00305200
&ZMS                SETC  '"SERVER_TYPE'                                00305300
&ZMS                SETC  '&ZMS.=&SERVER_TYPE"'                         00305400
&ZMS                SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'          00305500
                    MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'          00305600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00305700
.ZG67A3             ANOP  ,                                             00305800
.*----------------------------------------------------------------***   00305900
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00306000
                    AIF   (N'&SERVER_DATA LE 1).ZG69A  CK NUM           00306100
&ZMS                SETC  '"SERVER_DATA='                               00306200
&ZMS                SETC  '&ZMS.&SERVER_DATA"'                          00306300
&ZMS                SETC  '&ZMS "SERVER_DATA"'                          00306400
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00306500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00306600
.ZG69A              ANOP  ,                                             00306700
.*-------------------------------------------------------------------   00306800
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00306900
&ZXSERVER_DATA      SETC  'INPUT'     SET IN/OUTPUT                     00307000
&XSERVER_DATA       SETC  '&SERVER_DATA(1)'     SET XVARIABLE           00307100
                    AIF   (N'&SERVER_DATA GT 1).ZG69B  MULTI PARMS      00307200
&XSERVER_DATA       SETC  '&SERVER_DATA'        SET XVARIABLE           00307300
.ZG69B              AIF   (K'&SERVER_DATA(1) GT 0).ZG69C                00307400
&ZXSERVER_DATA      SETC  ''          RESET IN/OUTPUT                   00307500
&ZMS                SETC  ' '                                           00307600
&ZMS                SETC  '&ZMS "SERVER_DATA" KEY AND ITS'              00307700
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00307800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00307900
.ZG69C              ANOP  ,                                             00308000
.*-------------------------------------------------------------------   00308100
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00308200
                    AIF   (K'&ZXSERVER_DATA LE 0).ZG69R  NOT I/O        00308300
                    AIF   ('&XSERVER_DATA'(1,1) NE '(').ZG69R           00308400
&ZCGPR              SETC  '&XSERVER_DATA'(2,K'&XSERVER_DATA-2)          00308500
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG69P                  00308600
                    AIF   (K'&ZCGPR GT 2).ZG69Q                         00308700
                    AIF   ('&ZCGPR' EQ '0').ZG69Q                       00308800
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00308900
                    AIF   (T'&ZCGPR NE 'N').ZG69Q  INVALID REG NAME     00309000
.ZG69P              ANOP  ,                                             00309100
                    AIF   (T'&ZCGPR NE 'N').ZG69R  NON NUMERIC          00309200
                    AIF   ('&ZCGPR' LT '2').ZG69Q                       00309300
                    AIF   ('&ZCGPR' LE '12').ZG69R                      00309400
.ZG69Q              ANOP  ,                                             00309500
&ZMS                SETC  '"SERVER_DATA='                               00309600
&ZMS                SETC  '&ZMS.&SERVER_DATA"'                          00309700
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00309800
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00309900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00310000
.ZG69R              ANOP  ,                                             00310100
.*----------------------------------------------------------------***   00310200
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00310300
                    AIF   (N'&SRV_MGR_EXIT@ LE 1).ZG72A  CK NUM         00310400
&ZMS                SETC  '"SRV_MGR_EXIT@='                             00310500
&ZMS                SETC  '&ZMS.&SRV_MGR_EXIT@"'                        00310600
&ZMS                SETC  '&ZMS "SRV_MGR_EXIT@"'                        00310700
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00310800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00310900
.ZG72A              ANOP  ,                                             00311000
.*-------------------------------------------------------------------   00311100
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00311200
&ZXSRV_MGR_EXIT@    SETC  'INPUT'     SET IN/OUTPUT                     00311300
&XSRV_MGR_EXIT@     SETC  '&SRV_MGR_EXIT@(1)'   SET XVARIABLE           00311400
                    AIF   (N'&SRV_MGR_EXIT@ GT 1).ZG72B  MULTI PARMS    00311500
&XSRV_MGR_EXIT@     SETC  '&SRV_MGR_EXIT@'      SET XVARIABLE           00311600
.ZG72B              AIF   (K'&SRV_MGR_EXIT@(1) GT 0).ZG72C              00311700
&ZXSRV_MGR_EXIT@    SETC  ''          RESET IN/OUTPUT                   00311800
&ZMS                SETC  ' '                                           00311900
&ZMS                SETC  '&ZMS "SRV_MGR_EXIT@" KEY AND ITS'            00312000
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00312100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00312200
.ZG72C              ANOP  ,                                             00312300
.*-------------------------------------------------------------------   00312400
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00312500
                    AIF   (K'&ZXSRV_MGR_EXIT@ LE 0).ZG72R  NOT I/O      00312600
                    AIF   ('&XSRV_MGR_EXIT@'(1,1) NE '(').ZG72R         00312700
&ZCGPR              SETC  '&XSRV_MGR_EXIT@'(2,K'&XSRV_MGR_EXIT@-2)      00312800
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG72P                  00312900
                    AIF   (K'&ZCGPR GT 2).ZG72Q                         00313000
                    AIF   ('&ZCGPR' EQ '0').ZG72Q                       00313100
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00313200
                    AIF   (T'&ZCGPR NE 'N').ZG72Q  INVALID REG NAME     00313300
.ZG72P              ANOP  ,                                             00313400
                    AIF   (T'&ZCGPR NE 'N').ZG72R  NON NUMERIC          00313500
                    AIF   ('&ZCGPR' LT '2').ZG72Q                       00313600
                    AIF   ('&ZCGPR' LE '12').ZG72R                      00313700
.ZG72Q              ANOP  ,                                             00313800
&ZMS                SETC  '"SRV_MGR_EXIT@='                             00313900
&ZMS                SETC  '&ZMS.&SRV_MGR_EXIT@"'                        00314000
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00314100
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00314200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00314300
.ZG72R              ANOP  ,                                             00314400
.*------------------------------------------------------------------    00314500
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00314600
.ZG74               ANOP  ,                                             00314700
&ZXSERVER_TYPE      SETC  'INPUT'     SET IN/OUTPUT                     00314800
                    AIF   (K'&XSERVER_TYPE GT 0).ZG74E  VALID ARG       00314900
                    AIF   (T'&SERVER_TYPE EQ 'O').ZG74D  OMITTED        00315000
&ZASYSLNDX          SETA  0                                             00315100
.ZG74A              ANOP  ,           POSITIONAL MACRO KEY              00315200
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  00315300
                    AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG74C              00315400
&ZTLC               SETC 'SERVER_TYPE'                                  00315500
                    AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG74A     00315600
.ZG74B              ANOP  ,                                             00315700
&ZXSERVER_TYPE      SETC  ''          RESET IN/OUTPUT                   00315800
&ZMS                SETC  'THE "SERVER_TYPE" KEY'                       00315900
&ZMS                SETC  '&ZMS MUST CONTAIN ONE'                       00316000
                    MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'              00316100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00316200
                    AGO   .ZG74E                                        00316300
.ZG74C              ANOP  ,                                             00316400
&ZXSERVER_TYPE      SETC  ''          RESET IN/OUTPUT                   00316500
&ZMS                SETC  '"SERVER_TYPE='                               00316600
&ZMS                SETC  '&ZMS.&SERVER_TYPE"'                          00316700
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00316800
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00316900
&ZMS                SETC  '&ZMS "QUEUE"'                                00317000
&ZMS                SETC  '&ZMS OR "ROUTING".'                          00317100
                    MNOTE 8,' &ZMS '                                    00317200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00317300
                    AGO   .ZG74E                                        00317400
.ZG74D              ANOP  ,                                             00317500
&XSERVER_TYPE       SETC  'QUEUE'     SET DEFAULT KEYWORD               00317600
.ZG74E              ANOP  ,                                             00317700
.*------------------------------------------------------------------    00317800
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00317900
.ZG75               ANOP  ,                                             00318000
&ZXSERVER_MANAGER   SETC  'INPUT'     SET IN/OUTPUT                     00318100
                    AIF   (K'&XSERVER_MANAGER GT 0).ZG75E  VALID ARG    00318200
                    AIF   (T'&SERVER_MANAGER EQ 'O').ZG75D  OMITTED     00318300
&ZASYSLNDX          SETA  0                                             00318400
.ZG75A              ANOP  ,           POSITIONAL MACRO KEY              00318500
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  00318600
                    AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG75C              00318700
&ZTLC               SETC 'SERVER_MANAGER'                               00318800
                    AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG75A     00318900
.ZG75B              ANOP  ,                                             00319000
&ZXSERVER_MANAGER   SETC  ''          RESET IN/OUTPUT                   00319100
&ZMS                SETC  'THE "SERVER_MANAGER" KEY'                    00319200
&ZMS                SETC  '&ZMS MUST CONTAIN ONE'                       00319300
                    MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'              00319400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00319500
                    AGO   .ZG75E                                        00319600
.ZG75C              ANOP  ,                                             00319700
&ZXSERVER_MANAGER   SETC  ''          RESET IN/OUTPUT                   00319800
&ZMS                SETC  '"SERVER_MANAGER='                            00319900
&ZMS                SETC  '&ZMS.&SERVER_MANAGER"'                       00320000
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00320100
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00320200
&ZMS                SETC  '&ZMS "NO"'                                   00320300
&ZMS                SETC  '&ZMS OR "YES".'                              00320400
                    MNOTE 8,' &ZMS '                                    00320500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00320600
                    AGO   .ZG75E                                        00320700
.ZG75D              ANOP  ,                                             00320800
&XSERVER_MANAGER    SETC  'NO'        SET DEFAULT KEYWORD               00320900
.ZG75E              ANOP  ,                                             00321000
.*------------------------------------------------------------------    00321100
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00321200
&XEXPTIMPT          SETC  ''          INITIALIZE XVARIABLE              00321300
.*-------------------------------------------------------------------   00321400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00321500
.ZG78               ANOP  ,                                             00321600
                    AIF   (K'&EXPTIMPT(1) LE 0).ZG78A                   00321700
&ZTLC               SETC 'NO'                                           00321800
                    AIF   ('&EXPTIMPT(1)' NE '&ZTLC').ZG79              00321900
&XEXPTIMPT          SETC  'NO'        SET KEYWORD                       00322000
                    AIF   (N'&EXPTIMPT LE 1).ZG78A  CK NUM              00322100
&ZMS                SETC  '"EXPTIMPT='                                  00322200
&ZMS                SETC  '&ZMS.&EXPTIMPT"'                             00322300
&ZMS                SETC  '&ZMS "EXPTIMPT"'                             00322400
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00322500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00322600
.ZG78A              ANOP  ,                                             00322700
.*-------------------------------------------------------------------   00322800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00322900
.ZG79               ANOP  ,                                             00323000
&ZTLC               SETC 'YES'                                          00323100
                    AIF   ('&EXPTIMPT(1)' NE '&ZTLC').ZG80              00323200
&XEXPTIMPT          SETC  'YES'       SET KEYWORD                       00323300
                    AIF   (N'&EXPTIMPT LE 1).ZG79A  CK NUM              00323400
&ZMS                SETC  '"EXPTIMPT='                                  00323500
&ZMS                SETC  '&ZMS.&EXPTIMPT"'                             00323600
&ZMS                SETC  '&ZMS "EXPTIMPT"'                             00323700
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00323800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00323900
.ZG79A              ANOP  ,                                             00324000
.*------------------------------------------------------------------    00324100
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00324200
.ZG80               ANOP  ,                                             00324300
&ZXEXPTIMPT         SETC  'INPUT'     SET IN/OUTPUT                     00324400
                    AIF   (K'&XEXPTIMPT GT 0).ZG80E  VALID ARG          00324500
                    AIF   (T'&EXPTIMPT EQ 'O').ZG80D  OMITTED           00324600
&ZASYSLNDX          SETA  0                                             00324700
.ZG80A              ANOP  ,           POSITIONAL MACRO KEY              00324800
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  00324900
                    AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG80C              00325000
&ZTLC               SETC 'EXPTIMPT'                                     00325100
                    AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG80A     00325200
.ZG80B              ANOP  ,                                             00325300
&ZXEXPTIMPT         SETC  ''          RESET IN/OUTPUT                   00325400
&ZMS                SETC  'THE "EXPTIMPT" KEY'                          00325500
&ZMS                SETC  '&ZMS MUST CONTAIN ONE'                       00325600
                    MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'              00325700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00325800
                    AGO   .ZG80E                                        00325900
.ZG80C              ANOP  ,                                             00326000
&ZXEXPTIMPT         SETC  ''          RESET IN/OUTPUT                   00326100
&ZMS                SETC  '"EXPTIMPT='                                  00326200
&ZMS                SETC  '&ZMS.&EXPTIMPT"'                             00326300
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00326400
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00326500
&ZMS                SETC  '&ZMS "NO"'                                   00326600
&ZMS                SETC  '&ZMS OR "YES".'                              00326700
                    MNOTE 8,' &ZMS '                                    00326800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00326900
                    AGO   .ZG80E                                        00327000
.ZG80D              ANOP  ,                                             00327100
&XEXPTIMPT          SETC  'NO'        SET DEFAULT KEYWORD               00327200
.ZG80E              ANOP  ,                                             00327300
.*----------------------------------------------------------------***   00327400
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00327500
                    AIF   (N'&SUBSYS LE 1).ZG82A  CK NUM                00327600
&ZMS                SETC  '"SUBSYS='                                    00327700
&ZMS                SETC  '&ZMS.&SUBSYS"'                               00327800
&ZMS                SETC  '&ZMS "SUBSYS"'                               00327900
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00328000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00328100
.ZG82A              ANOP  ,                                             00328200
.*-------------------------------------------------------------------   00328300
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00328400
&ZXSUBSYS           SETC  'INPUT'     SET IN/OUTPUT                     00328500
&XSUBSYS            SETC  '&SUBSYS(1)'          SET XVARIABLE           00328600
                    AIF   (N'&SUBSYS GT 1).ZG82B  MULTI PARMS           00328700
&XSUBSYS            SETC  '&SUBSYS'   SET XVARIABLE                     00328800
.ZG82B              AIF   (K'&SUBSYS(1) GT 0).ZG82C                     00328900
&ZXSUBSYS           SETC  ''          RESET IN/OUTPUT                   00329000
&ZMS                SETC  ' '                                           00329100
&ZMS                SETC  '&ZMS "SUBSYS" KEY AND ITS'                   00329200
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00329300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00329400
.ZG82C              ANOP  ,                                             00329500
.*-------------------------------------------------------------------   00329600
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00329700
                    AIF   (K'&ZXSUBSYS LE 0).ZG82R  NOT I/O             00329800
                    AIF   ('&XSUBSYS'(1,1) NE '(').ZG82R                00329900
&ZCGPR              SETC  '&XSUBSYS'(2,K'&XSUBSYS-2)                    00330000
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG82P                  00330100
                    AIF   (K'&ZCGPR GT 2).ZG82Q                         00330200
                    AIF   ('&ZCGPR' EQ '0').ZG82Q                       00330300
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00330400
                    AIF   (T'&ZCGPR NE 'N').ZG82Q  INVALID REG NAME     00330500
.ZG82P              ANOP  ,                                             00330600
                    AIF   (T'&ZCGPR NE 'N').ZG82R  NON NUMERIC          00330700
                    AIF   ('&ZCGPR' LT '2').ZG82Q                       00330800
                    AIF   ('&ZCGPR' LE '12').ZG82R                      00330900
.ZG82Q              ANOP  ,                                             00331000
&ZMS                SETC  '"SUBSYS='                                    00331100
&ZMS                SETC  '&ZMS.&SUBSYS"'                               00331200
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00331300
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00331400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00331500
.ZG82R              ANOP  ,                                             00331600
.*----------------------------------------------------------------***   00331700
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00331800
                    AIF   (N'&SUBSYSNM LE 1).ZG85A  CK NUM              00331900
&ZMS                SETC  '"SUBSYSNM='                                  00332000
&ZMS                SETC  '&ZMS.&SUBSYSNM"'                             00332100
&ZMS                SETC  '&ZMS "SUBSYSNM"'                             00332200
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00332300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00332400
.ZG85A              ANOP  ,                                             00332500
.*-------------------------------------------------------------------   00332600
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00332700
&ZXSUBSYSNM         SETC  'INPUT'     SET IN/OUTPUT                     00332800
&XSUBSYSNM          SETC  '&SUBSYSNM(1)'        SET XVARIABLE           00332900
                    AIF   (N'&SUBSYSNM GT 1).ZG85B  MULTI PARMS         00333000
&XSUBSYSNM          SETC  '&SUBSYSNM'           SET XVARIABLE           00333100
.ZG85B              AIF   (K'&SUBSYSNM(1) GT 0).ZG85C                   00333200
&ZXSUBSYSNM         SETC  ''          RESET IN/OUTPUT                   00333300
&ZMS                SETC  ' '                                           00333400
&ZMS                SETC  '&ZMS "SUBSYSNM" KEY AND ITS'                 00333500
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00333600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00333700
.ZG85C              ANOP  ,                                             00333800
.*-------------------------------------------------------------------   00333900
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00334000
                    AIF   (K'&ZXSUBSYSNM LE 0).ZG85R  NOT I/O           00334100
                    AIF   ('&XSUBSYSNM'(1,1) NE '(').ZG85R              00334200
&ZCGPR              SETC  '&XSUBSYSNM'(2,K'&XSUBSYSNM-2)                00334300
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG85P                  00334400
                    AIF   (K'&ZCGPR GT 2).ZG85Q                         00334500
                    AIF   ('&ZCGPR' EQ '0').ZG85Q                       00334600
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00334700
                    AIF   (T'&ZCGPR NE 'N').ZG85Q  INVALID REG NAME     00334800
.ZG85P              ANOP  ,                                             00334900
                    AIF   (T'&ZCGPR NE 'N').ZG85R  NON NUMERIC          00335000
                    AIF   ('&ZCGPR' LT '2').ZG85Q                       00335100
                    AIF   ('&ZCGPR' LE '12').ZG85R                      00335200
.ZG85Q              ANOP  ,                                             00335300
&ZMS                SETC  '"SUBSYSNM='                                  00335400
&ZMS                SETC  '&ZMS.&SUBSYSNM"'                             00335500
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00335600
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00335700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00335800
.ZG85R              ANOP  ,                                             00335900
.*----------------------------------------------------------------***   00336000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00336100
                    AIF   (N'&NODENM LE 1).ZG88A  CK NUM                00336200
&ZMS                SETC  '"NODENM='                                    00336300
&ZMS                SETC  '&ZMS.&NODENM"'                               00336400
&ZMS                SETC  '&ZMS "NODENM"'                               00336500
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00336600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00336700
.ZG88A              ANOP  ,                                             00336800
.*-------------------------------------------------------------------   00336900
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00337000
&ZXNODENM           SETC  'INPUT'     SET IN/OUTPUT                     00337100
&XNODENM            SETC  'NO_NODENM'                                   00337200
                    AIF   (K'&NODENM(1) LE 0).ZG88B  PARM               00337300
&XNODENM            SETC  '&NODENM(1)'          SET XVARIABLE           00337400
                    AIF   (N'&NODENM GT 1).ZG88B  MULTI                 00337500
&XNODENM            SETC  '&NODENM'   SET XVARIABLE                     00337600
.ZG88B              ANOP  ,                                             00337700
.*-------------------------------------------------------------------   00337800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00337900
                    AIF   (K'&ZXNODENM LE 0).ZG88R  NOT I/O             00338000
         AIF   ('&XNODENM' EQ 'NO_NODENM').ZG88R                        00338100
                    AIF   ('&XNODENM'(1,1) NE '(').ZG88R                00338200
&ZCGPR              SETC  '&XNODENM'(2,K'&XNODENM-2)                    00338300
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG88P                  00338400
                    AIF   (K'&ZCGPR GT 2).ZG88Q                         00338500
                    AIF   ('&ZCGPR' EQ '0').ZG88Q                       00338600
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00338700
                    AIF   (T'&ZCGPR NE 'N').ZG88Q  INVALID REG NAME     00338800
.ZG88P              ANOP  ,                                             00338900
                    AIF   (T'&ZCGPR NE 'N').ZG88R  NON NUMERIC          00339000
                    AIF   ('&ZCGPR' LT '2').ZG88Q                       00339100
                    AIF   ('&ZCGPR' LE '12').ZG88R                      00339200
.ZG88Q              ANOP  ,                                             00339300
&ZMS                SETC  '"NODENM='                                    00339400
&ZMS                SETC  '&ZMS.&NODENM"'                               00339500
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00339600
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00339700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00339800
.ZG88R              ANOP  ,                                             00339900
.*----------------------------------------------------------------***   00340000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00340100
                    AIF   (N'&GROUPNM LE 1).ZG91A  CK NUM               00340200
&ZMS                SETC  '"GROUPNM='                                   00340300
&ZMS                SETC  '&ZMS.&GROUPNM"'                              00340400
&ZMS                SETC  '&ZMS "GROUPNM"'                              00340500
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00340600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00340700
.ZG91A              ANOP  ,                                             00340800
.*-------------------------------------------------------------------   00340900
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00341000
&ZXGROUPNM          SETC  'INPUT'     SET IN/OUTPUT                     00341100
&XGROUPNM           SETC  'NO_GROUPNM'                                  00341200
                    AIF   (K'&GROUPNM(1) LE 0).ZG91B  PARM              00341300
&XGROUPNM           SETC  '&GROUPNM(1)'         SET XVARIABLE           00341400
                    AIF   (N'&GROUPNM GT 1).ZG91B  MULTI                00341500
&XGROUPNM           SETC  '&GROUPNM'  SET XVARIABLE                     00341600
.ZG91B              ANOP  ,                                             00341700
.*-------------------------------------------------------------------   00341800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00341900
                    AIF   (K'&ZXGROUPNM LE 0).ZG91R  NOT I/O            00342000
         AIF   ('&XGROUPNM' EQ 'NO_GROUPNM').ZG91R                      00342100
                    AIF   ('&XGROUPNM'(1,1) NE '(').ZG91R               00342200
&ZCGPR              SETC  '&XGROUPNM'(2,K'&XGROUPNM-2)                  00342300
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG91P                  00342400
                    AIF   (K'&ZCGPR GT 2).ZG91Q                         00342500
                    AIF   ('&ZCGPR' EQ '0').ZG91Q                       00342600
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00342700
                    AIF   (T'&ZCGPR NE 'N').ZG91Q  INVALID REG NAME     00342800
.ZG91P              ANOP  ,                                             00342900
                    AIF   (T'&ZCGPR NE 'N').ZG91R  NON NUMERIC          00343000
                    AIF   ('&ZCGPR' LT '2').ZG91Q                       00343100
                    AIF   ('&ZCGPR' LE '12').ZG91R                      00343200
.ZG91Q              ANOP  ,                                             00343300
&ZMS                SETC  '"GROUPNM='                                   00343400
&ZMS                SETC  '&ZMS.&GROUPNM"'                              00343500
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00343600
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00343700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00343800
.ZG91R              ANOP  ,                                             00343900
.*----------------------------------------------------------------***   00344000
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00344100
                    AIF   (N'&GROUPNM_LEN LE 1).ZG93A  CK NUM           00344200
&ZMS                SETC  '"GROUPNM_LEN='                               00344300
&ZMS                SETC  '&ZMS.&GROUPNM_LEN"'                          00344400
&ZMS                SETC  '&ZMS "GROUPNM_LEN"'                          00344500
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00344600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00344700
.ZG93A              ANOP  ,                                             00344800
.*-------------------------------------------------------------------   00344900
.***AG.KXVAR09 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00345000
&ZXGROUPNM_LEN      SETC  'INPUT'     SET IN/OUTPUT                     00345100
&XGROUPNM_LEN       SETC  '&GROUPNM_LEN(1)'     SET XVARIABLE           00345200
                    AIF   (N'&GROUPNM_LEN GT 1).ZG93B  MULTI PARMS      00345300
&XGROUPNM_LEN       SETC  '&GROUPNM_LEN'        SET XVARIABLE           00345400
.ZG93B              AIF   (K'&GROUPNM(1) GT 0).ZG93C  KEY               00345500
                    AIF   (K'&GROUPNM_LEN(1) LE 0).ZG93D  PARM          00345600
&ZMS                SETC  '"GROUPNM_LEN'                                00345700
&ZMS                SETC  '&ZMS.=&GROUPNM_LEN"'                         00345800
&ZMS                SETC  '&ZMS CAN ONLY BE SPECIFIED IF'               00345900
&ZMS                SETC  '&ZMS '                                       00346000
&ZMS                SETC  '&ZMS "GROUPNM"'                              00346100
                    MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                  00346200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00346300
                    AGO   .ZG93E                                        00346400
.*                                                                      00346500
.ZG93C              AIF   (K'&GROUPNM_LEN(1) GT 0).ZG93E  PARM          00346600
&ZXGROUPNM_LEN      SETC  ''          RESET IN/OUTPUT                   00346700
&ZMS                SETC  ' '                                           00346800
&ZMS                SETC  '&ZMS "GROUPNM_LEN" KEY AND ITS'              00346900
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00347000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00347100
.ZG93D              ANOP  ,                                             00347200
&XGROUPNM_LEN       SETC  '0'         SET DEFAULT                       00347300
.ZG93E              ANOP  ,                                             00347400
.*-------------------------------------------------------------------   00347500
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00347600
                    AIF   (K'&ZXGROUPNM_LEN LE 0).ZG93R  NOT I/O        00347700
                    AIF   ('&XGROUPNM_LEN'(1,1) NE '(').ZG93R           00347800
&ZCGPR              SETC  '&XGROUPNM_LEN'(2,K'&XGROUPNM_LEN-2)          00347900
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG93P                  00348000
                    AIF   (K'&ZCGPR GT 2).ZG93Q                         00348100
                    AIF   ('&ZCGPR' EQ '0').ZG93Q                       00348200
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00348300
                    AIF   (T'&ZCGPR NE 'N').ZG93Q  INVALID REG NAME     00348400
.ZG93P              ANOP  ,                                             00348500
                    AIF   (T'&ZCGPR NE 'N').ZG93R  NON NUMERIC          00348600
                    AIF   ('&ZCGPR' LT '2').ZG93Q                       00348700
                    AIF   ('&ZCGPR' LE '12').ZG93R                      00348800
.ZG93Q              ANOP  ,                                             00348900
&ZMS                SETC  '"GROUPNM_LEN='                               00349000
&ZMS                SETC  '&ZMS.&GROUPNM_LEN"'                          00349100
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00349200
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00349300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00349400
.ZG93R              ANOP  ,                                             00349500
.*----------------------------------------------------------------***   00349600
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00349700
                    AIF   (N'&CONNTKN LE 1).ZG97A  CK NUM               00349800
&ZMS                SETC  '"CONNTKN='                                   00349900
&ZMS                SETC  '&ZMS.&CONNTKN"'                              00350000
&ZMS                SETC  '&ZMS "CONNTKN"'                              00350100
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00350200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00350300
.ZG97A              ANOP  ,                                             00350400
.*-------------------------------------------------------------------   00350500
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00350600
&ZXCONNTKN          SETC  'OUTPUT'    SET IN/OUTPUT                     00350700
&XCONNTKN           SETC  '&CONNTKN(1)'         SET XVARIABLE           00350800
                    AIF   (N'&CONNTKN GT 1).ZG97B  MULTI PARMS          00350900
&XCONNTKN           SETC  '&CONNTKN'  SET XVARIABLE                     00351000
.ZG97B              AIF   (K'&CONNTKN(1) GT 0).ZG97C                    00351100
&ZXCONNTKN          SETC  ''          RESET IN/OUTPUT                   00351200
&ZMS                SETC  ' '                                           00351300
&ZMS                SETC  '&ZMS "CONNTKN" KEY AND ITS'                  00351400
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00351500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00351600
.ZG97C              ANOP  ,                                             00351700
.*-------------------------------------------------------------------   00351800
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00351900
                    AIF   (K'&ZXCONNTKN LE 0).ZG97R  NOT I/O            00352000
                    AIF   ('&XCONNTKN'(1,1) NE '(').ZG97R               00352100
&ZCGPR              SETC  '&XCONNTKN'(2,K'&XCONNTKN-2)                  00352200
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG97P                  00352300
                    AIF   (K'&ZCGPR GT 2).ZG97Q                         00352400
                    AIF   ('&ZCGPR' EQ '0').ZG97Q                       00352500
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00352600
                    AIF   (T'&ZCGPR NE 'N').ZG97Q  INVALID REG NAME     00352700
.ZG97P              ANOP  ,                                             00352800
                    AIF   (T'&ZCGPR NE 'N').ZG97R  NON NUMERIC          00352900
                    AIF   ('&ZCGPR' LT '2').ZG97Q                       00353000
                    AIF   ('&ZCGPR' LE '12').ZG97R                      00353100
.ZG97Q              ANOP  ,                                             00353200
&ZMS                SETC  '"CONNTKN='                                   00353300
&ZMS                SETC  '&ZMS.&CONNTKN"'                              00353400
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00353500
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00353600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00353700
.ZG97R              ANOP  ,                                             00353800
.*----------------------------------------------------------------***   00353900
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00354000
                    AIF   (N'&RETCODE LE 1).ZG100A  CK NUM              00354100
&ZMS                SETC  '"RETCODE='                                   00354200
&ZMS                SETC  '&ZMS.&RETCODE"'                              00354300
&ZMS                SETC  '&ZMS "RETCODE"'                              00354400
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00354500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00354600
.ZG100A             ANOP  ,                                             00354700
.*-------------------------------------------------------------------   00354800
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00354900
                    AIF   (K'&RETCODE(1) LE 0).ZG100C  NO PARM          00355000
&ZXRETCODE          SETC  'OUTPUT'    SET OUTPUT                        00355100
&XRETCODE           SETC  '&RETCODE(1)'         SET XVARIABLE           00355200
                    AIF   (N'&RETCODE GT 1).ZG100C                      00355300
&XRETCODE           SETC  '&RETCODE'  SET XVARIABLE                     00355400
.ZG100C             ANOP  ,                                             00355500
.*-------------------------------------------------------------------   00355600
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00355700
                    AIF   (K'&ZXRETCODE LE 0).ZG100R  NOT I/O           00355800
                    AIF   ('&XRETCODE'(1,1) NE '(').ZG100R              00355900
&ZCGPR              SETC  '&XRETCODE'(2,K'&XRETCODE-2)                  00356000
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG100P                 00356100
                    AIF   (K'&ZCGPR GT 2).ZG100Q                        00356200
                    AIF   ('&ZCGPR' EQ '0').ZG100Q                      00356300
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00356400
                    AIF   (T'&ZCGPR NE 'N').ZG100Q  INVALID REG NAME    00356500
.ZG100P             ANOP  ,                                             00356600
                    AIF   (T'&ZCGPR NE 'N').ZG100R  NON NUMERIC         00356700
                    AIF   ('&ZCGPR' EQ '15').ZG100R                     00356800
                    AIF   ('&ZCGPR' LT '2').ZG100Q                      00356900
                    AIF   ('&ZCGPR' LE '12').ZG100R                     00357000
.ZG100Q             ANOP  ,                                             00357100
&ZMS                SETC  '"RETCODE='                                   00357200
&ZMS                SETC  '&ZMS.&RETCODE"'                              00357300
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00357400
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12) OR (15).'      00357500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00357600
.ZG100R             ANOP  ,                                             00357700
.*----------------------------------------------------------------***   00357800
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00357900
                    AIF   (N'&RSNCODE LE 1).ZG103A  CK NUM              00358000
&ZMS                SETC  '"RSNCODE='                                   00358100
&ZMS                SETC  '&ZMS.&RSNCODE"'                              00358200
&ZMS                SETC  '&ZMS "RSNCODE"'                              00358300
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00358400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00358500
.ZG103A             ANOP  ,                                             00358600
.*-------------------------------------------------------------------   00358700
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00358800
                    AIF   (K'&RSNCODE(1) LE 0).ZG103C  NO PARM          00358900
&ZXRSNCODE          SETC  'OUTPUT'    SET OUTPUT                        00359000
&XRSNCODE           SETC  '&RSNCODE(1)'         SET XVARIABLE           00359100
                    AIF   (N'&RSNCODE GT 1).ZG103C                      00359200
&XRSNCODE           SETC  '&RSNCODE'  SET XVARIABLE                     00359300
.ZG103C             ANOP  ,                                             00359400
.*-------------------------------------------------------------------   00359500
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00359600
                    AIF   (K'&ZXRSNCODE LE 0).ZG103R  NOT I/O           00359700
                    AIF   ('&XRSNCODE'(1,1) NE '(').ZG103R              00359800
&ZCGPR              SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                  00359900
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG103P                 00360000
                    AIF   (K'&ZCGPR GT 2).ZG103Q                        00360100
                    AIF   ('&ZCGPR' EQ '0').ZG103R                      00360200
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00360300
                    AIF   (T'&ZCGPR NE 'N').ZG103Q  INVALID REG NAME    00360400
.ZG103P             ANOP  ,                                             00360500
                    AIF   (T'&ZCGPR NE 'N').ZG103R  NON NUMERIC         00360600
                    AIF   ('&ZCGPR' EQ '0').ZG103R                      00360700
                    AIF   ('&ZCGPR' LT '2').ZG103Q                      00360800
                    AIF   ('&ZCGPR' LE '12').ZG103R                     00360900
.ZG103Q             ANOP  ,                                             00361000
&ZMS                SETC  '"RSNCODE='                                   00361100
&ZMS                SETC  '&ZMS.&RSNCODE"'                              00361200
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00361300
                    MNOTE 8,' &ZMS IN THE RANGE (0) OR (2)-(12).'       00361400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00361500
.ZG103R             ANOP  ,                                             00361600
.******************************************************************     00361700
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00361800
.******************************************************************     00361900
                    ACTR  10000                                         00362000
.*----------------------------------------------------------------***   00362100
.***AH.P02 EXTRA POSITIONALS                                            00362200
                    AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS          00362300
                    AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL          00362400
                    AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL      00362500
                    AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL       00362600
.ZGLISTX1           ANOP  ,                                             00362700
&ZCVAL              SETC  ''          ERROR FIELD                       00362800
&ZAWRK              SETA  0           POSITIONAL NUMBER                 00362900
.ZGLIST2            ANOP  ,                                             00363000
&ZAWRK              SETA  &ZAWRK+1    NEXT POSITIONAL                   00363100
                    AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE          00363200
&ZCVAL              SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA               00363300
                    AGO   .ZGLIST2                                      00363400
.*                                                                      00363500
.ZGLIST3            ANOP  ,                                             00363600
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)  STRIP COMMA            00363700
&ZMS                SETC  'POSITIONAL ARGUMENT(S),'                     00363800
&ZMS                SETC  '&ZMS "&ZCVAL"'                               00363900
&ZMS                SETC  '&ZMS CANNOT BE USED.'                        00364000
&ZMS                SETC  '&ZMS NO POSITIONAL ARGUMENTS'                00364100
                    MNOTE 8,' &ZMS ARE ALLOWED.'                        00364200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00364300
.ZGLISTX            ANOP  ,                                             00364400
&ZASYSLNDX          SETA  0                                             00364500
.*-------------------------------------------------------------------   00364600
.***AG.MF04 MF=(SLE)                                                    00364700
.ZGMFX              ANOP  ,           END OF FULL SYNTAX CHECK          00364800
.*******************************************************************    00364900
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00365000
.*******************************************************************    00365100
                    AIF   (&ZMACRET NE 0).ZLX2  ERROR DETECTED          00365200
.*******************************************************************    00365300
.***AE.01  START OF IWM4CON MACRO CODE                                  00365400
.*******************************************************************    00365500
                    LCLC  &M0M0001                 NAME                 00365600
&M0M0001            SETC  '&XLABEL'                SET NAME             00365700
                    AIF   (K'&XLABEL NE 0).XLAB2                        00365800
&M0M0001            SETC  'M00M&SYSNDX'            DEFAULT NAME         00365900
.*                                                                      00366000
.XLAB2              ANOP  ,                                             00366100
                    AIF   ('&XMF' EQ 'L').XLAB3                         00366200
&M0M0001 DS    0H                             IWM4CON-1                 00366300
.XLAB3              ANOP  ,                                             00366400
.*******************************************************************    00366500
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00366600
.*******************************************************************    00366700
              PUSH  PRINT                                               00366800
                    AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON    00366900
                    PRINT OFF         ++ PR01                           00367000
                    AGO   .ZPRNTXX                                      00367100
.ZPRINTX            PRINT ON                                            00367200
.ZPRNTXX            ANOP  ,                                             00367300
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00367400
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00367500
.********************************************************************   00367600
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00367700
.********************************************************************   00367800
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00367900
                      LCLA  &ZOPN1         INVOCATION INDEX             00368000
                      LCLC  &ZOPL(4095)    LABEL                        00368100
                      LCLC  &ZOPO(4095)    OPERATION                    00368200
                      LCLC  &ZOPV(4095)    VALUE                        00368300
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00368400
.*                                                                      00368500
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00368600
.******************************************************************     00368700
.***AL.L10 IWM4CON FMT=LIST MF=S!L PARAMETERS                           00368800
.******************************************************************     00368900
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00369000
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00369100
&XMFCTRL              SETC  '#Z'.'&SYSNDX'.'A'                          00369200
&XMFATTR              SETC  '0D'                                        00369300
.*                                                                      00369400
&ZOPN                 SETA  &ZOPN+1                                     00369500
&ZOPL(&ZOPN)          SETC  ' '                                         00369600
&ZOPO(&ZOPN)          SETC  'CNOP'                                      00369700
&ZOPV(&ZOPN)          SETC  '4,8'                                       00369800
&ZOPN                 SETA  &ZOPN+1                                     00369900
&ZOPL(&ZOPN)          SETC  ' '                                         00370000
&ZOPO(&ZOPN)          SETC  'BRAS'                                      00370100
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              00370200
&ZOPD(&ZOPN)          SETC  '++ IWM4CON ARG PARMS'                      00370300
.*                                                                      00370400
&ZOPN                 SETA  &ZOPN+1                                     00370500
&ZOPL(&ZOPN)          SETC  ' '                                         00370600
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00370700
&ZOPV(&ZOPN)          SETC  '1'                                         00370800
&ZOPD(&ZOPN)          SETC  ' '                                         00370900
.*                                                                      00371000
.ZLMFSL2              ANOP  ,                                           00371100
.*-------------------------------------------------------------------   00371200
.***AM.L00  IWM4CON FMT=LIST name                                       00371300
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00371400
&ZOPN                 SETA &ZOPN+1                                      00371500
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00371600
&ZOPO(&ZOPN)          SETC 'EQU'                                        00371700
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00371800
&ZOPD(&ZOPN)          SETC '++ IWM4CON NAME'                            00371900
.ZLMFSL2M             ANOP  ,                                           00372000
.*-------------------------------------------------------------------   00372100
.***AM.L01  IWM4CON FMT=LIST PARAMETERS                                 00372200
&ZOPN                 SETA &ZOPN+1                                      00372300
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00372400
&ZOPO(&ZOPN)          SETC 'DS'                                         00372500
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00372600
&ZOPD(&ZOPN)          SETC '++ IWM4CON PARM LIST'                       00372700
.*-------------------------------------------------------------------   00372800
.***AM.L02 XVERSION XL1                                                 00372900
&ZOPN                 SETA &ZOPN+1                                      00373000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00373100
&ZOPO(&ZOPN)          SETC 'DS'                                         00373200
&ZOPV(&ZOPN)          SETC 'XL1'                                        00373300
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00373400
.*-------------------------------------------------------------------   00373500
.***AM.L03 XCONNECT_OPTIONS BL.8                                        00373600
&ZOPN                 SETA &ZOPN+1                                      00373700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCONNECT_OPTIONS'                 00373800
&ZOPO(&ZOPN)          SETC 'DS'                                         00373900
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00374000
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00374100
.*                                                                      00374200
&ZOPN                 SETA  &ZOPN+1                                     00374300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XCONNTKNKEYP_VALUE'              00374400
&ZOPO(&ZOPN)          SETC  'EQU'                                       00374500
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00374600
&ZOPD(&ZOPN)          SETC  '++ XCONNTKNKEYP.'                          00374700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).VALUE'                        00374800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00374900
.*                                                                      00375000
&ZOPN                 SETA  &ZOPN+1                                     00375100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._IWM4CON'                         00375200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00375300
&ZOPV(&ZOPN)          SETC  'B''00000001'''                             00375400
&ZOPD(&ZOPN)          SETC  '++ MACUSED.'                               00375500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).IWM4CON'                      00375600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00375700
.*-------------------------------------------------------------------   00375800
.***AM.L09  XRSV0002 CL1                                                00375900
&ZOPN                 SETA &ZOPN+1                                      00376000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0002'                         00376100
&ZOPO(&ZOPN)          SETC 'DS'                                         00376200
&ZOPV(&ZOPN)          SETC 'CL1'                                        00376300
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00376400
.*-------------------------------------------------------------------   00376500
.***AM.L09  XCONNTKNKEY BL.8                                            00376600
&ZOPN                 SETA &ZOPN+1                                      00376700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCONNTKNKEY'                      00376800
&ZOPO(&ZOPN)          SETC 'DS'                                         00376900
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00377000
&ZOPD(&ZOPN)          SETC '++ &ZXCONNTKNKEY '                          00377100
.*-------------------------------------------------------------------   00377200
.***AM.L09  XSUBSYS CL4                                                 00377300
&ZOPN                 SETA &ZOPN+1                                      00377400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSUBSYS'                          00377500
&ZOPO(&ZOPN)          SETC 'DS'                                         00377600
&ZOPV(&ZOPN)          SETC 'CL4'                                        00377700
&ZOPD(&ZOPN)          SETC '++ &ZXSUBSYS '                              00377800
.*-------------------------------------------------------------------   00377900
.***AM.L09  XRSV0008 CL4                                                00378000
&ZOPN                 SETA &ZOPN+1                                      00378100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0008'                         00378200
&ZOPO(&ZOPN)          SETC 'DS'                                         00378300
&ZOPV(&ZOPN)          SETC 'CL4'                                        00378400
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00378500
.*-------------------------------------------------------------------   00378600
.***AM.L09  XRSV000C CL4                                                00378700
&ZOPN                 SETA &ZOPN+1                                      00378800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV000C'                         00378900
&ZOPO(&ZOPN)          SETC 'DS'                                         00379000
&ZOPV(&ZOPN)          SETC 'CL4'                                        00379100
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00379200
.*-------------------------------------------------------------------   00379300
.***AM.L09  XNUMBERASCB F                                               00379400
&ZOPN                 SETA &ZOPN+1                                      00379500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XNUMBERASCB'                      00379600
&ZOPO(&ZOPN)          SETC 'DS'                                         00379700
&ZOPV(&ZOPN)          SETC 'F'                                          00379800
&ZOPD(&ZOPN)          SETC '++ &ZXNUMBERASCB '                          00379900
.*-------------------------------------------------------------------   00380000
.***AM.L09  XRSV0014 CL4                                                00380100
&ZOPN                 SETA &ZOPN+1                                      00380200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0014'                         00380300
&ZOPO(&ZOPN)          SETC 'DS'                                         00380400
&ZOPV(&ZOPN)          SETC 'CL4'                                        00380500
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00380600
.*-------------------------------------------------------------------   00380700
.***AM.L09  XRSV0018 CL4                                                00380800
&ZOPN                 SETA &ZOPN+1                                      00380900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0018'                         00381000
&ZOPO(&ZOPN)          SETC 'DS'                                         00381100
&ZOPV(&ZOPN)          SETC 'CL4'                                        00381200
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00381300
.*-------------------------------------------------------------------   00381400
.***AM.L09  XCONNTKN BL.32                                              00381500
&ZOPN                 SETA &ZOPN+1                                      00381600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCONNTKN'                         00381700
&ZOPO(&ZOPN)          SETC 'DS'                                         00381800
&ZOPV(&ZOPN)          SETC 'BL.32'                                      00381900
&ZOPD(&ZOPN)          SETC '++ &ZXCONNTKN '                             00382000
.*-------------------------------------------------------------------   00382100
.***AM.L09  XQMGR_EXIT@ A                                               00382200
&ZOPN                 SETA &ZOPN+1                                      00382300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XQMGR_EXIT@'                      00382400
&ZOPO(&ZOPN)          SETC 'DS'                                         00382500
&ZOPV(&ZOPN)          SETC 'A'                                          00382600
&ZOPD(&ZOPN)          SETC '++ &ZXQMGR_EXIT@ '                          00382700
.*-------------------------------------------------------------------   00382800
.***AM.L09  XPLISTLEN XL2                                               00382900
&ZOPN                 SETA &ZOPN+1                                      00383000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPLISTLEN'                        00383100
&ZOPO(&ZOPN)          SETC 'DS'                                         00383200
&ZOPV(&ZOPN)          SETC 'XL2'                                        00383300
&ZOPD(&ZOPN)          SETC '++ INPUT '                                  00383400
.*-------------------------------------------------------------------   00383500
.***AM.L03 XMANAGER_OPTIONS BL.8                                        00383600
&ZOPN                 SETA &ZOPN+1                                      00383700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMANAGER_OPTIONS'                 00383800
&ZOPO(&ZOPN)          SETC 'DS'                                         00383900
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00384000
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00384100
.*                                                                      00384200
&ZOPN                 SETA  &ZOPN+1                                     00384300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XWORK_MANAGER_NO'                00384400
&ZOPO(&ZOPN)          SETC  'EQU'                                       00384500
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00384600
&ZOPD(&ZOPN)          SETC  '++ XWORK_MANAGER.'                         00384700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).NO'                           00384800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00384900
.*                                                                      00385000
&ZOPN                 SETA  &ZOPN+1                                     00385100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XQUEUE_MANAGER_YES'              00385200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00385300
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00385400
&ZOPD(&ZOPN)          SETC  '++ XQUEUE_MANAGER.'                        00385500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00385600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00385700
.*                                                                      00385800
&ZOPN                 SETA  &ZOPN+1                                     00385900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSERVER_MANAGER_YES'             00386000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00386100
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             00386200
&ZOPD(&ZOPN)          SETC  '++ XSERVER_MANAGER.'                       00386300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00386400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00386500
.*                                                                      00386600
&ZOPN                 SETA  &ZOPN+1                                     00386700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XROUTER_YES'                     00386800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00386900
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             00387000
&ZOPD(&ZOPN)          SETC  '++ XROUTER.'                               00387100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00387200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00387300
.*                                                                      00387400
&ZOPN                 SETA  &ZOPN+1                                     00387500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSERVER_TYPE_QUEUE'              00387600
&ZOPO(&ZOPN)          SETC  'EQU'                                       00387700
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             00387800
&ZOPD(&ZOPN)          SETC  '++ XSERVER_TYPE.'                          00387900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).QUEUE'                        00388000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00388100
.*                                                                      00388200
&ZOPN                 SETA  &ZOPN+1                                     00388300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSERVER_TYPE_ROUTING'            00388400
&ZOPO(&ZOPN)          SETC  'EQU'                                       00388500
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             00388600
&ZOPD(&ZOPN)          SETC  '++ XSERVER_TYPE.'                          00388700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ROUTING'                      00388800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00388900
.*                                                                      00389000
&ZOPN                 SETA  &ZOPN+1                                     00389100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XEXPTIMPT_YES'                   00389200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00389300
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             00389400
&ZOPD(&ZOPN)          SETC  '++ XEXPTIMPT.'                             00389500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00389600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00389700
.*                                                                      00389800
&ZOPN                 SETA  &ZOPN+1                                     00389900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMANAGE_TASKS_YES'               00390000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00390100
&ZOPV(&ZOPN)          SETC  'B''00000001'''                             00390200
&ZOPD(&ZOPN)          SETC  '++ XMANAGE_TASKS.'                         00390300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00390400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00390500
.*-------------------------------------------------------------------   00390600
.***AM.L03 XMANAGER_OPT2 BL.8                                           00390700
&ZOPN                 SETA &ZOPN+1                                      00390800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMANAGER_OPT2'                    00390900
&ZOPO(&ZOPN)          SETC 'DS'                                         00391000
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00391100
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00391200
.*                                                                      00391300
&ZOPN                 SETA  &ZOPN+1                                     00391400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XDYNAMIC_YES'                    00391500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00391600
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00391700
&ZOPD(&ZOPN)          SETC  '++ XDYNAMIC.'                              00391800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00391900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00392000
.*                                                                      00392100
&ZOPN                 SETA  &ZOPN+1                                     00392200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XEWLM_YES'                       00392300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00392400
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00392500
&ZOPD(&ZOPN)          SETC  '++ XEWLM.'                                 00392600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00392700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00392800
.*-------------------------------------------------------------------   00392900
.***AM.L09  XRSV0028 CL4                                                00393000
&ZOPN                 SETA &ZOPN+1                                      00393100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0028'                         00393200
&ZOPO(&ZOPN)          SETC 'DS'                                         00393300
&ZOPV(&ZOPN)          SETC 'CL4'                                        00393400
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00393500
.*-------------------------------------------------------------------   00393600
.***AM.L09  XPARALLEL_EU F                                              00393700
&ZOPN                 SETA &ZOPN+1                                      00393800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPARALLEL_EU'                     00393900
&ZOPO(&ZOPN)          SETC 'DS'                                         00394000
&ZOPV(&ZOPN)          SETC 'F'                                          00394100
&ZOPD(&ZOPN)          SETC '++ &ZXPARALLEL_EU '                         00394200
.*-------------------------------------------------------------------   00394300
.***AM.L09  XRSV0030 CL4                                                00394400
&ZOPN                 SETA &ZOPN+1                                      00394500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0030'                         00394600
&ZOPO(&ZOPN)          SETC 'DS'                                         00394700
&ZOPV(&ZOPN)          SETC 'CL4'                                        00394800
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00394900
.*-------------------------------------------------------------------   00395000
.***AM.L09  XSRV_MGR_EXIT@ A                                            00395100
&ZOPN                 SETA &ZOPN+1                                      00395200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSRV_MGR_EXIT@'                   00395300
&ZOPO(&ZOPN)          SETC 'DS'                                         00395400
&ZOPV(&ZOPN)          SETC 'A'                                          00395500
&ZOPD(&ZOPN)          SETC '++ &ZXSRV_MGR_EXIT@ '                       00395600
.*-------------------------------------------------------------------   00395700
.***AM.L09  XSERVER_LIMIT F                                             00395800
&ZOPN                 SETA &ZOPN+1                                      00395900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSERVER_LIMIT'                    00396000
&ZOPO(&ZOPN)          SETC 'DS'                                         00396100
&ZOPV(&ZOPN)          SETC 'F'                                          00396200
&ZOPD(&ZOPN)          SETC '++ &ZXSERVER_LIMIT '                        00396300
.*-------------------------------------------------------------------   00396400
.***AM.L09  XRSV003C CL4                                                00396500
&ZOPN                 SETA &ZOPN+1                                      00396600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV003C'                         00396700
&ZOPO(&ZOPN)          SETC 'DS'                                         00396800
&ZOPV(&ZOPN)          SETC 'CL4'                                        00396900
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00397000
.*-------------------------------------------------------------------   00397100
.***AM.L09  XRSV0040 CL4                                                00397200
&ZOPN                 SETA &ZOPN+1                                      00397300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0040'                         00397400
&ZOPO(&ZOPN)          SETC 'DS'                                         00397500
&ZOPV(&ZOPN)          SETC 'CL4'                                        00397600
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00397700
.*-------------------------------------------------------------------   00397800
.***AM.L09  XGROUPNM_LEN F                                              00397900
&ZOPN                 SETA &ZOPN+1                                      00398000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XGROUPNM_LEN'                     00398100
&ZOPO(&ZOPN)          SETC 'DS'                                         00398200
&ZOPV(&ZOPN)          SETC 'F'                                          00398300
&ZOPD(&ZOPN)          SETC '++ &ZXGROUPNM_LEN '                         00398400
.*-------------------------------------------------------------------   00398500
.***AM.L09 ADDR64 XSUBSYSNM AD                                          00398600
&ZOPN                 SETA &ZOPN+1                                      00398700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSUBSYSNM_ADDR64'                 00398800
&ZOPO(&ZOPN)          SETC 'DS'                                         00398900
&ZOPV(&ZOPN)          SETC 'AD'                                         00399000
&ZOPD(&ZOPN)          SETC '++ &ZXSUBSYSNM ADDR64'                      00399100
.*-------------------------------------------------------------------   00399200
.***AM.L09 ADDR64 XTOPOLOGY AD                                          00399300
&ZOPN                 SETA &ZOPN+1                                      00399400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XTOPOLOGY_ADDR64'                 00399500
&ZOPO(&ZOPN)          SETC 'DS'                                         00399600
&ZOPV(&ZOPN)          SETC 'AD'                                         00399700
&ZOPD(&ZOPN)          SETC '++ &ZXTOPOLOGY ADDR64'                      00399800
.*-------------------------------------------------------------------   00399900
.***AM.L09 ADDR64 XAPPLENV AD                                           00400000
&ZOPN                 SETA &ZOPN+1                                      00400100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XAPPLENV_ADDR64'                  00400200
&ZOPO(&ZOPN)          SETC 'DS'                                         00400300
&ZOPV(&ZOPN)          SETC 'AD'                                         00400400
&ZOPD(&ZOPN)          SETC '++ &ZXAPPLENV ADDR64'                       00400500
.*-------------------------------------------------------------------   00400600
.***AM.L09 ADDR64 XSERVER_DATA AD                                       00400700
&ZOPN                 SETA &ZOPN+1                                      00400800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSERVER_DATA_ADDR64'              00400900
&ZOPO(&ZOPN)          SETC 'DS'                                         00401000
&ZOPV(&ZOPN)          SETC 'AD'                                         00401100
&ZOPD(&ZOPN)          SETC '++ &ZXSERVER_DATA ADDR64'                   00401200
.*-------------------------------------------------------------------   00401300
.***AM.L09 ADDR64 XNODENM AD                                            00401400
&ZOPN                 SETA &ZOPN+1                                      00401500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XNODENM_ADDR64'                   00401600
&ZOPO(&ZOPN)          SETC 'DS'                                         00401700
&ZOPV(&ZOPN)          SETC 'AD'                                         00401800
&ZOPD(&ZOPN)          SETC '++ &ZXNODENM ADDR64'                        00401900
.*-------------------------------------------------------------------   00402000
.***AM.L09 ADDR64 XGROUPNM AD                                           00402100
&ZOPN                 SETA &ZOPN+1                                      00402200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XGROUPNM_ADDR64'                  00402300
&ZOPO(&ZOPN)          SETC 'DS'                                         00402400
&ZOPV(&ZOPN)          SETC 'AD'                                         00402500
&ZOPD(&ZOPN)          SETC '++ &ZXGROUPNM ADDR64'                       00402600
.*-------------------------------------------------------------------   00402700
.***AM.MLM2 SAVED LOCATION COUNTER                                      00402800
                      AIF  (&XPLISTVER GE 1).ZL41LA                     00402900
                      AIF  ('&ZENDBASEPL' NE '').ZL41LA                 00403000
&ZENDBASEPL           SETC 'YES'                                        00403100
&ZOPN                 SETA &ZOPN+1                                      00403200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00403300
&ZOPO(&ZOPN)          SETC 'EQU'                                        00403400
&ZOPV(&ZOPN)          SETC '*'                                          00403500
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00403600
.ZL41LA               ANOP  ,                                           00403700
.*-------------------------------------------------------------------   00403800
.***AM.LVER1                                                            00403900
                      AIF  (&XPLISTVER LT 1).ZL41L                      00404000
.*-------------------------------------------------------------------   00404100
.*-------------------------------------------------------------------   00404200
.***AM.L09  XREGION_TOKEN CL16                                          00404300
&ZOPN                 SETA &ZOPN+1                                      00404400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREGION_TOKEN'                    00404500
&ZOPO(&ZOPN)          SETC 'DS'                                         00404600
&ZOPV(&ZOPN)          SETC 'CL16'                                       00404700
&ZOPD(&ZOPN)          SETC '++ &ZXREGION_TOKEN '                        00404800
.*-------------------------------------------------------------------   00404900
.***AM.LVER2                                                            00405000
.ZL41L                ANOP  ,                                           00405100
.*-------------------------------------------------------------------   00405200
.*-------------------------------------------------------------------   00405300
.***AM.L10 END OF IWM4CON LIST PARAMETERS                               00405400
&ZOPN                 SETA &ZOPN+1                                      00405500
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00405600
&ZOPO(&ZOPN)          SETC 'EQU'                                        00405700
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00405800
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00405900
.*                                                                      00406000
&ZOPN                 SETA &ZOPN+1                                      00406100
&ZOPL(&ZOPN)          SETC ' '                                          00406200
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00406300
&ZOPV(&ZOPN)          SETC '1'                                          00406400
&ZOPD(&ZOPN)          SETC ' '                                          00406500
.*-------------------------------------------------------------------   00406600
.***AL.L12 IWM4CON FMT=LIST MF=S!L PARAMETERS                           00406700
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00406800
.*                                                                      00406900
&ZOPN                 SETA  &ZOPN+1                                     00407000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00407100
&ZOPO(&ZOPN)          SETC  'DC'                                        00407200
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00407300
&ZOPD(&ZOPN)          SETC  '++ IWM4CON ARG PARMS'                      00407400
.*                                                                      00407500
.ZLMFSLX              ANOP  ,                                           00407600
.*-------------------------------------------------------------------   00407700
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00407800
&ZPLLEN               SETA 120                                          00407900
.*                                                                      00408000
                      AIF  (&XPLISTVER LT 1).ZLLEN2Z                    00408100
&ZPLLEN               SETA 136                                          00408200
.ZLLEN2Z              ANOP  ,                                           00408300
.*                                                                      00408400
.******************************************************************     00408500
.***AI.L01 IWM4CON FMT=LIST FILL IN PARAMETER AREA                      00408600
.******************************************************************     00408700
                      ACTR  10000                                       00408800
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00408900
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00409000
&ZCVAL                SETC  'LAE'          XAX MODE                     00409100
.ZIMFXA               ANOP ,                                            00409200
.*                                                                      00409300
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00409400
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00409500
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00409600
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00409700
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00409800
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00409900
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00410000
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00410100
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00410200
&ZOPN                 SETA  &ZOPN+1                                     00410300
&ZOPL(&ZOPN)          SETC  ' '                                         00410400
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00410500
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00410600
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00410700
                      AGO   .ZIMFNX                                     00410800
.*                                                                      00410900
.ZIMFN2               ANOP ,                                            00411000
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     00411100
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  00411200
&ZOPN                 SETA  &ZOPN+1                                     00411300
&ZOPL(&ZOPN)          SETC  ' '                                         00411400
&ZOPO(&ZOPN)          SETC  'LAE'                                       00411500
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  00411600
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00411700
                      AGO   .ZIMFNX                                     00411800
.ZIMFNX1              ANOP ,                                            00411900
&ZOPN                 SETA  &ZOPN+1                                     00412000
&ZOPL(&ZOPN)          SETC  ' '                                         00412100
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00412200
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00412300
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00412400
.ZIMFNX               ANOP ,                                            00412500
.********************************************************************   00412600
.***AI.L02 IWM4CON FMT=LIST INITIALIZE PARAMETER AREA                   00412700
.********************************************************************   00412800
.***AI.L03 MF=(SLE)                                                     00412900
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00413000
.*                                                                      00413100
&ZOPN                 SETA  &ZOPN+1                                     00413200
&ZOPL(&ZOPN)          SETC  ' '                                         00413300
&ZOPO(&ZOPN)          SETC  'XC'                                        00413400
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00413500
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00413600
.ZIMFLX               ANOP  ,                                           00413700
.*-------------------------------------------------------------------   00413800
.***AI.L04A XVERSION XL1                                                00413900
                      AIF   (&XPLISTVER EQ 0).ZIMFVW                    00414000
&ZOPN                 SETA  &ZOPN+1                                     00414100
&ZOPL(&ZOPN)          SETC  ' '                                         00414200
&ZOPO(&ZOPN)          SETC  'MVI'                                       00414300
&ZOPV(&ZOPN)          SETC  '0(1),&XPLISTVER'                           00414400
&ZOPD(&ZOPN)          SETC  '++ INPUT XVERSION XL1'                     00414500
.ZIMFVW               ANOP  ,                                           00414600
.*-------------------------------------------------------------------   00414700
.***AI.L05 XCONNECT_OPTIONS BL1                                         00414800
&ZW                   SETC  ''                                          00414900
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00415000
.*-------------------------------------------------------------------   00415100
.***AI.L08 XCONNECT_OPTIONS "VALUE"                                     00415200
.***      BL1'1XXXXXXX'                                                 00415300
         AIF   ('&XCONNTKNKEYP' NE 'VALUE').ZI3A                        00415400
&ZW                   SETC  '&ZW.1'                                     00415500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00415600
                      AGO   .ZI3C                                       00415700
.*                                                                      00415800
.ZI3A                 ANOP  ,                                           00415900
&ZW                   SETC  '&ZW.0'                                     00416000
.ZI3C                 ANOP  ,                                           00416100
.*-------------------------------------------------------------------   00416200
.***AI.L08 XCONNECT_OPTIONS "IWM4CON"                                   00416300
.***      BL1'XXXXXXX1'                                                 00416400
&ZW                   SETC  '&ZW.0000001'                               00416500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00416600
.*-------------------------------------------------------------------   00416700
.***AI.L11 XCONNECT_OPTIONS BL1                                         00416800
                      AIF   ('&ZCLNG' NE 'YES').ZI4E  ALL ZERO BITS     00416900
&ZOPN                 SETA  &ZOPN+1                                     00417000
&ZOPL(&ZOPN)          SETC  ' '                                         00417100
&ZOPO(&ZOPN)          SETC  'OI'                                        00417200
&ZOPV(&ZOPN)          SETC  '1(1),B''&ZW'''                             00417300
&ZOPD(&ZOPN)          SETC  '++ 126 BL1'                                00417400
.ZI4E                 ANOP  ,                                           00417500
.*-------------------------------------------------------------------   00417600
.***AI.L25  XCONNTKNKEY XL1                                             00417700
                      AIF   ('&ZXCONNTKNKEY' EQ '').ZI6E                00417800
                      AIF   ('&ZXCONNTKNKEY' EQ 'OUTPUT').ZI6E          00417900
&ZCGPR                SETC  '&XCONNTKNKEY'                              00418000
.*                                                                      00418100
                      AIF   ('&XCONNTKNKEY'(1,1) NE '(').ZI6B           00418200
&ZCGPR   SETC  '0('.'&XCONNTKNKEY'(2,K'&XCONNTKNKEY-2).')'              00418300
                      AGO   .ZI6D                                       00418400
.ZI6B                 ANOP  ,                                           00418500
.*                                                                      00418600
&ZC                   SETC  '&XCONNTKNKEY'(1,1)                         00418700
                      AIF   (T'&ZC NE 'N').ZI6D                         00418800
&ZC                   SETC  '&XCONNTKNKEY'                              00418900
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI6D                00419000
&ZCGPR                SETC  '=BL1''&XCONNTKNKEY'''                      00419100
.*                                                                      00419200
.ZI6D                 ANOP  ,                                           00419300
.*                                                                      00419400
&ZOPN                 SETA  &ZOPN+1                                     00419500
&ZOPL(&ZOPN)          SETC  ' '                                         00419600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00419700
&ZOPV(&ZOPN)          SETC  '3(1,1),&ZCGPR'                             00419800
&ZOPD(&ZOPN)          SETC  '++ &ZXCONNTKNKEY XCONNTKNKEY'              00419900
.*                                                                      00420000
.ZI6E                 ANOP  ,                                           00420100
.*-------------------------------------------------------------------   00420200
.***AI.L25  XSUBSYS CL4                                                 00420300
                      AIF   ('&ZXSUBSYS' EQ '').ZI7E                    00420400
                      AIF   ('&ZXSUBSYS' EQ 'OUTPUT').ZI7E              00420500
&ZCGPR                SETC  '&XSUBSYS'                                  00420600
.*                                                                      00420700
                      AIF   ('&XSUBSYS'(1,1) NE '(').ZI7B               00420800
&ZCGPR   SETC  '0('.'&XSUBSYS'(2,K'&XSUBSYS-2).')'                      00420900
.ZI7B                 ANOP  ,                                           00421000
.*                                                                      00421100
&ZOPN                 SETA  &ZOPN+1                                     00421200
&ZOPL(&ZOPN)          SETC  ' '                                         00421300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00421400
&ZOPV(&ZOPN)          SETC  '4(4,1),&ZCGPR'                             00421500
&ZOPD(&ZOPN)          SETC  '++ &ZXSUBSYS XSUBSYS'                      00421600
.*                                                                      00421700
.ZI7E                 ANOP  ,                                           00421800
.*-------------------------------------------------------------------   00421900
.***AI.L25  XNUMBERASCB F                                               00422000
                      AIF   ('&ZXNUMBERASCB' EQ '').ZI10E               00422100
                      AIF   ('&ZXNUMBERASCB' EQ 'OUTPUT').ZI10E         00422200
&ZCGPR                SETC  '&XNUMBERASCB'                              00422300
.*                                                                      00422400
                      AIF   ('&XNUMBERASCB'(1,1) NE '(').ZI10B          00422500
&ZCGPR   SETC  '0('.'&XNUMBERASCB'(2,K'&XNUMBERASCB-2).')'              00422600
                      AGO   .ZI10D                                      00422700
.ZI10B                ANOP  ,                                           00422800
.*                                                                      00422900
&ZC                   SETC  '&XNUMBERASCB'(1,1)                         00423000
                      AIF   (T'&ZC NE 'N').ZI10D                        00423100
&ZC                   SETC  '&XNUMBERASCB'                              00423200
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI10D               00423300
&ZCGPR                SETC  '=FL4''&XNUMBERASCB'''                      00423400
.*                                                                      00423500
.ZI10D                ANOP  ,                                           00423600
.*                                                                      00423700
&ZOPN                 SETA  &ZOPN+1                                     00423800
&ZOPL(&ZOPN)          SETC  ' '                                         00423900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00424000
&ZOPV(&ZOPN)          SETC  '16(4,1),&ZCGPR'                            00424100
&ZOPD(&ZOPN)          SETC  '++ &ZXNUMBERASCB XNUMBERASCB'              00424200
.*                                                                      00424300
.ZI10E                ANOP  ,                                           00424400
.*-------------------------------------------------------------------   00424500
.***AI.L18  XQMGR_EXIT@ AL4                                             00424600
         AIF   ('&XQMGR_EXIT@' NE 'NO_QMGR_EXIT@').ZI14                 00424700
&ZXQMGR_EXIT@         SETC  ''             RESET INPUT/OUTPUT           00424800
.ZI14                 ANOP  ,                                           00424900
.*-------------------------------------------------------------------   00425000
.***AI.L25  XQMGR_EXIT@ AL4                                             00425100
                      AIF   ('&ZXQMGR_EXIT@' EQ '').ZI14E               00425200
                      AIF   ('&ZXQMGR_EXIT@' EQ 'OUTPUT').ZI14E         00425300
&ZCGPR                SETC  '&XQMGR_EXIT@'                              00425400
.*                                                                      00425500
                      AIF   ('&XQMGR_EXIT@'(1,1) NE '(').ZI14B          00425600
&ZCGPR   SETC  '0('.'&XQMGR_EXIT@'(2,K'&XQMGR_EXIT@-2).')'              00425700
                      AGO   .ZI14D                                      00425800
.ZI14B                ANOP  ,                                           00425900
.*                                                                      00426000
&ZC                   SETC  '&XQMGR_EXIT@'(1,1)                         00426100
                      AIF   (T'&ZC NE 'N').ZI14D                        00426200
&ZC                   SETC  '&XQMGR_EXIT@'                              00426300
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI14D               00426400
&ZCGPR                SETC  '=AL4(&XQMGR_EXIT@)'                        00426500
.*                                                                      00426600
.ZI14D                ANOP  ,                                           00426700
.*                                                                      00426800
&ZOPN                 SETA  &ZOPN+1                                     00426900
&ZOPL(&ZOPN)          SETC  ' '                                         00427000
&ZOPO(&ZOPN)          SETC  'MVC'                                       00427100
&ZOPV(&ZOPN)          SETC  '32(4,1),&ZCGPR'                            00427200
&ZOPD(&ZOPN)          SETC  '++ &ZXQMGR_EXIT@ XQMGR_EXIT@'              00427300
.*                                                                      00427400
.ZI14E                ANOP  ,                                           00427500
.*-------------------------------------------------------------------   00427600
.***AI.L04 XPLISTLEN XL2                                                00427700
&ZOPN                 SETA  &ZOPN+1                                     00427800
&ZOPL(&ZOPN)          SETC  ' '                                         00427900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00428000
&ZOPV(&ZOPN)          SETC  '36(2,1),=AL2(&ZPLLEN)'                     00428100
&ZOPD(&ZOPN)          SETC  '++ INPUT XPLISTLEN XL2'                    00428200
.*-------------------------------------------------------------------   00428300
.***AI.L05 XMANAGER_OPTIONS BL1                                         00428400
&ZW                   SETC  ''                                          00428500
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00428600
.*-------------------------------------------------------------------   00428700
.***AI.L08 XMANAGER_OPTIONS "NO"                                        00428800
.***      BL1'1XXXXXXX'                                                 00428900
         AIF   ('&XWORK_MANAGER' NE 'NO').ZI17A                         00429000
&ZW                   SETC  '&ZW.1'                                     00429100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00429200
                      AGO   .ZI17C                                      00429300
.*                                                                      00429400
.ZI17A                ANOP  ,                                           00429500
&ZW                   SETC  '&ZW.0'                                     00429600
.ZI17C                ANOP  ,                                           00429700
.*-------------------------------------------------------------------   00429800
.***AI.L08 XMANAGER_OPTIONS "YES"                                       00429900
.***      BL1'X1XXXXXX'                                                 00430000
         AIF   ('&XQUEUE_MANAGER' NE 'YES').ZI18A                       00430100
&ZW                   SETC  '&ZW.1'                                     00430200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00430300
                      AGO   .ZI18C                                      00430400
.*                                                                      00430500
.ZI18A                ANOP  ,                                           00430600
&ZW                   SETC  '&ZW.0'                                     00430700
.ZI18C                ANOP  ,                                           00430800
.*-------------------------------------------------------------------   00430900
.***AI.L08 XMANAGER_OPTIONS "YES"                                       00431000
.***      BL1'XX1XXXXX'                                                 00431100
         AIF   ('&XSERVER_MANAGER' NE 'YES').ZI19A                      00431200
&ZW                   SETC  '&ZW.1'                                     00431300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00431400
                      AGO   .ZI19C                                      00431500
.*                                                                      00431600
.ZI19A                ANOP  ,                                           00431700
&ZW                   SETC  '&ZW.0'                                     00431800
.ZI19C                ANOP  ,                                           00431900
.*-------------------------------------------------------------------   00432000
.***AI.L08 XMANAGER_OPTIONS "YES"                                       00432100
.***      BL1'XXX1XXXX'                                                 00432200
         AIF   ('&XROUTER' NE 'YES').ZI20A                              00432300
&ZW                   SETC  '&ZW.1'                                     00432400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00432500
                      AGO   .ZI20C                                      00432600
.*                                                                      00432700
.ZI20A                ANOP  ,                                           00432800
&ZW                   SETC  '&ZW.0'                                     00432900
.ZI20C                ANOP  ,                                           00433000
.*-------------------------------------------------------------------   00433100
.***AI.L08 XMANAGER_OPTIONS "QUEUE"                                     00433200
.***      BL1'XXXX1XXX'                                                 00433300
         AIF   ('&XSERVER_TYPE' NE 'QUEUE').ZI21A                       00433400
&ZW                   SETC  '&ZW.1'                                     00433500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00433600
                      AGO   .ZI21C                                      00433700
.*                                                                      00433800
.ZI21A                ANOP  ,                                           00433900
&ZW                   SETC  '&ZW.0'                                     00434000
.ZI21C                ANOP  ,                                           00434100
.*-------------------------------------------------------------------   00434200
.***AI.L08 XMANAGER_OPTIONS "ROUTING"                                   00434300
.***      BL1'XXXXX1XX'                                                 00434400
         AIF   ('&XSERVER_TYPE' NE 'ROUTING').ZI22A                     00434500
&ZW                   SETC  '&ZW.1'                                     00434600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00434700
                      AGO   .ZI22C                                      00434800
.*                                                                      00434900
.ZI22A                ANOP  ,                                           00435000
&ZW                   SETC  '&ZW.0'                                     00435100
.ZI22C                ANOP  ,                                           00435200
.*-------------------------------------------------------------------   00435300
.***AI.L08 XMANAGER_OPTIONS "YES"                                       00435400
.***      BL1'XXXXXX1X'                                                 00435500
         AIF   ('&XEXPTIMPT' NE 'YES').ZI23A                            00435600
&ZW                   SETC  '&ZW.1'                                     00435700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00435800
                      AGO   .ZI23C                                      00435900
.*                                                                      00436000
.ZI23A                ANOP  ,                                           00436100
&ZW                   SETC  '&ZW.0'                                     00436200
.ZI23C                ANOP  ,                                           00436300
.*-------------------------------------------------------------------   00436400
.***AI.L08 XMANAGER_OPTIONS "YES"                                       00436500
.***      BL1'XXXXXXX1'                                                 00436600
         AIF   ('&XMANAGE_TASKS' NE 'YES').ZI24A                        00436700
&ZW                   SETC  '&ZW.1'                                     00436800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00436900
                      AGO   .ZI24C                                      00437000
.*                                                                      00437100
.ZI24A                ANOP  ,                                           00437200
&ZW                   SETC  '&ZW.0'                                     00437300
.ZI24C                ANOP  ,                                           00437400
.*-------------------------------------------------------------------   00437500
.***AI.L11 XMANAGER_OPTIONS BL1                                         00437600
                      AIF   ('&ZCLNG' NE 'YES').ZI24E  ALL ZERO BITS    00437700
&ZOPN                 SETA  &ZOPN+1                                     00437800
&ZOPL(&ZOPN)          SETC  ' '                                         00437900
&ZOPO(&ZOPN)          SETC  'OI'                                        00438000
&ZOPV(&ZOPN)          SETC  '38(1),B''&ZW'''                            00438100
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00438200
.ZI24E                ANOP  ,                                           00438300
.*-------------------------------------------------------------------   00438400
.***AI.L05 XMANAGER_OPT2 BL1                                            00438500
&ZW                   SETC  ''                                          00438600
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00438700
.*-------------------------------------------------------------------   00438800
.***AI.L08 XMANAGER_OPT2 "YES"                                          00438900
.***      BL1'1XXXXXXX'                                                 00439000
         AIF   ('&XDYNAMIC' NE 'YES').ZI26A                             00439100
&ZW                   SETC  '&ZW.1'                                     00439200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00439300
                      AGO   .ZI26C                                      00439400
.*                                                                      00439500
.ZI26A                ANOP  ,                                           00439600
&ZW                   SETC  '&ZW.0'                                     00439700
.ZI26C                ANOP  ,                                           00439800
.*-------------------------------------------------------------------   00439900
.***AI.L08 XMANAGER_OPT2 "YES"                                          00440000
.***      BL1'X1XXXXXX'                                                 00440100
         AIF   ('&XEWLM' NE 'YES').ZI27A                                00440200
&ZW                   SETC  '&ZW.1000000'                               00440300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00440400
                      AGO   .ZI27C                                      00440500
.*                                                                      00440600
.ZI27A                ANOP  ,                                           00440700
&ZW                   SETC  '&ZW.0000000'                               00440800
.ZI27C                ANOP  ,                                           00440900
.*-------------------------------------------------------------------   00441000
.***AI.L11 XMANAGER_OPT2 BL1                                            00441100
                      AIF   ('&ZCLNG' NE 'YES').ZI27E  ALL ZERO BITS    00441200
&ZOPN                 SETA  &ZOPN+1                                     00441300
&ZOPL(&ZOPN)          SETC  ' '                                         00441400
&ZOPO(&ZOPN)          SETC  'OI'                                        00441500
&ZOPV(&ZOPN)          SETC  '39(1),B''&ZW'''                            00441600
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00441700
.ZI27E                ANOP  ,                                           00441800
.*-------------------------------------------------------------------   00441900
.***AI.L25  XPARALLEL_EU F                                              00442000
                      AIF   ('&ZXPARALLEL_EU' EQ '').ZI29E              00442100
                      AIF   ('&ZXPARALLEL_EU' EQ 'OUTPUT').ZI29E        00442200
&ZCGPR                SETC  '&XPARALLEL_EU'                             00442300
.*                                                                      00442400
                      AIF   ('&XPARALLEL_EU'(1,1) NE '(').ZI29B         00442500
&ZCGPR   SETC  '0('.'&XPARALLEL_EU'(2,K'&XPARALLEL_EU-2).')'            00442600
                      AGO   .ZI29D                                      00442700
.ZI29B                ANOP  ,                                           00442800
.*                                                                      00442900
&ZC                   SETC  '&XPARALLEL_EU'(1,1)                        00443000
                      AIF   (T'&ZC NE 'N').ZI29D                        00443100
&ZC                   SETC  '&XPARALLEL_EU'                             00443200
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI29D               00443300
&ZCGPR                SETC  '=AL4(&XPARALLEL_EU)'                       00443400
.*                                                                      00443500
.ZI29D                ANOP  ,                                           00443600
.*                                                                      00443700
&ZOPN                 SETA  &ZOPN+1                                     00443800
&ZOPL(&ZOPN)          SETC  ' '                                         00443900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00444000
&ZOPV(&ZOPN)          SETC  '44(4,1),&ZCGPR'                            00444100
&ZOPD(&ZOPN)          SETC  '++ &ZXPARALLEL_EU XPARALLEL_EU'            00444200
.*                                                                      00444300
.ZI29E                ANOP  ,                                           00444400
.*-------------------------------------------------------------------   00444500
.***AI.L25  XSRV_MGR_EXIT@ AL4                                          00444600
                      AIF   ('&ZXSRV_MGR_EXIT@' EQ '').ZI31E            00444700
                      AIF   ('&ZXSRV_MGR_EXIT@' EQ 'OUTPUT').ZI31E      00444800
&ZCGPR                SETC  '&XSRV_MGR_EXIT@'                           00444900
.*                                                                      00445000
                      AIF   ('&XSRV_MGR_EXIT@'(1,1) NE '(').ZI31B       00445100
&ZCGPR   SETC  '0('.'&XSRV_MGR_EXIT@'(2,K'&XSRV_MGR_EXIT@-2).')'        00445200
                      AGO   .ZI31D                                      00445300
.ZI31B                ANOP  ,                                           00445400
.*                                                                      00445500
&ZC                   SETC  '&XSRV_MGR_EXIT@'(1,1)                      00445600
                      AIF   (T'&ZC NE 'N').ZI31D                        00445700
&ZC                   SETC  '&XSRV_MGR_EXIT@'                           00445800
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI31D               00445900
&ZCGPR                SETC  '=AL4(&XSRV_MGR_EXIT@)'                     00446000
.*                                                                      00446100
.ZI31D                ANOP  ,                                           00446200
.*                                                                      00446300
&ZOPN                 SETA  &ZOPN+1                                     00446400
&ZOPL(&ZOPN)          SETC  ' '                                         00446500
&ZOPO(&ZOPN)          SETC  'MVC'                                       00446600
&ZOPV(&ZOPN)          SETC  '52(4,1),&ZCGPR'                            00446700
&ZOPD(&ZOPN)          SETC  '++ &ZXSRV_MGR_EXIT@ XSRV_MGR_EXIT@'        00446800
.*                                                                      00446900
.ZI31E                ANOP  ,                                           00447000
.*-------------------------------------------------------------------   00447100
.***AI.L25  XSERVER_LIMIT F                                             00447200
                      AIF   ('&ZXSERVER_LIMIT' EQ '').ZI32E             00447300
                      AIF   ('&ZXSERVER_LIMIT' EQ 'OUTPUT').ZI32E       00447400
&ZCGPR                SETC  '&XSERVER_LIMIT'                            00447500
.*                                                                      00447600
                      AIF   ('&XSERVER_LIMIT'(1,1) NE '(').ZI32B        00447700
&ZCGPR   SETC  '0('.'&XSERVER_LIMIT'(2,K'&XSERVER_LIMIT-2).')'          00447800
                      AGO   .ZI32D                                      00447900
.ZI32B                ANOP  ,                                           00448000
.*                                                                      00448100
&ZC                   SETC  '&XSERVER_LIMIT'(1,1)                       00448200
                      AIF   (T'&ZC NE 'N').ZI32D                        00448300
&ZC                   SETC  '&XSERVER_LIMIT'                            00448400
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI32D               00448500
&ZCGPR                SETC  '=AL4(&XSERVER_LIMIT)'                      00448600
.*                                                                      00448700
.ZI32D                ANOP  ,                                           00448800
.*                                                                      00448900
&ZOPN                 SETA  &ZOPN+1                                     00449000
&ZOPL(&ZOPN)          SETC  ' '                                         00449100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00449200
&ZOPV(&ZOPN)          SETC  '56(4,1),&ZCGPR'                            00449300
&ZOPD(&ZOPN)          SETC  '++ &ZXSERVER_LIMIT XSERVER_LIMIT'          00449400
.*                                                                      00449500
.ZI32E                ANOP  ,                                           00449600
.*-------------------------------------------------------------------   00449700
.***AI.L25  XGROUPNM_LEN F                                              00449800
                      AIF   ('&ZXGROUPNM_LEN' EQ '').ZI35E              00449900
                      AIF   ('&ZXGROUPNM_LEN' EQ 'OUTPUT').ZI35E        00450000
&ZCGPR                SETC  '&XGROUPNM_LEN'                             00450100
.*                                                                      00450200
                      AIF   ('&XGROUPNM_LEN'(1,1) NE '(').ZI35B         00450300
&ZCGPR   SETC  '0('.'&XGROUPNM_LEN'(2,K'&XGROUPNM_LEN-2).')'            00450400
                      AGO   .ZI35D                                      00450500
.ZI35B                ANOP  ,                                           00450600
.*                                                                      00450700
&ZC                   SETC  '&XGROUPNM_LEN'(1,1)                        00450800
                      AIF   (T'&ZC NE 'N').ZI35D                        00450900
&ZC                   SETC  '&XGROUPNM_LEN'                             00451000
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI35D               00451100
&ZCGPR                SETC  '=AL4(&XGROUPNM_LEN)'                       00451200
.*                                                                      00451300
.ZI35D                ANOP  ,                                           00451400
.*                                                                      00451500
&ZOPN                 SETA  &ZOPN+1                                     00451600
&ZOPL(&ZOPN)          SETC  ' '                                         00451700
&ZOPO(&ZOPN)          SETC  'MVC'                                       00451800
&ZOPV(&ZOPN)          SETC  '68(4,1),&ZCGPR'                            00451900
&ZOPD(&ZOPN)          SETC  '++ &ZXGROUPNM_LEN XGROUPNM_LEN'            00452000
.*                                                                      00452100
.ZI35E                ANOP  ,                                           00452200
.*-------------------------------------------------------------------   00452300
.***AI.L19 ADDR64 XSUBSYSNM AD                                          00452400
                      AIF   ('&ZXSUBSYSNM' EQ '').ZI36H                 00452500
&ZCLNG                SETC  '&XSUBSYSNM'                                00452600
&ZCGPR                SETC  '14'                                        00452700
         AIF   ('&XSUBSYSNM'(1,1) EQ '(').ZI36F  IN GPR                 00452800
.*                                                                      00452900
&ZOPN                 SETA  &ZOPN+1                                     00453000
&ZOPL(&ZOPN)          SETC  ' '                                         00453100
&ZOPO(&ZOPN)          SETC  'LA'                                        00453200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00453300
&ZOPD(&ZOPN)          SETC  '++ &ZXSUBSYSNM XSUBSYSNM'                  00453400
.*                                                                      00453500
                      AGO   .ZI36G                                      00453600
.*                                                                      00453700
.ZI36F                ANOP  ,                                           00453800
&ZCGPR   SETC  '&XSUBSYSNM'(2,K'&XSUBSYSNM-2)                           00453900
.*                                                                      00454000
.ZI36G                ANOP  ,                                           00454100
                      AIF   ('&SYSAM64' EQ 'YES').ZI36H1A               00454200
.*                                                                      00454300
&ZOPN                 SETA  &ZOPN+1                                     00454400
&ZOPL(&ZOPN)          SETC  ' '                                         00454500
&ZOPO(&ZOPN)          SETC  'ST'                                        00454600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4+72(,1)'                           00454700
&ZOPD(&ZOPN)          SETC  '++ &ZXSUBSYSNM XSUBSYSNM'                  00454800
.*                                                                      00454900
                      AGO   .ZI36H                                      00455000
.ZI36H1A              ANOP  ,                                           00455100
.*                                                                      00455200
&ZOPN                 SETA  &ZOPN+1                                     00455300
&ZOPL(&ZOPN)          SETC  ' '                                         00455400
&ZOPO(&ZOPN)          SETC  'STG'                                       00455500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,72(,1)'                             00455600
&ZOPD(&ZOPN)          SETC  '++ &ZXSUBSYSNM XSUBSYSNM'                  00455700
.*                                                                      00455800
.ZI36H                ANOP  ,                                           00455900
.*-------------------------------------------------------------------   00456000
.***AI.L18 ADDR64 XTOPOLOGY AD                                          00456100
         AIF   ('&XTOPOLOGY' NE 'NO_TOPOLOGY').ZI37                     00456200
&ZXTOPOLOGY           SETC  ''             RESET INPUT/OUTPUT           00456300
.ZI37                 ANOP  ,                                           00456400
.*-------------------------------------------------------------------   00456500
.***AI.L19 ADDR64 XTOPOLOGY AD                                          00456600
                      AIF   ('&ZXTOPOLOGY' EQ '').ZI37H                 00456700
&ZCLNG                SETC  '&XTOPOLOGY'                                00456800
&ZCGPR                SETC  '14'                                        00456900
         AIF   ('&XTOPOLOGY'(1,1) EQ '(').ZI37F  IN GPR                 00457000
.*                                                                      00457100
&ZOPN                 SETA  &ZOPN+1                                     00457200
&ZOPL(&ZOPN)          SETC  ' '                                         00457300
&ZOPO(&ZOPN)          SETC  'LA'                                        00457400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00457500
&ZOPD(&ZOPN)          SETC  '++ &ZXTOPOLOGY XTOPOLOGY'                  00457600
.*                                                                      00457700
                      AGO   .ZI37G                                      00457800
.*                                                                      00457900
.ZI37F                ANOP  ,                                           00458000
&ZCGPR   SETC  '&XTOPOLOGY'(2,K'&XTOPOLOGY-2)                           00458100
.*                                                                      00458200
.ZI37G                ANOP  ,                                           00458300
                      AIF   ('&SYSAM64' EQ 'YES').ZI37H1A               00458400
.*                                                                      00458500
&ZOPN                 SETA  &ZOPN+1                                     00458600
&ZOPL(&ZOPN)          SETC  ' '                                         00458700
&ZOPO(&ZOPN)          SETC  'ST'                                        00458800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4+80(,1)'                           00458900
&ZOPD(&ZOPN)          SETC  '++ &ZXTOPOLOGY XTOPOLOGY'                  00459000
.*                                                                      00459100
                      AGO   .ZI37H                                      00459200
.ZI37H1A              ANOP  ,                                           00459300
.*                                                                      00459400
&ZOPN                 SETA  &ZOPN+1                                     00459500
&ZOPL(&ZOPN)          SETC  ' '                                         00459600
&ZOPO(&ZOPN)          SETC  'STG'                                       00459700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,80(,1)'                             00459800
&ZOPD(&ZOPN)          SETC  '++ &ZXTOPOLOGY XTOPOLOGY'                  00459900
.*                                                                      00460000
.ZI37H                ANOP  ,                                           00460100
.*-------------------------------------------------------------------   00460200
.***AI.L19 ADDR64 XAPPLENV AD                                           00460300
                      AIF   ('&ZXAPPLENV' EQ '').ZI38H                  00460400
&ZCLNG                SETC  '&XAPPLENV'                                 00460500
&ZCGPR                SETC  '14'                                        00460600
         AIF   ('&XAPPLENV'(1,1) EQ '(').ZI38F  IN GPR                  00460700
.*                                                                      00460800
&ZOPN                 SETA  &ZOPN+1                                     00460900
&ZOPL(&ZOPN)          SETC  ' '                                         00461000
&ZOPO(&ZOPN)          SETC  'LA'                                        00461100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00461200
&ZOPD(&ZOPN)          SETC  '++ &ZXAPPLENV XAPPLENV'                    00461300
.*                                                                      00461400
                      AGO   .ZI38G                                      00461500
.*                                                                      00461600
.ZI38F                ANOP  ,                                           00461700
&ZCGPR   SETC  '&XAPPLENV'(2,K'&XAPPLENV-2)                             00461800
.*                                                                      00461900
.ZI38G                ANOP  ,                                           00462000
                      AIF   ('&SYSAM64' EQ 'YES').ZI38H1A               00462100
.*                                                                      00462200
&ZOPN                 SETA  &ZOPN+1                                     00462300
&ZOPL(&ZOPN)          SETC  ' '                                         00462400
&ZOPO(&ZOPN)          SETC  'ST'                                        00462500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4+88(,1)'                           00462600
&ZOPD(&ZOPN)          SETC  '++ &ZXAPPLENV XAPPLENV'                    00462700
.*                                                                      00462800
                      AGO   .ZI38H                                      00462900
.ZI38H1A              ANOP  ,                                           00463000
.*                                                                      00463100
&ZOPN                 SETA  &ZOPN+1                                     00463200
&ZOPL(&ZOPN)          SETC  ' '                                         00463300
&ZOPO(&ZOPN)          SETC  'STG'                                       00463400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,88(,1)'                             00463500
&ZOPD(&ZOPN)          SETC  '++ &ZXAPPLENV XAPPLENV'                    00463600
.*                                                                      00463700
.ZI38H                ANOP  ,                                           00463800
.*-------------------------------------------------------------------   00463900
.***AI.L19 ADDR64 XSERVER_DATA AD                                       00464000
                      AIF   ('&ZXSERVER_DATA' EQ '').ZI39H              00464100
&ZCLNG                SETC  '&XSERVER_DATA'                             00464200
&ZCGPR                SETC  '14'                                        00464300
         AIF   ('&XSERVER_DATA'(1,1) EQ '(').ZI39F  IN GPR              00464400
.*                                                                      00464500
&ZOPN                 SETA  &ZOPN+1                                     00464600
&ZOPL(&ZOPN)          SETC  ' '                                         00464700
&ZOPO(&ZOPN)          SETC  'LA'                                        00464800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00464900
&ZOPD(&ZOPN)          SETC  '++ &ZXSERVER_DATA XSERVER_DATA'            00465000
.*                                                                      00465100
                      AGO   .ZI39G                                      00465200
.*                                                                      00465300
.ZI39F                ANOP  ,                                           00465400
&ZCGPR   SETC  '&XSERVER_DATA'(2,K'&XSERVER_DATA-2)                     00465500
.*                                                                      00465600
.ZI39G                ANOP  ,                                           00465700
                      AIF   ('&SYSAM64' EQ 'YES').ZI39H1A               00465800
.*                                                                      00465900
&ZOPN                 SETA  &ZOPN+1                                     00466000
&ZOPL(&ZOPN)          SETC  ' '                                         00466100
&ZOPO(&ZOPN)          SETC  'ST'                                        00466200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4+96(,1)'                           00466300
&ZOPD(&ZOPN)          SETC  '++ &ZXSERVER_DATA XSERVER_DATA'            00466400
.*                                                                      00466500
                      AGO   .ZI39H                                      00466600
.ZI39H1A              ANOP  ,                                           00466700
.*                                                                      00466800
&ZOPN                 SETA  &ZOPN+1                                     00466900
&ZOPL(&ZOPN)          SETC  ' '                                         00467000
&ZOPO(&ZOPN)          SETC  'STG'                                       00467100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,96(,1)'                             00467200
&ZOPD(&ZOPN)          SETC  '++ &ZXSERVER_DATA XSERVER_DATA'            00467300
.*                                                                      00467400
.ZI39H                ANOP  ,                                           00467500
.*-------------------------------------------------------------------   00467600
.***AI.L18 ADDR64 XNODENM AD                                            00467700
         AIF   ('&XNODENM' NE 'NO_NODENM').ZI40                         00467800
&ZXNODENM             SETC  ''             RESET INPUT/OUTPUT           00467900
.ZI40                 ANOP  ,                                           00468000
.*-------------------------------------------------------------------   00468100
.***AI.L19 ADDR64 XNODENM AD                                            00468200
                      AIF   ('&ZXNODENM' EQ '').ZI40H                   00468300
&ZCLNG                SETC  '&XNODENM'                                  00468400
&ZCGPR                SETC  '14'                                        00468500
         AIF   ('&XNODENM'(1,1) EQ '(').ZI40F  IN GPR                   00468600
.*                                                                      00468700
&ZOPN                 SETA  &ZOPN+1                                     00468800
&ZOPL(&ZOPN)          SETC  ' '                                         00468900
&ZOPO(&ZOPN)          SETC  'LA'                                        00469000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00469100
&ZOPD(&ZOPN)          SETC  '++ &ZXNODENM XNODENM'                      00469200
.*                                                                      00469300
                      AGO   .ZI40G                                      00469400
.*                                                                      00469500
.ZI40F                ANOP  ,                                           00469600
&ZCGPR   SETC  '&XNODENM'(2,K'&XNODENM-2)                               00469700
.*                                                                      00469800
.ZI40G                ANOP  ,                                           00469900
                      AIF   ('&SYSAM64' EQ 'YES').ZI40H1A               00470000
.*                                                                      00470100
&ZOPN                 SETA  &ZOPN+1                                     00470200
&ZOPL(&ZOPN)          SETC  ' '                                         00470300
&ZOPO(&ZOPN)          SETC  'ST'                                        00470400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4+104(,1)'                          00470500
&ZOPD(&ZOPN)          SETC  '++ &ZXNODENM XNODENM'                      00470600
.*                                                                      00470700
                      AGO   .ZI40H                                      00470800
.ZI40H1A              ANOP  ,                                           00470900
.*                                                                      00471000
&ZOPN                 SETA  &ZOPN+1                                     00471100
&ZOPL(&ZOPN)          SETC  ' '                                         00471200
&ZOPO(&ZOPN)          SETC  'STG'                                       00471300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,104(,1)'                            00471400
&ZOPD(&ZOPN)          SETC  '++ &ZXNODENM XNODENM'                      00471500
.*                                                                      00471600
.ZI40H                ANOP  ,                                           00471700
.*-------------------------------------------------------------------   00471800
.***AI.L18 ADDR64 XGROUPNM AD                                           00471900
         AIF   ('&XGROUPNM' NE 'NO_GROUPNM').ZI41                       00472000
&ZXGROUPNM            SETC  ''             RESET INPUT/OUTPUT           00472100
.ZI41                 ANOP  ,                                           00472200
.*-------------------------------------------------------------------   00472300
.***AI.L19 ADDR64 XGROUPNM AD                                           00472400
                      AIF   ('&ZXGROUPNM' EQ '').ZI41H                  00472500
&ZCLNG                SETC  '&XGROUPNM'                                 00472600
&ZCGPR                SETC  '14'                                        00472700
         AIF   ('&XGROUPNM'(1,1) EQ '(').ZI41F  IN GPR                  00472800
.*                                                                      00472900
&ZOPN                 SETA  &ZOPN+1                                     00473000
&ZOPL(&ZOPN)          SETC  ' '                                         00473100
&ZOPO(&ZOPN)          SETC  'LA'                                        00473200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00473300
&ZOPD(&ZOPN)          SETC  '++ &ZXGROUPNM XGROUPNM'                    00473400
.*                                                                      00473500
                      AGO   .ZI41G                                      00473600
.*                                                                      00473700
.ZI41F                ANOP  ,                                           00473800
&ZCGPR   SETC  '&XGROUPNM'(2,K'&XGROUPNM-2)                             00473900
.*                                                                      00474000
.ZI41G                ANOP  ,                                           00474100
                      AIF   ('&SYSAM64' EQ 'YES').ZI41H1A               00474200
.*                                                                      00474300
&ZOPN                 SETA  &ZOPN+1                                     00474400
&ZOPL(&ZOPN)          SETC  ' '                                         00474500
&ZOPO(&ZOPN)          SETC  'ST'                                        00474600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4+112(,1)'                          00474700
&ZOPD(&ZOPN)          SETC  '++ &ZXGROUPNM XGROUPNM'                    00474800
.*                                                                      00474900
                      AGO   .ZI41H                                      00475000
.ZI41H1A              ANOP  ,                                           00475100
.*                                                                      00475200
&ZOPN                 SETA  &ZOPN+1                                     00475300
&ZOPL(&ZOPN)          SETC  ' '                                         00475400
&ZOPO(&ZOPN)          SETC  'STG'                                       00475500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,112(,1)'                            00475600
&ZOPD(&ZOPN)          SETC  '++ &ZXGROUPNM XGROUPNM'                    00475700
.*                                                                      00475800
.ZI41H                ANOP  ,                                           00475900
.*-------------------------------------------------------------------   00476000
&ZOPN1                SETA &ZOPN                                        00476100
.*******************************************************************    00476200
.***  PROCESS IWM4CON OUTPUT PARAMETERS                                 00476300
.*******************************************************************    00476400
                      ACTR  10000                                       00476500
.*------------------------------------------------------------------    00476600
.***AO.L02 XCONNTKN XL4                                                 00476700
         AIF   ('&ZXCONNTKN' EQ 'OUTPUT').ZO13A  OUTPUT                 00476800
         AIF   ('&ZXCONNTKN' NE 'INOUT').ZO13C  INOUT                   00476900
.ZO13A    AIF   ('&XCONNTKN'(1,1) NE '(').ZO13B  ADDR IN GPR            00477000
&ZCGPR   SETC  '&XCONNTKN'(2,K'&XCONNTKN-2)                             00477100
&ZOPN                 SETA  &ZOPN+1                                     00477200
&ZOPL(&ZOPN)          SETC  ' '                                         00477300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00477400
&ZOPV(&ZOPN)          SETC  '0(4,&ZCGPR),28(1)'                         00477500
&ZOPD(&ZOPN)          SETC  '++ XCONNTKN XL4'                           00477600
                      AGO   .ZO13C                                      00477700
.*                                                                      00477800
.ZO13B                ANOP  ,                                           00477900
&ZAWRK   SETA  K'&XCONNTKN                                              00478000
         AIF   ('&XCONNTKN'(&ZAWRK,1) NE ')').ZO13G                     00478100
&ZN      SETA  2                                                        00478200
.ZO13H    ANOP                                                          00478300
         AIF   (&ZN GE &ZAWRK).ZO13G                                    00478400
         AIF   ('&XCONNTKN'(&ZN,1) NE '(').ZO13I                        00478500
&ZC      SETC  '&XCONNTKN'(1,&ZN).'4'.','                               00478600
&ZC      SETC  '&ZC'.'&XCONNTKN'(&ZN+1,&ZAWRK-&ZN).',28(1)'             00478700
         AGO   .ZO13J                                                   00478800
.ZO13I    ANOP                                                          00478900
&ZN      SETA  &ZN+1                                                    00479000
         AGO   .ZO13H                                                   00479100
.ZO13G    ANOP                                                          00479200
&ZC      SETC  '&XCONNTKN.(4),28(1)'                                    00479300
.ZO13J    ANOP                                                          00479400
&ZOPN                 SETA  &ZOPN+1                                     00479500
&ZOPL(&ZOPN)          SETC  ' '                                         00479600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00479700
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00479800
&ZOPD(&ZOPN)          SETC  '++ XCONNTKN XL4'                           00479900
.ZO13C                ANOP  ,                                           00480000
.*------------------------------------------------------------------    00480100
.***AO.LVER01                                                           00480200
                      AIF  (&XPLISTVER LT 1).ZO42Z  PLVER               00480300
.*------------------------------------------------------------------    00480400
.***AO.L02 XREGION_TOKEN CL16                                           00480500
         AIF   ('&ZXREGION_TOKEN' EQ 'OUTPUT').ZO42A  OUTPUT            00480600
         AIF   ('&ZXREGION_TOKEN' NE 'INOUT').ZO42C  INOUT              00480700
.ZO42A    AIF   ('&XREGION_TOKEN'(1,1) NE '(').ZO42B  ADDR IN GPR       00480800
&ZCGPR   SETC  '&XREGION_TOKEN'(2,K'&XREGION_TOKEN-2)                   00480900
&ZOPN                 SETA  &ZOPN+1                                     00481000
&ZOPL(&ZOPN)          SETC  ' '                                         00481100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00481200
&ZOPV(&ZOPN)          SETC  '0(16,&ZCGPR),120(1)'                       00481300
&ZOPD(&ZOPN)          SETC  '++ XREGION_TOKEN CL16'                     00481400
                      AGO   .ZO42C                                      00481500
.*                                                                      00481600
.ZO42B                ANOP  ,                                           00481700
&ZAWRK   SETA  K'&XREGION_TOKEN                                         00481800
         AIF   ('&XREGION_TOKEN'(&ZAWRK,1) NE ')').ZO42G                00481900
&ZN      SETA  2                                                        00482000
.ZO42H    ANOP                                                          00482100
         AIF   (&ZN GE &ZAWRK).ZO42G                                    00482200
         AIF   ('&XREGION_TOKEN'(&ZN,1) NE '(').ZO42I                   00482300
&ZC      SETC  '&XREGION_TOKEN'(1,&ZN).'16'.','                         00482400
&ZC      SETC  '&ZC'.'&XREGION_TOKEN'(&ZN+1,&ZAWRK-&ZN).',120(1)'       00482500
         AGO   .ZO42J                                                   00482600
.ZO42I    ANOP                                                          00482700
&ZN      SETA  &ZN+1                                                    00482800
         AGO   .ZO42H                                                   00482900
.ZO42G    ANOP                                                          00483000
&ZC      SETC  '&XREGION_TOKEN.(16),120(1)'                             00483100
.ZO42J    ANOP                                                          00483200
&ZOPN                 SETA  &ZOPN+1                                     00483300
&ZOPL(&ZOPN)          SETC  ' '                                         00483400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00483500
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00483600
&ZOPD(&ZOPN)          SETC  '++ XREGION_TOKEN CL16'                     00483700
.ZO42C                ANOP  ,                                           00483800
.*------------------------------------------------------------------    00483900
.***AO.LVER02                                                           00484000
.ZO42Z                ANOP  ,                                           00484100
.*******************************************************************    00484200
.***AO.X02  RETURN CODE PROCESSING                                      00484300
.*******************************************************************    00484400
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00484500
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00484600
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00484700
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00484800
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00484900
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00485000
&ZOPN                 SETA  &ZOPN+1                                     00485100
&ZOPL(&ZOPN)          SETC  ' '                                         00485200
&ZOPO(&ZOPN)          SETC  'ST'                                        00485300
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00485400
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00485500
                      AGO   .ZMRETX                                     00485600
.*                                                                      00485700
.ZMRET2               ANOP  ,                                           00485800
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00485900
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00486000
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00486100
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00486200
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00486300
&ZOPN                 SETA  &ZOPN+1                                     00486400
&ZOPL(&ZOPN)          SETC  ' '                                         00486500
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00486600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00486700
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00486800
.ZMRETX               ANOP  ,                                           00486900
.*******************************************************************    00487000
.***AO.X03  REASON CODE PROCESSING                                      00487100
.*******************************************************************    00487200
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00487300
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00487400
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00487500
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00487600
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00487700
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00487800
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00487900
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00488000
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00488100
&ZOPN                 SETA  &ZOPN+1                                     00488200
&ZOPL(&ZOPN)          SETC  ' '                                         00488300
&ZOPO(&ZOPN)          SETC  'ST'                                        00488400
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00488500
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00488600
                      AGO   .ZMRSNX                                     00488700
.*                                                                      00488800
.ZMRSN2               ANOP  ,                                           00488900
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00489000
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00489100
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00489200
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00489300
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00489400
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00489500
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00489600
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00489700
&ZOPN                 SETA  &ZOPN+1                                     00489800
&ZOPL(&ZOPN)          SETC  ' '                                         00489900
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00490000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00490100
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00490200
.ZMRSNX               ANOP  ,                                           00490300
.*******************************************************************    00490400
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00490500
.*******************************************************************    00490600
.ZMFLX                ANOP  ,              MF=L PROCESSING              00490700
.*******************************************************************    00490800
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00490900
.*******************************************************************    00491000
                      ACTR  10000                                       00491100
.*                                                                      00491200
                      LCLA  &ZLC           COLUMN POSITION              00491300
                      LCLA  &ZOPX          LIST TABLE INDEX             00491400
                      LCLC  &ZLL           LABEL                        00491500
                      LCLC  &ZLOP          OPERATION                    00491600
                      LCLC  &ZLV           VALUE                        00491700
                      LCLC  &ZLD           DESCRIPTION                  00491800
.*                                                                      00491900
&ZOPX                 SETA  1                                           00492000
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00492100
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00492200
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00492300
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00492400
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00492500
                      AIF   (K'&ZLD LE 0).ZL5                           00492600
&ZLC                  SETA  35             COMMENT COLUMN               00492700
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00492800
&ZLC                  SETA  33             COMMMENT COLUMN              00492900
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00493000
&ZLV                  SETC  '&ZLV'.' '                                  00493100
                      AGO   .ZL3                                        00493200
.*                                                                      00493300
.ZL4                  ANOP  ,                                           00493400
&ZLV                  SETC  '&ZLV'.' '                                  00493500
.ZL5                  ANOP  ,                                           00493600
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00493700
.*                                                                      00493800
&ZLL     &ZLOP &ZLV                                                     00493900
.*                                                                      00494000
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00494100
                      AGO   .ZL2           CONTINUE LOOPING             00494200
.*                                                                      00494300
.ZLX                  ANOP  ,                                           00494400
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00494500
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00494600
         LCLC  &T1                       ERROR MESSAGE WORK AREA        00494700
         AIF   ('&XWORK_MANAGER' EQ 'YES').MGROK                        00494800
         AIF   ('&XROUTER' EQ 'YES').MGROK                              00494900
         AIF   ('&XQUEUE_MANAGER' EQ 'YES').MGROK                       00495000
         AIF   ('&XSERVER_MANAGER' EQ 'YES').MGROK                      00495100
         AIF   ('&XEXPTIMPT' EQ 'YES').MGROK                       @L7C 00495200
&T1      SETC  'AT LEAST ONE OF THE MANAGER OPTIONS'                    00495300
&T1      SETC  '&T1 MUST BE "YES"'                                      00495400
         MNOTE 8,'&T1'                                                  00495500
         MEXIT                                                          00495600
.MGROK   ANOP                                                           00495700
.*                                                                      00495800
         AIF   ('&XSERVER_MANAGER' NE 'YES').SRVOK                      00495900
         AIF   ('&XROUTER' EQ 'YES').RTRCHK                             00496000
         AIF   ('&MANAGE_TASKS' EQ 'YES').TASKCHK                       00496100
         AIF   ('&XQUEUE_MANAGER' EQ 'YES').QMGRCHK                     00496200
         AGO   .SRVOK                                                   00496300
.RTRCHK  ANOP                                                           00496400
         AIF   ('&XSERVER_TYPE' EQ 'ROUTING').SRVOK                     00496500
&T1      SETC  'SERVER_MANAGER=YES WITH ROUTER=YES'                     00496600
&T1      SETC  '&T1 MUST USE SERVER_TYPE=ROUTING'                       00496700
         MNOTE 8,'&T1'                                                  00496800
         MEXIT                                                          00496900
.TASKCHK ANOP                                                           00497000
         AIF   ('&XSERVER_TYPE' EQ 'QUEUE').SRVOK                       00497100
&T1      SETC  'SERVER_MANAGER=YES WITH MANAGE_TASKS=YES'               00497200
&T1      SETC  '&T1 MUST USE SERVER_TYPE=QUEUE'                         00497300
         MNOTE 8,'&T1'                                                  00497400
         MEXIT                                                          00497500
.QMGRCHK ANOP                                                           00497600
         AIF   ('&XSERVER_TYPE' EQ 'QUEUE').SRVOK                       00497700
&T1      SETC  'SERVER_MANAGER=YES WITH QUEUE_MANAGER=YES'              00497800
&T1      SETC  '&T1 MUST USE SERVER_TYPE=QUEUE'                         00497900
         MNOTE 8,'&T1'                                                  00498000
         MEXIT                                                          00498100
.SRVOK   ANOP                                                           00498200
.*                                                                      00498300
         AIF   ('&SYSAM64' NE 'YES').AMODE31                            00498400
         LLGTR 14,14                   CLEAR HIGH HALF IN 64BIT MODE    00498500
.AMODE31 L     14,16(0,0)              GET CVT ADDRESS                  00498600
.*-------------------------------------------------------------------   00498700
         TM    CVTOSLV3-CVT(14),CVTH7709  test for HBB7709 presence     00498800
         BNZ   VEROK&SYSNDX               running on HBB7709            00498900
         LA    0,IWMRSNCODEBADVERSION     HBB7709 is required           00499000
         LA    15,IWMRETCODEINVOCERROR    set return code               00499100
         B     END&SYSNDX                 skip service invocation       00499200
VEROK&SYSNDX DS    0H                     version check successful      00499300
.*-------------------------------------------------------------------   00499400
         L     14,772(14,0)            GET SFT ADDRESS                  00499500
         L     14,380(14,0)            GET LX FOR SERVICE ROUTINE       00499600
         LA    15,7                    GET EX FOR SERVICE ROUTINE       00499700
         OR    14,15                   GET PC NUMBER                    00499800
         PC    0(14)                                                    00499900
END&SYSNDX DS    0H                    END LABEL                        00500000
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00500100
.ZLINKX               ANOP  ,                                           00500200
.*******************************************************************    00500300
.***AP.X01  FORMAT GENERATED CODE                                       00500400
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00500500
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00500600
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00500700
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00500800
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00500900
                      AIF   (K'&ZLD LE 0).ZL51                          00501000
&ZLC                  SETA  35             COMMENT COLUMN               00501100
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00501200
&ZLC                  SETA  33             COMMENT COLUMN               00501300
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00501400
&ZLV                  SETC  '&ZLV'.' '                                  00501500
                      AGO   .ZL31                                       00501600
.*                                                                      00501700
.ZL41                 ANOP  ,                                           00501800
&ZLV                  SETC  '&ZLV'.' '                                  00501900
.ZL51                 ANOP  ,                                           00502000
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00502100
.*                                                                      00502200
&ZLL     &ZLOP &ZLV                                                     00502300
.*                                                                      00502400
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00502500
                      AGO   .ZL21          CONTINUE LOOPING             00502600
.*                                                                      00502700
.ZLX1                 ANOP  ,                                           00502800
.*******************************************************************    00502900
.***AP.X02  END OF IWM4CON MACRO                                        00503000
&ZIWM4CON             SETC  'YES'          SET IWM4CON USED             00503100
         POP   PRINT                                                    00503200
*                                            IWM4CON-1                  00503300
         SPACE 1                                                        00503400
.ZLX2                 ANOP  ,                                           00503500
         MEND                                                           00503600
**********************************************************************/ 00503700
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00503800
*%IWM4CON: MACRO KEYS(WORK_MANAGER,TOPOLOGY,NUMBERASCB,EWLM,            00503900
*                 CONNTKNKEYP,CONNTKNKEY,ROUTER,QUEUE_MANAGER,          00504000
*                 QMGR_EXIT@,SERVER_MANAGER,APPLENV,DYNAMIC,            00504100
*                 PARALLEL_EU,REGION_TOKEN,SERVER_TYPE,MANAGE_TASKS,    00504200
*                 SERVER_LIMIT,SERVER_DATA,SRV_MGR_EXIT@,EXPTIMPT,      00504300
*                 SUBSYS,SUBSYSNM,NODENM,GROUPNM,GROUPNM_LEN,CONNTKN,   00504400
*                 RETCODE,RSNCODE,PLISTVER,MF);                         00504500
*  ANS('?'!!MACLABEL!!' '!!'IWM4CONP '!!MACLIST!!                       00504600
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              00504700
*%END IWM4CON;                                                          00504800
