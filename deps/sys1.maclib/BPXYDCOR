*                                                                       00001000
* %DCL BPXYDCOR_INCLUDED CHAR EXT;                                      00002000
* %DEACTIVATE BPXYDCOR_INCLUDED;                                        00003000
* %IF BPXYDCOR_INCLUDED = '' %THEN                                      00004000
* %DO;                                                                  00005000
*%/* Start of PL/X PreProlog Code */;                                   00006000
*                                                                       00007000
*%/* End of PL/X PreProlog Code */;                                     00008000
*/* Macro made bi-lingual on 06339. CBGEN compile date 06332         */ 00009000
*% /*                                                                   00010000
         MACRO                                                          00011000
         BPXYDCOR &DSECT=YES,&LIST=YES,&TITLE=YES,&PARMS=YES,          *00012000
               &PARMSG=COND,&ASIDLIST_MAP=COND,&PIDLIST_MAP=COND,      *00013000
               &CONDINFO_MAP=COND                                       00014000
         GBLC  &BPXYDCOR_INCLUDED                                       00015000
         GBLC  &ZCBPRINT                                                00016000
&BPXYDCOR_INCLUDED SETC 'YES'                                           00017000
         AIF   ('&LIST' EQ 'NONE').P0                                   00018000
         AIF   ('&TITLE' EQ 'NO').P5                                    00019000
 TITLE   'BPXYDCOR  - dbx cordump cache information                   '*00020000
                                                                        00021000
.P5      ANOP                                                           00022000
**/ BPXYDCOR_1:;                                                        00023000
*/****START OF SPECIFICATIONS****************************************** 00024000
*                                                                       00025000
*    $MAC (BPXYDCOR) COMP(SCPX1) PROD(BPX):                             00026000
*                                                                       00027000
*01* MACRO NAME: BPXYDCOR                                               00028000
*                                                                       00029000
*01* DSECT NAME: BPXYDCOR                                               00030000
*                                                                       00031000
*01* DESCRIPTIVE NAME: dbx cordump cache information                    00032000
*                                                                       00033000
*02*   ACRONYM: DCOR                                                    00034000
*                                                                    */ 00035000
*/*01* PROPRIETARY STATEMENT=                                        */ 00036000
*/***PROPRIETARY_STATEMENT********************************************/ 00037000
*/*                                                                  */ 00038000
*/*                                                                  */ 00039000
*/* LICENSED MATERIALS - PROPERTY OF IBM                             */ 00040000
*/* 5694-A01 COPYRIGHT IBM CORP. 2000, 2008                          */ 00042001
*/*                                                                  */ 00043000
*/* STATUS= HBB7750                                                  */ 00044001
*/*                                                                  */ 00045000
*/***END_OF_PROPRIETARY_STATEMENT*************************************/ 00046000
*/*                                                                     00047000
*                                                                       00048000
*01* EXTERNAL CLASSIFICATION:  GUPI                                     00049000
*01* END OF EXTERNAL CLASSIFICATION:                                    00050000
*                                                                       00051000
*01* FUNCTION:                                                          00052000
*                                                                       00053000
*    This file contains the mapping of dump related information use     00054000
*    by dbx when a dump is being formatted.                             00055000
*                                                                       00056000
*                                                                       00057000
*01* METHOD OF ACCESS:                                                  00058000
*                                                                       00059000
*02*   PL/X:                                                            00060000
*                                                                       00061000
*        %INCLUDE SYSLIB(BPXYDCOR)                                      00062000
*                                                                       00063000
*        By default, the DCOR is based on DCORPtr pointer.  If          00064000
*        other basing is desired, use %DCORBASE='BASED(xxxxxx)'.        00065000
*                                                                       00066000
*                                                                       00067000
*                                                                       00068000
*                                                                       00069000
*02*   ASM:                                                             00070000
*        Specify PARMSG=YES to include the mapping for 64bit parms      00071000
*        (PARMSG).                                                      00072000
*        Specify PARMS=YES includes the  mapping for 32bit parms        00073000
*        (PARMS).                                                       00074000
*                                                                       00075000
*                                                                       00076000
*                                                                       00077000
*01* SIZE: xxx bytes                                                    00078000
*            PARMSG       -- X'0040' bytes                              00079000
*            PARMS        -- X'0020' bytes                              00080000
*            ASIDLIST_MAP -- X'0028' bytes                              00081000
*            PIDLIST_MAP  -- X'0040' bytes                              00082000
*            CONDINFO_MAP -- X'0010' bytes                              00083000
*                                                                       00084000
*01* POINTED TO BY:                                                     00085000
*                                                                       00086000
*                                                                       00087000
*01* CREATED BY: BPXGMPTR                                               00088000
*                                                                       00089000
*01* DELETED BY: Process Termination (BPXGMCDE)                         00090000
*                                                                       00091000
*01* STORAGE ATTRIBUTES:                                                00092000
*02*   SUBPOOL:                                                         00093000
*02*   KEY: 0                                                           00094000
*02*   RESIDENCY: SYSZBPX1 data space                                   00095000
*                                                                       00096000
*01* FREQUENCY:                                                         00097000
*                                                                       00098000
*01* SERIALIZATION: CS instruction                                      00099000
*                                                                       00100000
*01* DEPENDENCIES: None                                                 00101000
*                                                                       00102000
*01* NOTES: None                                                        00103000
*                                                                       00104000
*01* COMPONENT: (SCPX1)                                                 00105000
*                                                                       00106000
*01* DISTRIBUTION LIBRARY:  AINTLIB                                     00107000
*                                                                       00108000
*01* EYE-CATCHER: DCOR                                                  00109000
*02*   OFFSET:  0                                                       00110000
*02*   LENGTH:  64                                                      00111000
*                                                                       00112000
*                                                                       00113000
*01* CHANGE-ACTIVITY:                                                   00114000
*                                                                       00115000
*  $01=OW44571, HBB7703 000609 PDZJ: dbx post mortem services           00116000
*  $D1=TXV0414, HBB7704 000613 PDZJ: IPCS/SHAREAS tolerance OW44412     00117000
*  $P1=PXV0307, HBB7704 001003 PDZJ: Report dump type HFS/SEQ           00118000
*  $P2=PXV0307, HBB7703 010831 PDZJ: Report recall status               00119000
*  $D2=DYN0519, HBB7708 011031 PDZJ: 64bit support                      00120000
*  $P3=PYN0220  HBB7708 020301 PDFO: Bilingual fixup                    00121000
*  $P4=ME08916  HBB7740 070104 PDJF: Bilingual fixup                    00121101
*  $P5=ME11419  HBB7750 071024 PDHA: Asset protection errors            00121201
*                                                                       00122000
****END OF SPECIFICATIONS*********************************************/ 00123000
*% /*                                                                   00124000
.P0      ANOP                                                           00125000
         AIF   ('&ZCBPRINT' EQ 'NO').P1                                 00126000
         AIF   ('&LIST' EQ 'YES').P2                                    00127000
.P1      ANOP                                                           00128000
         PUSH  PRINT                                                    00129000
         PRINT OFF                                                      00130000
.P2      ANOP                                                           00131000
*                                                                       00132000
* ********************************************************************  00133000
* *                                                                  *  00134000
* * Level information                                                *  00135000
* *                                                                  *  00136000
* ********************************************************************  00137000
*                                                                       00138000
*                                                                       00139000
DCOR_LEVEL1 EQU 65536    65536='00010000'x.                             00140000
DCOR_LEVEL2 EQU 131072   131072='00020000'x.                            00141000
*                                                                       00142000
* ********************************************************************  00143000
* *                                                                  *  00144000
* * Function codes for BPXGMCDE routine                              *  00145000
* *                                                                  *  00146000
* ********************************************************************  00147000
*                                                                       00148000
*                                                                       00149000
DCOR_OPEN# EQU 1                                                        00150000
DCOR_CLOSE# EQU 2                                                       00151000
DCOR_STATUS# EQU 3                                                      00152000
*                                                                       00153000
*    *****************************************************************  00154000
*    *                                                               *  00155000
*    * Open return codes                                             *  00156000
*    *                                                               *  00157000
*    *****************************************************************  00158000
*                                                                       00159000
*                                                                       00160000
DCOR_CDERC_OK EQU 0      The specified function completed successfully  00161000
DCOR_CDERC_PARMERR EQU 4 A parmeter error was detected. See return     *00162000
                         value 1 for more detail                        00163000
DCOR_CDERC_PROCERR EQU 8 A DCORE processing error occurred. See return *00164000
                         value 1 for more detail                        00165000
DCOR_CDERC_IKJTSOEVERR EQU 12 An error was encountered trying to       *00166000
                         establish a TSO environment with the IKJTSOEV *00167000
                         service. See return values for more           *00168000
                         information                                    00169000
DCOR_CDERC_IKJEFTSRERR EQU 16 An error was encountered trying to run   *00170000
                         the REXX EXEC with the IKJEFTSR service. See  *00171000
                         return values for more information             00172000
DCOR_CDERC_ALLOCATEERR EQU 20 An error was encountered trying to       *00173000
                         allocate one of the user specified data sets.  00174000
DCOR_CDERC_IRXINITERR EQU 28 An error was encountered trying to        *00175000
                         establish a REXX environment                   00176000
*                                                                       00177000
*    *****************************************************************  00178000
*    *                                                               *  00179000
*    * Status return codes                                           *  00180000
*    *                                                               *  00181000
*    *****************************************************************  00182000
*                                                                       00183000
*                                                                       00184000
DCOR_CDERC_STATUS_OPENCOMPLETE EQU 0                                    00185000
DCOR_CDERC_STATUS_OPENCONTINUING EQU 1                                  00186000
DCOR_CDERC_STATUS_OPENTERMINATED EQU 2                                  00187000
DCOR_CDERC_STATUS_INVALIDTOKEN EQU 3                                    00188000
*                                                                       00189000
*    *****************************************************************  00190000
*    *                                                               *  00191000
*    * Status Rc values when Status return code is                   *  00192000
*    * Dcor_CDErc_Status_OpenContinuing                              *  00193000
*    *                                                               *  00194000
*    *****************************************************************  00195000
*                                                                       00196000
*                                                                       00197000
DCOR_STATUS_CONT_STARTTSOENV EQU 0 Starting the TSO environment         00198000
DCOR_STATUS_CONT_EXECSTARTED EQU 1 BPXTIPCS started                     00199000
DCOR_STATUS_CONT_EXECCLIST EQU 2 BPXTIPCS allocating CLIST data set     00200000
DCOR_STATUS_CONT_DUMPDDIR EQU 3 BPXTIPCS allocating/creating dump      *00201000
                         directory via BLSCDDIR                         00202000
DCOR_STATUS_CONT_ALLOCDUMPDS EQU 4 BPXTIPCS allocating the dump data   *00203000
                         set                                            00204000
DCOR_STATUS_CONT_INVOKEIPCS EQU 5 BPXTIPCS invoking IPCS                00205000
DCOR_STATUS_CONT_INVOKEVERBX EQU 6 BPXTIPC2 invoking VERBX routine      00206000
DCOR_STATUS_CONT_ANALYSISSTART EQU 7 Dump analysis started              00207000
DCOR_STATUS_CONT_ANALYSISPROCASIDS EQU 8 Analysis processing Asids      00208000
DCOR_STATUS_CONT_EXECEXITING EQU 9 BPXTIPCS exiting                     00209000
DCOR_STATUS_CONT_RECALL EQU 10 BPXTIPCS recalling data set              00210000
*                                                                       00211000
*    *****************************************************************  00212000
*    *                                                               *  00213000
*    * R1 values when return code is Dcor_CDErc_ParmErr              *  00214000
*    *                                                               *  00215000
*    *****************************************************************  00216000
*                                                                       00217000
*                                                                       00218000
DCOR_R1_PARMERR_DUMPDSNREQ EQU 1 The name of a dump data set is        *00219000
                         required                                       00220000
DCOR_R1_PARMERR_HFSDSNREQ EQU 2 The name of a dump data set in the HFS *00221000
                         could not be found                             00222000
*                                                                       00223000
*      ***************************************************************  00224000
*      *                                                             *  00225000
*      * R1 values when return code is Dcor_CDErc_ProcErr            *  00226000
*      *                                                             *  00227000
*      ***************************************************************  00228000
*                                                                       00229000
*                                                                       00230000
DCOR_R1_PROCERR_SYSTEMERRATC EQU 1 An unexpected system error has      *00231000
                         occured while trying to establish the IPCS    *00232000
                         environment. The R2 value contains an ABEND   *00233000
                         reason code                                    00234000
*                                                                       00235000
*      ***************************************************************  00236000
*      *                                                             *  00237000
*      * R1 values when return code is Dcor_CDErc_AllocateErr        *  00238000
*      *                                                             *  00239000
*      ***************************************************************  00240000
*                                                                       00241000
*                                                                       00242000
DCOR_R1_ALLOCATEERR_LOGDSN EQU 1 Error allocating the log data set.    *00243000
                         The R2 field is the return code from          *00244000
                         allocation and the R3 field is the reason     *00245000
                         code.                                          00246000
DCOR_R1_ALLOCATEERR_EXECDSN EQU 2 Error allocating the EXEC data set.  *00247000
                         The R2 field is the return code from          *00248000
                         allocation and the R3 field is the reason     *00249000
                         code.                                          00250000
*                                                                       00251000
* ********************************************************************  00252000
* *                                                                  *  00253000
* * Function codes for BPXGMPTR Ptrace Dump Access Routine           *  00254000
* *                                                                  *  00255000
* ********************************************************************  00256000
*                                                                       00257000
*                                                                       00258000
DCOR_ASID_LIST# EQU 1                                                   00259000
DCOR_SET_ASID# EQU 2                                                    00260000
DCOR_PID_LIST# EQU 3                                                    00261000
DCOR_SET_PID# EQU 4                                                     00262000
DCOR_LDINFO# EQU 5                                                      00263000
DCOR_THREAD_LIST# EQU 6                                                 00264000
DCOR_THREAD_CURRENT# EQU 7                                              00265000
DCOR_SET_THREAD# EQU 8                                                  00266000
DCOR_PSW# EQU  9                                                        00267000
DCOR_GPR_LIST# EQU 10                                                   00268000
DCOR_THREAD_STATUS# EQU 11                                              00269000
DCOR_READ_D# EQU 12                                                     00270000
DCOR_ERROR_PSW# EQU 13                                                  00271000
DCOR_CAPTURE# EQU 14                                                    00272000
DCOR_ERROR_GPR_LIST# EQU 15                                             00273000
DCOR_FLT_LIST# EQU 16                                                   00274000
DCOR_ERROR_FLT_LIST# EQU 17                                             00275000
DCOR_CONDINFO# EQU 18                                                   00276000
DCOR_IPCSCMD# EQU 19                                                    00277000
DCOR_PTRRC_OKVALUE EQU 0 The specified function completed successfully  00278000
DCOR_PTRRC_ASIDNOTFOUND EQU 1 The requested asid(s) not in dump         00279000
DCOR_PTRRC_ASIDNOTSET EQU 2 An ASID or PID has not been established    *00280000
                         for this session                               00281000
DCOR_PTRRC_REQTYPENOTDEFINED EQU 3 The function type provided on this  *00282000
                         request is not supported by BPXGMPT2           00283000
DCOR_PTRRC_REQINVALIDTOKEN EQU 4 The open token provided on this       *00284000
                         request is not not valid                       00285000
DCOR_PTRRC_REQDCORTERMINATED EQU 5 Dcor dump access services are not   *00286000
                         available                                      00287000
DCOR_PTRRC_THREADNOTFOUND EQU 6 The request thread(s) were not in the  *00288000
                         dump                                           00289000
DCOR_PTRRC_THREADNOTSET EQU 7 The current thread has not been          *00290000
                         established                                    00291000
DCOR_PTRRC_PIDNOTSET EQU 9 The request PID(s) were not in the dump      00292000
DCOR_PTRRC_PIDNOTFOUND EQU 10 The current process has not been         *00293000
                         established                                    00294000
DCOR_PTRRC_STORAGENOTINDUMP EQU 11 The requested storage was not       *00295000
                         dumped                                         00296000
DCOR_PTRRC_NASTANDALONEDUMP EQU 12 Not supported in a standalone dump   00297000
DCOR_PTRRC_ABENDOCCURRED EQU 13 Not supported in a standalone dump      00298000
DCOR_PTRRC_STORAGELENGTHBAD EQU 14 The requested storage length was    *00299000
                         zero                                           00300000
DCOR_PTRRC_SOMESTORAGEINDUMP EQU 15 The number of bytes of storage     *00301000
                         successfully retrieved is returned in the     *00302000
                         reason code field                              00303000
RSNOKVALUE EQU 0                                                        00304000
RSNDCORERROR EQU 1       See Dcor return codes                          00305000
RSNMVSERROR EQU 2        Ususally an out of storage condition or an    *00306000
                         abend                                          00307000
RSNIPCSERROR EQU 3       When An IPCS error occurs use the DCOR log to *00308000
                         view the messages generated by IPCS (normally *00309000
                         suppress)                                      00310000
RSNCSVERROR EQU 4                                                       00311000
RSNCSVMODI12ERR EQU 1                                                   00312000
RSNCSVMODI3ERR EQU 2                                                    00313000
RSNCSVTOOMANYEXTENTS EQU 3                                              00314000
         AIF   ('&PARMS' EQ 'NO').L0002                                 00315000
         AIF   ('&DSECT' EQ 'YES').L0003                                00316000
         AIF   ('&PARMS' NE 'YES').L0002                                00317000
.L0003   ANOP                                                           00318000
*                                                                       00319000
* ********************************************************************  00320000
* *   parameter definitions for BPXGMPTR Ptrace Dump Access Routine  *  00321000
* *   1. Parm     1   function code                                  *  00322000
* *   2. Parms    2   Token returned from DCOR_OPEN#                 *  00323000
* *   3. Parms    3-5 Function parameters                            *  00324000
* *   3. Parms    6-8 retvalue, retcode, rsncode                     *  00325000
* ********************************************************************  00326000
*                                                                       00327000
*                                                                       00328000
         AIF   ('&DSECT' EQ 'YES').L0004                                00329000
PARMS    DS    0F                                                       00330000
         AGO   .L0005                                                   00331000
.L0004   ANOP                                                           00332000
PARMS    DSECT                                                          00333000
.L0005   ANOP                                                           00334000
PARMS_FUNCTYPEPTR DS A                                                  00335000
PARMS_DCOMTOKENPTR DS A                                                 00336000
PARMS_INTERFACE DS CL12                                                 00337000
         ORG   PARMS_INTERFACE                                          00338000
PARMS_CAPTURE DS CL12                                                   00339000
         ORG   PARMS_CAPTURE                                            00340000
PARMS_CAPTURE_PSTORADR DS A                                             00341000
PARMS_CAPTURE_PSTORLEN DS A                                             00342000
PARMS_CAPTURE_PDATAADR DS A Address output buffer                       00343000
         ORG   PARMS_INTERFACE                                          00344000
PARMS_READD DS CL12                                                     00345000
         ORG   PARMS_READD                                              00346000
PARMS_READD_PSTORADR DS A                                               00347000
PARMS_READD_PSTORLEN DS A                                               00348000
PARMS_READD_PDATAADR DS A user provided buffer                          00349000
         ORG   PARMS_INTERFACE                                          00350000
PARMS_LDINFO DS CL4                                                     00351000
         ORG   PARMS_LDINFO                                             00352000
PARMS_LDINFO_OUTBUFPTR DS A                                             00353000
         ORG   PARMS_INTERFACE                                          00354000
PARMS_THREADLIST DS CL8                                                 00355000
         ORG   PARMS_THREADLIST                                         00356000
PARMS_THREADLIST_OUTBUFPTR DS A                                         00357000
PARMS_THREADLIST_OUTBUFCNT DS A                                         00358000
         ORG   PARMS_INTERFACE                                          00359000
PARMS_PIDLIST DS CL8                                                    00360000
         ORG   PARMS_PIDLIST                                            00361000
PARMS_PIDLIST_OUTBUFPTR DS A                                            00362000
PARMS_PIDLIST_OUTBUFCNT DS A                                            00363000
         ORG   PARMS_INTERFACE                                          00364000
PARMS_ASIDLIST DS CL8                                                   00365000
         ORG   PARMS_ASIDLIST                                           00366000
PARMS_ASIDLIST_OUTBUFPTR DS A                                           00367000
PARMS_ASIDLIST_OUTBUFCNT DS A                                           00368000
         ORG   PARMS_INTERFACE                                          00369000
PARMS_THREADCURRENT DS CL4                                              00370000
         ORG   PARMS_THREADCURRENT                                      00371000
PARMS_THREADCURRENT_OUTBUFPTR DS A                                      00372000
         ORG   PARMS_INTERFACE                                          00373000
PARMS_SETASID DS CL4                                                    00374000
         ORG   PARMS_SETASID                                            00375000
PARMS_SETASID_INBUFPTR DS A                                             00376000
         ORG   PARMS_INTERFACE                                          00377000
PARMS_SETPID DS CL4                                                     00378000
         ORG   PARMS_SETPID                                             00379000
PARMS_SETPID_INBUFPTR DS A                                              00380000
         ORG   PARMS_INTERFACE                                          00381000
PARMS_SETTHREAD DS CL4                                                  00382000
         ORG   PARMS_SETTHREAD                                          00383000
PARMS_SETTHREAD_INBUFPTR DS A                                           00384000
         ORG   PARMS_INTERFACE                                          00385000
PARMS_PSW DS   CL4                                                      00386000
         ORG   PARMS_PSW                                                00387000
PARMS_PSW_OUTBUFPTR DS A                                                00388000
         ORG   PARMS_INTERFACE                                          00389000
PARMS_ERROR_PSW DS CL4                                                  00390000
         ORG   PARMS_ERROR_PSW                                          00391000
PARMS_ERROR_PSW_OUTBUFPTR DS A                                          00392000
         ORG   PARMS_INTERFACE                                          00393000
PARMS_THREADSTATUS DS CL8                                               00394000
         ORG   PARMS_THREADSTATUS                                       00395000
PARMS_THREADSTATUS_OUTBUFPTR DS A                                       00396000
PARMS_THREADSTATUS_OUTBUFLEN DS A                                       00397000
         ORG   PARMS_INTERFACE                                          00398000
PARMS_GPRLIST DS CL8                                                    00399000
         ORG   PARMS_GPRLIST                                            00400000
PARMS_GPRLIST_OUTBUFPTR DS A                                            00401000
PARMS_GPRLIST_OUTBUFLEN DS A                                            00402000
         ORG   PARMS_INTERFACE                                          00403000
PARMS_ERROR_GPRLIST DS CL8                                              00404000
         ORG   PARMS_ERROR_GPRLIST                                      00405000
PARMS_ERROR_GPRLIST_OUTBUFPTR DS A                                      00406000
PARMS_ERROR_GPRLIST_OUTBUFLEN DS A                                      00407000
         ORG   PARMS_INTERFACE                                          00408000
PARMS_FLTLIST DS CL8                                                    00409000
         ORG   PARMS_FLTLIST                                            00410000
PARMS_FLTLIST_OUTBUFPTR DS A                                            00411000
PARMS_FLTLIST_OUTBUFLEN DS A                                            00412000
         ORG   PARMS_INTERFACE                                          00413000
PARMS_ERROR_FLTLIST DS CL8                                              00414000
         ORG   PARMS_ERROR_FLTLIST                                      00415000
PARMS_ERROR_FLTLIST_OUTBUFPTR DS A                                      00416000
PARMS_ERROR_FLTLIST_OUTBUFLEN DS A                                      00417000
         ORG   PARMS_INTERFACE                                          00418000
PARMS_CONDITIONINFO DS CL8                                              00419000
         ORG   PARMS_CONDITIONINFO                                      00420000
PARMS_CONDITIONINFO_OUTBUFPTR DS A                                      00421000
PARMS_CONDITIONINFO_OUTBUFLEN DS A                                      00422000
         ORG   PARMS_INTERFACE                                          00423000
PARMS_IPCSCMD DS CL12                                                   00424000
         ORG   PARMS_IPCSCMD                                            00425000
PARMS_IPCSCMDTEXT_INBUFPTR DS A                                         00426000
PARMS_IPCSCMDTEXT_INBUFLEN DS A                                         00427000
PARMS_IPCSCMDPRNT_LRECL DS A                                            00428000
PARMS_XRVPTR DS A        Return Value                                   00429000
PARMS_XRCPTR DS A        Return Code                                    00430000
PARMS_XRSNPTR DS A       Reason Code                                    00431000
PARMS_LEN EQU  *-PARMS                                                  00432000
.L0002   ANOP                                                           00433000
         AIF   ('&PARMSG' EQ 'NO').L0006                                00434000
         AIF   ('&DSECT' EQ 'YES').L0007                                00435000
         AIF   ('&PARMSG' NE 'YES').L0006                               00436000
PARMSG   DS    0D                                                       00437000
         AGO   .L0008                                                   00438000
.L0007   ANOP                                                           00439000
PARMSG   DSECT                                                          00440000
.L0008   ANOP                                                           00441000
PARMS_FUNCTYPEPTRG DS AD                                                00442000
PARMS_DCOMTOKENPTRG DS AD                                               00443000
PARMS_INTERFACEG DS CL24                                                00444000
         ORG   PARMS_INTERFACEG                                         00445000
PARMS_CAPTUREG DS CL24                                                  00446000
         ORG   PARMS_CAPTUREG                                           00447000
PARMS_CAPTURE_PSTORADRG DS AD                                           00448000
PARMS_CAPTURE_PSTORLENG DS AD                                           00449000
PARMS_CAPTURE_PDATAADRG DS AD                                           00450000
         ORG   PARMS_INTERFACEG                                         00451000
PARMS_READDG DS CL24                                                    00452000
         ORG   PARMS_READDG                                             00453000
PARMS_READD_PSTORADRG DS AD                                             00454000
PARMS_READD_PSTORLENG DS AD                                             00455000
PARMS_READD_PDATAADRG DS AD                                             00456000
         ORG   PARMS_INTERFACEG                                         00457000
PARMS_LDINFOG DS CL8                                                    00458000
         ORG   PARMS_LDINFOG                                            00459000
PARMS_LDINFO_OUTBUFPTRG DS AD                                           00460000
         ORG   PARMS_INTERFACEG                                         00461000
PARMS_THREADLISTG DS CL16                                               00462000
         ORG   PARMS_THREADLISTG                                        00463000
PARMS_THREADLIST_OUTBUFPTRG DS AD                                       00464000
PARMS_THREADLIST_OUTBUFCNTG DS AD                                       00465000
         ORG   PARMS_INTERFACEG                                         00466000
PARMS_PIDLISTG DS CL16                                                  00467000
         ORG   PARMS_PIDLISTG                                           00468000
PARMS_PIDLIST_OUTBUFPTRG DS AD                                          00469000
PARMS_PIDLIST_OUTBUFCNTG DS AD                                          00470000
         ORG   PARMS_INTERFACEG                                         00471000
PARMS_ASIDLISTG DS CL16                                                 00472000
         ORG   PARMS_ASIDLISTG                                          00473000
PARMS_ASIDLIST_OUTBUFPTRG DS AD                                         00474000
PARMS_ASIDLIST_OUTBUFCNTG DS AD                                         00475000
         ORG   PARMS_INTERFACEG                                         00476000
PARMS_THREADCURRENTG DS CL8                                             00477000
         ORG   PARMS_THREADCURRENTG                                     00478000
PARMS_THREADCURRENT_OUTBUFPTRG DS AD                                    00479000
         ORG   PARMS_INTERFACEG                                         00480000
PARMS_SETASIDG DS CL8                                                   00481000
         ORG   PARMS_SETASIDG                                           00482000
PARMS_SETASID_INBUFPTRG DS AD                                           00483000
         ORG   PARMS_INTERFACEG                                         00484000
PARMS_SETPIDG DS CL8                                                    00485000
         ORG   PARMS_SETPIDG                                            00486000
PARMS_SETPID_INBUFPTRG DS AD                                            00487000
         ORG   PARMS_INTERFACEG                                         00488000
PARMS_SETTHREADG DS CL8                                                 00489000
         ORG   PARMS_SETTHREADG                                         00490000
PARMS_SETTHREAD_INBUFPTRG DS AD                                         00491000
         ORG   PARMS_INTERFACEG                                         00492000
PARMS_PSWG DS  CL8                                                      00493000
         ORG   PARMS_PSWG                                               00494000
PARMS_PSW_OUTBUFPTRG DS AD                                              00495000
         ORG   PARMS_INTERFACEG                                         00496000
PARMS_ERROR_PSWG DS CL8                                                 00497000
         ORG   PARMS_ERROR_PSWG                                         00498000
PARMS_ERROR_PSW_OUTBUFPTRG DS AD                                        00499000
         ORG   PARMS_INTERFACEG                                         00500000
PARMS_THREADSTATUSG DS CL16                                             00501000
         ORG   PARMS_THREADSTATUSG                                      00502000
PARMS_THREADSTATUS_OUTBUFPTRG DS AD                                     00503000
PARMS_THREADSTATUS_OUTBUFLENG DS AD                                     00504000
         ORG   PARMS_INTERFACEG                                         00505000
PARMS_GPRLISTG DS CL16                                                  00506000
         ORG   PARMS_GPRLISTG                                           00507000
PARMS_GPRLIST_OUTBUFPTRG DS AD                                          00508000
PARMS_GPRLIST_OUTBUFLENG DS AD                                          00509000
         ORG   PARMS_INTERFACEG                                         00510000
PARMS_ERROR_GPRLISTG DS CL16                                            00511000
         ORG   PARMS_ERROR_GPRLISTG                                     00512000
PARMS_ERROR_GPRLIST_OUTBUFPTRG DS AD                                    00513000
PARMS_ERROR_GPRLIST_OUTBUFLENG DS AD                                    00514000
         ORG   PARMS_INTERFACEG                                         00515000
PARMS_FLTLISTG DS CL16                                                  00516000
         ORG   PARMS_FLTLISTG                                           00517000
PARMS_FLTLIST_OUTBUFPTRG DS AD                                          00518000
PARMS_FLTLIST_OUTBUFLENG DS AD                                          00519000
         ORG   PARMS_INTERFACEG                                         00520000
PARMS_ERROR_FLTLISTG DS CL16                                            00521000
         ORG   PARMS_ERROR_FLTLISTG                                     00522000
PARMS_ERROR_FLTLIST_OUTBUFPTRG DS AD                                    00523000
PARMS_ERROR_FLTLIST_OUTBUFLENG DS AD                                    00524000
         ORG   PARMS_INTERFACEG                                         00525000
PARMS_CONDITIONINFOG DS CL16                                            00526000
         ORG   PARMS_CONDITIONINFOG                                     00527000
PARMS_CONDITIONINFO_OUTBUFPTRG DS AD                                    00528000
PARMS_CONDITIONINFO_OUTBUFLENG DS AD                                    00529000
         ORG   PARMS_INTERFACEG                                         00530000
PARMS_IPCSCMDG DS CL24                                                  00531000
         ORG   PARMS_IPCSCMDG                                           00532000
PARMS_IPCSCMDTEXT_INBUFPTRG DS AD                                       00533000
PARMS_IPCSCMDTEXT_INBUFLENG DS AD                                       00534000
PARMS_IPCSCMDPRNT_LRECLG DS AD                                          00535000
PARMS_XRVPTRG DS AD                                                     00536000
PARMS_XRCPTRG DS AD                                                     00537000
PARMS_XRSNPTRG DS AD                                                    00538000
PARMSG_LEN EQU *-PARMSG                                                 00539000
.L0006   ANOP                                                           00540000
         AIF   ('&ASIDLIST_MAP' EQ 'NO').L0009                          00541000
         AIF   ('&DSECT' EQ 'YES').L000A                                00542000
         AIF   ('&ASIDLIST_MAP' NE 'YES').L0009                         00543000
ASIDLIST_MAP DS 0D                                                      00544000
         AGO   .L000B                                                   00545000
.L000A   ANOP                                                           00546000
ASIDLIST_MAP DSECT                                                      00547000
.L000B   ANOP                                                           00548000
ASID_NEXTOFF DS F        Offset to the next ASID in DcomAsidList        00549000
ASID_NUM DS    H                                                        00550000
ASID_CPU DS    X         CPUID                                          00551000
ASID_FLAGS DS  B         Status flags                                   00552000
*  Bit definitions:                                                     00553000
ASID_HOME EQU  X'80'     Current HOMEAsid                               00554000
ASID_PRIM EQU  X'40'     Current PRIMARY ASID                           00555000
ASID_SEC EQU   X'20'     Current SECONDARY ASID                         00556000
ASID_JOBNAME DS CL9                                                     00557000
         DS    CL3       Reserved                                       00558000
ASID_PIDCNT DS F         Number of Pids in this Asid                    00559000
ASID_ASCB DS   A         Pointer to ASCB                                00560000
         DS    CL4       Reserved                                       00561000
ASID_PIDLISTPTR DS A     Pointer to the pidlist for This Asid           00562000
         DS    CL4       Reserved                                       00563000
ASID_MAPEND DS 0C        end of block                                   00564000
ASIDLIST_MAP_LEN EQU *-ASIDLIST_MAP                                     00565000
.L0009   ANOP                                                           00566000
         AIF   ('&PIDLIST_MAP' EQ 'NO').L000C                           00567000
         AIF   ('&DSECT' EQ 'YES').L000D                                00568000
         AIF   ('&PIDLIST_MAP' NE 'YES').L000C                          00569000
PIDLIST_MAP DS 0D                                                       00570000
         AGO   .L000E                                                   00571000
.L000D   ANOP                                                           00572000
PIDLIST_MAP DSECT                                                       00573000
.L000E   ANOP                                                           00574000
PID_NEXTOFF DS F         Offset to the next Pid in DcomPidList          00575000
PID_     DS    F         Process id                                     00576000
PID_ASID DS    H         Asid of this Pid                               00577000
PID_THIDCNT DS H         Count of thids in this pid                     00578000
PID_FOCUSTHREAD DS CL8   Ptrace focus thread                            00579000
PID_ERRORTHREAD DS CL8   Ptrace error thread                            00580000
PID_LOGINNAME DS CL9     Tso logon                                      00581000
         DS    CL3       Reserved                                       00582000
PID_THIDLISTPTR DS A     list info for each THID                        00583000
         DS    CL4       Reserved                                       00584000
PID_PENDINGSIGMASK DS BL8 Signals pending at the process that could    *00585000
                         not be delivered to any thread                 00586000
PID_BLOCKEDSIGMASK DS BL8 Signals blocked on all thread                 00587000
PID_MAPEND DS  0C        end of block                                   00588000
PIDLIST_MAP_LEN EQU *-PIDLIST_MAP                                       00589000
.L000C   ANOP                                                           00590000
         AIF   ('&CONDINFO_MAP' EQ 'NO').L000F                          00591000
         AIF   ('&DSECT' EQ 'YES').L0010                                00592000
         AIF   ('&CONDINFO_MAP' NE 'YES').L000F                         00593000
CONDINFO_MAP DS 0D                                                      00594000
         AGO   .L0011                                                   00595000
.L0010   ANOP                                                           00596000
CONDINFO_MAP DSECT                                                      00597000
.L0011   ANOP                                                           00598000
COND_CURABENDINFO DS CL16 If current task abended                       00599000
         ORG   COND_CURABENDINFO                                        00600000
COND_CURINTCODE DS H     Interrupt code                                 00601000
COND_CURSIGNUMBER DS H   Signal number raised                           00602000
COND_CURABENDCODE DS BL4 Abend code                                     00603000
         ORG   COND_CURABENDCODE                                        00604000
COND_CURABENDFLAGS DS B  System or user                                 00605000
COND_CURABENDCC DS BL3   Abend Number                                   00606000
COND_CURABENDREASON DS BL4 Abend Reason                                 00607000
COND_CURILC DS H         Instruction length                             00608000
         DS    CL2       Reserved                                       00609000
CONDINFO_MAPEND DS 0C    end of block                                   00610000
CONDINFO_MAP_LEN EQU *-CONDINFO_MAP                                     00611000
.L000F   ANOP                                                           00612000
         AIF   ('&ZCBPRINT' EQ 'NO').P3                                 00613000
         AIF   ('&LIST' EQ 'YES').P4                                    00614000
.P3      ANOP                                                           00615000
         POP   PRINT                                                    00616000
.P4      ANOP                                                           00617000
.P_EXIT  ANOP                                                           00618000
         MEND                                                           00619000
**/ BPXYDCOR_2:;                                                        00620000
* %BPXYDCOR_INCLUDED = 'YES';                                           00621000
* %DCL ZCBPRINT CHAR EXT;                                               00622000
* %DEACTIVATE ZCBPRINT;                                                 00623000
* %DCL BPXYDCOR_LIST CHAR EXT;                                          00624000
* %DEACTIVATE BPXYDCOR_LIST;                                            00625000
* %IF BPXYDCOR_LIST ^= 'NO' &                                           00626000
*    ZCBPRINT ^= 'NO' %THEN                                             00627000
*   %GOTO BPXYDCOR_3;                                                   00628000
*   @LIST PUSH NOECHO;                                                  00629000
*   @LIST NOASSEMBLE NOECHO;                                            00630000
*   @LIST OFF C NOECHO;                                                 00631000
* %BPXYDCOR_3:;                                                         00632000
*/* Start of PL/X Source                                             */ 00633000
*                                                                       00634000
*   @EJECT;                                                             00635000
*                                                                       00636000
*/********************************************************************/ 00637000
*/*                                                                  */ 00638000
*/* Level information                                                */ 00639000
*/*                                                                  */ 00640000
*/********************************************************************/ 00641000
*                                                                       00642000
*   DECLARE                                                             00643000
*     Dcor_Level1  Fixed(32) Constant(65536), /* 65536='00010000'x.  */ 00644000
*     Dcor_Level2  Fixed(32) Constant(131072);                          00645000
*                                             /* 131072='00020000'x. */ 00646000
*                                                                       00647000
*/********************************************************************/ 00648000
*/*                                                                  */ 00649000
*/* Function codes for BPXGMCDE routine                              */ 00650000
*/*                                                                  */ 00651000
*/********************************************************************/ 00652000
*                                                                       00653000
*   DECLARE                                                             00654000
*     Dcor_OPEN#   Fixed(31) Constant(1),                               00655000
*     Dcor_CLOSE#  Fixed(31) Constant(2),                               00656000
*     Dcor_STATUS# Fixed(31) Constant(3);                               00657000
*   /* Open return codes                                             */ 00658000
*   DECLARE                                                             00659000
*     Dcor_CDErc_OK Fixed(31) Constant(0), /* The specified function    00660000
*                                         completed successfully */     00661000
*     Dcor_CDErc_ParmErr Fixed(31) Constant(4), /* A parmeter error     00662000
*                                         was detected. See return      00663000
*                                         value 1 for more detail */    00664000
*     Dcor_CDErc_ProcErr Fixed(31) Constant(8), /* A DCORE processing   00665000
*                                         error occurred. See return    00666000
*                                         value 1 for more detail */    00667000
*     Dcor_CDErc_IKJTSOEVErr Fixed(31) Constant(12), /* An error was    00668000
*                                         encountered trying to         00669000
*                                         establish a TSO environment   00670000
*                                         with the IKJTSOEV service.    00671000
*                                         See  return values for more   00672000
*                                         information */                00673000
*     Dcor_CDErc_IKJEFTSRErr Fixed(31) Constant(16), /* An error was    00674000
*                                         encountered trying to run the 00675000
*                                         REXX EXEC with the IKJEFTSR   00676000
*                                         service.  See  return values  00677000
*                                         for more information */       00678000
*     Dcor_CDErc_AllocateErr Fixed(31) Constant(20), /* An error was    00679000
*                                         encountered trying to         00680000
*                                         allocate one of the user      00681000
*                                         specified data sets.       */ 00682000
*     Dcor_CDErc_IRXinitErr  Fixed(31) Constant(28); /* An error was    00683000
*                                         encountered trying to         00684000
*                                         establish a REXX              00685000
*                                         environment                */ 00686000
*   /*****************************************************************/ 00687000
*   /* Status return codes                                           */ 00688000
*   /*****************************************************************/ 00689000
*   DECLARE                                                             00690000
*     Dcor_CDErc_Status_OpenComplete Fixed(31) Constant(0), /* */       00691000
*     Dcor_CDErc_Status_OpenContinuing Fixed(31) Constant(1), /* */     00692000
*     Dcor_CDErc_Status_OpenTerminated Fixed(31) Constant(2), /* */     00693000
*     Dcor_CDErc_Status_InvalidToken Fixed(31) Constant(3); /* */       00694000
*   /*****************************************************************/ 00695000
*   /* Status Rc values when Status return code is                   */ 00696000
*   /* Dcor_CDErc_Status_OpenContinuing                              */ 00697000
*   /*****************************************************************/ 00698000
*   DECLARE                                                             00699000
*     Dcor_Status_Cont_StartTSOENV Fixed Constant(0), /* Starting the   00700000
*                                         TSO environment            */ 00701000
*     Dcor_Status_Cont_ExecStarted Fixed Constant(1), /* BPXTIPCS       00702000
*                                         started                    */ 00703000
*     Dcor_Status_Cont_ExecCLIST   Fixed Constant(2), /* BPXTIPCS       00704000
*                                         allocating CLIST data set  */ 00705000
*     Dcor_Status_Cont_DumpDDIR    Fixed Constant(3), /* BPXTIPCS       00706000
*                                         allocating/creating dump      00707000
*                                         directory via BLSCDDIR     */ 00708000
*     Dcor_Status_Cont_AllocDumpDS Fixed Constant(4), /* BPXTIPCS       00709000
*                                         allocating the dump data set  00710000
*                                                                    */ 00711000
*     Dcor_Status_Cont_InvokeIPCS  Fixed Constant(5), /* BPXTIPCS       00712000
*                                         invoking IPCS              */ 00713000
*     Dcor_Status_Cont_InvokeVERBX Fixed Constant(6), /* BPXTIPC2       00714000
*                                         invoking VERBX routine     */ 00715000
*     Dcor_Status_Cont_AnalysisStart Fixed Constant(7), /* Dump         00716000
*                                         analysis started           */ 00717000
*     Dcor_Status_Cont_AnalysisProcAsids Fixed Constant(8), /* Analysis 00718000
*                                         processing Asids           */ 00719000
*     Dcor_Status_Cont_ExecExiting Fixed Constant(9), /* BPXTIPCS       00720000
*                                         exiting                    */ 00721000
*     Dcor_Status_Cont_Recall      Fixed Constant(10);/* BPXTIPCS       00722000
*                                         recalling data set         */ 00723000
*   /*****************************************************************/ 00724000
*   /* R1 values when return code is Dcor_CDErc_ParmErr              */ 00725000
*   /*****************************************************************/ 00726000
*   DECLARE                                                             00727000
*     Dcor_R1_ParmErr_DumpDsnReq  Fixed(31) Constant(1), /* The name of 00728000
*                                         a dump data set is required   00729000
*                                                                    */ 00730000
*     Dcor_R1_ParmErr_HFSDsnReq   Fixed(31) Constant(2), /* The name of 00731000
*                                         a dump data set in the HFS    00732000
*                                         could not be found     @P1A*/ 00733000
*     /***************************************************************/ 00734000
*     /* R1 values when return code is Dcor_CDErc_ProcErr            */ 00735000
*     /***************************************************************/ 00736000
*     Dcor_R1_ProcErr_SystemErrATC Fixed(31) Constant(1), /* An         00737000
*                                      unexpected system error has      00738000
*                                      occured while trying to          00739000
*                                      establish the IPCS               00740000
*                                      environment. The R2 value        00741000
*                                      contains an ABEND reason code */ 00742000
*     /***************************************************************/ 00743000
*     /* R1 values when return code is Dcor_CDErc_AllocateErr        */ 00744000
*     /***************************************************************/ 00745000
*     Dcor_R1_AllocateErr_LogDsn Fixed(31) Constant(1), /* Error        00746000
*                                         allocating the log data set.  00747000
*                                         The R2 field is the return    00748000
*                                         code from allocation and      00749000
*                                         the R3 field is the reason    00750000
*                                         code.                      */ 00751000
*     Dcor_R1_AllocateErr_ExecDsn Fixed(31) Constant(2); /* Error       00752000
*                                         allocating the EXEC data set. 00753000
*                                         The R2 field is the return    00754000
*                                         code from allocation and      00755000
*                                         the R3 field is the reason    00756000
*                                         code.                      */ 00757000
*                                                                       00758000
*/********************************************************************/ 00759000
*/*                                                                  */ 00760000
*/* Function codes for BPXGMPTR Ptrace Dump Access Routine           */ 00761000
*/*                                                                  */ 00762000
*/********************************************************************/ 00763000
*                                                                       00764000
*                                                                       00765000
*   DECLARE                                                             00766000
*     Dcor_ASID_LIST#       Fixed(32) Constant(1),                      00767000
*     Dcor_SET_ASID#        Fixed(32) Constant(2),                      00768000
*     Dcor_PID_LIST#        Fixed(32) Constant(3),                      00769000
*     Dcor_SET_PID#         Fixed(32) Constant(4),                      00770000
*     Dcor_LDINFO#          Fixed(32) Constant(5),                      00771000
*     Dcor_THREAD_LIST#     Fixed(32) Constant(6),                      00772000
*     Dcor_THREAD_CURRENT#  Fixed(32) Constant(7),                      00773000
*     Dcor_SET_THREAD#      Fixed(32) Constant(8),                      00774000
*     Dcor_PSW#             Fixed(32) Constant(9),                      00775000
*     Dcor_GPR_LIST#        Fixed(32) Constant(10),                     00776000
*     Dcor_THREAD_STATUS#   Fixed(32) Constant(11),                     00777000
*     Dcor_READ_D#          Fixed(32) Constant(12),                     00778000
*     DCOR_ERROR_PSW#       FIXED(32) Constant(13),                     00779000
*     Dcor_CAPTURE#         Fixed(32) Constant(14),                     00780000
*     Dcor_ERROR_GPR_LIST#  Fixed(32) Constant(15),                     00781000
*     Dcor_FLT_LIST#        Fixed(32) Constant(16),                     00782000
*     Dcor_ERROR_FLT_LIST#  Fixed(32) Constant(17),                     00783000
*     Dcor_CONDINFO#        Fixed(32) Constant(18),                     00784000
*     Dcor_IPCSCMD#         Fixed(32) Constant(19);                     00785000
*                                                                       00786000
*   DECLARE                                                             00787000
*     Dcor_PTRrc_OkValue               Fixed(32) Constant(0),           00788000
*                                          /* The specified function    00789000
*                                         completed successfully */     00790000
*     Dcor_PTRrc_AsidNotFound          Fixed(32) Constant(1),           00791000
*                                          /* The requested asid(s)     00792000
*                                         not in dump            */     00793000
*     Dcor_PTRrc_AsidNotSet            Fixed(32) Constant(2),           00794000
*                                          /* An ASID or PID has not    00795000
*                                         been established for this     00796000
*                                         session                */     00797000
*     Dcor_PTRrc_ReqTypeNotDefined     Fixed(32) Constant(3),           00798000
*                                          /* The function type         00799000
*                                         provided on this request      00800000
*                                         is not supported by           00801000
*                                         BPXGMPT2                */    00802000
*     Dcor_PTRrc_ReqInvalidToken       Fixed(32) Constant(4),           00803000
*                                          /* The open token            00804000
*                                         provided on this request      00805000
*                                         is not not valid        */    00806000
*     Dcor_PTRrc_ReqDcorTerminated     Fixed(32) Constant(5),           00807000
*                                          /* Dcor dump access          00808000
*                                         services are not              00809000
*                                         available               */    00810000
*     Dcor_PTRrc_ThreadNotFound        Fixed(32) Constant(6),           00811000
*                                          /* The request thread(s)     00812000
*                                         were not in the dump    */    00813000
*     Dcor_PTRrc_ThreadNotSet          Fixed(32) Constant(7),           00814000
*                                          /* The current thread has    00815000
*                                          not been established   */    00816000
*     Dcor_PTRrc_PidNotSet             Fixed(32) Constant(9),           00817000
*                                          /* The request PID(s)        00818000
*                                         were not in the dump    */    00819000
*     Dcor_PTRrc_PidNotFound           Fixed(32) Constant(10),          00820000
*                                          /* The current process has   00821000
*                                          not been established   */    00822000
*     Dcor_PTRrc_StorageNotInDump      Fixed(32) Constant(11),          00823000
*                                          /* The requested storage     00824000
*                                          was not dumped         */    00825000
*     Dcor_PTRrc_NaStandAloneDump      Fixed(32) Constant(12),          00826000
*                                          /* Not supported in a        00827000
*                                          standalone dump        */    00828000
*     Dcor_PTRrc_AbendOccurred         Fixed(32) Constant(13),          00829000
*                                          /* Not supported in a        00830000
*                                          standalone dump        */    00831000
*     Dcor_PTRrc_StorageLengthBad      Fixed(32) Constant(14),          00832000
*                                          /* The requested storage     00833000
*                                          length was zero        */    00834000
*     Dcor_PTRrc_SomeStorageInDump     Fixed(32) Constant(15);          00835000
*                                    /* The number of bytes of storage  00836000
*                                       successfully retrieved is       00837000
*                                       returned in the reason code     00838000
*                                       field                     */    00839000
*   DECLARE                                                             00840000
*     RsnOkValue            Fixed(32) Constant(0),                      00841000
*     RsnDcorError          Fixed(32) Constant(1),                      00842000
*                                    /*  See Dcor return codes    */    00843000
*     RsnMvsError           Fixed(32) Constant(2),                      00844000
*                                    /* Ususally an out of storage      00845000
*                                       condition or an abend        */ 00846000
*     RsnIpcsError          Fixed(32) Constant(3),                      00847000
*                                    /* When An IPCS error occurs       00848000
*                                       use the DCOR log to view        00849000
*                                       the messages generated by       00850000
*                                       IPCS (normally suppress)     */ 00851000
*     RsnCsvError  Fixed(32) Constant(4);                               00852000
*   DECLARE                                                             00853000
*     RsnCsvModi12Err Fixed(32) Constant(1),                            00854000
*     RsnCsvModi3Err Fixed(32) Constant(2),                             00855000
*     RsnCsvTooManyExtents Fixed(32) Constant(3);                       00856000
*                                                                       00857000
*/********************************************************************/ 00858000
*/*   parameter definitions for BPXGMPTR Ptrace Dump Access Routine  */ 00859000
*/*   1. Parm     1   function code                                  */ 00860000
*/*   2. Parms    2   Token returned from DCOR_OPEN#                 */ 00861000
*/*   3. Parms    3-5 Function parameters                            */ 00862000
*/*   3. Parms    6-8 retvalue, retcode, rsncode                     */ 00863000
*/********************************************************************/ 00864000
*   DECLARE                                                             00865000
*     1    Parms    Based(DcomReqParmPtr),                              00866000
*       3    Parms_FuncTypePtr ptr,                                     00867000
*       3    Parms_DcomTokenPtr ptr,                                    00868000
*       3    Parms_Interface Char(12) bdy(word) union,                  00869000
*         5    Parms_Capture,                                           00870000
*           7    Parms_Capture_pStorAdr ptr,                            00871000
*           7    Parms_Capture_pStorLen ptr,                            00872000
*           7    Parms_Capture_pDataAdr ptr, /* Address output buffer*/ 00873000
*         5    Parms_ReadD,                                             00874000
*           7    Parms_ReadD_pStorAdr ptr,                              00875000
*           7    Parms_ReadD_pStorLen ptr,                              00876000
*           7    Parms_ReadD_pDataAdr ptr, /* user provided buffer   */ 00877000
*         5    Parms_LdInfo,                                            00878000
*           7    Parms_Ldinfo_OutBufPtr ptr,                            00879000
*         5    Parms_THREADLIST,                                        00880000
*           7    Parms_ThreadList_OutBufPtr ptr,                        00881000
*           7    Parms_ThreadList_OutBufCnt ptr,                        00882000
*         5    Parms_PidList,                                           00883000
*           7    Parms_PidList_OutBufPtr ptr,                           00884000
*           7    Parms_PidList_OutBufCnt ptr,                           00885000
*         5    Parms_AsidList,                                          00886000
*           7    Parms_AsidList_OutBufPtr ptr,                          00887000
*           7    Parms_AsidList_OutBufCnt ptr,                          00888000
*         5    Parms_ThreadCurrent,                                     00889000
*           7    Parms_ThreadCurrent_OutBufPtr ptr,                     00890000
*         5    Parms_SetAsid,                                           00891000
*           7    Parms_SetAsid_InBufPtr ptr,                            00892000
*         5    Parms_SetPid,                                            00893000
*           7    Parms_SetPid_InBufPtr ptr,                             00894000
*         5    Parms_SetThread,                                         00895000
*           7    Parms_SetThread_InBufPtr ptr,                          00896000
*         5    Parms_Psw,                                               00897000
*           7    Parms_Psw_OutBufPtr ptr,                               00898000
*         5    Parms_ERROR_PSW,                                         00899000
*           7    Parms_ERROR_PSW_OutBufPtr ptr,                         00900000
*         5    Parms_ThreadStatus,                                      00901000
*           7    Parms_ThreadStatus_OutBufPtr ptr,                      00902000
*           7    Parms_ThreadStatus_OutBufLen ptr,                      00903000
*         5    Parms_GprList,                                           00904000
*           7    Parms_GprList_OutBufPtr ptr,                           00905000
*           7    Parms_GprList_OutBufLen ptr,                           00906000
*         5    Parms_ERROR_GPRLIST,                                     00907000
*           7    Parms_ERROR_GPRLIST_OutBufPtr ptr,                     00908000
*           7    Parms_ERROR_GPRLIST_OutBufLen ptr,                     00909000
*         5    Parms_FLTList,                                           00910000
*           7    Parms_FLTList_OutBufPtr ptr,                           00911000
*           7    Parms_FLTList_OutBufLen ptr,                           00912000
*         5    Parms_ERROR_FltList,                                     00913000
*           7    Parms_ERROR_FltList_OutBufPtr ptr,                     00914000
*           7    Parms_ERROR_FltList_OutBufLen ptr,                     00915000
*         5    Parms_ConditionInfo,                                     00916000
*           7    Parms_ConditionInfo_OutBufPtr ptr,                     00917000
*           7    Parms_ConditionInfo_OutBufLen ptr,                     00918000
*         5    Parms_IpcsCmd,                                           00919000
*           7    Parms_IpcsCmdText_InBufPtr ptr,                        00920000
*           7    Parms_IpcsCmdText_InBufLen ptr,                        00921000
*           7    Parms_IpcsCmdPrnt_Lrecl    ptr,                        00922000
*       3    Parms_xRvPtr Ptr,      /* Return Value                  */ 00923000
*       3    Parms_xRcPtr Ptr,      /* Return Code                   */ 00924000
*       3    Parms_xRsnPtr Ptr,     /* Reason Code                   */ 00925000
*     Parms_FuncType fixed Based(Parms_FuncTypePtr),                    00926000
*     Parms_xRv      fixed Based(Parms_xRvPtr),                         00927000
*     Parms_xRc      fixed Based(Parms_xRcPtr),                         00928000
*     Parms_xRsn     fixed Based(Parms_xRsnPtr),                        00929000
*     Parms_DcomToken ptr Based(Parms_DcomTokenPtr),                    00930000
*     Parms_IpcsCmdText char(*) based(Parms_IpcsCmdText_InBufPtr),      00931000
*     Parms_IpcsCmdTextLen Fixed based(Parms_IpcsCmdText_InBufLen),     00932000
*     Parms_IpcsCmdLrecl Fixed based(Parms_IpcsCmdPrnt_Lrecl),          00933000
*     Parms_Capture_StorAdr ptr based(Parms_Capture_pStorAdr),          00934000
*     Parms_Capture_StorLen fixed based(Parms_Capture_pStorLen),        00935000
*     Parms_Capture_DataAdr ptr Based(Parms_Capture_pDataAdr),          00936000
*     Parms_ReadD_StorAdr ptr based(Parms_ReadD_pStorAdr),              00937000
*     Parms_ReadD_StorLen fixed based(Parms_ReadD_pStorLen),            00938000
*     Parms_ReadD_DataAdr ptr based(Parms_ReadD_pDataAdr),              00939000
*     Parms_LdInfo_DataAdr ptr Based(Parms_Ldinfo_OutBufPtr),           00940000
*     Parms_ThreadList_DataAdr ptr Based(Parms_ThreadList_OutBufPtr),   00941000
*     Parms_ThreadList_Count fixed Based(Parms_ThreadList_OutBufCnt),   00942000
*     Parms_PidList_DataAdr ptr Based(Parms_PidList_OutBufPtr),         00943000
*     Parms_PidList_Count Fixed Based(Parms_PidList_OutBufCnt),         00944000
*     Parms_AsidList_DataAdr ptr Based(Parms_AsidList_OutBufPtr),       00945000
*     Parms_AsidList_Count Fixed Based(Parms_AsidList_OutBufCnt),       00946000
*     Parms_ThreadCurrent_Data Char(8)                                  00947000
*                  Based(Parms_ThreadCurrent_OutBufPtr),                00948000
*     Parms_SetAsid_Value Fixed(16)                                     00949000
*                  Based(Parms_SetAsid_InBufPtr),                       00950000
*     Parms_SetPid_Value   Fixed(32)                                    00951000
*                  Based(Parms_SetPid_InBufPtr),                        00952000
*     Parms_SetThread_Value Char(8)                                     00953000
*                  Based(Parms_SetThread_InBufPtr),                     00954000
*     Parms_Psw_Data Char(16)                                           00955000
*                  Based(Parms_Psw_OutBufPtr),                          00956000
*     Parms_ERROR_PSW_Data Char(16)                                     00957000
*                  Based(Parms_ERROR_PSW_OutBufPtr),                    00958000
*     Parms_ThreadStatus_DataAdr ptr                                    00959000
*                       Based(Parms_ThreadStatus_OutBufPtr),            00960000
*     Parms_ThreadStatus_DataLen Fixed                                  00961000
*                       Based(Parms_ThreadStatus_OutBufLen),            00962000
*     Parms_GprList_DataAdr ptr Based(Parms_GprList_OutBufPtr),         00963000
*     Parms_GprList_DataLen Fixed Based(Parms_GprList_OutBufLen),       00964000
*     Parms_ERROR_GPRLIST_DataAdr ptr                                   00965000
*                    Based(Parms_ERROR_GPRLIST_OutBufPtr),              00966000
*     Parms_ERROR_GPRLIST_DataLen                                       00967000
*                        Fixed Based(Parms_ERROR_GPRLIST_OutBufLen),    00968000
*     Parms_FltList_DataAdr ptr Based(Parms_FltList_OutBufPtr),         00969000
*     Parms_FltList_DataLen Fixed Based(Parms_FltList_OutBufLen),       00970000
*     Parms_ERROR_FltList_DataAdr ptr                                   00971000
*               Based(Parms_ERROR_FltList_OutBufPtr),                   00972000
*     Parms_ERROR_FltList_DataLen Fixed                                 00973000
*               Based(Parms_ERROR_FltList_OutBufLen),                   00974000
*     Parms_ConditionInfo_DataAdr ptr                                   00975000
*               Based(Parms_ConditionInfo_OutBufPtr),                   00976000
*     Parms_ConditionInfo_DataLen Fixed                                 00977000
*               Based(Parms_ConditionInfo_OutBufLen);                   00978000
*   DECLARE                                                             00979000
*     1    ParmsG   Based(*) Bdy(Dword),                                00980000
*       3    Parms_FuncTypePtrG ASAXMACP64,                             00981000
*       3    Parms_DcomTokenPtrG ASAXMACP64,                            00982000
*       3    Parms_InterfaceG Char(24) bdy(Dword) union,                00983000
*         5    Parms_CaptureG,                                          00984000
*           7    Parms_Capture_pStorAdrG ASAXMACP64,                    00985000
*           7    Parms_Capture_pStorLenG ASAXMACP64,                    00986000
*           7    Parms_Capture_pDataAdrG ASAXMACP64,                    00987000
*         5    Parms_ReadDg,                                            00988000
*           7    Parms_ReadD_pStorAdrG ASAXMACP64,                      00989000
*           7    Parms_ReadD_pStorLenG ASAXMACP64,                      00990000
*           7    Parms_ReadD_pDataAdrG ASAXMACP64,                      00991000
*         5    Parms_LdInfoG,                                           00992000
*           7    Parms_Ldinfo_OutBufPtrG ASAXMACP64,                    00993000
*         5    Parms_THREADLISTg,                                       00994000
*           7    Parms_ThreadList_OutBufPtrG ASAXMACP64,                00995000
*           7    Parms_ThreadList_OutBufCntG ASAXMACP64,                00996000
*         5    Parms_PidListG,                                          00997000
*           7    Parms_PidList_OutBufPtrG ASAXMACP64,                   00998000
*           7    Parms_PidList_OutBufCntG ASAXMACP64,                   00999000
*         5    Parms_AsidListG,                                         01000000
*           7    Parms_AsidList_OutBufPtrG ASAXMACP64,                  01001000
*           7    Parms_AsidList_OutBufCntG ASAXMACP64,                  01002000
*         5    Parms_ThreadCurrentG,                                    01003000
*           7    Parms_ThreadCurrent_OutBufPtrG ASAXMACP64,             01004000
*         5    Parms_SetAsidG,                                          01005000
*           7    Parms_SetAsid_InBufPtrG ASAXMACP64,                    01006000
*         5    Parms_SetPidG,                                           01007000
*           7    Parms_SetPid_InBufPtrG ASAXMACP64,                     01008000
*         5    Parms_SetThreadG,                                        01009000
*           7    Parms_SetThread_InBufPtrG ASAXMACP64,                  01010000
*         5    Parms_PswG,                                              01011000
*           7    Parms_Psw_OutBufPtrG ASAXMACP64,                       01012000
*         5    Parms_ERROR_PSWG,                                        01013000
*           7    Parms_ERROR_PSW_OutBufPtrG ASAXMACP64,                 01014000
*         5    Parms_ThreadStatusG,                                     01015000
*           7    Parms_ThreadStatus_OutBufPtrG ASAXMACP64,              01016000
*           7    Parms_ThreadStatus_OutBufLenG ASAXMACP64,              01017000
*         5    Parms_GprListG,                                          01018000
*           7    Parms_GprList_OutBufPtrG ASAXMACP64,                   01019000
*           7    Parms_GprList_OutBufLenG ASAXMACP64,                   01020000
*         5    Parms_ERROR_GPRLISTg,                                    01021000
*           7    Parms_ERROR_GPRLIST_OutBufPtrG ASAXMACP64,             01022000
*           7    Parms_ERROR_GPRLIST_OutBufLenG ASAXMACP64,             01023000
*         5    Parms_FLTListG,                                          01024000
*           7    Parms_FLTList_OutBufPtrG ASAXMACP64,                   01025000
*           7    Parms_FLTList_OutBufLenG ASAXMACP64,                   01026000
*         5    Parms_ERROR_FltListG,                                    01027000
*           7    Parms_ERROR_FltList_OutBufPtrG ASAXMACP64,             01028000
*           7    Parms_ERROR_FltList_OutBufLenG ASAXMACP64,             01029000
*         5    Parms_ConditionInfoG,                                    01030000
*           7    Parms_ConditionInfo_OutBufPtrG ASAXMACP64,             01031000
*           7    Parms_ConditionInfo_OutBufLenG ASAXMACP64,             01032000
*         5    Parms_IpcsCmdG,                                          01033000
*           7    Parms_IpcsCmdText_InBufPtrG ASAXMACP64,                01034000
*           7    Parms_IpcsCmdText_InBufLenG ASAXMACP64,                01035000
*           7    Parms_IpcsCmdPrnt_LreclG    ASAXMACP64,                01036000
*       3    Parms_xRvPtrG ASAXMACP64,                                  01037000
*       3    Parms_xRcPtrG ASAXMACP64,                                  01038000
*       3    Parms_xRsnPtrG ASAXMACP64,                                 01039000
*     Parms_FuncTypeG fixed Based(Parms_FuncTypePtrG),                  01040000
*     Parms_xRvG      fixed Based(Parms_xRvPtrG),                       01041000
*     Parms_xRcG      fixed Based(Parms_xRcPtrG),                       01042000
*     Parms_xRsnG     fixed Based(Parms_xRsnPtrG),                      01043000
*     Parms_DcomTokenG ptr Based(Parms_DcomTokenPtrG),                  01044000
*     Parms_IpcsCmdTextG char(*) based(Parms_IpcsCmdText_InBufPtrG),    01045000
*     Parms_IpcsCmdTextLenG Fixed based(Parms_IpcsCmdText_InBufLenG),   01046000
*     Parms_IpcsCmdLreclG Fixed based(Parms_IpcsCmdPrnt_LreclG),        01047000
*     Parms_Capture_StorAdrG ASAXMACP64 based(Parms_Capture_pStorAdrG), 01048000
*     Parms_Capture_StorLenG ASAXMACF64 based(Parms_Capture_pStorLenG), 01049000
*     Parms_Capture_DataAdrG ptr   Based(Parms_Capture_pDataAdrG),      01050000
*     Parms_ReadD_StorAdrG ASAXMACP64 based(Parms_ReadD_pStorAdrG),     01051000
*     Parms_ReadD_StorLenG ASAXMACF64 based(Parms_ReadD_pStorLenG),     01052000
*     Parms_ReadD_DataAdrG ASAXMACP64 based(Parms_ReadD_pDataAdrG),     01053000
*     Parms_LdInfo_DataAdrG ptr Based(Parms_Ldinfo_OutBufPtrG),         01054000
*     Parms_ThreadList_DataAdrG ptr Based(Parms_ThreadList_OutBufPtrG), 01055000
*     Parms_ThreadList_CountG fixed Based(Parms_ThreadList_OutBufCntG), 01056000
*     Parms_PidList_DataAdrG ptr Based(Parms_PidList_OutBufPtrG),       01057000
*     Parms_PidList_CountG Fixed Based(Parms_PidList_OutBufCntG),       01058000
*     Parms_AsidList_DataAdrG ptr Based(Parms_AsidList_OutBufPtrG),     01059000
*     Parms_AsidList_CountG Fixed Based(Parms_AsidList_OutBufCntG),     01060000
*     Parms_ThreadCurrent_DataG Char(8)                                 01061000
*                  Based(Parms_ThreadCurrent_OutBufPtrG),               01062000
*     Parms_SetAsid_ValueG Fixed(16)                                    01063000
*                  Based(Parms_SetAsid_InBufPtrG),                      01064000
*     Parms_SetPid_ValueG   Fixed(32)                                   01065000
*                  Based(Parms_SetPid_InBufPtrG),                       01066000
*     Parms_SetThread_ValueG Char(8)                                    01067000
*                  Based(Parms_SetThread_InBufPtrG),                    01068000
*     Parms_Psw_DataG Char(16)                                          01069000
*                  Based(Parms_Psw_OutBufPtrG),                         01070000
*     Parms_ERROR_PSW_DataG Char(16)                                    01071000
*                  Based(Parms_ERROR_PSW_OutBufPtrG),                   01072000
*     Parms_ThreadStatus_DataAdrG ptr                                   01073000
*                       Based(Parms_ThreadStatus_OutBufPtrG),           01074000
*     Parms_ThreadStatus_DataLenG Fixed                                 01075000
*                       Based(Parms_ThreadStatus_OutBufLenG),           01076000
*     Parms_GprList_DataAdrG ptr Based(Parms_GprList_OutBufPtrG),       01077000
*     Parms_GprList_DataLenG Fixed Based(Parms_GprList_OutBufLenG),     01078000
*     Parms_ERROR_GPRLIST_DataAdrG ptr                                  01079000
*                    Based(Parms_ERROR_GPRLIST_OutBufPtrG),             01080000
*     Parms_ERROR_GPRLIST_DataLenG                                      01081000
*                        Fixed Based(Parms_ERROR_GPRLIST_OutBufLenG),   01082000
*     Parms_FltList_DataAdrG ptr Based(Parms_FltList_OutBufPtrG),       01083000
*     Parms_FltList_DataLenG Fixed Based(Parms_FltList_OutBufLenG),     01084000
*     Parms_ERROR_FltList_DataAdrG ptr                                  01085000
*               Based(Parms_ERROR_FltList_OutBufPtrG),                  01086000
*     Parms_ERROR_FltList_DataLenG Fixed                                01087000
*               Based(Parms_ERROR_FltList_OutBufLenG),                  01088000
*     Parms_ConditionInfo_DataAdrG ptr                                  01089000
*               Based(Parms_ConditionInfo_OutBufPtrG),                  01090000
*     Parms_ConditionInfo_DataLenG Fixed                                01091000
*               Based(Parms_ConditionInfo_OutBufLenG);                  01092000
*   DECLARE                                                             01093000
*     1    AsidList_Map BDY(DWORD) Based,                               01094000
*       3   Asid_NextOff Fixed(32), /* Offset to the next ASID in       01095000
*                                      DcomAsidList                  */ 01096000
*       3   Asid_Num  Fixed(16),                                        01097000
*       3   Asid_Cpu  UNSIGNED BINARY(8), /* CPUID                   */ 01098000
*       3   Asid_Flags BIT(8),      /* Status flags                  */ 01099000
*         5   Asid_Home BIT(1),     /* Current HOMEAsid              */ 01100000
*         5   Asid_Prim BIT(1),     /* Current PRIMARY ASID          */ 01101000
*         5   Asid_Sec  BIT(1),     /* Current SECONDARY ASID        */ 01102000
*         5    *        BIT(5),     /* Reserved                      */ 01103000
*       3   Asid_JobName Char(9),                                       01104000
*       3    *           Char(3),   /* Reserved                      */ 01105000
*       3   Asid_PidCnt Fixed(32),  /* Number of Pids in this Asid   */ 01106000
*       3   Asid_Ascb POINTER(31),  /* Pointer to ASCB               */ 01107000
*       3    *        CHAR(4),      /* Reserved                      */ 01108000
*       3   Asid_PidListPtr Ptr,    /* Pointer to the pidlist for       01109000
*                                        This Asid                   */ 01110000
*       3    *        CHAR(4),      /* Reserved                      */ 01111000
*       3   Asid_MapEnd char(0) Bdy(Dword); /* end of block          */ 01112000
*   DECLARE                                                             01113000
*     1    PidList_Map BDY(DWORD) Based,                                01114000
*       3   Pid_NextOff Fixed(32),   /* Offset to the next Pid in       01115000
*                                      DcomPidList                   */ 01116000
*       3   Pid_      Fixed(32),     /* Process id                   */ 01117000
*       3   Pid_Asid  Fixed(16),     /* Asid of this Pid             */ 01118000
*       3   Pid_ThidCnt Fixed(16),   /* Count of thids in this pid   */ 01119000
*       3   Pid_FocusThread Char(8), /* Ptrace focus thread          */ 01120000
*       3   Pid_ErrorThread Char(8), /* Ptrace error thread          */ 01121000
*       3   Pid_LoginName Char(9),   /* Tso logon                    */ 01122000
*       3    *            Char(3),   /* Reserved                     */ 01123000
*       3   Pid_ThidListPtr Ptr(31), /* list info for each THID      */ 01124000
*       3    *            Char(4),   /* Reserved                     */ 01125000
*       3   Pid_PendingSigMask Bit(64),                                 01126000
*                                    /* Signals pending at the process  01127000
*                                      that could not be delivered to   01128000
*                                      any thread                    */ 01129000
*       3   Pid_BlockedSigMask Bit(64),                                 01130000
*                                    /* Signals blocked on all thread   01131000
*                                                                    */ 01132000
*       3   Pid_MapEnd char(0) Bdy(Dword); /* end of block           */ 01133000
*   DECLARE                                                             01134000
*     1    CondInfo_Map BDY(DWORD) Based,                               01135000
*       3   Cond_CurAbendInfo,      /* If current task abended       */ 01136000
*         5  Cond_CurIntCode Fixed(16),                                 01137000
*                                   /* Interrupt code                */ 01138000
*         5  Cond_CurSigNumber Fixed(16),                               01139000
*                                   /* Signal number raised          */ 01140000
*         5  Cond_CurAbendCode Bit(32),                                 01141000
*                                   /* Abend code                    */ 01142000
*           7   Cond_CurAbendFlags Bit(8),                              01143000
*                                   /* System or user                */ 01144000
*           7   Cond_CurAbendCC   Bit(24),                              01145000
*                                   /* Abend Number                  */ 01146000
*         5  Cond_CurAbendReason Bit(32),                               01147000
*                                   /* Abend Reason                  */ 01148000
*         5  Cond_CurIlc   Fixed(15),                                   01149000
*                                   /* Instruction length            */ 01150000
*         5  * Char(2),             /* Reserved                      */ 01151000
*       3   CondInfo_MapEnd char(0) Bdy(Dword); /* end of block      */ 01152000
*@LOGIC;                                                                01153000
*#PRAGMA TOOL=CBGEN.                                                    01154000
*#USEORG.                                                               01155000
*#LINE.%AsaxmacP64 = 'Pointer(64)';                                     01156000
*#LINE.%AsaxmacF64 = 'Fixed(64)';                                       01157000
*#LINE.%INCLUDE SYSLIB(BPXYDCOR);                                       01158000
*#LINE.Dcl DcomReqParmPtr ptr;                                          01159000
*#EPRAGMA.                                                              01160000
*@ENDLOGIC;                                                             01161000
*/* End of PL/X Source                                               */ 01162000
* %IF BPXYDCOR_LIST ^= 'NO' &                                           01163000
*    ZCBPRINT ^= 'NO' %THEN                                             01164000
*   %GOTO BPXYDCOR_4;                                                   01165000
*   @LIST POP NOECHO;                                                   01166000
* %BPXYDCOR_4:;                                                         01167000
* %END;                                                                 01168000
