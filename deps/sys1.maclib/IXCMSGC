*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IXCMSGC                               -01/13/18-<2> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  XCF Message Control                           * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5694-A01 COPYRIGHT IBM CORP. 1996, 2011                         * 00001200
*                                                                     * 00001300
* STATUS= HBB7780                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      The IXCMSGC macro is the interface to the Cross System         * 00002100
*      Coupling Facility (XCF) Message Control service.               * 00002200
*                                                                     * 00002300
*      An active member of an XCF group uses the Message Control      * 00002400
*      Service to interact with the XCF signalling service.  For      * 00002500
*      example, use the Message Control Service to preserve messages  * 00002600
*      in XCF managed storage for later processing or to complete a   * 00002700
*      message-out (IXCMSGO) request that is waiting for a response   * 00002800
*      to arrive.  See the REQUEST keyword for the complete set of    * 00002900
*      functions provided by the Message Control Service.             * 00003000
*                                                                     * 00003100
*      The Message-Control routine is given control from the IXCMSGC  * 00003200
*      macro.  The IXCMSGC macro will complete the parameter list     * 00003300
*      with caller provided data and generate a stacking program call * 00003400
*      (PC) to the Message-Control service.  Depending on the service * 00003500
*      requested, the PC may be space switching.  The IXCMSGC macro   * 00003600
*      is provided in list, execute, and standard form.  The list     * 00003700
*      form accepts no variable parameters and is used only to        * 00003800
*      reserve space for the Message-Control parameter list.  The     * 00003900
*      standard form is provided for use with routines which do not   * 00004000
*      require reentrant code.  The execute form is provided for use  * 00004100
*      with the list format for reentrant routines.  The IXCMSGC      * 00004200
*      macro is provided in PL/X and assembler formats.               * 00004300
*                                                                     * 00004400
*                                                                     * 00004500
*01* EXTERNAL CLASSIFICATION:                                         * 00004600
*                                                                     * 00004700
*02* GUPI: BASE                                                       * 00004800
*                                                                     * 00004900
*02* NONE: FIELDS                                                     * 00005000
*          XCFDATA                                                    * 00005100
*                                                                     * 00005200
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00005300
*                                                                     * 00005400
*01* ENVIRONMENT:                                                     * 00005500
*                                                                     * 00005600
*                                                                     * 00005700
*      Minimum authorization: Supervisor state or PKM allowing keys   * 00005800
*                        0-7.                                         * 00005900
*                                                                     * 00006000
*      Dispatchable unit mode: Task or SRB mode.                      * 00006100
*                                                                     * 00006200
*                        Note that some request options are valid     * 00006300
*                        only when running in task mode, or when      * 00006400
*                        running as a message exit routine or a       * 00006500
*                        notify exit routine.  Any such restrictions  * 00006600
*                        are explicitly mentioned below.              * 00006700
*                                                                     * 00006800
*      AMODE:            31-bit.                                      * 00006900
*                                                                     * 00007000
*      Cross Memory Mode:                                             * 00007100
*                                                                     * 00007200
*                        Primary equal to the requesting member's     * 00007300
*                        primary at the time the group was joined;    * 00007400
*                        any secondary address space; any home        * 00007500
*                        address space                                * 00007600
*                                                                     * 00007700
*                        Swappable or non-swappable primary address   * 00007800
*                        space                                        * 00007900
*                                                                     * 00008000
*      ASC mode:         Primary or Access Register.                  * 00008100
*                                                                     * 00008200
*                        If in Access Register ASC mode, specify      * 00008300
*                        SYSSTATE ASCENV=AR before invoking this      * 00008400
*                        macro.                                       * 00008500
*                                                                     * 00008600
*      Interrupt status: Enabled for I/O and external interrupts.     * 00008700
*                                                                     * 00008800
*      Locks:            No locks held.                               * 00008900
*                                                                     * 00009000
*      Control parameters: None.                                      * 00009100
*                                                                     * 00009200
*                                                                     * 00009300
*                                                                     * 00009400
*01* RESTRICTIONS:                                                    * 00009500
*                                                                     * 00009600
*01* INPUT REGISTER INFORMATION:                                      * 00009700
*                                                                     * 00009800
*                                                                     * 00009900
*    REGISTER  CONTENTS                                               * 00010000
*                                                                     * 00010100
*    GR0-GR1   reserved                                               * 00010200
*                                                                     * 00010300
*    GR2-GR13  undefined                                              * 00010400
*                                                                     * 00010500
*    GR14-GR15 reserved                                               * 00010600
*                                                                     * 00010700
*    AR0-AR1   reserved                                               * 00010800
*                                                                     * 00010900
*    AR2-AR13  undefined                                              * 00011000
*                                                                     * 00011100
*    AR14-AR15 reserved                                               * 00011200
*                                                                     * 00011300
*                                                                     * 00011400
*                                                                     * 00011500
*01* OUTPUT REGISTER INFORMATION:                                     * 00011600
*                                                                     * 00011700
*                                                                     * 00011800
*    REGISTER  CONTENTS                                               * 00011900
*                                                                     * 00012000
*    GR0       reason code based on GR15                              * 00012100
*                                                                     * 00012200
*    GR1       used as work register by the system                    * 00012300
*                                                                     * 00012400
*    GR2-GR13  unchanged                                              * 00012500
*                                                                     * 00012600
*    GR14      used as work register by the system                    * 00012700
*                                                                     * 00012800
*    GR15      return code                                            * 00012900
*                                                                     * 00013000
*    AR0-AR1   used as work registers by the system                   * 00013100
*                                                                     * 00013200
*    AR2-AR13  unchanged                                              * 00013300
*                                                                     * 00013400
*    AR14-AR15 used as work registers by the system                   * 00013500
*                                                                     * 00013600
*                                                                     * 00013700
*                                                                     * 00013800
*01* PERFORMANCE IMPLICATIONS:                                        * 00013900
*                                                                     * 00014000
*    None.                                                            * 00014100
*                                                                     * 00014200
*01* SYNTAX:                                                          * 00014300
*                                                                     * 00014400
*Ýxlabel¨  IXCMSGC  Ð  REQUEST=SAVEMSG                                * 00014500
*                   !     ,MEMTOKEN=xmemtoken                         * 00014600
*                   !     ,TOKEN=xtoken                               * 00014700
*                   !    Ý,USERDATA=»xuserdata!NO_CHANGEº¨            * 00014800
*                   !    Ý,RETMSGTOKEN=xretmsgtoken¨                  * 00014900
*                   !   ÐÝ,HOLDTIME=INDEFINITE¨                       * 00015000
*                   !   ÔÝ,HOLDTIME=CONTINUE¨                         * 00015100
*                   !   ¿Ý,HOLDTIME=SET                               * 00015200
*                   !         ,TIME=xtime¨                            * 00015300
*                   !    Ý,MSGTAG=»xmsgtag!NO_CHANGEº¨                * 00015400
*                   Ô ,REQUEST=DISCARDMSG                             * 00015500
*                   !   Ð ,TOKEN=xtoken                               * 00015600
*                   !   !     ,MEMTOKEN=xmemtoken                     * 00015700
*                   !   ¿ ,SENDTOKEN=xsendtoken                       * 00015800
*                   Ô ,REQUEST=QUERYMSG                               * 00015900
*                   !     ,MEMTOKEN=xmemtoken                         * 00016000
*                   !   Ð ,DATATYPE=MSGOUT                            * 00016100
*                   !   !   Ð ,STATUS=SAVED                           * 00016200
*                   !   !   Ô ,STATUS=COMPLETE                        * 00016300
*                   !   !   ¿ ,STATUS=INCOMPLETE                      * 00016400
*                   !   Ô ,DATATYPE=MSGIN                             * 00016500
*                   !   !    Ý,SOURCE=»xsource!ANYº¨                  * 00016600
*                   !   ¿ ,DATATYPE=DETAIL                            * 00016700
*                   !         ,TOKEN=xtoken                           * 00016800
*                   !    Ý,MQAALEVEL=»xmqaalevel!0º¨                  * 00016900
*                   !    Ý,MSGTAGFILTER                               * 00017000
*                   !                   =»xmsgtagfilter!NO_MSGTAGFILT * 00017100
*                   !                   ERº                           * 00017200
*                   !        Ý,MSGTAGMASK=»xmsgtagmask!ALLº¨¨         * 00017300
*                   !     ,ANSAREA=xansarea                           * 00017400
*                   !     ,ANSLEN=xanslen                             * 00017500
*                   Ô ,REQUEST=COMPLETION                             * 00017600
*                   !   Ô ,TYPE=FORCE                                 * 00017700
*                   !   Ð ,TOKEN=xtoken                               * 00017800
*                   !   !     ,MEMTOKEN=xmemtoken                     * 00017900
*                   !   !    Ý,USERDATA=»xuserdata!NO_CHANGEº¨        * 00018000
*                   !   ¿ ,SENDTOKEN=xsendtoken                       * 00018100
*                   Ô ,REQUEST=CALLEXIT                               * 00018200
*                   !   Ð ,NOTIFYEXIT=xnotifyexit                     * 00018300
*                   !   ¿ ,MSGEXIT=xmsgexit                           * 00018400
*                   !    Ý,EXITPARMS=»xexitparms!ZEROº¨               * 00018500
*                   !     ,MEMTOKEN=xmemtoken                         * 00018600
*                   !     ,TOKEN=xtoken                               * 00018700
*                   ¿ ,REQUEST=RELEASEMSG                             * 00018800
*                       Ð ,TOKEN=xtoken                               * 00018900
*                       !     ,MEMTOKEN=xmemtoken                     * 00019000
*                       ¿ ,SENDTOKEN=xsendtoken                       * 00019100
*                    Ý,RETCODE=xretcode¨                              * 00019200
*                    Ý,RSNCODE=xrsncode¨                              * 00019300
*                    Ý,PLISTVER=»xplistver!IMPLIED_VERSIONº¨          * 00019400
*                   ÐÝ,MF=S¨                                          * 00019500
*                   ÔÝ,MF=(L,xmfctrl»,xmfattr!0Dº)¨                   * 00019600
*                   ¿Ý,MF=(E,xmfctrl»,COMPLETEº)¨                     * 00019700
*                                                                     * 00019800
*                                                                     * 00019900
*      Where:                                                         * 00020000
*                                                                     * 00020100
*                                                                     * 00020200
*      Ýxlabel¨                                                       * 00020300
*          is an optional symbol, starting in column 1, that is the   * 00020400
*          name on the IXCMSGC macro invocation.  The name must       * 00020500
*          conform to the rules for an ordinary assembler language    * 00020600
*          symbol.                                                    * 00020700
*          DEFAULT: No name.                                          * 00020800
*                                                                     * 00020900
*                                                                     * 00021000
*                                                                     * 00021100
*                                                                     * 00021200
*      REQUEST=»SAVEMSG!DISCARDMSG!QUERYMSG!COMPLETION!CALLEXIT!RELEA * 00021300
*          SEMSGº                                                     * 00021400
*          is a required keyword input that indicates the type of     * 00021500
*          request to process                                         * 00021600
*                                                                     * 00021700
*                                                                     * 00021800
*          REQUEST=SAVEMSG                                            * 00021900
*              The message presented to an exit routine and           * 00022000
*              identified by TOKEN is to be saved for later           * 00022100
*              processing.  This request is valid only when invoked   * 00022200
*              from a message exit routine or a notification exit     * 00022300
*              routine.  If the exit routine neither saves the        * 00022400
*              message with this service, nor receives the message by * 00022500
*              invoking the XCF Message-In Service, the message is    * 00022600
*              automatically discarded by XCF when the exit routine   * 00022700
*              gives up control.                                      * 00022800
*                                                                     * 00022900
*              Once the exit routine saves the message, the message   * 00023000
*              token passed via the TOKEN keyword is invalidated.  In * 00023100
*              particular, the message is no longer available to the  * 00023200
*              exit routine for message-in processing.  A saved       * 00023300
*              message can be processed by invoking the Message       * 00023400
*              Control CALLEXIT Service.                              * 00023500
*                                                                     * 00023600
*              Saved messages are automatically discarded by XCF when * 00023700
*              the member becomes not active or when the HOLDTIME     * 00023800
*              expires.  An active member can discard its saved       * 00023900
*              message by invoking the Message Control DISCARDMSG     * 00024000
*              Service.                                               * 00024100
*                                                                     * 00024200
*              For a message saved from within a message exit         * 00024300
*              routine, the undelivered portion of the message is     * 00024400
*              saved along with whatever data is needed to create a   * 00024500
*              new Message Exit Parameter List (MEPL, mapped by       * 00024600
*              IXCYMEPL).  For example, some of the data saved with   * 00024700
*              the message includes the source member token, the      * 00024800
*              target member token, and the sender's message control  * 00024900
*              data.  Once Message-in processing moves message data   * 00025000
*              into the member's buffer area and the message data     * 00025100
*              read position is advanced, that data is considered     * 00025200
*              delivered. The message data cannot be redelivered      * 00025300
*              (using the XCF Message Control CALLEXIT Service) nor   * 00025400
*              can it be saved.  If a partially delivered message is  * 00025500
*              saved, only the undelivered portion of the message is  * 00025600
*              presented to a message exit routine as a result of     * 00025700
*              invoking the Message Control Service with a CALLEXIT   * 00025800
*              request.  The message cannot be saved once the         * 00025900
*              Message-in Service has delivered all the message data  * 00026000
*              (the message token is invalidated).                    * 00026100
*                                                                     * 00026200
*              From within a notify exit routine, one or more         * 00026300
*              messages are eligible to be saved.  The message and    * 00026400
*              any responses still associated with it can be saved as * 00026500
*              a single entity, or each individual response can be    * 00026600
*              saved independently of the message.                    * 00026700
*                                                                     * 00026800
*              When saving a message and its responses (if any) as a  * 00026900
*              single entity, the data saved is sufficient to create  * 00027000
*              a new Message Notification Parameter List (MNPL,       * 00027100
*              mapped by IXCYMNPL) that contains a descriptor for the * 00027200
*              message itself (MnplMsgoutRecord) and a table of       * 00027300
*              target/response information.  When a message/response  * 00027400
*              entity is saved, the message token passed via the      * 00027500
*              TOKEN keyword is invalidated.  Furthermore, all the    * 00027600
*              message tokens (MnplTrMsgiToken) for the individual    * 00027700
*              responses associated with the message/response entity  * 00027800
*              are also invalidated.  The saved message/response      * 00027900
*              entity and its associated responses can be processed   * 00028000
*              at a later time by invoking the Message Control        * 00028100
*              CALLEXIT Service, specifying NOTIFYEXIT.               * 00028200
*                                                                     * 00028300
*              When saving an individual response independently of    * 00028400
*              the message/response entity, the undelivered portion   * 00028500
*              of the response is saved along with whatever data is   * 00028600
*              needed to create a new Message Exit Parameter List     * 00028700
*              (MEPL, mapped by IXCYMEPL).  A saved response is then  * 00028800
*              considered an independent message.  The message token  * 00028900
*              passed via the TOKEN keyword is invalidated.  In       * 00029000
*              particular, note that the notify exit routine cannot   * 00029100
*              directly use the message-in service to access the      * 00029200
*              response data after it has been saved independently of * 00029300
*              the message/response entity.  A saved response can be  * 00029400
*              processed by invoking the Message Control CALLEXIT     * 00029500
*              Service service, specifying MSGEXIT.                   * 00029600
*                                                                     * 00029700
*                                                                     * 00029800
*              MEMTOKEN=xmemtoken                                     * 00029900
*                  is the name (RS-type), or address in register      * 00030000
*                  (2)-(12), of a required 64 bit input variable      * 00030100
*                  containing the member token (as returned by        * 00030200
*                  IXCJOIN) which identifies the member making the    * 00030300
*                  request.                                           * 00030400
*                                                                     * 00030500
*                                                                     * 00030600
*                                                                     * 00030700
*                                                                     * 00030800
*              TOKEN=xtoken                                           * 00030900
*                  is the name (RS-type), or address in register      * 00031000
*                  (2)-(12), of a required 16 character input that    * 00031100
*                  identifies the message to be saved.  This token is * 00031200
*                  invalidated once the message is saved.             * 00031300
*                                                                     * 00031400
*                  The message presented to a message exit routine is * 00031500
*                  identified by the message token (MeplMsgiToken)    * 00031600
*                  passed in the Message Exit Parameter List (MEPL,   * 00031700
*                  mapped by IXCYMEPL).                               * 00031800
*                                                                     * 00031900
*                  When running in a notify exit, the message and its * 00032000
*                  associated responses (if any) are identified as a  * 00032100
*                  single entity by the message token (MnplMsgoToken) * 00032200
*                  passed in the Message Notification Parameter List  * 00032300
*                  (MNPL, mapped by IXCYMNPL).  An individual         * 00032400
*                  response is identified by the message token        * 00032500
*                  (MnplTrMsgiToken) passed in the MNPL.              * 00032600
*                                                                     * 00032700
*                                                                     * 00032800
*                                                                     * 00032900
*                                                                     * 00033000
*              ÝUSERDATA=»xuserdata!NO_CHANGEº¨                       * 00033100
*                  is the name (RS-type), or address in register      * 00033200
*                  (2)-(12), of an optional 8 character input area    * 00033300
*                  containing user data to be associated with the     * 00033400
*                  saved message.                                     * 00033500
*                                                                     * 00033600
*                  This data is presented to the exit routine when    * 00033700
*                  the message is processed at a later time by        * 00033800
*                  invoking the Message Control Service with a        * 00033900
*                  CALLEXIT request.  For a message exit routine,     * 00034000
*                  MeplExUserData within the Message Exit Parameter   * 00034100
*                  List contains this user data when the CallExit     * 00034200
*                  service passes control to the message exit         * 00034300
*                  routine.  For a notify exit routine,               * 00034400
*                  MnplMsgoUserData within the Message Notification   * 00034500
*                  Parameter List contains this user data when the    * 00034600
*                  CallExit service passes control to the notify exit * 00034700
*                  routine.                                           * 00034800
*                  DEFAULT: NO_CHANGE - existing user data left as is * 00034900
*                                                                     * 00035000
*                                                                     * 00035100
*                                                                     * 00035200
*                                                                     * 00035300
*              ÝRETMSGTOKEN=xretmsgtoken¨                             * 00035400
*                  is the name (RS-type), or address in register      * 00035500
*                  (2)-(12), of an optional 16 character output area  * 00035600
*                  that is to contain a token that identifies the     * 00035700
*                  saved message.                                     * 00035800
*                                                                     * 00035900
*                  The storage area indicated by RETMSGTOKEN must     * 00036000
*                  either be in the caller's primary address space or * 00036100
*                  in an address/data space that is addressable       * 00036200
*                  through a public entry on the caller's             * 00036300
*                  dispatchable unit access list (DU-AL), or in a     * 00036400
*                  common area data space.                            * 00036500
*                                                                     * 00036600
*                  Pass this token to the XCF Message Control Service * 00036700
*                  when invoking the DISCARDMSG or CALLEXIT services. * 00036800
*                  If RETMSGTOKEN is not coded, a token for the       * 00036900
*                  message can be obtained by invoking the Message    * 00037000
*                  Control QUERYMSG service.                          * 00037100
*                                                                     * 00037200
*                                                                     * 00037300
*                                                                     * 00037400
*                                                                     * 00037500
*              ÝHOLDTIME=»INDEFINITE!CONTINUE!SETº¨                   * 00037600
*                  is an optional keyword input that indicates how    * 00037700
*                  long XCF should keep the saved message.            * 00037800
*                  DEFAULT: INDEFINITE                                * 00037900
*                                                                     * 00038000
*                                                                     * 00038100
*                  ÝHOLDTIME=INDEFINITE¨                              * 00038200
*                      The message will be saved until the message is * 00038300
*                      processed by a CALLEXIT, discarded or the      * 00038400
*                      member terminates.                             * 00038500
*                                                                     * 00038600
*                  ÝHOLDTIME=CONTINUE¨                                * 00038700
*                      The currently established HOLDTIME for the     * 00038800
*                      message will continue to be in effect.         * 00038900
*                      CONTINUE can only be specified if a message    * 00039000
*                      had previously been saved.                     * 00039100
*                                                                     * 00039200
*                  ÝHOLDTIME=SET                                      * 00039300
*                      A finite HOLDTIME specified by the TIME        * 00039400
*                      keyword will be assigned and set by XCF for    * 00039500
*                      the message.  SET can be used to establish an  * 00039600
*                      initial HOLDTIME for a saved message or be     * 00039700
*                      used to modify the HOLDTIME for a message.     * 00039800
*                                                                     * 00039900
*                                                                     * 00040000
*                      TIME=xtime¨                                    * 00040100
*                          is the name (RS-type), or address in       * 00040200
*                          register (2)-(12), of a required halfword  * 00040300
*                          input that indicates the number of seconds * 00040400
*                          XCF will keep a saved message before       * 00040500
*                          discarding the message.                    * 00040600
*                                                                     * 00040700
*                          The xTime value must be between 1 and      * 00040800
*                          65535 inclusive.                           * 00040900
*                                                                     * 00041000
*                                                                     * 00041100
*                                                                     * 00041200
*                                                                     * 00041300
*                                                                     * 00041400
*                                                                     * 00041500
*                                                                     * 00041600
*                                                                     * 00041700
*              ÝMSGTAG=»xmsgtag!NO_CHANGEº¨                           * 00041800
*                  is the name (RS-type), or address in register      * 00041900
*                  (2)-(12), of an optional 64 character input        * 00042000
*                  variable which contains a user defined message tag * 00042100
*                  to be associated with the saved message. A MsgTag  * 00042200
*                  will persist for a message until it is explicitly  * 00042300
*                  changed.                                           * 00042400
*                                                                     * 00042500
*                  The MSGTAG can later be used as a filter criteria  * 00042600
*                  in a Message Control QUERYMSG request.             * 00042700
*                                                                     * 00042800
*                  The storage area indicated by MSGTAG must either   * 00042900
*                  be in the caller's primary address space or in an  * 00043000
*                  address/data space that is addressable through a   * 00043100
*                  public entry on the caller's dispatchable unit     * 00043200
*                  access list (DU-AL), or in a common area data      * 00043300
*                  space.                                             * 00043400
*                  DEFAULT: NO_CHANGE - existing message tag left as  * 00043500
*                  is                                                 * 00043600
*                                                                     * 00043700
*                                                                     * 00043800
*                                                                     * 00043900
*          REQUEST=DISCARDMSG                                         * 00044000
*              The message identified by TOKEN or SENDTOKEN is to be  * 00044100
*              discarded.  A discarded message will no longer be      * 00044200
*              available for processing.  For example, a discarded    * 00044300
*              message will not be presented to any exit routine, nor * 00044400
*              will it be visible to the Message Control QUERYMSG     * 00044500
*              Service.  Any responses still associated with a        * 00044600
*              message/response entity will be discarded, but saved   * 00044700
*              responses will not be discarded since saving a         * 00044800
*              response causes it to become disassociated from the    * 00044900
*              message/response entity.                               * 00045000
*                                                                     * 00045100
*              If a message is not explicitly saved by an exit        * 00045200
*              routine nor received by invoking the XCF Message-In    * 00045300
*              Service, it is automatically discarded by XCF when the * 00045400
*              exit routine gives up control.  Thus most members do   * 00045500
*              not need to use the DISCARDMSG service from within an  * 00045600
*              exit routine when they elect not to process the        * 00045700
*              message.  In fact, the automatic discard by XCF is     * 00045800
*              preferred over an explicit discard from within an exit * 00045900
*              routine since the automatic discard incurs less system * 00046000
*              overhead.                                              * 00046100
*                                                                     * 00046200
*              If a message is discarded while an exit routine is     * 00046300
*              processing that same message, subsequent attempts by   * 00046400
*              the exit routine to process the message with XCF       * 00046500
*              services will be rejected with a return/reason code    * 00046600
*              indicating that the message has been discarded.        * 00046700
*              Depending on the timing, the current operation being   * 00046800
*              performed by the exit routine may be allowed to        * 00046900
*              complete before the message is discarded.  In such a   * 00047000
*              case, the DISCARDMSG service returns with the discard  * 00047100
*              of the message left pending.                           * 00047200
*                                                                     * 00047300
*              Incomplete message-out requests can be discarded       * 00047400
*              before the message completes.  For example, a message  * 00047500
*              queued by XCF due to a lack of signalling resources,   * 00047600
*              or a message whose XCF managed response collection is  * 00047700
*              not complete can be discarded.  Such a discard has the * 00047800
*              effect of cancelling the message-out request.  For a   * 00047900
*              broadcast to multiple targets, any remaining unsent    * 00048000
*              messages will not be sent.  Collected responses, if    * 00048100
*              any, are discarded.  Any response that subsequently    * 00048200
*              arrives for the cancelled message is also discarded by * 00048300
*              XCF.  The notification exit will not be called for the * 00048400
*              cancelled message.  Note that if XCF has initiated a   * 00048500
*              send to a particular target member prior to the        * 00048600
*              cancellation, those message(s) will be delivered as    * 00048700
*              usual.                                                 * 00048800
*                                                                     * 00048900
*              For XCF IXCSEND messages identified by SENDTOKEN,      * 00049000
*              responses to a discarded message cannot be retrieved   * 00049100
*              using the IXCRECV service.  Status information about   * 00049200
*              the message is no longer available.  Undelivered       * 00049300
*              responses that arrived before the message was          * 00049400
*              discarded are no longer available.  Subsequently       * 00049500
*              arriving responses are discarded.  Discarding a        * 00049600
*              message releases a blocking receive initiated for that * 00049700
*              message.  That is, if a unit of work has issued        * 00049800
*              IXCRECV REQTYPE=BLOCKING to receive a message, and     * 00049900
*              another unit of work issues IXCMSGC REQUEST=DISCARDMSG * 00050000
*              to discard the message, the blocked receiver is        * 00050100
*              resumed and receives a return and reason code          * 00050200
*              indicating that the message was not found. No data     * 00050300
*              will be returned in the answer area for the resumed    * 00050400
*              IXCRECV request.                                       * 00050500
*                                                                     * 00050600
*              Use the XCF Message Control COMPLETION Service to      * 00050700
*              FORCE a message-out or client/server request to be     * 00050800
*              stopped in a way that preserves the request for        * 00050900
*              further processing by the member or IXCRECV.           * 00051000
*                                                                     * 00051100
*                                                                     * 00051200
*              The following is a set of mutually exclusive keys.     * 00051300
*              This set is required; only one key must be specified.  * 00051400
*                                                                     * 00051500
*                                                                     * 00051600
*              TOKEN=xtoken                                           * 00051700
*                  belongs to a set of mutually exclusive keys. It is * 00051800
*                  the name (RS-type), or address in register         * 00051900
*                  (2)-(12), of a 16 character input that identifies  * 00052000
*                  the message to be discarded.                       * 00052100
*                                                                     * 00052200
*                  The token for an incoming message can be obtained  * 00052300
*                  from the XCF Message Control SAVEMSG Service via   * 00052400
*                  the RETMSGTOKEN keyword, or from the Message       * 00052500
*                  Control QUERYMSG Service (specify MSGIN for        * 00052600
*                  DATATYPE).  A token from the Message Exit          * 00052700
*                  Parameter List (MeplMsgiToken) or from the Message * 00052800
*                  Notification Parameter List (MnplTrMsgiToken) for  * 00052900
*                  a response message can also be used if the exit    * 00053000
*                  routine has not finished processing the message.   * 00053100
*                  These tokens are invalidated if the exit routine   * 00053200
*                  saves the message, discards the message, receives  * 00053300
*                  all the message data, or gives up control.  Also   * 00053400
*                  note that the message token for response message   * 00053500
*                  (MnplTrMsgiToken) is also invalidated if the       * 00053600
*                  notify exit finshes processing the                 * 00053700
*                  message/response entity.                           * 00053800
*                                                                     * 00053900
*                  For a message/response entity, the token can be    * 00054000
*                  obtained from the Message-out Service via the      * 00054100
*                  RETMSGOTOKEN keyword, from the Message Control     * 00054200
*                  SAVEMSG Service via the RETMSGTOKEN keyword, or    * 00054300
*                  from the Message Control QUERYMSG Service (specify * 00054400
*                  MSGOUT for DATATYPE).  A token from the Message    * 00054500
*                  Notification Parameter List (MnplMsgoToken) can    * 00054600
*                  also be used if the notify exit routine has not    * 00054700
*                  finished processing the message/response entity.   * 00054800
*                  This token is invalidated if the exit routine      * 00054900
*                  saves the message, discards the message, or gives  * 00055000
*                  up control.                                        * 00055100
*                                                                     * 00055200
*                                                                     * 00055300
*                  MEMTOKEN=xmemtoken                                 * 00055400
*                      is the name (RS-type), or address in register  * 00055500
*                      (2)-(12), of a required 64 bit input variable  * 00055600
*                      containing the member token (as returned by    * 00055700
*                      IXCJOIN) which identifies the member making    * 00055800
*                      the request.                                   * 00055900
*                                                                     * 00056000
*                                                                     * 00056100
*                                                                     * 00056200
*              SENDTOKEN=xsendtoken                                   * 00056300
*                  belongs to a set of mutually exclusive keys. It is * 00056400
*                  the name (RS-type), or address in register         * 00056500
*                  (2)-(12), of a 32 character input that identifies  * 00056600
*                  an XCF Client/Server Server request or Server      * 00056700
*                  response to be discarded.                          * 00056800
*                                                                     * 00056900
*                  This token is available from the XCF Client/Server * 00057000
*                  Send macro service (IXCSEND) via the keyword       * 00057100
*                  RETMSGTOKEN.                                       * 00057200
*                                                                     * 00057300
*                                                                     * 00057400
*                                                                     * 00057500
*              End of a set of mutually exclusive required keys.      * 00057600
*                                                                     * 00057700
*                                                                     * 00057800
*          REQUEST=QUERYMSG                                           * 00057900
*              Information appropriate for the requested DATATYPE of  * 00058000
*              query is to be placed in the storage area indicated by * 00058100
*              ANSAREA.  The contents of the answer area is mapped by * 00058200
*              macro IXCYMQAA.  DO NOT HARD CODE THE LENGTH OF THE    * 00058300
*              RECORDS.  USE THE LENGTH AND OFFSETS PROVIDED IN EACH  * 00058400
*              RECORD (to ensure compatibility with additional data   * 00058500
*              provided in the future).                               * 00058600
*                                                                     * 00058700
*                                                                     * 00058800
*              MEMTOKEN=xmemtoken                                     * 00058900
*                  is the name (RS-type), or address in register      * 00059000
*                  (2)-(12), of a required 64 bit input variable      * 00059100
*                  containing the member token (as returned by        * 00059200
*                  IXCJOIN) which identifies the member making the    * 00059300
*                  request.                                           * 00059400
*                                                                     * 00059500
*                                                                     * 00059600
*                                                                     * 00059700
*                                                                     * 00059800
*              DATATYPE=»MSGOUT!MSGIN!DETAILº                         * 00059900
*                  is a required keyword input that indicates what    * 00060000
*                  information is to be collected.                    * 00060100
*                                                                     * 00060200
*                                                                     * 00060300
*                  DATATYPE=MSGOUT                                    * 00060400
*                      Requests summary information about messages    * 00060500
*                      sent by the member through use of the          * 00060600
*                      Message-out Service (IXCMSGO).  The data       * 00060700
*                      returned for each message includes a token     * 00060800
*                      that identifies the message, user data         * 00060900
*                      associated with the message, and the status of * 00061000
*                      the message.  This data is mapped by the       * 00061100
*                      MqaMsgOutSummary record defined in the macro   * 00061200
*                      IXCYMQAA.                                      * 00061300
*                                                                     * 00061400
*                      Note that a message reported by this query may * 00061500
*                      not exist by the time the member making the    * 00061600
*                      query attempts to use the message token        * 00061700
*                      returned in the answer area.  For example, a   * 00061800
*                      message that was incomplete at the time of the * 00061900
*                      query could complete and get processed by the  * 00062000
*                      notify exit routine before the member can use  * 00062100
*                      the message token from the query.              * 00062200
*                                                                     * 00062300
*                                                                     * 00062400
*                      STATUS=»SAVED!COMPLETE!INCOMPLETEº             * 00062500
*                          is a required keyword input that indicates * 00062600
*                          the status of the message-out requests for * 00062700
*                          which data is to be collected.             * 00062800
*                                                                     * 00062900
*                                                                     * 00063000
*                          STATUS=SAVED                               * 00063100
*                              Collect information about messages     * 00063200
*                              that were saved through use of the     * 00063300
*                              Message Control SAVEMSG Service.       * 00063400
*                              These messages would be the            * 00063500
*                              message/response entities saved by the * 00063600
*                              user notify exit.                      * 00063700
*                                                                     * 00063800
*                          STATUS=COMPLETE                            * 00063900
*                              Collect information about messages     * 00064000
*                              that are completed.                    * 00064100
*                                                                     * 00064200
*                              A message is considered to have        * 00064300
*                              completed if it times-out or if the    * 00064400
*                              Message Control COMPLETION Service is  * 00064500
*                              used to FORCE completion.  A message   * 00064600
*                              without response is considered         * 00064700
*                              complete as soon as XCF has initiated  * 00064800
*                              the send of the message.  If the       * 00064900
*                              message is broadcast to multiple       * 00065000
*                              targets, the message is considered     * 00065100
*                              complete when XCF has initiated the    * 00065200
*                              send of the message to each valid      * 00065300
*                              target member.  Note that the message  * 00065400
*                              is still considered complete even if   * 00065500
*                              the initial send fails and XCF has to  * 00065600
*                              resend the message to an intended      * 00065700
*                              target member.  In particular, the     * 00065800
*                              fact that a send without response is   * 00065900
*                              completed implies nothing about        * 00066000
*                              whether the message has been delivered * 00066100
*                              to the target member or even whether   * 00066200
*                              the message data has been transferred  * 00066300
*                              to the system on which the target      * 00066400
*                              member resides.  A message with        * 00066500
*                              response is considered complete when   * 00066600
*                              the expected response(s) arrive.       * 00066700
*                                                                     * 00066800
*                          STATUS=INCOMPLETE                          * 00066900
*                              Collect information about messages     * 00067000
*                              that have not yet completed.  For      * 00067100
*                              example, the message might have been   * 00067200
*                              queued due to an XCF signal buffer     * 00067300
*                              shortage, or in the case of a          * 00067400
*                              response-required signal,  a response  * 00067500
*                              to the message might not have arrived, * 00067600
*                              and the message has not yet timed-out. * 00067700
*                                                                     * 00067800
*                                                                     * 00067900
*                                                                     * 00068000
*                                                                     * 00068100
*                                                                     * 00068200
*                  DATATYPE=MSGIN                                     * 00068300
*                      Requests summary information about incoming    * 00068400
*                      messages that were saved by the member.        * 00068500
*                      Information is collected for messages that     * 00068600
*                      were saved by the user message exit routine,   * 00068700
*                      or for responses saved by the user notify exit * 00068800
*                      routine.  The data returned for each message   * 00068900
*                      includes a token that identifies the message,  * 00069000
*                      user data associated with the message, and the * 00069100
*                      member token of the member that sent the       * 00069200
*                      message.  This data is mapped by the           * 00069300
*                      MqaMsgInSummary record defined in the macro    * 00069400
*                      IXCYMQAA.                                      * 00069500
*                                                                     * 00069600
*                                                                     * 00069700
*                      ÝSOURCE=»xsource!ANYº¨                         * 00069800
*                          is the name (RS-type), or address in       * 00069900
*                          register (2)-(12), of an optional 64 bit   * 00070000
*                          input containing a member token.  The      * 00070100
*                          query service will collect only the        * 00070200
*                          incoming messages sent by the specified    * 00070300
*                          member.                                    * 00070400
*                          DEFAULT: ANY - Collect messages sent by    * 00070500
*                          any member                                 * 00070600
*                                                                     * 00070700
*                                                                     * 00070800
*                                                                     * 00070900
*                  DATATYPE=DETAIL                                    * 00071000
*                      Requests detail information about the message  * 00071100
*                      identified by TOKEN.  The data returned for    * 00071200
*                      the message depends on the type of message.    * 00071300
*                                                                     * 00071400
*                      For a message/response entity, the data        * 00071500
*                      returned includes a token that identifies the  * 00071600
*                      message, user data associated with the         * 00071700
*                      message, number of targets for the message,    * 00071800
*                      and a table of target/response data with an    * 00071900
*                      entry for each possible target that describes  * 00072000
*                      the result of the send and the associated      * 00072100
*                      response collection (if any).  This data is    * 00072200
*                      mapped by the MqaMsgOutDetail record defined   * 00072300
*                      in the macro IXCYMQAA.                         * 00072400
*                                                                     * 00072500
*                      For a message saved by the user message exit   * 00072600
*                      routine or for a response saved by the user    * 00072700
*                      notify exit routine, the data returned         * 00072800
*                      includes a token that identifies the message,  * 00072900
*                      user data associated with the message, the     * 00073000
*                      member token of the member that sent the       * 00073100
*                      message, message length, and message control   * 00073200
*                      data from the sender.  This data is mapped by  * 00073300
*                      the MqaMsgInDetail record defined in the macro * 00073400
*                      IXCYMQAA.                                      * 00073500
*                                                                     * 00073600
*                                                                     * 00073700
*                      TOKEN=xtoken                                   * 00073800
*                          is the name (RS-type), or address in       * 00073900
*                          register (2)-(12), of a required 16        * 00074000
*                          character input that identifies the        * 00074100
*                          message for which detail information is to * 00074200
*                          be collected.                              * 00074300
*                                                                     * 00074400
*                          The message token can be obtained from the * 00074500
*                          XCF Message Control SAVEMSG Service via    * 00074600
*                          the RETMSGTOKEN keyword, from the XCF      * 00074700
*                          Message-out Service via the RETMSGOTOKEN   * 00074800
*                          keyword, from or from the Message Control  * 00074900
*                          QUERYMSG Service (specify MSGOUT or MSGIN  * 00075000
*                          for DATATYPE).                             * 00075100
*                                                                     * 00075200
*                                                                     * 00075300
*                                                                     * 00075400
*                                                                     * 00075500
*                                                                     * 00075600
*                                                                     * 00075700
*                                                                     * 00075800
*                                                                     * 00075900
*              ÝMQAALEVEL=»xmqaalevel!0º¨                             * 00076000
*                  is the name (RS-type), or address in register      * 00076100
*                  (2)-(12), of an optional byte input variable       * 00076200
*                  specifying the level of the various IXCYMQAA       * 00076300
*                  record mappings which are to be returned.  Valid   * 00076400
*                  values are 0 and 1.  The IXCYMQAA macro documents  * 00076500
*                  the maximum level supported by each DATATYPE.  A   * 00076600
*                  value of 0 indicates that the base level IXCYMQAA  * 00076700
*                  records will be returned.  A value of 1 indicates  * 00076800
*                  that the level-1 IXCYMQAA records will be          * 00076900
*                  returned.                                          * 00077000
*                  DEFAULT: 0                                         * 00077100
*                                                                     * 00077200
*                                                                     * 00077300
*                                                                     * 00077400
*                                                                     * 00077500
*              ÝMSGTAGFILTER=»xmsgtagfilter!NO_MSGTAGFILTERº          * 00077600
*                  is the name (RS-type), or address in register      * 00077700
*                  (2)-(12), of an optional 64 character input        * 00077800
*                  variable which contains a user defined message tag * 00077900
*                  to be used as a search filter criteria when        * 00078000
*                  collecting data for the QUERYMSG request.          * 00078100
*                                                                     * 00078200
*                  The storage area indicated by MSGTAGFILTER must    * 00078300
*                  either be in the caller's primary address space or * 00078400
*                  in an address/data space that is addressable       * 00078500
*                  through a public entry on the caller's             * 00078600
*                  dispatchable unit access list (DU-AL), or in a     * 00078700
*                  common area data space.                            * 00078800
*                  DEFAULT: NO_MSGTAGFILTER - No MSGTAGFILTER will be * 00078900
*                  used as a filter criteria                          * 00079000
*                                                                     * 00079100
*                                                                     * 00079200
*                  ÝMSGTAGMASK=»xmsgtagmask!ALLº¨¨                    * 00079300
*                      is the name (RS-type), or address in register  * 00079400
*                      (2)-(12), of an optional 64 character input    * 00079500
*                      that identifies a mask pattern to be applied   * 00079600
*                      to MSGTAGFILTER when selecting messages whose  * 00079700
*                      data is to be collected.                       * 00079800
*                                                                     * 00079900
*                      The position of each bit in MSGTAGMASK         * 00080000
*                      corresponds to the same bit position in        * 00080100
*                      MSGTAGFILTER and in the message tag associated * 00080200
*                      with a message.                                * 00080300
*                                                                     * 00080400
*                      If bit n in MSGTAGMASK is a 1, then bit n of   * 00080500
*                      MSGTAGFILTER will be compared to bit n of the  * 00080600
*                      message tag associated with a message.  If bit * 00080700
*                      n in MSGTAGMASK is a 0, then the corresponding * 00080800
*                      bit in MSGTAGFILTER will not be used for       * 00080900
*                      comparison.  If all bits selected by           * 00081000
*                      MSGTAGMASK are equal, and the message passes   * 00081100
*                      all other filter criteria, then data           * 00081200
*                      associated with the message will be collected. * 00081300
*                                                                     * 00081400
*                      Specifying a MSGTAGMASK where all the bits are * 00081500
*                      zero indicates that the MSGTAGFILTER is always * 00081600
*                      a match, and data for messages that pass all   * 00081700
*                      other filter criteria will be collected.       * 00081800
*                                                                     * 00081900
*                      The storage area indicated by MSGTAGMASK must  * 00082000
*                      either be in the caller's primary address      * 00082100
*                      space or in an address/data space that is      * 00082200
*                      addressable through a public entry on the      * 00082300
*                      caller's dispatchable unit access list         * 00082400
*                      (DU-AL), or in a common area data space.       * 00082500
*                      DEFAULT: ALL - All bits in the MSGTAGFILTER    * 00082600
*                      need to be compared                            * 00082700
*                                                                     * 00082800
*                                                                     * 00082900
*                                                                     * 00083000
*                                                                     * 00083100
*                                                                     * 00083200
*                                                                     * 00083300
*              ANSAREA=xansarea                                       * 00083400
*                  is the name (RS-type), or address in register      * 00083500
*                  (2)-(12), of a required character output variable  * 00083600
*                  which is to contain the data returned by the       * 00083700
*                  QUERYMSG service.  The data placed in the answer   * 00083800
*                  area consists of a header record (MqaHeader)       * 00083900
*                  followed by zero or more records appropriate to    * 00084000
*                  the type of query.  The mappings for the header    * 00084100
*                  record and data records are defined by the         * 00084200
*                  IXCYMQAA macro.                                    * 00084300
*                                                                     * 00084400
*                  The storage area indicated by ANSAREA must either  * 00084500
*                  be in the caller's primary address space or in an  * 00084600
*                  address/data space that is addressable through a   * 00084700
*                  public entry on the caller's dispatchable unit     * 00084800
*                  access list (DU-AL) or in a common area data       * 00084900
*                  space.                                             * 00085000
*                                                                     * 00085100
*                                                                     * 00085200
*                                                                     * 00085300
*                                                                     * 00085400
*              ANSLEN=xanslen                                         * 00085500
*                  is the name (RS-type), or address in register      * 00085600
*                  (2)-(12), of a required fullword input variable,   * 00085700
*                  or a decimal value, which contains the length in   * 00085800
*                  bytes of the answer area indicated by ANSAREA.     * 00085900
*                                                                     * 00086000
*                  The length of the answer area must be large enough * 00086100
*                  to contain a complete header record (MqaHeader).   * 00086200
*                  If the answer area is not large enough to contain  * 00086300
*                  all the available data records, data collection    * 00086400
*                  stops.  The header record indicates how much       * 00086500
*                  storage would have been needed to collect all the  * 00086600
*                  data for the request (MqaHdrTLen).  Note that the  * 00086700
*                  amount of storage needed to collect all the data   * 00086800
*                  can change by the time a new query is attempted.   * 00086900
*                                                                     * 00087000
*                                                                     * 00087100
*                                                                     * 00087200
*          REQUEST=COMPLETION                                         * 00087300
*              The message identified by TOKEN or SENDTOKEN is to be  * 00087400
*              completed.  COMPLETION can be requested for a          * 00087500
*              message-out request or XCF Client/Server request that  * 00087600
*              XCF has accepted for delivery, but does not consider   * 00087700
*              complete.                                              * 00087800
*                                                                     * 00087900
*              A message-out request is considered complete if it     * 00088000
*              times-out or if the Message Control COMPLETION Service * 00088100
*              is used to force its completion.  A message without    * 00088200
*              response is considered complete as soon as XCF has     * 00088300
*              initiated the send of the message.  If the message is  * 00088400
*              broadcast to multiple targets, the message is          * 00088500
*              considered complete when XCF has initiated the send of * 00088600
*              the message to every valid target member.  A message   * 00088700
*              with response is considered complete when the expected * 00088800
*              response(s) arrive.                                    * 00088900
*                                                                     * 00089000
*              Once completed, processing for the message continues   * 00089100
*              just as it would have had the message completed        * 00089200
*              without direct intervention.  XCF will no longer       * 00089300
*              attempt to send the message to any intended target.    * 00089400
*              Any responses to the message that subsequently arrive  * 00089500
*              will be discarded.  If notification was to be provided * 00089600
*              upon completion of the message, the user notify exit   * 00089700
*              will receive control.  If not, the Message Control     * 00089800
*              CALLEXIT service can be used to call a user notify     * 00089900
*              exit routine if desired.                               * 00090000
*                                                                     * 00090100
*              If a unit of work has issued IXCMSGOX with             * 00090200
*              MSGACCESS=SYNCSUSPEND or a Client/Server request       * 00090300
*              (IXCSEND) and the unit of work is paused by XCF, the   * 00090400
*              service invoker can receive a return and reason code   * 00090500
*              indicating that the request may not have completed     * 00090600
*              sending the message to all intended targets.           * 00090700
*                                                                     * 00090800
*              For an XCF Client/Server request, undelivered          * 00090900
*              responses that arrived before the message was forced   * 00091000
*              to complete remain available. Any responses arriving   * 00091100
*              after the message is deemed to be complete are         * 00091200
*              discarded.  Completing a message releases a blocking   * 00091300
*              receive initiated for that message.  That is, if a     * 00091400
*              unit of work has issued IXCRECV REQTYPE=BLOCKING to    * 00091500
*              receive a message, and another unit of work issues     * 00091600
*              IXCMSGC REQUEST=COMPLETION to force that message to    * 00091700
*              completion, the blocked receiver is released and       * 00091800
*              receives whatever responses had arrived up to that     * 00091900
*              point.                                                 * 00092000
*                                                                     * 00092100
*              Use the Message Control DISCARDMSG Service to force a  * 00092200
*              message-out or Client/Server request to be stopped in  * 00092300
*              a way that makes the message unavailable for further   * 00092400
*              processing.                                            * 00092500
*                                                                     * 00092600
*                                                                     * 00092700
*              TYPE=»FORCE                                            * 00092800
*                  is a required keyword input that indicates the     * 00092900
*                  type of completion to be performed.                * 00093000
*                                                                     * 00093100
*                                                                     * 00093200
*                  TYPE=FORCE                                         * 00093300
*                      The message is to be immediately considered as * 00093400
*                      complete.  This type of completion is much     * 00093500
*                      like forcing the message time-out value to     * 00093600
*                      expire immediately.                            * 00093700
*                                                                     * 00093800
*                                                                     * 00093900
*                                                                     * 00094000
*                                                                     * 00094100
*                                                                     * 00094200
*                                                                     * 00094300
*              The following is a set of mutually exclusive keys.     * 00094400
*              This set is required; only one key must be specified.  * 00094500
*                                                                     * 00094600
*                                                                     * 00094700
*              TOKEN=xtoken                                           * 00094800
*                  belongs to a set of mutually exclusive keys. It is * 00094900
*                  the name (RS-type), or address in register         * 00095000
*                  (2)-(12), of a 16 character input that identifies  * 00095100
*                  the message to be completed.                       * 00095200
*                                                                     * 00095300
*                  This token is available from the Message-out       * 00095400
*                  Service (IXCMSGO) via the keyword RETMSGOTOKEN, or * 00095500
*                  from the Message Control QUERYMSG Service via a    * 00095600
*                  MSGOUT query for INCOMPLETE messages.              * 00095700
*                                                                     * 00095800
*                                                                     * 00095900
*                  MEMTOKEN=xmemtoken                                 * 00096000
*                      is the name (RS-type), or address in register  * 00096100
*                      (2)-(12), of a required 64 bit input variable  * 00096200
*                      containing the member token (as returned by    * 00096300
*                      IXCJOIN) which identifies the member making    * 00096400
*                      the request.                                   * 00096500
*                                                                     * 00096600
*                                                                     * 00096700
*                                                                     * 00096800
*                                                                     * 00096900
*                  ÝUSERDATA=»xuserdata!NO_CHANGEº¨                   * 00097000
*                      is the name (RS-type), or address in register  * 00097100
*                      (2)-(12), of an optional 8 character input     * 00097200
*                      area containing user data to be associated     * 00097300
*                      with the completed message.  Note that the     * 00097400
*                      current user data associated with the message  * 00097500
*                      is replaced by this USERDATA only if this      * 00097600
*                      invocation of the COMPLETION service causes    * 00097700
*                      the message to be considered complete.         * 00097800
*                                                                     * 00097900
*                      For the TOKEN keyword, the field               * 00098000
*                      MnplMsgoUserData within the Message            * 00098100
*                      Notification Parameter List contains this user * 00098200
*                      data when the message is presented to the      * 00098300
*                      notify exit routine.                           * 00098400
*                                                                     * 00098500
*                      DEFAULT: NO_CHANGE - existing user data is     * 00098600
*                      left as is for the message.                    * 00098700
*                                                                     * 00098800
*                                                                     * 00098900
*                                                                     * 00099000
*              SENDTOKEN=xsendtoken                                   * 00099100
*                  belongs to a set of mutually exclusive keys. It is * 00099200
*                  the name (RS-type), or address in register         * 00099300
*                  (2)-(12), of a 32 character input that identifies  * 00099400
*                  an XCF Client/Server Server request or Server      * 00099500
*                  response to be completed.                          * 00099600
*                                                                     * 00099700
*                  This token is available from the XCF Client/Server * 00099800
*                  Send macro service (IXCSEND) via the keyword       * 00099900
*                  RETMSGTOKEN.                                       * 00100000
*                                                                     * 00100100
*                                                                     * 00100200
*                                                                     * 00100300
*              End of a set of mutually exclusive required keys.      * 00100400
*                                                                     * 00100500
*                                                                     * 00100600
*          REQUEST=CALLEXIT                                           * 00100700
*              A user exit routine is to be called to process the     * 00100800
*              message identified by TOKEN.  Use the CALLEXIT service * 00100900
*              to process a saved message.  The type of exit called   * 00101000
*              must be appropriate for the message.  Messages saved   * 00101100
*              by a message exit routine and responses saved by a     * 00101200
*              notify exit routine must be processed by a message     * 00101300
*              exit routine.  Saved message/response entities must be * 00101400
*              processed by a notify exit routine.                    * 00101500
*                                                                     * 00101600
*              The CALLEXIT service first passes control to an XCF    * 00101700
*              service routine.  The XCF service routine sets up the  * 00101800
*              appropriate environment, collects information          * 00101900
*              pertinent to the message, and calls the indicated user * 00102000
*              exit routine.  The user exit routine receives control  * 00102100
*              under the same unit of work as the invoker of the      * 00102200
*              CALLEXIT service (ie, synchronously).  The user exit   * 00102300
*              routine performs whatever processing it deems suitable * 00102400
*              and then returns to the XCF service routine.  The XCF  * 00102500
*              service routine releases resources as necessary,       * 00102600
*              restores the environment and returns control to the    * 00102700
*              invoker of the CALLEXIT service.                       * 00102800
*                                                                     * 00102900
*              Only one exit routine is allowed to process a          * 00103000
*              particular message at any one time.  The CALLEXIT      * 00103100
*              request is rejected if an exit routine is already      * 00103200
*              processing the message.                                * 00103300
*                                                                     * 00103400
*                                                                     * 00103500
*              The following is a set of mutually exclusive keys.     * 00103600
*              This set is required; only one key must be specified.  * 00103700
*                                                                     * 00103800
*                                                                     * 00103900
*              NOTIFYEXIT=xnotifyexit                                 * 00104000
*                  belongs to a set of mutually exclusive keys. It is * 00104100
*                  an input.  It is the name (RS-type), or address in * 00104200
*                  register (2)-(12), of a 31 bit notify exit routine * 00104300
*                  in the issuer's address space to receive control.  * 00104400
*                                                                     * 00104500
*                  The exit routine need not be the same one defined  * 00104600
*                  when the member invoked the IXCJOIN service to     * 00104700
*                  join the group.                                    * 00104800
*                                                                     * 00104900
*              MSGEXIT=xmsgexit                                       * 00105000
*                  belongs to a set of mutually exclusive keys. It is * 00105100
*                  an input.  It is the name (RS-type), or address in * 00105200
*                  register (2)-(12), of a 31 bit message exit        * 00105300
*                  routine in the issuer's address space to receive   * 00105400
*                  control.                                           * 00105500
*                                                                     * 00105600
*                  The exit routine need not be the same one defined  * 00105700
*                  when the member invoked the IXCJOIN service to     * 00105800
*                  join the group.                                    * 00105900
*                                                                     * 00106000
*                                                                     * 00106100
*                                                                     * 00106200
*              End of a set of mutually exclusive required keys.      * 00106300
*                                                                     * 00106400
*                                                                     * 00106500
*                                                                     * 00106600
*              ÝEXITPARMS=»xexitparms!ZEROº¨                          * 00106700
*                  is the name (RS-type), or address in register      * 00106800
*                  (2)-(12), of an optional 64 bit input area         * 00106900
*                  containing user parameters to be passed to the     * 00107000
*                  exit routine.  The content and meaning of this     * 00107100
*                  area is up to the user to define.  For example it  * 00107200
*                  might be used to pass the address and ALET of a    * 00107300
*                  storage area containing information that           * 00107400
*                  determines how the exit routine should perform its * 00107500
*                  processing.                                        * 00107600
*                                                                     * 00107700
*                  For a message exit routine, MeplExExitParms within * 00107800
*                  the Message Exit Parameter List (MEPL, mapped by   * 00107900
*                  macro IXCYMEPL) contains a copy of these           * 00108000
*                  parameters.                                        * 00108100
*                                                                     * 00108200
*                  For a notify exit routine,  MnplExitParms within   * 00108300
*                  the Message Notification Parameter List (MNPL,     * 00108400
*                  mapped by macro IXCYMNPL) contains a copy of these * 00108500
*                  parameters.                                        * 00108600
*                  DEFAULT: ZERO - parameters set to hexadecimal zero * 00108700
*                                                                     * 00108800
*                                                                     * 00108900
*                                                                     * 00109000
*                                                                     * 00109100
*              MEMTOKEN=xmemtoken                                     * 00109200
*                  is the name (RS-type), or address in register      * 00109300
*                  (2)-(12), of a required 64 bit input variable      * 00109400
*                  containing the member token (as returned by        * 00109500
*                  IXCJOIN) which identifies the member making the    * 00109600
*                  request.                                           * 00109700
*                                                                     * 00109800
*                                                                     * 00109900
*                                                                     * 00110000
*                                                                     * 00110100
*              TOKEN=xtoken                                           * 00110200
*                  is the name (RS-type), or address in register      * 00110300
*                  (2)-(12), of a required 16 character input that    * 00110400
*                  identifies the message to be processed by the exit * 00110500
*                  routine.                                           * 00110600
*                                                                     * 00110700
*                  A message token suitable for a notify exit is      * 00110800
*                  available from the Message-out Service (IXCMSGO)   * 00110900
*                  via the keyword RETMSGOTOKEN, or from the Message  * 00111000
*                  Control QUERYMSG Service via a MSGOUT query for    * 00111100
*                  SAVED or COMPLETE messages, or from the Message    * 00111200
*                  Control SAVEMSG service via the keyword            * 00111300
*                  RETMSGTOKEN when a message/response entity was     * 00111400
*                  saved by a notify exit routine.                    * 00111500
*                                                                     * 00111600
*                  A message token suitable for a message exit is     * 00111700
*                  available from the Message Control QUERYMSG        * 00111800
*                  Service via a MSGIN query, or from the Message     * 00111900
*                  Control SAVEMSG service via the keyword            * 00112000
*                  RETMSGTOKEN when a message was saved by a message  * 00112100
*                  exit routine or when a response was saved by a     * 00112200
*                  notify exit routine.                               * 00112300
*                                                                     * 00112400
*                                                                     * 00112500
*                                                                     * 00112600
*          REQUEST=RELEASEMSG                                         * 00112700
*              Release a Client/Server blocking receive request       * 00112800
*              (IXCRECV), a Client/Server send message request        * 00112900
*              (IXCSEND) or a message-out request (IXCMSGOX) issued   * 00113000
*              with the MSGACCESS=SYNCSUSPEND keyword.                * 00113100
*                                                                     * 00113200
*              If a unit of work has issued IXCRECV REQTYPE=BLOCKING  * 00113300
*              to receive the results of an XCF Client/Server         * 00113400
*              message, and another unit of work issues IXCMSGC       * 00113500
*              REQUEST=RELEASEMSG, the blocked receiver is resumed    * 00113600
*              and receives a return and reason code indicating that  * 00113700
*              the receive request was released. No data will be      * 00113800
*              returned in the answer area for the released IXCRECV   * 00113900
*              request.  The message persists for the HOLDTIME        * 00114000
*              specified on the IXCSEND macro service and a           * 00114100
*              subsequent IXCRECV can be issued to receive the        * 00114200
*              message information.                                   * 00114300
*                                                                     * 00114400
*              If a unit of work has issued IXCMSGOX with             * 00114500
*              MSGACCESS=SYNCSUSPEND or a Client/Server request       * 00114600
*              (IXCSEND) and the unit of work is paused by XCF, the   * 00114700
*              service invoker can receive a return and reason code   * 00114800
*              indicating that the request may not have completed     * 00114900
*              sending the message to all intended targets.           * 00115000
*                                                                     * 00115100
*              For an IXCMSGOX broadcast or IXCSEND to multiple       * 00115200
*              targets, any remaining unsent messages will not be     * 00115300
*              sent.  For message-out requests, if notification was   * 00115400
*              to be provided upon completion of the message, the     * 00115500
*              user notify exit will receive control.  If not, the    * 00115600
*              Message Control CALLEXIT service can be used to call a * 00115700
*              user notify exit routine if desired.  Note that if XCF * 00115800
*              has initiated a send to a particular target member,    * 00115900
*              those message(s) will be delivered as usual.           * 00116000
*                                                                     * 00116100
*              For an IXCSEND request with a HOLDTIME specified, the  * 00116200
*              IXCRECV service macro can be issued to receive the     * 00116300
*              results of the released Client/Server request.         * 00116400
*                                                                     * 00116500
*                                                                     * 00116600
*              The following is a set of mutually exclusive keys.     * 00116700
*              This set is required; only one key must be specified.  * 00116800
*                                                                     * 00116900
*                                                                     * 00117000
*              TOKEN=xtoken                                           * 00117100
*                  belongs to a set of mutually exclusive keys. It is * 00117200
*                  the name (RS-type), or address in register         * 00117300
*                  (2)-(12), of a 16 character input that identifies  * 00117400
*                  to XCF the message processing to be released.      * 00117500
*                                                                     * 00117600
*                  The TOKEN can be obtained from the Message Control * 00117700
*                  QUERYMSG Service specifying MSGOUT for DATATYPE    * 00117800
*                  and INCOMPLETE for STATUS.                         * 00117900
*                                                                     * 00118000
*                                                                     * 00118100
*                  MEMTOKEN=xmemtoken                                 * 00118200
*                      is the name (RS-type), or address in register  * 00118300
*                      (2)-(12), of a required 64 bit input variable  * 00118400
*                      containing the member token (as returned by    * 00118500
*                      IXCJOIN) which identifies the member making    * 00118600
*                      the request.                                   * 00118700
*                                                                     * 00118800
*                                                                     * 00118900
*                                                                     * 00119000
*              SENDTOKEN=xsendtoken                                   * 00119100
*                  belongs to a set of mutually exclusive keys. It is * 00119200
*                  the name (RS-type), or address in register         * 00119300
*                  (2)-(12), of a 32 character input that identifies  * 00119400
*                  an XCF Client/Server IXCRECV or IXCSEND request    * 00119500
*                  that is to be released.                            * 00119600
*                                                                     * 00119700
*                  This token is available from the XCF Client/Server * 00119800
*                  Send macro service (IXCSEND) via the keyword       * 00119900
*                  RETMSGTOKEN.                                       * 00120000
*                                                                     * 00120100
*                                                                     * 00120200
*                                                                     * 00120300
*              End of a set of mutually exclusive required keys.      * 00120400
*                                                                     * 00120500
*                                                                     * 00120600
*                                                                     * 00120700
*                                                                     * 00120800
*                                                                     * 00120900
*                                                                     * 00121000
*                                                                     * 00121100
*      ÝRETCODE=xretcode¨                                             * 00121200
*          is the name (RS-type) of an optional fullword output       * 00121300
*          variable, or register (2)-(12) or (15), into which the     * 00121400
*          return code is to be copied from GPR 15.  If you specify   * 00121500
*          15, GPR15, REG15, or R15 (within or without parentheses),  * 00121600
*          the value will be left in GPR 15.                          * 00121700
*                                                                     * 00121800
*                                                                     * 00121900
*                                                                     * 00122000
*                                                                     * 00122100
*      ÝRSNCODE=xrsncode¨                                             * 00122200
*          is the name (RS-type) of an optional fullword output       * 00122300
*          variable into which the reason code is to be copied from   * 00122400
*          GPR 0.  If you specify 0, 00, GPR0, GPR00, REG0, REG00, or * 00122500
*          R0 (within or without parentheses), the value will be left * 00122600
*          in GPR 0.                                                  * 00122700
*                                                                     * 00122800
*                                                                     * 00122900
*                                                                     * 00123000
*                                                                     * 00123100
*      ÝPLISTVER=»xplistver!IMPLIED_VERSIONº¨                         * 00123200
*          is an optional byte input decimal value in the "0-2" range * 00123300
*          that specifies the macro version.  PLISTVER is the only    * 00123400
*          key allowed on the list form of MF and determines which    * 00123500
*          parameter list is generated.  The macro keys associated    * 00123600
*          with each supported version of the macro are listed in     * 00123700
*          MACRO USAGE NOTE 2.  Note that MAX may be specified        * 00123800
*          instead of a number, and the parameter list will be of the * 00123900
*          largest size currently supported. This size may grow from  * 00124000
*          release to release (thus possibly affecting the amount of  * 00124100
*          storage needed by your program).  If your program can      * 00124200
*          tolerate this, IBM recommends that you always specify MAX  * 00124300
*          when creating the list form parameter list as that will    * 00124400
*          ensure that the list form parameter list is always long    * 00124500
*          enough to hold whatever parameters might be specified on   * 00124600
*          the execute form.                                          * 00124700
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00124800
*          default is the lowest version which allows all of the      * 00124900
*          parameters specified on the invocation to be processed.    * 00125000
*                                                                     * 00125100
*                                                                     * 00125200
*                                                                     * 00125300
*                                                                     * 00125400
*      ÝMF=»S!L!Eº¨                                                   * 00125500
*          is an optional keyword input which specifies the macro     * 00125600
*          form.                                                      * 00125700
*          DEFAULT: S                                                 * 00125800
*                                                                     * 00125900
*                                                                     * 00126000
*          ÝMF=S¨                                                     * 00126100
*              specifies the standard form of the macro.  The "S"     * 00126200
*              form generates code to put the parameters into an      * 00126300
*              in-line parameter list and invoke the desired service. * 00126400
*              Full checking for required macro keys is done along    * 00126500
*              with supplying defaults for omitted optional           * 00126600
*              parameters.                                            * 00126700
*                                                                     * 00126800
*          ÝMF=(L,xmfctrl»,xmfattr!0Dº)¨                              * 00126900
*              specifies the list form of the macro.  The "L" form    * 00127000
*              defines an area to be used for the parameter list.     * 00127100
*              Only the PLISTVER key may be specified on the          * 00127200
*              invocation.  All other macro parameters are flagged as * 00127300
*              errors.  If PLISTVER is not specified, the original    * 00127400
*              parameter list definition is used.                     * 00127500
*                                                                     * 00127600
*            ,xmfctrl                                                 * 00127700
*              is a required input.  It is the name of a storage area * 00127800
*              for the parameter list.                                * 00127900
*                                                                     * 00128000
*            »,xmfattr!0Dº                                            * 00128100
*              is an optional 60 character input string that varies   * 00128200
*              from 1 to 60 characters. Use it to force boundary      * 00128300
*              alignment of the parameter list. Use only 0F or 0D.    * 00128400
*              DEFAULT: 0D which forces the parameter list to a       * 00128500
*              doubleword boundary.                                   * 00128600
*                                                                     * 00128700
*          ÝMF=(E,xmfctrl»,COMPLETEº)¨                                * 00128800
*              specifies the execute form of the macro.  The "E" form * 00128900
*              generates code to put the parameters into the          * 00129000
*              parameter list specified by xmfctrl and provides full  * 00129100
*              syntax checking with default setting.                  * 00129200
*                                                                     * 00129300
*            ,xmfctrl                                                 * 00129400
*              is a required input.  It is the name (RS-type), or     * 00129500
*              address in register (1)-(12), of a storage area for    * 00129600
*              the parameter list.                                    * 00129700
*                                                                     * 00129800
*            »,COMPLETEº                                              * 00129900
*              is an optional keyword input which specifies the       * 00130000
*              degree of macro parameter syntax checking.             * 00130100
*              DEFAULT: COMPLETE                                      * 00130200
*                                                                     * 00130300
*                                                                     * 00130400
*              COMPLETE                                               * 00130500
*                  Checking for required macro keys is done and       * 00130600
*                  defaults are supplied for omitted optional         * 00130700
*                  parameters.                                        * 00130800
*                                                                     * 00130900
*                                                                     * 00131000
*                                                                     * 00131100
*                                                                     * 00131200
*                                                                     * 00131300
*                                                                     * 00131400
*                                                                     * 00131500
*01* RETURN CODES:                                                    * 00131600
*                                                                     * 00131700
*                 Return code and Reason code constants are defined   * 00131800
*                 within IXCYMSGC.  NOTE carefully that bits 0-15 of  * 00131900
*                 the reason code may contain component-diagnostic    * 00132000
*                 data and must not be assumed to be 0. The constant  * 00132100
*                 IXCMSGCRsnCodeMask is provided for masking off the  * 00132200
*                 component-diagnostic data.                          * 00132300
*                                                                     * 00132400
*       00        Name: IXCMSGCRcSuccessful                           * 00132500
*                                                                     * 00132600
*                 Meaning: Successful completion                      * 00132700
*                                                                     * 00132800
*                 Action: None                                        * 00132900
*                                                                     * 00133000
*       04        Name: IXCMSGCRcWarning                              * 00133100
*                                                                     * 00133200
*                 Meaning: Warning, reason code in R0                 * 00133300
*                                                                     * 00133400
*                 Action: See reason code                             * 00133500
*                                                                     * 00133600
*                                                                     * 00133700
*                                                                     * 00133800
*                 HEX REASON  MEANING/ACTION                          * 00133900
*                 CODE                                                * 00134000
*                                                                     * 00134100
*                 xxxx0004    Name: IXCMSGCRsnAnsAreaTooSmall         * 00134200
*                                                                     * 00134300
*                             Meaning:  Meaning: The query request    * 00134400
*                             completed successfully.  The ANSAREA    * 00134500
*                             provided was large enough to contain    * 00134600
*                             the header information (MqaHeader), but * 00134700
*                             was not large enough to contain all the * 00134800
*                             data that was requested.  The           * 00134900
*                             MqaHdrTlen field indicates the total    * 00135000
*                             length of the output answer area that   * 00135100
*                             would have been needed to contain all   * 00135200
*                             the requested information.  It is       * 00135300
*                             possible that only the MqaHeader was    * 00135400
*                             provided in which case MqaHdr#Entries   * 00135500
*                             would be zero.                          * 00135600
*                                                                     * 00135700
*                             Action:  Retry the request with an      * 00135800
*                             ANSAREA whose length is greater than or * 00135900
*                             equal to the number of bytes indicated  * 00136000
*                             by MqaHdrTlen.  Note that the amount of * 00136100
*                             data to be returned can change          * 00136200
*                             dynamically, so that the length         * 00136300
*                             indicated by MqaHdrTlen may be too      * 00136400
*                             small for all the data when the request * 00136500
*                             is tried again.                         * 00136600
*                                                                     * 00136700
*                 xxxx0008    Name: IXCMSGCRsnMsgAlreadyComplete      * 00136800
*                                                                     * 00136900
*                             Meaning: Message already completed.     * 00137000
*                                                                     * 00137100
*                             Action: None, Message COMPLETION        * 00137200
*                             requested for a message that was        * 00137300
*                             already completed.                      * 00137400
*                                                                     * 00137500
*                 xxxx000C    Name: IXCMSGCRsnSavedMsgTimeOut         * 00137600
*                                                                     * 00137700
*                             Meaning: HOLDTIME(CONTINUE) was         * 00137800
*                             specified for a SAVEMSG request but the * 00137900
*                             established HOLDTIME for the saved      * 00138000
*                             message has expired and the message     * 00138100
*                             will be discarded as soon as CALLEXIT   * 00138200
*                             processing completes.                   * 00138300
*                                                                     * 00138400
*                             Action: If the message is to be saved,  * 00138500
*                             re-issue the SAVEMSG request specifying * 00138600
*                             HOLDTIME(INDEFINITE) or HOLDTIME(SET)   * 00138700
*                             to establish a new HOLDTIME.            * 00138800
*                                                                     * 00138900
*                 xxxx0018    Name: IXCMSGCRsnMsgDiscardPending       * 00139000
*                                                                     * 00139100
*                             Meaning: Message discard pending.       * 00139200
*                             Message resources are currently being   * 00139300
*                             used by other XCF services. The message * 00139400
*                             will be deleted as soon as all XCF      * 00139500
*                             services accessing the message          * 00139600
*                             complete.                               * 00139700
*                                                                     * 00139800
*                             Action: None, the message is not        * 00139900
*                             available.  Storage areas for a         * 00140000
*                             message-out request that were to be     * 00140100
*                             preserved until the message completed   * 00140200
*                             can be freed (applies to                * 00140300
*                             IXCMSGO/IXCMSGOX MSGACCESS=ASYNC or     * 00140400
*                             MSGACCESS=SYNCSUSPEND requests).        * 00140500
*                                                                     * 00140600
*                 xxxx0020    Name: IXCMSGCRsnNoMsgReleasedMSGOX      * 00140700
*                                                                     * 00140800
*                             Meaning: A RELEASEMSG request for a     * 00140900
*                             paused message-out request identified   * 00141000
*                             by TOKEN did not find a unit of work to * 00141100
*                             release.  Action: None. The system      * 00141200
*                             returns to the caller without releasing * 00141300
*                             a unit of work.                         * 00141400
*                                                                     * 00141500
*                 xxxx0024    Name:IXCMSGCRsnNoMsgReleasedClient      * 00141600
*                                                                     * 00141700
*                             Meaning:  A RELEASEMSG request for a    * 00141800
*                             blocking IXCRECV or a paused IXCSEND    * 00141900
*                             service call identified by SENDTOKEN    * 00142000
*                             did not find a unit of work to release. * 00142100
*                             Action: None. The system returns to the * 00142200
*                             caller without releasing a unit of      * 00142300
*                             work.                                   * 00142400
*                                                                     * 00142500
*                                                                     * 00142600
*                                                                     * 00142700
*                                                                     * 00142800
*       08        Name: IXCMSGCRcInvalidParms                         * 00142900
*                                                                     * 00143000
*                 Meaning: Invalid parameters, reason code in R0      * 00143100
*                                                                     * 00143200
*                 Action: See reason code                             * 00143300
*                                                                     * 00143400
*                                                                     * 00143500
*                 HEX REASON  MEANING/ACTION                          * 00143600
*                 CODE                                                * 00143700
*                                                                     * 00143800
*                 xxxx0004    Name: IXCMSGCRsnMemberNotActive         * 00143900
*                                                                     * 00144000
*                             Meaning: Member token does not identify * 00144100
*                             an active member associated with the    * 00144200
*                             primary address space current when the  * 00144300
*                             Message-Control service was invoked.    * 00144400
*                                                                     * 00144500
*                             Action: Reissue the request with a      * 00144600
*                             correct member token.                   * 00144700
*                                                                     * 00144800
*                 xxxx0016    Name: IXCMSGCRSNInAppropExitRoutineName * 00144900
*                                                                     * 00145000
*                             Meaning: Inappropriate exit routine     * 00145100
*                             type.                                   * 00145200
*                                                                     * 00145300
*                             Action:  The type of exit specified for * 00145400
*                             a CALLEXIT request must be appropriate  * 00145500
*                             for the type of message to be           * 00145600
*                             processed.  Messages saved by a message * 00145700
*                             exit routine and responses saved by a   * 00145800
*                             notify exit routine must be processed   * 00145900
*                             by a message exit routine.  A saved     * 00146000
*                             message/response entity must be         * 00146100
*                             processed by a notify exit routine.     * 00146200
*                             Retry the request with the correct exit * 00146300
*                             routine.                                * 00146400
*                                                                     * 00146500
*                 xxxx0040    Name: IXCMSGCRSNReservedFieldNotNull    * 00146600
*                                                                     * 00146700
*                             Meaning:  Program error or              * 00146800
*                             environmental error.  A reserved field  * 00146900
*                             in the control parameter list is not    * 00147000
*                             zero.                                   * 00147100
*                                                                     * 00147200
*                             Action:  Check to see if your program   * 00147300
*                             inadvertently overlaid the parameter    * 00147400
*                             list storage, and that it was assembled * 00147500
*                             with the correct macro library for the  * 00147600
*                             release of MVS your program is running  * 00147700
*                             on.                                     * 00147800
*                                                                     * 00147900
*                 xxxx0100    Name: IXCMSGCRSNBadPlistAlet            * 00148000
*                                                                     * 00148100
*                             Meaning: Program error. Your program is * 00148200
*                             not running in primary ASC mode, and    * 00148300
*                             the ALET that qualifies the address of  * 00148400
*                             the control parameter list is neither   * 00148500
*                             zero nor associated with a valid public * 00148600
*                             entry on the DU-AL or in a common area  * 00148700
*                             data space                              * 00148800
*                                                                     * 00148900
*                             Action: Ensure that:  Your program is   * 00149000
*                             not intended to run in primary ASC      * 00149100
*                             mode, You specified SYSSTATE ASCENV=AR  * 00149200
*                             before issuing the IXCMSGC macro, and   * 00149300
*                             the ALET for the parameter list is a    * 00149400
*                             valid public entry on the DU-AL ,is     * 00149500
*                             zero (primary address space ALET) or in * 00149600
*                             a common area data space.               * 00149700
*                                                                     * 00149800
*                 xxxx0104    Name: IXCMSGCRSNBadPlistVersion         * 00149900
*                                                                     * 00150000
*                             Meaning: Parameter list not valid.      * 00150100
*                             Version number in parameter list is not * 00150200
*                             valid.  The release level of XCF on     * 00150300
*                             which the caller is running does not    * 00150400
*                             support this version of the message     * 00150500
*                             control service.                        * 00150600
*                                                                     * 00150700
*                             Action: Retry the request with the      * 00150800
*                             correct version.                        * 00150900
*                                                                     * 00151000
*                 xxxx0108    Name: IXCMSGCRSNBadPListFuncCode        * 00151100
*                                                                     * 00151200
*                             Meaning: Parameter list not valid.      * 00151300
*                             Function code not valid.                * 00151400
*                                                                     * 00151500
*                             Action: Retry the request               * 00151600
*                                                                     * 00151700
*                 xxxx010C    Name: IXCMSGCRSNBadPlistAddress         * 00151800
*                                                                     * 00151900
*                             Meaning: Parameter list not accessible. * 00152000
*                             storage is not addressable.             * 00152100
*                                                                     * 00152200
*                             Action: Make sure the parameter list is * 00152300
*                             accessible to XCF and retry the         * 00152400
*                             request.                                * 00152500
*                                                                     * 00152600
*                 xxxx011C    Name: IXCMSGCRSNNotEnabled              * 00152700
*                                                                     * 00152800
*                             Meaning: The caller is not enabled.     * 00152900
*                                                                     * 00153000
*                             Action: Correct your program so that it * 00153100
*                             does not issue IXCMSGC while it is      * 00153200
*                             disabled.                               * 00153300
*                                                                     * 00153400
*                 xxxx012C    Name: IXCMSGCRSNLocksHeld               * 00153500
*                                                                     * 00153600
*                             Meaning: The caller is holding a lock.  * 00153700
*                                                                     * 00153800
*                             Action: Correct your program so that it * 00153900
*                             does not issue IXCMSGC while holding    * 00154000
*                             any locks.                              * 00154100
*                                                                     * 00154200
*                 xxxx013C    Name:                                   * 00154300
*                             IXCMSGCRSNAnsAreaSmallerThanHeader      * 00154400
*                                                                     * 00154500
*                             Meaning: ANSAREA too small.             * 00154600
*                                                                     * 00154700
*                             Action:  The answer area must be at     * 00154800
*                             least as long as the header record      * 00154900
*                             (MqaHeader).  Retry the request with a  * 00155000
*                             larger answer area.                     * 00155100
*                                                                     * 00155200
*                 xxxx0140    Name: IXCMSGCRSNAnsAreaBadAlet          * 00155300
*                                                                     * 00155400
*                             Meaning: ANSAREA not accessible.        * 00155500
*                                                                     * 00155600
*                             Action: The ALET of the ANSAREA is      * 00155700
*                             neither zero nor a valid entry on the   * 00155800
*                             Dispatchable Unit Access List (DU-AL),  * 00155900
*                             nor a valid entry for a common area     * 00156000
*                             data space.  Retry the request with the * 00156100
*                             correct ALET.                           * 00156200
*                                                                     * 00156300
*                 xxxx0148    Name: IXCMSGCRSNAnsAreaBadAddress       * 00156400
*                                                                     * 00156500
*                             Meaning: Error accessing ANSAREA.       * 00156600
*                                                                     * 00156700
*                             Action: Make sure the ANSAREA is        * 00156800
*                             accessible to XCF, and reissue the      * 00156900
*                             request.                                * 00157000
*                                                                     * 00157100
*                 xxxx0150    Name: IXCMSGCRSNMsgTagBadAlet           * 00157200
*                                                                     * 00157300
*                             Meaning: MSGTAG not accessible.         * 00157400
*                                                                     * 00157500
*                             Action: The ALET of the MSGTAG is       * 00157600
*                             neither zero nor a valid entry on the   * 00157700
*                             Dispatchable Unit Access List (DU-AL),  * 00157800
*                             nor a valid entry for a common area     * 00157900
*                             data space.  Retry the request with the * 00158000
*                             correct ALET.                           * 00158100
*                                                                     * 00158200
*                 xxxx0152    Name: IXCMSGCRSNMsgTagBadAddress        * 00158300
*                                                                     * 00158400
*                             Meaning: Error accessing MSGTAG.        * 00158500
*                                                                     * 00158600
*                             Action: Make sure the MSGTAG is         * 00158700
*                             accessible to XCF, and reissue the      * 00158800
*                             request.                                * 00158900
*                                                                     * 00159000
*                 xxxx0154    Name: IXCMSGCRSNMsgTagFilterBadAlet     * 00159100
*                                                                     * 00159200
*                             Meaning: MSGTAGFILTER not accessible.   * 00159300
*                                                                     * 00159400
*                             Action: The ALET of the MSGTAGFILTER is * 00159500
*                             neither zero nor a valid entry on the   * 00159600
*                             Dispatchable Unit Access List (DU-AL),  * 00159700
*                             nor a valid entry for a common area     * 00159800
*                             data space.  Retry the request with the * 00159900
*                             correct ALET.                           * 00160000
*                                                                     * 00160100
*                 xxxx0158    Name: IXCMSGCRSNMsgTagFilterBadAddress  * 00160200
*                                                                     * 00160300
*                             Meaning: Error accessing MSGTAGFILTER.  * 00160400
*                                                                     * 00160500
*                             Action: Make sure the MSGTAGFILTER is   * 00160600
*                             accessible to XCF, and reissue the      * 00160700
*                             request.                                * 00160800
*                                                                     * 00160900
*                 xxxx0160    Name: IXCMSGCRSNMsgTagMaskBadAlet       * 00161000
*                                                                     * 00161100
*                             Meaning: MSGTAGMASK not accessible.     * 00161200
*                                                                     * 00161300
*                             Action: The ALET of the MSGTAGMASK is   * 00161400
*                             neither zero nor a valid entry on the   * 00161500
*                             Dispatchable Unit Access List (DU-AL),  * 00161600
*                             nor a valid entry for a common area     * 00161700
*                             data space.  Retry the request with the * 00161800
*                             correct ALET.                           * 00161900
*                                                                     * 00162000
*                 xxxx0168    Name: IXCMSGCRSNMsgTagMaskBadAddress    * 00162100
*                                                                     * 00162200
*                             Meaning: Error accessing MSGTAGMASK.    * 00162300
*                                                                     * 00162400
*                             Action: Make sure the MSGTAGMASK is     * 00162500
*                             accessible to XCF, and reissue the      * 00162600
*                             request.                                * 00162700
*                                                                     * 00162800
*                 xxxx0170    Name: IXCMSGCRSNTokenBadAlet            * 00162900
*                                                                     * 00163000
*                             Meaning: SENDTOKEN not accessible.      * 00163100
*                                                                     * 00163200
*                             Action: The ALET of the SENDTOKEN is is * 00163300
*                             neither zero nor a valid entry on the   * 00163400
*                             Dispatchable Unit Access List (DU-AL),  * 00163500
*                             nor a valid entry for a common area     * 00163600
*                             data space. Retry the request with the  * 00163700
*                             correct ALET.                           * 00163800
*                                                                     * 00163900
*                 xxxx0172    Name: IXCMSGCRSNTokenBadAddress         * 00164000
*                                                                     * 00164100
*                             Meaning: Error accessing SENDTOKEN      * 00164200
*                                                                     * 00164300
*                             Action: Make sure the SENDTOKEN is      * 00164400
*                             accessible to XCF, and reissue the      * 00164500
*                             request.                                * 00164600
*                                                                     * 00164700
*                 xxxx0200    Name: IXCMSGCRSNTokenNotForSaveMsg      * 00164800
*                                                                     * 00164900
*                             Meaning: TOKEN not valid for SAVEMSG    * 00165000
*                             service.                                * 00165100
*                                                                     * 00165200
*                             Action: Verify that the token specified * 00165300
*                             is the MsgIToken provided to the        * 00165400
*                             message exit or notify exit and retry   * 00165500
*                             the request with the correct Token.     * 00165600
*                                                                     * 00165700
*                 xxxx0204    Name: IXCMSGCRSNTokenNotForDiscardMsg   * 00165800
*                                                                     * 00165900
*                             Meaning: TOKEN not valid for DISCARDMSG * 00166000
*                             service.                                * 00166100
*                                                                     * 00166200
*                             Action: Retry the request with the      * 00166300
*                             correct Token.                          * 00166400
*                                                                     * 00166500
*                 xxxx0208    Name: IXCMSGCRSNTokenForCallExitInvalid * 00166600
*                                                                     * 00166700
*                             Meaning: TOKEN not valid for CALLEXIT   * 00166800
*                             service.  CALLEXIT can be only be used  * 00166900
*                             for messages that were saved by a       * 00167000
*                             Notify or Message Exit via the SAVEMSG  * 00167100
*                             service.  The TOKEN must be a           * 00167200
*                             RETMSGTOKEN that was returned by the    * 00167300
*                             SAVEMSG service.                        * 00167400
*                                                                     * 00167500
*                             Action:  Insure that that the token is  * 00167600
*                             one that was returned by a successful   * 00167700
*                             invocation of the SAVEMSG service.      * 00167800
*                                                                     * 00167900
*                 xxxx020C    Name: IXCMSGCRSNMessageUnavailable      * 00168000
*                                                                     * 00168100
*                             Meaning: Message not available.  The    * 00168200
*                             message identified by the input message * 00168300
*                             token (TOKEN or SENDTOKEN) either does  * 00168400
*                             not exist, or is no longer accessible   * 00168500
*                             using the indicated token.  In the case * 00168600
*                             of an input TOKEN, this situation can   * 00168700
*                             also occur if the specified MEMTOKEN    * 00168800
*                             does not identify the XCF group member  * 00168900
*                             to whom the message token was given.    * 00169000
*                                                                     * 00169100
*                             The message would no longer exist if    * 00169200
*                             for example it had already been         * 00169300
*                             discarded, either explicitly by the     * 00169400
*                             user (perhaps a prior IXCMSGC           * 00169500
*                             REQUEST=DISCARDMSG completed            * 00169600
*                             successfully), or implicitly by XCF     * 00169700
*                             when processing for the message had     * 00169800
*                             completed (perhaps the message exit     * 00169900
*                             finished without saving the message, or * 00170000
*                             the HOLDTIME for a saved message        * 00170100
*                             expired).  The message would not be     * 00170200
*                             accessible if for example, a message    * 00170300
*                             exit had successfully saved a message   * 00170400
*                             with the IXCMSGC REQUEST=SAVEMSG        * 00170500
*                             service.  Once the message is saved,    * 00170600
*                             the token used to save the message (for * 00170700
*                             example, MeplMsgiToken) could not be    * 00170800
*                             used by the message exit to discard the * 00170900
*                             message.  Instead, one would need to    * 00171000
*                             discard the message using the token     * 00171100
*                             that was returned by the IXCMSGC        * 00171200
*                             request that saved the message          * 00171300
*                             (RETMSGTOKEN).                          * 00171400
*                                                                     * 00171500
*                             Action:  Verify that the input token    * 00171600
*                             (either TOKEN or SENDTOKEN) was validly * 00171700
*                             specified in an appropriate context.    * 00171800
*                             If the message was for an XCF group     * 00171900
*                             member, verify that the message token   * 00172000
*                             (TOKEN) is relevant to the specified    * 00172100
*                             member (MEMTOKEN).  If mis-specified,   * 00172200
*                             reissue the request with the correct    * 00172300
*                             token(s) in the correct context.        * 00172400
*                                                                     * 00172500
*                 xxxx0210    Name: IXCMSGCRSNMessageTokenInvalid     * 00172600
*                                                                     * 00172700
*                             Meaning: TOKEN not valid.               * 00172800
*                                                                     * 00172900
*                             Action: Verify the token and retry the  * 00173000
*                             request with the correct Token.         * 00173100
*                                                                     * 00173200
*                 xxxx0212    Name: IXCMSGCRSNSendTokenInvalid        * 00173300
*                                                                     * 00173400
*                             Meaning: SENDTOKEN not valid.  The      * 00173500
*                             SENDTOKEN must be a token that was      * 00173600
*                             returned by the IXCSEND service via the * 00173700
*                             RETMSGTOKEN keyword.                    * 00173800
*                                                                     * 00173900
*                             Action: Verify the SENDTOKEN and retry  * 00174000
*                             the request with the correct SENDTOKEN. * 00174100
*                                                                     * 00174200
*                 xxxx0220    Name:                                   * 00174300
*                             IXCMSGCRSNTokenNotForForceCompletion    * 00174400
*                                                                     * 00174500
*                             Meaning: Message TOKEN not valid for    * 00174600
*                             Force Completion.  The message token    * 00174700
*                             must be a token that was returned by    * 00174800
*                             the IXCMSGO service via the             * 00174900
*                             RETMSGOTOKEN keyword.                   * 00175000
*                                                                     * 00175100
*                             Action: Verify the token and retry the  * 00175200
*                             request with the correct Token.         * 00175300
*                                                                     * 00175400
*                 xxxx0224    Name: IXCMSGCRSNTokenNotForReleaseMsg   * 00175500
*                                                                     * 00175600
*                             Meaning: Message TOKEN not valid for    * 00175700
*                             Release Message (RELEASEMSG).  The      * 00175800
*                             message token must be a token that was  * 00175900
*                             returned by the IXCMSGOX service via    * 00176000
*                             the RETMSGOTOKEN keyword.  Action:      * 00176100
*                             Verify the token and retry the request  * 00176200
*                             with the correct Token.                 * 00176300
*                                                                     * 00176400
*                 xxxx0308    Name: IXCMSGCRSNBadRetMsgTokenAlet      * 00176500
*                                                                     * 00176600
*                             Meaning:  The ALET that qualifies the   * 00176700
*                             address of the RETMSGTOKEN is neither   * 00176800
*                             zero nor a valid entry on the           * 00176900
*                             Dispatchable Unit Access List (DU-AL),  * 00177000
*                             nor a valid entry for a common area     * 00177100
*                             data space.                             * 00177200
*                                                                     * 00177300
*                             Action: Retry the request with the      * 00177400
*                             correct ALET                            * 00177500
*                                                                     * 00177600
*                 xxxx0309    Name: IXCMSGCRSNBadRetMsgTokenAddress   * 00177700
*                                                                     * 00177800
*                             Meaning: RETMSGTOKEN not accessible.    * 00177900
*                             The Message Control Service was not     * 00178000
*                             able to store a message token in the    * 00178100
*                             storage area indicated by RETMSGTOKEN.  * 00178200
*                                                                     * 00178300
*                             Action: Verify the storage area is      * 00178400
*                             accessible to XCF and retry the         * 00178500
*                             request.                                * 00178600
*                                                                     * 00178700
*                 xxxx030A    Name: IXCMSGCRSNBadExitForCallExit      * 00178800
*                                                                     * 00178900
*                             Meaning: For a CALLEXIT request, XCF    * 00179000
*                             attempted to call the exit but the      * 00179100
*                             message or notify exit abended. The     * 00179200
*                             exit address could be invalid or the    * 00179300
*                             exit may have done some processing. The * 00179400
*                             specified message may have been         * 00179500
*                             processed by the exit routine before it * 00179600
*                             abended. As such, the token may or may  * 00179700
*                             not specify a currently valid message.  * 00179800
*                                                                     * 00179900
*                             Action: Verify the exit address and     * 00180000
*                             attempt the CALLEXIT request again.     * 00180100
*                                                                     * 00180200
*                 xxxx030E    Name: IXCMSGCRsnTaskModeCallExitWithFRR * 00180300
*                                                                     * 00180400
*                             Meaning: For a CALLEXIT request that    * 00180500
*                             was made in Task mode, the caller had   * 00180600
*                             an FRR established.                     * 00180700
*                                                                     * 00180800
*                             Action: Correct your program so that it * 00180900
*                             does not issue IXCMSGC Request CALLEXIT * 00181000
*                             with FRRs established while in Task     * 00181100
*                             mode.                                   * 00181200
*                                                                     * 00181300
*                 xxxx0C14    Name: IXCMSGCRsnTokenNotForQueryMsg     * 00181400
*                                                                     * 00181500
*                             Meaning: TOKEN not valid for QUERYMSG   * 00181600
*                             service.                                * 00181700
*                                                                     * 00181800
*                             Action: Retry the request with the      * 00181900
*                             correct Token.                          * 00182000
*                                                                     * 00182100
*                 xxxx0C1C    Name: IXCMSGCRsnBadMqaaLevel            * 00182200
*                                                                     * 00182300
*                             Meaning: MQAALEVEL specified for the    * 00182400
*                             QUERYMSG request was not valid.         * 00182500
*                                                                     * 00182600
*                             Action: Retry the request with a        * 00182700
*                             MQAALEVEL that is supported by the      * 00182800
*                             local system and by the DATATYPE.  The  * 00182900
*                             IXCYMQAA macro documents the supported  * 00183000
*                             MQAALEVEL.                              * 00183100
*                                                                     * 00183200
*                 xxxx0C1D    Name: IXCMSGCRsnHoldTimeNotSet          * 00183300
*                                                                     * 00183400
*                             Meaning: HOLDTIME(CONTINUE) was         * 00183500
*                             specified for a message that had not    * 00183600
*                             previously been saved.                  * 00183700
*                                                                     * 00183800
*                             Action: Retry the request specifying    * 00183900
*                             HOLDTIME(SET) or omit the               * 00184000
*                             HOLDTIME(CONTINUE) keyword to allow the * 00184100
*                             message to be saved indefinitely.       * 00184200
*                                                                     * 00184300
*                 xxxx0C1E    Name: IXCMSGCRsnHoldTimeInvalid         * 00184400
*                                                                     * 00184500
*                             Meaning: HOLDTIME(SET) was specified    * 00184600
*                             with an invalid TIME value.  TIME must  * 00184700
*                             be a non-zero value.                    * 00184800
*                                                                     * 00184900
*                             Action: Specify a TIME value that is    * 00185000
*                             non-zero.                               * 00185100
*                                                                     * 00185200
*                                                                     * 00185300
*                                                                     * 00185400
*       0C        Name: IXCMSGCRcEnvironmentalError                   * 00185500
*                                                                     * 00185600
*                 Meaning: The current environment prevented the      * 00185700
*                 request from being successful                       * 00185800
*                                                                     * 00185900
*                 Action: See reason code                             * 00186000
*                                                                     * 00186100
*                                                                     * 00186200
*                 HEX REASON  MEANING/ACTION                          * 00186300
*                 CODE                                                * 00186400
*                                                                     * 00186500
*                 xxxx0C04    Name: IXCMSGCRSNMsgNotAvailOtherExit    * 00186600
*                                                                     * 00186700
*                             Meaning: Message not available.         * 00186800
*                                                                     * 00186900
*                             Action: Another exit routine is         * 00187000
*                             currently processing the message.  Try  * 00187100
*                             again later.                            * 00187200
*                                                                     * 00187300
*                 xxxx0C08    Name: IXCMSGCRSNNoUserMsgSpaceAvail     * 00187400
*                                                                     * 00187500
*                             Meaning: No user message space          * 00187600
*                             available.  All the message storage     * 00187700
*                             space managed by XCF on behalf of the   * 00187800
*                             member are full.                        * 00187900
*                                                                     * 00188000
*                             Action:  Use the Message Control        * 00188100
*                             DISCARDMSG Service to discard one or    * 00188200
*                             more messages in order to make more     * 00188300
*                             storage available.                      * 00188400
*                                                                     * 00188500
*                 xxxx0C0C    Name: IXCMSGCRSNDUALCanNotBeExpanded    * 00188600
*                                                                     * 00188700
*                             Meaning: Unable to process a CALLEXIT   * 00188800
*                             QUERYMSG or COMPLETION request. A       * 00188900
*                             STOKEN that is required to be added to  * 00189000
*                             the current DUAL (dispatchable Unit     * 00189100
*                             Access List) could not be added due to  * 00189200
*                             the DUAL being full or not expandable.  * 00189300
*                                                                     * 00189400
*                             Action: Try again later or remove an    * 00189500
*                             entry from the DUAL and try again.      * 00189600
*                                                                     * 00189700
*                 xxxx0C10    Name: IXCMSGCRsnNoWorkingStorage        * 00189800
*                                                                     * 00189900
*                             Meaning: A IXCMSGC request could not be * 00190000
*                             performed because XCF could not obtain  * 00190100
*                             working storage in the XCF address      * 00190200
*                             space.                                  * 00190300
*                                                                     * 00190400
*                             Action: Try again later                 * 00190500
*                                                                     * 00190600
*                 xxxx0C18    Name: IXCMSGCRsnMessagePending          * 00190700
*                                                                     * 00190800
*                             Meaning: The CALLEXIT request could not * 00190900
*                             be completed, the specified token       * 00191000
*                             represents a message that is not        * 00191100
*                             complete.                               * 00191200
*                                                                     * 00191300
*                             Action: Retry the request again later   * 00191400
*                             after the message is complete.          * 00191500
*                                                                     * 00191600
*                                                                     * 00191700
*                                                                     * 00191800
*       10        Name: IXCMSGCRcSystemError                          * 00191900
*                                                                     * 00192000
*                 Meaning: System error. XCF processing failure.      * 00192100
*                                                                     * 00192200
*                 Action: Save the reason code information, and       * 00192300
*                 contact the IBM support center.                     * 00192400
*                                                                     * 00192500
*                                                                     * 00192600
*                                                                     * 00192700
*01* REASON CODES:                                                    * 00192800
*                                                                     * 00192900
*       A unique reason code for a given return code will be returned * 00193000
*       whenever the return code is non-zero. Reason code and return  * 00193100
*       code constants are defined within IXCYMSGC.  NOTE carefully   * 00193200
*       that bits 0-15 of the reason code may contain                 * 00193300
*       component-diagnostic data and must not be assumed to be 0.    * 00193400
*       The constant IXCMSGCRsnCodeMask is provided for masking off   * 00193500
*       the component-diagnostic data.                                * 00193600
*                                                                     * 00193700
*01* MODULE TYPE:  ASSEM MACRO                                        * 00193800
*                                                                     * 00193900
*02*   PROCESSOR:  ASSEM                                              * 00194000
*                                                                     * 00194100
*01* COMPONENT:  SCXCF                                                * 00194200
*                                                                     * 00194300
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00194400
*                                                                     * 00194500
*01* ABEND CODES:                                                     * 00194600
*                                                                     * 00194700
*                                                                     * 00194800
*       073       Environment not valid.  The caller held a lock.     * 00194900
*                                                                     * 00195000
*                                                                     * 00195100
*                                                                     * 00195200
*01* MACRO USAGE NOTES:                                               * 00195300
*                                                                     * 00195400
*                                                                     * 00195500
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00195600
*        global macro variable.  Any value other than 'NO' will       * 00195700
*        result in the macro expansion being printed.  The default is * 00195800
*        'YES'.  The following examples illustrate how the ZPRINT     * 00195900
*        variable should be set.                                      * 00196000
*                                                                     * 00196100
*                    GBLC &ZPRINT                                     * 00196200
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00196300
*                                                                     * 00196400
*                                                                     * 00196500
*    2.  The  IXCMSGC macro supports multiple versions. The macro key * 00196600
*        list  below  contains the version level in which the key was * 00196700
*        first  introduced.  Positionals  are  identified by the word * 00196800
*        'Positional'  followed by the numeric value of its position. * 00196900
*        Nested  positionals  are  preceded  by their outer key.  The * 00197000
*        lowest value represents the original version and the highest * 00197100
*        value  represents  the  most  recent  version of the IXCMSGC * 00197200
*        macro.    When  specifying  PLISTVER,  be sure that it is at * 00197300
*        least  as high as the highest version number of all the keys * 00197400
*        being used.                                                  * 00197500
*                                                                     * 00197600
*        VERSION   KEY                                                * 00197700
*                                                                     * 00197800
*              0      ANSAREA                                         * 00197900
*                     ANSLEN                                          * 00198000
*                     DATATYPE                                        * 00198100
*                     EXITPARMS                                       * 00198200
*                     MEMTOKEN                                        * 00198300
*                     MSGEXIT                                         * 00198400
*                     NOTIFYEXIT                                      * 00198500
*                     REQUEST                                         * 00198600
*                     RETMSGTOKEN                                     * 00198700
*                     SOURCE                                          * 00198800
*                     STATUS                                          * 00198900
*                     TYPE                                            * 00199000
*                     USERDATA                                        * 00199100
*              2      HOLDTIME                                        * 00199200
*                     MQAALEVEL                                       * 00199300
*                     MSGTAG                                          * 00199400
*                     MSGTAGFILTER                                    * 00199500
*                     MSGTAGMASK                                      * 00199600
*                     SENDTOKEN                                       * 00199700
*                     TIME                                            * 00199800
*                     TOKEN                                           * 00199900
*                                                                     * 00200000
*    3.  Note  that  the content of TOKENs used to identify a message * 00200100
*        to  the  Message  Control  Service can vary.   Two different * 00200200
*        TOKENs  may in fact identify the same message.  Therefore it * 00200300
*        is  not  possible  to  compare  TOKENs  to determine if they * 00200400
*        identify the same message.                                   * 00200500
*                                                                     * 00200600
*    4.  An  exit  routine  should  always  make  use of the TOKEN(s) * 00200700
*        passed  to  it  via  the parameter list presented by XCF (as * 00200800
*        opposed  to  using  some  other  instance  of  a  TOKEN that * 00200900
*        identifies  the  same  message).    The  system  incurs less * 00201000
*        overhead  when these TOKENs are used within an exit routine. * 00201100
*        Also,  some  services (eg, SAVEMSG) only accept a TOKEN from * 00201200
*        the  exit  parameter list as a valid input.  A TOKEN from an * 00201300
*        exit  parameter  list  should not be saved since it is not a * 00201400
*        valid input once the exit routine gives up control.          * 00201500
*                                                                     * 00201600
*                                                                     * 00201700
*                                                                     * 00201800
*01* CHANGE ACTIVITY:                                                 * 00201900
*                                                                     * 00202000
*   Flag LineItem  FMID    Date   ID    Comment                       * 00202100
*                                                                     * 00202200
*    $L0=XCFBCXMG HBB6603 950417 PD00DT:  XCF Broadcast               * 00202300
*    $L1=XCFBCXMG HBB6603 950823 PD00CJ:  XCF Broadcast - added PC    * 00202400
*                                         support of space switch and * 00202500
*                                         non-space.  Also changed    * 00202600
*                                         many reason code values and * 00202700
*                                         descriptions to be          * 00202800
*                                         consistent with other XCF   * 00202900
*                                         services.                   * 00203000
*    $L2=XCFBCXMG HBB6603 951024 PD00CJ:  XCF Broadcast - added PC    * 00203100
*                                         support for IXCSIMCX (call  * 00203200
*                                         exit)                       * 00203300
*    $L3=XCFBCXMG HBB6603 951130 PD00CJ:  XCF Broadcast - removed     * 00203400
*                                         ACTIVATEEXIT and            * 00203500
*                                         MSGDELIVERY requests        * 00203600
*    $L4=XCFBCXMG HBB6603 960630 PD00CJ:  XCF Broadcast - added rsn   * 00203700
*                                         codes                       * 00203800
*                                         IXCMSGCRSNDUALCanNotBeExpan * 00203900
*                                         ded and                     * 00204000
*                                         IXCMSGCRsnNoWorkingStorage  * 00204100
*    $L5=XCFBCXMG HBB6603 960630 PD00CJ:  XCF Broadcast - Changed the * 00204200
*                                         description for reason code * 00204300
*                                         IXCMSGCRsnAnsAreaTooSmall   * 00204400
*                                         and added rsn code          * 00204500
*                                         IXCMSGCRsnTokenNotForQueryM * 00204600
*                                         sg                          * 00204700
*    $P1=PQC1336  HBB6603 960718 PD00CJ:  XCF Broadcast - Changed all * 00204800
*                                         the bad token rsn codes to: * 00204900
*                                         IXCMSGCRSNTokenNotForSaveMs * 00205000
*                                         g,                          * 00205100
*                                         IXCMSGCRSNTokenNotForDiscar * 00205200
*                                         dMsg,                       * 00205300
*                                         IXCMSGCRSNTokenForCallExitI * 00205400
*                                         nvalid,                     * 00205500
*                                         IXCMSGCRSNTokenNotForForceC * 00205600
*                                         ompletion                   * 00205700
*    $P2=PQC1878  HBB6603 960718 PD00CJ:  Fixed update return/reason  * 00205800
*                                         code descriptions etc.      * 00205900
*    $P3=PQC1795  HBB6603 960723 PD00CJ:  Fixed update the            * 00206000
*                                         description for rsn code    * 00206100
*                                         IXCMSGCRSNMessageUnavailabl * 00206200
*                                         e                           * 00206300
*    $D1=DCR0028  HBB6603 960815 PD00CJ:  Remove USAGE support        * 00206400
*    $P4=PQC1242  HBB6603 960830 PD00CJ:  Added                       * 00206500
*                                         IXCMSGCRSNBadExitForCallExi * 00206600
*                                         t                           * 00206700
*    $P5=PQC2270  HBB6603 960906 PD00CJ:  Added                       * 00206800
*                                         IXCMSGCRSNTaskModeCallExitW * 00206900
*                                         ithFRR                      * 00207000
*    $P6=PQC2443  HBB6603 960915 PD00CJ:  Fixed ASM errors in ASM     * 00207100
*                                         version                     * 00207200
*    $L6=LSD      HBB6608 981116 PD00BJ:  Large Signal Delivery       * 00207300
*                                         (comments only)             * 00207400
*    $01=OA09194  HBB7707 050615 PD00BJ:  Add LINKAGE keyword         * 00207500
*    $P7=ME00990  HBB7730 050803 PV00QX:  Correct minimum             * 00207600
*                                         authorization in macro      * 00207700
*                                         prolog.                     * 00207800
*    $02=OA18138  HBB7730 060911 PD00BJ:  Fix ASM expansion for       * 00207900
*                                         CALLEXIT.                   * 00208000
*    $L7=XCFSRVR  HBB7780 100228 PD0JES:  Add MQAALEVEL, HOLDTIME and * 00208100
*                                         MSGTAG keywords             * 00208200
*    $L8=XCFSRVR  HBB7780 100630 PD00C9:  XCF Client/Server support   * 00208300
*                                         for COMPLETION, DISCARDMSG  * 00208400
*                                         and RELEASEMSG              * 00208500
*    $L8=ME20585  HBB7780 110128 PD00BJ:  Improve token checking      * 00208600
****** END OF SPECIFICATIONS *****************************************/ 00208700
*/********************************************************************* 00208800
         MACRO                                                          00208900
&XLABEL  IXCMSGC &REQUEST=,&MEMTOKEN=,&TOKEN=,&USERDATA=,&RETMSGTOKEN=,*00209000
               &HOLDTIME=,&TIME=,&MSGTAG=,&SENDTOKEN=,&DATATYPE=,      *00209100
               &STATUS=,&SOURCE=,&MQAALEVEL=,&MSGTAGFILTER=,           *00209200
               &MSGTAGMASK=,&ANSAREA=,&ANSLEN=,&TYPE=,&NOTIFYEXIT=,    *00209300
               &MSGEXIT=,&EXITPARMS=,&RETCODE=,&RSNCODE=,&PLISTVER=,   *00209400
               &MF=                                                     00209500
.*                                                                      00209600
*                  MACDATE -01/13/18-<2>                                00209700
.*                                                                      00209800
.*******************************************************************    00209900
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00210000
.*******************************************************************    00210100
                  GBLC  &ZPRINT     YES=PRINT NO=NO PRINT               00210200
                  GBLC  &ZTEST      YES=TEST NO=NO TEST                 00210300
                  GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX         00210400
.*                                                                      00210500
                  GBLC  &ZIXCMSGC   YES=MACRO USED AT LEAST ONCE        00210600
.*******************************************************************    00210700
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00210800
.*******************************************************************    00210900
                  LCLC  &ZMS        ERROR MESSAGE WORK AREA             00211000
                  LCLC  &ZCNDX      SYSNDX CHARACTERS                   00211100
                  LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED          00211200
                  LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR         00211300
                  LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE         00211400
                  LCLA  &ZAWRK      USED AS A WORK AREA                 00211500
                  LCLA  &ZASIZ      USED FOR SIZE OF VALUE              00211600
                  LCLA  &ZN         NUMERIC WORK VARIABLE               00211700
                  LCLC  &ZC         CHARACTER WORK VARIABLE             00211800
                  LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE         00211900
                  LCLA  &ZTLA       VALUE TOO LONG VARIABLE             00212000
                  LCLC  &ZMAC_G     "G" or null                         00212100
&ZMAC_G           SETC  ''                                              00212200
                  LCLC  &ZMAC_LR                                        00212300
&ZMAC_LR          SETC  'LR'                                            00212400
                  LCLC  &ZMAC_L                                         00212500
&ZMAC_L           SETC  'L'                                             00212600
                  LCLC  &ZMAC_ST                                        00212700
&ZMAC_ST          SETC  'ST'                                            00212800
                  LCLC  &ZMAC_LLGT                                      00212900
&ZMAC_LLGT        SETC  'L'                                             00213000
                  LCLC  &ZMAC_LGR                                       00213100
&ZMAC_LGR         SETC  'LR'                                            00213200
                  LCLC  &ZMAC_LG                                        00213300
&ZMAC_LG          SETC  'L'                                             00213400
                  LCLC  &ZMAC_STG                                       00213500
&ZMAC_STG         SETC  'ST'                                            00213600
                  LCLA  &ZMACRET    MACRO RETURN CODE                   00213700
&ZMACRET          SETA  0           ASSUME NO ERRORS                    00213800
.*                                                                      00213900
                  LCLC  &ZCSYSLIST(255)         NONXKEY, POS ARRAY      00214000
                  LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()          00214100
                  LCLA  &ZPLLEN     PARAMETER LIST LENGTH               00214200
                  LCLC  &ZENDBASEPL             End of base PL          00214300
                  LCLA  &ZPLWORKA   PARAMETER LIST LENGTH               00214400
.*******************************************************************    00214500
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00214600
.*******************************************************************    00214700
                  LCLA  &ZI         INDEX FOR ARRAY                     00214800
                  LCLA  &ZJ         INDEX FOR PARMS                     00214900
                  LCLA  &ZK         INDEX FOR PARSE                     00215000
                  LCLA  &ZLO        LOW RANGE VALUE                     00215100
                  LCLA  &ZHI        HIGH RANGE VALUE                    00215200
                  LCLC  &ZW         WORK AREA FOR PARM                  00215300
.********************************************************************   00215400
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00215500
.********************************************************************   00215600
                  GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL             00215700
                  GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE      00215800
                  GBLA  &SYSALVL    SYSSTATE ARCHLVL                    00215900
                  GBLC  &SYSAM64    SYSSTATE AMODE64                    00216000
.*                                                                      00216100
                  AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED      00216200
                  AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED       00216300
                  SPLEVEL  TEST                                         00216400
.ZSYS2            ANOP  ,                                               00216500
                  AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1           00216600
                  AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1           00216700
                  SYSSTATE TEST                                         00216800
                  AGO   .ZSYS4                                          00216900
.ZSYS3            ANOP  ,                                               00217000
&SYSASCE          SETC  'P'         ASSUME SYSSTATE PRIMARY             00217100
.ZSYS4            ANOP  ,                                               00217200
                  AIF   ('&SYSAM64' NE 'YES').ZSYSN64                   00217300
&ZMAC_LLGT        SETC 'LLGT'                                           00217400
&ZMAC_LGR         SETC 'LGR'                                            00217500
&ZMAC_LG          SETC 'LG'                                             00217600
&ZMAC_STG         SETC 'STG'                                            00217700
.ZSYSN64          ANOP  ,                                               00217800
.*******************************************************************    00217900
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00218000
.*******************************************************************    00218100
                  LCLC  &XREQUEST   ++ VALUE                            00218200
                  LCLC  &XMEMTOKEN  ++ NAME                             00218300
                  LCLC  &XTOKEN     ++ NAME                             00218400
                  LCLC  &XUSERDATA  ++ NAME                             00218500
                  LCLC  &XRETMSGTOKEN           ++ NAME                 00218600
                  LCLC  &XHOLDTIME  ++ VALUE                            00218700
                  LCLC  &XTIME      ++ NAME                             00218800
                  LCLC  &XMSGTAG    ++ NAME                             00218900
                  LCLC  &XMSGTOKENTYPE          ++ NAME                 00219000
                  LCLC  &XSENDTOKEN             ++ NAME                 00219100
                  LCLC  &XDATATYPE  ++ VALUE                            00219200
                  LCLC  &XSTATUS    ++ VALUE                            00219300
                  LCLC  &XSOURCE    ++ NAME                             00219400
                  LCLC  &XMQAALEVEL             ++ NAME                 00219500
                  LCLC  &XMSGTAGFILTER          ++ NAME                 00219600
                  LCLC  &XMSGTAGMASK            ++ NAME                 00219700
                  LCLC  &XANSAREA   ++ NAME                             00219800
                  LCLC  &XANSLEN    ++ NAME                             00219900
                  LCLC  &XTYPE      ++ VALUE                            00220000
                  LCLC  &XCALL      ++ NAME                             00220100
                  LCLC  &XNOTIFYEXIT            ++ NAME                 00220200
                  LCLC  &XMSGEXIT   ++ NAME                             00220300
                  LCLC  &XEXITPARMS             ++ NAME                 00220400
                  LCLC  &XRETCODE   ++ NAME                             00220500
                  LCLC  &XRSNCODE   ++ NAME                             00220600
                  LCLA  &XPLISTVER  ++ VALUE                            00220700
                  LCLC  &XMF        ++ VALUE                            00220800
                  LCLC  &XMFCTRL    ++ NAME                             00220900
                  LCLC  &XMFATTR    ++ VALUE                            00221000
                  LCLC  &XMFSCK     ++ VALUE                            00221100
.*******************************************************************    00221200
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00221300
.*******************************************************************    00221400
                  LCLC  &ZXREQUEST  ++ INPUT VALUE                      00221500
                  LCLC  &ZXMEMTOKEN             ++ INPUT NAME           00221600
                  LCLC  &ZXTOKEN    ++ INPUT NAME                       00221700
                  LCLC  &ZXUSERDATA             ++ INPUT NAME           00221800
                  LCLC  &ZXRETMSGTOKEN          ++ OUTPUT NAME          00221900
                  LCLC  &ZXHOLDTIME             ++ INPUT VALUE          00222000
                  LCLC  &ZXTIME     ++ INPUT NAME                       00222100
                  LCLC  &ZXMSGTAG   ++ INPUT NAME                       00222200
                  LCLC  &ZXMSGTOKENTYPE         ++ INPUT NAME           00222300
                  LCLC  &ZXSENDTOKEN            ++ INPUT NAME           00222400
                  LCLC  &ZXDATATYPE             ++ INPUT VALUE          00222500
                  LCLC  &ZXSTATUS   ++ INPUT VALUE                      00222600
                  LCLC  &ZXSOURCE   ++ INPUT NAME                       00222700
                  LCLC  &ZXMQAALEVEL            ++ INPUT NAME           00222800
                  LCLC  &ZXMSGTAGFILTER         ++ INPUT NAME           00222900
                  LCLC  &ZXMSGTAGMASK           ++ INPUT NAME           00223000
                  LCLC  &ZXANSAREA  ++ OUTPUT NAME                      00223100
                  LCLC  &ZXANSLEN   ++ INPUT NAME                       00223200
                  LCLC  &ZXTYPE     ++ INPUT VALUE                      00223300
                  LCLC  &ZXCALL     ++ INPUT NAME                       00223400
                  LCLC  &ZXNOTIFYEXIT           ++ INPUT NAME           00223500
                  LCLC  &ZXMSGEXIT  ++ INPUT NAME                       00223600
                  LCLC  &ZXEXITPARMS            ++ INPUT NAME           00223700
                  LCLC  &ZXRETCODE  ++ OUTPUT NAME                      00223800
                  LCLC  &ZXRSNCODE  ++ OUTPUT NAME                      00223900
                  LCLC  &ZXPLISTVER             ++ INPUT VALUE          00224000
                  LCLC  &ZXMF       ++ INPUT VALUE                      00224100
                  LCLC  &ZXMFCTRL   ++ INPUT NAME                       00224200
                  LCLC  &ZXMFATTR   ++ INPUT VALUE                      00224300
                  LCLC  &ZXMFSCK    ++ INPUT VALUE                      00224400
.********************************************************************   00224500
.***AC.PLV01  PROCESS PLISTVER                                      *   00224600
.********************************************************************   00224700
&XPLISTVER      SETA  0                                                 00224800
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00224900
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00225000
&XPLISTVER      SETA  2                                                 00225100
.ZPLV0          ANOP  ,                                                 00225200
.*                                                                      00225300
                AIF   ('&TOKEN' EQ '').ZPLV1E                           00225400
                AIF   (&XPLISTVER GE 2).ZPLV1E                          00225500
&XPLISTVER      SETA  2                                                 00225600
.ZPLV1E         ANOP  ,                                                 00225700
.*                                                                      00225800
                AIF   ('&HOLDTIME' EQ '').ZPLV2E                        00225900
                AIF   (&XPLISTVER GE 2).ZPLV2E                          00226000
&XPLISTVER      SETA  2                                                 00226100
.ZPLV2E         ANOP  ,                                                 00226200
.*                                                                      00226300
                AIF   ('&TIME' EQ '').ZPLV3E                            00226400
                AIF   (&XPLISTVER GE 2).ZPLV3E                          00226500
&XPLISTVER      SETA  2                                                 00226600
.ZPLV3E         ANOP  ,                                                 00226700
.*                                                                      00226800
                AIF   ('&MSGTAG' EQ '').ZPLV4E                          00226900
                AIF   (&XPLISTVER GE 2).ZPLV4E                          00227000
&XPLISTVER      SETA  2                                                 00227100
.ZPLV4E         ANOP  ,                                                 00227200
.*                                                                      00227300
                AIF   ('&TOKEN' EQ '').ZPLV5E                           00227400
                AIF   (&XPLISTVER GE 2).ZPLV5E                          00227500
&XPLISTVER      SETA  2                                                 00227600
.ZPLV5E         ANOP  ,                                                 00227700
.*                                                                      00227800
                AIF   ('&SENDTOKEN' EQ '').ZPLV6E                       00227900
                AIF   (&XPLISTVER GE 2).ZPLV6E                          00228000
&XPLISTVER      SETA  2                                                 00228100
.ZPLV6E         ANOP  ,                                                 00228200
.*                                                                      00228300
                AIF   ('&TOKEN' EQ '').ZPLV7E                           00228400
                AIF   (&XPLISTVER GE 2).ZPLV7E                          00228500
&XPLISTVER      SETA  2                                                 00228600
.ZPLV7E         ANOP  ,                                                 00228700
.*                                                                      00228800
                AIF   ('&MQAALEVEL' EQ '').ZPLV8E                       00228900
                AIF   (&XPLISTVER GE 2).ZPLV8E                          00229000
&XPLISTVER      SETA  2                                                 00229100
.ZPLV8E         ANOP  ,                                                 00229200
.*                                                                      00229300
                AIF   ('&MSGTAGFILTER' EQ '').ZPLV9E                    00229400
                AIF   (&XPLISTVER GE 2).ZPLV9E                          00229500
&XPLISTVER      SETA  2                                                 00229600
.ZPLV9E         ANOP  ,                                                 00229700
.*                                                                      00229800
                AIF   ('&MSGTAGMASK' EQ '').ZPLV10E                     00229900
                AIF   (&XPLISTVER GE 2).ZPLV10E                         00230000
&XPLISTVER      SETA  2                                                 00230100
.ZPLV10E        ANOP  ,                                                 00230200
.*                                                                      00230300
                AIF   ('&TOKEN' EQ '').ZPLV11E                          00230400
                AIF   (&XPLISTVER GE 2).ZPLV11E                         00230500
&XPLISTVER      SETA  2                                                 00230600
.ZPLV11E        ANOP  ,                                                 00230700
.*                                                                      00230800
                AIF   ('&SENDTOKEN' EQ '').ZPLV12E                      00230900
                AIF   (&XPLISTVER GE 2).ZPLV12E                         00231000
&XPLISTVER      SETA  2                                                 00231100
.ZPLV12E        ANOP  ,                                                 00231200
.*                                                                      00231300
                AIF   ('&TOKEN' EQ '').ZPLV13E                          00231400
                AIF   (&XPLISTVER GE 2).ZPLV13E                         00231500
&XPLISTVER      SETA  2                                                 00231600
.ZPLV13E        ANOP  ,                                                 00231700
.*                                                                      00231800
                AIF   ('&TOKEN' EQ '').ZPLV14E                          00231900
                AIF   (&XPLISTVER GE 2).ZPLV14E                         00232000
&XPLISTVER      SETA  2                                                 00232100
.ZPLV14E        ANOP  ,                                                 00232200
.*                                                                      00232300
                AIF   ('&SENDTOKEN' EQ '').ZPLV15E                      00232400
                AIF   (&XPLISTVER GE 2).ZPLV15E                         00232500
&XPLISTVER      SETA  2                                                 00232600
.ZPLV15E        ANOP  ,                                                 00232700
.*                                                                      00232800
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00232900
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00233000
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00233100
.*-------------------------------------------------------------------   00233200
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00233300
&ZMS            SETC  '"PLISTVER='                                      00233400
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00233500
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00233600
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00233700
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00233800
                AGO   .ZPVCK2                                           00233900
.ZPVCK3         ANOP  ,                                                 00234000
.*-------------------------------------------------------------------   00234100
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00234200
&ZMS            SETC  '"PLISTVER='                                      00234300
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00234400
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00234500
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00234600
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00234700
                AGO   .ZPVCKE                                           00234800
.ZPVCK2         ANOP  ,                                                 00234900
.*-------------------------------------------------------------------   00235000
&ZCVAL          SETC  '&PLISTVER(1)'                                    00235100
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00235200
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00235300
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00235400
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00235500
                AIF   (&ZN LE 2).ZPVCK4A   NOT HIGH                     00235600
.ZPVCK6         ANOP  ,                                                 00235700
&ZMS            SETC  '"PLISTVER='                                      00235800
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00235900
&ZMS            SETC  '&ZMS THE RANGE IS "0-2"'                         00236000
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00236100
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00236200
&XPLISTVER      SETA  2                                                 00236300
                AGO   .ZPVCKE                                           00236400
.*-------------------------------------------------------------------   00236500
.ZPVCK4A        ANOP  ,                                                 00236600
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00236700
&ZMS            SETC  'PLISTVER='                                       00236800
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00236900
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00237000
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00237100
                MNOTE 8,' &ZMS IS REQUIRED.'                            00237200
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00237300
                AGO   .ZPVCK5                                           00237400
.ZPVCK4         ANOP  ,                                                 00237500
&XPLISTVER      SETA  &PLISTVER(1)                                      00237600
.ZPVCK5         ANOP  ,                                                 00237700
.ZPVCKE         ANOP  ,                                                 00237800
.********************************************************************   00237900
.***AG.MF01 PROCESS MF MACRO FORMS                                      00238000
.********************************************************************   00238100
                  ACTR  10000                                           00238200
.*------------------------------------------------------------------    00238300
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00238400
&XMF              SETC  ''          INITIALIZE XVARIABLE                00238500
.*-------------------------------------------------------------------   00238600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00238700
.ZG122            ANOP  ,                                               00238800
&ZTLC             SETC 'S'                                              00238900
                  AIF   ('&MF(1)' NE '&ZTLC').ZG123                     00239000
&XMF              SETC  'S'         SET KEYWORD                         00239100
                  AIF   (N'&MF LE 1).ZG122A     CK NUM                  00239200
&ZMS              SETC  '"MF='                                          00239300
&ZMS              SETC  '&ZMS.&MF"'                                     00239400
&ZMS              SETC  '&ZMS "MF"'                                     00239500
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00239600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00239700
.ZG122A           ANOP  ,                                               00239800
.*-------------------------------------------------------------------   00239900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00240000
.ZG123            ANOP  ,                                               00240100
&ZTLC             SETC 'L'                                              00240200
                  AIF   ('&MF(1)' NE '&ZTLC').ZG130                     00240300
&XMF              SETC  'L'         SET KEYWORD                         00240400
                  AIF   (N'&MF LE 3).ZG123A     CK NUM                  00240500
&ZMS              SETC  '"MF='                                          00240600
&ZMS              SETC  '&ZMS.&MF"'                                     00240700
&ZMS              SETC  '&ZMS "MF"'                                     00240800
                  MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'            00240900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00241000
.ZG123A           ANOP  ,                                               00241100
.*-------------------------------------------------------------------   00241200
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00241300
                  AIF   (N'&SYSLIST NE 0).ZG123B  POSITIONALS?          00241400
                  AIF   ('&REQUEST' NE '').ZG123B  KEYS?                00241500
                  AIF   ('&MEMTOKEN' NE '').ZG123B  KEYS?               00241600
                  AIF   ('&TOKEN' NE '').ZG123B  KEYS?                  00241700
                  AIF   ('&USERDATA' NE '').ZG123B  KEYS?               00241800
                  AIF   ('&RETMSGTOKEN' NE '').ZG123B  KEYS?            00241900
                  AIF   ('&HOLDTIME' NE '').ZG123B  KEYS?               00242000
                  AIF   ('&TIME' NE '').ZG123B  KEYS?                   00242100
                  AIF   ('&MSGTAG' NE '').ZG123B  KEYS?                 00242200
                  AIF   ('&SENDTOKEN' NE '').ZG123B  KEYS?              00242300
                  AIF   ('&DATATYPE' NE '').ZG123B  KEYS?               00242400
                  AIF   ('&STATUS' NE '').ZG123B  KEYS?                 00242500
                  AIF   ('&SOURCE' NE '').ZG123B  KEYS?                 00242600
                  AIF   ('&MQAALEVEL' NE '').ZG123B  KEYS?              00242700
                  AIF   ('&MSGTAGFILTER' NE '').ZG123B  KEYS?           00242800
                  AIF   ('&MSGTAGMASK' NE '').ZG123B  KEYS?             00242900
                  AIF   ('&ANSAREA' NE '').ZG123B  KEYS?                00243000
                  AIF   ('&ANSLEN' NE '').ZG123B  KEYS?                 00243100
                  AIF   ('&TYPE' NE '').ZG123B  KEYS?                   00243200
                  AIF   ('&NOTIFYEXIT' NE '').ZG123B  KEYS?             00243300
                  AIF   ('&MSGEXIT' NE '').ZG123B  KEYS?                00243400
                  AIF   ('&EXITPARMS' NE '').ZG123B  KEYS?              00243500
                  AIF   ('&RETCODE' NE '').ZG123B  KEYS?                00243600
                  AIF   ('&RSNCODE' NE '').ZG123B  KEYS?                00243700
                  AGO    .ZG123C    INVOCATION OKAY                     00243800
.ZG123B           ANOP  ,                                               00243900
&ZMS              SETC  'THE "L" FORM OF "MF"'                          00244000
&ZMS              SETC  '&ZMS CAN ONLY HAVE'                            00244100
&ZMS              SETC  '&ZMS THE "PLISTVER" KEY'                       00244200
                  MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'          00244300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00244400
.ZG123C           ANOP  ,                                               00244500
.*-------------------------------------------------------------------   00244600
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00244700
&ZXMFCTRL         SETC  'INPUT'     SET IN/OUTPUT                       00244800
&XMFCTRL          SETC  '&MF(2,1)'  SET XVARIABLE                       00244900
                  AIF   (N'&MF(2) GT 1).ZG125B  MULTI                   00245000
&XMFCTRL          SETC  '&MF(2)'    SET XVARIABLE                       00245100
.ZG125B           AIF   (K'&MF(2) GT 0).ZG125C                          00245200
&ZXMFCTRL         SETC  ''          RESET IN/OUTPUT                     00245300
&ZMS              SETC  'WHEN "L" IS SPECIFIED'                         00245400
&ZMS              SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'             00245500
                  MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                    00245600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00245700
.ZG125C           ANOP  ,                                               00245800
.*-------------------------------------------------------------------   00245900
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00246000
                  AIF   (K'&ZXMFCTRL LE 0).ZG125P  NOT I/O              00246100
                  AIF   ('&XMFCTRL'(1,1) NE '(').ZG125P                 00246200
&ZXMFCTRL         SETC  ''          RESET IN/OUTPUT                     00246300
&ZMS              SETC  '"MF='                                          00246400
&ZMS              SETC  '&ZMS.&MF"'                                     00246500
&ZMS              SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'       00246600
                  MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'               00246700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00246800
.ZG125P           ANOP  ,                                               00246900
.*-------------------------------------------------------------------   00247000
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00247100
&ZXMFATTR         SETC  'INPUT'     SET IN/OUTPUT                       00247200
&XMFATTR          SETC  '0D'                                            00247300
                  AIF   (K'&MF(3) LE 0).ZG128B  PARM                    00247400
&XMFATTR          SETC  '&MF(3,1)'  SET XVARIABLE                       00247500
                  AIF   (N'&MF(3) GT 1).ZG128B  MULTI                   00247600
&XMFATTR          SETC  '&MF(3)'    SET XVARIABLE                       00247700
.ZG128B           ANOP  ,                                               00247800
.*-------------------------------------------------------------------   00247900
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00248000
                  AIF   (K'&ZXMFATTR LE 0).ZG128P  NOT I/O              00248100
                  AIF   ('&XMFATTR'(1,1) NE '(').ZG128P                 00248200
&ZXMFATTR         SETC  ''          RESET IN/OUTPUT                     00248300
&ZMS              SETC  '"MF='                                          00248400
&ZMS              SETC  '&ZMS.&MF"'                                     00248500
&ZMS              SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'       00248600
                  MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'               00248700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00248800
.ZG128P           ANOP  ,                                               00248900
.*-------------------------------------------------------------------   00249000
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00249100
                  AIF   (K'&ZXMFATTR LE 0).ZG128S  NOT I/O              00249200
                  AIF   (K'&XMFATTR LE 60).ZG128S  LNG OK               00249300
&ZXMFATTR         SETC  ''          RESET IN/OUTPUT                     00249400
&ZMS              SETC  '"MF='                                          00249500
&ZMS              SETC  '&ZMS.&MF"'                                     00249600
&ZMS              SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'           00249700
                  MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'              00249800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00249900
.ZG128S           ANOP  ,                                               00250000
.*-------------------------------------------------------------------   00250100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00250200
.ZG130            ANOP  ,                                               00250300
&ZTLC             SETC 'E'                                              00250400
                  AIF   ('&MF(1)' NE '&ZTLC').ZG138                     00250500
&XMF              SETC  'E'         SET KEYWORD                         00250600
                  AIF   (N'&MF LE 3).ZG130A     CK NUM                  00250700
&ZMS              SETC  '"MF='                                          00250800
&ZMS              SETC  '&ZMS.&MF"'                                     00250900
&ZMS              SETC  '&ZMS "MF"'                                     00251000
                  MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'            00251100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00251200
.ZG130A           ANOP  ,                                               00251300
.*-------------------------------------------------------------------   00251400
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00251500
&ZXMFCTRL         SETC  'INPUT'     SET IN/OUTPUT                       00251600
&XMFCTRL          SETC  '&MF(2,1)'  SET XVARIABLE                       00251700
                  AIF   (N'&MF(2) GT 1).ZG132B  MULTI                   00251800
&XMFCTRL          SETC  '&MF(2)'    SET XVARIABLE                       00251900
.ZG132B           AIF   (K'&MF(2) GT 0).ZG132C                          00252000
&ZXMFCTRL         SETC  ''          RESET IN/OUTPUT                     00252100
&ZMS              SETC  'WHEN "E" IS SPECIFIED'                         00252200
&ZMS              SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'             00252300
                  MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                    00252400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00252500
.ZG132C           ANOP  ,                                               00252600
.*-------------------------------------------------------------------   00252700
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00252800
                  AIF   (K'&ZXMFCTRL LE 0).ZG132R  NOT I/O              00252900
                  AIF   ('&XMFCTRL'(1,1) NE '(').ZG132R                 00253000
&ZCGPR            SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                      00253100
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG132P                   00253200
                  AIF   (K'&ZCGPR GT 2).ZG132Q                          00253300
                  AIF   ('&ZCGPR' EQ '0').ZG132Q                        00253400
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00253500
                  AIF   (T'&ZCGPR NE 'N').ZG132Q  INVALID REG NAME      00253600
.ZG132P           ANOP  ,                                               00253700
                  AIF   (T'&ZCGPR NE 'N').ZG132R  NON NUMERIC           00253800
                  AIF   ('&ZCGPR' LT '1').ZG132Q                        00253900
                  AIF   ('&ZCGPR' LE '12').ZG132R                       00254000
.ZG132Q           ANOP  ,                                               00254100
&ZMS              SETC  '"MF='                                          00254200
&ZMS              SETC  '&ZMS.&MF"'                                     00254300
&ZMS              SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'       00254400
                  MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                00254500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00254600
.ZG132R           ANOP  ,                                               00254700
.*-------------------------------------------------------------------   00254800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00254900
&XMFSCK           SETC  ''          INITIALIZE XVARIABLE                00255000
.ZG136A   AIF   ('&MF(3)' NE 'COMPLETE').ZG137A                         00255100
&XMFSCK           SETC  'COMPLETE'  SET KEYWORD                         00255200
.*-------------------------------------------------------------------   00255300
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00255400
.ZG137A           AIF   (K'&XMFSCK GT 0).ZG137C  KEYWORD                00255500
                  AIF   (K'&MF(3) LE 0).ZG137B                          00255600
&ZMS              SETC  '"MF='                                          00255700
&ZMS              SETC  '&ZMS.&MF"'                                     00255800
&ZMS              SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '       00255900
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00256000
&ZMS              SETC  '&ZMS "COMPLETE".'                              00256100
                  MNOTE 8,' &ZMS '                                      00256200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00256300
.ZG137B           ANOP  ,                                               00256400
&XMFSCK           SETC  'COMPLETE'  SET DEFAULT KEYWORD                 00256500
.ZG137C           ANOP  ,                                               00256600
&ZXMFSCK          SETC  'INPUT'     SET IN/OUTPUT                       00256700
.*------------------------------------------------------------------    00256800
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00256900
.ZG138            ANOP  ,                                               00257000
&ZXMF             SETC  'INPUT'     SET IN/OUTPUT                       00257100
                  AIF   (K'&XMF GT 0).ZG138E    VALID ARG               00257200
                  AIF   (T'&MF EQ 'O').ZG138D   OMITTED                 00257300
&ZASYSLNDX        SETA  0                                               00257400
.ZG138A           ANOP  ,           POSITIONAL MACRO KEY                00257500
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00257600
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG138C               00257700
&ZTLC             SETC 'MF'                                             00257800
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG138A      00257900
.ZG138B           ANOP  ,                                               00258000
&ZXMF             SETC  ''          RESET IN/OUTPUT                     00258100
&ZMS              SETC  'THE "MF" KEY'                                  00258200
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00258300
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00258400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00258500
                  AGO   .ZG138E                                         00258600
.ZG138C           ANOP  ,                                               00258700
&ZXMF             SETC  ''          RESET IN/OUTPUT                     00258800
&ZMS              SETC  '"MF='                                          00258900
&ZMS              SETC  '&ZMS.&MF"'                                     00259000
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00259100
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00259200
&ZMS              SETC  '&ZMS "S",'                                     00259300
&ZMS              SETC  '&ZMS "L",'                                     00259400
&ZMS              SETC  '&ZMS OR "E".'                                  00259500
                  MNOTE 8,' &ZMS '                                      00259600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00259700
                  AGO   .ZG138E                                         00259800
.ZG138D           ANOP  ,                                               00259900
&XMF              SETC  'S'         SET DEFAULT KEYWORD                 00260000
&XMFSCK           SETC  'COMPLETE'  COMPLETE CHECKING                   00260100
.ZG138E           ANOP  ,                                               00260200
.********************************************************************   00260300
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00260400
.********************************************************************   00260500
                  ACTR  10000                                           00260600
.*-------------------------------------------------------------------   00260700
.***AG.MF03 MF=(SLE)                                                    00260800
                  AIF   ('&XMF' EQ 'L').ZGMFX                           00260900
.*------------------------------------------------------------------    00261000
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00261100
&XREQUEST         SETC  ''          INITIALIZE XVARIABLE                00261200
.*-------------------------------------------------------------------   00261300
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00261400
.ZG3              ANOP  ,                                               00261500
                  AIF   (K'&REQUEST(1) LE 0).ZG3A                       00261600
&ZTLC             SETC 'SAVEMSG'                                        00261700
                  AIF   ('&REQUEST(1)' NE '&ZTLC').ZG28                 00261800
&XREQUEST         SETC  'SAVEMSG'   SET KEYWORD                         00261900
                  AIF   (N'&REQUEST LE 1).ZG3A  CK NUM                  00262000
&ZMS              SETC  '"REQUEST='                                     00262100
&ZMS              SETC  '&ZMS.&REQUEST"'                                00262200
&ZMS              SETC  '&ZMS "REQUEST"'                                00262300
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00262400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00262500
.ZG3A             ANOP  ,                                               00262600
.*------------------------------------------------------------------    00262700
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00262800
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00262900
.ZG3A0            AIF   (K'&SENDTOKEN LE 0).ZG3A1  OK                   00263000
&ZCVAL            SETC '&ZCVAL SENDTOKEN'       INCORRECT KEY USED      00263100
.ZG3A1            AIF   (K'&DATATYPE LE 0).ZG3A2  OK                    00263200
&ZCVAL            SETC '&ZCVAL DATATYPE'        INCORRECT KEY USED      00263300
.ZG3A2            AIF   (K'&STATUS LE 0).ZG3A3  OK                      00263400
&ZCVAL            SETC '&ZCVAL STATUS'          INCORRECT KEY USED      00263500
.ZG3A3            AIF   (K'&SOURCE LE 0).ZG3A4  OK                      00263600
&ZCVAL            SETC '&ZCVAL SOURCE'          INCORRECT KEY USED      00263700
.ZG3A4            AIF   (K'&MQAALEVEL LE 0).ZG3A5  OK                   00263800
&ZCVAL            SETC '&ZCVAL MQAALEVEL'       INCORRECT KEY USED      00263900
.ZG3A5            AIF   (K'&MSGTAGFILTER LE 0).ZG3A6  OK                00264000
&ZCVAL            SETC '&ZCVAL MSGTAGFILTER'    INCORRECT KEY USED      00264100
.ZG3A6            AIF   (K'&MSGTAGMASK LE 0).ZG3A7  OK                  00264200
&ZCVAL            SETC '&ZCVAL MSGTAGMASK'      INCORRECT KEY USED      00264300
.ZG3A7            AIF   (K'&ANSAREA LE 0).ZG3A8  OK                     00264400
&ZCVAL            SETC '&ZCVAL ANSAREA'         INCORRECT KEY USED      00264500
.ZG3A8            AIF   (K'&ANSLEN LE 0).ZG3A9  OK                      00264600
&ZCVAL            SETC '&ZCVAL ANSLEN'          INCORRECT KEY USED      00264700
.ZG3A9            AIF   (K'&TYPE LE 0).ZG3A10   OK                      00264800
&ZCVAL            SETC '&ZCVAL TYPE'            INCORRECT KEY USED      00264900
.ZG3A10           AIF   (K'&NOTIFYEXIT LE 0).ZG3A11  OK                 00265000
&ZCVAL            SETC '&ZCVAL NOTIFYEXIT'      INCORRECT KEY USED      00265100
.ZG3A11           AIF   (K'&MSGEXIT LE 0).ZG3A12  OK                    00265200
&ZCVAL            SETC '&ZCVAL MSGEXIT'         INCORRECT KEY USED      00265300
.ZG3A12           AIF   (K'&EXITPARMS LE 0).ZG3A13  OK                  00265400
&ZCVAL            SETC '&ZCVAL EXITPARMS'       INCORRECT KEY USED      00265500
.ZG3A13           AIF   (K'&ZCVAL LE 0).ZG3A14  OK                      00265600
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00265700
&ZMS              SETC  '"REQUEST'                                      00265800
&ZMS              SETC  '&ZMS.=&REQUEST"'                               00265900
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00266000
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00266100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00266200
.ZG3A14           ANOP  ,                                               00266300
.*----------------------------------------------------------------***   00266400
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00266500
                  AIF   (N'&MEMTOKEN LE 1).ZG5A  CK NUM                 00266600
&ZMS              SETC  '"MEMTOKEN='                                    00266700
&ZMS              SETC  '&ZMS.&MEMTOKEN"'                               00266800
&ZMS              SETC  '&ZMS "MEMTOKEN"'                               00266900
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00267000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00267100
.ZG5A             ANOP  ,                                               00267200
.*-------------------------------------------------------------------   00267300
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00267400
&ZXMEMTOKEN       SETC  'INPUT'     SET IN/OUTPUT                       00267500
&XMEMTOKEN        SETC  '&MEMTOKEN(1)'          SET XVARIABLE           00267600
                  AIF   (N'&MEMTOKEN GT 1).ZG5B  MULTI                  00267700
&XMEMTOKEN        SETC  '&MEMTOKEN'             SET XVARIABLE           00267800
.ZG5B             AIF   (K'&MEMTOKEN(1) GT 0).ZG5C                      00267900
&ZXMEMTOKEN       SETC  ''          RESET IN/OUTPUT                     00268000
&ZMS              SETC  ' '                                             00268100
&ZMS              SETC  '&ZMS "MEMTOKEN" KEY AND ITS'                   00268200
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00268300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00268400
.ZG5C             ANOP  ,                                               00268500
.*-------------------------------------------------------------------   00268600
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00268700
                  AIF   (K'&ZXMEMTOKEN LE 0).ZG5R  NOT I/O              00268800
                  AIF   ('&XMEMTOKEN'(1,1) NE '(').ZG5R                 00268900
&ZCGPR            SETC  '&XMEMTOKEN'(2,K'&XMEMTOKEN-2)                  00269000
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                     00269100
                  AIF   (K'&ZCGPR GT 2).ZG5Q                            00269200
                  AIF   ('&ZCGPR' EQ '0').ZG5Q                          00269300
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00269400
                  AIF   (T'&ZCGPR NE 'N').ZG5Q  INVALID REG NAME        00269500
.ZG5P             ANOP  ,                                               00269600
                  AIF   (T'&ZCGPR NE 'N').ZG5R  NON NUMERIC             00269700
                  AIF   ('&ZCGPR' LT '2').ZG5Q                          00269800
                  AIF   ('&ZCGPR' LE '12').ZG5R                         00269900
.ZG5Q             ANOP  ,                                               00270000
&ZMS              SETC  '"MEMTOKEN='                                    00270100
&ZMS              SETC  '&ZMS.&MEMTOKEN"'                               00270200
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00270300
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00270400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00270500
.ZG5R             ANOP  ,                                               00270600
.*----------------------------------------------------------------***   00270700
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00270800
                  AIF   (N'&TOKEN LE 1).ZG8A    CK NUM                  00270900
&ZMS              SETC  '"TOKEN='                                       00271000
&ZMS              SETC  '&ZMS.&TOKEN"'                                  00271100
&ZMS              SETC  '&ZMS "TOKEN"'                                  00271200
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00271300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00271400
.ZG8A             ANOP  ,                                               00271500
.*-------------------------------------------------------------------   00271600
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00271700
&ZXTOKEN          SETC  'INPUT'     SET IN/OUTPUT                       00271800
&XTOKEN           SETC  '&TOKEN(1)'             SET XVARIABLE           00271900
                  AIF   (N'&TOKEN GT 1).ZG8B    MULTI                   00272000
&XTOKEN           SETC  '&TOKEN'    SET XVARIABLE                       00272100
.ZG8B             AIF   (K'&TOKEN(1) GT 0).ZG8C                         00272200
&ZXTOKEN          SETC  ''          RESET IN/OUTPUT                     00272300
&ZMS              SETC  ' '                                             00272400
&ZMS              SETC  '&ZMS "TOKEN" KEY AND ITS'                      00272500
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00272600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00272700
.ZG8C             ANOP  ,                                               00272800
.*-------------------------------------------------------------------   00272900
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00273000
                  AIF   (K'&ZXTOKEN LE 0).ZG8R  NOT I/O                 00273100
                  AIF   ('&XTOKEN'(1,1) NE '(').ZG8R                    00273200
&ZCGPR            SETC  '&XTOKEN'(2,K'&XTOKEN-2)                        00273300
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                     00273400
                  AIF   (K'&ZCGPR GT 2).ZG8Q                            00273500
                  AIF   ('&ZCGPR' EQ '0').ZG8Q                          00273600
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00273700
                  AIF   (T'&ZCGPR NE 'N').ZG8Q  INVALID REG NAME        00273800
.ZG8P             ANOP  ,                                               00273900
                  AIF   (T'&ZCGPR NE 'N').ZG8R  NON NUMERIC             00274000
                  AIF   ('&ZCGPR' LT '2').ZG8Q                          00274100
                  AIF   ('&ZCGPR' LE '12').ZG8R                         00274200
.ZG8Q             ANOP  ,                                               00274300
&ZMS              SETC  '"TOKEN='                                       00274400
&ZMS              SETC  '&ZMS.&TOKEN"'                                  00274500
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00274600
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00274700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00274800
.ZG8R             ANOP  ,                                               00274900
.*----------------------------------------------------------------***   00275000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00275100
                  AIF   (N'&USERDATA LE 1).ZG11A  CK NUM                00275200
&ZMS              SETC  '"USERDATA='                                    00275300
&ZMS              SETC  '&ZMS.&USERDATA"'                               00275400
&ZMS              SETC  '&ZMS "USERDATA"'                               00275500
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00275600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00275700
.ZG11A            ANOP  ,                                               00275800
.*-------------------------------------------------------------------   00275900
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00276000
&ZXUSERDATA       SETC  'INPUT'     SET IN/OUTPUT                       00276100
&XUSERDATA        SETC  'NO_CHANGE'                                     00276200
                  AIF   (K'&USERDATA(1) LE 0).ZG11B  PARM               00276300
&XUSERDATA        SETC  '&USERDATA(1)'          SET XVARIABLE           00276400
                  AIF   (N'&USERDATA GT 1).ZG11B  MULTI                 00276500
&XUSERDATA        SETC  '&USERDATA'             SET XVARIABLE           00276600
.ZG11B            ANOP  ,                                               00276700
.*-------------------------------------------------------------------   00276800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00276900
                  AIF   (K'&ZXUSERDATA LE 0).ZG11R  NOT I/O             00277000
         AIF   ('&XUSERDATA' EQ 'NO_CHANGE').ZG11R                      00277100
                  AIF   ('&XUSERDATA'(1,1) NE '(').ZG11R                00277200
&ZCGPR            SETC  '&XUSERDATA'(2,K'&XUSERDATA-2)                  00277300
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                    00277400
                  AIF   (K'&ZCGPR GT 2).ZG11Q                           00277500
                  AIF   ('&ZCGPR' EQ '0').ZG11Q                         00277600
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00277700
                  AIF   (T'&ZCGPR NE 'N').ZG11Q  INVALID REG NAME       00277800
.ZG11P            ANOP  ,                                               00277900
                  AIF   (T'&ZCGPR NE 'N').ZG11R  NON NUMERIC            00278000
                  AIF   ('&ZCGPR' LT '2').ZG11Q                         00278100
                  AIF   ('&ZCGPR' LE '12').ZG11R                        00278200
.ZG11Q            ANOP  ,                                               00278300
&ZMS              SETC  '"USERDATA='                                    00278400
&ZMS              SETC  '&ZMS.&USERDATA"'                               00278500
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00278600
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00278700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00278800
.ZG11R            ANOP  ,                                               00278900
.*----------------------------------------------------------------***   00279000
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00279100
                  AIF   (N'&RETMSGTOKEN LE 1).ZG14A  CK NUM             00279200
&ZMS              SETC  '"RETMSGTOKEN='                                 00279300
&ZMS              SETC  '&ZMS.&RETMSGTOKEN"'                            00279400
&ZMS              SETC  '&ZMS "RETMSGTOKEN"'                            00279500
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00279600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00279700
.ZG14A            ANOP  ,                                               00279800
.*-------------------------------------------------------------------   00279900
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00280000
                  AIF   (K'&RETMSGTOKEN(1) LE 0).ZG14C  NO PARM         00280100
&ZXRETMSGTOKEN    SETC  'OUTPUT'    SET OUTPUT                          00280200
&XRETMSGTOKEN     SETC  '&RETMSGTOKEN(1)'       SET XVARIABLE           00280300
                  AIF   (N'&RETMSGTOKEN GT 1).ZG14C                     00280400
&XRETMSGTOKEN     SETC  '&RETMSGTOKEN'          SET XVARIABLE           00280500
.ZG14C            ANOP  ,                                               00280600
.*-------------------------------------------------------------------   00280700
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00280800
                  AIF   (K'&ZXRETMSGTOKEN LE 0).ZG14R  NOT I/O          00280900
                  AIF   ('&XRETMSGTOKEN'(1,1) NE '(').ZG14R             00281000
&ZCGPR            SETC  '&XRETMSGTOKEN'(2,K'&XRETMSGTOKEN-2)            00281100
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG14P                    00281200
                  AIF   (K'&ZCGPR GT 2).ZG14Q                           00281300
                  AIF   ('&ZCGPR' EQ '0').ZG14Q                         00281400
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00281500
                  AIF   (T'&ZCGPR NE 'N').ZG14Q  INVALID REG NAME       00281600
.ZG14P            ANOP  ,                                               00281700
                  AIF   (T'&ZCGPR NE 'N').ZG14R  NON NUMERIC            00281800
                  AIF   ('&ZCGPR' LT '2').ZG14Q                         00281900
                  AIF   ('&ZCGPR' LE '12').ZG14R                        00282000
.ZG14Q            ANOP  ,                                               00282100
&ZMS              SETC  '"RETMSGTOKEN='                                 00282200
&ZMS              SETC  '&ZMS.&RETMSGTOKEN"'                            00282300
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00282400
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00282500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00282600
.ZG14R            ANOP  ,                                               00282700
.*------------------------------------------------------------------    00282800
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00282900
&XHOLDTIME        SETC  ''          INITIALIZE XVARIABLE                00283000
.*-------------------------------------------------------------------   00283100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00283200
.ZG18             ANOP  ,                                               00283300
                  AIF   (K'&HOLDTIME(1) LE 0).ZG18A                     00283400
&ZTLC             SETC 'INDEFINITE'                                     00283500
                  AIF   ('&HOLDTIME(1)' NE '&ZTLC').ZG19                00283600
&XHOLDTIME        SETC  'INDEFINITE'            SET KEYWORD             00283700
                  AIF   (N'&HOLDTIME LE 1).ZG18A  CK NUM                00283800
&ZMS              SETC  '"HOLDTIME='                                    00283900
&ZMS              SETC  '&ZMS.&HOLDTIME"'                               00284000
&ZMS              SETC  '&ZMS "HOLDTIME"'                               00284100
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00284200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00284300
.ZG18A            ANOP  ,                                               00284400
.*------------------------------------------------------------------    00284500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00284600
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00284700
.ZG18A0           AIF   (K'&TIME LE 0).ZG18A1   OK                      00284800
&ZCVAL            SETC '&ZCVAL TIME'            INCORRECT KEY USED      00284900
.ZG18A1           AIF   (K'&ZCVAL LE 0).ZG18A2  OK                      00285000
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00285100
&ZMS              SETC  '"HOLDTIME'                                     00285200
&ZMS              SETC  '&ZMS.=&HOLDTIME"'                              00285300
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00285400
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00285500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00285600
.ZG18A2           ANOP  ,                                               00285700
.*-------------------------------------------------------------------   00285800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00285900
.ZG19             ANOP  ,                                               00286000
&ZTLC             SETC 'CONTINUE'                                       00286100
                  AIF   ('&HOLDTIME(1)' NE '&ZTLC').ZG20                00286200
&XHOLDTIME        SETC  'CONTINUE'  SET KEYWORD                         00286300
                  AIF   (N'&HOLDTIME LE 1).ZG19A  CK NUM                00286400
&ZMS              SETC  '"HOLDTIME='                                    00286500
&ZMS              SETC  '&ZMS.&HOLDTIME"'                               00286600
&ZMS              SETC  '&ZMS "HOLDTIME"'                               00286700
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00286800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00286900
.ZG19A            ANOP  ,                                               00287000
.*------------------------------------------------------------------    00287100
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00287200
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00287300
.ZG19A0           AIF   (K'&TIME LE 0).ZG19A1   OK                      00287400
&ZCVAL            SETC '&ZCVAL TIME'            INCORRECT KEY USED      00287500
.ZG19A1           AIF   (K'&ZCVAL LE 0).ZG19A2  OK                      00287600
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00287700
&ZMS              SETC  '"HOLDTIME'                                     00287800
&ZMS              SETC  '&ZMS.=&HOLDTIME"'                              00287900
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00288000
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00288100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00288200
.ZG19A2           ANOP  ,                                               00288300
.*-------------------------------------------------------------------   00288400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00288500
.ZG20             ANOP  ,                                               00288600
&ZTLC             SETC 'SET'                                            00288700
                  AIF   ('&HOLDTIME(1)' NE '&ZTLC').ZG24                00288800
&XHOLDTIME        SETC  'SET'       SET KEYWORD                         00288900
                  AIF   (N'&HOLDTIME LE 1).ZG20A  CK NUM                00289000
&ZMS              SETC  '"HOLDTIME='                                    00289100
&ZMS              SETC  '&ZMS.&HOLDTIME"'                               00289200
&ZMS              SETC  '&ZMS "HOLDTIME"'                               00289300
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00289400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00289500
.ZG20A            ANOP  ,                                               00289600
.*----------------------------------------------------------------***   00289700
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00289800
                  AIF   (N'&TIME LE 1).ZG22A    CK NUM                  00289900
&ZMS              SETC  '"TIME='                                        00290000
&ZMS              SETC  '&ZMS.&TIME"'                                   00290100
&ZMS              SETC  '&ZMS "TIME"'                                   00290200
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00290300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00290400
.ZG22A            ANOP  ,                                               00290500
.*-------------------------------------------------------------------   00290600
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00290700
&ZXTIME           SETC  'INPUT'     SET IN/OUTPUT                       00290800
&XTIME            SETC  '&TIME(1)'  SET XVARIABLE                       00290900
                  AIF   (N'&TIME GT 1).ZG22B    MULTI                   00291000
&XTIME            SETC  '&TIME'     SET XVARIABLE                       00291100
.ZG22B            AIF   (K'&TIME(1) GT 0).ZG22C                         00291200
&ZXTIME           SETC  ''          RESET IN/OUTPUT                     00291300
&ZMS              SETC  ' '                                             00291400
&ZMS              SETC  '&ZMS "TIME" KEY AND ITS'                       00291500
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00291600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00291700
.ZG22C            ANOP  ,                                               00291800
.*-------------------------------------------------------------------   00291900
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00292000
                  AIF   (K'&ZXTIME LE 0).ZG22R  NOT I/O                 00292100
                  AIF   ('&XTIME'(1,1) NE '(').ZG22R                    00292200
&ZCGPR            SETC  '&XTIME'(2,K'&XTIME-2)                          00292300
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG22P                    00292400
                  AIF   (K'&ZCGPR GT 2).ZG22Q                           00292500
                  AIF   ('&ZCGPR' EQ '0').ZG22Q                         00292600
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00292700
                  AIF   (T'&ZCGPR NE 'N').ZG22Q  INVALID REG NAME       00292800
.ZG22P            ANOP  ,                                               00292900
                  AIF   (T'&ZCGPR NE 'N').ZG22R  NON NUMERIC            00293000
                  AIF   ('&ZCGPR' LT '2').ZG22Q                         00293100
                  AIF   ('&ZCGPR' LE '12').ZG22R                        00293200
.ZG22Q            ANOP  ,                                               00293300
&ZMS              SETC  '"TIME='                                        00293400
&ZMS              SETC  '&ZMS.&TIME"'                                   00293500
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00293600
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00293700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00293800
.ZG22R            ANOP  ,                                               00293900
.*------------------------------------------------------------------    00294000
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00294100
.ZG24             ANOP  ,                                               00294200
&ZXHOLDTIME       SETC  'INPUT'     SET IN/OUTPUT                       00294300
                  AIF   (K'&XHOLDTIME GT 0).ZG24E  VALID ARG            00294400
                  AIF   (T'&HOLDTIME EQ 'O').ZG24D  OMITTED             00294500
&ZASYSLNDX        SETA  0                                               00294600
.ZG24A            ANOP  ,           POSITIONAL MACRO KEY                00294700
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00294800
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG24C                00294900
&ZTLC             SETC 'HOLDTIME'                                       00295000
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG24A       00295100
.ZG24B            ANOP  ,                                               00295200
&ZXHOLDTIME       SETC  ''          RESET IN/OUTPUT                     00295300
&ZMS              SETC  'THE "HOLDTIME" KEY'                            00295400
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00295500
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00295600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00295700
                  AGO   .ZG24E                                          00295800
.ZG24C            ANOP  ,                                               00295900
&ZXHOLDTIME       SETC  ''          RESET IN/OUTPUT                     00296000
&ZMS              SETC  '"HOLDTIME='                                    00296100
&ZMS              SETC  '&ZMS.&HOLDTIME"'                               00296200
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00296300
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00296400
&ZMS              SETC  '&ZMS "INDEFINITE",'                            00296500
&ZMS              SETC  '&ZMS "CONTINUE",'                              00296600
&ZMS              SETC  '&ZMS OR "SET".'                                00296700
                  MNOTE 8,' &ZMS '                                      00296800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00296900
                  AGO   .ZG24E                                          00297000
.ZG24D            ANOP  ,                                               00297100
&XHOLDTIME        SETC  'INDEFINITE'            SET DEFAULT KEYWORD     00297200
.ZG24E            ANOP  ,                                               00297300
.*----------------------------------------------------------------***   00297400
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00297500
                  AIF   (N'&MSGTAG LE 1).ZG26A  CK NUM                  00297600
&ZMS              SETC  '"MSGTAG='                                      00297700
&ZMS              SETC  '&ZMS.&MSGTAG"'                                 00297800
&ZMS              SETC  '&ZMS "MSGTAG"'                                 00297900
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00298000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00298100
.ZG26A            ANOP  ,                                               00298200
.*-------------------------------------------------------------------   00298300
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00298400
&ZXMSGTAG         SETC  'INPUT'     SET IN/OUTPUT                       00298500
&XMSGTAG          SETC  'NO_CHANGE'                                     00298600
                  AIF   (K'&MSGTAG(1) LE 0).ZG26B  PARM                 00298700
&XMSGTAG          SETC  '&MSGTAG(1)'            SET XVARIABLE           00298800
                  AIF   (N'&MSGTAG GT 1).ZG26B  MULTI                   00298900
&XMSGTAG          SETC  '&MSGTAG'   SET XVARIABLE                       00299000
.ZG26B            ANOP  ,                                               00299100
.*-------------------------------------------------------------------   00299200
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00299300
                  AIF   (K'&ZXMSGTAG LE 0).ZG26R  NOT I/O               00299400
         AIF   ('&XMSGTAG' EQ 'NO_CHANGE').ZG26R                        00299500
                  AIF   ('&XMSGTAG'(1,1) NE '(').ZG26R                  00299600
&ZCGPR            SETC  '&XMSGTAG'(2,K'&XMSGTAG-2)                      00299700
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG26P                    00299800
                  AIF   (K'&ZCGPR GT 2).ZG26Q                           00299900
                  AIF   ('&ZCGPR' EQ '0').ZG26Q                         00300000
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00300100
                  AIF   (T'&ZCGPR NE 'N').ZG26Q  INVALID REG NAME       00300200
.ZG26P            ANOP  ,                                               00300300
                  AIF   (T'&ZCGPR NE 'N').ZG26R  NON NUMERIC            00300400
                  AIF   ('&ZCGPR' LT '2').ZG26Q                         00300500
                  AIF   ('&ZCGPR' LE '12').ZG26R                        00300600
.ZG26Q            ANOP  ,                                               00300700
&ZMS              SETC  '"MSGTAG='                                      00300800
&ZMS              SETC  '&ZMS.&MSGTAG"'                                 00300900
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00301000
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00301100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00301200
.ZG26R            ANOP  ,                                               00301300
.*-------------------------------------------------------------------   00301400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00301500
.ZG28             ANOP  ,                                               00301600
&ZTLC             SETC 'DISCARDMSG'                                     00301700
                  AIF   ('&REQUEST(1)' NE '&ZTLC').ZG36                 00301800
&XREQUEST         SETC  'DISCARDMSG'            SET KEYWORD             00301900
                  AIF   (N'&REQUEST LE 1).ZG28A  CK NUM                 00302000
&ZMS              SETC  '"REQUEST='                                     00302100
&ZMS              SETC  '&ZMS.&REQUEST"'                                00302200
&ZMS              SETC  '&ZMS "REQUEST"'                                00302300
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00302400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00302500
.ZG28A            ANOP  ,                                               00302600
.*------------------------------------------------------------------    00302700
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00302800
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00302900
.ZG28A0           AIF   (K'&USERDATA LE 0).ZG28A1  OK                   00303000
&ZCVAL            SETC '&ZCVAL USERDATA'        INCORRECT KEY USED      00303100
.ZG28A1           AIF   (K'&RETMSGTOKEN LE 0).ZG28A2  OK                00303200
&ZCVAL            SETC '&ZCVAL RETMSGTOKEN'     INCORRECT KEY USED      00303300
.ZG28A2           AIF   (K'&HOLDTIME LE 0).ZG28A3  OK                   00303400
&ZCVAL            SETC '&ZCVAL HOLDTIME'        INCORRECT KEY USED      00303500
.ZG28A3           AIF   (K'&TIME LE 0).ZG28A4   OK                      00303600
&ZCVAL            SETC '&ZCVAL TIME'            INCORRECT KEY USED      00303700
.ZG28A4           AIF   (K'&MSGTAG LE 0).ZG28A5  OK                     00303800
&ZCVAL            SETC '&ZCVAL MSGTAG'          INCORRECT KEY USED      00303900
.ZG28A5           AIF   (K'&DATATYPE LE 0).ZG28A6  OK                   00304000
&ZCVAL            SETC '&ZCVAL DATATYPE'        INCORRECT KEY USED      00304100
.ZG28A6           AIF   (K'&STATUS LE 0).ZG28A7  OK                     00304200
&ZCVAL            SETC '&ZCVAL STATUS'          INCORRECT KEY USED      00304300
.ZG28A7           AIF   (K'&SOURCE LE 0).ZG28A8  OK                     00304400
&ZCVAL            SETC '&ZCVAL SOURCE'          INCORRECT KEY USED      00304500
.ZG28A8           AIF   (K'&MQAALEVEL LE 0).ZG28A9  OK                  00304600
&ZCVAL            SETC '&ZCVAL MQAALEVEL'       INCORRECT KEY USED      00304700
.ZG28A9           AIF   (K'&MSGTAGFILTER LE 0).ZG28A10  OK              00304800
&ZCVAL            SETC '&ZCVAL MSGTAGFILTER'    INCORRECT KEY USED      00304900
.ZG28A10          AIF   (K'&MSGTAGMASK LE 0).ZG28A11  OK                00305000
&ZCVAL            SETC '&ZCVAL MSGTAGMASK'      INCORRECT KEY USED      00305100
.ZG28A11          AIF   (K'&ANSAREA LE 0).ZG28A12  OK                   00305200
&ZCVAL            SETC '&ZCVAL ANSAREA'         INCORRECT KEY USED      00305300
.ZG28A12          AIF   (K'&ANSLEN LE 0).ZG28A13  OK                    00305400
&ZCVAL            SETC '&ZCVAL ANSLEN'          INCORRECT KEY USED      00305500
.ZG28A13          AIF   (K'&TYPE LE 0).ZG28A14  OK                      00305600
&ZCVAL            SETC '&ZCVAL TYPE'            INCORRECT KEY USED      00305700
.ZG28A14          AIF   (K'&NOTIFYEXIT LE 0).ZG28A15  OK                00305800
&ZCVAL            SETC '&ZCVAL NOTIFYEXIT'      INCORRECT KEY USED      00305900
.ZG28A15          AIF   (K'&MSGEXIT LE 0).ZG28A16  OK                   00306000
&ZCVAL            SETC '&ZCVAL MSGEXIT'         INCORRECT KEY USED      00306100
.ZG28A16          AIF   (K'&EXITPARMS LE 0).ZG28A17  OK                 00306200
&ZCVAL            SETC '&ZCVAL EXITPARMS'       INCORRECT KEY USED      00306300
.ZG28A17          AIF   (K'&ZCVAL LE 0).ZG28A18  OK                     00306400
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00306500
&ZMS              SETC  '"REQUEST'                                      00306600
&ZMS              SETC  '&ZMS.=&REQUEST"'                               00306700
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00306800
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00306900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00307000
.ZG28A18          ANOP  ,                                               00307100
.*----------------------------------------------------------------***   00307200
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00307300
&XMSGTOKENTYPE    SETC  ''          INITIALIZE XVARIABLE                00307400
                  AIF   (K'&TOKEN LE 0).ZG30C                           00307500
&ZXMSGTOKENTYPE   SETC  'INPUT'     SET IN/OUTPUT                       00307600
&XMSGTOKENTYPE    SETC  'TOKEN'     SET XVARIABLE                       00307700
&ZXTOKEN          SETC  'INPUT'     SET IN/OUTPUT                       00307800
&XTOKEN           SETC  '&TOKEN(1)'             SET XVARIABLE PARM      00307900
                  AIF   (N'&TOKEN GT 1).ZG30A                           00308000
&XTOKEN           SETC  '&TOKEN'    SET XVARIABLE PARM                  00308100
.ZG30A            AIF   (N'&TOKEN LE 1).ZG30B   CK NUM                  00308200
&ZMS              SETC  '"TOKEN='                                       00308300
&ZMS              SETC  '&ZMS.&TOKEN"'                                  00308400
&ZMS              SETC  '&ZMS "TOKEN"'                                  00308500
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00308600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00308700
.ZG30B            AIF   (K'&XTOKEN GT 0).ZG30C  ONE PARM                00308800
&ZXMSGTOKENTYPE   SETC  ''          RESET IN/OUTPUT                     00308900
&ZXTOKEN          SETC  ''          RESET IN/OUTPUT                     00309000
&ZMS              SETC  ' '                                             00309100
&ZMS              SETC  '&ZMS "TOKEN" KEY AND ITS'                      00309200
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00309300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00309400
.ZG30C            ANOP  ,                                               00309500
.*----------------------------------------------------------------***   00309600
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00309700
                  AIF   (K'&SENDTOKEN LE 0).ZG34D  NO ME KEY            00309800
                  AIF   (N'&SENDTOKEN LE 1).ZG34A  CK NUM               00309900
&ZMS              SETC  '"SENDTOKEN='                                   00310000
&ZMS              SETC  '&ZMS.&SENDTOKEN"'                              00310100
&ZMS              SETC  '&ZMS "SENDTOKEN"'                              00310200
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00310300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00310400
.ZG34A            AIF   (K'&XMSGTOKENTYPE LE 0).ZG34B                   00310500
&ZMS              SETC  '"SENDTOKEN'                                    00310600
&ZMS              SETC  '&ZMS.=&SENDTOKEN"'                             00310700
&ZMS              SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'           00310800
&ZMS              SETC  '&ZMS "&XMSGTOKENTYPE"'                         00310900
                  MNOTE 8,' &ZMS KEY.'                                  00311000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00311100
                  AGO   .ZG34D                                          00311200
.*                                                                      00311300
.ZG34B            ANOP  ,                                               00311400
&ZXMSGTOKENTYPE   SETC  'INPUT'     SET IN/OUTPUT                       00311500
&XMSGTOKENTYPE    SETC  'SENDTOKEN'             SET XVARIABLE           00311600
&ZXSENDTOKEN      SETC  'INPUT'     SET IN/OUTPUT                       00311700
&XSENDTOKEN       SETC  '&SENDTOKEN(1)'         SET XVARIABLE PARM      00311800
                  AIF   (N'&SENDTOKEN GT 1).ZG34C                       00311900
&XSENDTOKEN       SETC  '&SENDTOKEN'            SET XVARIABLE PARM      00312000
.ZG34C            AIF   (K'&XSENDTOKEN GT 0).ZG34D  ONE PARM            00312100
&ZXMSGTOKENTYPE   SETC  ''          RESET IN/OUTPUT                     00312200
&ZXSENDTOKEN      SETC  ''          RESET IN/OUTPUT                     00312300
&ZMS              SETC  ' '                                             00312400
&ZMS              SETC  '&ZMS "SENDTOKEN" KEY AND ITS'                  00312500
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00312600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00312700
.ZG34D            ANOP  ,                                               00312800
.*------------------------------------------------------------------    00312900
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           00313000
                  AIF   (K'&XMSGTOKENTYPE GT 0).ZG35B                   00313100
&ZXMSGTOKENTYPE   SETC  ''          RESET IN/OUTPUT                     00313200
&ZXTOKEN          SETC  ''          RESET IN/OUTPUT                     00313300
&XMSGTOKENTYPE    SETC  ''          ENSURE NULL                         00313400
&XTOKEN           SETC  ''          ENSURE NULL                         00313500
&ZMS              SETC  'ONE OF THE FOLLOWING'                          00313600
&ZMS              SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'             00313700
&ZMS              SETC  '&ZMS REQUIRED:'                                00313800
&ZMS              SETC  '&ZMS "TOKEN"'          VALID ME KEY            00313900
&ZMS              SETC  '&ZMS OR "SENDTOKEN".'  VALID ME KEY            00314000
                  MNOTE 8,' &ZMS '                                      00314100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00314200
.ZG35B            ANOP  ,                                               00314300
.*-------------------------------------------------------------------   00314400
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00314500
.ZG30ZY  AIF    ('&XMSGTOKENTYPE' NE 'TOKEN').ZG34ZY                    00314600
.*-------------------------------------------------------------------   00314700
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00314800
                  AIF   (K'&ZXTOKEN LE 0).ZG30R  NOT I/O                00314900
                  AIF   ('&XTOKEN'(1,1) NE '(').ZG30R                   00315000
&ZCGPR            SETC  '&XTOKEN'(2,K'&XTOKEN-2)                        00315100
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG30P                    00315200
                  AIF   (K'&ZCGPR GT 2).ZG30Q                           00315300
                  AIF   ('&ZCGPR' EQ '0').ZG30Q                         00315400
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00315500
                  AIF   (T'&ZCGPR NE 'N').ZG30Q  INVALID REG NAME       00315600
.ZG30P            ANOP  ,                                               00315700
                  AIF   (T'&ZCGPR NE 'N').ZG30R  NON NUMERIC            00315800
                  AIF   ('&ZCGPR' LT '2').ZG30Q                         00315900
                  AIF   ('&ZCGPR' LE '12').ZG30R                        00316000
.ZG30Q            ANOP  ,                                               00316100
&ZMS              SETC  '"TOKEN='                                       00316200
&ZMS              SETC  '&ZMS.&TOKEN"'                                  00316300
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00316400
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00316500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00316600
.ZG30R            ANOP  ,                                               00316700
.*----------------------------------------------------------------***   00316800
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00316900
                  AIF   (N'&MEMTOKEN LE 1).ZG32A  CK NUM                00317000
&ZMS              SETC  '"MEMTOKEN='                                    00317100
&ZMS              SETC  '&ZMS.&MEMTOKEN"'                               00317200
&ZMS              SETC  '&ZMS "MEMTOKEN"'                               00317300
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00317400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00317500
.ZG32A            ANOP  ,                                               00317600
.*-------------------------------------------------------------------   00317700
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00317800
&ZXMEMTOKEN       SETC  'INPUT'     SET IN/OUTPUT                       00317900
&XMEMTOKEN        SETC  '&MEMTOKEN(1)'          SET XVARIABLE           00318000
                  AIF   (N'&MEMTOKEN GT 1).ZG32B  MULTI                 00318100
&XMEMTOKEN        SETC  '&MEMTOKEN'             SET XVARIABLE           00318200
.ZG32B            AIF   (K'&MEMTOKEN(1) GT 0).ZG32C                     00318300
&ZXMEMTOKEN       SETC  ''          RESET IN/OUTPUT                     00318400
&ZMS              SETC  ' '                                             00318500
&ZMS              SETC  '&ZMS "MEMTOKEN" KEY AND ITS'                   00318600
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00318700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00318800
.ZG32C            ANOP  ,                                               00318900
.*-------------------------------------------------------------------   00319000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00319100
                  AIF   (K'&ZXMEMTOKEN LE 0).ZG32R  NOT I/O             00319200
                  AIF   ('&XMEMTOKEN'(1,1) NE '(').ZG32R                00319300
&ZCGPR            SETC  '&XMEMTOKEN'(2,K'&XMEMTOKEN-2)                  00319400
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG32P                    00319500
                  AIF   (K'&ZCGPR GT 2).ZG32Q                           00319600
                  AIF   ('&ZCGPR' EQ '0').ZG32Q                         00319700
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00319800
                  AIF   (T'&ZCGPR NE 'N').ZG32Q  INVALID REG NAME       00319900
.ZG32P            ANOP  ,                                               00320000
                  AIF   (T'&ZCGPR NE 'N').ZG32R  NON NUMERIC            00320100
                  AIF   ('&ZCGPR' LT '2').ZG32Q                         00320200
                  AIF   ('&ZCGPR' LE '12').ZG32R                        00320300
.ZG32Q            ANOP  ,                                               00320400
&ZMS              SETC  '"MEMTOKEN='                                    00320500
&ZMS              SETC  '&ZMS.&MEMTOKEN"'                               00320600
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00320700
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00320800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00320900
.ZG32R            ANOP  ,                                               00321000
.*-------------------------------------------------------------------   00321100
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00321200
.ZG34ZY  AIF    ('&XMSGTOKENTYPE' NE 'SENDTOKEN').ZG35ZY                00321300
.*-------------------------------------------------------------------   00321400
.***AG.KMEKY14 NAME, RQD INPUT, ME KEYS -DISALLOWED KEYS                00321500
&ZCVAL            SETC ''           ERROR KEY FIELD                     00321600
.ZG34I0           AIF   (K'&MEMTOKEN LE 0).ZG34I1                       00321700
&ZCVAL            SETC '&ZCVAL MEMTOKEN'        DISALLOWED KEY          00321800
.ZG34I1           AIF   (K'&ZCVAL LE 0).ZG34J   KEY                     00321900
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00322000
&ZMS              SETC  '"SENDTOKEN'                                    00322100
&ZMS              SETC  '&ZMS.=&SENDTOKEN"'                             00322200
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00322300
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00322400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00322500
.ZG34J            ANOP  ,                                               00322600
.*-------------------------------------------------------------------   00322700
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00322800
                  AIF   (K'&ZXSENDTOKEN LE 0).ZG34R  NOT I/O            00322900
                  AIF   ('&XSENDTOKEN'(1,1) NE '(').ZG34R               00323000
&ZCGPR            SETC  '&XSENDTOKEN'(2,K'&XSENDTOKEN-2)                00323100
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG34P                    00323200
                  AIF   (K'&ZCGPR GT 2).ZG34Q                           00323300
                  AIF   ('&ZCGPR' EQ '0').ZG34Q                         00323400
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00323500
                  AIF   (T'&ZCGPR NE 'N').ZG34Q  INVALID REG NAME       00323600
.ZG34P            ANOP  ,                                               00323700
                  AIF   (T'&ZCGPR NE 'N').ZG34R  NON NUMERIC            00323800
                  AIF   ('&ZCGPR' LT '2').ZG34Q                         00323900
                  AIF   ('&ZCGPR' LE '12').ZG34R                        00324000
.ZG34Q            ANOP  ,                                               00324100
&ZMS              SETC  '"SENDTOKEN='                                   00324200
&ZMS              SETC  '&ZMS.&SENDTOKEN"'                              00324300
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00324400
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00324500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00324600
.ZG34R            ANOP  ,                                               00324700
.*-------------------------------------------------------------------   00324800
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            00324900
.ZG35ZY           ANOP ,            END MUTUALLY EXCLUSIVE KEYS         00325000
.*-------------------------------------------------------------------   00325100
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00325200
.ZG36             ANOP  ,                                               00325300
&ZTLC             SETC 'QUERYMSG'                                       00325400
                  AIF   ('&REQUEST(1)' NE '&ZTLC').ZG73                 00325500
&XREQUEST         SETC  'QUERYMSG'  SET KEYWORD                         00325600
                  AIF   (N'&REQUEST LE 1).ZG36A  CK NUM                 00325700
&ZMS              SETC  '"REQUEST='                                     00325800
&ZMS              SETC  '&ZMS.&REQUEST"'                                00325900
&ZMS              SETC  '&ZMS "REQUEST"'                                00326000
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00326100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00326200
.ZG36A            ANOP  ,                                               00326300
.*------------------------------------------------------------------    00326400
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00326500
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00326600
.ZG36A0           AIF   (K'&USERDATA LE 0).ZG36A1  OK                   00326700
&ZCVAL            SETC '&ZCVAL USERDATA'        INCORRECT KEY USED      00326800
.ZG36A1           AIF   (K'&RETMSGTOKEN LE 0).ZG36A2  OK                00326900
&ZCVAL            SETC '&ZCVAL RETMSGTOKEN'     INCORRECT KEY USED      00327000
.ZG36A2           AIF   (K'&HOLDTIME LE 0).ZG36A3  OK                   00327100
&ZCVAL            SETC '&ZCVAL HOLDTIME'        INCORRECT KEY USED      00327200
.ZG36A3           AIF   (K'&TIME LE 0).ZG36A4   OK                      00327300
&ZCVAL            SETC '&ZCVAL TIME'            INCORRECT KEY USED      00327400
.ZG36A4           AIF   (K'&MSGTAG LE 0).ZG36A5  OK                     00327500
&ZCVAL            SETC '&ZCVAL MSGTAG'          INCORRECT KEY USED      00327600
.ZG36A5           AIF   (K'&SENDTOKEN LE 0).ZG36A6  OK                  00327700
&ZCVAL            SETC '&ZCVAL SENDTOKEN'       INCORRECT KEY USED      00327800
.ZG36A6           AIF   (K'&TYPE LE 0).ZG36A7   OK                      00327900
&ZCVAL            SETC '&ZCVAL TYPE'            INCORRECT KEY USED      00328000
.ZG36A7           AIF   (K'&NOTIFYEXIT LE 0).ZG36A8  OK                 00328100
&ZCVAL            SETC '&ZCVAL NOTIFYEXIT'      INCORRECT KEY USED      00328200
.ZG36A8           AIF   (K'&MSGEXIT LE 0).ZG36A9  OK                    00328300
&ZCVAL            SETC '&ZCVAL MSGEXIT'         INCORRECT KEY USED      00328400
.ZG36A9           AIF   (K'&EXITPARMS LE 0).ZG36A10  OK                 00328500
&ZCVAL            SETC '&ZCVAL EXITPARMS'       INCORRECT KEY USED      00328600
.ZG36A10          AIF   (K'&ZCVAL LE 0).ZG36A11  OK                     00328700
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00328800
&ZMS              SETC  '"REQUEST'                                      00328900
&ZMS              SETC  '&ZMS.=&REQUEST"'                               00329000
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00329100
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00329200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00329300
.ZG36A11          ANOP  ,                                               00329400
.*----------------------------------------------------------------***   00329500
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00329600
                  AIF   (N'&MEMTOKEN LE 1).ZG38A  CK NUM                00329700
&ZMS              SETC  '"MEMTOKEN='                                    00329800
&ZMS              SETC  '&ZMS.&MEMTOKEN"'                               00329900
&ZMS              SETC  '&ZMS "MEMTOKEN"'                               00330000
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00330100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00330200
.ZG38A            ANOP  ,                                               00330300
.*-------------------------------------------------------------------   00330400
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00330500
&ZXMEMTOKEN       SETC  'INPUT'     SET IN/OUTPUT                       00330600
&XMEMTOKEN        SETC  '&MEMTOKEN(1)'          SET XVARIABLE           00330700
                  AIF   (N'&MEMTOKEN GT 1).ZG38B  MULTI                 00330800
&XMEMTOKEN        SETC  '&MEMTOKEN'             SET XVARIABLE           00330900
.ZG38B            AIF   (K'&MEMTOKEN(1) GT 0).ZG38C                     00331000
&ZXMEMTOKEN       SETC  ''          RESET IN/OUTPUT                     00331100
&ZMS              SETC  ' '                                             00331200
&ZMS              SETC  '&ZMS "MEMTOKEN" KEY AND ITS'                   00331300
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00331400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00331500
.ZG38C            ANOP  ,                                               00331600
.*-------------------------------------------------------------------   00331700
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00331800
                  AIF   (K'&ZXMEMTOKEN LE 0).ZG38R  NOT I/O             00331900
                  AIF   ('&XMEMTOKEN'(1,1) NE '(').ZG38R                00332000
&ZCGPR            SETC  '&XMEMTOKEN'(2,K'&XMEMTOKEN-2)                  00332100
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG38P                    00332200
                  AIF   (K'&ZCGPR GT 2).ZG38Q                           00332300
                  AIF   ('&ZCGPR' EQ '0').ZG38Q                         00332400
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00332500
                  AIF   (T'&ZCGPR NE 'N').ZG38Q  INVALID REG NAME       00332600
.ZG38P            ANOP  ,                                               00332700
                  AIF   (T'&ZCGPR NE 'N').ZG38R  NON NUMERIC            00332800
                  AIF   ('&ZCGPR' LT '2').ZG38Q                         00332900
                  AIF   ('&ZCGPR' LE '12').ZG38R                        00333000
.ZG38Q            ANOP  ,                                               00333100
&ZMS              SETC  '"MEMTOKEN='                                    00333200
&ZMS              SETC  '&ZMS.&MEMTOKEN"'                               00333300
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00333400
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00333500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00333600
.ZG38R            ANOP  ,                                               00333700
.*------------------------------------------------------------------    00333800
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00333900
&XDATATYPE        SETC  ''          INITIALIZE XVARIABLE                00334000
.*-------------------------------------------------------------------   00334100
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00334200
.ZG42             ANOP  ,                                               00334300
                  AIF   (K'&DATATYPE(1) LE 0).ZG42A                     00334400
&ZTLC             SETC 'MSGOUT'                                         00334500
                  AIF   ('&DATATYPE(1)' NE '&ZTLC').ZG49                00334600
&XDATATYPE        SETC  'MSGOUT'    SET KEYWORD                         00334700
                  AIF   (N'&DATATYPE LE 1).ZG42A  CK NUM                00334800
&ZMS              SETC  '"DATATYPE='                                    00334900
&ZMS              SETC  '&ZMS.&DATATYPE"'                               00335000
&ZMS              SETC  '&ZMS "DATATYPE"'                               00335100
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00335200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00335300
.ZG42A            ANOP  ,                                               00335400
.*------------------------------------------------------------------    00335500
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00335600
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00335700
.ZG42A0           AIF   (K'&SOURCE LE 0).ZG42A1  OK                     00335800
&ZCVAL            SETC '&ZCVAL SOURCE'          INCORRECT KEY USED      00335900
.ZG42A1           AIF   (K'&TOKEN LE 0).ZG42A2  OK                      00336000
&ZCVAL            SETC '&ZCVAL TOKEN'           INCORRECT KEY USED      00336100
.ZG42A2           AIF   (K'&ZCVAL LE 0).ZG42A3  OK                      00336200
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00336300
&ZMS              SETC  '"DATATYPE'                                     00336400
&ZMS              SETC  '&ZMS.=&DATATYPE"'                              00336500
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00336600
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00336700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00336800
.ZG42A3           ANOP  ,                                               00336900
.*------------------------------------------------------------------    00337000
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00337100
&XSTATUS          SETC  ''          INITIALIZE XVARIABLE                00337200
.*-------------------------------------------------------------------   00337300
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00337400
.ZG45             ANOP  ,                                               00337500
                  AIF   (K'&STATUS(1) LE 0).ZG45A                       00337600
&ZTLC             SETC 'SAVED'                                          00337700
                  AIF   ('&STATUS(1)' NE '&ZTLC').ZG46                  00337800
&XSTATUS          SETC  'SAVED'     SET KEYWORD                         00337900
                  AIF   (N'&STATUS LE 1).ZG45A  CK NUM                  00338000
&ZMS              SETC  '"STATUS='                                      00338100
&ZMS              SETC  '&ZMS.&STATUS"'                                 00338200
&ZMS              SETC  '&ZMS "STATUS"'                                 00338300
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00338400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00338500
.ZG45A            ANOP  ,                                               00338600
.*-------------------------------------------------------------------   00338700
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00338800
.ZG46             ANOP  ,                                               00338900
&ZTLC             SETC 'COMPLETE'                                       00339000
                  AIF   ('&STATUS(1)' NE '&ZTLC').ZG47                  00339100
&XSTATUS          SETC  'COMPLETE'  SET KEYWORD                         00339200
                  AIF   (N'&STATUS LE 1).ZG46A  CK NUM                  00339300
&ZMS              SETC  '"STATUS='                                      00339400
&ZMS              SETC  '&ZMS.&STATUS"'                                 00339500
&ZMS              SETC  '&ZMS "STATUS"'                                 00339600
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00339700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00339800
.ZG46A            ANOP  ,                                               00339900
.*-------------------------------------------------------------------   00340000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00340100
.ZG47             ANOP  ,                                               00340200
&ZTLC             SETC 'INCOMPLETE'                                     00340300
                  AIF   ('&STATUS(1)' NE '&ZTLC').ZG48                  00340400
&XSTATUS          SETC  'INCOMPLETE'            SET KEYWORD             00340500
                  AIF   (N'&STATUS LE 1).ZG47A  CK NUM                  00340600
&ZMS              SETC  '"STATUS='                                      00340700
&ZMS              SETC  '&ZMS.&STATUS"'                                 00340800
&ZMS              SETC  '&ZMS "STATUS"'                                 00340900
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00341000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00341100
.ZG47A            ANOP  ,                                               00341200
.*------------------------------------------------------------------    00341300
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00341400
.ZG48             ANOP  ,                                               00341500
&ZXSTATUS         SETC  'INPUT'     SET IN/OUTPUT                       00341600
                  AIF   (K'&XSTATUS GT 0).ZG48E  VALID ARG              00341700
                  AIF   (T'&STATUS EQ 'O').ZG48D  OMITTED               00341800
&ZASYSLNDX        SETA  0                                               00341900
.ZG48A            ANOP  ,           POSITIONAL MACRO KEY                00342000
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00342100
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG48C                00342200
&ZTLC             SETC 'STATUS'                                         00342300
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG48A       00342400
.ZG48B            ANOP  ,                                               00342500
&ZXSTATUS         SETC  ''          RESET IN/OUTPUT                     00342600
&ZMS              SETC  'THE "STATUS" KEY'                              00342700
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00342800
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00342900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00343000
                  AGO   .ZG48E                                          00343100
.ZG48C            ANOP  ,                                               00343200
&ZXSTATUS         SETC  ''          RESET IN/OUTPUT                     00343300
&ZMS              SETC  '"STATUS='                                      00343400
&ZMS              SETC  '&ZMS.&STATUS"'                                 00343500
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00343600
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00343700
&ZMS              SETC  '&ZMS "SAVED",'                                 00343800
&ZMS              SETC  '&ZMS "COMPLETE",'                              00343900
&ZMS              SETC  '&ZMS OR "INCOMPLETE".'                         00344000
                  MNOTE 8,' &ZMS '                                      00344100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00344200
                  AGO   .ZG48E                                          00344300
.ZG48D            ANOP  ,                                               00344400
&XSTATUS          SETC  'SAVED'     SET DEFAULT KEYWORD                 00344500
.ZG48E            ANOP  ,                                               00344600
.*------------------------------------------------------------------    00344700
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00344800
                  AIF   (K'&STATUS(1) GT 0).ZG48F  PARM                 00344900
&XSTATUS          SETC  ''          ENSURE NULL KEYWORD                 00345000
&ZXSTATUS         SETC  ''          RESET IN/OUTPUT                     00345100
&ZMS              SETC  'THE'                                           00345200
&ZMS              SETC  '&ZMS "STATUS" KEY AND ITS'                     00345300
&ZMS              SETC  '&ZMS ARGUMENT ARE REQUIRED.'                   00345400
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00345500
&ZMS              SETC  '&ZMS "SAVED",'                                 00345600
&ZMS              SETC  '&ZMS "COMPLETE",'                              00345700
&ZMS              SETC  '&ZMS OR "INCOMPLETE".'                         00345800
                  MNOTE 8,' &ZMS '                                      00345900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00346000
.ZG48F            ANOP  ,                                               00346100
.*-------------------------------------------------------------------   00346200
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00346300
.ZG49             ANOP  ,                                               00346400
&ZTLC             SETC 'MSGIN'                                          00346500
                  AIF   ('&DATATYPE(1)' NE '&ZTLC').ZG53                00346600
&XDATATYPE        SETC  'MSGIN'     SET KEYWORD                         00346700
                  AIF   (N'&DATATYPE LE 1).ZG49A  CK NUM                00346800
&ZMS              SETC  '"DATATYPE='                                    00346900
&ZMS              SETC  '&ZMS.&DATATYPE"'                               00347000
&ZMS              SETC  '&ZMS "DATATYPE"'                               00347100
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00347200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00347300
.ZG49A            ANOP  ,                                               00347400
.*------------------------------------------------------------------    00347500
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00347600
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00347700
.ZG49A0           AIF   (K'&STATUS LE 0).ZG49A1  OK                     00347800
&ZCVAL            SETC '&ZCVAL STATUS'          INCORRECT KEY USED      00347900
.ZG49A1           AIF   (K'&TOKEN LE 0).ZG49A2  OK                      00348000
&ZCVAL            SETC '&ZCVAL TOKEN'           INCORRECT KEY USED      00348100
.ZG49A2           AIF   (K'&ZCVAL LE 0).ZG49A3  OK                      00348200
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00348300
&ZMS              SETC  '"DATATYPE'                                     00348400
&ZMS              SETC  '&ZMS.=&DATATYPE"'                              00348500
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00348600
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00348700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00348800
.ZG49A3           ANOP  ,                                               00348900
.*----------------------------------------------------------------***   00349000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00349100
                  AIF   (N'&SOURCE LE 1).ZG51A  CK NUM                  00349200
&ZMS              SETC  '"SOURCE='                                      00349300
&ZMS              SETC  '&ZMS.&SOURCE"'                                 00349400
&ZMS              SETC  '&ZMS "SOURCE"'                                 00349500
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00349600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00349700
.ZG51A            ANOP  ,                                               00349800
.*-------------------------------------------------------------------   00349900
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00350000
&ZXSOURCE         SETC  'INPUT'     SET IN/OUTPUT                       00350100
&XSOURCE          SETC  'ANY'                                           00350200
                  AIF   (K'&SOURCE(1) LE 0).ZG51B  PARM                 00350300
&XSOURCE          SETC  '&SOURCE(1)'            SET XVARIABLE           00350400
                  AIF   (N'&SOURCE GT 1).ZG51B  MULTI                   00350500
&XSOURCE          SETC  '&SOURCE'   SET XVARIABLE                       00350600
.ZG51B            ANOP  ,                                               00350700
.*-------------------------------------------------------------------   00350800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00350900
                  AIF   (K'&ZXSOURCE LE 0).ZG51R  NOT I/O               00351000
         AIF   ('&XSOURCE' EQ 'ANY').ZG51R                              00351100
                  AIF   ('&XSOURCE'(1,1) NE '(').ZG51R                  00351200
&ZCGPR            SETC  '&XSOURCE'(2,K'&XSOURCE-2)                      00351300
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG51P                    00351400
                  AIF   (K'&ZCGPR GT 2).ZG51Q                           00351500
                  AIF   ('&ZCGPR' EQ '0').ZG51Q                         00351600
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00351700
                  AIF   (T'&ZCGPR NE 'N').ZG51Q  INVALID REG NAME       00351800
.ZG51P            ANOP  ,                                               00351900
                  AIF   (T'&ZCGPR NE 'N').ZG51R  NON NUMERIC            00352000
                  AIF   ('&ZCGPR' LT '2').ZG51Q                         00352100
                  AIF   ('&ZCGPR' LE '12').ZG51R                        00352200
.ZG51Q            ANOP  ,                                               00352300
&ZMS              SETC  '"SOURCE='                                      00352400
&ZMS              SETC  '&ZMS.&SOURCE"'                                 00352500
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00352600
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00352700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00352800
.ZG51R            ANOP  ,                                               00352900
.*-------------------------------------------------------------------   00353000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00353100
.ZG53             ANOP  ,                                               00353200
&ZTLC             SETC 'DETAIL'                                         00353300
                  AIF   ('&DATATYPE(1)' NE '&ZTLC').ZG57                00353400
&XDATATYPE        SETC  'DETAIL'    SET KEYWORD                         00353500
                  AIF   (N'&DATATYPE LE 1).ZG53A  CK NUM                00353600
&ZMS              SETC  '"DATATYPE='                                    00353700
&ZMS              SETC  '&ZMS.&DATATYPE"'                               00353800
&ZMS              SETC  '&ZMS "DATATYPE"'                               00353900
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00354000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00354100
.ZG53A            ANOP  ,                                               00354200
.*------------------------------------------------------------------    00354300
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00354400
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00354500
.ZG53A0           AIF   (K'&STATUS LE 0).ZG53A1  OK                     00354600
&ZCVAL            SETC '&ZCVAL STATUS'          INCORRECT KEY USED      00354700
.ZG53A1           AIF   (K'&SOURCE LE 0).ZG53A2  OK                     00354800
&ZCVAL            SETC '&ZCVAL SOURCE'          INCORRECT KEY USED      00354900
.ZG53A2           AIF   (K'&ZCVAL LE 0).ZG53A3  OK                      00355000
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00355100
&ZMS              SETC  '"DATATYPE'                                     00355200
&ZMS              SETC  '&ZMS.=&DATATYPE"'                              00355300
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00355400
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00355500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00355600
.ZG53A3           ANOP  ,                                               00355700
.*----------------------------------------------------------------***   00355800
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00355900
                  AIF   (N'&TOKEN LE 1).ZG55A   CK NUM                  00356000
&ZMS              SETC  '"TOKEN='                                       00356100
&ZMS              SETC  '&ZMS.&TOKEN"'                                  00356200
&ZMS              SETC  '&ZMS "TOKEN"'                                  00356300
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00356400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00356500
.ZG55A            ANOP  ,                                               00356600
.*-------------------------------------------------------------------   00356700
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00356800
&ZXTOKEN          SETC  'INPUT'     SET IN/OUTPUT                       00356900
&XTOKEN           SETC  '&TOKEN(1)'             SET XVARIABLE           00357000
                  AIF   (N'&TOKEN GT 1).ZG55B   MULTI                   00357100
&XTOKEN           SETC  '&TOKEN'    SET XVARIABLE                       00357200
.ZG55B            AIF   (K'&TOKEN(1) GT 0).ZG55C                        00357300
&ZXTOKEN          SETC  ''          RESET IN/OUTPUT                     00357400
&ZMS              SETC  ' '                                             00357500
&ZMS              SETC  '&ZMS "TOKEN" KEY AND ITS'                      00357600
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00357700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00357800
.ZG55C            ANOP  ,                                               00357900
.*-------------------------------------------------------------------   00358000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00358100
                  AIF   (K'&ZXTOKEN LE 0).ZG55R  NOT I/O                00358200
                  AIF   ('&XTOKEN'(1,1) NE '(').ZG55R                   00358300
&ZCGPR            SETC  '&XTOKEN'(2,K'&XTOKEN-2)                        00358400
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG55P                    00358500
                  AIF   (K'&ZCGPR GT 2).ZG55Q                           00358600
                  AIF   ('&ZCGPR' EQ '0').ZG55Q                         00358700
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00358800
                  AIF   (T'&ZCGPR NE 'N').ZG55Q  INVALID REG NAME       00358900
.ZG55P            ANOP  ,                                               00359000
                  AIF   (T'&ZCGPR NE 'N').ZG55R  NON NUMERIC            00359100
                  AIF   ('&ZCGPR' LT '2').ZG55Q                         00359200
                  AIF   ('&ZCGPR' LE '12').ZG55R                        00359300
.ZG55Q            ANOP  ,                                               00359400
&ZMS              SETC  '"TOKEN='                                       00359500
&ZMS              SETC  '&ZMS.&TOKEN"'                                  00359600
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00359700
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00359800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00359900
.ZG55R            ANOP  ,                                               00360000
.*------------------------------------------------------------------    00360100
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00360200
.ZG57             ANOP  ,                                               00360300
&ZXDATATYPE       SETC  'INPUT'     SET IN/OUTPUT                       00360400
                  AIF   (K'&XDATATYPE GT 0).ZG57E  VALID ARG            00360500
                  AIF   (T'&DATATYPE EQ 'O').ZG57D  OMITTED             00360600
&ZASYSLNDX        SETA  0                                               00360700
.ZG57A            ANOP  ,           POSITIONAL MACRO KEY                00360800
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00360900
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG57C                00361000
&ZTLC             SETC 'DATATYPE'                                       00361100
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG57A       00361200
.ZG57B            ANOP  ,                                               00361300
&ZXDATATYPE       SETC  ''          RESET IN/OUTPUT                     00361400
&ZMS              SETC  'THE "DATATYPE" KEY'                            00361500
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00361600
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00361700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00361800
                  AGO   .ZG57E                                          00361900
.ZG57C            ANOP  ,                                               00362000
&ZXDATATYPE       SETC  ''          RESET IN/OUTPUT                     00362100
&ZMS              SETC  '"DATATYPE='                                    00362200
&ZMS              SETC  '&ZMS.&DATATYPE"'                               00362300
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00362400
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00362500
&ZMS              SETC  '&ZMS "MSGOUT",'                                00362600
&ZMS              SETC  '&ZMS "MSGIN",'                                 00362700
&ZMS              SETC  '&ZMS OR "DETAIL".'                             00362800
                  MNOTE 8,' &ZMS '                                      00362900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00363000
                  AGO   .ZG57E                                          00363100
.ZG57D            ANOP  ,                                               00363200
&XDATATYPE        SETC  'MSGOUT'    SET DEFAULT KEYWORD                 00363300
.ZG57E            ANOP  ,                                               00363400
.*------------------------------------------------------------------    00363500
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00363600
                  AIF   (K'&DATATYPE(1) GT 0).ZG57F  PARM               00363700
&XDATATYPE        SETC  ''          ENSURE NULL KEYWORD                 00363800
&ZXDATATYPE       SETC  ''          RESET IN/OUTPUT                     00363900
&ZMS              SETC  'THE'                                           00364000
&ZMS              SETC  '&ZMS "DATATYPE" KEY AND ITS'                   00364100
&ZMS              SETC  '&ZMS ARGUMENT ARE REQUIRED.'                   00364200
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00364300
&ZMS              SETC  '&ZMS "MSGOUT",'                                00364400
&ZMS              SETC  '&ZMS "MSGIN",'                                 00364500
&ZMS              SETC  '&ZMS OR "DETAIL".'                             00364600
                  MNOTE 8,' &ZMS '                                      00364700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00364800
.ZG57F            ANOP  ,                                               00364900
.*----------------------------------------------------------------***   00365000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00365100
                  AIF   (N'&MQAALEVEL LE 1).ZG59A  CK NUM               00365200
&ZMS              SETC  '"MQAALEVEL='                                   00365300
&ZMS              SETC  '&ZMS.&MQAALEVEL"'                              00365400
&ZMS              SETC  '&ZMS "MQAALEVEL"'                              00365500
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00365600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00365700
.ZG59A            ANOP  ,                                               00365800
.*-------------------------------------------------------------------   00365900
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00366000
&ZXMQAALEVEL      SETC  'INPUT'     SET IN/OUTPUT                       00366100
&XMQAALEVEL       SETC  '0'                                             00366200
                  AIF   (K'&MQAALEVEL(1) LE 0).ZG59B  PARM              00366300
&XMQAALEVEL       SETC  '&MQAALEVEL(1)'         SET XVARIABLE           00366400
                  AIF   (N'&MQAALEVEL GT 1).ZG59B  MULTI                00366500
&XMQAALEVEL       SETC  '&MQAALEVEL'            SET XVARIABLE           00366600
.ZG59B            ANOP  ,                                               00366700
.*-------------------------------------------------------------------   00366800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00366900
                  AIF   (K'&ZXMQAALEVEL LE 0).ZG59R  NOT I/O            00367000
                  AIF   ('&XMQAALEVEL'(1,1) NE '(').ZG59R               00367100
&ZCGPR            SETC  '&XMQAALEVEL'(2,K'&XMQAALEVEL-2)                00367200
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG59P                    00367300
                  AIF   (K'&ZCGPR GT 2).ZG59Q                           00367400
                  AIF   ('&ZCGPR' EQ '0').ZG59Q                         00367500
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00367600
                  AIF   (T'&ZCGPR NE 'N').ZG59Q  INVALID REG NAME       00367700
.ZG59P            ANOP  ,                                               00367800
                  AIF   (T'&ZCGPR NE 'N').ZG59R  NON NUMERIC            00367900
                  AIF   ('&ZCGPR' LT '2').ZG59Q                         00368000
                  AIF   ('&ZCGPR' LE '12').ZG59R                        00368100
.ZG59Q            ANOP  ,                                               00368200
&ZMS              SETC  '"MQAALEVEL='                                   00368300
&ZMS              SETC  '&ZMS.&MQAALEVEL"'                              00368400
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00368500
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00368600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00368700
.ZG59R            ANOP  ,                                               00368800
.*----------------------------------------------------------------***   00368900
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00369000
                  AIF   (N'&MSGTAGFILTER LE 1).ZG62A  CK NUM            00369100
&ZMS              SETC  '"MSGTAGFILTER='                                00369200
&ZMS              SETC  '&ZMS.&MSGTAGFILTER"'                           00369300
&ZMS              SETC  '&ZMS "MSGTAGFILTER"'                           00369400
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00369500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00369600
.ZG62A            ANOP  ,                                               00369700
.*-------------------------------------------------------------------   00369800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00369900
&ZXMSGTAGFILTER   SETC  'INPUT'     SET IN/OUTPUT                       00370000
&XMSGTAGFILTER    SETC  'NO_MSGTAGFILTER'                               00370100
                  AIF   (K'&MSGTAGFILTER(1) LE 0).ZG62B  PARM           00370200
&XMSGTAGFILTER    SETC  '&MSGTAGFILTER(1)'      SET XVARIABLE           00370300
                  AIF   (N'&MSGTAGFILTER GT 1).ZG62B  MULTI             00370400
&XMSGTAGFILTER    SETC  '&MSGTAGFILTER'         SET XVARIABLE           00370500
.ZG62B            ANOP  ,                                               00370600
.*-------------------------------------------------------------------   00370700
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00370800
                  AIF   (K'&ZXMSGTAGFILTER LE 0).ZG62R  NOT I/O         00370900
         AIF   ('&XMSGTAGFILTER' EQ 'NO_MSGTAGFILTER').ZG62R            00371000
                  AIF   ('&XMSGTAGFILTER'(1,1) NE '(').ZG62R            00371100
&ZCGPR            SETC  '&XMSGTAGFILTER'(2,K'&XMSGTAGFILTER-2)          00371200
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG62P                    00371300
                  AIF   (K'&ZCGPR GT 2).ZG62Q                           00371400
                  AIF   ('&ZCGPR' EQ '0').ZG62Q                         00371500
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00371600
                  AIF   (T'&ZCGPR NE 'N').ZG62Q  INVALID REG NAME       00371700
.ZG62P            ANOP  ,                                               00371800
                  AIF   (T'&ZCGPR NE 'N').ZG62R  NON NUMERIC            00371900
                  AIF   ('&ZCGPR' LT '2').ZG62Q                         00372000
                  AIF   ('&ZCGPR' LE '12').ZG62R                        00372100
.ZG62Q            ANOP  ,                                               00372200
&ZMS              SETC  '"MSGTAGFILTER='                                00372300
&ZMS              SETC  '&ZMS.&MSGTAGFILTER"'                           00372400
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00372500
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00372600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00372700
.ZG62R            ANOP  ,                                               00372800
.*----------------------------------------------------------------***   00372900
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00373000
                  AIF   (N'&MSGTAGMASK LE 1).ZG64A  CK NUM              00373100
&ZMS              SETC  '"MSGTAGMASK='                                  00373200
&ZMS              SETC  '&ZMS.&MSGTAGMASK"'                             00373300
&ZMS              SETC  '&ZMS "MSGTAGMASK"'                             00373400
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00373500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00373600
.ZG64A            ANOP  ,                                               00373700
.*-------------------------------------------------------------------   00373800
.***AG.KXVAR17 NAME, OPT INPUT, KEYS -XVARIABLE                         00373900
&XMSGTAGMASK      SETC  'ALL'       SET DEFAULT                         00374000
                  AIF   (K'&MSGTAGMASK(1) LE 0).ZG64C  PARM             00374100
&XMSGTAGMASK      SETC  '&MSGTAGMASK(1)'        SET XVARIABLE           00374200
                  AIF   (N'&MSGTAGMASK GT 1).ZG64B  MULTI               00374300
&XMSGTAGMASK      SETC  '&MSGTAGMASK'           SET XVARIABLE           00374400
.ZG64B            AIF   (K'&MSGTAGFILTER(1) GT 0).ZG64C  KEY            00374500
&ZMS              SETC  '"MSGTAGMASK'                                   00374600
&ZMS              SETC  '&ZMS.=&MSGTAGMASK"'                            00374700
&ZMS              SETC  '&ZMS CAN ONLY BE SPECIFIED IF'                 00374800
&ZMS              SETC  '&ZMS '                                         00374900
&ZMS              SETC  '&ZMS "MSGTAGFILTER"'                           00375000
                  MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                    00375100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00375200
.ZG64C            ANOP  ,                                               00375300
&ZXMSGTAGMASK     SETC  'INPUT'     SET IN/OUTPUT                       00375400
.*-------------------------------------------------------------------   00375500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00375600
                  AIF   (K'&ZXMSGTAGMASK LE 0).ZG64R  NOT I/O           00375700
         AIF   ('&XMSGTAGMASK' EQ 'ALL').ZG64R                          00375800
                  AIF   ('&XMSGTAGMASK'(1,1) NE '(').ZG64R              00375900
&ZCGPR            SETC  '&XMSGTAGMASK'(2,K'&XMSGTAGMASK-2)              00376000
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG64P                    00376100
                  AIF   (K'&ZCGPR GT 2).ZG64Q                           00376200
                  AIF   ('&ZCGPR' EQ '0').ZG64Q                         00376300
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00376400
                  AIF   (T'&ZCGPR NE 'N').ZG64Q  INVALID REG NAME       00376500
.ZG64P            ANOP  ,                                               00376600
                  AIF   (T'&ZCGPR NE 'N').ZG64R  NON NUMERIC            00376700
                  AIF   ('&ZCGPR' LT '2').ZG64Q                         00376800
                  AIF   ('&ZCGPR' LE '12').ZG64R                        00376900
.ZG64Q            ANOP  ,                                               00377000
&ZMS              SETC  '"MSGTAGMASK='                                  00377100
&ZMS              SETC  '&ZMS.&MSGTAGMASK"'                             00377200
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00377300
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00377400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00377500
.ZG64R            ANOP  ,                                               00377600
.*----------------------------------------------------------------***   00377700
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00377800
                  AIF   (N'&ANSAREA LE 1).ZG68A  CK NUM                 00377900
&ZMS              SETC  '"ANSAREA='                                     00378000
&ZMS              SETC  '&ZMS.&ANSAREA"'                                00378100
&ZMS              SETC  '&ZMS "ANSAREA"'                                00378200
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00378300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00378400
.ZG68A            ANOP  ,                                               00378500
.*-------------------------------------------------------------------   00378600
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00378700
&ZXANSAREA        SETC  'OUTPUT'    SET IN/OUTPUT                       00378800
&XANSAREA         SETC  '&ANSAREA(1)'           SET XVARIABLE           00378900
                  AIF   (N'&ANSAREA GT 1).ZG68B  MULTI                  00379000
&XANSAREA         SETC  '&ANSAREA'  SET XVARIABLE                       00379100
.ZG68B            AIF   (K'&ANSAREA(1) GT 0).ZG68C                      00379200
&ZXANSAREA        SETC  ''          RESET IN/OUTPUT                     00379300
&ZMS              SETC  ' '                                             00379400
&ZMS              SETC  '&ZMS "ANSAREA" KEY AND ITS'                    00379500
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00379600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00379700
.ZG68C            ANOP  ,                                               00379800
.*-------------------------------------------------------------------   00379900
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00380000
                  AIF   (K'&ZXANSAREA LE 0).ZG68R  NOT I/O              00380100
                  AIF   ('&XANSAREA'(1,1) NE '(').ZG68R                 00380200
&ZCGPR            SETC  '&XANSAREA'(2,K'&XANSAREA-2)                    00380300
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG68P                    00380400
                  AIF   (K'&ZCGPR GT 2).ZG68Q                           00380500
                  AIF   ('&ZCGPR' EQ '0').ZG68Q                         00380600
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00380700
                  AIF   (T'&ZCGPR NE 'N').ZG68Q  INVALID REG NAME       00380800
.ZG68P            ANOP  ,                                               00380900
                  AIF   (T'&ZCGPR NE 'N').ZG68R  NON NUMERIC            00381000
                  AIF   ('&ZCGPR' LT '2').ZG68Q                         00381100
                  AIF   ('&ZCGPR' LE '12').ZG68R                        00381200
.ZG68Q            ANOP  ,                                               00381300
&ZMS              SETC  '"ANSAREA='                                     00381400
&ZMS              SETC  '&ZMS.&ANSAREA"'                                00381500
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00381600
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00381700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00381800
.ZG68R            ANOP  ,                                               00381900
.*----------------------------------------------------------------***   00382000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00382100
                  AIF   (N'&ANSLEN LE 1).ZG71A  CK NUM                  00382200
&ZMS              SETC  '"ANSLEN='                                      00382300
&ZMS              SETC  '&ZMS.&ANSLEN"'                                 00382400
&ZMS              SETC  '&ZMS "ANSLEN"'                                 00382500
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00382600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00382700
.ZG71A            ANOP  ,                                               00382800
.*-------------------------------------------------------------------   00382900
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00383000
&ZXANSLEN         SETC  'INPUT'     SET IN/OUTPUT                       00383100
&XANSLEN          SETC  '&ANSLEN(1)'            SET XVARIABLE           00383200
                  AIF   (N'&ANSLEN GT 1).ZG71B  MULTI                   00383300
&XANSLEN          SETC  '&ANSLEN'   SET XVARIABLE                       00383400
.ZG71B            AIF   (K'&ANSLEN(1) GT 0).ZG71C                       00383500
&ZXANSLEN         SETC  ''          RESET IN/OUTPUT                     00383600
&ZMS              SETC  ' '                                             00383700
&ZMS              SETC  '&ZMS "ANSLEN" KEY AND ITS'                     00383800
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00383900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00384000
.ZG71C            ANOP  ,                                               00384100
.*-------------------------------------------------------------------   00384200
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00384300
                  AIF   (K'&ZXANSLEN LE 0).ZG71R  NOT I/O               00384400
                  AIF   ('&XANSLEN'(1,1) NE '(').ZG71R                  00384500
&ZCGPR            SETC  '&XANSLEN'(2,K'&XANSLEN-2)                      00384600
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG71P                    00384700
                  AIF   (K'&ZCGPR GT 2).ZG71Q                           00384800
                  AIF   ('&ZCGPR' EQ '0').ZG71Q                         00384900
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00385000
                  AIF   (T'&ZCGPR NE 'N').ZG71Q  INVALID REG NAME       00385100
.ZG71P            ANOP  ,                                               00385200
                  AIF   (T'&ZCGPR NE 'N').ZG71R  NON NUMERIC            00385300
                  AIF   ('&ZCGPR' LT '2').ZG71Q                         00385400
                  AIF   ('&ZCGPR' LE '12').ZG71R                        00385500
.ZG71Q            ANOP  ,                                               00385600
&ZMS              SETC  '"ANSLEN='                                      00385700
&ZMS              SETC  '&ZMS.&ANSLEN"'                                 00385800
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00385900
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00386000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00386100
.ZG71R            ANOP  ,                                               00386200
.*-------------------------------------------------------------------   00386300
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00386400
.ZG73             ANOP  ,                                               00386500
&ZTLC             SETC 'COMPLETION'                                     00386600
                  AIF   ('&REQUEST(1)' NE '&ZTLC').ZG88                 00386700
&XREQUEST         SETC  'COMPLETION'            SET KEYWORD             00386800
                  AIF   (N'&REQUEST LE 1).ZG73A  CK NUM                 00386900
&ZMS              SETC  '"REQUEST='                                     00387000
&ZMS              SETC  '&ZMS.&REQUEST"'                                00387100
&ZMS              SETC  '&ZMS "REQUEST"'                                00387200
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00387300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00387400
.ZG73A            ANOP  ,                                               00387500
.*------------------------------------------------------------------    00387600
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00387700
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00387800
.ZG73A0           AIF   (K'&RETMSGTOKEN LE 0).ZG73A1  OK                00387900
&ZCVAL            SETC '&ZCVAL RETMSGTOKEN'     INCORRECT KEY USED      00388000
.ZG73A1           AIF   (K'&HOLDTIME LE 0).ZG73A2  OK                   00388100
&ZCVAL            SETC '&ZCVAL HOLDTIME'        INCORRECT KEY USED      00388200
.ZG73A2           AIF   (K'&TIME LE 0).ZG73A3   OK                      00388300
&ZCVAL            SETC '&ZCVAL TIME'            INCORRECT KEY USED      00388400
.ZG73A3           AIF   (K'&MSGTAG LE 0).ZG73A4  OK                     00388500
&ZCVAL            SETC '&ZCVAL MSGTAG'          INCORRECT KEY USED      00388600
.ZG73A4           AIF   (K'&DATATYPE LE 0).ZG73A5  OK                   00388700
&ZCVAL            SETC '&ZCVAL DATATYPE'        INCORRECT KEY USED      00388800
.ZG73A5           AIF   (K'&STATUS LE 0).ZG73A6  OK                     00388900
&ZCVAL            SETC '&ZCVAL STATUS'          INCORRECT KEY USED      00389000
.ZG73A6           AIF   (K'&SOURCE LE 0).ZG73A7  OK                     00389100
&ZCVAL            SETC '&ZCVAL SOURCE'          INCORRECT KEY USED      00389200
.ZG73A7           AIF   (K'&MQAALEVEL LE 0).ZG73A8  OK                  00389300
&ZCVAL            SETC '&ZCVAL MQAALEVEL'       INCORRECT KEY USED      00389400
.ZG73A8           AIF   (K'&MSGTAGFILTER LE 0).ZG73A9  OK               00389500
&ZCVAL            SETC '&ZCVAL MSGTAGFILTER'    INCORRECT KEY USED      00389600
.ZG73A9           AIF   (K'&MSGTAGMASK LE 0).ZG73A10  OK                00389700
&ZCVAL            SETC '&ZCVAL MSGTAGMASK'      INCORRECT KEY USED      00389800
.ZG73A10          AIF   (K'&ANSAREA LE 0).ZG73A11  OK                   00389900
&ZCVAL            SETC '&ZCVAL ANSAREA'         INCORRECT KEY USED      00390000
.ZG73A11          AIF   (K'&ANSLEN LE 0).ZG73A12  OK                    00390100
&ZCVAL            SETC '&ZCVAL ANSLEN'          INCORRECT KEY USED      00390200
.ZG73A12          AIF   (K'&NOTIFYEXIT LE 0).ZG73A13  OK                00390300
&ZCVAL            SETC '&ZCVAL NOTIFYEXIT'      INCORRECT KEY USED      00390400
.ZG73A13          AIF   (K'&MSGEXIT LE 0).ZG73A14  OK                   00390500
&ZCVAL            SETC '&ZCVAL MSGEXIT'         INCORRECT KEY USED      00390600
.ZG73A14          AIF   (K'&EXITPARMS LE 0).ZG73A15  OK                 00390700
&ZCVAL            SETC '&ZCVAL EXITPARMS'       INCORRECT KEY USED      00390800
.ZG73A15          AIF   (K'&ZCVAL LE 0).ZG73A16  OK                     00390900
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00391000
&ZMS              SETC  '"REQUEST'                                      00391100
&ZMS              SETC  '&ZMS.=&REQUEST"'                               00391200
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00391300
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00391400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00391500
.ZG73A16          ANOP  ,                                               00391600
.*------------------------------------------------------------------    00391700
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00391800
&XTYPE            SETC  ''          INITIALIZE XVARIABLE                00391900
.*-------------------------------------------------------------------   00392000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00392100
.ZG76             ANOP  ,                                               00392200
                  AIF   (K'&TYPE(1) LE 0).ZG76A                         00392300
&ZTLC             SETC 'FORCE'                                          00392400
                  AIF   ('&TYPE(1)' NE '&ZTLC').ZG77                    00392500
&XTYPE            SETC  'FORCE'     SET KEYWORD                         00392600
                  AIF   (N'&TYPE LE 1).ZG76A    CK NUM                  00392700
&ZMS              SETC  '"TYPE='                                        00392800
&ZMS              SETC  '&ZMS.&TYPE"'                                   00392900
&ZMS              SETC  '&ZMS "TYPE"'                                   00393000
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00393100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00393200
.ZG76A            ANOP  ,                                               00393300
.*------------------------------------------------------------------    00393400
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00393500
.ZG77             ANOP  ,                                               00393600
&ZXTYPE           SETC  'INPUT'     SET IN/OUTPUT                       00393700
                  AIF   (K'&XTYPE GT 0).ZG77E   VALID ARG               00393800
                  AIF   (T'&TYPE EQ 'O').ZG77D  OMITTED                 00393900
&ZASYSLNDX        SETA  0                                               00394000
.ZG77A            ANOP  ,           POSITIONAL MACRO KEY                00394100
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00394200
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG77C                00394300
&ZTLC             SETC 'TYPE'                                           00394400
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG77A       00394500
.ZG77B            ANOP  ,                                               00394600
&ZXTYPE           SETC  ''          RESET IN/OUTPUT                     00394700
&ZMS              SETC  'THE "TYPE" KEY'                                00394800
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00394900
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00395000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00395100
                  AGO   .ZG77E                                          00395200
.ZG77C            ANOP  ,                                               00395300
&ZXTYPE           SETC  ''          RESET IN/OUTPUT                     00395400
&ZMS              SETC  '"TYPE='                                        00395500
&ZMS              SETC  '&ZMS.&TYPE"'                                   00395600
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00395700
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00395800
&ZMS              SETC  '&ZMS "FORCE".'                                 00395900
                  MNOTE 8,' &ZMS '                                      00396000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00396100
                  AGO   .ZG77E                                          00396200
.ZG77D            ANOP  ,                                               00396300
&XTYPE            SETC  'FORCE'     SET DEFAULT KEYWORD                 00396400
.ZG77E            ANOP  ,                                               00396500
.*------------------------------------------------------------------    00396600
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00396700
                  AIF   (K'&TYPE(1) GT 0).ZG77F  PARM                   00396800
&XTYPE            SETC  ''          ENSURE NULL KEYWORD                 00396900
&ZXTYPE           SETC  ''          RESET IN/OUTPUT                     00397000
&ZMS              SETC  'THE'                                           00397100
&ZMS              SETC  '&ZMS "TYPE" KEY AND ITS'                       00397200
&ZMS              SETC  '&ZMS ARGUMENT ARE REQUIRED.'                   00397300
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00397400
&ZMS              SETC  '&ZMS "FORCE".'                                 00397500
                  MNOTE 8,' &ZMS '                                      00397600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00397700
.ZG77F            ANOP  ,                                               00397800
.*----------------------------------------------------------------***   00397900
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00398000
&XMSGTOKENTYPE    SETC  ''          INITIALIZE XVARIABLE                00398100
                  AIF   (K'&TOKEN LE 0).ZG79C                           00398200
&ZXMSGTOKENTYPE   SETC  'INPUT'     SET IN/OUTPUT                       00398300
&XMSGTOKENTYPE    SETC  'TOKEN'     SET XVARIABLE                       00398400
&ZXTOKEN          SETC  'INPUT'     SET IN/OUTPUT                       00398500
&XTOKEN           SETC  '&TOKEN(1)'             SET XVARIABLE PARM      00398600
                  AIF   (N'&TOKEN GT 1).ZG79A                           00398700
&XTOKEN           SETC  '&TOKEN'    SET XVARIABLE PARM                  00398800
.ZG79A            AIF   (N'&TOKEN LE 1).ZG79B   CK NUM                  00398900
&ZMS              SETC  '"TOKEN='                                       00399000
&ZMS              SETC  '&ZMS.&TOKEN"'                                  00399100
&ZMS              SETC  '&ZMS "TOKEN"'                                  00399200
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00399300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00399400
.ZG79B            AIF   (K'&XTOKEN GT 0).ZG79C  ONE PARM                00399500
&ZXMSGTOKENTYPE   SETC  ''          RESET IN/OUTPUT                     00399600
&ZXTOKEN          SETC  ''          RESET IN/OUTPUT                     00399700
&ZMS              SETC  ' '                                             00399800
&ZMS              SETC  '&ZMS "TOKEN" KEY AND ITS'                      00399900
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00400000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00400100
.ZG79C            ANOP  ,                                               00400200
.*----------------------------------------------------------------***   00400300
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00400400
                  AIF   (K'&SENDTOKEN LE 0).ZG86D  NO ME KEY            00400500
                  AIF   (N'&SENDTOKEN LE 1).ZG86A  CK NUM               00400600
&ZMS              SETC  '"SENDTOKEN='                                   00400700
&ZMS              SETC  '&ZMS.&SENDTOKEN"'                              00400800
&ZMS              SETC  '&ZMS "SENDTOKEN"'                              00400900
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00401000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00401100
.ZG86A            AIF   (K'&XMSGTOKENTYPE LE 0).ZG86B                   00401200
&ZMS              SETC  '"SENDTOKEN'                                    00401300
&ZMS              SETC  '&ZMS.=&SENDTOKEN"'                             00401400
&ZMS              SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'           00401500
&ZMS              SETC  '&ZMS "&XMSGTOKENTYPE"'                         00401600
                  MNOTE 8,' &ZMS KEY.'                                  00401700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00401800
                  AGO   .ZG86D                                          00401900
.*                                                                      00402000
.ZG86B            ANOP  ,                                               00402100
&ZXMSGTOKENTYPE   SETC  'INPUT'     SET IN/OUTPUT                       00402200
&XMSGTOKENTYPE    SETC  'SENDTOKEN'             SET XVARIABLE           00402300
&ZXSENDTOKEN      SETC  'INPUT'     SET IN/OUTPUT                       00402400
&XSENDTOKEN       SETC  '&SENDTOKEN(1)'         SET XVARIABLE PARM      00402500
                  AIF   (N'&SENDTOKEN GT 1).ZG86C                       00402600
&XSENDTOKEN       SETC  '&SENDTOKEN'            SET XVARIABLE PARM      00402700
.ZG86C            AIF   (K'&XSENDTOKEN GT 0).ZG86D  ONE PARM            00402800
&ZXMSGTOKENTYPE   SETC  ''          RESET IN/OUTPUT                     00402900
&ZXSENDTOKEN      SETC  ''          RESET IN/OUTPUT                     00403000
&ZMS              SETC  ' '                                             00403100
&ZMS              SETC  '&ZMS "SENDTOKEN" KEY AND ITS'                  00403200
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00403300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00403400
.ZG86D            ANOP  ,                                               00403500
.*------------------------------------------------------------------    00403600
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           00403700
                  AIF   (K'&XMSGTOKENTYPE GT 0).ZG87B                   00403800
&ZXMSGTOKENTYPE   SETC  ''          RESET IN/OUTPUT                     00403900
&ZXTOKEN          SETC  ''          RESET IN/OUTPUT                     00404000
&XMSGTOKENTYPE    SETC  ''          ENSURE NULL                         00404100
&XTOKEN           SETC  ''          ENSURE NULL                         00404200
&ZMS              SETC  'ONE OF THE FOLLOWING'                          00404300
&ZMS              SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'             00404400
&ZMS              SETC  '&ZMS REQUIRED:'                                00404500
&ZMS              SETC  '&ZMS "TOKEN"'          VALID ME KEY            00404600
&ZMS              SETC  '&ZMS OR "SENDTOKEN".'  VALID ME KEY            00404700
                  MNOTE 8,' &ZMS '                                      00404800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00404900
.ZG87B            ANOP  ,                                               00405000
.*-------------------------------------------------------------------   00405100
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00405200
.ZG79ZY  AIF    ('&XMSGTOKENTYPE' NE 'TOKEN').ZG86ZY                    00405300
.*-------------------------------------------------------------------   00405400
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00405500
                  AIF   (K'&ZXTOKEN LE 0).ZG79R  NOT I/O                00405600
                  AIF   ('&XTOKEN'(1,1) NE '(').ZG79R                   00405700
&ZCGPR            SETC  '&XTOKEN'(2,K'&XTOKEN-2)                        00405800
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG79P                    00405900
                  AIF   (K'&ZCGPR GT 2).ZG79Q                           00406000
                  AIF   ('&ZCGPR' EQ '0').ZG79Q                         00406100
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00406200
                  AIF   (T'&ZCGPR NE 'N').ZG79Q  INVALID REG NAME       00406300
.ZG79P            ANOP  ,                                               00406400
                  AIF   (T'&ZCGPR NE 'N').ZG79R  NON NUMERIC            00406500
                  AIF   ('&ZCGPR' LT '2').ZG79Q                         00406600
                  AIF   ('&ZCGPR' LE '12').ZG79R                        00406700
.ZG79Q            ANOP  ,                                               00406800
&ZMS              SETC  '"TOKEN='                                       00406900
&ZMS              SETC  '&ZMS.&TOKEN"'                                  00407000
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00407100
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00407200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00407300
.ZG79R            ANOP  ,                                               00407400
.*----------------------------------------------------------------***   00407500
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00407600
                  AIF   (N'&MEMTOKEN LE 1).ZG81A  CK NUM                00407700
&ZMS              SETC  '"MEMTOKEN='                                    00407800
&ZMS              SETC  '&ZMS.&MEMTOKEN"'                               00407900
&ZMS              SETC  '&ZMS "MEMTOKEN"'                               00408000
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00408100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00408200
.ZG81A            ANOP  ,                                               00408300
.*-------------------------------------------------------------------   00408400
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00408500
&ZXMEMTOKEN       SETC  'INPUT'     SET IN/OUTPUT                       00408600
&XMEMTOKEN        SETC  '&MEMTOKEN(1)'          SET XVARIABLE           00408700
                  AIF   (N'&MEMTOKEN GT 1).ZG81B  MULTI                 00408800
&XMEMTOKEN        SETC  '&MEMTOKEN'             SET XVARIABLE           00408900
.ZG81B            AIF   (K'&MEMTOKEN(1) GT 0).ZG81C                     00409000
&ZXMEMTOKEN       SETC  ''          RESET IN/OUTPUT                     00409100
&ZMS              SETC  ' '                                             00409200
&ZMS              SETC  '&ZMS "MEMTOKEN" KEY AND ITS'                   00409300
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00409400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00409500
.ZG81C            ANOP  ,                                               00409600
.*-------------------------------------------------------------------   00409700
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00409800
                  AIF   (K'&ZXMEMTOKEN LE 0).ZG81R  NOT I/O             00409900
                  AIF   ('&XMEMTOKEN'(1,1) NE '(').ZG81R                00410000
&ZCGPR            SETC  '&XMEMTOKEN'(2,K'&XMEMTOKEN-2)                  00410100
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG81P                    00410200
                  AIF   (K'&ZCGPR GT 2).ZG81Q                           00410300
                  AIF   ('&ZCGPR' EQ '0').ZG81Q                         00410400
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00410500
                  AIF   (T'&ZCGPR NE 'N').ZG81Q  INVALID REG NAME       00410600
.ZG81P            ANOP  ,                                               00410700
                  AIF   (T'&ZCGPR NE 'N').ZG81R  NON NUMERIC            00410800
                  AIF   ('&ZCGPR' LT '2').ZG81Q                         00410900
                  AIF   ('&ZCGPR' LE '12').ZG81R                        00411000
.ZG81Q            ANOP  ,                                               00411100
&ZMS              SETC  '"MEMTOKEN='                                    00411200
&ZMS              SETC  '&ZMS.&MEMTOKEN"'                               00411300
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00411400
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00411500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00411600
.ZG81R            ANOP  ,                                               00411700
.*----------------------------------------------------------------***   00411800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00411900
                  AIF   (N'&USERDATA LE 1).ZG84A  CK NUM                00412000
&ZMS              SETC  '"USERDATA='                                    00412100
&ZMS              SETC  '&ZMS.&USERDATA"'                               00412200
&ZMS              SETC  '&ZMS "USERDATA"'                               00412300
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00412400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00412500
.ZG84A            ANOP  ,                                               00412600
.*-------------------------------------------------------------------   00412700
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00412800
&ZXUSERDATA       SETC  'INPUT'     SET IN/OUTPUT                       00412900
&XUSERDATA        SETC  'NO_CHANGE'                                     00413000
                  AIF   (K'&USERDATA(1) LE 0).ZG84B  PARM               00413100
&XUSERDATA        SETC  '&USERDATA(1)'          SET XVARIABLE           00413200
                  AIF   (N'&USERDATA GT 1).ZG84B  MULTI                 00413300
&XUSERDATA        SETC  '&USERDATA'             SET XVARIABLE           00413400
.ZG84B            ANOP  ,                                               00413500
.*-------------------------------------------------------------------   00413600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00413700
                  AIF   (K'&ZXUSERDATA LE 0).ZG84R  NOT I/O             00413800
         AIF   ('&XUSERDATA' EQ 'NO_CHANGE').ZG84R                      00413900
                  AIF   ('&XUSERDATA'(1,1) NE '(').ZG84R                00414000
&ZCGPR            SETC  '&XUSERDATA'(2,K'&XUSERDATA-2)                  00414100
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG84P                    00414200
                  AIF   (K'&ZCGPR GT 2).ZG84Q                           00414300
                  AIF   ('&ZCGPR' EQ '0').ZG84Q                         00414400
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00414500
                  AIF   (T'&ZCGPR NE 'N').ZG84Q  INVALID REG NAME       00414600
.ZG84P            ANOP  ,                                               00414700
                  AIF   (T'&ZCGPR NE 'N').ZG84R  NON NUMERIC            00414800
                  AIF   ('&ZCGPR' LT '2').ZG84Q                         00414900
                  AIF   ('&ZCGPR' LE '12').ZG84R                        00415000
.ZG84Q            ANOP  ,                                               00415100
&ZMS              SETC  '"USERDATA='                                    00415200
&ZMS              SETC  '&ZMS.&USERDATA"'                               00415300
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00415400
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00415500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00415600
.ZG84R            ANOP  ,                                               00415700
.*-------------------------------------------------------------------   00415800
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00415900
.ZG86ZY  AIF    ('&XMSGTOKENTYPE' NE 'SENDTOKEN').ZG87ZY                00416000
.*-------------------------------------------------------------------   00416100
.***AG.KMEKY14 NAME, RQD INPUT, ME KEYS -DISALLOWED KEYS                00416200
&ZCVAL            SETC ''           ERROR KEY FIELD                     00416300
.ZG86I0           AIF   (K'&MEMTOKEN LE 0).ZG86I1                       00416400
&ZCVAL            SETC '&ZCVAL MEMTOKEN'        DISALLOWED KEY          00416500
.ZG86I1           AIF   (K'&USERDATA LE 0).ZG86I2                       00416600
&ZCVAL            SETC '&ZCVAL USERDATA'        DISALLOWED KEY          00416700
.ZG86I2           AIF   (K'&ZCVAL LE 0).ZG86J   KEY                     00416800
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00416900
&ZMS              SETC  '"SENDTOKEN'                                    00417000
&ZMS              SETC  '&ZMS.=&SENDTOKEN"'                             00417100
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00417200
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00417300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00417400
.ZG86J            ANOP  ,                                               00417500
.*-------------------------------------------------------------------   00417600
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00417700
                  AIF   (K'&ZXSENDTOKEN LE 0).ZG86R  NOT I/O            00417800
                  AIF   ('&XSENDTOKEN'(1,1) NE '(').ZG86R               00417900
&ZCGPR            SETC  '&XSENDTOKEN'(2,K'&XSENDTOKEN-2)                00418000
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG86P                    00418100
                  AIF   (K'&ZCGPR GT 2).ZG86Q                           00418200
                  AIF   ('&ZCGPR' EQ '0').ZG86Q                         00418300
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00418400
                  AIF   (T'&ZCGPR NE 'N').ZG86Q  INVALID REG NAME       00418500
.ZG86P            ANOP  ,                                               00418600
                  AIF   (T'&ZCGPR NE 'N').ZG86R  NON NUMERIC            00418700
                  AIF   ('&ZCGPR' LT '2').ZG86Q                         00418800
                  AIF   ('&ZCGPR' LE '12').ZG86R                        00418900
.ZG86Q            ANOP  ,                                               00419000
&ZMS              SETC  '"SENDTOKEN='                                   00419100
&ZMS              SETC  '&ZMS.&SENDTOKEN"'                              00419200
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00419300
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00419400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00419500
.ZG86R            ANOP  ,                                               00419600
.*-------------------------------------------------------------------   00419700
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            00419800
.ZG87ZY           ANOP ,            END MUTUALLY EXCLUSIVE KEYS         00419900
.*-------------------------------------------------------------------   00420000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00420100
.ZG88             ANOP  ,                                               00420200
&ZTLC             SETC 'CALLEXIT'                                       00420300
                  AIF   ('&REQUEST(1)' NE '&ZTLC').ZG102                00420400
&XREQUEST         SETC  'CALLEXIT'  SET KEYWORD                         00420500
                  AIF   (N'&REQUEST LE 1).ZG88A  CK NUM                 00420600
&ZMS              SETC  '"REQUEST='                                     00420700
&ZMS              SETC  '&ZMS.&REQUEST"'                                00420800
&ZMS              SETC  '&ZMS "REQUEST"'                                00420900
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00421000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00421100
.ZG88A            ANOP  ,                                               00421200
.*------------------------------------------------------------------    00421300
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00421400
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00421500
.ZG88A0           AIF   (K'&USERDATA LE 0).ZG88A1  OK                   00421600
&ZCVAL            SETC '&ZCVAL USERDATA'        INCORRECT KEY USED      00421700
.ZG88A1           AIF   (K'&RETMSGTOKEN LE 0).ZG88A2  OK                00421800
&ZCVAL            SETC '&ZCVAL RETMSGTOKEN'     INCORRECT KEY USED      00421900
.ZG88A2           AIF   (K'&HOLDTIME LE 0).ZG88A3  OK                   00422000
&ZCVAL            SETC '&ZCVAL HOLDTIME'        INCORRECT KEY USED      00422100
.ZG88A3           AIF   (K'&TIME LE 0).ZG88A4   OK                      00422200
&ZCVAL            SETC '&ZCVAL TIME'            INCORRECT KEY USED      00422300
.ZG88A4           AIF   (K'&MSGTAG LE 0).ZG88A5  OK                     00422400
&ZCVAL            SETC '&ZCVAL MSGTAG'          INCORRECT KEY USED      00422500
.ZG88A5           AIF   (K'&SENDTOKEN LE 0).ZG88A6  OK                  00422600
&ZCVAL            SETC '&ZCVAL SENDTOKEN'       INCORRECT KEY USED      00422700
.ZG88A6           AIF   (K'&DATATYPE LE 0).ZG88A7  OK                   00422800
&ZCVAL            SETC '&ZCVAL DATATYPE'        INCORRECT KEY USED      00422900
.ZG88A7           AIF   (K'&STATUS LE 0).ZG88A8  OK                     00423000
&ZCVAL            SETC '&ZCVAL STATUS'          INCORRECT KEY USED      00423100
.ZG88A8           AIF   (K'&SOURCE LE 0).ZG88A9  OK                     00423200
&ZCVAL            SETC '&ZCVAL SOURCE'          INCORRECT KEY USED      00423300
.ZG88A9           AIF   (K'&MQAALEVEL LE 0).ZG88A10  OK                 00423400
&ZCVAL            SETC '&ZCVAL MQAALEVEL'       INCORRECT KEY USED      00423500
.ZG88A10          AIF   (K'&MSGTAGFILTER LE 0).ZG88A11  OK              00423600
&ZCVAL            SETC '&ZCVAL MSGTAGFILTER'    INCORRECT KEY USED      00423700
.ZG88A11          AIF   (K'&MSGTAGMASK LE 0).ZG88A12  OK                00423800
&ZCVAL            SETC '&ZCVAL MSGTAGMASK'      INCORRECT KEY USED      00423900
.ZG88A12          AIF   (K'&ANSAREA LE 0).ZG88A13  OK                   00424000
&ZCVAL            SETC '&ZCVAL ANSAREA'         INCORRECT KEY USED      00424100
.ZG88A13          AIF   (K'&ANSLEN LE 0).ZG88A14  OK                    00424200
&ZCVAL            SETC '&ZCVAL ANSLEN'          INCORRECT KEY USED      00424300
.ZG88A14          AIF   (K'&TYPE LE 0).ZG88A15  OK                      00424400
&ZCVAL            SETC '&ZCVAL TYPE'            INCORRECT KEY USED      00424500
.ZG88A15          AIF   (K'&ZCVAL LE 0).ZG88A16  OK                     00424600
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00424700
&ZMS              SETC  '"REQUEST'                                      00424800
&ZMS              SETC  '&ZMS.=&REQUEST"'                               00424900
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00425000
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00425100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00425200
.ZG88A16          ANOP  ,                                               00425300
.*----------------------------------------------------------------***   00425400
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00425500
&XCALL            SETC  ''          INITIALIZE XVARIABLE                00425600
                  AIF   (K'&NOTIFYEXIT LE 0).ZG90C                      00425700
&ZXCALL           SETC  'INPUT'     SET IN/OUTPUT                       00425800
&XCALL            SETC  'NOTIFYEXIT'            SET XVARIABLE           00425900
&ZXNOTIFYEXIT     SETC  'INPUT'     SET IN/OUTPUT                       00426000
&XNOTIFYEXIT      SETC  '&NOTIFYEXIT(1)'        SET XVARIABLE PARM      00426100
                  AIF   (N'&NOTIFYEXIT GT 1).ZG90A                      00426200
&XNOTIFYEXIT      SETC  '&NOTIFYEXIT'           SET XVARIABLE PARM      00426300
.ZG90A            AIF   (N'&NOTIFYEXIT LE 1).ZG90B  CK NUM              00426400
&ZMS              SETC  '"NOTIFYEXIT='                                  00426500
&ZMS              SETC  '&ZMS.&NOTIFYEXIT"'                             00426600
&ZMS              SETC  '&ZMS "NOTIFYEXIT"'                             00426700
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00426800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00426900
.ZG90B            AIF   (K'&XNOTIFYEXIT GT 0).ZG90C  ONE PARM           00427000
&ZXCALL           SETC  ''          RESET IN/OUTPUT                     00427100
&ZXNOTIFYEXIT     SETC  ''          RESET IN/OUTPUT                     00427200
&ZMS              SETC  ' '                                             00427300
&ZMS              SETC  '&ZMS "NOTIFYEXIT" KEY AND ITS'                 00427400
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00427500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00427600
.ZG90C            ANOP  ,                                               00427700
.*----------------------------------------------------------------***   00427800
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00427900
                  AIF   (K'&MSGEXIT LE 0).ZG91D  NO ME KEY              00428000
                  AIF   (N'&MSGEXIT LE 1).ZG91A  CK NUM                 00428100
&ZMS              SETC  '"MSGEXIT='                                     00428200
&ZMS              SETC  '&ZMS.&MSGEXIT"'                                00428300
&ZMS              SETC  '&ZMS "MSGEXIT"'                                00428400
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00428500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00428600
.ZG91A            AIF   (K'&XCALL LE 0).ZG91B                           00428700
&ZMS              SETC  '"MSGEXIT'                                      00428800
&ZMS              SETC  '&ZMS.=&MSGEXIT"'                               00428900
&ZMS              SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'           00429000
&ZMS              SETC  '&ZMS "&XCALL"'                                 00429100
                  MNOTE 8,' &ZMS KEY.'                                  00429200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00429300
                  AGO   .ZG91D                                          00429400
.*                                                                      00429500
.ZG91B            ANOP  ,                                               00429600
&ZXCALL           SETC  'INPUT'     SET IN/OUTPUT                       00429700
&XCALL            SETC  'MSGEXIT'   SET XVARIABLE                       00429800
&ZXMSGEXIT        SETC  'INPUT'     SET IN/OUTPUT                       00429900
&XMSGEXIT         SETC  '&MSGEXIT(1)'           SET XVARIABLE PARM      00430000
                  AIF   (N'&MSGEXIT GT 1).ZG91C                         00430100
&XMSGEXIT         SETC  '&MSGEXIT'  SET XVARIABLE PARM                  00430200
.ZG91C            AIF   (K'&XMSGEXIT GT 0).ZG91D  ONE PARM              00430300
&ZXCALL           SETC  ''          RESET IN/OUTPUT                     00430400
&ZXMSGEXIT        SETC  ''          RESET IN/OUTPUT                     00430500
&ZMS              SETC  ' '                                             00430600
&ZMS              SETC  '&ZMS "MSGEXIT" KEY AND ITS'                    00430700
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00430800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00430900
.ZG91D            ANOP  ,                                               00431000
.*------------------------------------------------------------------    00431100
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           00431200
                  AIF   (K'&XCALL GT 0).ZG92B                           00431300
&ZXCALL           SETC  ''          RESET IN/OUTPUT                     00431400
&ZXNOTIFYEXIT     SETC  ''          RESET IN/OUTPUT                     00431500
&XCALL            SETC  ''          ENSURE NULL                         00431600
&XNOTIFYEXIT      SETC  ''          ENSURE NULL                         00431700
&ZMS              SETC  'ONE OF THE FOLLOWING'                          00431800
&ZMS              SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'             00431900
&ZMS              SETC  '&ZMS REQUIRED:'                                00432000
&ZMS              SETC  '&ZMS "NOTIFYEXIT"'     VALID ME KEY            00432100
&ZMS              SETC  '&ZMS OR "MSGEXIT".'    VALID ME KEY            00432200
                  MNOTE 8,' &ZMS '                                      00432300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00432400
.ZG92B            ANOP  ,                                               00432500
.*-------------------------------------------------------------------   00432600
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00432700
.ZG90ZY  AIF    ('&XCALL' NE 'NOTIFYEXIT').ZG91ZY                       00432800
.*-------------------------------------------------------------------   00432900
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00433000
                  AIF   (K'&ZXNOTIFYEXIT LE 0).ZG90R  NOT I/O           00433100
                  AIF   ('&XNOTIFYEXIT'(1,1) NE '(').ZG90R              00433200
&ZCGPR            SETC  '&XNOTIFYEXIT'(2,K'&XNOTIFYEXIT-2)              00433300
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG90P                    00433400
                  AIF   (K'&ZCGPR GT 2).ZG90Q                           00433500
                  AIF   ('&ZCGPR' EQ '0').ZG90Q                         00433600
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00433700
                  AIF   (T'&ZCGPR NE 'N').ZG90Q  INVALID REG NAME       00433800
.ZG90P            ANOP  ,                                               00433900
                  AIF   (T'&ZCGPR NE 'N').ZG90R  NON NUMERIC            00434000
                  AIF   ('&ZCGPR' LT '2').ZG90Q                         00434100
                  AIF   ('&ZCGPR' LE '12').ZG90R                        00434200
.ZG90Q            ANOP  ,                                               00434300
&ZMS              SETC  '"NOTIFYEXIT='                                  00434400
&ZMS              SETC  '&ZMS.&NOTIFYEXIT"'                             00434500
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00434600
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00434700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00434800
.ZG90R            ANOP  ,                                               00434900
.*-------------------------------------------------------------------   00435000
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00435100
.ZG91ZY  AIF    ('&XCALL' NE 'MSGEXIT').ZG92ZY                          00435200
.*-------------------------------------------------------------------   00435300
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00435400
                  AIF   (K'&ZXMSGEXIT LE 0).ZG91R  NOT I/O              00435500
                  AIF   ('&XMSGEXIT'(1,1) NE '(').ZG91R                 00435600
&ZCGPR            SETC  '&XMSGEXIT'(2,K'&XMSGEXIT-2)                    00435700
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG91P                    00435800
                  AIF   (K'&ZCGPR GT 2).ZG91Q                           00435900
                  AIF   ('&ZCGPR' EQ '0').ZG91Q                         00436000
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00436100
                  AIF   (T'&ZCGPR NE 'N').ZG91Q  INVALID REG NAME       00436200
.ZG91P            ANOP  ,                                               00436300
                  AIF   (T'&ZCGPR NE 'N').ZG91R  NON NUMERIC            00436400
                  AIF   ('&ZCGPR' LT '2').ZG91Q                         00436500
                  AIF   ('&ZCGPR' LE '12').ZG91R                        00436600
.ZG91Q            ANOP  ,                                               00436700
&ZMS              SETC  '"MSGEXIT='                                     00436800
&ZMS              SETC  '&ZMS.&MSGEXIT"'                                00436900
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00437000
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00437100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00437200
.ZG91R            ANOP  ,                                               00437300
.*-------------------------------------------------------------------   00437400
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            00437500
.ZG92ZY           ANOP ,            END MUTUALLY EXCLUSIVE KEYS         00437600
.*----------------------------------------------------------------***   00437700
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00437800
                  AIF   (N'&EXITPARMS LE 1).ZG94A  CK NUM               00437900
&ZMS              SETC  '"EXITPARMS='                                   00438000
&ZMS              SETC  '&ZMS.&EXITPARMS"'                              00438100
&ZMS              SETC  '&ZMS "EXITPARMS"'                              00438200
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00438300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00438400
.ZG94A            ANOP  ,                                               00438500
.*-------------------------------------------------------------------   00438600
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00438700
&ZXEXITPARMS      SETC  'INPUT'     SET IN/OUTPUT                       00438800
&XEXITPARMS       SETC  'ZERO'                                          00438900
                  AIF   (K'&EXITPARMS(1) LE 0).ZG94B  PARM              00439000
&XEXITPARMS       SETC  '&EXITPARMS(1)'         SET XVARIABLE           00439100
                  AIF   (N'&EXITPARMS GT 1).ZG94B  MULTI                00439200
&XEXITPARMS       SETC  '&EXITPARMS'            SET XVARIABLE           00439300
.ZG94B            ANOP  ,                                               00439400
.*-------------------------------------------------------------------   00439500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00439600
                  AIF   (K'&ZXEXITPARMS LE 0).ZG94R  NOT I/O            00439700
         AIF   ('&XEXITPARMS' EQ 'ZERO').ZG94R                          00439800
                  AIF   ('&XEXITPARMS'(1,1) NE '(').ZG94R               00439900
&ZCGPR            SETC  '&XEXITPARMS'(2,K'&XEXITPARMS-2)                00440000
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG94P                    00440100
                  AIF   (K'&ZCGPR GT 2).ZG94Q                           00440200
                  AIF   ('&ZCGPR' EQ '0').ZG94Q                         00440300
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00440400
                  AIF   (T'&ZCGPR NE 'N').ZG94Q  INVALID REG NAME       00440500
.ZG94P            ANOP  ,                                               00440600
                  AIF   (T'&ZCGPR NE 'N').ZG94R  NON NUMERIC            00440700
                  AIF   ('&ZCGPR' LT '2').ZG94Q                         00440800
                  AIF   ('&ZCGPR' LE '12').ZG94R                        00440900
.ZG94Q            ANOP  ,                                               00441000
&ZMS              SETC  '"EXITPARMS='                                   00441100
&ZMS              SETC  '&ZMS.&EXITPARMS"'                              00441200
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00441300
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00441400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00441500
.ZG94R            ANOP  ,                                               00441600
.*----------------------------------------------------------------***   00441700
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00441800
                  AIF   (N'&MEMTOKEN LE 1).ZG97A  CK NUM                00441900
&ZMS              SETC  '"MEMTOKEN='                                    00442000
&ZMS              SETC  '&ZMS.&MEMTOKEN"'                               00442100
&ZMS              SETC  '&ZMS "MEMTOKEN"'                               00442200
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00442300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00442400
.ZG97A            ANOP  ,                                               00442500
.*-------------------------------------------------------------------   00442600
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00442700
&ZXMEMTOKEN       SETC  'INPUT'     SET IN/OUTPUT                       00442800
&XMEMTOKEN        SETC  '&MEMTOKEN(1)'          SET XVARIABLE           00442900
                  AIF   (N'&MEMTOKEN GT 1).ZG97B  MULTI                 00443000
&XMEMTOKEN        SETC  '&MEMTOKEN'             SET XVARIABLE           00443100
.ZG97B            AIF   (K'&MEMTOKEN(1) GT 0).ZG97C                     00443200
&ZXMEMTOKEN       SETC  ''          RESET IN/OUTPUT                     00443300
&ZMS              SETC  ' '                                             00443400
&ZMS              SETC  '&ZMS "MEMTOKEN" KEY AND ITS'                   00443500
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00443600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00443700
.ZG97C            ANOP  ,                                               00443800
.*-------------------------------------------------------------------   00443900
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00444000
                  AIF   (K'&ZXMEMTOKEN LE 0).ZG97R  NOT I/O             00444100
                  AIF   ('&XMEMTOKEN'(1,1) NE '(').ZG97R                00444200
&ZCGPR            SETC  '&XMEMTOKEN'(2,K'&XMEMTOKEN-2)                  00444300
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG97P                    00444400
                  AIF   (K'&ZCGPR GT 2).ZG97Q                           00444500
                  AIF   ('&ZCGPR' EQ '0').ZG97Q                         00444600
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00444700
                  AIF   (T'&ZCGPR NE 'N').ZG97Q  INVALID REG NAME       00444800
.ZG97P            ANOP  ,                                               00444900
                  AIF   (T'&ZCGPR NE 'N').ZG97R  NON NUMERIC            00445000
                  AIF   ('&ZCGPR' LT '2').ZG97Q                         00445100
                  AIF   ('&ZCGPR' LE '12').ZG97R                        00445200
.ZG97Q            ANOP  ,                                               00445300
&ZMS              SETC  '"MEMTOKEN='                                    00445400
&ZMS              SETC  '&ZMS.&MEMTOKEN"'                               00445500
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00445600
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00445700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00445800
.ZG97R            ANOP  ,                                               00445900
.*----------------------------------------------------------------***   00446000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00446100
                  AIF   (N'&TOKEN LE 1).ZG100A  CK NUM                  00446200
&ZMS              SETC  '"TOKEN='                                       00446300
&ZMS              SETC  '&ZMS.&TOKEN"'                                  00446400
&ZMS              SETC  '&ZMS "TOKEN"'                                  00446500
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00446600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00446700
.ZG100A           ANOP  ,                                               00446800
.*-------------------------------------------------------------------   00446900
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00447000
&ZXTOKEN          SETC  'INPUT'     SET IN/OUTPUT                       00447100
&XTOKEN           SETC  '&TOKEN(1)'             SET XVARIABLE           00447200
                  AIF   (N'&TOKEN GT 1).ZG100B  MULTI                   00447300
&XTOKEN           SETC  '&TOKEN'    SET XVARIABLE                       00447400
.ZG100B           AIF   (K'&TOKEN(1) GT 0).ZG100C                       00447500
&ZXTOKEN          SETC  ''          RESET IN/OUTPUT                     00447600
&ZMS              SETC  ' '                                             00447700
&ZMS              SETC  '&ZMS "TOKEN" KEY AND ITS'                      00447800
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00447900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00448000
.ZG100C           ANOP  ,                                               00448100
.*-------------------------------------------------------------------   00448200
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00448300
                  AIF   (K'&ZXTOKEN LE 0).ZG100R  NOT I/O               00448400
                  AIF   ('&XTOKEN'(1,1) NE '(').ZG100R                  00448500
&ZCGPR            SETC  '&XTOKEN'(2,K'&XTOKEN-2)                        00448600
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG100P                   00448700
                  AIF   (K'&ZCGPR GT 2).ZG100Q                          00448800
                  AIF   ('&ZCGPR' EQ '0').ZG100Q                        00448900
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00449000
                  AIF   (T'&ZCGPR NE 'N').ZG100Q  INVALID REG NAME      00449100
.ZG100P           ANOP  ,                                               00449200
                  AIF   (T'&ZCGPR NE 'N').ZG100R  NON NUMERIC           00449300
                  AIF   ('&ZCGPR' LT '2').ZG100Q                        00449400
                  AIF   ('&ZCGPR' LE '12').ZG100R                       00449500
.ZG100Q           ANOP  ,                                               00449600
&ZMS              SETC  '"TOKEN='                                       00449700
&ZMS              SETC  '&ZMS.&TOKEN"'                                  00449800
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00449900
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00450000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00450100
.ZG100R           ANOP  ,                                               00450200
.*-------------------------------------------------------------------   00450300
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00450400
.ZG102            ANOP  ,                                               00450500
&ZTLC             SETC 'RELEASEMSG'                                     00450600
                  AIF   ('&REQUEST(1)' NE '&ZTLC').ZG110                00450700
&XREQUEST         SETC  'RELEASEMSG'            SET KEYWORD             00450800
                  AIF   (N'&REQUEST LE 1).ZG102A  CK NUM                00450900
&ZMS              SETC  '"REQUEST='                                     00451000
&ZMS              SETC  '&ZMS.&REQUEST"'                                00451100
&ZMS              SETC  '&ZMS "REQUEST"'                                00451200
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00451300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00451400
.ZG102A           ANOP  ,                                               00451500
.*------------------------------------------------------------------    00451600
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00451700
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00451800
.ZG102A0          AIF   (K'&USERDATA LE 0).ZG102A1  OK                  00451900
&ZCVAL            SETC '&ZCVAL USERDATA'        INCORRECT KEY USED      00452000
.ZG102A1          AIF   (K'&RETMSGTOKEN LE 0).ZG102A2  OK               00452100
&ZCVAL            SETC '&ZCVAL RETMSGTOKEN'     INCORRECT KEY USED      00452200
.ZG102A2          AIF   (K'&HOLDTIME LE 0).ZG102A3  OK                  00452300
&ZCVAL            SETC '&ZCVAL HOLDTIME'        INCORRECT KEY USED      00452400
.ZG102A3          AIF   (K'&TIME LE 0).ZG102A4  OK                      00452500
&ZCVAL            SETC '&ZCVAL TIME'            INCORRECT KEY USED      00452600
.ZG102A4          AIF   (K'&MSGTAG LE 0).ZG102A5  OK                    00452700
&ZCVAL            SETC '&ZCVAL MSGTAG'          INCORRECT KEY USED      00452800
.ZG102A5          AIF   (K'&DATATYPE LE 0).ZG102A6  OK                  00452900
&ZCVAL            SETC '&ZCVAL DATATYPE'        INCORRECT KEY USED      00453000
.ZG102A6          AIF   (K'&STATUS LE 0).ZG102A7  OK                    00453100
&ZCVAL            SETC '&ZCVAL STATUS'          INCORRECT KEY USED      00453200
.ZG102A7          AIF   (K'&SOURCE LE 0).ZG102A8  OK                    00453300
&ZCVAL            SETC '&ZCVAL SOURCE'          INCORRECT KEY USED      00453400
.ZG102A8          AIF   (K'&MQAALEVEL LE 0).ZG102A9  OK                 00453500
&ZCVAL            SETC '&ZCVAL MQAALEVEL'       INCORRECT KEY USED      00453600
.ZG102A9          AIF   (K'&MSGTAGFILTER LE 0).ZG102A10  OK             00453700
&ZCVAL            SETC '&ZCVAL MSGTAGFILTER'    INCORRECT KEY USED      00453800
.ZG102A10         AIF   (K'&MSGTAGMASK LE 0).ZG102A11  OK               00453900
&ZCVAL            SETC '&ZCVAL MSGTAGMASK'      INCORRECT KEY USED      00454000
.ZG102A11         AIF   (K'&ANSAREA LE 0).ZG102A12  OK                  00454100
&ZCVAL            SETC '&ZCVAL ANSAREA'         INCORRECT KEY USED      00454200
.ZG102A12         AIF   (K'&ANSLEN LE 0).ZG102A13  OK                   00454300
&ZCVAL            SETC '&ZCVAL ANSLEN'          INCORRECT KEY USED      00454400
.ZG102A13         AIF   (K'&TYPE LE 0).ZG102A14  OK                     00454500
&ZCVAL            SETC '&ZCVAL TYPE'            INCORRECT KEY USED      00454600
.ZG102A14         AIF   (K'&NOTIFYEXIT LE 0).ZG102A15  OK               00454700
&ZCVAL            SETC '&ZCVAL NOTIFYEXIT'      INCORRECT KEY USED      00454800
.ZG102A15         AIF   (K'&MSGEXIT LE 0).ZG102A16  OK                  00454900
&ZCVAL            SETC '&ZCVAL MSGEXIT'         INCORRECT KEY USED      00455000
.ZG102A16         AIF   (K'&EXITPARMS LE 0).ZG102A17  OK                00455100
&ZCVAL            SETC '&ZCVAL EXITPARMS'       INCORRECT KEY USED      00455200
.ZG102A17         AIF   (K'&ZCVAL LE 0).ZG102A18  OK                    00455300
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00455400
&ZMS              SETC  '"REQUEST'                                      00455500
&ZMS              SETC  '&ZMS.=&REQUEST"'                               00455600
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00455700
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00455800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00455900
.ZG102A18         ANOP  ,                                               00456000
.*----------------------------------------------------------------***   00456100
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00456200
&XMSGTOKENTYPE    SETC  ''          INITIALIZE XVARIABLE                00456300
                  AIF   (K'&TOKEN LE 0).ZG104C                          00456400
&ZXMSGTOKENTYPE   SETC  'INPUT'     SET IN/OUTPUT                       00456500
&XMSGTOKENTYPE    SETC  'TOKEN'     SET XVARIABLE                       00456600
&ZXTOKEN          SETC  'INPUT'     SET IN/OUTPUT                       00456700
&XTOKEN           SETC  '&TOKEN(1)'             SET XVARIABLE PARM      00456800
                  AIF   (N'&TOKEN GT 1).ZG104A                          00456900
&XTOKEN           SETC  '&TOKEN'    SET XVARIABLE PARM                  00457000
.ZG104A           AIF   (N'&TOKEN LE 1).ZG104B  CK NUM                  00457100
&ZMS              SETC  '"TOKEN='                                       00457200
&ZMS              SETC  '&ZMS.&TOKEN"'                                  00457300
&ZMS              SETC  '&ZMS "TOKEN"'                                  00457400
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00457500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00457600
.ZG104B           AIF   (K'&XTOKEN GT 0).ZG104C  ONE PARM               00457700
&ZXMSGTOKENTYPE   SETC  ''          RESET IN/OUTPUT                     00457800
&ZXTOKEN          SETC  ''          RESET IN/OUTPUT                     00457900
&ZMS              SETC  ' '                                             00458000
&ZMS              SETC  '&ZMS "TOKEN" KEY AND ITS'                      00458100
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00458200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00458300
.ZG104C           ANOP  ,                                               00458400
.*----------------------------------------------------------------***   00458500
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00458600
                  AIF   (K'&SENDTOKEN LE 0).ZG108D  NO ME KEY           00458700
                  AIF   (N'&SENDTOKEN LE 1).ZG108A  CK NUM              00458800
&ZMS              SETC  '"SENDTOKEN='                                   00458900
&ZMS              SETC  '&ZMS.&SENDTOKEN"'                              00459000
&ZMS              SETC  '&ZMS "SENDTOKEN"'                              00459100
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00459200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00459300
.ZG108A           AIF   (K'&XMSGTOKENTYPE LE 0).ZG108B                  00459400
&ZMS              SETC  '"SENDTOKEN'                                    00459500
&ZMS              SETC  '&ZMS.=&SENDTOKEN"'                             00459600
&ZMS              SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'           00459700
&ZMS              SETC  '&ZMS "&XMSGTOKENTYPE"'                         00459800
                  MNOTE 8,' &ZMS KEY.'                                  00459900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00460000
                  AGO   .ZG108D                                         00460100
.*                                                                      00460200
.ZG108B           ANOP  ,                                               00460300
&ZXMSGTOKENTYPE   SETC  'INPUT'     SET IN/OUTPUT                       00460400
&XMSGTOKENTYPE    SETC  'SENDTOKEN'             SET XVARIABLE           00460500
&ZXSENDTOKEN      SETC  'INPUT'     SET IN/OUTPUT                       00460600
&XSENDTOKEN       SETC  '&SENDTOKEN(1)'         SET XVARIABLE PARM      00460700
                  AIF   (N'&SENDTOKEN GT 1).ZG108C                      00460800
&XSENDTOKEN       SETC  '&SENDTOKEN'            SET XVARIABLE PARM      00460900
.ZG108C           AIF   (K'&XSENDTOKEN GT 0).ZG108D  ONE PARM           00461000
&ZXMSGTOKENTYPE   SETC  ''          RESET IN/OUTPUT                     00461100
&ZXSENDTOKEN      SETC  ''          RESET IN/OUTPUT                     00461200
&ZMS              SETC  ' '                                             00461300
&ZMS              SETC  '&ZMS "SENDTOKEN" KEY AND ITS'                  00461400
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00461500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00461600
.ZG108D           ANOP  ,                                               00461700
.*------------------------------------------------------------------    00461800
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           00461900
                  AIF   (K'&XMSGTOKENTYPE GT 0).ZG109B                  00462000
&ZXMSGTOKENTYPE   SETC  ''          RESET IN/OUTPUT                     00462100
&ZXTOKEN          SETC  ''          RESET IN/OUTPUT                     00462200
&XMSGTOKENTYPE    SETC  ''          ENSURE NULL                         00462300
&XTOKEN           SETC  ''          ENSURE NULL                         00462400
&ZMS              SETC  'ONE OF THE FOLLOWING'                          00462500
&ZMS              SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'             00462600
&ZMS              SETC  '&ZMS REQUIRED:'                                00462700
&ZMS              SETC  '&ZMS "TOKEN"'          VALID ME KEY            00462800
&ZMS              SETC  '&ZMS OR "SENDTOKEN".'  VALID ME KEY            00462900
                  MNOTE 8,' &ZMS '                                      00463000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00463100
.ZG109B           ANOP  ,                                               00463200
.*-------------------------------------------------------------------   00463300
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00463400
.ZG104ZY  AIF    ('&XMSGTOKENTYPE' NE 'TOKEN').ZG108ZY                  00463500
.*-------------------------------------------------------------------   00463600
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00463700
                  AIF   (K'&ZXTOKEN LE 0).ZG104R  NOT I/O               00463800
                  AIF   ('&XTOKEN'(1,1) NE '(').ZG104R                  00463900
&ZCGPR            SETC  '&XTOKEN'(2,K'&XTOKEN-2)                        00464000
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG104P                   00464100
                  AIF   (K'&ZCGPR GT 2).ZG104Q                          00464200
                  AIF   ('&ZCGPR' EQ '0').ZG104Q                        00464300
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00464400
                  AIF   (T'&ZCGPR NE 'N').ZG104Q  INVALID REG NAME      00464500
.ZG104P           ANOP  ,                                               00464600
                  AIF   (T'&ZCGPR NE 'N').ZG104R  NON NUMERIC           00464700
                  AIF   ('&ZCGPR' LT '2').ZG104Q                        00464800
                  AIF   ('&ZCGPR' LE '12').ZG104R                       00464900
.ZG104Q           ANOP  ,                                               00465000
&ZMS              SETC  '"TOKEN='                                       00465100
&ZMS              SETC  '&ZMS.&TOKEN"'                                  00465200
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00465300
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00465400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00465500
.ZG104R           ANOP  ,                                               00465600
.*----------------------------------------------------------------***   00465700
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00465800
                  AIF   (N'&MEMTOKEN LE 1).ZG106A  CK NUM               00465900
&ZMS              SETC  '"MEMTOKEN='                                    00466000
&ZMS              SETC  '&ZMS.&MEMTOKEN"'                               00466100
&ZMS              SETC  '&ZMS "MEMTOKEN"'                               00466200
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00466300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00466400
.ZG106A           ANOP  ,                                               00466500
.*-------------------------------------------------------------------   00466600
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00466700
&ZXMEMTOKEN       SETC  'INPUT'     SET IN/OUTPUT                       00466800
&XMEMTOKEN        SETC  '&MEMTOKEN(1)'          SET XVARIABLE           00466900
                  AIF   (N'&MEMTOKEN GT 1).ZG106B  MULTI                00467000
&XMEMTOKEN        SETC  '&MEMTOKEN'             SET XVARIABLE           00467100
.ZG106B           AIF   (K'&MEMTOKEN(1) GT 0).ZG106C                    00467200
&ZXMEMTOKEN       SETC  ''          RESET IN/OUTPUT                     00467300
&ZMS              SETC  ' '                                             00467400
&ZMS              SETC  '&ZMS "MEMTOKEN" KEY AND ITS'                   00467500
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00467600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00467700
.ZG106C           ANOP  ,                                               00467800
.*-------------------------------------------------------------------   00467900
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00468000
                  AIF   (K'&ZXMEMTOKEN LE 0).ZG106R  NOT I/O            00468100
                  AIF   ('&XMEMTOKEN'(1,1) NE '(').ZG106R               00468200
&ZCGPR            SETC  '&XMEMTOKEN'(2,K'&XMEMTOKEN-2)                  00468300
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG106P                   00468400
                  AIF   (K'&ZCGPR GT 2).ZG106Q                          00468500
                  AIF   ('&ZCGPR' EQ '0').ZG106Q                        00468600
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00468700
                  AIF   (T'&ZCGPR NE 'N').ZG106Q  INVALID REG NAME      00468800
.ZG106P           ANOP  ,                                               00468900
                  AIF   (T'&ZCGPR NE 'N').ZG106R  NON NUMERIC           00469000
                  AIF   ('&ZCGPR' LT '2').ZG106Q                        00469100
                  AIF   ('&ZCGPR' LE '12').ZG106R                       00469200
.ZG106Q           ANOP  ,                                               00469300
&ZMS              SETC  '"MEMTOKEN='                                    00469400
&ZMS              SETC  '&ZMS.&MEMTOKEN"'                               00469500
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00469600
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00469700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00469800
.ZG106R           ANOP  ,                                               00469900
.*-------------------------------------------------------------------   00470000
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00470100
.ZG108ZY  AIF    ('&XMSGTOKENTYPE' NE 'SENDTOKEN').ZG109ZY              00470200
.*-------------------------------------------------------------------   00470300
.***AG.KMEKY14 NAME, RQD INPUT, ME KEYS -DISALLOWED KEYS                00470400
&ZCVAL            SETC ''           ERROR KEY FIELD                     00470500
.ZG108I0          AIF   (K'&MEMTOKEN LE 0).ZG108I1                      00470600
&ZCVAL            SETC '&ZCVAL MEMTOKEN'        DISALLOWED KEY          00470700
.ZG108I1          AIF   (K'&ZCVAL LE 0).ZG108J  KEY                     00470800
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00470900
&ZMS              SETC  '"SENDTOKEN'                                    00471000
&ZMS              SETC  '&ZMS.=&SENDTOKEN"'                             00471100
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00471200
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00471300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00471400
.ZG108J           ANOP  ,                                               00471500
.*-------------------------------------------------------------------   00471600
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00471700
                  AIF   (K'&ZXSENDTOKEN LE 0).ZG108R  NOT I/O           00471800
                  AIF   ('&XSENDTOKEN'(1,1) NE '(').ZG108R              00471900
&ZCGPR            SETC  '&XSENDTOKEN'(2,K'&XSENDTOKEN-2)                00472000
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG108P                   00472100
                  AIF   (K'&ZCGPR GT 2).ZG108Q                          00472200
                  AIF   ('&ZCGPR' EQ '0').ZG108Q                        00472300
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00472400
                  AIF   (T'&ZCGPR NE 'N').ZG108Q  INVALID REG NAME      00472500
.ZG108P           ANOP  ,                                               00472600
                  AIF   (T'&ZCGPR NE 'N').ZG108R  NON NUMERIC           00472700
                  AIF   ('&ZCGPR' LT '2').ZG108Q                        00472800
                  AIF   ('&ZCGPR' LE '12').ZG108R                       00472900
.ZG108Q           ANOP  ,                                               00473000
&ZMS              SETC  '"SENDTOKEN='                                   00473100
&ZMS              SETC  '&ZMS.&SENDTOKEN"'                              00473200
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00473300
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00473400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00473500
.ZG108R           ANOP  ,                                               00473600
.*-------------------------------------------------------------------   00473700
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            00473800
.ZG109ZY          ANOP ,            END MUTUALLY EXCLUSIVE KEYS         00473900
.*------------------------------------------------------------------    00474000
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00474100
.ZG110            ANOP  ,                                               00474200
&ZXREQUEST        SETC  'INPUT'     SET IN/OUTPUT                       00474300
                  AIF   (K'&XREQUEST GT 0).ZG110E  VALID ARG            00474400
                  AIF   (T'&REQUEST EQ 'O').ZG110D  OMITTED             00474500
&ZASYSLNDX        SETA  0                                               00474600
.ZG110A           ANOP  ,           POSITIONAL MACRO KEY                00474700
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00474800
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG110C               00474900
&ZTLC             SETC 'REQUEST'                                        00475000
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG110A      00475100
.ZG110B           ANOP  ,                                               00475200
&ZXREQUEST        SETC  ''          RESET IN/OUTPUT                     00475300
&ZMS              SETC  'THE "REQUEST" KEY'                             00475400
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00475500
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00475600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00475700
                  AGO   .ZG110E                                         00475800
.ZG110C           ANOP  ,                                               00475900
&ZXREQUEST        SETC  ''          RESET IN/OUTPUT                     00476000
&ZMS              SETC  '"REQUEST='                                     00476100
&ZMS              SETC  '&ZMS.&REQUEST"'                                00476200
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00476300
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00476400
&ZMS              SETC  '&ZMS "SAVEMSG",'                               00476500
&ZMS              SETC  '&ZMS "DISCARDMSG",'                            00476600
&ZMS              SETC  '&ZMS "QUERYMSG",'                              00476700
&ZMS              SETC  '&ZMS "COMPLETION",'                            00476800
&ZMS              SETC  '&ZMS "CALLEXIT",'                              00476900
&ZMS              SETC  '&ZMS OR "RELEASEMSG".'                         00477000
                  MNOTE 8,' &ZMS '                                      00477100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00477200
                  AGO   .ZG110E                                         00477300
.ZG110D           ANOP  ,                                               00477400
&XREQUEST         SETC  'SAVEMSG'   SET DEFAULT KEYWORD                 00477500
.ZG110E           ANOP  ,                                               00477600
.*------------------------------------------------------------------    00477700
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00477800
                  AIF   (K'&REQUEST(1) GT 0).ZG110F  PARM               00477900
&XREQUEST         SETC  ''          ENSURE NULL KEYWORD                 00478000
&ZXREQUEST        SETC  ''          RESET IN/OUTPUT                     00478100
&ZMS              SETC  'THE'                                           00478200
&ZMS              SETC  '&ZMS "REQUEST" KEY AND ITS'                    00478300
&ZMS              SETC  '&ZMS ARGUMENT ARE REQUIRED.'                   00478400
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00478500
&ZMS              SETC  '&ZMS "SAVEMSG",'                               00478600
&ZMS              SETC  '&ZMS "DISCARDMSG",'                            00478700
&ZMS              SETC  '&ZMS "QUERYMSG",'                              00478800
&ZMS              SETC  '&ZMS "COMPLETION",'                            00478900
&ZMS              SETC  '&ZMS "CALLEXIT",'                              00479000
&ZMS              SETC  '&ZMS OR "RELEASEMSG".'                         00479100
                  MNOTE 8,' &ZMS '                                      00479200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00479300
.ZG110F           ANOP  ,                                               00479400
.*----------------------------------------------------------------***   00479500
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00479600
                  AIF   (N'&RETCODE LE 1).ZG112A  CK NUM                00479700
&ZMS              SETC  '"RETCODE='                                     00479800
&ZMS              SETC  '&ZMS.&RETCODE"'                                00479900
&ZMS              SETC  '&ZMS "RETCODE"'                                00480000
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00480100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00480200
.ZG112A           ANOP  ,                                               00480300
.*-------------------------------------------------------------------   00480400
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00480500
                  AIF   (K'&RETCODE(1) LE 0).ZG112C  NO PARM            00480600
&ZXRETCODE        SETC  'OUTPUT'    SET OUTPUT                          00480700
&XRETCODE         SETC  '&RETCODE(1)'           SET XVARIABLE           00480800
                  AIF   (N'&RETCODE GT 1).ZG112C                        00480900
&XRETCODE         SETC  '&RETCODE'  SET XVARIABLE                       00481000
.ZG112C           ANOP  ,                                               00481100
.*-------------------------------------------------------------------   00481200
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00481300
                  AIF   (K'&ZXRETCODE LE 0).ZG112R  NOT I/O             00481400
                  AIF   ('&XRETCODE'(1,1) NE '(').ZG112R                00481500
&ZCGPR            SETC  '&XRETCODE'(2,K'&XRETCODE-2)                    00481600
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG112P                   00481700
                  AIF   (K'&ZCGPR GT 2).ZG112Q                          00481800
                  AIF   ('&ZCGPR' EQ '0').ZG112Q                        00481900
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00482000
                  AIF   (T'&ZCGPR NE 'N').ZG112Q  INVALID REG NAME      00482100
.ZG112P           ANOP  ,                                               00482200
                  AIF   (T'&ZCGPR NE 'N').ZG112R  NON NUMERIC           00482300
                  AIF   ('&ZCGPR' EQ '15').ZG112R                       00482400
                  AIF   ('&ZCGPR' LT '2').ZG112Q                        00482500
                  AIF   ('&ZCGPR' LE '12').ZG112R                       00482600
.ZG112Q           ANOP  ,                                               00482700
&ZMS              SETC  '"RETCODE='                                     00482800
&ZMS              SETC  '&ZMS.&RETCODE"'                                00482900
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00483000
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12) OR (15).'        00483100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00483200
.ZG112R           ANOP  ,                                               00483300
.*----------------------------------------------------------------***   00483400
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00483500
                  AIF   (N'&RSNCODE LE 1).ZG115A  CK NUM                00483600
&ZMS              SETC  '"RSNCODE='                                     00483700
&ZMS              SETC  '&ZMS.&RSNCODE"'                                00483800
&ZMS              SETC  '&ZMS "RSNCODE"'                                00483900
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00484000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00484100
.ZG115A           ANOP  ,                                               00484200
.*-------------------------------------------------------------------   00484300
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00484400
                  AIF   (K'&RSNCODE(1) LE 0).ZG115C  NO PARM            00484500
&ZXRSNCODE        SETC  'OUTPUT'    SET OUTPUT                          00484600
&XRSNCODE         SETC  '&RSNCODE(1)'           SET XVARIABLE           00484700
                  AIF   (N'&RSNCODE GT 1).ZG115C                        00484800
&XRSNCODE         SETC  '&RSNCODE'  SET XVARIABLE                       00484900
.ZG115C           ANOP  ,                                               00485000
.*-------------------------------------------------------------------   00485100
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00485200
                  AIF   (K'&ZXRSNCODE LE 0).ZG115R  NOT I/O             00485300
                  AIF   ('&XRSNCODE'(1,1) NE '(').ZG115R                00485400
&ZCGPR            SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                    00485500
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG115P                   00485600
                  AIF   (K'&ZCGPR GT 2).ZG115Q                          00485700
                  AIF   ('&ZCGPR' EQ '0').ZG115R                        00485800
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00485900
                  AIF   (T'&ZCGPR NE 'N').ZG115Q  INVALID REG NAME      00486000
.ZG115P           ANOP  ,                                               00486100
                  AIF   (T'&ZCGPR NE 'N').ZG115R  NON NUMERIC           00486200
                  AIF   ('&ZCGPR' EQ '0').ZG115R                        00486300
                  AIF   ('&ZCGPR' LT '2').ZG115Q                        00486400
                  AIF   ('&ZCGPR' LE '12').ZG115R                       00486500
.ZG115Q           ANOP  ,                                               00486600
&ZMS              SETC  '"RSNCODE='                                     00486700
&ZMS              SETC  '&ZMS.&RSNCODE"'                                00486800
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00486900
                  MNOTE 8,' &ZMS IN THE RANGE (0) OR (2)-(12).'         00487000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00487100
.ZG115R           ANOP  ,                                               00487200
.******************************************************************     00487300
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00487400
.******************************************************************     00487500
                  ACTR  10000                                           00487600
.*----------------------------------------------------------------***   00487700
.***AH.P02 EXTRA POSITIONALS                                            00487800
                  AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS            00487900
                  AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL            00488000
                  AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL        00488100
                  AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL         00488200
.ZGLISTX1         ANOP  ,                                               00488300
&ZCVAL            SETC  ''          ERROR FIELD                         00488400
&ZAWRK            SETA  0           POSITIONAL NUMBER                   00488500
.ZGLIST2          ANOP  ,                                               00488600
&ZAWRK            SETA  &ZAWRK+1    NEXT POSITIONAL                     00488700
                  AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE            00488800
&ZCVAL            SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                 00488900
                  AGO   .ZGLIST2                                        00489000
.*                                                                      00489100
.ZGLIST3          ANOP  ,                                               00489200
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)   STRIP COMMA             00489300
&ZMS              SETC  'POSITIONAL ARGUMENT(S),'                       00489400
&ZMS              SETC  '&ZMS "&ZCVAL"'                                 00489500
&ZMS              SETC  '&ZMS CANNOT BE USED.'                          00489600
&ZMS              SETC  '&ZMS NO POSITIONAL ARGUMENTS'                  00489700
                  MNOTE 8,' &ZMS ARE ALLOWED.'                          00489800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00489900
.ZGLISTX          ANOP  ,                                               00490000
&ZASYSLNDX        SETA  0                                               00490100
.*-------------------------------------------------------------------   00490200
.***AG.MF04 MF=(SLE)                                                    00490300
.ZGMFX            ANOP  ,           END OF FULL SYNTAX CHECK            00490400
.*******************************************************************    00490500
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00490600
.*******************************************************************    00490700
                  AIF   (&ZMACRET NE 0).ZLX2    ERROR DETECTED          00490800
.*******************************************************************    00490900
.***AE.01  START OF IXCMSGC MACRO CODE                                  00491000
.*******************************************************************    00491100
                  LCLC  &M0M0001                 NAME                   00491200
&M0M0001          SETC  '&XLABEL'                SET NAME               00491300
                  AIF   (K'&XLABEL NE 0).XLAB2                          00491400
&M0M0001          SETC  'M00M&SYSNDX'            DEFAULT NAME           00491500
.*                                                                      00491600
.XLAB2            ANOP  ,                                               00491700
                  AIF   ('&XMF' EQ 'L').XLAB3                           00491800
&M0M0001 DS    0H                             IXCMSGC-2                 00491900
.XLAB3            ANOP  ,                                               00492000
.*******************************************************************    00492100
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00492200
.*******************************************************************    00492300
              PUSH  PRINT                                               00492400
                  AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON      00492500
                  PRINT OFF         ++ PR01                             00492600
                  AGO   .ZPRNTXX                                        00492700
.ZPRINTX          PRINT ON                                              00492800
.ZPRNTXX          ANOP  ,                                               00492900
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00493000
                                                                        00493100
.*                                                                      00493200
.* deleted &LINKAGE. Using LINKAGE keyword will cause the         @L7C  00493300
.* assemble to fail with a ASMA017W Undefined keyword             @L7C  00493400
.* parameter message                                              @L7C  00493500
.*                                                                      00493600
                                                                        00493700
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00493800
.********************************************************************   00493900
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00494000
.********************************************************************   00494100
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00494200
                      LCLA  &ZOPN1         INVOCATION INDEX             00494300
                      LCLC  &ZOPL(4095)    LABEL                        00494400
                      LCLC  &ZOPO(4095)    OPERATION                    00494500
                      LCLC  &ZOPV(4095)    VALUE                        00494600
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00494700
.*                                                                      00494800
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00494900
.******************************************************************     00495000
.***AL.L10 IXCMSGC FMT=LIST MF=S!L PARAMETERS                           00495100
.******************************************************************     00495200
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00495300
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00495400
&XMFCTRL              SETC  '#Z'.'&SYSNDX'.'A'                          00495500
&XMFATTR              SETC  '0D'                                        00495600
.*                                                                      00495700
&ZOPN                 SETA  &ZOPN+1                                     00495800
&ZOPL(&ZOPN)          SETC  ' '                                         00495900
                      AIF   (&SYSALVL NE 0).ZALVL6A                     00496000
&ZOPO(&ZOPN)          SETC  'B'                                         00496100
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00496200
                      AGO   .ZALVL6B                                    00496300
.ZALVL6A              ANOP                                              00496400
&ZOPO(&ZOPN)          SETC  'CNOP'                                      00496500
&ZOPV(&ZOPN)          SETC  '4,8'                                       00496600
&ZOPN                 SETA  &ZOPN+1                                     00496700
&ZOPL(&ZOPN)          SETC  ' '                                         00496800
&ZOPO(&ZOPN)          SETC  'BRAS'                                      00496900
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              00497000
.ZALVL6B              ANOP                                              00497100
&ZOPD(&ZOPN)          SETC  '++ IXCMSGC ARG PARMS'                      00497200
.*                                                                      00497300
&ZOPN                 SETA  &ZOPN+1                                     00497400
&ZOPL(&ZOPN)          SETC  ' '                                         00497500
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00497600
&ZOPV(&ZOPN)          SETC  '1'                                         00497700
&ZOPD(&ZOPN)          SETC  ' '                                         00497800
.*                                                                      00497900
.ZLMFSL2              ANOP  ,                                           00498000
.*-------------------------------------------------------------------   00498100
.***AM.L00  IXCMSGC FMT=LIST name                                       00498200
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00498300
&ZOPN                 SETA &ZOPN+1                                      00498400
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00498500
&ZOPO(&ZOPN)          SETC 'EQU'                                        00498600
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00498700
&ZOPD(&ZOPN)          SETC '++ IXCMSGC NAME'                            00498800
.ZLMFSL2M             ANOP  ,                                           00498900
.*-------------------------------------------------------------------   00499000
.***AM.L01  IXCMSGC FMT=LIST PARAMETERS                                 00499100
&ZOPN                 SETA &ZOPN+1                                      00499200
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00499300
&ZOPO(&ZOPN)          SETC 'DS'                                         00499400
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00499500
&ZOPD(&ZOPN)          SETC '++ IXCMSGC PARM LIST'                       00499600
.*-------------------------------------------------------------------   00499700
.***AM.L02 XVERSION XL1                                                 00499800
&ZOPN                 SETA &ZOPN+1                                      00499900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00500000
&ZOPO(&ZOPN)          SETC 'DS'                                         00500100
&ZOPV(&ZOPN)          SETC 'XL1'                                        00500200
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00500300
.*-------------------------------------------------------------------   00500400
.***AM.L05 XREQUEST XL1                                                 00500500
&ZOPN                 SETA &ZOPN+1                                      00500600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQUEST'                         00500700
&ZOPO(&ZOPN)          SETC 'DS'                                         00500800
&ZOPV(&ZOPN)          SETC 'XL1'                                        00500900
&ZOPD(&ZOPN)          SETC '++ &ZXREQUEST XREQUEST'                     00501000
.*                                                                      00501100
&ZOPN                 SETA  &ZOPN+1                                     00501200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQUEST_SAVEMSG'                00501300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00501400
&ZOPV(&ZOPN)          SETC  '1'                                         00501500
&ZOPD(&ZOPN)          SETC  '++ XREQUEST.'                              00501600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SAVEMSG'                      00501700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00501800
.*                                                                      00501900
&ZOPN                 SETA  &ZOPN+1                                     00502000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQUEST_DISCARDMSG'             00502100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00502200
&ZOPV(&ZOPN)          SETC  '2'                                         00502300
&ZOPD(&ZOPN)          SETC  '++ XREQUEST.'                              00502400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DISCARDMSG'                   00502500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00502600
.*                                                                      00502700
&ZOPN                 SETA  &ZOPN+1                                     00502800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQUEST_QUERYMSG'               00502900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00503000
&ZOPV(&ZOPN)          SETC  '3'                                         00503100
&ZOPD(&ZOPN)          SETC  '++ XREQUEST.'                              00503200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).QUERYMSG'                     00503300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00503400
.*                                                                      00503500
&ZOPN                 SETA  &ZOPN+1                                     00503600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQUEST_COMPLETION'             00503700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00503800
&ZOPV(&ZOPN)          SETC  '4'                                         00503900
&ZOPD(&ZOPN)          SETC  '++ XREQUEST.'                              00504000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).COMPLETION'                   00504100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00504200
.*                                                                      00504300
&ZOPN                 SETA  &ZOPN+1                                     00504400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQUEST_CALLEXIT'               00504500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00504600
&ZOPV(&ZOPN)          SETC  '5'                                         00504700
&ZOPD(&ZOPN)          SETC  '++ XREQUEST.'                              00504800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).CALLEXIT'                     00504900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00505000
.*                                                                      00505100
&ZOPN                 SETA  &ZOPN+1                                     00505200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQUEST_RELEASEMSG'             00505300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00505400
&ZOPV(&ZOPN)          SETC  '6'                                         00505500
&ZOPD(&ZOPN)          SETC  '++ XREQUEST.'                              00505600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).RELEASEMSG'                   00505700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00505800
.*-------------------------------------------------------------------   00505900
.***AM.L03 XTYPE BL.8                                                   00506000
&ZOPN                 SETA &ZOPN+1                                      00506100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XTYPE'                            00506200
&ZOPO(&ZOPN)          SETC 'DS'                                         00506300
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00506400
&ZOPD(&ZOPN)          SETC '++ INPUT'                                   00506500
.*                                                                      00506600
&ZOPN                 SETA  &ZOPN+1                                     00506700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTYPE_FORCE'                     00506800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00506900
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00507000
&ZOPD(&ZOPN)          SETC  '++ XTYPE.'                                 00507100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).FORCE'                        00507200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00507300
.*                                                                      00507400
&ZOPN                 SETA  &ZOPN+1                                     00507500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XCALL_NOTIFYEXIT'                00507600
&ZOPO(&ZOPN)          SETC  'EQU'                                       00507700
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             00507800
&ZOPD(&ZOPN)          SETC  '++ XCALL.'                                 00507900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).NOTIFYEXIT'                   00508000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00508100
.*                                                                      00508200
&ZOPN                 SETA  &ZOPN+1                                     00508300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XCALL_MSGEXIT'                   00508400
&ZOPO(&ZOPN)          SETC  'EQU'                                       00508500
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             00508600
&ZOPD(&ZOPN)          SETC  '++ XCALL.'                                 00508700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).MSGEXIT'                      00508800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00508900
.*                                                                      00509000
&ZOPN                 SETA  &ZOPN+1                                     00509100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XDATATYPE_DETAIL'                00509200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00509300
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             00509400
&ZOPD(&ZOPN)          SETC  '++ XDATATYPE.'                             00509500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DETAIL'                       00509600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00509700
.*                                                                      00509800
&ZOPN                 SETA  &ZOPN+1                                     00509900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XDATATYPE_MSGOUT'                00510000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00510100
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             00510200
&ZOPD(&ZOPN)          SETC  '++ XDATATYPE.'                             00510300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).MSGOUT'                       00510400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00510500
.*                                                                      00510600
&ZOPN                 SETA  &ZOPN+1                                     00510700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XDATATYPE_MSGIN'                 00510800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00510900
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             00511000
&ZOPD(&ZOPN)          SETC  '++ XDATATYPE.'                             00511100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).MSGIN'                        00511200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00511300
.*-------------------------------------------------------------------   00511400
.***AM.L03 XKEYUSED3 BL.8                                               00511500
&ZOPN                 SETA &ZOPN+1                                      00511600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XKEYUSED3'                        00511700
&ZOPO(&ZOPN)          SETC 'DS'                                         00511800
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00511900
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00512000
.*                                                                      00512100
&ZOPN                 SETA  &ZOPN+1                                     00512200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_SOURCE'                  00512300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00512400
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00512500
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00512600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SOURCE'                       00512700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00512800
.*                                                                      00512900
&ZOPN                 SETA  &ZOPN+1                                     00513000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_RETMSGTOKEN'             00513100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00513200
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00513300
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00513400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).RETMSGTOKEN'                  00513500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00513600
.*                                                                      00513700
&ZOPN                 SETA  &ZOPN+1                                     00513800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XUSERDATA_NO_CHANGE'             00513900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00514000
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             00514100
&ZOPD(&ZOPN)          SETC  '++ XUSERDATA.'                             00514200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).NO_CHANGE'                    00514300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00514400
.*-------------------------------------------------------------------   00514500
.***AM.L03 XOPTIONS BL.8                                                00514600
&ZOPN                 SETA &ZOPN+1                                      00514700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XOPTIONS'                         00514800
&ZOPO(&ZOPN)          SETC 'DS'                                         00514900
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00515000
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00515100
.*                                                                      00515200
&ZOPN                 SETA  &ZOPN+1                                     00515300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSTATUS_SAVED'                   00515400
&ZOPO(&ZOPN)          SETC  'EQU'                                       00515500
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00515600
&ZOPD(&ZOPN)          SETC  '++ XSTATUS.'                               00515700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SAVED'                        00515800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00515900
.*                                                                      00516000
&ZOPN                 SETA  &ZOPN+1                                     00516100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSTATUS_COMPLETE'                00516200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00516300
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00516400
&ZOPD(&ZOPN)          SETC  '++ XSTATUS.'                               00516500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).COMPLETE'                     00516600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00516700
.*                                                                      00516800
&ZOPN                 SETA  &ZOPN+1                                     00516900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSTATUS_INCOMPLETE'              00517000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00517100
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             00517200
&ZOPD(&ZOPN)          SETC  '++ XSTATUS.'                               00517300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).INCOMPLETE'                   00517400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00517500
.*-------------------------------------------------------------------   00517600
.***AM.L09  XMQAALEVEL XL1                                              00517700
&ZOPN                 SETA &ZOPN+1                                      00517800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMQAALEVEL'                       00517900
&ZOPO(&ZOPN)          SETC 'DS'                                         00518000
&ZOPV(&ZOPN)          SETC 'XL1'                                        00518100
&ZOPD(&ZOPN)          SETC '++ &ZXMQAALEVEL '                           00518200
.*-------------------------------------------------------------------   00518300
.***AM.L09  XRSV0001 CL2                                                00518400
&ZOPN                 SETA &ZOPN+1                                      00518500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0001'                         00518600
&ZOPO(&ZOPN)          SETC 'DS'                                         00518700
&ZOPV(&ZOPN)          SETC 'CL2'                                        00518800
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00518900
.*-------------------------------------------------------------------   00519000
.***AM.L09  XMEMTOKEN BL.64                                             00519100
&ZOPN                 SETA &ZOPN+1                                      00519200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMEMTOKEN'                        00519300
&ZOPO(&ZOPN)          SETC 'DS'                                         00519400
&ZOPV(&ZOPN)          SETC 'BL.64'                                      00519500
&ZOPD(&ZOPN)          SETC '++ &ZXMEMTOKEN '                            00519600
.*-------------------------------------------------------------------   00519700
.***AM.L09  XTOKEN CL16                                                 00519800
&ZOPN                 SETA &ZOPN+1                                      00519900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XTOKEN'                           00520000
&ZOPO(&ZOPN)          SETC 'DS'                                         00520100
&ZOPV(&ZOPN)          SETC 'CL16'                                       00520200
&ZOPD(&ZOPN)          SETC '++ &ZXTOKEN '                               00520300
.*-------------------------------------------------------------------   00520400
.***AM.L09  XSOURCE BL.64                                               00520500
&ZOPN                 SETA &ZOPN+1                                      00520600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSOURCE'                          00520700
&ZOPO(&ZOPN)          SETC 'DS'                                         00520800
&ZOPV(&ZOPN)          SETC 'BL.64'                                      00520900
&ZOPD(&ZOPN)          SETC '++ &ZXSOURCE '                              00521000
.*-------------------------------------------------------------------   00521100
.***AM.L09  XUSERDATA CL8                                               00521200
&ZOPN                 SETA &ZOPN+1                                      00521300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XUSERDATA'                        00521400
&ZOPO(&ZOPN)          SETC 'DS'                                         00521500
&ZOPV(&ZOPN)          SETC 'CL8'                                        00521600
&ZOPD(&ZOPN)          SETC '++ &ZXUSERDATA '                            00521700
.*-------------------------------------------------------------------   00521800
.***AM.L09  XEXITPARMS BL.64                                            00521900
&ZOPN                 SETA &ZOPN+1                                      00522000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XEXITPARMS'                       00522100
&ZOPO(&ZOPN)          SETC 'DS'                                         00522200
&ZOPV(&ZOPN)          SETC 'BL.64'                                      00522300
&ZOPD(&ZOPN)          SETC '++ &ZXEXITPARMS '                           00522400
.*-------------------------------------------------------------------   00522500
.***AM.L09  XEXIT A                                                     00522600
&ZOPN                 SETA &ZOPN+1                                      00522700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XEXIT'                            00522800
&ZOPO(&ZOPN)          SETC 'DS'                                         00522900
&ZOPV(&ZOPN)          SETC 'A'                                          00523000
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            00523100
.*-------------------------------------------------------------------   00523200
.***AM.L09 ADDR XANSAREA A                                              00523300
&ZOPN                 SETA &ZOPN+1                                      00523400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XANSAREA_ADDR'                    00523500
&ZOPO(&ZOPN)          SETC 'DS'                                         00523600
&ZOPV(&ZOPN)          SETC 'A'                                          00523700
&ZOPD(&ZOPN)          SETC '++ &ZXANSAREA ADDR'                         00523800
.*-------------------------------------------------------------------   00523900
.***AM.L09 ADDR XRETMSGTOKEN A                                          00524000
&ZOPN                 SETA &ZOPN+1                                      00524100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRETMSGTOKEN_ADDR'                00524200
&ZOPO(&ZOPN)          SETC 'DS'                                         00524300
&ZOPV(&ZOPN)          SETC 'A'                                          00524400
&ZOPD(&ZOPN)          SETC '++ &ZXRETMSGTOKEN ADDR'                     00524500
.*-------------------------------------------------------------------   00524600
.***AM.L09 ALET XANSAREA F                                              00524700
&ZOPN                 SETA &ZOPN+1                                      00524800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XANSAREA_ALET'                    00524900
&ZOPO(&ZOPN)          SETC 'DS'                                         00525000
&ZOPV(&ZOPN)          SETC 'F'                                          00525100
&ZOPD(&ZOPN)          SETC '++ &ZXANSAREA ALET'                         00525200
.*-------------------------------------------------------------------   00525300
.***AM.L09 ALET XRETMSGTOKEN F                                          00525400
&ZOPN                 SETA &ZOPN+1                                      00525500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRETMSGTOKEN_ALET'                00525600
&ZOPO(&ZOPN)          SETC 'DS'                                         00525700
&ZOPV(&ZOPN)          SETC 'F'                                          00525800
&ZOPD(&ZOPN)          SETC '++ &ZXRETMSGTOKEN ALET'                     00525900
.*-------------------------------------------------------------------   00526000
.***AM.L09  XANSLEN F                                                   00526100
&ZOPN                 SETA &ZOPN+1                                      00526200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XANSLEN'                          00526300
&ZOPO(&ZOPN)          SETC 'DS'                                         00526400
&ZOPV(&ZOPN)          SETC 'F'                                          00526500
&ZOPD(&ZOPN)          SETC '++ &ZXANSLEN '                              00526600
.*-------------------------------------------------------------------   00526700
.***AM.MLM2 SAVED LOCATION COUNTER                                      00526800
                      AIF  (&XPLISTVER GE 1).ZL37LA                     00526900
                      AIF  ('&ZENDBASEPL' NE '').ZL37LA                 00527000
&ZENDBASEPL           SETC 'YES'                                        00527100
&ZOPN                 SETA &ZOPN+1                                      00527200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00527300
&ZOPO(&ZOPN)          SETC 'EQU'                                        00527400
&ZOPV(&ZOPN)          SETC '*'                                          00527500
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00527600
.ZL37LA               ANOP  ,                                           00527700
.*-------------------------------------------------------------------   00527800
.***AM.LVER1                                                            00527900
                      AIF  (&XPLISTVER LT 1).ZL37L                      00528000
.*-------------------------------------------------------------------   00528100
.*-------------------------------------------------------------------   00528200
.***AM.L09  XCFDATA F                                                   00528300
&ZOPN                 SETA &ZOPN+1                                      00528400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCFDATA'                          00528500
&ZOPO(&ZOPN)          SETC 'DS'                                         00528600
&ZOPV(&ZOPN)          SETC 'F'                                          00528700
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            00528800
.*-------------------------------------------------------------------   00528900
.***AM.LVER2                                                            00529000
.ZL37L                ANOP  ,                                           00529100
.*-------------------------------------------------------------------   00529200
.*-------------------------------------------------------------------   00529300
.***AM.MLM2 SAVED LOCATION COUNTER                                      00529400
                      AIF  (&XPLISTVER GE 2).ZL38LA                     00529500
                      AIF  ('&ZENDBASEPL' NE '').ZL38LA                 00529600
&ZENDBASEPL           SETC 'YES'                                        00529700
&ZOPN                 SETA &ZOPN+1                                      00529800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00529900
&ZOPO(&ZOPN)          SETC 'EQU'                                        00530000
&ZOPV(&ZOPN)          SETC '*'                                          00530100
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00530200
.ZL38LA               ANOP  ,                                           00530300
.*-------------------------------------------------------------------   00530400
.***AM.LVER1                                                            00530500
                      AIF  (&XPLISTVER LT 2).ZL38L                      00530600
.*-------------------------------------------------------------------   00530700
.*-------------------------------------------------------------------   00530800
.***AM.L03 XKEYUSEDVER2 BL.8                                            00530900
&ZOPN                 SETA &ZOPN+1                                      00531000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XKEYUSEDVER2'                     00531100
&ZOPO(&ZOPN)          SETC 'DS'                                         00531200
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00531300
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00531400
.*-------------------------------------------------------------------   00531500
.***AM.LVER2                                                            00531600
.ZL38L                ANOP  ,                                           00531700
.*-------------------------------------------------------------------   00531800
.*-------------------------------------------------------------------   00531900
.***AM.LVER1                                                            00532000
                      AIF  (&XPLISTVER LT 2).ZL39L                      00532100
.*-------------------------------------------------------------------   00532200
.*                                                                      00532300
&ZOPN                 SETA  &ZOPN+1                                     00532400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XHOLDTIME_INDEFINITE'            00532500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00532600
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00532700
&ZOPD(&ZOPN)          SETC  '++ XHOLDTIME.'                             00532800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).INDEFINITE'                   00532900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00533000
.*-------------------------------------------------------------------   00533100
.***AM.LVER2                                                            00533200
.ZL39L                ANOP  ,                                           00533300
.*-------------------------------------------------------------------   00533400
.*-------------------------------------------------------------------   00533500
.***AM.LVER1                                                            00533600
                      AIF  (&XPLISTVER LT 2).ZL40L                      00533700
.*-------------------------------------------------------------------   00533800
.*                                                                      00533900
&ZOPN                 SETA  &ZOPN+1                                     00534000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XHOLDTIME_CONTINUE'              00534100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00534200
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00534300
&ZOPD(&ZOPN)          SETC  '++ XHOLDTIME.'                             00534400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).CONTINUE'                     00534500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00534600
.*-------------------------------------------------------------------   00534700
.***AM.LVER2                                                            00534800
.ZL40L                ANOP  ,                                           00534900
.*-------------------------------------------------------------------   00535000
.*-------------------------------------------------------------------   00535100
.***AM.LVER1                                                            00535200
                      AIF  (&XPLISTVER LT 2).ZL41L                      00535300
.*-------------------------------------------------------------------   00535400
.*                                                                      00535500
&ZOPN                 SETA  &ZOPN+1                                     00535600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XHOLDTIME_SET'                   00535700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00535800
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             00535900
&ZOPD(&ZOPN)          SETC  '++ XHOLDTIME.'                             00536000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SET'                          00536100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00536200
.*-------------------------------------------------------------------   00536300
.***AM.LVER2                                                            00536400
.ZL41L                ANOP  ,                                           00536500
.*-------------------------------------------------------------------   00536600
.*-------------------------------------------------------------------   00536700
.***AM.LVER1                                                            00536800
                      AIF  (&XPLISTVER LT 2).ZL42L                      00536900
.*-------------------------------------------------------------------   00537000
.*                                                                      00537100
&ZOPN                 SETA  &ZOPN+1                                     00537200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_MSGTAG'                  00537300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00537400
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             00537500
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00537600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).MSGTAG'                       00537700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00537800
.*-------------------------------------------------------------------   00537900
.***AM.LVER2                                                            00538000
.ZL42L                ANOP  ,                                           00538100
.*-------------------------------------------------------------------   00538200
.*-------------------------------------------------------------------   00538300
.***AM.LVER1                                                            00538400
                      AIF  (&XPLISTVER LT 2).ZL43L                      00538500
.*-------------------------------------------------------------------   00538600
.*                                                                      00538700
&ZOPN                 SETA  &ZOPN+1                                     00538800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_MSGTAGFILTER'            00538900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00539000
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             00539100
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00539200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).MSGTAGFILTER'                 00539300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00539400
.*-------------------------------------------------------------------   00539500
.***AM.LVER2                                                            00539600
.ZL43L                ANOP  ,                                           00539700
.*-------------------------------------------------------------------   00539800
.*-------------------------------------------------------------------   00539900
.***AM.LVER1                                                            00540000
                      AIF  (&XPLISTVER LT 2).ZL44L                      00540100
.*-------------------------------------------------------------------   00540200
.*                                                                      00540300
&ZOPN                 SETA  &ZOPN+1                                     00540400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMSGTAGMASK_ALL'                 00540500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00540600
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             00540700
&ZOPD(&ZOPN)          SETC  '++ XMSGTAGMASK.'                           00540800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ALL'                          00540900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00541000
.*-------------------------------------------------------------------   00541100
.***AM.LVER2                                                            00541200
.ZL44L                ANOP  ,                                           00541300
.*-------------------------------------------------------------------   00541400
.*-------------------------------------------------------------------   00541500
.***AM.LVER1                                                            00541600
                      AIF  (&XPLISTVER LT 2).ZL45L                      00541700
.*-------------------------------------------------------------------   00541800
.*-------------------------------------------------------------------   00541900
.***AM.L05 XMSGTOKENTYPE XL1                                            00542000
&ZOPN                 SETA &ZOPN+1                                      00542100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMSGTOKENTYPE'                    00542200
&ZOPO(&ZOPN)          SETC 'DS'                                         00542300
&ZOPV(&ZOPN)          SETC 'XL1'                                        00542400
&ZOPD(&ZOPN)          SETC '++ &ZXMSGTOKENTYPE XMSGTOKENTYPE'           00542500
.*-------------------------------------------------------------------   00542600
.***AM.LVER2                                                            00542700
.ZL45L                ANOP  ,                                           00542800
.*-------------------------------------------------------------------   00542900
.*-------------------------------------------------------------------   00543000
.***AM.LVER1                                                            00543100
                      AIF  (&XPLISTVER LT 2).ZL46L                      00543200
.*-------------------------------------------------------------------   00543300
.*                                                                      00543400
&ZOPN                 SETA  &ZOPN+1                                     00543500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMSGTOKENTYPE_TOKEN'             00543600
&ZOPO(&ZOPN)          SETC  'EQU'                                       00543700
&ZOPV(&ZOPN)          SETC  '1'                                         00543800
&ZOPD(&ZOPN)          SETC  '++ XMSGTOKENTYPE.'                         00543900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).TOKEN'                        00544000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00544100
.*-------------------------------------------------------------------   00544200
.***AM.LVER2                                                            00544300
.ZL46L                ANOP  ,                                           00544400
.*-------------------------------------------------------------------   00544500
.*-------------------------------------------------------------------   00544600
.***AM.LVER1                                                            00544700
                      AIF  (&XPLISTVER LT 2).ZL47L                      00544800
.*-------------------------------------------------------------------   00544900
.*                                                                      00545000
&ZOPN                 SETA  &ZOPN+1                                     00545100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMSGTOKENTYPE_SENDTOKEN'         00545200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00545300
&ZOPV(&ZOPN)          SETC  '2'                                         00545400
&ZOPD(&ZOPN)          SETC  '++ XMSGTOKENTYPE.'                         00545500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SENDTOKEN'                    00545600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00545700
.*-------------------------------------------------------------------   00545800
.***AM.LVER2                                                            00545900
.ZL47L                ANOP  ,                                           00546000
.*-------------------------------------------------------------------   00546100
.*-------------------------------------------------------------------   00546200
.***AM.LVER1                                                            00546300
                      AIF  (&XPLISTVER LT 2).ZL48L                      00546400
.*-------------------------------------------------------------------   00546500
.*-------------------------------------------------------------------   00546600
.***AM.L09  XTIME XL2                                                   00546700
&ZOPN                 SETA &ZOPN+1                                      00546800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XTIME'                            00546900
&ZOPO(&ZOPN)          SETC 'DS'                                         00547000
&ZOPV(&ZOPN)          SETC 'XL2'                                        00547100
&ZOPD(&ZOPN)          SETC '++ &ZXTIME '                                00547200
.*-------------------------------------------------------------------   00547300
.***AM.LVER2                                                            00547400
.ZL48L                ANOP  ,                                           00547500
.*-------------------------------------------------------------------   00547600
.*-------------------------------------------------------------------   00547700
.***AM.LVER1                                                            00547800
                      AIF  (&XPLISTVER LT 2).ZL49L                      00547900
.*-------------------------------------------------------------------   00548000
.*-------------------------------------------------------------------   00548100
.***AM.L09 ADDR XMSGTAG A                                               00548200
&ZOPN                 SETA &ZOPN+1                                      00548300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMSGTAG_ADDR'                     00548400
&ZOPO(&ZOPN)          SETC 'DS'                                         00548500
&ZOPV(&ZOPN)          SETC 'A'                                          00548600
&ZOPD(&ZOPN)          SETC '++ &ZXMSGTAG ADDR'                          00548700
.*-------------------------------------------------------------------   00548800
.***AM.LVER2                                                            00548900
.ZL49L                ANOP  ,                                           00549000
.*-------------------------------------------------------------------   00549100
.*-------------------------------------------------------------------   00549200
.***AM.LVER1                                                            00549300
                      AIF  (&XPLISTVER LT 2).ZL50L                      00549400
.*-------------------------------------------------------------------   00549500
.*-------------------------------------------------------------------   00549600
.***AM.L09 ALET XMSGTAG F                                               00549700
&ZOPN                 SETA &ZOPN+1                                      00549800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMSGTAG_ALET'                     00549900
&ZOPO(&ZOPN)          SETC 'DS'                                         00550000
&ZOPV(&ZOPN)          SETC 'F'                                          00550100
&ZOPD(&ZOPN)          SETC '++ &ZXMSGTAG ALET'                          00550200
.*-------------------------------------------------------------------   00550300
.***AM.LVER2                                                            00550400
.ZL50L                ANOP  ,                                           00550500
.*-------------------------------------------------------------------   00550600
.*-------------------------------------------------------------------   00550700
.***AM.LVER1                                                            00550800
                      AIF  (&XPLISTVER LT 2).ZL51L                      00550900
.*-------------------------------------------------------------------   00551000
.*-------------------------------------------------------------------   00551100
.***AM.L09 ADDR XMSGTAGFILTER A                                         00551200
&ZOPN                 SETA &ZOPN+1                                      00551300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMSGTAGFILTER_ADDR'               00551400
&ZOPO(&ZOPN)          SETC 'DS'                                         00551500
&ZOPV(&ZOPN)          SETC 'A'                                          00551600
&ZOPD(&ZOPN)          SETC '++ &ZXMSGTAGFILTER ADDR'                    00551700
.*-------------------------------------------------------------------   00551800
.***AM.LVER2                                                            00551900
.ZL51L                ANOP  ,                                           00552000
.*-------------------------------------------------------------------   00552100
.*-------------------------------------------------------------------   00552200
.***AM.LVER1                                                            00552300
                      AIF  (&XPLISTVER LT 2).ZL52L                      00552400
.*-------------------------------------------------------------------   00552500
.*-------------------------------------------------------------------   00552600
.***AM.L09 ALET XMSGTAGFILTER F                                         00552700
&ZOPN                 SETA &ZOPN+1                                      00552800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMSGTAGFILTER_ALET'               00552900
&ZOPO(&ZOPN)          SETC 'DS'                                         00553000
&ZOPV(&ZOPN)          SETC 'F'                                          00553100
&ZOPD(&ZOPN)          SETC '++ &ZXMSGTAGFILTER ALET'                    00553200
.*-------------------------------------------------------------------   00553300
.***AM.LVER2                                                            00553400
.ZL52L                ANOP  ,                                           00553500
.*-------------------------------------------------------------------   00553600
.*-------------------------------------------------------------------   00553700
.***AM.LVER1                                                            00553800
                      AIF  (&XPLISTVER LT 2).ZL53L                      00553900
.*-------------------------------------------------------------------   00554000
.*-------------------------------------------------------------------   00554100
.***AM.L09 ADDR XMSGTAGMASK A                                           00554200
&ZOPN                 SETA &ZOPN+1                                      00554300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMSGTAGMASK_ADDR'                 00554400
&ZOPO(&ZOPN)          SETC 'DS'                                         00554500
&ZOPV(&ZOPN)          SETC 'A'                                          00554600
&ZOPD(&ZOPN)          SETC '++ &ZXMSGTAGMASK ADDR'                      00554700
.*-------------------------------------------------------------------   00554800
.***AM.LVER2                                                            00554900
.ZL53L                ANOP  ,                                           00555000
.*-------------------------------------------------------------------   00555100
.*-------------------------------------------------------------------   00555200
.***AM.LVER1                                                            00555300
                      AIF  (&XPLISTVER LT 2).ZL54L                      00555400
.*-------------------------------------------------------------------   00555500
.*-------------------------------------------------------------------   00555600
.***AM.L09 ALET XMSGTAGMASK F                                           00555700
&ZOPN                 SETA &ZOPN+1                                      00555800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMSGTAGMASK_ALET'                 00555900
&ZOPO(&ZOPN)          SETC 'DS'                                         00556000
&ZOPV(&ZOPN)          SETC 'F'                                          00556100
&ZOPD(&ZOPN)          SETC '++ &ZXMSGTAGMASK ALET'                      00556200
.*-------------------------------------------------------------------   00556300
.***AM.LVER2                                                            00556400
.ZL54L                ANOP  ,                                           00556500
.*-------------------------------------------------------------------   00556600
.*-------------------------------------------------------------------   00556700
.***AM.LVER1                                                            00556800
                      AIF  (&XPLISTVER LT 2).ZL55L                      00556900
.*-------------------------------------------------------------------   00557000
.*-------------------------------------------------------------------   00557100
.***AM.L09 ADDR XSENDTOKEN A                                            00557200
&ZOPN                 SETA &ZOPN+1                                      00557300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSENDTOKEN_ADDR'                  00557400
&ZOPO(&ZOPN)          SETC 'DS'                                         00557500
&ZOPV(&ZOPN)          SETC 'A'                                          00557600
&ZOPD(&ZOPN)          SETC '++ &ZXSENDTOKEN ADDR'                       00557700
.*-------------------------------------------------------------------   00557800
.***AM.LVER2                                                            00557900
.ZL55L                ANOP  ,                                           00558000
.*-------------------------------------------------------------------   00558100
.*-------------------------------------------------------------------   00558200
.***AM.LVER1                                                            00558300
                      AIF  (&XPLISTVER LT 2).ZL56L                      00558400
.*-------------------------------------------------------------------   00558500
.*-------------------------------------------------------------------   00558600
.***AM.L09 ALET XSENDTOKEN F                                            00558700
&ZOPN                 SETA &ZOPN+1                                      00558800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSENDTOKEN_ALET'                  00558900
&ZOPO(&ZOPN)          SETC 'DS'                                         00559000
&ZOPV(&ZOPN)          SETC 'F'                                          00559100
&ZOPD(&ZOPN)          SETC '++ &ZXSENDTOKEN ALET'                       00559200
.*-------------------------------------------------------------------   00559300
.***AM.LVER2                                                            00559400
.ZL56L                ANOP  ,                                           00559500
.*-------------------------------------------------------------------   00559600
.*-------------------------------------------------------------------   00559700
.***AM.L10 END OF IXCMSGC LIST PARAMETERS                               00559800
&ZOPN                 SETA &ZOPN+1                                      00559900
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00560000
&ZOPO(&ZOPN)          SETC 'EQU'                                        00560100
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00560200
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00560300
.*                                                                      00560400
&ZOPN                 SETA &ZOPN+1                                      00560500
&ZOPL(&ZOPN)          SETC ' '                                          00560600
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00560700
&ZOPV(&ZOPN)          SETC '1'                                          00560800
&ZOPD(&ZOPN)          SETC ' '                                          00560900
.*-------------------------------------------------------------------   00561000
.***AL.L12 IXCMSGC FMT=LIST MF=S!L PARAMETERS                           00561100
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00561200
.*                                                                      00561300
&ZOPN                 SETA  &ZOPN+1                                     00561400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00561500
&ZOPO(&ZOPN)          SETC  'DC'                                        00561600
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00561700
&ZOPD(&ZOPN)          SETC  '++ IXCMSGC ARG PARMS'                      00561800
.*                                                                      00561900
.ZLMFSLX              ANOP  ,                                           00562000
.*-------------------------------------------------------------------   00562100
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00562200
&ZPLLEN               SETA 80                                           00562300
.*                                                                      00562400
                      AIF  (&XPLISTVER LT 1).ZLLEN2Z                    00562500
&ZPLLEN               SETA 84                                           00562600
.ZLLEN2Z              ANOP  ,                                           00562700
.*                                                                      00562800
                      AIF  (&XPLISTVER LT 2).ZLLEN3Z                    00562900
&ZPLLEN               SETA 120                                          00563000
.ZLLEN3Z              ANOP  ,                                           00563100
.*                                                                      00563200
.******************************************************************     00563300
.***AI.L01 IXCMSGC FMT=LIST FILL IN PARAMETER AREA                      00563400
.******************************************************************     00563500
                      ACTR  10000                                       00563600
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00563700
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00563800
&ZCVAL                SETC  'LAE'          XAX MODE                     00563900
.ZIMFXA               ANOP ,                                            00564000
.*                                                                      00564100
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00564200
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00564300
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00564400
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00564500
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00564600
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00564700
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00564800
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00564900
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00565000
&ZOPN                 SETA  &ZOPN+1                                     00565100
&ZOPL(&ZOPN)          SETC  ' '                                         00565200
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00565300
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00565400
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00565500
                      AGO   .ZIMFNX                                     00565600
.*                                                                      00565700
.ZIMFN2               ANOP ,                                            00565800
                      AIF   (&SYSALVL EQ 0).ZIMFNX1                     00565900
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     00566000
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  00566100
&ZOPN                 SETA  &ZOPN+1                                     00566200
&ZOPL(&ZOPN)          SETC  ' '                                         00566300
&ZOPO(&ZOPN)          SETC  'LAE'                                       00566400
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  00566500
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00566600
                      AGO   .ZIMFNX                                     00566700
.ZIMFNX1              ANOP ,                                            00566800
&ZOPN                 SETA  &ZOPN+1                                     00566900
&ZOPL(&ZOPN)          SETC  ' '                                         00567000
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00567100
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00567200
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00567300
.ZIMFNX               ANOP ,                                            00567400
.********************************************************************   00567500
.***AI.L02 IXCMSGC FMT=LIST INITIALIZE PARAMETER AREA                   00567600
.********************************************************************   00567700
.***AI.L03 MF=(SLE)                                                     00567800
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00567900
.*                                                                      00568000
&ZOPN                 SETA  &ZOPN+1                                     00568100
&ZOPL(&ZOPN)          SETC  ' '                                         00568200
&ZOPO(&ZOPN)          SETC  'XC'                                        00568300
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00568400
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00568500
.ZIMFLX               ANOP  ,                                           00568600
.*-------------------------------------------------------------------   00568700
.***AI.L04B XVERSION XL1                                                00568800
                      AIF   (&XPLISTVER EQ 0).ZIMFVZ                    00568900
&ZOPN                 SETA  &ZOPN+1                                     00569000
&ZOPL(&ZOPN)          SETC  ' '                                         00569100
&ZOPO(&ZOPN)          SETC  'MVI'                                       00569200
&ZOPV(&ZOPN)          SETC  '0(1),&XPLISTVER'                           00569300
&ZOPD(&ZOPN)          SETC  '++ INPUT XVERSION XL1'                     00569400
.ZIMFVZ               ANOP  ,                                           00569500
.*-------------------------------------------------------------------   00569600
.***AI.L07 XREQUEST AL1                                                 00569700
&ZW                   SETC  ''                                          00569800
.*-------------------------------------------------------------------   00569900
.***AI.L15 XREQUEST "SAVEMSG" AL1                                       00570000
         AIF   ('&XREQUEST' NE 'SAVEMSG').ZI3A                          00570100
&ZW                   SETC  '1'                                         00570200
.ZI3A                 ANOP  ,                                           00570300
.*-------------------------------------------------------------------   00570400
.***AI.L15 XREQUEST "DISCARDMSG" AL1                                    00570500
         AIF   ('&XREQUEST' NE 'DISCARDMSG').ZI4A                       00570600
&ZW                   SETC  '2'                                         00570700
.ZI4A                 ANOP  ,                                           00570800
.*-------------------------------------------------------------------   00570900
.***AI.L15 XREQUEST "QUERYMSG" AL1                                      00571000
         AIF   ('&XREQUEST' NE 'QUERYMSG').ZI5A                         00571100
&ZW                   SETC  '3'                                         00571200
.ZI5A                 ANOP  ,                                           00571300
.*-------------------------------------------------------------------   00571400
.***AI.L15 XREQUEST "COMPLETION" AL1                                    00571500
         AIF   ('&XREQUEST' NE 'COMPLETION').ZI6A                       00571600
&ZW                   SETC  '4'                                         00571700
.ZI6A                 ANOP  ,                                           00571800
.*-------------------------------------------------------------------   00571900
.***AI.L15 XREQUEST "CALLEXIT" AL1                                      00572000
         AIF   ('&XREQUEST' NE 'CALLEXIT').ZI7A                         00572100
&ZW                   SETC  '5'                                         00572200
.ZI7A                 ANOP  ,                                           00572300
.*-------------------------------------------------------------------   00572400
.***AI.L15 XREQUEST "RELEASEMSG" AL1                                    00572500
         AIF   ('&XREQUEST' NE 'RELEASEMSG').ZI8A                       00572600
&ZW                   SETC  '6'                                         00572700
.ZI8A                 ANOP  ,                                           00572800
.*-------------------------------------------------------------------   00572900
.***AI.L17 XREQUEST AL1                                                 00573000
                      AIF   ('&ZW' EQ '0').ZI8B                         00573100
                      AIF   ('&ZW' EQ '').ZI8B                          00573200
.*                                                                      00573300
&ZOPN                 SETA  &ZOPN+1                                     00573400
&ZOPL(&ZOPN)          SETC  ' '                                         00573500
&ZOPO(&ZOPN)          SETC  'MVI'                                       00573600
&ZOPV(&ZOPN)          SETC  '1(1),&ZW'                                  00573700
&ZOPD(&ZOPN)          SETC  '++ &ZXREQUEST XREQUEST'                    00573800
.ZI8B                 ANOP  ,                                           00573900
.*-------------------------------------------------------------------   00574000
.***AI.L05 XTYPE BL1                                                    00574100
&ZW                   SETC  ''                                          00574200
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00574300
.*-------------------------------------------------------------------   00574400
.***AI.L08 XTYPE "FORCE"                                                00574500
.***      BL1'1XXXXXXX'                                                 00574600
         AIF   ('&XTYPE' NE 'FORCE').ZI10A                              00574700
&ZW                   SETC  '&ZW.1'                                     00574800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00574900
                      AGO   .ZI10C                                      00575000
.*                                                                      00575100
.ZI10A                ANOP  ,                                           00575200
&ZW                   SETC  '&ZW.0'                                     00575300
.ZI10C                ANOP  ,                                           00575400
.*-------------------------------------------------------------------   00575500
.***AI.L08 XTYPE "NOTIFYEXIT"                                           00575600
.***      BL1'XX1XXXXX'                                                 00575700
         AIF   ('&XCALL' NE 'NOTIFYEXIT').ZI11A                         00575800
&ZW                   SETC  '&ZW.01'                                    00575900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00576000
                      AGO   .ZI11C                                      00576100
.*                                                                      00576200
.ZI11A                ANOP  ,                                           00576300
&ZW                   SETC  '&ZW.00'                                    00576400
.ZI11C                ANOP  ,                                           00576500
.*-------------------------------------------------------------------   00576600
.***AI.L08 XTYPE "MSGEXIT"                                              00576700
.***      BL1'XXX1XXXX'                                                 00576800
         AIF   ('&XCALL' NE 'MSGEXIT').ZI12A                            00576900
&ZW                   SETC  '&ZW.1'                                     00577000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00577100
                      AGO   .ZI12C                                      00577200
.*                                                                      00577300
.ZI12A                ANOP  ,                                           00577400
&ZW                   SETC  '&ZW.0'                                     00577500
.ZI12C                ANOP  ,                                           00577600
.*-------------------------------------------------------------------   00577700
.***AI.L08 XTYPE "DETAIL"                                               00577800
.***      BL1'XXXX1XXX'                                                 00577900
         AIF   ('&XDATATYPE' NE 'DETAIL').ZI13A                         00578000
&ZW                   SETC  '&ZW.1'                                     00578100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00578200
                      AGO   .ZI13C                                      00578300
.*                                                                      00578400
.ZI13A                ANOP  ,                                           00578500
&ZW                   SETC  '&ZW.0'                                     00578600
.ZI13C                ANOP  ,                                           00578700
.*-------------------------------------------------------------------   00578800
.***AI.L08 XTYPE "MSGOUT"                                               00578900
.***      BL1'XXXXX1XX'                                                 00579000
         AIF   ('&XDATATYPE' NE 'MSGOUT').ZI14A                         00579100
&ZW                   SETC  '&ZW.1'                                     00579200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00579300
                      AGO   .ZI14C                                      00579400
.*                                                                      00579500
.ZI14A                ANOP  ,                                           00579600
&ZW                   SETC  '&ZW.0'                                     00579700
.ZI14C                ANOP  ,                                           00579800
.*-------------------------------------------------------------------   00579900
.***AI.L08 XTYPE "MSGIN"                                                00580000
.***      BL1'XXXXXX1X'                                                 00580100
         AIF   ('&XDATATYPE' NE 'MSGIN').ZI15A                          00580200
&ZW                   SETC  '&ZW.10'                                    00580300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00580400
                      AGO   .ZI15C                                      00580500
.*                                                                      00580600
.ZI15A                ANOP  ,                                           00580700
&ZW                   SETC  '&ZW.00'                                    00580800
.ZI15C                ANOP  ,                                           00580900
.*-------------------------------------------------------------------   00581000
.***AI.L11 XTYPE BL1                                                    00581100
                      AIF   ('&ZCLNG' NE 'YES').ZI15E  ALL ZERO BITS    00581200
&ZOPN                 SETA  &ZOPN+1                                     00581300
&ZOPL(&ZOPN)          SETC  ' '                                         00581400
&ZOPO(&ZOPN)          SETC  'OI'                                        00581500
&ZOPV(&ZOPN)          SETC  '2(1),B''&ZW'''                             00581600
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00581700
.ZI15E                ANOP  ,                                           00581800
.*-------------------------------------------------------------------   00581900
.***AI.L05 XKEYUSED3 BL1                                                00582000
&ZW                   SETC  ''                                          00582100
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00582200
.*-------------------------------------------------------------------   00582300
.***AI.L08 XKEYUSED3 "SOURCE"                                           00582400
.***      BL1'1XXXXXXX'                                                 00582500
         AIF   ('&SOURCE' EQ '').ZI17A                                  00582600
&ZW                   SETC  '&ZW.1'                                     00582700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00582800
                      AGO   .ZI17C                                      00582900
.*                                                                      00583000
.ZI17A                ANOP  ,                                           00583100
&ZW                   SETC  '&ZW.0'                                     00583200
.ZI17C                ANOP  ,                                           00583300
.*-------------------------------------------------------------------   00583400
.***AI.L08 XKEYUSED3 "RETMSGTOKEN"                                      00583500
.***      BL1'X1XXXXXX'                                                 00583600
         AIF   ('&RETMSGTOKEN' EQ '').ZI18A                             00583700
&ZW                   SETC  '&ZW.1'                                     00583800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00583900
                      AGO   .ZI18C                                      00584000
.*                                                                      00584100
.ZI18A                ANOP  ,                                           00584200
&ZW                   SETC  '&ZW.0'                                     00584300
.ZI18C                ANOP  ,                                           00584400
.*-------------------------------------------------------------------   00584500
.***AI.L08 XKEYUSED3 "NO_CHANGE"                                        00584600
.***      BL1'XX1XXXXX'                                                 00584700
         AIF   ('&XUSERDATA' NE 'NO_CHANGE').ZI19A                      00584800
&ZW                   SETC  '&ZW.100000'                                00584900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00585000
                      AGO   .ZI19C                                      00585100
.*                                                                      00585200
.ZI19A                ANOP  ,                                           00585300
&ZW                   SETC  '&ZW.000000'                                00585400
.ZI19C                ANOP  ,                                           00585500
.*-------------------------------------------------------------------   00585600
.***AI.L11 XKEYUSED3 BL1                                                00585700
                      AIF   ('&ZCLNG' NE 'YES').ZI19E  ALL ZERO BITS    00585800
&ZOPN                 SETA  &ZOPN+1                                     00585900
&ZOPL(&ZOPN)          SETC  ' '                                         00586000
&ZOPO(&ZOPN)          SETC  'OI'                                        00586100
&ZOPV(&ZOPN)          SETC  '3(1),B''&ZW'''                             00586200
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00586300
.ZI19E                ANOP  ,                                           00586400
.*-------------------------------------------------------------------   00586500
.***AI.L05 XOPTIONS BL1                                                 00586600
&ZW                   SETC  ''                                          00586700
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00586800
.*-------------------------------------------------------------------   00586900
.***AI.L08 XOPTIONS "SAVED"                                             00587000
.***      BL1'1XXXXXXX'                                                 00587100
         AIF   ('&XSTATUS' NE 'SAVED').ZI21A                            00587200
&ZW                   SETC  '&ZW.1'                                     00587300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00587400
                      AGO   .ZI21C                                      00587500
.*                                                                      00587600
.ZI21A                ANOP  ,                                           00587700
&ZW                   SETC  '&ZW.0'                                     00587800
.ZI21C                ANOP  ,                                           00587900
.*-------------------------------------------------------------------   00588000
.***AI.L08 XOPTIONS "COMPLETE"                                          00588100
.***      BL1'X1XXXXXX'                                                 00588200
         AIF   ('&XSTATUS' NE 'COMPLETE').ZI22A                         00588300
&ZW                   SETC  '&ZW.1'                                     00588400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00588500
                      AGO   .ZI22C                                      00588600
.*                                                                      00588700
.ZI22A                ANOP  ,                                           00588800
&ZW                   SETC  '&ZW.0'                                     00588900
.ZI22C                ANOP  ,                                           00589000
.*-------------------------------------------------------------------   00589100
.***AI.L08 XOPTIONS "INCOMPLETE"                                        00589200
.***      BL1'XX1XXXXX'                                                 00589300
         AIF   ('&XSTATUS' NE 'INCOMPLETE').ZI23A                       00589400
&ZW                   SETC  '&ZW.100000'                                00589500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00589600
                      AGO   .ZI23C                                      00589700
.*                                                                      00589800
.ZI23A                ANOP  ,                                           00589900
&ZW                   SETC  '&ZW.000000'                                00590000
.ZI23C                ANOP  ,                                           00590100
.*-------------------------------------------------------------------   00590200
.***AI.L11 XOPTIONS BL1                                                 00590300
                      AIF   ('&ZCLNG' NE 'YES').ZI23E  ALL ZERO BITS    00590400
&ZOPN                 SETA  &ZOPN+1                                     00590500
&ZOPL(&ZOPN)          SETC  ' '                                         00590600
&ZOPO(&ZOPN)          SETC  'OI'                                        00590700
&ZOPV(&ZOPN)          SETC  '4(1),B''&ZW'''                             00590800
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00590900
.ZI23E                ANOP  ,                                           00591000
.*-------------------------------------------------------------------   00591100
.***AI.L25  XMQAALEVEL XL1                                              00591200
                      AIF   ('&ZXMQAALEVEL' EQ '').ZI24E                00591300
                      AIF   ('&ZXMQAALEVEL' EQ 'OUTPUT').ZI24E          00591400
&ZCGPR                SETC  '&XMQAALEVEL'                               00591500
         AIF   ('&XMQAALEVEL' EQ '0').ZI24E                             00591600
         AIF   ('&XMQAALEVEL' EQ '0').ZI24E                             00591700
.*                                                                      00591800
                      AIF   ('&XMQAALEVEL'(1,1) NE '(').ZI24B           00591900
&ZCGPR   SETC  '0('.'&XMQAALEVEL'(2,K'&XMQAALEVEL-2).')'                00592000
                      AGO   .ZI24D                                      00592100
.ZI24B                ANOP  ,                                           00592200
.*                                                                      00592300
&ZC                   SETC  '&XMQAALEVEL'(1,1)                          00592400
                      AIF   (T'&ZC NE 'N').ZI24D                        00592500
&ZC                   SETC  '&XMQAALEVEL'                               00592600
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI24D               00592700
&ZCGPR                SETC  '=AL1(&XMQAALEVEL)'                         00592800
.*                                                                      00592900
.ZI24D                ANOP  ,                                           00593000
.*                                                                      00593100
&ZOPN                 SETA  &ZOPN+1                                     00593200
&ZOPL(&ZOPN)          SETC  ' '                                         00593300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00593400
&ZOPV(&ZOPN)          SETC  '5(1,1),&ZCGPR'                             00593500
&ZOPD(&ZOPN)          SETC  '++ &ZXMQAALEVEL XMQAALEVEL'                00593600
.*                                                                      00593700
.ZI24E                ANOP  ,                                           00593800
.*-------------------------------------------------------------------   00593900
.***AI.L25  XMEMTOKEN XL8                                               00594000
                      AIF   ('&ZXMEMTOKEN' EQ '').ZI26E                 00594100
                      AIF   ('&ZXMEMTOKEN' EQ 'OUTPUT').ZI26E           00594200
&ZCGPR                SETC  '&XMEMTOKEN'                                00594300
.*                                                                      00594400
                      AIF   ('&XMEMTOKEN'(1,1) NE '(').ZI26B            00594500
&ZCGPR   SETC  '0('.'&XMEMTOKEN'(2,K'&XMEMTOKEN-2).')'                  00594600
                      AGO   .ZI26D                                      00594700
.ZI26B                ANOP  ,                                           00594800
.*                                                                      00594900
&ZC                   SETC  '&XMEMTOKEN'(1,1)                           00595000
                      AIF   (T'&ZC NE 'N').ZI26D                        00595100
&ZC                   SETC  '&XMEMTOKEN'                                00595200
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI26D               00595300
&ZCGPR                SETC  '=BL8''&XMEMTOKEN'''                        00595400
.*                                                                      00595500
.ZI26D                ANOP  ,                                           00595600
.*                                                                      00595700
&ZOPN                 SETA  &ZOPN+1                                     00595800
&ZOPL(&ZOPN)          SETC  ' '                                         00595900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00596000
&ZOPV(&ZOPN)          SETC  '8(8,1),&ZCGPR'                             00596100
&ZOPD(&ZOPN)          SETC  '++ &ZXMEMTOKEN XMEMTOKEN'                  00596200
.*                                                                      00596300
.ZI26E                ANOP  ,                                           00596400
.*-------------------------------------------------------------------   00596500
.***AI.L25  XTOKEN CL16                                                 00596600
                      AIF   ('&ZXTOKEN' EQ '').ZI27E                    00596700
                      AIF   ('&ZXTOKEN' EQ 'OUTPUT').ZI27E              00596800
&ZCGPR                SETC  '&XTOKEN'                                   00596900
.*                                                                      00597000
                      AIF   ('&XTOKEN'(1,1) NE '(').ZI27B               00597100
&ZCGPR   SETC  '0('.'&XTOKEN'(2,K'&XTOKEN-2).')'                        00597200
.ZI27B                ANOP  ,                                           00597300
.*                                                                      00597400
&ZOPN                 SETA  &ZOPN+1                                     00597500
&ZOPL(&ZOPN)          SETC  ' '                                         00597600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00597700
&ZOPV(&ZOPN)          SETC  '16(16,1),&ZCGPR'                           00597800
&ZOPD(&ZOPN)          SETC  '++ &ZXTOKEN XTOKEN'                        00597900
.*                                                                      00598000
.ZI27E                ANOP  ,                                           00598100
.*-------------------------------------------------------------------   00598200
.***AI.L18  XSOURCE XL8                                                 00598300
         AIF   ('&XSOURCE' NE 'ANY').ZI28                               00598400
&ZXSOURCE             SETC  ''             RESET INPUT/OUTPUT           00598500
.ZI28                 ANOP  ,                                           00598600
.*-------------------------------------------------------------------   00598700
.***AI.L25  XSOURCE XL8                                                 00598800
                      AIF   ('&ZXSOURCE' EQ '').ZI28E                   00598900
                      AIF   ('&ZXSOURCE' EQ 'OUTPUT').ZI28E             00599000
&ZCGPR                SETC  '&XSOURCE'                                  00599100
.*                                                                      00599200
                      AIF   ('&XSOURCE'(1,1) NE '(').ZI28B              00599300
&ZCGPR   SETC  '0('.'&XSOURCE'(2,K'&XSOURCE-2).')'                      00599400
                      AGO   .ZI28D                                      00599500
.ZI28B                ANOP  ,                                           00599600
.*                                                                      00599700
&ZC                   SETC  '&XSOURCE'(1,1)                             00599800
                      AIF   (T'&ZC NE 'N').ZI28D                        00599900
&ZC                   SETC  '&XSOURCE'                                  00600000
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI28D               00600100
&ZCGPR                SETC  '=BL8''&XSOURCE'''                          00600200
.*                                                                      00600300
.ZI28D                ANOP  ,                                           00600400
.*                                                                      00600500
&ZOPN                 SETA  &ZOPN+1                                     00600600
&ZOPL(&ZOPN)          SETC  ' '                                         00600700
&ZOPO(&ZOPN)          SETC  'MVC'                                       00600800
&ZOPV(&ZOPN)          SETC  '32(8,1),&ZCGPR'                            00600900
&ZOPD(&ZOPN)          SETC  '++ &ZXSOURCE XSOURCE'                      00601000
.*                                                                      00601100
.ZI28E                ANOP  ,                                           00601200
.*-------------------------------------------------------------------   00601300
.***AI.L18  XUSERDATA CL8                                               00601400
         AIF   ('&XUSERDATA' NE 'NO_CHANGE').ZI29                       00601500
&ZXUSERDATA           SETC  ''             RESET INPUT/OUTPUT           00601600
.ZI29                 ANOP  ,                                           00601700
.*-------------------------------------------------------------------   00601800
.***AI.L25  XUSERDATA CL8                                               00601900
                      AIF   ('&ZXUSERDATA' EQ '').ZI29E                 00602000
                      AIF   ('&ZXUSERDATA' EQ 'OUTPUT').ZI29E           00602100
&ZCGPR                SETC  '&XUSERDATA'                                00602200
.*                                                                      00602300
                      AIF   ('&XUSERDATA'(1,1) NE '(').ZI29B            00602400
&ZCGPR   SETC  '0('.'&XUSERDATA'(2,K'&XUSERDATA-2).')'                  00602500
.ZI29B                ANOP  ,                                           00602600
.*                                                                      00602700
&ZOPN                 SETA  &ZOPN+1                                     00602800
&ZOPL(&ZOPN)          SETC  ' '                                         00602900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00603000
&ZOPV(&ZOPN)          SETC  '40(8,1),&ZCGPR'                            00603100
&ZOPD(&ZOPN)          SETC  '++ &ZXUSERDATA XUSERDATA'                  00603200
.*                                                                      00603300
.ZI29E                ANOP  ,                                           00603400
.*-------------------------------------------------------------------   00603500
.***AI.L18  XEXITPARMS XL8                                              00603600
         AIF   ('&XEXITPARMS' NE 'ZERO').ZI30                           00603700
&ZXEXITPARMS          SETC  ''             RESET INPUT/OUTPUT           00603800
.ZI30                 ANOP  ,                                           00603900
.*-------------------------------------------------------------------   00604000
.***AI.L25  XEXITPARMS XL8                                              00604100
                      AIF   ('&ZXEXITPARMS' EQ '').ZI30E                00604200
                      AIF   ('&ZXEXITPARMS' EQ 'OUTPUT').ZI30E          00604300
&ZCGPR                SETC  '&XEXITPARMS'                               00604400
.*                                                                      00604500
                      AIF   ('&XEXITPARMS'(1,1) NE '(').ZI30B           00604600
&ZCGPR   SETC  '0('.'&XEXITPARMS'(2,K'&XEXITPARMS-2).')'                00604700
                      AGO   .ZI30D                                      00604800
.ZI30B                ANOP  ,                                           00604900
.*                                                                      00605000
&ZC                   SETC  '&XEXITPARMS'(1,1)                          00605100
                      AIF   (T'&ZC NE 'N').ZI30D                        00605200
&ZC                   SETC  '&XEXITPARMS'                               00605300
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI30D               00605400
&ZCGPR                SETC  '=BL8''&XEXITPARMS'''                       00605500
.*                                                                      00605600
.ZI30D                ANOP  ,                                           00605700
.*                                                                      00605800
&ZOPN                 SETA  &ZOPN+1                                     00605900
&ZOPL(&ZOPN)          SETC  ' '                                         00606000
&ZOPO(&ZOPN)          SETC  'MVC'                                       00606100
&ZOPV(&ZOPN)          SETC  '48(8,1),&ZCGPR'                            00606200
&ZOPD(&ZOPN)          SETC  '++ &ZXEXITPARMS XEXITPARMS'                00606300
.*                                                                      00606400
.ZI30E                ANOP  ,                                           00606500
.*-------------------------------------------------------------------   00606600
.***AI.L19 ADDR XANSAREA A                                              00606700
                      AIF   ('&ZXANSAREA' EQ '').ZI32H                  00606800
&ZCLNG                SETC  '&XANSAREA'                                 00606900
&ZCGPR                SETC  '14'                                        00607000
         AIF   ('&XANSAREA'(1,1) EQ '(').ZI32F  IN GPR                  00607100
.*                                                                      00607200
&ZOPN                 SETA  &ZOPN+1                                     00607300
&ZOPL(&ZOPN)          SETC  ' '                                         00607400
&ZOPO(&ZOPN)          SETC  'LA'                                        00607500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00607600
&ZOPD(&ZOPN)          SETC  '++ &ZXANSAREA XANSAREA'                    00607700
.*                                                                      00607800
                      AGO   .ZI32G                                      00607900
.*                                                                      00608000
.ZI32F                ANOP  ,                                           00608100
&ZCGPR   SETC  '&XANSAREA'(2,K'&XANSAREA-2)                             00608200
.*                                                                      00608300
.ZI32G                ANOP  ,                                           00608400
.*                                                                      00608500
&ZOPN                 SETA  &ZOPN+1                                     00608600
&ZOPL(&ZOPN)          SETC  ' '                                         00608700
&ZOPO(&ZOPN)          SETC  'ST'                                        00608800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,60(,1)'                             00608900
&ZOPD(&ZOPN)          SETC  '++ &ZXANSAREA XANSAREA'                    00609000
.*                                                                      00609100
.ZI32H                ANOP  ,                                           00609200
.*-------------------------------------------------------------------   00609300
.***AI.L19 ADDR XRETMSGTOKEN A                                          00609400
                      AIF   ('&ZXRETMSGTOKEN' EQ '').ZI33H              00609500
&ZCLNG                SETC  '&XRETMSGTOKEN'                             00609600
&ZCGPR                SETC  '14'                                        00609700
         AIF   ('&XRETMSGTOKEN'(1,1) EQ '(').ZI33F  IN GPR              00609800
.*                                                                      00609900
&ZOPN                 SETA  &ZOPN+1                                     00610000
&ZOPL(&ZOPN)          SETC  ' '                                         00610100
&ZOPO(&ZOPN)          SETC  'LA'                                        00610200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00610300
&ZOPD(&ZOPN)          SETC  '++ &ZXRETMSGTOKEN XRETMSGTOKEN'            00610400
.*                                                                      00610500
                      AGO   .ZI33G                                      00610600
.*                                                                      00610700
.ZI33F                ANOP  ,                                           00610800
&ZCGPR   SETC  '&XRETMSGTOKEN'(2,K'&XRETMSGTOKEN-2)                     00610900
.*                                                                      00611000
.ZI33G                ANOP  ,                                           00611100
.*                                                                      00611200
&ZOPN                 SETA  &ZOPN+1                                     00611300
&ZOPL(&ZOPN)          SETC  ' '                                         00611400
&ZOPO(&ZOPN)          SETC  'ST'                                        00611500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,64(,1)'                             00611600
&ZOPD(&ZOPN)          SETC  '++ &ZXRETMSGTOKEN XRETMSGTOKEN'            00611700
.*                                                                      00611800
.ZI33H                ANOP  ,                                           00611900
.*-------------------------------------------------------------------   00612000
.***AI.L23 ALET XANSAREA F                                              00612100
         AIF   ('&ZXANSAREA' EQ '').ZI34G                               00612200
         AIF   ('&SYSASCE' EQ 'P').ZI34G   SYSSTATE PRIMARY             00612300
&ZCLNG                SETC  '&XANSAREA'                                 00612400
         AIF   ('&XANSAREA'(1,1) EQ '(').ZI34E  IN AR                   00612500
.*                                                                      00612600
&ZCGPR                SETC  '14'                                        00612700
&ZOPN                 SETA  &ZOPN+1                                     00612800
&ZOPL(&ZOPN)          SETC  ' '                                         00612900
&ZOPO(&ZOPN)          SETC  'LAE'                                       00613000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00613100
&ZOPD(&ZOPN)          SETC  '++ &ZXANSAREA XANSAREA'                    00613200
                      AGO   .ZI34F                                      00613300
.*                                                                      00613400
.ZI34E                ANOP  ,                                           00613500
&ZCGPR   SETC  '&XANSAREA'(2,K'&XANSAREA-2)                             00613600
.*                                                                      00613700
.ZI34F                ANOP  ,                                           00613800
.*                                                                      00613900
&ZOPN                 SETA  &ZOPN+1                                     00614000
&ZOPL(&ZOPN)          SETC  ' '                                         00614100
&ZOPO(&ZOPN)          SETC  'STAM'                                      00614200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,68(1)'                       00614300
&ZOPD(&ZOPN)          SETC  '++ &ZXANSAREA XANSAREA'                    00614400
.*                                                                      00614500
.ZI34G                ANOP  ,                                           00614600
.*-------------------------------------------------------------------   00614700
.***AI.L23 ALET XRETMSGTOKEN F                                          00614800
         AIF   ('&ZXRETMSGTOKEN' EQ '').ZI35G                           00614900
         AIF   ('&SYSASCE' EQ 'P').ZI35G   SYSSTATE PRIMARY             00615000
&ZCLNG                SETC  '&XRETMSGTOKEN'                             00615100
         AIF   ('&XRETMSGTOKEN'(1,1) EQ '(').ZI35E  IN AR               00615200
.*                                                                      00615300
&ZCGPR                SETC  '14'                                        00615400
&ZOPN                 SETA  &ZOPN+1                                     00615500
&ZOPL(&ZOPN)          SETC  ' '                                         00615600
&ZOPO(&ZOPN)          SETC  'LAE'                                       00615700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00615800
&ZOPD(&ZOPN)          SETC  '++ &ZXRETMSGTOKEN XRETMSGTOKEN'            00615900
                      AGO   .ZI35F                                      00616000
.*                                                                      00616100
.ZI35E                ANOP  ,                                           00616200
&ZCGPR   SETC  '&XRETMSGTOKEN'(2,K'&XRETMSGTOKEN-2)                     00616300
.*                                                                      00616400
.ZI35F                ANOP  ,                                           00616500
.*                                                                      00616600
&ZOPN                 SETA  &ZOPN+1                                     00616700
&ZOPL(&ZOPN)          SETC  ' '                                         00616800
&ZOPO(&ZOPN)          SETC  'STAM'                                      00616900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,72(1)'                       00617000
&ZOPD(&ZOPN)          SETC  '++ &ZXRETMSGTOKEN XRETMSGTOKEN'            00617100
.*                                                                      00617200
.ZI35G                ANOP  ,                                           00617300
.*-------------------------------------------------------------------   00617400
.***AI.L25  XANSLEN F                                                   00617500
                      AIF   ('&ZXANSLEN' EQ '').ZI36E                   00617600
                      AIF   ('&ZXANSLEN' EQ 'OUTPUT').ZI36E             00617700
&ZCGPR                SETC  '&XANSLEN'                                  00617800
.*                                                                      00617900
                      AIF   ('&XANSLEN'(1,1) NE '(').ZI36B              00618000
&ZCGPR   SETC  '0('.'&XANSLEN'(2,K'&XANSLEN-2).')'                      00618100
                      AGO   .ZI36D                                      00618200
.ZI36B                ANOP  ,                                           00618300
.*                                                                      00618400
&ZC                   SETC  '&XANSLEN'(1,1)                             00618500
                      AIF   (T'&ZC NE 'N').ZI36D                        00618600
&ZC                   SETC  '&XANSLEN'                                  00618700
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI36D               00618800
&ZCGPR                SETC  '=AL4(&XANSLEN)'                            00618900
.*                                                                      00619000
.ZI36D                ANOP  ,                                           00619100
.*                                                                      00619200
&ZOPN                 SETA  &ZOPN+1                                     00619300
&ZOPL(&ZOPN)          SETC  ' '                                         00619400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00619500
&ZOPV(&ZOPN)          SETC  '76(4,1),&ZCGPR'                            00619600
&ZOPD(&ZOPN)          SETC  '++ &ZXANSLEN XANSLEN'                      00619700
.*                                                                      00619800
.ZI36E                ANOP  ,                                           00619900
.*-------------------------------------------------------------------   00620000
.***AI.LVER01                                                           00620100
                      AIF  (&XPLISTVER LT 1).ZI37Z                      00620200
.*-------------------------------------------------------------------   00620300
.***AI.LVER02                                                           00620400
.ZI37Z                ANOP  ,                                           00620500
.*-------------------------------------------------------------------   00620600
.***AI.LVER01                                                           00620700
                      AIF  (&XPLISTVER LT 2).ZI38Z                      00620800
.*-------------------------------------------------------------------   00620900
.***AI.L05 XKEYUSEDVER2 BL1                                             00621000
&ZW                   SETC  ''                                          00621100
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00621200
.*-------------------------------------------------------------------   00621300
.***AI.LVER02                                                           00621400
.ZI38Z                ANOP  ,                                           00621500
.*-------------------------------------------------------------------   00621600
.***AI.LVER01                                                           00621700
                      AIF  (&XPLISTVER LT 2).ZI39Z                      00621800
.*-------------------------------------------------------------------   00621900
.***AI.L08 XKEYUSEDVER2 "INDEFINITE"                                    00622000
.***      BL1'1XXXXXXX'                                                 00622100
         AIF   ('&XHOLDTIME' NE 'INDEFINITE').ZI39A                     00622200
&ZW                   SETC  '&ZW.1'                                     00622300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00622400
                      AGO   .ZI39C                                      00622500
.*                                                                      00622600
.ZI39A                ANOP  ,                                           00622700
&ZW                   SETC  '&ZW.0'                                     00622800
.ZI39C                ANOP  ,                                           00622900
.*-------------------------------------------------------------------   00623000
.***AI.LVER02                                                           00623100
.ZI39Z                ANOP  ,                                           00623200
.*-------------------------------------------------------------------   00623300
.***AI.LVER01                                                           00623400
                      AIF  (&XPLISTVER LT 2).ZI40Z                      00623500
.*-------------------------------------------------------------------   00623600
.***AI.L08 XKEYUSEDVER2 "CONTINUE"                                      00623700
.***      BL1'X1XXXXXX'                                                 00623800
         AIF   ('&XHOLDTIME' NE 'CONTINUE').ZI40A                       00623900
&ZW                   SETC  '&ZW.1'                                     00624000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00624100
                      AGO   .ZI40C                                      00624200
.*                                                                      00624300
.ZI40A                ANOP  ,                                           00624400
&ZW                   SETC  '&ZW.0'                                     00624500
.ZI40C                ANOP  ,                                           00624600
.*-------------------------------------------------------------------   00624700
.***AI.LVER02                                                           00624800
.ZI40Z                ANOP  ,                                           00624900
.*-------------------------------------------------------------------   00625000
.***AI.LVER01                                                           00625100
                      AIF  (&XPLISTVER LT 2).ZI41Z                      00625200
.*-------------------------------------------------------------------   00625300
.***AI.L08 XKEYUSEDVER2 "SET"                                           00625400
.***      BL1'XX1XXXXX'                                                 00625500
         AIF   ('&XHOLDTIME' NE 'SET').ZI41A                            00625600
&ZW                   SETC  '&ZW.1'                                     00625700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00625800
                      AGO   .ZI41C                                      00625900
.*                                                                      00626000
.ZI41A                ANOP  ,                                           00626100
&ZW                   SETC  '&ZW.0'                                     00626200
.ZI41C                ANOP  ,                                           00626300
.*-------------------------------------------------------------------   00626400
.***AI.LVER02                                                           00626500
.ZI41Z                ANOP  ,                                           00626600
.*-------------------------------------------------------------------   00626700
.***AI.LVER01                                                           00626800
                      AIF  (&XPLISTVER LT 2).ZI42Z                      00626900
.*-------------------------------------------------------------------   00627000
.***AI.L08 XKEYUSEDVER2 "MSGTAG"                                        00627100
.***      BL1'XXX1XXXX'                                                 00627200
         AIF   ('&MSGTAG' EQ '').ZI42A                                  00627300
         AIF   ('&MSGTAG' EQ 'NO_CHANGE').ZI42A                         00627400
&ZW                   SETC  '&ZW.1'                                     00627500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00627600
                      AGO   .ZI42C                                      00627700
.*                                                                      00627800
.ZI42A                ANOP  ,                                           00627900
&ZW                   SETC  '&ZW.0'                                     00628000
.ZI42C                ANOP  ,                                           00628100
.*-------------------------------------------------------------------   00628200
.***AI.LVER02                                                           00628300
.ZI42Z                ANOP  ,                                           00628400
.*-------------------------------------------------------------------   00628500
.***AI.LVER01                                                           00628600
                      AIF  (&XPLISTVER LT 2).ZI43Z                      00628700
.*-------------------------------------------------------------------   00628800
.***AI.L08 XKEYUSEDVER2 "MSGTAGFILTER"                                  00628900
.***      BL1'XXXX1XXX'                                                 00629000
         AIF   ('&MSGTAGFILTER' EQ '').ZI43A                            00629100
         AIF   ('&MSGTAGFILTER' EQ 'NO_MSGTAGFILTER').ZI43A             00629200
&ZW                   SETC  '&ZW.1'                                     00629300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00629400
                      AGO   .ZI43C                                      00629500
.*                                                                      00629600
.ZI43A                ANOP  ,                                           00629700
&ZW                   SETC  '&ZW.0'                                     00629800
.ZI43C                ANOP  ,                                           00629900
.*-------------------------------------------------------------------   00630000
.***AI.LVER02                                                           00630100
.ZI43Z                ANOP  ,                                           00630200
.*-------------------------------------------------------------------   00630300
.***AI.LVER01                                                           00630400
                      AIF  (&XPLISTVER LT 2).ZI44Z                      00630500
.*-------------------------------------------------------------------   00630600
.***AI.L08 XKEYUSEDVER2 "ALL"                                           00630700
.***      BL1'XXXXX1XX'                                                 00630800
         AIF   ('&XMSGTAGMASK' NE 'ALL').ZI44A                          00630900
&ZW                   SETC  '&ZW.100'                                   00631000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00631100
                      AGO   .ZI44C                                      00631200
.*                                                                      00631300
.ZI44A                ANOP  ,                                           00631400
&ZW                   SETC  '&ZW.000'                                   00631500
.ZI44C                ANOP  ,                                           00631600
.*-------------------------------------------------------------------   00631700
.***AI.L11 XKEYUSEDVER2 BL1                                             00631800
                      AIF   ('&ZCLNG' NE 'YES').ZI44E  ALL ZERO BITS    00631900
&ZOPN                 SETA  &ZOPN+1                                     00632000
&ZOPL(&ZOPN)          SETC  ' '                                         00632100
&ZOPO(&ZOPN)          SETC  'OI'                                        00632200
&ZOPV(&ZOPN)          SETC  '84(1),B''&ZW'''                            00632300
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00632400
.ZI44E                ANOP  ,                                           00632500
.*-------------------------------------------------------------------   00632600
.***AI.LVER02                                                           00632700
.ZI44Z                ANOP  ,                                           00632800
.*-------------------------------------------------------------------   00632900
.***AI.LVER01                                                           00633000
                      AIF  (&XPLISTVER LT 2).ZI45Z                      00633100
.*-------------------------------------------------------------------   00633200
.***AI.L07 XMSGTOKENTYPE AL1                                            00633300
&ZW                   SETC  ''                                          00633400
.*-------------------------------------------------------------------   00633500
.***AI.LVER02                                                           00633600
.ZI45Z                ANOP  ,                                           00633700
.*-------------------------------------------------------------------   00633800
.***AI.LVER01                                                           00633900
                      AIF  (&XPLISTVER LT 2).ZI46Z                      00634000
.*-------------------------------------------------------------------   00634100
.***AI.L15 XMSGTOKENTYPE "TOKEN" AL1                                    00634200
         AIF   ('&XMSGTOKENTYPE' NE 'TOKEN').ZI46A                      00634300
&ZW                   SETC  '1'                                         00634400
.ZI46A                ANOP  ,                                           00634500
.*-------------------------------------------------------------------   00634600
.***AI.LVER02                                                           00634700
.ZI46Z                ANOP  ,                                           00634800
.*-------------------------------------------------------------------   00634900
.***AI.LVER01                                                           00635000
                      AIF  (&XPLISTVER LT 2).ZI47Z                      00635100
.*-------------------------------------------------------------------   00635200
.***AI.L15 XMSGTOKENTYPE "SENDTOKEN" AL1                                00635300
         AIF   ('&XMSGTOKENTYPE' NE 'SENDTOKEN').ZI47A                  00635400
&ZW                   SETC  '2'                                         00635500
.ZI47A                ANOP  ,                                           00635600
.*-------------------------------------------------------------------   00635700
.***AI.L17 XMSGTOKENTYPE AL1                                            00635800
                      AIF   ('&ZW' EQ '0').ZI47B                        00635900
                      AIF   ('&ZW' EQ '').ZI47B                         00636000
.*                                                                      00636100
&ZOPN                 SETA  &ZOPN+1                                     00636200
&ZOPL(&ZOPN)          SETC  ' '                                         00636300
&ZOPO(&ZOPN)          SETC  'MVI'                                       00636400
&ZOPV(&ZOPN)          SETC  '85(1),&ZW'                                 00636500
&ZOPD(&ZOPN)          SETC  '++ &ZXMSGTOKENTYPE XMSGTOKENTYPE'          00636600
.ZI47B                ANOP  ,                                           00636700
.*-------------------------------------------------------------------   00636800
.***AI.LVER02                                                           00636900
.ZI47Z                ANOP  ,                                           00637000
.*-------------------------------------------------------------------   00637100
.***AI.LVER01                                                           00637200
                      AIF  (&XPLISTVER LT 2).ZI48Z                      00637300
.*-------------------------------------------------------------------   00637400
.***AI.L25  XTIME XL2                                                   00637500
                      AIF   ('&ZXTIME' EQ '').ZI48E                     00637600
                      AIF   ('&ZXTIME' EQ 'OUTPUT').ZI48E               00637700
&ZCGPR                SETC  '&XTIME'                                    00637800
.*                                                                      00637900
                      AIF   ('&XTIME'(1,1) NE '(').ZI48B                00638000
&ZCGPR   SETC  '0('.'&XTIME'(2,K'&XTIME-2).')'                          00638100
                      AGO   .ZI48D                                      00638200
.ZI48B                ANOP  ,                                           00638300
.*                                                                      00638400
&ZC                   SETC  '&XTIME'(1,1)                               00638500
                      AIF   (T'&ZC NE 'N').ZI48D                        00638600
&ZC                   SETC  '&XTIME'                                    00638700
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI48D               00638800
&ZCGPR                SETC  '=AL2(&XTIME)'                              00638900
.*                                                                      00639000
.ZI48D                ANOP  ,                                           00639100
.*                                                                      00639200
&ZOPN                 SETA  &ZOPN+1                                     00639300
&ZOPL(&ZOPN)          SETC  ' '                                         00639400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00639500
&ZOPV(&ZOPN)          SETC  '86(2,1),&ZCGPR'                            00639600
&ZOPD(&ZOPN)          SETC  '++ &ZXTIME XTIME'                          00639700
.*                                                                      00639800
.ZI48E                ANOP  ,                                           00639900
.*-------------------------------------------------------------------   00640000
.***AI.LVER02                                                           00640100
.ZI48Z                ANOP  ,                                           00640200
.*-------------------------------------------------------------------   00640300
.***AI.LVER01                                                           00640400
                      AIF  (&XPLISTVER LT 2).ZI49Z                      00640500
.*-------------------------------------------------------------------   00640600
.***AI.L18 ADDR XMSGTAG A                                               00640700
         AIF   ('&XMSGTAG' NE 'NO_CHANGE').ZI49                         00640800
&ZXMSGTAG             SETC  ''             RESET INPUT/OUTPUT           00640900
.ZI49                 ANOP  ,                                           00641000
.*-------------------------------------------------------------------   00641100
.***AI.L19 ADDR XMSGTAG A                                               00641200
                      AIF   ('&ZXMSGTAG' EQ '').ZI49H                   00641300
&ZCLNG                SETC  '&XMSGTAG'                                  00641400
&ZCGPR                SETC  '14'                                        00641500
         AIF   ('&XMSGTAG'(1,1) EQ '(').ZI49F  IN GPR                   00641600
.*                                                                      00641700
&ZOPN                 SETA  &ZOPN+1                                     00641800
&ZOPL(&ZOPN)          SETC  ' '                                         00641900
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00642000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00642100
&ZOPD(&ZOPN)          SETC  '++ &ZXMSGTAG XMSGTAG'                      00642200
.*                                                                      00642300
                      AGO   .ZI49G                                      00642400
.*                                                                      00642500
.ZI49F                ANOP  ,                                           00642600
&ZCGPR   SETC  '&XMSGTAG'(2,K'&XMSGTAG-2)                               00642700
.*                                                                      00642800
.ZI49G                ANOP  ,                                           00642900
.*                                                                      00643000
&ZOPN                 SETA  &ZOPN+1                                     00643100
&ZOPL(&ZOPN)          SETC  ' '                                         00643200
&ZOPO(&ZOPN)          SETC  'ST'                                        00643300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,88(,1)'                             00643400
&ZOPD(&ZOPN)          SETC  '++ &ZXMSGTAG XMSGTAG'                      00643500
.*                                                                      00643600
.ZI49H                ANOP  ,                                           00643700
.*-------------------------------------------------------------------   00643800
.***AI.LVER02                                                           00643900
.ZI49Z                ANOP  ,                                           00644000
.*-------------------------------------------------------------------   00644100
.***AI.LVER01                                                           00644200
                      AIF  (&XPLISTVER LT 2).ZI50Z                      00644300
.*-------------------------------------------------------------------   00644400
.***AI.L18 ALET XMSGTAG F                                               00644500
         AIF   ('&XMSGTAG' NE 'NO_CHANGE').ZI50                         00644600
&ZXMSGTAG             SETC  ''             RESET INPUT/OUTPUT           00644700
.ZI50                 ANOP  ,                                           00644800
.*-------------------------------------------------------------------   00644900
.***AI.L23 ALET XMSGTAG F                                               00645000
         AIF   ('&ZXMSGTAG' EQ '').ZI50G                                00645100
         AIF   ('&SYSASCE' EQ 'P').ZI50G   SYSSTATE PRIMARY             00645200
&ZCLNG                SETC  '&XMSGTAG'                                  00645300
         AIF   ('&XMSGTAG'(1,1) EQ '(').ZI50E  IN AR                    00645400
.*                                                                      00645500
&ZCGPR                SETC  '14'                                        00645600
                      AGO   .ZI50F                                      00645700
.*                                                                      00645800
.ZI50E                ANOP  ,                                           00645900
&ZCGPR   SETC  '&XMSGTAG'(2,K'&XMSGTAG-2)                               00646000
.*                                                                      00646100
.ZI50F                ANOP  ,                                           00646200
.*                                                                      00646300
&ZOPN                 SETA  &ZOPN+1                                     00646400
&ZOPL(&ZOPN)          SETC  ' '                                         00646500
&ZOPO(&ZOPN)          SETC  'STAM'                                      00646600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,92(1)'                       00646700
&ZOPD(&ZOPN)          SETC  '++ &ZXMSGTAG XMSGTAG'                      00646800
.*                                                                      00646900
.ZI50G                ANOP  ,                                           00647000
.*-------------------------------------------------------------------   00647100
.***AI.LVER02                                                           00647200
.ZI50Z                ANOP  ,                                           00647300
.*-------------------------------------------------------------------   00647400
.***AI.LVER01                                                           00647500
                      AIF  (&XPLISTVER LT 2).ZI51Z                      00647600
.*-------------------------------------------------------------------   00647700
.***AI.L18 ADDR XMSGTAGFILTER A                                         00647800
         AIF   ('&XMSGTAGFILTER' NE 'NO_MSGTAGFILTER').ZI51             00647900
&ZXMSGTAGFILTER       SETC  ''             RESET INPUT/OUTPUT           00648000
.ZI51                 ANOP  ,                                           00648100
.*-------------------------------------------------------------------   00648200
.***AI.L19 ADDR XMSGTAGFILTER A                                         00648300
                      AIF   ('&ZXMSGTAGFILTER' EQ '').ZI51H             00648400
&ZCLNG                SETC  '&XMSGTAGFILTER'                            00648500
&ZCGPR                SETC  '14'                                        00648600
         AIF   ('&XMSGTAGFILTER'(1,1) EQ '(').ZI51F  IN GPR             00648700
.*                                                                      00648800
&ZOPN                 SETA  &ZOPN+1                                     00648900
&ZOPL(&ZOPN)          SETC  ' '                                         00649000
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00649100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00649200
&ZOPD(&ZOPN)          SETC  '++ &ZXMSGTAGFILTER XMSGTAGFILTER'          00649300
.*                                                                      00649400
                      AGO   .ZI51G                                      00649500
.*                                                                      00649600
.ZI51F                ANOP  ,                                           00649700
&ZCGPR   SETC  '&XMSGTAGFILTER'(2,K'&XMSGTAGFILTER-2)                   00649800
.*                                                                      00649900
.ZI51G                ANOP  ,                                           00650000
.*                                                                      00650100
&ZOPN                 SETA  &ZOPN+1                                     00650200
&ZOPL(&ZOPN)          SETC  ' '                                         00650300
&ZOPO(&ZOPN)          SETC  'ST'                                        00650400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,96(,1)'                             00650500
&ZOPD(&ZOPN)          SETC  '++ &ZXMSGTAGFILTER XMSGTAGFILTER'          00650600
.*                                                                      00650700
.ZI51H                ANOP  ,                                           00650800
.*-------------------------------------------------------------------   00650900
.***AI.LVER02                                                           00651000
.ZI51Z                ANOP  ,                                           00651100
.*-------------------------------------------------------------------   00651200
.***AI.LVER01                                                           00651300
                      AIF  (&XPLISTVER LT 2).ZI52Z                      00651400
.*-------------------------------------------------------------------   00651500
.***AI.L18 ALET XMSGTAGFILTER F                                         00651600
         AIF   ('&XMSGTAGFILTER' NE 'NO_MSGTAGFILTER').ZI52             00651700
&ZXMSGTAGFILTER       SETC  ''             RESET INPUT/OUTPUT           00651800
.ZI52                 ANOP  ,                                           00651900
.*-------------------------------------------------------------------   00652000
.***AI.L23 ALET XMSGTAGFILTER F                                         00652100
         AIF   ('&ZXMSGTAGFILTER' EQ '').ZI52G                          00652200
         AIF   ('&SYSASCE' EQ 'P').ZI52G   SYSSTATE PRIMARY             00652300
&ZCLNG                SETC  '&XMSGTAGFILTER'                            00652400
         AIF   ('&XMSGTAGFILTER'(1,1) EQ '(').ZI52E  IN AR              00652500
.*                                                                      00652600
&ZCGPR                SETC  '14'                                        00652700
                      AGO   .ZI52F                                      00652800
.*                                                                      00652900
.ZI52E                ANOP  ,                                           00653000
&ZCGPR   SETC  '&XMSGTAGFILTER'(2,K'&XMSGTAGFILTER-2)                   00653100
.*                                                                      00653200
.ZI52F                ANOP  ,                                           00653300
.*                                                                      00653400
&ZOPN                 SETA  &ZOPN+1                                     00653500
&ZOPL(&ZOPN)          SETC  ' '                                         00653600
&ZOPO(&ZOPN)          SETC  'STAM'                                      00653700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,100(1)'                      00653800
&ZOPD(&ZOPN)          SETC  '++ &ZXMSGTAGFILTER XMSGTAGFILTER'          00653900
.*                                                                      00654000
.ZI52G                ANOP  ,                                           00654100
.*-------------------------------------------------------------------   00654200
.***AI.LVER02                                                           00654300
.ZI52Z                ANOP  ,                                           00654400
.*-------------------------------------------------------------------   00654500
.***AI.LVER01                                                           00654600
                      AIF  (&XPLISTVER LT 2).ZI53Z                      00654700
.*-------------------------------------------------------------------   00654800
.***AI.L18 ADDR XMSGTAGMASK A                                           00654900
         AIF   ('&XMSGTAGMASK' NE 'ALL').ZI53                           00655000
&ZXMSGTAGMASK         SETC  ''             RESET INPUT/OUTPUT           00655100
.ZI53                 ANOP  ,                                           00655200
.*-------------------------------------------------------------------   00655300
.***AI.L19 ADDR XMSGTAGMASK A                                           00655400
                      AIF   ('&ZXMSGTAGMASK' EQ '').ZI53H               00655500
&ZCLNG                SETC  '&XMSGTAGMASK'                              00655600
&ZCGPR                SETC  '14'                                        00655700
         AIF   ('&XMSGTAGMASK'(1,1) EQ '(').ZI53F  IN GPR               00655800
.*                                                                      00655900
&ZOPN                 SETA  &ZOPN+1                                     00656000
&ZOPL(&ZOPN)          SETC  ' '                                         00656100
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00656200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00656300
&ZOPD(&ZOPN)          SETC  '++ &ZXMSGTAGMASK XMSGTAGMASK'              00656400
.*                                                                      00656500
                      AGO   .ZI53G                                      00656600
.*                                                                      00656700
.ZI53F                ANOP  ,                                           00656800
&ZCGPR   SETC  '&XMSGTAGMASK'(2,K'&XMSGTAGMASK-2)                       00656900
.*                                                                      00657000
.ZI53G                ANOP  ,                                           00657100
.*                                                                      00657200
&ZOPN                 SETA  &ZOPN+1                                     00657300
&ZOPL(&ZOPN)          SETC  ' '                                         00657400
&ZOPO(&ZOPN)          SETC  'ST'                                        00657500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,104(,1)'                            00657600
&ZOPD(&ZOPN)          SETC  '++ &ZXMSGTAGMASK XMSGTAGMASK'              00657700
.*                                                                      00657800
.ZI53H                ANOP  ,                                           00657900
.*-------------------------------------------------------------------   00658000
.***AI.LVER02                                                           00658100
.ZI53Z                ANOP  ,                                           00658200
.*-------------------------------------------------------------------   00658300
.***AI.LVER01                                                           00658400
                      AIF  (&XPLISTVER LT 2).ZI54Z                      00658500
.*-------------------------------------------------------------------   00658600
.***AI.L18 ALET XMSGTAGMASK F                                           00658700
         AIF   ('&XMSGTAGMASK' NE 'ALL').ZI54                           00658800
&ZXMSGTAGMASK         SETC  ''             RESET INPUT/OUTPUT           00658900
.ZI54                 ANOP  ,                                           00659000
.*-------------------------------------------------------------------   00659100
.***AI.L23 ALET XMSGTAGMASK F                                           00659200
         AIF   ('&ZXMSGTAGMASK' EQ '').ZI54G                            00659300
         AIF   ('&SYSASCE' EQ 'P').ZI54G   SYSSTATE PRIMARY             00659400
&ZCLNG                SETC  '&XMSGTAGMASK'                              00659500
         AIF   ('&XMSGTAGMASK'(1,1) EQ '(').ZI54E  IN AR                00659600
.*                                                                      00659700
&ZCGPR                SETC  '14'                                        00659800
                      AGO   .ZI54F                                      00659900
.*                                                                      00660000
.ZI54E                ANOP  ,                                           00660100
&ZCGPR   SETC  '&XMSGTAGMASK'(2,K'&XMSGTAGMASK-2)                       00660200
.*                                                                      00660300
.ZI54F                ANOP  ,                                           00660400
.*                                                                      00660500
&ZOPN                 SETA  &ZOPN+1                                     00660600
&ZOPL(&ZOPN)          SETC  ' '                                         00660700
&ZOPO(&ZOPN)          SETC  'STAM'                                      00660800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,108(1)'                      00660900
&ZOPD(&ZOPN)          SETC  '++ &ZXMSGTAGMASK XMSGTAGMASK'              00661000
.*                                                                      00661100
.ZI54G                ANOP  ,                                           00661200
.*-------------------------------------------------------------------   00661300
.***AI.LVER02                                                           00661400
.ZI54Z                ANOP  ,                                           00661500
.*-------------------------------------------------------------------   00661600
.***AI.LVER01                                                           00661700
                      AIF  (&XPLISTVER LT 2).ZI55Z                      00661800
.*-------------------------------------------------------------------   00661900
.***AI.L19 ADDR XSENDTOKEN A                                            00662000
                      AIF   ('&ZXSENDTOKEN' EQ '').ZI55H                00662100
&ZCLNG                SETC  '&XSENDTOKEN'                               00662200
&ZCGPR                SETC  '14'                                        00662300
         AIF   ('&XSENDTOKEN'(1,1) EQ '(').ZI55F  IN GPR                00662400
.*                                                                      00662500
&ZOPN                 SETA  &ZOPN+1                                     00662600
&ZOPL(&ZOPN)          SETC  ' '                                         00662700
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00662800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00662900
&ZOPD(&ZOPN)          SETC  '++ &ZXSENDTOKEN XSENDTOKEN'                00663000
.*                                                                      00663100
                      AGO   .ZI55G                                      00663200
.*                                                                      00663300
.ZI55F                ANOP  ,                                           00663400
&ZCGPR   SETC  '&XSENDTOKEN'(2,K'&XSENDTOKEN-2)                         00663500
.*                                                                      00663600
.ZI55G                ANOP  ,                                           00663700
.*                                                                      00663800
&ZOPN                 SETA  &ZOPN+1                                     00663900
&ZOPL(&ZOPN)          SETC  ' '                                         00664000
&ZOPO(&ZOPN)          SETC  'ST'                                        00664100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,112(,1)'                            00664200
&ZOPD(&ZOPN)          SETC  '++ &ZXSENDTOKEN XSENDTOKEN'                00664300
.*                                                                      00664400
.ZI55H                ANOP  ,                                           00664500
.*-------------------------------------------------------------------   00664600
.***AI.LVER02                                                           00664700
.ZI55Z                ANOP  ,                                           00664800
.*-------------------------------------------------------------------   00664900
.***AI.LVER01                                                           00665000
                      AIF  (&XPLISTVER LT 2).ZI56Z                      00665100
.*-------------------------------------------------------------------   00665200
.***AI.L23 ALET XSENDTOKEN F                                            00665300
         AIF   ('&ZXSENDTOKEN' EQ '').ZI56G                             00665400
         AIF   ('&SYSASCE' EQ 'P').ZI56G   SYSSTATE PRIMARY             00665500
&ZCLNG                SETC  '&XSENDTOKEN'                               00665600
         AIF   ('&XSENDTOKEN'(1,1) EQ '(').ZI56E  IN AR                 00665700
.*                                                                      00665800
&ZCGPR                SETC  '14'                                        00665900
                      AGO   .ZI56F                                      00666000
.*                                                                      00666100
.ZI56E                ANOP  ,                                           00666200
&ZCGPR   SETC  '&XSENDTOKEN'(2,K'&XSENDTOKEN-2)                         00666300
.*                                                                      00666400
.ZI56F                ANOP  ,                                           00666500
.*                                                                      00666600
&ZOPN                 SETA  &ZOPN+1                                     00666700
&ZOPL(&ZOPN)          SETC  ' '                                         00666800
&ZOPO(&ZOPN)          SETC  'STAM'                                      00666900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,116(1)'                      00667000
&ZOPD(&ZOPN)          SETC  '++ &ZXSENDTOKEN XSENDTOKEN'                00667100
.*                                                                      00667200
.ZI56G                ANOP  ,                                           00667300
.*-------------------------------------------------------------------   00667400
.***AI.LVER02                                                           00667500
.ZI56Z                ANOP  ,                                           00667600
.*-------------------------------------------------------------------   00667700
&ZOPN1                SETA &ZOPN                                        00667800
.*******************************************************************    00667900
.***  PROCESS IXCMSGC OUTPUT PARAMETERS                                 00668000
.*******************************************************************    00668100
                      ACTR  10000                                       00668200
.*******************************************************************    00668300
.***AO.X02  RETURN CODE PROCESSING                                      00668400
.*******************************************************************    00668500
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00668600
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00668700
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00668800
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00668900
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00669000
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00669100
&ZOPN                 SETA  &ZOPN+1                                     00669200
&ZOPL(&ZOPN)          SETC  ' '                                         00669300
&ZOPO(&ZOPN)          SETC  'ST'                                        00669400
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00669500
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00669600
                      AGO   .ZMRETX                                     00669700
.*                                                                      00669800
.ZMRET2               ANOP  ,                                           00669900
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00670000
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00670100
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00670200
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00670300
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00670400
&ZOPN                 SETA  &ZOPN+1                                     00670500
&ZOPL(&ZOPN)          SETC  ' '                                         00670600
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00670700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00670800
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00670900
.ZMRETX               ANOP  ,                                           00671000
.*******************************************************************    00671100
.***AO.X03  REASON CODE PROCESSING                                      00671200
.*******************************************************************    00671300
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00671400
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00671500
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00671600
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00671700
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00671800
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00671900
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00672000
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00672100
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00672200
&ZOPN                 SETA  &ZOPN+1                                     00672300
&ZOPL(&ZOPN)          SETC  ' '                                         00672400
&ZOPO(&ZOPN)          SETC  'ST'                                        00672500
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00672600
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00672700
                      AGO   .ZMRSNX                                     00672800
.*                                                                      00672900
.ZMRSN2               ANOP  ,                                           00673000
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00673100
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00673200
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00673300
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00673400
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00673500
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00673600
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00673700
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00673800
&ZOPN                 SETA  &ZOPN+1                                     00673900
&ZOPL(&ZOPN)          SETC  ' '                                         00674000
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00674100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00674200
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00674300
.ZMRSNX               ANOP  ,                                           00674400
.*******************************************************************    00674500
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00674600
.*******************************************************************    00674700
.ZMFLX                ANOP  ,              MF=L PROCESSING              00674800
.*******************************************************************    00674900
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00675000
.*******************************************************************    00675100
                      ACTR  10000                                       00675200
.*                                                                      00675300
                      LCLA  &ZLC           COLUMN POSITION              00675400
                      LCLA  &ZOPX          LIST TABLE INDEX             00675500
                      LCLC  &ZLL           LABEL                        00675600
                      LCLC  &ZLOP          OPERATION                    00675700
                      LCLC  &ZLV           VALUE                        00675800
                      LCLC  &ZLD           DESCRIPTION                  00675900
.*                                                                      00676000
&ZOPX                 SETA  1                                           00676100
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00676200
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00676300
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00676400
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00676500
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00676600
                      AIF   (K'&ZLD LE 0).ZL5                           00676700
&ZLC                  SETA  35             COMMENT COLUMN               00676800
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00676900
&ZLC                  SETA  33             COMMMENT COLUMN              00677000
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00677100
&ZLV                  SETC  '&ZLV'.' '                                  00677200
                      AGO   .ZL3                                        00677300
.*                                                                      00677400
.ZL4                  ANOP  ,                                           00677500
&ZLV                  SETC  '&ZLV'.' '                                  00677600
.ZL5                  ANOP  ,                                           00677700
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00677800
.*                                                                      00677900
&ZLL     &ZLOP &ZLV                                                     00678000
.*                                                                      00678100
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00678200
                      AGO   .ZL2           CONTINUE LOOPING             00678300
.*                                                                      00678400
.ZLX                  ANOP  ,                                           00678500
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00678600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00678700
                      AIF   ('&ZXNOTIFYEXIT' EQ '').ZNSKP               00678800
&ZCLNG                SETC  '&XNOTIFYEXIT'                              00678900
&ZCGPR                SETC  '14'                                        00679000
         AIF   ('&XNOTIFYEXIT'(1,1) EQ '(').ZNING  IN GPR               00679100
         LA    &ZCGPR,&ZCLNG ++ Input xNOTIFYEXIT                       00679200
                      AGO   .ZNSTR                                      00679300
.ZNING                ANOP  ,                                           00679400
&ZCGPR   SETC  '&XNOTIFYEXIT'(2,K'&XNOTIFYEXIT-2)                       00679500
.ZNSTR                ANOP  ,                                           00679600
         ST    &ZCGPR,56(,1) ++ Input xNOTIFYEXIT                       00679700
.ZNSKP                ANOP  ,                                           00679800
                      AIF   ('&ZXMSGEXIT' EQ '').ZMSKP                  00679900
&ZCLNG                SETC  '&XMSGEXIT'                                 00680000
&ZCGPR                SETC  '14'                                        00680100
         AIF   ('&XMSGEXIT'(1,1) EQ '(').ZMING  IN GPR                  00680200
         &ZCVAL &ZCGPR,&ZCLNG ++ Input xMSGEXIT                         00680300
                      AGO   .ZMSTR                                      00680400
.ZMING                ANOP  ,                                           00680500
&ZCGPR   SETC  '&XMSGEXIT'(2,K'&XMSGEXIT-2)                             00680600
.ZMSTR                ANOP  ,                                           00680700
         ST    &ZCGPR,56(,1) ++ Input xMSGEXIT                          00680800
.ZMSKP                ANOP  ,                                           00680900
         L     14,16(0,0)              GET CVT ADDRESS                  00681000
         L     14,772(14,0)            GET SFT ADDRESS                  00681100
         L     14,220(14,0)            GET LX FOR SERVICE ROUTINE       00681200
         AIF   ('&XREQUEST' EQ 'CALLEXIT').MCX                     @L2A 00681300
*                                                                 5@L3D 00681400
.MSC     ANOP  ,                                                   @P6C 00681500
         LA    15,46   GET EX FOR IXCSIMSC ENTRY                   @L2C 00681600
         AGO .DOPC          GO AND DO THE PC NOW                   @L1A 00681700
*                                                                 3@L3D 00681800
.MCX     ANOP  ,                                                   @P6C 00681900
         LA    15,42   GET EX FOR IXCSIMCX SERVICE                 @L2A 00682000
.DOPC    ANOP  ,                                                   @P6C 00682100
         OR    14,15                   GET PC NUMBER                    00682200
         PC    0(14)                                                    00682300
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00682400
.ZLINKX               ANOP  ,                                           00682500
.*******************************************************************    00682600
.***AP.X01  FORMAT GENERATED CODE                                       00682700
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00682800
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00682900
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00683000
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00683100
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00683200
                      AIF   (K'&ZLD LE 0).ZL51                          00683300
&ZLC                  SETA  35             COMMENT COLUMN               00683400
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00683500
&ZLC                  SETA  33             COMMENT COLUMN               00683600
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00683700
&ZLV                  SETC  '&ZLV'.' '                                  00683800
                      AGO   .ZL31                                       00683900
.*                                                                      00684000
.ZL41                 ANOP  ,                                           00684100
&ZLV                  SETC  '&ZLV'.' '                                  00684200
.ZL51                 ANOP  ,                                           00684300
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00684400
.*                                                                      00684500
&ZLL     &ZLOP &ZLV                                                     00684600
.*                                                                      00684700
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00684800
                      AGO   .ZL21          CONTINUE LOOPING             00684900
.*                                                                      00685000
.ZLX1                 ANOP  ,                                           00685100
.*******************************************************************    00685200
.***AP.X02  END OF IXCMSGC MACRO                                        00685300
&ZIXCMSGC             SETC  'YES'          SET IXCMSGC USED             00685400
         POP   PRINT                                                    00685500
*                                            IXCMSGC-2                  00685600
         SPACE 1                                                        00685700
.ZLX2                 ANOP  ,                                           00685800
         MEND                                                           00685900
**********************************************************************/ 00686000
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00686100
*%IXCMSGC: MACRO KEYS(REQUEST,MEMTOKEN,TOKEN,USERDATA,RETMSGTOKEN,      00686200
*                 HOLDTIME,TIME,MSGTAG,SENDTOKEN,DATATYPE,STATUS,       00686300
*                 SOURCE,MQAALEVEL,MSGTAGFILTER,MSGTAGMASK,ANSAREA,     00686400
*                 ANSLEN,TYPE,NOTIFYEXIT,MSGEXIT,EXITPARMS,RETCODE,     00686500
*                 RSNCODE,PLISTVER,MF);                                 00686600
*  ANS('?'!!MACLABEL!!' '!!'IXCMSGCP '!!MACLIST!!                       00686700
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              00686800
*%END IXCMSGC;                                                          00686900
