*                                                                               
*        %GOTO IFASMFRAA; /*                                                    
         MACRO                                                                  
&NAME    IFASMFRA &RECTYPE                                           */         
*%IFASMFRAA:;                                                                   
*/***** START OF SPECIFICATIONS ***************************************         
*  *                                                                  *         
*  * $MAC(IFASMFRA) PROD(HBB77D0):                                    *         
*  *                                                                  *         
*01* PROPRIETARY STATEMENT=                                          *          
*  **PROPRIETARY_STATEMENT********************************************          
*                                                                    *          
*                                                                    *          
*   LICENSED MATERIALS - PROPERTY OF IBM                             *          
*   5650-ZOS COPYRIGHT IBM CORP. 1977, 2021                          *          
*                                                                    *          
*   STATUS= HBB77D0                                                  *          
*                                                                    *          
*  **END_OF_PROPRIETARY_STATEMENT*************************************          
*                                                                               
*  IFASMFRA maps SMF records in the range 85-103.                               
*                                                                               
*01* MACRO NAME: IFASMFRA                                          @M9C         
* DSECT NAME:  SMFRCD89                                            @M9A         
*              SMF89PR                                             @M9A         
*              SMF89SI                                             @M9A         
*              SMF89UD                                             @M9A         
*              SMF89T2                                             @M9A         
*              SMF89TRG                                            @0EA         
*              SMF89TC                                             @0EA         
*              SMF89T2TRG                                          @0EA         
*              SMFRCD90                                            @M9A         
*              SMF90PRH                                            @M9A         
*              SMF90T5                                             @M9A         
*              SMF90DSM                                            @M9A         
*              SMF90DSE                                            @M9A         
*              SMF90WCH                                            @M9A         
*              SMF90SUB                                            @M9A         
*              SMF90T6                                             @M9A         
*              SMF90T8                                             @M9A         
*              SMF90T1                                             @M9A         
*              SMF90T4                                             @M9A         
*              SMF90T3                                             @M9A         
*              SMF90T10                                            @M9A         
*              SMF90T11                                            @M9A         
*              SMF90T12                                            @M9A         
*              SMF90T14                                            @M9A         
*              SMF90T16                                            @M9A         
*              SMF90T17                                            @M9A         
*              SMF90T18                                            @M9A         
*              SMF90T19                                            @M9A         
*              SMF90T20                                            @M9A         
*              SMF90T21                                            @M9A         
*              SMF90T22                                            @M9A         
*              SMF90T33                                            @L6A         
*              SMF90T34                                            @L8A         
*              SMF90T35                                            @L9A         
*              SMF90T36                                            @LBA         
*              SMF90T37                                            @LEA         
*              SMF90T38                                            @LFA         
*              SMF90T39                                            @0CA         
*              SMF90T40                                            @0FA         
*              SMF90T41                                            @0FA         
*              SMF90T42                                            @0KA         
*                                                                               
*  *                                                                  *         
*01* COMPONENT: Systems Management Facility (SC100)                @M9A         
*  *                                                                  *         
*  *                                                                            
*  * EXTERNAL CLASSIFICATION: PI                                                
*  * END OF EXTERNAL CLASSIFICATION:                                            
*  *                                                                  *         
*  *                                                                  *         
*01* METHOD OF ACCESS:                                             @M9C         
*  *  PL/S - INCLUDE MACRO FROM LIBRARY                               *         
*  *          EXAMPLE - %INCLUDE SYSLIB(IFASMFRA)                     *         
*  *                                                                  *         
*  *         THIS MACRO EXPANDS RECORDS 85-103                    @05C*         
*  *                                                                  *         
*  *                                                                            
*01* DESCRIPTIVE NAME: SMF RECORDS 85-103                          @M9A         
*                                                                               
*01* SIZE:                                                         @M9A         
*01*                                                                            
*                                                                    */         
*        %GOTO IFASMFRAB; /*                                                    
*01* FUNCTION:                                                     @M9A         
*  THIS IS AN SMF MACRO WHICH BUILDS SMF RECORDS 85-103. THE REQUIRED           
*  FORMAT IS -                                                                  
*                                                                               
*        IFASMFRA  &RECTYPE                                                     
.* CHANGE ACTIVITY:                                                   *         
.*   TYPE 96 RECORD - (ASSEMBLER) INVOKE EWQSMF96 MACRO            @01A         
.*                    (PLS) ISSUE MSG INDICATING NO PLS MAPPING    @01A         
.*   TYPE 90 RECORD - (ASSEMBLER & PLS) CORRECT SMF90PNO COMMENT   @P1A         
.*   TYPE 94 RECORD - INVOKE IECSMF94 MACRO                        @D5A         
.*   TYPE 92 RECORD - INVOKE BPXYSMFR MACRO                        @D6A         
.*   TYPE 90 RECORD - RESERVED SMF90BUF AND SMF90BUM               @P2A         
.*   TYPE 90 RECORD - UPDATE SETDM SECTION                         @P3A         
.*   TYPE 90 RECORD - Include SID Option Source Flags              @LWA         
.*   TYPE 90 RECORD - Change Dataset Fields to CHAR(44)            @LXA         
.*   TYPE 90 RECORD - Invoke IFBSMF90 macro (Subtype 26)           @LZA         
.*   TYPE 90 RECORD - Invoke IWMSMF90 macro (Subtypes 23,24,25,30, @M7C         
.*                                                    32)          @M7A         
.*   TYPE 90 RECORD - Include initial workload management status   @M2A         
.*                    information fields                           @M2A         
.*   TYPE 90 RECORD - Invoke IXCYSM90 macro (Subtypes 27-28)       @L2A         
.*   TYPE 90 RECORD - Invoke CSVDLSMF macro (Subtype 29)           @M5A         
.*   TYPE 90 RECORD - Change SMF90SSM to a reserved field          @L3A         
.*   TYPE 90 RECORD - Remove Subtypes 29-30 (ARM)                  @D3A         
.*   TYPE 88 RECORD - Invoke IXGSMF88 macro (Logger)               @L4A         
.*   TYPE 89 RECORD - New for Usage                                @02A         
.*   TYPE 89 RECORD - Incorrect ASM Dcls for Reserved              @03A         
.*   TYPE 89 RECORD - Correct SMF89LPI assignment                  @04A         
.*   TYPE 90 RECORD - Invoke CSVLPSMF macro (Subtype 31)           @M6A         
.*   Add External Classification                                                
.*   TYPE 85 RECORD - Invoke CBRSMF macro (for OAM record)         @05A         
.*   TYPE 89 RECORD - Add SMF89LPV - LPAR ID valid                 @P4A         
.*   TYPE 97 RECORD - Invoke IWMSMF97 macro (WLM)                  @M8A         
.*   TYPE 89 RECORD - Include STSI-extracted information           @06A         
.*   TYPE 90 RECORD - Add SMF90Bxx fields to SMF90DSM section      @L5A         
.*   TYPE 90 RECORD - end smf90dsm section on dword boundary       @P6A         
.*   TYPE 89 RECORD - Add SMF89HOF (Hypervisor date/time offset)   @07A         
.*                  - Add SMF89DTO (Local date/time offset)        @07A         
.*   TYPE 90 RECORD - Invoke CNZMYSMF macro (Subtype 33)           @L6A         
.*   TYPE 89 RECORD - Add SMF89LGA, SMF89CR and SMF89ZEP           @L7A         
.*   TYPE 89 RECORD - Add Processor Capacity data                  @L8A         
.*   TYPE 90 RECORD - Add Processor Capacity data (Subtype 34)     @L8A         
.*   TYPE 89 RECORD - Fixed erroneous 0CL1 on SMF89_Capacity_Flags @L8A         
.*   - Note the previous change, for ME18026, is flagged with      @L8A         
.*     @L8 for roll back consistency.                             @L8A          
.*   TYPE 89 RECORD - Add SMF89_PCD_Rsvd_Exists                    @P8A         
.*   TYPE 90 RECORD - Add SMF90T34_PCD_Rsvd_Exists                 @P8A         
.*   TYPE 89 RECORD - Add Product Intersection Info Sections       @09A         
.*   TYPE 90 RECORD - Add SMF90T34_RMCTADJN_Nominal                @PAA         
.*   TYPE 90 RECORD - Add SETLOAD xx,IEASYM (Subtype 35)           @L9A         
.*   TYPE 90 RECORD - Define  SMF90TSS and SMF90NSS                @PBA         
.*                    to indicate AUTHSETSMF and NOAUTHSETSMF      @PBA         
.*   TYPE 90 RECORD - Define SMF90ESWT and SMF90ETWT               @PBA         
.*   TYPE 90 RECORD - Define SMF90 bit for SMF30COUNT              @LAA         
.*   TYPE 90 RECORD - Invoke CNZMYSM2 macro (Subtype 36)           @LBA         
.*   TYPE 87 RECORD - Invoke ISGYSMFR macro (for GRS record)       @0AA         
.*   TYPE 89 RECORD - Solution Editino fields                      @LCA         
.*   TYPE 90 RECORD - Add APF update (Subtype 37)                  @LEA         
.*   TYPE 90 RECORD - Add IEFOPZ (Subtype 38)                      @LFA         
.*   TYPE 90 RECORD - Add SMFLIM (Subtype 39)                      @0CA         
.*   TYPE 98 RECORD - Add HFTS record(Type 98)                     @0DA         
.*   TYPE 90 RECORD - Add SMF90SYE                                 @LGA         
.*   TYPE 89 RECORD - Add SMF89_CoreMode_zCBP                      @LHA         
.*   TYPE 89 RECORD - Add SMF89_zCBP                               @LHA         
.*   TYPE 89 RECORD - Add TRG support for Subtype 1 and 2          @0EA         
.*   TYPE 89 RECORD - Additional TRG support                       @LIA         
.*   Accommodate C                                                 @LJA         
.*   TYPE 89 RECORD - Move SMF89CountAsTrad and SMF89CountAsTrg                 
.*                    to Usage Data section.                       @PDA         
.*   Type 89 Record - Add SMF89TRGDataType and SMF89TRGData        @MAA         
.*   TYPE 90 RECORD - Add System Recovery Boost (Subtype 40)       @0GA         
.*   TYPE 90 RECORD - Add CVTLSO changed (Subtype 41)              @0HA         
.*   Type 89 Record - Add SMF89SolutionID                          @0IA         
.*   TYPE 90 RECORD - Add VB (Subtype 42)                          @0KA         
.*                                                                              
.*                                                                              
.* CHANGES FOR JBB1226                                         @G383P26         
.*      ADD SUBTYPES 12 AND 14, ADD SUBPARM SEGMENT TO 5,9,12  @G383P26         
.* $L1=RAPRAS,JBB2110,820604,PD27: RESTARTABLE SMF                 @L1A         
.* $D2=DCR81 ,JBB2110,820727,PDFS: SUBTYPE 16 FOR SET DAE CMD      @D2A         
.* $D4=DCR15 ,JBB2133,830912,PDFS: SRM CONSTRAINT RELIEF           @D4A         
.* $D8=DCR3  ,JBB2220,840210,PDFS: SUBTYPE 17 FOR SET PFK CMD      @D8A         
.* $DI=DCR26 ,JBB3313,881216,PDBR: DATA LOST CHANGES               @DIA         
.*                                                                              
.*    =PGP0165 ,JBB3313,890127,PDBR: IFASMFRA MACRO ERROR                       
.*    =OPSSI ,JBB3320,870710,PDFS: SUBTYPE 14 FOR SET MPF CMD                   
.* $LL=DYNRNLS,HBB4410,891026,PDBR: SUBTYPE 18 FOR SET GRSRNL CMD  @LLA         
.* $LD=APPC  ,HBB4420,890303,PDLO: SUBTYPE 19 AND 20 FOR SET APPC  @LDA         
.*                                 AND SET SCHPRM CMDS             @LDA         
.* $LK=APPC  ,HBB4420,891009,PDBR: SUBTYPE 21 FOR FOR SET SCH CMD  @LKA         
.* $LO=CE2   ,HBB4420,891009,PDBR: SUBTYPE 22 FOR SET CNGRP CMD    @LOA         
.* $LM=BPAGE ,HBB4420,891104,PDBR: SET DMN CMD UPDATES             @LMA         
.* $D1=DKI0004,JBB4422,910220,PDBR: SET MPF CMD UPDATES            @D1A         
.* $01=OY44384,JBB2220,910719,PDBR: TYPE 96 FOR TIRS               @01A         
.* $P1=PKB2276,HBB4430,920506,PDOH: 10X: SMF90PNO COMMENT WRONG    @P1A         
.* $D5=DKB0095,HBB4430,920506,PDBR: TYPE 94 FOR ATL                @D5A         
.* $D6=DKB0128,HBB4430,920624,PDBR: TYPE 92 FOR O/MVS              @D6A         
.* $P2=PKB3617,HBB4430,920805,PDOH: 10X: OBSOLETE OPTION PROCESSING             
.*                                                                 @P2A         
.* $P3=PKB3714,HBB4430,920731,PDMF: 10X: TYPE 90 FORMAT CHANGE     @P3A         
.* $LW=SMFSID ,HBB5510,930304,PDBR: SID Option Enhancements        @LWA         
.* $LX=SMFDSN ,HBB5510,930415,PDBR: DSNAME Option Enhancements     @LXA         
.* $LZ=SMC    ,HBB5510,930415,PDOH: SMF-SMC Support                @LZA         
.* $M1=WLMI   ,HBB5510,930610,PDOH: SMF-WLM Support                @M1A         
.* $M2=WLMI   ,HBB5510,930715,PDOH: SMF-WLM Support Stage 2        @M2A         
.* $L2=ARM    ,HBB5520,931109,PDOH: SMF-ARM Support                @L2A         
.* $L3=CLONE  ,HBB5520,940414,PDOH: SMF-Cloning Support            @L3A         
.* $D3=DN70040,HBB5520,940505,PDOH: SMF-ARM Support                @D3A         
.* $L4=LOGGR  ,HBB5520,940505,PDOH: SMF-Logger Support             @L4A         
.* $02=OW02855,JBB3313,940110,PDBR: Usage Data Reporting           @02A         
.* $03=OW05616,JBB3313,940615,PDBR: Inccorect Dcls for Reserved    @03A         
.* $04=OW07260,JBB3313,940815,PDOH: SMF89LPI incorrectly filled    @04A         
.*    =PN71727,HBB5520,941020,PDOH: CDPI: SHOWHDR Cleanup                       
.* $MX=PRDEDSMF,HBB6601,950601,PDXB: Product enable/disable        @MXA         
.* $M3=PRDEDURP,HBB6601,950731,PDE1: Product enable/disable                     
.* $M5=DYNLLSMF,JBB6602,941231,PDXB: Dynamic LNKLST                @M5A         
.* $M6=DYLPASMF,JBB6604,961101,PDXB: Dynamic LPA                   @M6A         
.* $M7=WLMPRES,JBB6604,970226,PDCG: SMF-WLM Support Stage 3        @M7A         
.* $05=OW25672,HBB5510,970630,PDRR: OAM Type 85 Enhancement        @05A         
.* $P4=PUX0281,HBB6605,970701,PDRR: Reship correct level of module @P4A         
.*                                  at JBB6604 with OW25672        @P4A         
.* $P4=PUX0139,HBB6605,970630,PDPF: SMF-SMF89LPV - LPAR ID valid   @P4A         
.* $M8=WLMPMES, JBB6609,980812,PDCO: SMF-WLM Multisystem Enclave   @M8A         
.* $06=OW37091,HBB6601,990528,PDOH: CUoD Support                   @06A         
.* $M9=MCSEX,  HBB7709,020430,PDON: Multiple Channel Subsystems    @M9A         
.* $P5=PJK0369,HBB7709,030210,PDOO: Documentation Update           @P5A         
.* $L5=SMFBXL ,HBB7709,030520,PDDZ: SMF Buffer Constraint          @L5A         
.* $P6=PJK0531,HBB7709,030529 PDDZ: adjust smf90dsm section        @P6A         
.* $07=OA11036,HBB7707,050514 PDOO: Add SMF89HOF SMF89DTO          @07A         
.* $H1=P001    HBB7740 070215 PDXB: P001                           @H1A         
.* $08=ME09541 HBB7709,070201 PDXB: zNALC                          @08A         
.* $L6=AUTOR   HBB7770,081225 PDSS: Auto-Reply support             @L6A         
.* $L7=HDCPCR  HBB7770,090520 PDBS: HDCPCR                         @L7A         
.* $L8=SMFPOWER HBB7770 090820 PDOO: SMF ZGRYPHON support          @L8A         
.*                                   Feature: ME16946              @L8A         
.* $L8=ME18026  HBB7770 091229 PDOO: SMF ZGRYPHON misc changes     @L8A         
.* $P7=ME18149  HBB7770 100117 PDOO: zGRYPHON misc clean up        @P7A         
.* $P8=ME18275  HBB7770 100129 PDOO: SMFPOWER cosmetic updates     @P8A         
.* $P9=ME18342  HBB7770 100203 PDOO: Rename SMF89T34 flag byte     @P9A         
.* $09=OA31615  HBB7750,101201 PDAS: Container Support             @09A         
.* $PA=ME22089  HBB7790 110826 PDOO: Add SMF30_RMCTADJN_Nominal    @PAA         
.* $L9=ME23009  HBB7790 111115 PDXB: SMF90 Subtype 35              @L9A         
.* $PB=ME23066  HBB7790 111129 PDOO: Authorize SETSMF              @PBA         
.* $PC=ME24004 ,HBB7790,120424,PDOO: Separate Wait Time Limits     @PCA         
.*                                   For Batch TSO And STC         @PCA         
.* $LA=ME24369  HBB7790 120610 PDBS: SMF90 bit for SMF30COUNT      @LAA         
.* $LB=DYNAMMCS HBB7790 120831 PDED: Dynamic CONSOLxx              @LBA         
.* $0A=OA42221  HBB7790,130625 PDGB: GRS support                   @0AA         
.* $LC=SOLED    HBB77A0 131001 PDXB: Solution Edition              @LCA         
.* $LE=ME28526  HBB77A0 140401 PDXB: SMF90-37                      @LEA         
.* $0B=OA43366  HBB7790 131029 PD0AAA: ZZSIM2 rollup                            
.* $LF=WI87695  HBB77B0 150603 PDXB: SMF90-38 IEFOPZ               @LFA         
.* $0C=OA47062  HBB77A0 150807 PDTA: REGIONX/SMFLIMxx enablement                
.*                                   TRSQ                          @0CA         
.* $LG=SMFTYPEX HBB77B0,160202,PDOO: Extended SMF Record Types                  
.*                                   W105614                       @LGA         
.* $0D=OA48571  HBB77A0 160630 PD00JI: HFTS SMF record 98          @0DA         
.* $LH=zCBP     HBB77C0,171103,PDNJ: zCBP                                       
.* $0E=SBG      HBB77A0 171121 PD00FY: Solution Billing Groups                  
.*                                     (OA53033)                   @0EA         
.* $LI=USAGEENH HBB77C0 180630 PD00HV: IFAUSAGE Enhancements       @LIA         
.* $LJ=270303   HBB77C0 180901 PD00XB: Accommodate C               @LJA         
.* $PD=W273694  HBB77C0 180920 PDTA: SMF89CountAsXxxx fields moved              
.*                                   to Usage Data section         @PDA         
.* $MA=W261215  HBB77C0 190102 PDTA: FUNCTIONDATA for TRGs         @MAA         
.* $0F=FB       HBB77B0 190131 PDXB: FB                            @0FA         
.* $0G=FB2      HBB77C0 200131 PDXB: FB2                           @0GA         
.* $0H=OA56950  HBB77D0 200715 PDOO: Synched interval is off by                 
.*                                     leap seconds (SUG APAR)     @0HA         
.* $0I=W387508  HBB77D0 200821 PDXB: SolutionID                    @0IA         
.* $0J=OA60659  HBB77C0 210105 PDXB: FB3                           @0JA         
.* $0K=OA62783  HBB77D0 230307 PDXB: Validated Boot                @0KA         
.*                                                                   */         
*%IFASMFRAB:;                                                                   
*/***** END OF SPECIFICATIONS ************************************** */         
*   %GOTO IFAL85;  /*                                                           
         AIF   (&RECTYPE EQ 85).IFAS085                            @05A         
         AIF   (&RECTYPE EQ 87).IFAS087                            @0AA         
         AIF   (&RECTYPE EQ 88).IFAS088                            @L4A         
         AIF   (&RECTYPE EQ 89).IFAS089                            @02A         
         AIF   (&RECTYPE EQ 90).IFAS090                        @G502PJW         
         AIF   (&RECTYPE EQ 92).IFAS092                            @D6A         
         AIF   (&RECTYPE EQ 94).IFAS094                            @D5A         
         AIF   (&RECTYPE EQ 96).IFAS096                            @01A         
         AIF   (&RECTYPE EQ 97).IFAS097                            @M8A         
         AIF   (&RECTYPE EQ 98).IFAS098                            @0DA         
.E5      ANOP                                                                   
         SPACE 3                                                                
         MNOTE 4,'&RECTYPE INVALID RECORD TYPE SPECIFIED'                       
.CONTB   ANOP                                                                   
         MEXIT                                                                  
.IFAS085 ANOP                                                      @05A         
* THIS DSECT DEFINES THE FORMAT FOR RECORD TYPE 85 WRITTEN BY OAM  @05A         
*                                                                  @05A         
         EJECT                                                     @05A         
         CBRSMF                                                    @05A         
         AGO  .CONTB                                               @05A         
.IFAS087 ANOP                                                      @0AA         
* THIS DSECT DEFINES THE FORMAT FOR RECORD TYPE 87 WRITTEN BY GRS  @0AA         
*                                                                  @0AA         
         EJECT                                                     @0AA         
         ISGYSMFR                                                  @0AA         
*                                                                  @0AA         
         AGO  .CONTB                                               @0AA         
.IFAS088 ANOP                                                      @L4A         
* THIS DSECT DEFINES THE FORMAT FOR RECORD TYPE 88 WRITTEN         @L4A         
* BY THE LOGGER                                                    @L4A         
*                                                                  @L4A         
         EJECT                                                     @L4A         
         IXGSMF88                                                  @L4A         
         AGO  .CONTB                                               @L4A         
.IFAS089 ANOP                                                      @02A         
         EJECT                                                     @02P         
*                                                                  @02A         
SMFRCD89 DSECT           Type 89 Subtype 1 mapping                 @02A         
*                                                                  @02A         
*      ****************************************************************         
*      *                                                              *         
*      * Header Section                                            @02A         
*      *                                                              *         
*      ****************************************************************         
*                                                                  @02A         
*                                                                  @02A         
SMF89LEN DS    1FL2      Record Length                             @02A         
SMF89SEG DS    1CL0002   Segment descriptor                        @02A         
SMF89FLG DS    1CL0001   System indicator                          @02A         
SMF89RTY DS    1FL1      Record type - 89, x'59'                   @02A         
SMF89TME DS    1CL0004   Time, in hundredths of a second, record   @02A         
*                        was moved to the SMF buffer.              @02A         
SMF89DTE DS    1CL0004   Date that the record was moved to the SMF @02A         
*                        buffer, in the form of 0cyydddF, where F  @02A         
*                        is the sign                               @02A         
SMF89SID DS    1CL0004   System identification (taken from SID     @02A         
*                        parameter)                                @02A         
SMF89WID DS    1CL0004   Subsystem identifier for the SMF address  @02A         
*                        space - 'STC' for Started Task            @02A         
SMF89STP DS    1FL2      Record Subtype                            @02A         
SMF89STPUSAGE EQU 1      SMF 89 measured usage                     @M3A         
SMF89STPPRODREG EQU 2    SMF 89 product registration               @M3A         
         SPACE 1                                                   @M3P         
SMF89SDL DS    1FL4      Length of self-defining section           @02A         
*                                                                  @02A         
*      ****************************************************************         
*      *                                                              *         
*      * Self-Defining Section                                        *         
*      *                                                              *         
*      ****************************************************************         
*                                                                  @02A         
*                                                                  @02A         
SMF89SDS DS    0CL0036   Self-Defining Section                     @09C         
SMF89PRO DS    1FL4      Offset of Record Product Section (from    @02A         
*                        start of record including the RDW         @02A         
SMF89PRL DS    1FL2      Length of each Record Product Section     @02A         
SMF89PRN DS    1FL2      Number of Record Product Sections - '1'   @02A         
SMF89SIO DS    1FL4      Offset of System ID Section (from start   @02A         
*                        of record including the RDW               @02A         
SMF89SIL DS    1FL2      Length of each System ID Section          @02A         
SMF89SIN DS    1FL2      Number of System ID Sections - '1'        @02A         
SMF89UDO DS    1FL4      Offset of First Usage/Product Data        @MXC         
*                        (section from start of record, including  @MXC         
*                        the RDW)                                  @MXC         
SMF89UDL DS    1FL2      Length of each Usage/Product Data section @MXC         
SMF89UDN DS    1FL2      Number of Usage/Product Data sections     @MXC         
*                        (minimum: 0)                              @MXC         
SMF89UDR DS    1FL4      Number of Product Data sections           @MXA         
*                        remaining. 0 for usage data.              @MXA         
SMF89CNO DS    1FL4      Offset of first Product Intersection      @09A         
*                        Data Section (from start of record,       @09A         
*                        including the RDW)                        @09A         
SMF89CNL DS    1FL2      Length of each Product Intersection Data  @09A         
*                        Section                                   @09A         
SMF89CNN DS    1FL2      Number of Product Intersection Data       @09A         
*                        Sections (Min '0').                       @09A         
SMF89TRO DS    1FL4      Offset of first Tenant Resource Group     @0EA         
*                        Data Section (from start of the record,   @0EA         
*                        includeing the RDW).                      @0EA         
SMF89TRL DS    1FL2      Length of each Tenant Resource            @0EA         
*                        Group Data Section                        @0EA         
SMF89TRN DS    1FL2      Number of Tenant Resource Group           @0EA         
*                        Data Sections (Min '0').                  @0EA         
SMF89TCO DS    1FL4      Offset of first Tenant Resource           @0EA         
*                        Group Intersection Data Section           @0EA         
*                        (from start of record, including          @0EA         
*                        the RDW).                                 @0EA         
SMF89TCL DS    1FL2      Length of each Tenant Resource            @0EA         
*                        Group Intersection Data Section           @0EA         
*                                                                  @0EA         
SMF89TCN DS    1FL2      Number of Tenant Resource Group           @0EA         
*                        Intersection Data Sections                @0EA         
*                        (Min '0').                                @0EA         
*                                                                  @02A         
*      ****************************************************************         
*      *                                                              *         
*      * Product Section                                           @02A         
*      *                                                              *         
*      ****************************************************************         
*                                                                  @02A         
*                                                                  @02A         
SMF89PR  DSECT                                                     @02A         
SMF89PNM DS    1CL0008   Record Product Name - 'SMF'               @02A         
SMF89RVN DS    1FL4      Record Version Number - '01'              @02A         
SMF89OSL DS    1CL0008   MVS System Level (ie. 'SP4.3.0')          @02A         
SMF89IST DS    1FL4      Reporting Interval START Time (in         @02A         
*                        hundredths of a second). 0 for            @02A         
*                        non-Interval records                      @02A         
SMF89ISD DS    1CL0004   Reporting Interval START Date in the form @02A         
*                        of 0cyydddF, where F is the sign. 0 for   @02A         
*                        non-Interval records                      @02A         
SMF89IET DS    1FL4      Reporting Interval END Time (in           @02A         
*                        hundredths of a second). 0 for            @02A         
*                        non-Interval records                      @02A         
SMF89IED DS    1CL0004   Reporting Interval END Date in the form   @02A         
*                        of 0cyydddF, where F is the sign 0 for    @02A         
*                        non-Interval records                      @02A         
SMF89PFL DS     X        Flags                                     @H1A         
SMF89P1A EQU    X'80'    P001 Active                               @H1A         
SMF89ZNA EQU    X'40'    LICENSE=zNALC                             @08A         
SMF89LGA EQU    X'20'    Contains information associated with a                 
*                        potential future function, no further details          
*                        are available at this time                @L7A         
SMF89SolutionEdition EQU X'10'                                     @LCA         
SMF89_zCBP EQU X'08'     When bit is on, SMF89 fields with zCBP names           
*                         aliases with corresponding zAAP names                 
*                         contain data about zCBP processors.                   
*                        When bit is off, SMF89 fields with zCBP names          
*                         aliases with corresponding zAAP names                 
*                         contain data about zAAP processors.      @LHA         
SMF89CR  DS    1CL0001   Contains information associated with a                 
*                        potential future function, no further details          
*                        are available at this time                @L7A         
SMF89ZEP DS    1XL0001   Contains information associated with a                 
*                        potential future function, no further details          
*                        are available at this time                @L7A         
         DS    1CL0001   Reserved for alignment of SMF89HOF        @L7C         
SMF89HOF DS     D        Hypervisor date/time offset in STCK       @07A         
*                        format. This field contains the sysplex   @07A         
*                        timer offset value, when present.         @07A         
SMF89DTO DS     D        Local date/time offset, copied from       @07A         
*                        CVTLDTO                                   @07A         
SMF89_CoreMode_CP   DS  H   The number of CPUs that are active on a             
*                           CP core                                @0BC         
SMF89_CoreMode_zCBP DS 0H   The number of CPUs that are active on a             
*                           zCBP core                              @LHA         
SMF89_CoreMode_zAAP DS  H   The number of CPUs that are active on a             
*                           zAAP core                              @0BC         
SMF89_CoreMode_zIIP DS  H   The number of CPUs that are active on a             
*                           zIIP core                              @0BC         
            DS  H                                                  @LCA         
*                                                                  @02A         
*      ****************************************************************         
*      *                                                              *         
*      * System ID Section                                         @02A         
*      *                                                              *         
*      ****************************************************************         
*                                                                  @02A         
*                                                                  @02A         
SMF89SI  DSECT                                                     @02A         
SMF89SYN DS    1CL0008   MVS System Name (taken from SYSNAME in    @02A         
*                        IEASYSxx)                                 @02A         
SMF89UST DS    1FL4      Usage Data Interval START Time (in        @02A         
*                        hundredths of a second). 0 for            @02A         
*                        non-Interval records                      @02A         
SMF89USD DS    1CL0004   Usage Data Interval START Date in the     @02A         
*                        form of 0cyydddF, where F is the sign. 0  @02A         
*                        for non-Interval records                  @02A         
SMF89UET DS    1FL4      Usage Data Interval END Time (in          @02A         
*                        hundredths of a second). 0 for            @02A         
*                        non-Interval records                      @02A         
SMF89UED DS    1CL0004   Usage Data Interval END Date in the form  @02A         
*                        of 0cyydddF, where F is the sign 0 for    @02A         
*                        non-Interval records                      @02A         
SMF89CSU DS    1FL4      CPU Service Coefficient in affect at the  @02A         
*                        time that the record was generated.       @02A         
SMF89SRU DS    1FL4      SRB Service Coefficient in affect at the  @02A         
*                        time that the record was generated.       @02A         
SMF89CMN DS    1CL0002   CPU Model Number (Packed)                 @02A         
SMF89CVN DS    1FL1      CPU Version Number                        @02A         
SMF89LPI DS    1CL0001   LPAR Partition ID                         @04C         
SMF89LP1 EQU   X'F0'     1st nibble - flags                        @P4C         
SMF89LPV EQU   X'80'     SMF89LP2 LPAR ID is valid                 @M9C         
SMF89LPM EQU   X'40'     SMF89LP3 LPAR ID is valid                 @M9A         
SMF89LP2 EQU   X'0F'     LPAR ID if not greater than 15            @M9C         
SMF89SER DS    1CL0003   CPU Serial Number (Packed)                @02A         
SMF89LP3 DS    1FL1      LPAR ID                                   @M9C         
SMF89RPP DS    1FL4      CPU Relative Processing Power Indicator   @02A         
SMF89SPN DS    1CL0008   MVS SYSPLEX Name                          @02A         
SMF89CPT DS    1CL0006   CPC Type Number                           @02A         
SMF89CPM DS    1CL0003   CPC Model Number                          @02A         
SMF89CPS DS    1CL0012   CPC Sequence Number                       @02A         
SMF89SIF DS    1CL0001   System ID Flags                           @08A         
SMF89LNV EQU   X'80'     SMF89LPN is valid                         @08A         
SMF89LCR EQU   x'40'     On when this is the last record in a set  @09A         
*                        of continuation records for interval      @09A         
         DS    1CL0002   Reserved                                  @08C         
SMF89MNF DS    1CL0016   V1-CPC Manufacturer                       @06A         
SMF89TID DS    1CL0004   V1-CPC Type                               @06A         
SMF89MDL DS    1CL0016   V1-CPC Model                              @06A         
SMF89SQC DS    1CL0016   V1-CPC Sequence Code                      @06A         
SMF89POM DS    1CL0004   V1-CPC Plant of Manufacturer              @06A         
SMF89CPC DS    1FL4      CPU Capability                            @06A         
SMF89CCC DS    1FL2      Configured CPU Count                      @06A         
SMF89SCC DS    1FL2      Standby CPU Count                         @06A         
SMF89MAF DS    1CL30     Array of Multiprocessing CPU Capability   @06A         
*                        Adjustment Factors                        @06A         
SMF89LPN DS    1CL0008   When SYSIB 2.2.2                                       
*                        is valid when returned by the STSI instruction         
*                        (such as when running under z/VM), this is             
*                        the LPAR name. Bit SMF89LPV is on when                 
*                        the field is valid. Since this                         
*                        field was added in service, avoid                      
*                        looking at it unless you have validated that           
*                        SMF89LPV is on.                           @08A         
SMF89_Capacity_Change_Cnt     DS H The number of processor capacity             
*                                  changes that occurred since the              
*                                  previous interval or event                   
*                                  interval.  This number will be               
*                                  greater than 1 when the number of            
*                                  processor capacity changes exceeded          
*                                  the number specified in the                  
*                                  MAXEVENTINTRECS parmlib option. @L8A         
SMF89_RCTPCPUA_Actual         DS F Physical CPU adjustment factor               
*                                  (i.e. adjustment factor for                  
*                                  converting CPU time to equivalent            
*                                  service in basic-mode with                   
*                                  all processors online). Based on             
*                                  Model Capacity Rating.          @L8A         
SMF89_RCTPCPUA_Nominal        DS F Physical CPU adjustment factor               
*                                  (i.e. adjustment factor for                  
*                                  converting CPU time to equivalent            
*                                  service in basic-mode with all               
*                                  processors online).  Based on                
*                                  Nominal Model Capacity Rating.  @L8A         
SMF89_RCTPCPUA_scaling_factor DS F scaling factor for                           
*                                  SMF89_RCTPCPUA_Actual and                    
*                                  SMF89_RCTPCPUA_Nominal.         @L8A         
SMF89_Capacity_Adjustment_Ind DS XL1  When zero, the indication                 
*                                  is not reported. When in the range           
*                                  1-99, some amount of reduction is            
*                                  indicated. When 100, the machine is          
*                                  operating at normal capacity.                
*                                  Primary CPUs and all secondary-type          
*                                  CPUs are similarly affected.    @L8A         
SMF89_Capacity_Change_Rsn     DS XL1 Indicates the reason which is              
*                                  associated with the present value            
*                                  contained in                                 
*                                  SMF89_Capacity_Adjustment_Ind.  The          
*                                  bit values of this field correspond          
*                                  to those described in                        
*                                  RMCTZ_Capacity_Adjustment_Indication         
*                                  of the IRARMCTZ mapping macro (see           
*                                  Data Areas).                    @P7C         
SMF89_Capacity_Flags          DS CL1 Processor capacity flags      @L8A         
SMF89_Event_Driven_Interval_Rec  EQU X'80' When on, indicates that              
*                                  that the current record was                  
*                                  generated as a result of an event,           
*                                  rather than as a result of a                 
*                                  standard interval expiration based           
*                                  on time.                        @L8A         
SMF89_Capacity_Data_err       EQU X'40'  When on, indicates that an             
*                                  error occurred while collecting              
*                                  the processor capacity data,                 
*                                  therefore the following fields               
*                                  are unreliable:                              
*                                  SMF89_RCTPCPUA_Actual                        
*                                  SMF89_RCTPCPUA_Nominal                       
*                                  SMF89_RCTPCPUA_scaling_factor                
*                                  SMF89_Capacity_Adjustment_Ind                
*                                  SMF89_Capacity_Change_Rsn       @L8A         
SMF89_PCD_Rsvd_Exists         EQU X'20' This bit is set in records              
*                                  generated on systems running                 
*                                  z/OS 1.7 through z/OS 1.9. It will           
*                                  remain off in records generated at           
*                                  systems running z/OS 1.10 and                
*                                  above.                          @P8A         
         DS CL1               Reserved                             @09A         
SMF89ZNF DS 1FL4              zCBP or zAAP Normalization Factor for             
*                             zCBP or zAAP service time.           @LHC         
SMF89SNF DS 1FL4              zIIP Normalization Factor for zIIP   @09A         
*                             service time.                        @09A         
SMF89SEQ DS 1FL2              Record sequence number when          @09A         
*                             multiple records are written for the @09A         
*                             same interval                        @09A         
SMF89SI_End_V1 DS 0X          SMF89SI_Len_V1 is the length to here @0IA         
SMF89SolutionID DS CL64       The Solution ID from the SOLUT=      @0IA         
*                             system parameter. Binary 0's if      @0IA         
*                             SOLUT= was not used                  @0IA         
SMF89SI_End_V2 DS 0X          SMF89SI_Len_V2 is the length to here @0IA         
*                                                                               
SMF89SI_Len_V1 EQU SMF89SI_End_V1-SMF89SI                          @0IA         
SMF89SI_Len_V2 EQU SMF89SI_End_V2-SMF89SI                          @0IA         
SMF89SI_Len_Max EQU SMF89SI_Len_V2  This value might change upon   @0IA         
*                              any recompile after installation of @0IA         
*                              service or a release. Do not use    @0IA         
*                              this equate unless that is OK.      @0IA         
*      ****************************************************************         
*      *                                                              *         
*      * Usage Data Section                                        @02A         
*      *                                                              *         
*      ****************************************************************         
*                                                                  @02A         
*                                                                  @02A         
SMF89UD  DSECT                                                     @02A         
SMF89UPO DS    1CL0016   Product Owner or Vendor Name (obtained    @02A         
*                        PRODOWNER option ofA IFAUSAGE macro)      @02A         
SMF89UPN DS    1CL0016   Product Name (obtained PRODNAME option of @02A         
*                        IFAUSAGE macro)                           @02A         
SMF89UPV DS    1CL0008   Product Version (obtained PRODVERS option @02A         
*                        of IFAUSAGE macro)                        @02A         
SMF89UPQ DS    1CL0008   Product Qualifier (obtained PRODQUAL      @02A         
*                        option of IFAUSAGE macro)                 @02A         
SMF89UPI DS    1CL0008   Product ID (obtained PRODID option of     @02A         
*                        IFAUSAGE macro)                           @02A         
SMF89UCT DS    1CL0008   Product TCB Time (in hundredths of a      @02A         
*                        second - floating point)                  @02A         
SMF89USR DS    1CL0008   Product SRB Time (in hundredths of a      @02A         
*                        second - floating point)                  @02A         
SMF89UFG DS    1CL0001   Usage Entry Flags                         @02A         
SMF89UUN EQU   X'80'     UNAUTHORIZED REGISTER Requested           @02A         
SMF89UNU EQU   X'40'     Ineligible for measured usage             @MXA         
SMF89UUS EQU   X'20'     UNAUTHORIZED REGISTER with SAF authorized              
*                        UNAUTHSERV=LEVEL1 requested               @LIA         
SMF89UF2 DS    1CL0001   Usage Entry Flags Byte 2                  @09A         
SMF89HCS EQU   X'80'     This product has product                  @09A         
*                        intersection time sections                @09A         
SMF89AFS EQU   X'40'     All ADDRSP registrations of               @09A         
*                        this product are the first                @09A         
*                        registrations in their                    @09A         
*                        respective address spaces                 @09A         
SMF89TSH EQU   X'20'     An ADDRSP registration of this            @09A         
*                        product registered or                     @09A         
*                        deregisters while active                  @09A         
*                        TASK registrations where present          @09A         
*                        in one or more address spaces             @09A         
SMF89PLV EQU   X'10'     All ADDRSP registrations of               @09A         
*                        this product where at a                   @09A         
*                        service level that supports               @09A         
*                        product intersection time                 @09A         
SMF89HTR EQU   X'08'     This product has Tenant Resource Group    @0EA         
*                        sections. Check SMF89TRO for the offset   @0EA         
*                        to the first TRG section. Then check each @0EA         
*                        TRG in the section for an exact match     @0EA         
*                        of the product information to find the    @0EA         
*                        corresponding TRG                         @0EA         
SMF89_BoostInfo DS B     Boost information                         @0FA         
                ORG SMF89_BoostInfo                                @0FA         
SMF89_BI DS    B                                                   @0FA         
*  Bit definitions:                                                             
SMF89_zIIPBoost_Active EQU X'80' zIIP boost was active at some point   *        
                         within the interval                       @0FA         
SMF89_SpeedBoost_Active EQU X'40' Speed boost was active at some point *        
                         within the interval                       @0FA         
SMF89_BoostClass EQU X'07' See SMF89_BoostClass_xxx equates        @0FA         
*                                                                               
*    Boost Class equates. "AND" the byte with this mask and compare             
*    the result to the equate if you want to check the class                    
*                                                                               
*                                                                               
SMF89_BoostClass_Mask EQU X'07'                                    @0FA         
SMF89_BoostClass_IPL EQU 1                                         @0FA         
SMF89_BoostClass_Shutdown EQU 2                                    @0FA         
SMF89_BoostClass_RP  EQU 3                                         @0GA         
SMF89URT DS    1FL1      Data Type of value in SMF89URD (as        @02A         
*                        specified by the FORMAT option on the     @02A         
*                        FUNCTIONDATA Request of the IFAUSAGE      @02A         
*                        macro).                                   @02A         
SMF89URD DS    1CL0008   Product 'Specific' Resource Data          @02A         
*                        (specified by the DATA option on the      @02A         
*                        FUNCTIONDATA Request of the IFAUSAGE      @02A         
*                        macro).                                   @02A         
SMF89UZT DS    1CL0008   Product Offload Engine Time(in hundredths @09A         
*                        of a second - floating point)             @09A         
SMF89CountASTrad DS 1CL0004   Count of active address spaces in                 
*                             traditional (non-TRG) sub-capacity                
*                             workload environment                 @PDM         
SMF89CountASTRG  DS 1CL0004   Count of active address spaces in TRG             
*                             workload environment                 @PDM         
*                                                                               
*      ****************************************************************         
*      *                                                              *         
*      * Product Intersection Time Data Section                    @09A         
*      *                                                              *         
*      ****************************************************************         
*                                                                  @09A         
*                                                                  @09A         
SMF89CN  DSECT                                                     @09A         
SMF89CNP DS    0CL0056        Container Product                    @09A         
SMF89CPO DS    1CL0016        Product Owner or Vendor Name         @09A         
*                             (obtained PRODOWNER option of        @09A         
*                             IFAUSAGE macro)                      @09A         
SMF89CPN DS    1CL0016        Product Name (obtained               @09A         
*                             PRODNAME option of IFAUSAGE          @09A         
*                             macro)                               @09A         
SMF89CPV DS    1CL0008        Product Version (obtained            @09A         
*                             PRODVERS option of IFAUSAGE          @09A         
*                             macro)                               @09A         
SMF89CPQ DS    1CL0008        Product Qualifier (obtained          @09A         
*                             PRODQUAL option of IFAUSAGE          @09A         
*                             macro)                               @09A         
SMF89CPI DS    1CL0008        Product ID (obtained PRODID          @09A         
*                             option of IFAUSAGE macro)            @09A         
SMF89CNI DS    0CL0056        Intersecting Product                 @09A         
SMF89IPO DS    1CL0016        Product Owner or Vendor Name         @09A         
*                             (obtained PRODOWNER option of        @09A         
*                             IFAUSAGE macro)                      @09A         
SMF89IPN DS    1CL0016        Product Name (obtained               @09A         
*                             PRODNAME option of IFAUSAGE          @09A         
*                             macro)                               @09A         
SMF89IPV DS    1CL0008        Product Version (obtained            @09A         
*                             PRODVERS option of IFAUSAGE          @09A         
*                             macro)                               @09A         
SMF89IPQ DS    1CL0008        Product Qualifier (obtained          @09A         
*                             PRODQUAL option of IFAUSAGE          @09A         
*                             macro)                               @09A         
SMF89IPI DS    1CL0008        Product ID (obtained PRODID          @09A         
*                             option of IFAUSAGE macro)            @09A         
SMF89CFG DS    1CL00001       Usage Entry Flags                    @09A         
SMF89CUC EQU   X'80'          UNAUTHORIZED REGISTER                @09A         
*                             Requested on container product       @09A         
SMF89CUP EQU   X'40'          UNAUTHORIZED REGISTER                @09A         
*                             Requested on intersecting product    @09A         
SMF89CFC EQU   X'20'          Some data came from a function       @09A         
*                             being/functionend level register     @09A         
SMF89CTC EQU   X'10'          Some data came from a task           @09A         
*                             level register                       @09A         
SMF89CGO EQU   X'08'          All function based intersections     @09A         
*                             used the FBFE keyword                @09A         
SMF89CHTR EQU  X'04'          This intersection has Tenant         @0EA         
*                             Resource Group Sections.             @0EA         
*                             Check SMF89TCO for the offset to the @0EA         
*                             first Intersection section.          @0EA         
*                             Then check each of those in          @0EA         
*                             the section for an exact match       @0EA         
*                             of the product information to        @0EA         
*                             find the corresponding section       @0EA         
         DS    1CL0007        Reserved                             @09A         
SMF89CCT DS    1CL0008        Product Intersect TCB Time (in       @09A         
*                             hundredths of a second - floating    @09A         
*                             point)                               @09A         
SMF89CZT DS    1CL0008        Product Intersect Offload Engine     @09A         
*                             Time (hundredths of a second -       @09A         
*                             floating point)                      @09A         
*                                                                               
*      ****************************************************************         
*      *                                                              *         
*      * Tenant Resource Groups Data Section                       @0EA         
*      *                                                              *         
*      ****************************************************************         
                                                                                
SMF89TRG DSECT                                                     @0EA         
SMF89TRP DS    0CL56     Product Identifying Info                  @0EA         
SMF89TPO DS    CL16      Product Owner or Vendor Name (obtained        *        
                         PRODOWNER option of IFAUSAGE macro)       @0EA         
SMF89TPN DS    CL16      Product Name (obtained PRODNAME option of     *        
                         IFAUSAGE macro)                           @0EA         
SMF89TPV DS    CL8       Product Version (obtained PRODVERS option of  *        
                         IFAUSAGE macro)                           @0EA         
SMF89TPQ DS    CL8       Product Qualifier (obtained PRODQUAL option   *        
                         of IFAUSAGE macro)                        @0EA         
SMF89TPI DS    CL8       Product ID (obtained PRODID option of         *        
                         IFAUSAGE macro)                           @0EA         
SMF89TRG_NAME DS CL8     Tenant resource group                     @0EA         
SMF89TCT DS    CL8       Tenant resource group TCB time (hundredths of *        
                         a second - floating point)                @0EA         
SMF89TSR DS    CL8       TRG SRB Time (in hundredths of a second -     *        
                         floating point)                           @0EA         
SMF89TZT DS    CL8       TRG Offload Engine Time (hundredths of a      *        
                         second - floating point)                  @0EA         
SMF89TRGData DS CL8      Product Specific Resource Data (specified by  *        
                         the DATA option on the FUNCTIONDATA Request   *        
                         of the IFAUSAGE macro).                   @MAA         
SMF89TRGDataType DS FL1  Data Type of value in SMF89TRGData (as        *        
                         specified by the FORMAT option on the         *        
                         FUNCTIONDATA Request of the IFAUSAGE macro).  *        
                         Values:                                       *        
                         0 - No data specified                         *        
                         1 - CPU Time in long floating point (in       *        
                             hundredths of a second)                   *        
                         2 - Binary (64-bit)                           *        
                         3 - Long floating point                   @MAA         
*                                                                               
*      ***************************************************************          
*      *                                                             *          
*      * Product Intersection Time TRG Data Section                @0EA         
*      *                                                             *          
*      ***************************************************************          
*                                                                               
*                                                                               
SMF89TC  DSECT                                                     @0EA         
SMF89TCCP DS   0CL56     Container Product                         @0EA         
SMF89TCPO DS   CL16      Product Owner or Vendor Name (obtained        *        
                         PRODOWNER option of IFAUSAGE macro)       @0EA         
SMF89TCPN DS   CL16      Product Name (obtained PRODNAME option of     *        
                         IFAUSAGE macro)                           @0EA         
SMF89TCPV DS   CL8       Product Version (obtained PRODVERS option of  *        
                         IFAUSAGE macro)                           @0EA         
SMF89TCPQ DS   CL8       Product Qualifier (obtained PRODQUAL option   *        
                         of IFAUSAGE macro)                        @0EA         
SMF89TCPI DS   CL8       Product ID (obtained PRODID option of         *        
                         IFAUSAGE macro)                           @0EA         
SMF89TCIP DS   0CL56     Intersect Product                         @0EA         
SMF89TIPO DS   CL16      Product Owner or Vendor Name (obtained        *        
                         PRODOWNER option of IFAUSAGE macro)       @0EA         
SMF89TIPN DS   CL16      Product Name (obtained PRODNAME option of     *        
                         IFAUSAGE macro)                           @0EA         
SMF89TIPV DS   CL8       Product Version (obtained PRODVERS option of  *        
                         IFAUSAGE macro)                           @0EA         
SMF89TIPQ DS   CL8       Product Qualifier (obtained PRODQUAL option   *        
                         of IFAUSAGE macro)                        @0EA         
SMF89TIPI DS   CL8       Product ID (obtained PRODID option of         *        
                         IFAUSAGE macro)                           @0EA         
SMF89T_TRG_NAME DS CL8   Tenant resource group                     @0EA         
SMF89TCFG DS   1CL1      Usage Entry Flags                         @0EA         
SMF89TCUC EQU  X'80'     UNAUTHORIZED REGISTER Requested on container  *        
                         product                                   @0EA         
SMF89TCUP EQU  X'40'     UNAUTHORIZED REGISTER Requested on            *        
                         intersecting product                      @0EA         
          DS   CL7       Reserved for alignment                    @0EA         
SMF89TCCT DS   CL8       Product Intersect TCB time (hundredths of a   *        
                         second - floating point)                  @0EA         
SMF89TCZT DS   CL8       Product Intersection Offload Engine Time      *        
                         (hundredths of a second - floating point) @0EA         
*      ****************************************************************         
*      *                                                              *         
*      * Product enable/disable section                            @MXA         
*      *                                                              *         
*      ****************************************************************         
*                                                                  @MXA         
*                                                                  @MXA         
SMF89T2  DSECT                                                     @MXA         
SMF89T2PRODOWNER DS 1CL0016 Product Owner or Vendor Name (from     @MXA         
*                        prodowner parameter of IFAEDREG or        @MXA         
*                        OWNER option of PRODUCT statement of      @MXA         
*                        IFAPRDxx)                                 @MXA         
SMF89T2PRODNAME DS 1CL0016 Product name (from prodname             @MXA         
*                        parameter of IFAEDREG or NAME             @MXA         
*                        option of PRODUCT statement of            @MXA         
*                        IFAPRDxx)                                 @MXA         
SMF89T2FEATURENAME DS 1CL0016 Feature name (from featurename       @MXA         
*                        parameter of IFAEDREG or FEATURENAME      @MXA         
*                        option of PRODUCT statement of            @MXA         
*                        IFAPRDxx)                                 @MXA         
SMF89T2PRODVERS DS 1CL002 Product version (from prodvers           @MXA         
*                        parameter of IFAEDREG or VERSION          @MXA         
*                        option of PRODUCT statement of            @MXA         
*                        IFAPRDxx)                                 @MXA         
SMF89T2PRODREL  DS 1CL002 Product release (from prodrel            @MXA         
*                        parameter of IFAEDREG or RELEASE          @MXA         
*                        option of PRODUCT statement of            @MXA         
*                        IFAPRDxx)                                 @MXA         
SMF89T2PRODMOD  DS 1CL002 Product mod level (from prodmod          @MXA         
*                        parameter of IFAEDREG or MOD              @MXA         
*                        option of PRODUCT statement of            @MXA         
*                        IFAPRDxx)                                 @MXA         
SMF89T2PRODID DS 1CL008  Product ID (from prodID                   @MXA         
*                        parameter of IFAEDREG or ID               @MXA         
*                        option of PRODUCT statement of            @MXA         
*                        IFAPRDxx)                                 @MXA         
SMF89T2FLAGS DS 1CL0001  Flags                                     @MXA         
SMF89T2NOTDEFINED EQU X'80' Product state is Not Defined           @MXA         
SMF89T2ENABLED EQU X'40' Product state is Enabled                  @MXA         
SMF89T2REGENTRY EQU X'08' Register entry                           @MXA         
SMF89T2STATEENTRY EQU X'04' State entry                            @MXA         
SMF89T2NOREPORT EQU X'02' "No Report" - registered with            @MXA         
*                           IFAEDREG_TYPE_NOREPORT                 @MXA         
SMF89T2LICENSEDUNDERPROD EQU X'01'  "Licensed Under Prod" -        @MXA         
*                           registered with                        @MXA         
*                           IFAEDREG_TYPE_LICENSEDUNDERPROD        @MXA         
*                                                                               
SMF89T2_BoostInfo DS B   Boost information                         @0FA         
           ORG SMF89T2_BoostInfo                                   @0FA         
SMF89T2_BI DS  B                                                   @0FA         
*  Bit definitions:                                                             
SMF89T2_zIIPBoost_Active EQU X'80' zIIP boost was active at some point *        
                         within the interval                       @0FA         
SMF89T2_SpeedBoost_Active EQU X'40' Speed boost was active at some     *        
                         point within the interval                 @0FA         
SMF89T2_BoostClass EQU X'07' See SMF89T2_BoostClass_xxx equates    @0FA         
*                                                                               
*    Boost Class equates. "AND" the byte with this mask and compare             
*    the result to the equate if you want to check the class                    
*                                                                               
*                                                                               
SMF89T2_BoostClass_Mask EQU X'07'                                  @0FA         
SMF89T2_BoostClass_IPL EQU 1                                       @0FA         
SMF89T2_BoostClass_ShutDown EQU 2                                  @0FA         
SMF89T2_BoostClass_RP  EQU 3                                       @0GA         
SMF89T2NUMINSTANCES DS   F       Maximum number of instances of    @MXA         
*                                registrations of this product     @MXA         
SMF89T2NUMCURRENTINSTANCES DS F  Current number of instances of    @0EA         
*                                registrations of this product.    @0EA         
*                                This field cannot be assumed to   @0EA         
*                                be present. Check SMF89UDL to see @0EA         
*                                if this field is present          @0EA         
SMF89T2NUMINSTANCESINTRGS DS F   number of instances of            @0EA         
*                                registrations of this product     @0EA         
*                                that are currently in TRGs.       @0EA         
*                                Check the SMF89T2TRG section for  @0EA         
*                                details.                          @0EA         
*                                This field cannot be assumed to   @0EA         
*                                be present. Check SMF89UDL to see @0EA         
*                                if this field is present          @0EA         
SMF89T2NUMNEWREGISTRATIONS DS F  Number of instances of            @0EA         
*                                registrations of this product     @0EA         
*                                since the last SMF89 record.      @0EA         
*                                This field cannot be assumed to   @0EA         
*                                be present. Check SMF89UDL to see @0EA         
*                                if this field is present          @0EA         
SMF89T2NUMNEWTRGREGISTRATIONS DS F  Number of instances of         @0EA         
*                                registrations of this product     @0EA         
*                                since the last SMF89 record that  @0EA         
*                                were part of TRGs.                @0EA         
*                                This field cannot be assumed to   @0EA         
*                                be present. Check SMF89UDL to see @0EA         
*                                if this field is present          @0EA         
*      ****************************************************************         
*      *                                                              *         
*      * Product enable/disable TRG Section                        @0EA         
*      *                                                              *         
*      ****************************************************************         
*                                                                  @0EA         
SMF89T2TRG DSECT                                                   @0EA         
SMF89T2TRG_PRODINFO DS 0CL62 This matches EdaaeInfo in DSECT EDAA in   *        
                         macro IFAEDIDF                            @0EA         
SMF89T2TRGPRODOWNER DS CL16 Product Owner or Vendor Name (from         *        
                         prodowner parameter of IFAEDREG or OWNER      *        
                         option of PRODUCT statement of IFAPRDxx)  @0EA         
SMF89T2TRGPRODNAME DS CL16 Product name (from prodname parameter of    *        
                         IFAEDREG or NAME option of PRODUCT statement  *        
                         of IFAPRDxx)                              @0EA         
SMF89T2TRGFEATURENAME DS CL16 Feature name (from featurename parameter *        
                         of IFAEDREG or FEATURENAME option of PRODUCT  *        
                         statement of IFAPRDxx)                    @0EA         
SMF89T2TRGPRODVERS DS CL2 Product version (from prodvers parameter of  *        
                         IFAEDREG or VERSION option of PRODUCT         *        
                         statement of IFAPRDxx)                    @0EA         
SMF89T2TRGPRODREL DS CL2 Product release (from prodrel parameter of    *        
                         IFAEDREG or RELEASE option of PRODUCT         *        
                         statement of IFAPRDxx)                    @0EA         
SMF89T2TRGPRODMOD DS CL2 Product modification level (from prodmod      *        
                         parameter of IFAEDREG or MOD option of        *        
                         PRODUCT statement of IFAPRDxx)            @0EA         
SMF89T2TRGPRODID DS CL8  Product ID (from prodowner parameter of       *        
                         IFAEDREG or OWNER option of PRODUCT statement *        
                         of IFAPRDxx)                              @0EA         
         DS    CL2       Reserved                                  @0EA         
SMF89T2TRGNAME DS CL8    Tenant Resource Group name                @0EA         
SMF89T2TRGNUMINSTANCES DS F Current number of registration of this     *        
                         product currently in this TRG             @0EA         
         AGO  .CONTB                                               @02P         
.IFAS090 ANOP                                                  @G50FPJW         
         EJECT                                                 @G50FPJW         
*        THIS RECORD IS WRITTEN WHEN EVER AN OPERATOR COMMAND OR                
*        RESPONSE OF THE FOLLOWING TYPE IS RECEIVED:               @D2C         
*            1  SET TIME                                                        
*            2  SET DATE                                                        
*            3  SET DMN                                                         
*            4  SET IPS                                                         
*            5  SET SMF                                                         
*            6  SWITCH SMF                                                      
*            7  HALT EOD                                                        
*            8  IPL PROMPT (RESPONSE)                                           
*            9  IPL SMF (RESPONSE)                                              
*            10 IPL SRM (RESPONSE)                                              
*            11 SET OPT                                                         
*            12 SET ICS                                                         
*            13 SETSMF                                         @G382P26         
*            14 SET MPF                                        @G382P27         
*            15 RESTART SMF                                        @L1A         
*            16 SET DAE                                            @D2A         
*            17 SET PFK                                            @D8A         
*            18 SET GRSRNL                                         @LLA         
*            19 SET APPC                                           @LDA         
*            20 SET SCHPRM                                         @LDA         
*            21 SET SCH                                            @LKA         
*            22 SET CNGRP                                          @LOA         
*            23 WLM Service Definition Install                     @M1C         
*            24 WLM Service Policy Activation                      @M1C         
*            25 Workload Management Mode Change                    @M1C         
*            26 IPL LOGREC                                         @LZA         
*                                                                 2@D3D         
*            27 ARM restarts enabled                               @D3C         
*            28 ARM restarts disabled                              @D3C         
*            29 CSV LNKLST set activated                           @M5A         
*            30 WLM RESET                                          @M6A         
*            31 Modules added to or deleted from LPA               @M6A         
*            32 WLM Scheduling Environment change                  @M7A         
*            33 SET AUTOR                                          @L6A         
*            34 Processor Capacity Change                          @L8A         
*            35 SETLOAD xx,IEASYM                                  @L9A         
*            36 SET CON                                            @LBA         
*            37 APF list update                                    @LEA         
*            38 IEFOPZ                                             @LFA         
*            39 SET SMFLIM                                         @0CA         
*            40 System Recovery Boost                              @0FA         
*            41 CVTLSO changed                                     @0HA         
*            42 Validated Boot                                     @0KA         
*                                                                               
*                                                                  @LZC         
*                                                                               
*        RECORD LENGTH IS VARIABLE MINIMUM OF XXX BYTES                         
*                                                                               
SMFRCD90 DSECT           HEADER SEGMENT                                         
*                                                                               
*        SMF RECORD HEADER SEGMENT                                              
*                                                                               
SMF90LEN DS    BL2'0'                  RECORD LENGTH                            
SMF90SEG DS    BL2'0'                  SEGMENT DESCRIPTOR                       
SMF90FLG DC    BL1'0'                  HEADER FLAG BYTE                         
SMF90RTY DC    BL1'0'                  RECORD TYPE 90 HEX 5A                    
SMF90TME DC    BL4'0'                  RECORD WRITTEN TIME                      
SMF90DTE DC    PL4'0000'               RECORD WRITTEN DATE                      
SMF90SID DC    CL4' '                  SYSTEM IDENTIFICATION                    
*                                                                               
*        SELF DEFINING SECTION                                                  
*                                                                               
         DC    BL2'0'                  RESERVED                @VS49902         
SMF90POF DC    BL4'0'                  OFFSET TO PRODUCT SECT  @VS49902         
SMF90PLN DC    BL2'0'                  LENGTH OF PRODUCT SECTION                
SMF90PON DC    BL2'0'                  NUMBER OF PRODUCT SECTION                
SMF90DOF DC    BL4'0'                  OFFSET TO SUBTYPE DATA                   
*                                      SECTION                     @P5C         
SMF90DLN DC    BL2'0'                  LENGTH OF SUBTYPE DATA                   
*                                      SECTION                     @P5C         
SMF90DON DC    BL2'0'                  NUMBER OF SUBTYPE DATA                   
*                                      SECTIONS                    @P5C         
SMF90LRC EQU   *-SMFRCD90              LENGTH OF RECORD HEADER                  
*                                                                               
*        PRODUCT HEADER                                                         
*                                                                               
SMF90PRH DSECT                                                                  
SMF90TID DC    BL2'0'                  SUB TYPE ID                              
*                                                                               
*      1 = SET TIME   2 = SET DATE     3 = SET DMN    4 = SET IPS               
*      5 = SET SMF    6 = SWITCH SMF   7 = HALT EOD   8 = IPL PROMPT            
*      9 = IPL SMF   10 = IPL SRM     11 = SET OPT   12 = SET ICS               
*     13 = SETSMF    14 = SET MPF     15=RESTART SMF 16 = SET DAE  @D2A         
*     17 = SET PFK   18 = SET GRSRNL  19 = SET APPC                @LDC         
*     20 = SET SCHPRM                 21 = SET SCH                 @LKC         
*     22 = SET CNGRP                                               @LOA         
*     23 = WLM Service Definition Install                          @M1C         
*     24 = WLM Service Policy Activation                           @M1A         
*     25 = Workload Management Mode Change                         @M1A         
*     26 = IPL LOGREC                                              @LZA         
*                                                                 2@D3D         
*     27 = ARM restarts enabled                                    @D3C         
*     28 = ARM restarts disabled                                   @D3C         
*     29 = CSV LNKLST set activated                                @M5A         
*     30 = WLM RESET                                               @M6A         
*     31 = Modules added to or deleted from LPA                    @M6A         
*     32 = WLM Scheduling Environment change                       @M7A         
*     33 = SET AUTOR                                               @L6A         
*     34 = Processor Capacity Change                               @L8A         
*     35 = SETLOAD xx,IEASYM                                       @L9A         
*     36 = SET CON                                                 @LBA         
*     37 = APF list update                                         @LEA         
*     38 = IEFOPZ                                                  @LFA         
*     39 = SET SMFLIM                                              @0CA         
*     40 = System Recovery Boost                                   @0FA         
*     41 = CVTLSO changed                                          @0HA         
*     42 = Validated Boot                                          @0KA         
*                                                                               
SMF90RVN DC    BL2'0'                  RECORD VERSION NUMBER                    
SMF90PNM DC    CL8'0'                  PRODUCT NAME - SMF,SRM,SUP,ETC           
SMF90LPR EQU   *-SMF90PRH              LENGTH OF PRODUCT SECTION                
*                                                                               
*  IPL SMF, SET SMF OR SETSMF COMMAND SEGMENT                                   
*    - SUBTYPE ID 5 OR 9 OR 13 OR 15                               @L1C         
*                                                                               
SMF90T5  DSECT                                                     @L1C         
*                                                                               
*  SELF DEFINING SECTION FOR SUBTYPE 5 OR 9 OR 13 OR 15            @L1C         
*                                                                               
SMF90T5  DSECT                                                                  
SMF90OSM DC    BL4'0'                  OFFSET OF SMF SEGMENT   @VS49902         
SMF90LSM DC    BL2'0'                  LENGTH OF SMF SEGMENT                    
SMF90NSM DC    BL2'0'                  NUMBER OF SMF SEGMENTS                   
SMF90ODA DC    BL4'0'                  OFFSET OF DATASET SEG   @VS49902         
SMF90LDA DC    BL2'0'                  LENGTH OF DATASET SEGMENT                
SMF90NDA DC    BL2'0'                  NUMBER OF DATASET SEGMENTS               
SMF90OWK DC    BL4'0'                  OFFSET OF SUBSYSTEM SEG @VS49902         
SMF90LWK DC    BL2'0'                  LENGTH OF SUBSYSTEM SEGMENT              
SMF90NWK DC    BL2'0'                  NUMBER OF SUBSYSTEM SEGMENTS             
SMF90OOT DC    BL4'0'                  OFFSET OF SUBPARM SEGM  @G383P26         
SMF90LOT DC    BL2'0'                  LENGTH OF SUBPARM SEGM  @G383P26         
SMF90NOT DC    BL2'0'                  NUMBER OF SUBPARM SEGM  @G383P26         
SMF90LT5 EQU   *-SMF90T5               LENGTH OF TYPE 5 SELF DEF                
SMF90DSM DSECT                                                                  
SMF90MAX DC    CL4' '                  MAXDORM IN MMSS FORMAT                   
SMF90STA DC    CL6' '                  STATUS IN HHMMSS FORMAT                  
SMF90JWT DC    CL4' '                  JWT IN MMSS FORMAT                       
SMF90SYI DC    CL4' '                  SID IN CHARACTER                         
SMF90BUF DC    BL1'0'                  RESERVED (PREVIOUSLY THE                 
*                                      MINIMUM NUMBER OF BUFFERS)  @P2C         
SMF90BUM DC    BL1'0'                  RESERVED (PREVIOUSLY THE                 
*                                      MAXIMUM NUMBER OF BUFFERS)  @P2C         
SMF90SWT DC    BL1'0'                  SWITCHES                                 
SMF90PAL EQU   X'80'                   PROMPT(ALL)                              
SMF90PLT EQU   X'40'                   PROMPT(LIST)                             
SMF90PIP EQU   X'20'                   PROMPT(IPLR)                             
SMF90PNO EQU   X'10'                   NOPROMPT                    @P1C         
SMF90RPR EQU   X'08'                   REC(PERM)                                
SMF90RAL EQU   X'04'                   REC(ALL)                                 
SMF90LDS EQU   X'02'                   LISTDSN                                  
SMF90NLD EQU   X'01'                   NOLISTDSN                                
SMF90SW2 DC    BL1'0'                  SWITCHES                    @DIA         
SMF90NBM EQU   X'80'                   NOBUFFS(MSG)                @DIA         
SMF90NBH EQU   X'40'                   NOBUFFS(HALT)               @DIA         
SMF90LDM EQU   X'20'                   LASTDS(MSG)                 @DIA         
SMF90LDH EQU   X'10'                   LASTDS(HALT)                @DIA         
SMF90TSS EQU   X'08'                   AUTHSETSMF                  @PBA         
SMF90NSS EQU   X'04'                   NOAUTHSETSMF                @PBA         
SMF90S3C EQU   X'02'                   SMF30COUNT                  @LAA         
SMF90N3C EQU   X'01'                   NOSMF30COUNT                @LAA         
*                                                                               
SMF90SBU DS    XL1                     SMF SID Syntax Used         @LWA         
SMF90SDF EQU   X'80'                   'Default'                   @LWA         
SMF90SON EQU   X'40'                   SID(xxxx)                   @LWA         
SMF90SSE EQU   X'20'                   SID(xxxx,ser#)              @LWA         
SMF90SSY EQU   X'10'                   SID(xxxx,SYSNAME(sysname))  @LWA         
SMF90SSM EQU   X'08'                   Reserved                    @L3C         
SMF90SCO EQU   X'04'                   SID(xxxx,COMBIN(ser#,ser#)) @LWA         
SMF90SRV EQU   X'03'                   Reserved                    @LWA         
*                                                                               
SMF90RV7 DC    CL1' '                  RESERVED                    @LWC         
SMF90REL DC    CL4' '                  MVS RELEASE NUMBER                       
SMF90IIT DC    CL4' '                  IPL TIME - BINARY                        
SMF90IDT DC    CL4' '                  IPL DATE - 0cyydddF                      
SMF90BFM DC    CL5' '                  BUFSIZMAX value (ddddu)     @L5A         
SMF90BFL DC    CL2' '                  BUFUSEWARN value (dd)       @L5A         
SMF90ESWT DC   CL4' '                  SWT as entered in SMFPRMxx  @PCA         
SMF90ETWT DC   CL4' '                  TWT as entered in SMFPRMxx  @PCA         
SMF90RV8 DC    CL5' '                  RESERVED                    @P6C         
SMF90DSL EQU   *-SMF90DSM              DATA SECTION LENGTH                      
*                                                                               
* SUBTYPE 5 OR 9 OR 13 OR 15 - DATA SET SEGMENT. THERE WILL BE AN ENTRY         
* FOR EACH SMF RECORDING DATA SET.  THE FIRST DATA SET IS THE                   
* ACTIVE DATA SET AT IPL.                                      @G383P26         
*                                                                               
SMF90DSE DSECT                                                                  
SMF90DSN DC    CL44' '                 SMF DATA SET NAME           @LXC         
*                                                                               
* SUBTYPE 5 OR 9 OR 13 OR 15 - WORK CLASS RECORDING SEGMENT. THERE WILL         
* BE ONE ENTRY FOR EACH SYS OR SUBSYS.                         @G383P26         
*                                                                               
SMF90WCH DSECT                                                                  
SMF90WKN DC    CL4' '                  SUBYSTEM NAME                            
SMF90DTL DC    CL1' '                  SMF SUBSYS FLAGS X'80' DETAIL            
SMF90RS9 DC    CL3' '                  RESERVED                                 
SMF90SVL DC    CL8' '                  INTERVAL RECORD FOR SUBSYSTEM            
SMF90SYS DC    XL32'00'                BIT REPRESENTATION FOR WORK              
*                                      CLASS RECORDS                            
*                                      1 = RECORD ON, 0 = RECORD OFF            
*                                      BIT 0 = RECORD 0                         
*                                      BIT 255 = RECORD 255                     
SMF90EXN DC    15CL8' '                EIGHT BYTE NAME OF EACH EXIT             
SMF90SYE DC    XL256'00'               Record selectivity bits for              
*                                      extended record types. The               
*                                      first 256 bits are also                  
*                                      recorded in SMF90SYS.       @LGA         
SMF90LWC EQU   *-SMF90WCH              LENGTH OF WORK CLASS SECTION             
*                                                                               
* SUBTYPE 5 OR 9 OR 13 OR 15 - SUBPARM SEGMENT. THERE WILL BE AN ENTRY          
* FOR EACH SUBSYSTEM FOR WHICH AN SUBPARM HAS BEEN SPECIFIED   @G383P26         
*                                                                               
SMF90SUB DSECT                                                 @G383P26         
SMF90ASN DC    CL4' '                  SUBSYSTEM NAME          @G383P26         
SMF90APM DC    CL60' '                 ACCOUNTING PARAMETER    @G383P26         
SMF90LAC EQU   *-SMF90SUB              LENGTH OF SUBPARM SEG   @G383P26         
*                                                                               
*                                                                               
* SWITCH SMF SEGMENT/HALT EOD SEGMENT - SUBTYPE 6 OR 7                          
*                                                                               
SMF90T6  DSECT                                                                  
SMF90SWO DC    CL10' '                 Old Recording Data Set Name              
*                                                                               
*                                      Subtype 6: Blank, if data   @LXC         
*                                                 is lost          @LXC         
*                                                                               
*                                      Subtype 7: Blank            @LXC         
*                                                                               
*                                      If the length of the data   @LXC         
*                                      set is greater than 10,     @LXC         
*                                      this field is Blank.        @LXC         
*                                      See SMF90SOD for the        @LXC         
*                                      complete data set name.     @LXC         
SMF90SWN DC    CL10' '                 New Recording Data Set Name              
*                                                                               
*                                      Subtype 7: Blank            @LXC         
*                                                                               
*                                      If the length of the data   @LXC         
*                                      set is greater than 10,     @LXC         
*                                      this field is Blank.        @LXC         
*                                      See SMF90SND for the        @LXC         
*                                      complete data set name.     @LXC         
SMF90IT  DC    CL4' '                  IPL TIME                                 
SMF90ID  DC    CL4' '                  IPL DATE                                 
SMF90SOD DC    CL44' '                 Old Recording Data Set Name              
*                                                                               
*                                      Subtype 6: Blank, if data   @LXC         
*                                                 is lost          @LXC         
*                                                                               
*                                      Subtype 7: Blank            @LXC         
*                                                                               
SMF90SND DC    CL44' '                 New Recording Data Set Name              
*                                                                               
*                                      Subtype 7: Blank            @LXC         
*                                                                               
SMF90LT6 EQU   *-SMF90T6               LENGTH OF TYPE 6 SEGMENT                 
*                                                                               
*   SYSTEM IPL PROMPT DATA - SUBTYPE ID 8                                       
*                                                                               
SMF90T8  DSECT                                                                  
SMF90DTM DC    CL8'0'                  SYSTEM DOWN TIME                         
SMF90RSN DC    CL65' '                 IPL REASON                               
SMF90OPR DC    CL20' '                 OPERATOR'S NAME                          
SMF90ITM DC    CL4' '                  TIME OF IPL                              
SMF90DTT DC    CL4' '                  DATE OF IPL YYDDDF                       
SMF90LT8 EQU   *-SMF90T8               LENGTH OF TYPE 8 SEGMENT                 
*                                                                               
*   SET DATE / TOD SEGMENT - SUBTYPE ID 1 OR 2                                  
*                                                                               
SMF90T1  DSECT                                                                  
SMF90OTM DC    BL4'0'                  TIME BEFORE CMD ISSUED                   
SMF90ODT DC    CL4' '                  OLD DATE BEFORE CMD ISSUED               
SMF90NTM DC    BL4'0'                  NEW TIME                                 
SMF90NDT DC    CL4' '                  DATE AFTER COMMAND ISSUED                
SMF90LT1 EQU   *-SMF90T1               LENGTH OF TYPE 1 SEGMENT                 
*                                                                               
*   SET IPS COMMAND SEGMENT - SUBTYPE ID 4                                      
*                                                                               
SMF90T4  DSECT                                                                  
SMF90TIP DC    BL8'0'                  SET IPS TIME                             
SMF90IPO DC    CL8' '                  OLD IPS NAME                             
SMF90IPN DC    CL8' '                  NEW IPS NAME                             
SMF90LT4 EQU   *-SMF90T4               LENGTH OF TYPE 4 SEGMENT                 
*                                                                               
*   SETDMN SEGMENT - SUBTYPE ID 3                                               
*                                                                               
SMF90T3  DSECT                                                                  
SMF90DDT DC    CL8' '                  TIME OF CHANGE                           
SMF90DMM DC    BL1'0'                  DOMAIN NUMBER                            
SMF90DFG DC    BL1'0'                  DOMAIN FLAGS                             
SMF90MND EQU   X'80'                   MIN CHANGED                              
SMF90MXD EQU   X'40'                   MAX CHANGED                              
SMF90WGT EQU   X'20'                   WEIGHT CHANGED                           
SMF90AOB EQU   X'10'                   AOBJ CHANGED                             
SMF90DOB EQU   X'08'                   DOBJ CHANGED                             
SMF90FWK EQU   X'04'                   FWKLD CHANGED                            
SMF90ASV EQU   X'02'                   AVERAGE SERVICE RATE SPECIFIED           
*                                                                  @LMA         
SMF90DSV EQU   X'01'                   TOTAL SERVICE RATE SPECIFIED             
*                                                                  @LMA         
SMF90NMI DC    BL2'0'                  NEW MIN VALUE               @D4C         
SMF90NMA DC    BL2'0'                  NEW MAX VALUE               @D4C         
SMF90NWT DC    BL2'0'                  NEW WEIGHT VALUE            @D4C         
SMF90NAO DC    BL2'0'                  NEW AOBJ VALUE              @D4C         
SMF90NDO DC    BL2'0'                  NEW DOBJ VALUE              @D4C         
SMF90WKL DC    BL2'0'                  NEW FWKLD VALUE             @D4C         
SMF90T3R DC    BL2'0'                  RESERVED                    @LMA         
SMF90ALO DC    BL4'0'                  LOW AVERAGE SERVICE RATE VALUE           
*                                        SPECIFIED                 @LMA         
SMF90AHI DC    BL4'0'                  HIGH AVERAGE SERVICE RATE VALUE          
*                                        SPECIFIED                 @LMA         
SMF90DLO DC    BL4'0'                  LOW TOTAL SERVICE RATE VALUE             
*                                        SPECIFIED                 @LMA         
SMF90DHI DC    BL4'0'                  HIGH TOTAL SERVICE RATE VALUE            
*                                        SPECIFIED                 @LMA         
SMF90FL2 DC    BL1'0'                  FLAGS                       @P3A         
SMF90XCF EQU   X'80'                   IF 1, FIXCIDX VALUE IS SET  @P3A         
SMF90TRR DC    BL1'0'                  RESERVED                    @P3A         
SMF90XCI DC    BL2'0'                  FIXED CONTENTION INDEX      @P3A         
SMF90LT3 EQU   *-SMF90T3               LENGTH OF TYPE 3 SEGMENT                 
*                                                                               
*   IPL SRM COMMAND SEGMENT - SUBTYPE ID 10                                     
*                                                                               
SMF90T10 DSECT                                                                  
*  Compatibility mode fields:                                      @M2A         
*    These fields are always filled in.                            @M2A         
SMF90IPT DC    BL8'0'                  TIME OF IPL                              
SMF90IPS DC    CL8'0'                  IEAIPSXX PARMLIB MEMBER                  
SMF90OPT DC    CL8'0'                  IEAOPTXX PARMLIB MEMBER                  
SMF90ICS DC    CL8'0'                  IEAICSXX PARMLIB MEMBER                  
*                                                                  @M2A         
*  Goal mode fields:                                               @M2A         
*    These fields are filled in when goal mode                     @M2A         
*    system operation is applicable.                               @M2A         
SMF90SPN DC    CL8'0'          Active service policy name.         @M2A         
SMF90SPT DC    BL8'0'          Time/date (STCK format) that        @M2A         
*                              the active service policy was       @M2A         
*                              originally activated.               @M2A         
SMF90SPU DC    CL8'0'          Userid of the operator or service   @M2A         
*                              administrator that activated the    @M2A         
*                              service policy.                     @M2A         
SMF90SPS DC    CL8'0'          Name of the system on which the     @M2A         
*                              service policy activation was       @M2A         
*                              initiated.                          @M2A         
SMF90SDN DC    CL8'0'          Name of the installed service       @M2A         
*                              definition at the time the          @M2A         
*                              policy was activated.               @M2A         
SMF90SDT DC    BL8'0'          Time/date (STCK format) that the    @M2A         
*                              service definition was installed    @M2A         
SMF90SDU DC    CL8'0'          Userid of service administrator     @M2A         
*                              that installed the service          @M2A         
*                              definition.                         @M2A         
SMF90SDS DC    CL8'0'          Name of the system on which the     @M2A         
*                              service definition was installed.   @M2A         
SMF90LTA EQU   *-SMF90T10              LENGTH OF TYPE 10 SEGMENT                
*                                                                               
*   SET OPT COMMAND SEGMENT - SUBTYPE ID 11                                     
*                                                                               
SMF90T11 DSECT                                                                  
SMF90TOP DC    BL8'0'                  TIME OF OPT CHANGE                       
SMF90OPO DC    CL8'0'                  OLD OPT PARMLIB MEMBER                   
SMF90OPN DC    CL8'0'                  NEW OPT PARMLIB MEMBER                   
SMF90LTB EQU   *-SMF90T11              LENGTH OF TYPE 11 SEGMENT                
*                                                                               
*   SET ICS COMMAND SEGMENT - SUBTYPE ID 12                                     
*                                                                               
SMF90T12 DSECT                                                                  
SMF90TIC DC    BL8'0'                  TIME OF 'SETICS' CHANGE                  
SMF90ICO DC    CL8'0'                  OLD PARMLIB MEMBER                       
SMF90ICN DC    CL8'0'                  NEW PARMLIB MEMBER                       
SMF90LTC EQU   *-SMF90T12              LENGTH OF TYPE 12 SEGMENT                
*                                                              @G383P27         
*   SET MPF COMMAND SEGMENT - SUBTYPE ID 14                    @G383P27         
*                                                              @G383P27         
SMF90T14 DSECT                                                 @G383P27         
SMF90TMP DC    BL8'0'      TIME OF 'SET MPF' CHANGE            @G383P27         
SMF90MPO DC    CL8'0'      RESERVED - WAS OLD PARMLIB MEMBER       @D1C         
SMF90MPN DC    CL8'0'      RESERVED - WAS NEW PARMLIB MEMBER       @D1C         
SMF90MPC DC    CL8'0'      RESERVED - WAS OLD PARMLIB MEM - COLOR  @D1C         
SMF90MCN DC    CL8'0'      RESERVED - WAS NEW PARMLIB MEM - CMD    @D1C         
SMF90MCO DC    CL8'0'      RESERVED - WAS OLD PARMLIB MEM - CMD    @D1C         
SMF90CMP DC    BL4'0'      COUNT OF MPF ENTRIES                    @D1A         
SMF9014D DC    39CL2' '    ARRAY OF MPF SUFFIXES                   @D1A         
SMF90LTE EQU   *-SMF90T14  LENGTH OF TYPE 14 SEGMENT           @G383P27         
*                                                                  @D2A         
*   SET DAE COMMAND SEGMENT - SUBTYPE ID 16                        @D2A         
*                                                                  @D2A         
SMF90T16 DSECT                                                     @D2A         
SMF90DAT DC    BL8'0'      TIME AND DATE OF 'SET DAE' COMMAND      @D2A         
SMF90DAO DC    CL8'0'      OLD PARMLIB MEMBER                      @D2A         
SMF90DAN DC    CL8'0'      NEW PARMLIB MEMBER                      @D2A         
SMF90LTF EQU   *-SMF90T16  LENGTH OF TYPE 16 SEGMENT               @D2A         
*                                                                  @D8A         
*   SET PFK COMMAND SEGMENT - SUBTYPE ID 17                        @D8A         
*                                                                  @D8A         
SMF90T17 DSECT                                                     @D8A         
SMF90TPF DC    BL8'0'                  TIME OF SET PFK CHANGE      @D8A         
SMF90PFO DC    CL8'0'                  OLD PFK PARMLIB MEMBER      @D8A         
SMF90PFN DC    CL8'0'                  NEW PFK PARMLIB MEMBER      @D8A         
SMF90LTG EQU   *-SMF90T17              LENGTH OF TYPE 17 SEGMENT   @D8A         
*                                                                  @LLA         
*   SET GRSRNL COMMAND SEGMENT - SUBTYPE ID 18                     @LLA         
*                                                                  @LLA         
SMF90T18 DSECT                                                     @LLA         
SMF90SGT DC    BL8'0'                  TIME OF SET GRSRNL CHANGE   @LLA         
SMF90SGS DC    CL8' '                  SYSTEM THAT ISSUED THE CMD  @LLA         
SMF90SGC DC    F'0'                    COUNT OF ENTRIES            @LLA         
SMF90SGN DC    39CL2' '                NEW PARMLIB MEMBERS         @LLA         
SMF90LTH EQU   *-SMF90T18              LENGTH OF TYPE 18 SEGMENT   @LLA         
*                                                                  @LDA         
*   SET APPC COMMAND SEGMENT - SUBTYPE ID 19                       @LDA         
*                                                                  @LDA         
SMF90T19 DSECT                                                     @LDA         
SMF90APT DC    BL8'0'         TIME AND DATE OF 'SET APPC' CHANGE   @LDA         
SMF90APC DC    BL4'0'                  NUMBER OF ENTRIES           @LDA         
SMF90APN DC    CL8'0'                  NEW APPC PARMLIB MEMBER     @LDA         
SMF90LTI EQU   *-SMF90T19              LENGTH OF TYPE 19 SEGMENT   @LDA         
*                                                                  @LDA         
*   SET SCHPRM COMMAND SEGMENT - SUBTYPE ID 20                     @LDA         
*                                                                  @LDA         
SMF90T20 DSECT                                                     @LDA         
SMF90SCT DC    BL8'0'         TIME AND DATE OF 'SET SCHPRM' CHANGE @LDA         
SMF90SCC DC    BL4'0'                  COUNT OF ENTRIES            @LDA         
SMF90SCN DC    CL8'0'                  NEW SCHPRM PARMLIB MEMBER   @LDA         
SMF90LTJ EQU   *-SMF90T20              LENGTH OF TYPE 20 SEGMENT   @LDA         
*                                                                  @LKA         
*   SET SCH COMMAND SEGMENT - SUBTYPE ID 21                        @LKA         
*                                                                  @LKA         
SMF90T21 DSECT                                                     @LKA         
SMF90SHT DC    BL8'0'         TIME AND DATE OF 'SET SCH' CHANGE    @LKA         
SMF90SHC DC    BL4'0'                  COUNT OF ENTRIES            @LKA         
SMF90SHN DC    CL8'0'                  NEW SCHPRM PARMLIB MEMBER   @LKA         
SMF90LTK EQU   *-SMF90T21              LENGTH OF TYPE 21 SEGMENT   @LKA         
*                                                                  @LOA         
*   SET CNGRP COMMAND SEGMENT - SUBTYPE ID 22                      @LOA         
*                                                                  @LOA         
SMF90T22 DSECT                                                     @LOA         
SMF90CGT DC    BL8'0'         TIME AND DATE OF 'SET CNGRP' CHANGE  @LOA         
SMF90CGC DC    BL4'0'                  COUNT OF ENTRIES            @LOA         
SMF90CGN DC    CL8'0'                  NEW CNGRP PARMLIB MEMBER    @LOA         
SMF90LTL EQU   *-SMF90T22              LENGTH OF TYPE 22 SEGMENT   @LOA         
*                                                                  @D5A         
*   WLM Service Definition Install Segment  - Subtype ID 23        @M1A         
*   WLM Service Policy Activation Segment   - Subtype ID 24        @M1A         
*   Workload Management Mode Change Segment - Subtype ID 25        @M1A         
*   WLM RESET                               - Subtype ID 30        @M1A         
*   WLM Scheduling Environment change       - Subtype ID 32        @M7A         
*                                                                  @M1A         
         IWMSMF90                                                  @M1A         
*                                                                  @M1A         
*   IPL LOGREC SEGMENT - SUBTYPE ID 26                             @LZA         
*                                                                  @LZA         
         IFBSMF90                                                  @LZA         
*                                                                  @LZA         
*                                                                 2@D3D         
*   ARM restarts enabled                          - Subtype ID 27  @D3C         
*   ARM restarts disabled                         - Subtype ID 28  @D3C         
*                                                                  @L2A         
         IXCYSM90                                                  @L2A         
*                                                                               
*   Dynamic LNKLST activation                     - Subtype ID 29  @M5A         
*                                                                               
         CSVDLSMF                                                  @M5A         
*                                                                               
*   Dynamic LPA add or delete                     - Subtype ID 31  @M6A         
*                                                                               
         CSVLPSMF                                                  @M6A         
*                                                                               
*   SET AUTOR                                     - Subtype ID 33  @L6A         
*                                                                               
         CNZMYSMF                                                  @L8M         
*   Processor Capacity change segment - Subtype ID 34              @L8A         
*   This record is generated when a processor capacity change      @L8A         
*   occurs.                                                        @L8A         
*                                                                  @L8A         
SMF90T34 DSECT                                                     @L8A         
SMF90T34_Capacity_Change_Time  DS D    Time when the capacity was               
*                                      last changed. (STCK format) @P8C         
SMF90T34_RQSVSUS               DS F    Current SU factor from                   
*                                      RQSVSUS, which is described as:          
*                                      Copy of RmctAdjC when this SMF           
*                                      record was produced,                     
*                                      number of sixteenths of one              
*                                      CPU microsecond per                      
*                                      CPU service unit            @L8A         
SMF90T34_RCTPCPUA_Actual       DS F    Physical CPU adjustment factor           
*                                      (i.e. adjustment factor for              
*                                      converting CPU time to                   
*                                      equivalent service in basic-             
*                                      mode with all processors                 
*                                      online). Based on Model                  
*                                      Capacity Rating.            @L8A         
SMF90T34_RCTPCPUA_Nominal      DS F    Physical CPU adjustment factor           
*                                      (i.e. adjustment factor for              
*                                      converting CPU time to                   
*                                      equivalent service in                    
*                                      basic-mode with all processors           
*                                      online). Based on Nominal Model          
*                                      Capacity Rating.            @L8A         
SMF90T34_RCTPCPUA_scaling_factor DS F  scaling factor for                       
*                                      RCTPCPUA_actual and                      
*                                      RCTPCPUA_nominal.           @L8A         
SMF90T34_Capacity_Adjustment_Ind DS XL1  When zero, the indication              
*                                      is not reported. When in the             
*                                      range 1-99, some amount of               
*                                      reduction is indicated. When             
*                                      100, the machine is operating            
*                                      at normal capacity. Primary              
*                                      CPUs and all secondary-type CPUs         
*                                      are similarly affected.    @L8A          
SMF90T34_Capacity_Change_Reason DS XL1 Indicates the reason which is            
*                                      associated with the present              
*                                      value contained in                       
*                                      SMF90T34_Capacity_Adjustment_            
*                                      Ind.                        @L8A         
SMF90T34_Flags                 DS  CL1 Flag byte                   @A9C         
SMF90T34_RQSVSUS_Err           EQU X'80'  When on, indicates that an            
*                                      error occurred while collecting          
*                                      the value from RQSVSUS.     @L8A         
SMF90T34_Capacity_Data_err     EQU X'40'  When on, indicates that an            
*                                      error occurred while collecting          
*                                      the processor capacity data.@L8A         
SMF90T34_PCD_Rsvd_Exists       EQU X'20' This bit is set in records             
*                                      generated on systems running             
*                                      z/OS 1.7 through z/OS 1.9. It            
*                                      will remain off in records               
*                                      generated at systems running             
*                                      z/OS 1.10 and above.        @P8A         
SMF90T34_RSV1                  DS CL1  Reserved for alignment      @PAA         
SMF90T34_RMCTADJN_Nominal      DS F    Nominal CPU rate adjustment @PAA         
*                                                                               
*   SETLOAD xx,IEASYM - subtype ID 35.                             @L9A         
*   This record is generated when a SETLOAD xx,IEASYM occurs       @L9A         
*                                                                  @L9A         
SMF90T35 DSECT                                                     @L9A         
SMF90T35_Timestamp DS D                Time of SETLOAD xx,IEASYM   @L9A         
SMF90T35_ConsID    DS F                Console ID of issuer        @L9A         
SMF90T35_LOADxxName DS CL8             LOADxx member name          @L9A         
SMF90T35_IeasymStatement DS  CL72      IEASYM statement, identifies    *        
                                       the IEASYMxx suffixes       @L9A         
*                                                                               
*   SET CON                                       - Subtype ID 36  @LBA         
*                                                                               
         CNZMYSM2                                                  @LBA         
*                                                                               
*   APF list update                               - Subtype ID 37  @LEA         
*                                                                               
         CSVAPSMF                                                  @LEA         
*                                                                               
*   IEFOPZ                                        - Subtype ID 38  @LFA         
*                                                                               
         IEFOPSMF                                                  @LFA         
*                                                                               
*   SET SMFLIM                                    - Subtype ID 39  @0CA         
*                                                                               
SMF90T39 DSECT                                                     @0CA         
SMF90T39_Timestamp DS D                Time of SET SMFLIM policy                
*                                      change, in TOD clock (STCK)              
*                                      format                      @0CA         
SMF90T39_Num_Suffixes DS F             Count of SMFLIMxx suffixes  @0CA         
SMF90T39_Suffixes DS 38CL2             Array of 2-byte suffixes of              
*                                      specified SMFLIMxx members               
*                                      (maximum of 38 suffixes)    @0CA         
*                                                                               
*   System Recovery Boost                         - Subtype ID 40  @0FA         
*                                                                               
SMF90T40 DSECT                                                     @0FA         
SMF90T40_ETOD DS CL16    For IPLBoosts_Start, not applicable. For      *        
                         IPLBoosts_End, time of IPL Boosts end.        *        
                         SDBoosts_Start, not applicable. For           *        
                         SDBoosts_End, time of shutdown Boosts end.    *        
                         For RPBoosts_Start, not applicable. For       *        
                         RPBoosts_End, time of Recovery Process        *        
                         boosts end.                                   *        
                         In STCKE format.                          @0FA         
SMF90T40_Event DS F      The Boost event. See constants                *        
                         SMF90T40_Event_xxx                        @0FA         
SMF90T40_NumTransientzIIPCores DS H Number of zIIP cores configured    *        
                         online due to zIIP boost (and configured      *        
                         offline upon boost end)                   @0FA         
SMF90T40_Flags0 DS B     Flags                                     @0FA         
*  Bit definitions:                                                             
SMF90T40_zIIPBoost_Active EQU X'80' For the "boosts end" events, the   *        
                         boost was active. For the "boosts start"      *        
                         events, the boost was activated           @0FA         
SMF90T40_SpeedBoost_Active EQU X'40' For the "boosts end" events, the  *        
                         boost was active. For the "boosts start"      *        
                         events, the boost was activated           @0FA         
SMF90T40_zIIPBoost_EndedByError EQU X'20' Applies only to the          *        
                         "boosts end" events                       @0FA         
SMF90T40_SpeedBoost_EndedByError EQU X'10' Applies only to the         *        
                         "boosts end" events                       @0FA         
SMF90T40_RPBoosts_Last_EndedByError EQU X'08' The last (most recent)   *        
                         RP boosts ended by error. Applies only to the *        
                         "boosts end" events                       @0GA         
SMF90T40_BoostClass EQU X'07' See SMF90T40_BoostClass_xxx equates               
         ORG   SMF90T40_FLAGS0+1                                   @0FA         
SMF90T40_FLAGS1 DS B     Flags                                     @0FA         
*  Bit definitions:                                                             
SMF90T40_Boosts_EndedByTimer EQU X'80' All boosts were ended. Timer    *        
                         expired. Applies only to the "boosts end"     *        
                         events                                    @0FA         
SMF90T40_Boosts_EndedByPgm EQU X'40' All boosts were ended by proc     *        
                         IEABE. Applies only to the "boosts end"       *        
                         events                                    @0FA         
SMF90T40_Boosts_EndedBySD EQU X'20' All boosts were ended by shutdown. *        
                         Shutdown was begun before IPL boosts or RP    *        
                         boosts ended. Applies only to the "IPL boosts *        
                         end" and "Recovery process boosts end"        *        
                         events                                    @0GC         
SMF90T40_Boosts_EndedByError EQU X'10' All boosts were ended due to    *        
                         error. Applies only to the "boosts end"       *        
                         events                                    @0FA         
SMF90T40_RPB_Disabled EQU X'01'  When 1, RP boosts are disabled.       *        
                         When 0, RP boosts are enabled                 *        
                         Valid when SMF90T40_Boostlevel >= 2.      @0JA         
SMF90T40_RPB_Start_Requestor_ID DS 0B The ID of the requestor for which*        
                         the boost was started. Applies only to        *        
                         RPBoosts start event. Possible values are:    *        
                         0 - not identified, 1 - Sysplex partitioning, *        
                         2 - Coupling facility structure recovery,     *        
                         3 - Coupling facility datasharing member      *        
                             recovery,                                 *        
                         4 - Hyperswap                             @0GA*        
                         5 - SVC Dump                              @0JA*        
                         6 - Middleware region startup             @0JA*        
                         7 - Hyperswap config load                 @0JA         
SMF90T40_RP_Start_Requestor_ID DS B Same as RPB_Start_Requestor_ID @0JA         
SMF90T40_BoostLevel DS X       Valid when non-zero.                    *        
                         From ECVT_BoostLevel                      @0JA         
                DS XL6         Reserved                            @0JC         
SMF90T40_RPB_Duration DS 0XL8      Total duration for the life of the  *        
                         IPL of recovery process boosts. Updated when  *        
                         RP boost is extended or ends. In STCK format. *        
                         Provided for all events when                  *        
                         SMF90T40_BoostLevel >= 2.                 @0JA         
SMF90T40_RP_Duration DS  XL8       Same as RB_Duration             @0JC         
SMF90T40_End_V1 DS 0X        SMF90T40_Len_V1 is the length to here @0JA         
SMF90T40_RPB_Duration_Delta DS XL8 Delta of RPB_Duration since last    *        
                         SMF90T40 RPBoosts_Info record. In STCK format.*        
                         Provided only for RPBoosts_Info event.        *        
                         Valid when SMF90T40_BoostLevel is >= 2.   @0JA         
SMF90T40_RPB_Duration_Potential DS XL8 Total duration for the life of  *        
                         the IPL of recovery process boosts, ignoring  *        
                         the duration limit per 24 hours. Updated when *        
                         RP boost would be extended or end.            *        
                         In STCK format. Provided for all events.      *        
                         Valid when SMF90T40_BoostLevel is >= 2.   @0JA         
SMF90T40_RPB_Duration_Potential_Delta DS XL8 Delta of                  *        
                         RPB_Duration_Potential since last             *        
                         SMF90T40 RPBoosts_Info event. In STCK format. *        
                         Provided only for RPBoosts_Info event.        *        
                         Valid when SMF90T40_BoostLevel is >= 2.   @0JA         
SMF90T40_RPB_Duration_Potential_E DS XL8 Total duration for the life of*        
                         the IPL of recovery process boosts, ignoring  *        
                         the duration limit per 24 hours. Updated when *        
                         RP boost would be extended or end             *        
                         but only when RP boosts are enabled.          *        
                         In STCK format. Provided for all events.      *        
                         Valid when SMF90T40_BoostLevel is >= 2.   @0JA         
SMF90T40_RPB_Duration_Potential_E_Delta DS XL8 Delta of                *        
                         RPB_Duration_Potential_E since last           *        
                         SMF90T40 RPBoosts_Info event. In STCK format. *        
                         Provided only for RPBoosts_Info event.        *        
                         Valid when SMF90T40_BoostLevel is >= 2.   @0JA         
SMF90T40_End_V2 DS 0X        SMF90T40_Len_V2 is the length to here @0JA         
*                                                                               
SMF90T40_Len_V1 EQU SMF90T40_End_V1-SMF90T40                       @0JA         
SMF90T40_Len_V2 EQU SMF90T40_End_V2-SMF90T40                       @0JA         
SMF90T40_Len_Max EQU SMF90T40_Len_V2 This value might change upon  @0JA         
*                              any recompile after installation of @0JA         
*                              service or a release. Do not use    @0JA         
*                              this equate unless that is OK.      @0JA         
*                                                                               
*    Equates for SMF90T40_Event                                                 
*                                                                               
*                                                                               
SMF90T40_Event_IPLBoosts_Start EQU 1 IPL boosts start              @0FA         
SMF90T40_Event_IPLBoosts_End EQU 2 IPL boosts end                  @0FA         
SMF90T40_Event_SDBoosts_Start EQU 3 Shutdown boosts start          @0FA         
SMF90T40_Event_SDBoosts_End EQU 4 Shutdown boosts end              @0FA         
SMF90T40_Event_RPBoosts_Start EQU 5 Recovery process boosts start  @0GA         
SMF90T40_Event_RPBoosts_End EQU 6 Recovery process boosts end      @0GA         
SMF90T40_Event_RPBoosts_EnabDisab EQU 7 Recovery process boosts        *        
                                   enable/disable.  . In addition to   *        
                                   the Event and BoostLevel fields,    *        
                                   SMF90T40_RPB_Disabled is valid  @0JA         
SMF90T40_Event_RPBoosts_Info EQU 8 Recovery process boosts             *        
                                   usage information. In addition to   *        
                                   the Event and BoostLevel fields,    *        
                                   the fields with                     *        
                                  names beginning SMF90T40_RPB_Duration*        
                                   are the valid ones              @0JA         
*                                                                               
*    Equates for SMF90T40_Flags0                                                
*    Boost Class equates. "AND" the byte with this mask and compare             
*    the result to the equate if you want to check the class                    
*                                                                               
*                                                                               
SMF90T40_BoostClass_Mask EQU X'07'                                 @0FA         
SMF90T40_BoostClass_IPL EQU 1                                      @0FA         
SMF90T40_BoostClass_ShutDown EQU 2                                 @0FA         
SMF90T40_BoostClass_RP  EQU 3                                      @0GA         
*                                                                               
*  CVTLSO changed                                 - Subtype ID 41  @0HA         
*   Note: This record is generated on the SMF global interval      @0HA         
*         boundary after a change to CVTLSO occurred. It is        @0HA         
*         not necessarily generated at the time when the           @0HA         
*         change to CVTLSO occurred.                               @0HA         
*                                                                               
SMF90T41 DSECT                                                     @0HA         
SMF90T41_Old_CVTLSO DS D Value of CVTLSO before the change         @0HA         
SMF90T41_New_CVTLSO DS D Value of CVTLSO after the change          @0HA         
* Validated Boot                                  - Subtype ID 42  @0KA         
         IHAVBSMF ,                                                @0KA         
         AGO  .CONTB                                               @D6A         
.IFAS092 ANOP                                                      @D6A         
* THIS DSECT DEFINES THE FORMAT FOR RECORD TYPE 92 WRITTEN         @D6A         
* BY THE O/MVS FILE SYSTEM                                         @D6A         
*                                                                  @D6A         
         EJECT                                                     @D6A         
         BPXYSMFR                                                  @D6A         
*                                                                  @D6A         
         AGO  .CONTB                                               @D5A         
.IFAS094 ANOP                                                      @D5A         
* THIS DSECT DEFINES THE FORMAT FOR RECORD TYPE 94 WRITTEN         @D5A         
* BY THE AUTOMATED TAPE LIBRARY FUNCTION                           @D5A         
*                                                                  @D5A         
         EJECT                                                     @D5A         
         IECSMF94                                                  @D5A         
*                                                                  @D5A         
         AGO  .CONTB                                               @01A         
.IFAS096 ANOP                                                      @01A         
* THIS DSECT DEFINES THE FORMAT FOR RECORD TYPE 96 WRITTEN         @01A         
* BY THE INTEGRATED REASONING SHELL (TIRS)                         @01A         
*                                                                  @01A         
         EJECT                                                     @01A         
         EWQSMF96                                                  @01A         
*                                                                  @01A         
         AGO  .CONTB                                               @01A         
*                                                                  @01A         
.IFAS097 ANOP                                                      @M8A         
* THIS DSECT DEFINES THE FORMAT FOR RECORD TYPE 97 WRITTEN         @M8A         
* BY THE WORKLOAD MANAGER                                          @M8A         
*                                                                  @M8A         
         EJECT                                                     @M8A         
         IWMSMF97                                                  @M8A         
         AGO  .CONTB                                               @M8A         
.IFAS098 ANOP                                                      @0DA         
* THIS DSECT DEFINES THE FORMAT FOR TYPE 98 records                @0DA         
*                                                                  @0DA         
         EJECT                                                     @0DA         
         GBLC  &IFASMFRA_RECTYPE_98                                @0DA         
&IFASMFRA_RECTYPE_98 SETC 'YES'                                    @0DA         
         IHAHR098  ,                                               @0DA         
         AGO  .CONTB                                               @0DA         
         MEND                                                        */         
*                                                                               
*%IFAL85:;                                                    /* @LJC*/         
*%SMFBASE = '*';                                              /* @LJA*/         
*  %IF IFAR85 = ''                                            /* @LJC*/         
*      %THEN                                                                    
*     %GOTO IFAL87;                 /*                           @0AC*/         
*                                                                               
*/* THIS STRUCTURE DEFINES THE FORMAT FOR RECORD TYPE 85 WRITTEN @05A*/         
*/* BY OAM                                                       @05A*/         
*                                                                               
*   %INCLUDE SYSLIB(CBRSMF) NOSEG;   /* DCLS FOR TYPE 85 RECORD  @05A*/         
*%IFAL87:;                                                    /* @LJC*/         
*  %IF IFAR87 = ''                                            /* @LJC*/         
*      %THEN                                                                    
*     %GOTO IFAL88;                 /*                           @0AA*/         
*                                                                               
*/* THIS STRUCTURE DEFINES THE FORMAT FOR RECORD TYPE 87 WRITTEN @0AA*/         
*/* BY GRS                                                       @0AA*/         
*                                                                               
*   %INCLUDE SYSLIB(ISGYSMFR) NOSEG; /* DCLS FOR TYPE 87 RECORD  @0AA*/         
*%IFAL88:;                                                    /* @LJC*/         
*  %IF IFAR88 = ''                                            /* @LJC*/         
*      %THEN                                                                    
*     %GOTO IFAL89;                 /*                           @L4A*/         
*                                                                               
*/* THIS STRUCTURE DEFINES THE FORMAT FOR RECORD TYPE 88 WRITTEN @L4A*/         
*/* BY THE LOGGER                                                @L4A*/         
*                                                                               
*   %INCLUDE SYSLIB(IXGSMF88) NOSEG; /* DCLS FOR TYPE 88 RECORD  @L4A*/         
*%IFAL89:;                                                    /* @LJC*/         
*%IF IBM_CBGENC = 'YES' %THEN %GOTO IFAL89A;                  /* @LJA*/         
*  %IF IFAR89 = ''                                            /* @LJC*/         
*      %THEN                                                                    
*     %GOTO IFAL90;                 /*                           @02A*/         
*%IFAL89A:;                                                   /* @LJA*/         
*   DECLARE                         /*                               */         
*     1    SMFRCD89 BASED(SMF89PTR) BDY(WORD), /* Type 89 Subtype 1             
*                                      Mapping                   @02A*/         
*                                                                               
*     /***************************************************************/         
*     /*                                                             */         
*     /* Header Section                                              */         
*     /*                                                             */         
*     /***************************************************************/         
*                                                                               
*       3    SMF89LEN FIXED(15),    /* Record Length             @02A*/         
*       3    SMF89SEG CHAR(2),      /* Segment descriptor        @02A*/         
*       3    SMF89FLG CHAR(1),      /* System indicator          @02A*/         
*       3    SMF89RTY FIXED(8),     /* Record type - 89, x'59'   @02A*/         
*       3    SMF89TME CHAR(4),      /* Time, in hundredths of a                 
*                                      second, record was moved to              
*                                      the SMF buffer.           @02A*/         
*       3    SMF89DTE CHAR(4),      /* Date that the record was moved           
*                                      to the SMF buffer, in the form           
*                                      of 0cyydddF, where F is the              
*                                      sign                      @02A*/         
*       3    SMF89SID CHAR(4),      /* System identification (taken             
*                                      from SID parameter)       @02A*/         
*       3    SMF89WID CHAR(4),      /* Subsystem identifier for the             
*                                      SMF address space - 'STC' for            
*                                      Started Task              @02A*/         
*       3    SMF89STP FIXED(15),    /* Record Subtype '1' - Usage               
*                                      Interval.                 @02A*/         
*       3    SMF89SDL FIXED(31),    /* Length of self-defining                  
*                                      section                   @02A*/         
*                                                                               
*     /***************************************************************/         
*     /*                                                             */         
*     /* Self-Defining Section                                       */         
*     /*                                                             */         
*     /***************************************************************/         
*                                                                               
*       3    SMF89SDS,              /* Self-Defining Section     @02A*/         
*         5    SMF89PRO FIXED(31),  /* Offset of Record Product                 
*                                      Section (from start of record            
*                                      including the RDW         @02A*/         
*         5    SMF89PRL FIXED(15),  /* Length of each Record Product            
*                                      Section                   @02A*/         
*         5    SMF89PRN FIXED(15),  /* Number of Record Product                 
*                                      Sections - '1'            @02A*/         
*         5    SMF89SIO FIXED(31),  /* Offset of System ID Section              
*                                      (from start of record                    
*                                      including the RDW         @02A*/         
*         5    SMF89SIL FIXED(15),  /* Length of each System ID                 
*                                      Section                   @02A*/         
*         5    SMF89SIN FIXED(15),  /* Number of System ID Sections -           
*                                      '1'                       @02A*/         
*         5    SMF89UDO FIXED(31),  /* Offset of First Usage/Product            
*                                      Data Section (from start of              
*                                      record, including the RDW).              
*                                                                @02A*/         
*         5    SMF89UDL FIXED(15),  /* Length of each Usage/Product             
*                                      Data Section.             @02A*/         
*         5    SMF89UDN FIXED(15),  /* Number of Usage/Product Data             
*                                      Sections (Min '0').       @02A*/         
*         5    SMF89UDR FIXED(31),  /* Number of Product Data                   
*                                      sections remaining. Will be 0            
*                                      for usage data.           @MXA*/         
*         /* Each field from here to the end of the self defining               
*            section cannot be assumed to be present. Use SMF89SDL to           
*            determine how many of these fields are present      @0EA*/         
*         5    SMF89CNO FIXED(31),  /* Offset of first Product                  
*                                      Intersection Data Section (from          
*                                      start of record, including the           
*                                      RDW).                     @09A*/         
*         5    SMF89CNL FIXED(15),  /* Length of each Product                   
*                                      Intersection Data Section @09A*/         
*         5    SMF89CNN FIXED(15),  /* Number of Product Intersection           
*                                      Data Sections (Min '0').  @09A*/         
*         5    SMF89TRO FIXED(31),  /* Offset of first Tenant Resource          
*                                      Group Data Section (from                 
*                                      start of record, including the           
*                                      RDW).                     @0EA*/         
*         5    SMF89TRL FIXED(15),  /* Length of each Tenant Resource           
*                                      Group Data Section        @0EA*/         
*         5    SMF89TRN FIXED(15),  /* Number of Tenant Resource Group          
*                                      Data Sections (Min '0').  @0EA*/         
*         5    SMF89TCO FIXED(31),  /* Offset of first Tenant Resource          
*                                      Group Intersection Data Section          
*                                      (from start of record, including         
*                                      the RDW).                 @0EA*/         
*         5    SMF89TCL FIXED(15),  /* Length of each Tenant Resource           
*                                      Group Intersection Data Section          
*                                                                @0EA*/         
*         5    SMF89TCN FIXED(15),  /* Number of Tenant Resource Group          
*                                      Intersection Data Sections               
*                                      (Min '0').                @0EA*/         
*                                                                               
*     /***************************************************************/         
*     /*                                                             */         
*     /* SMF 89 record subtypes                                      */         
*     /*                                                             */         
*     /***************************************************************/         
*                                                                               
*     SMF89STPusage CONSTANT(1),    /* SMF 89 measured usage     @M3A*/         
*     SMF89STPprodreg CONSTANT(2),  /* SMF 89 product registration              
*                                                                @M3A*/         
*                                                                               
*     /***************************************************************/         
*     /*                                                             */         
*     /* Product Section                                             */         
*     /*                                                             */         
*     /***************************************************************/         
*                                                                               
*     1    SMF89PR  BASED(ADDR(SMFRCD89)+SMF89PRO) BDY(WORD), /* @02A*/         
*       3    SMF89PNM CHAR(8),      /* Record Product Name - 'SMF'              
*                                                                @02A*/         
*       3    SMF89RVN FIXED(31),    /* Record Version Number - '01'             
*                                                                @02A*/         
*       3    SMF89OSL CHAR(8),      /* MVS System Level (ie.                    
*                                      'SP4.3.0')                @02A*/         
*       3    SMF89IST FIXED(32),    /* Reporting Interval START Time            
*                                      (in hundredths of a second). 0           
*                                      for non-Interval records  @02A*/         
*       3    SMF89ISD CHAR(4),      /* Reporting Interval START Date            
*                                      in the form of 0cyydddF, where           
*                                      F is the sign. 0 for                     
*                                      non-Interval records      @02A*/         
*       3    SMF89IET FIXED(32),    /* Reporting Interval END Time              
*                                      (in hundredths of a second). 0           
*                                      for non-Interval records  @02A*/         
*       3    SMF89IED CHAR(4),      /* Reporting Interval END Date in           
*                                      the form of 0cyydddF, where F            
*                                      is the sign 0 for non-Interval           
*                                      records                   @02A*/         
*       3    SMF89PFL BIT(8),       /* Flags                     @H1A*/         
*         5  SMF89P1A BIT(1),       /* P001 Active               @H1A*/         
*         5  SMF89ZNA BIT(1),       /* zNALC                     @08A*/         
*         5  SMF89LGA BIT(1),       /* Contains information associated          
*                                      with a potential future                  
*                                      function, no further details             
*                                      are available at this time               
*                                                                @L7A*/         
*         5  SMF89SolutionEdition BIT(1),  /*                    @LCA*/         
*         5  SMF89_zCBP Bit(1),     /* When bit is on, SMF89 fields             
*                                      with zCBP names and aliases with         
*                                      corresponding zAAP names contain         
*                                      data about zCBP processors.              
*                                      When bit is off, SMF89 fields            
*                                      with zCBP names and aliases with         
*                                      corresponding zAAP names contain         
*                                      data about zAAP processors.              
*                                                                @LHA*/         
*       3    SMF89CR  BIT(8),       /* Contains information associated          
*                                      with a potential future                  
*                                      function, no further details             
*                                      are available at this time               
*                                                                @L7A*/         
*       3    SMF89ZEP FIXED(8),     /* Contains information associated          
*                                      with a potential future                  
*                                      function, no further details             
*                                      are available at this time               
*                                                                @L7A*/         
*       3    *        CHAR(1),      /* Reserved for alignment of                
*                                      SMF89HOF                  @L7C*/         
*       3    SMF89HOF CHAR(8),      /* Hypervisor date/time offset              
*                                      in STCK format. This field               
*                                      contains the sysplex timer               
*                                      offset value, when                       
*                                      present.                  @07A*/         
*       3    SMF89DTO CHAR(8),      /* Local date/time offset,                  
*                                      copied from CVTLDTO       @07A*/         
*                                                                               
*       3    SMF89_CoreMode_CP   FIXED(15) Unsigned, /* The number of           
*                                      CPUs that are active on a                
*                                      CP core.                  @0BC*/         
*       3    SMF89_CoreMode_zCBP FIXED(15) Unsigned, /* The number of           
*                                      CPUs that are active on a                
*                                      zCBP core.                @LHA*/         
*         5  SMF89_CoreMode_zAAP FIXED(15) Unsigned, /* The number of           
*                                      CPUs that are active on a                
*                                      zAAP core.                @0BC*/         
*       3    SMF89_CoreMode_zIIP FIXED(15) Unsigned, /* The number of           
*                                      CPUs that are active on a                
*                                      zIIP core.                @0BC*/         
*       3    * CHAR(2),                       /*                 @LCA*/         
*                                                                               
*     /***************************************************************/         
*     /*                                                             */         
*     /* System ID Section                                           */         
*     /*                                                             */         
*     /***************************************************************/         
*                                                                               
*     1    SMF89SI  BASED(ADDR(SMFRCD89)+SMF89SIO) BDY(WORD), /* @02A*/         
*       3    SMF89SYN CHAR(8),      /* MVS System Name (taken from              
*                                      SYSNAME in IEASYSxx)      @02A*/         
*       3    SMF89UST FIXED(32),    /* Usage Data Interval START Time           
*                                      (in hundredths of a second). 0           
*                                      for non-Interval records  @02A*/         
*       3    SMF89USD CHAR(4),      /* Usage Data Interval START Date           
*                                      in the form of 0cyydddF, where           
*                                      F is the sign. 0 for                     
*                                      non-Interval records      @02A*/         
*       3    SMF89UET FIXED(32),    /* Usage Data Interval END Time             
*                                      (in hundredths of a second). 0           
*                                      for non-Interval records  @02A*/         
*       3    SMF89UED CHAR(4),      /* Usage Data Interval END Date             
*                                      in the form of 0cyydddF, where           
*                                      F is the sign 0 for                      
*                                      non-Interval records      @02A*/         
*       3    SMF89CSU FIXED(32),    /* CPU Service Coefficient in               
*                                      affect at the time that the              
*                                      record was generated. 0 for              
*                                      non-Interval records      @02A*/         
*       3    SMF89SRU FIXED(32),    /* SRB Service Coefficient in               
*                                      affect at the time that the              
*                                      record was generated. 0 for              
*                                      non-Interval records      @02A*/         
*       3    SMF89CMN CHAR(2),      /* CPU Model Number (Packed) @02A*/         
*       3    SMF89CVN CHAR(1),      /* CPU Version Number        @02A*/         
*       3    SMF89LPI CHAR(1),      /* LPAR Partition ID         @02A*/         
*         5    SMF89LP1 BIT(4),     /* 1st nibble - flags        @P4C*/         
*           7  SMF89LPV BIT(1),     /* SMF89LP2 LPAR ID is valid @M9C*/         
*           7  SMF89LPM BIT(1),     /* SMF89LP3 LPAR ID is valid @M9A*/         
*         5    SMF89LP2 BIT(4),     /* LPAR ID if not greater than 15           
*                                                                @M9C*/         
*       3    SMF89SER CHAR(3),      /* CPU Serial Number (Packed)               
*                                                                @02A*/         
*       3    SMF89LP3 FIXED(8),     /* LPAR ID                   @M9A*/         
*       3    SMF89RPP FIXED(32),    /* CPU Relative Processing Power            
*                                      Indicator                 @02A*/         
*       3    SMF89SPN CHAR(8),      /* MVS SYSPLEX Name          @02A*/         
*       3    SMF89CPT CHAR(6),      /* CPC Type Number           @02A*/         
*       3    SMF89CPM CHAR(3),      /* CPC Model Number          @02A*/         
*       3    SMF89CPS CHAR(12),     /* CPC Sequence Number       @02A*/         
*       3    SMF89SIF BIT(8),       /* System ID Flags           @08A*/         
*           7  SMF89LNV BIT(1),     /* SMF89LPN LPAR name valid  @08A*/         
*           7  SMF89LCR BIT(1),     /* On when this is the last                 
*                                      record in a set of continuation          
*                                      records for interval      @09A*/         
*       3    *        CHAR(2),      /* Reserved                  @08C*/         
*       3    SMF89S11,              /* SYSIB 1.1 Information     @06A*/         
*         5  SMF89MNF CHAR(16),     /* V1-CPC Manufacturer       @06A*/         
*         5  SMF89TID CHAR(4),      /* V1-CPC Type               @06A*/         
*         5  SMF89MDL CHAR(16),     /* V1-CPC Model              @06A*/         
*         5  SMF89SQC CHAR(16),     /* V1-CPC Sequence Code      @06A*/         
*         5  SMF89POM CHAR(4),   /* V1-CPC Plant of Manufacturer @06A*/         
*       3    SMF89S22,              /* SYSIB 2.2 Information     @06A*/         
*         5  SMF89CPC FIXED(32),    /* CPU Capability            @06A*/         
*         5  SMF89CCC FIXED(16),    /* Configured CPU Count      @06A*/         
*         5  SMF89SCC FIXED(16),    /* Standby CPU Count         @06A*/         
*         5  SMF89MAF CHAR(30) BDY(HWORD), /*                    @06A*/         
*            7 SMF89AFE(15) FIXED(16),  /* Array of                             
*                                      Multiprocessing CPU Capability           
*                                      Adjustment Factors        @06A*/         
*       3    SMF89LPN CHAR(8),      /* When SYSIB 2.2.2                         
*                      is valid when returned by the STSI instruction           
*                      (such as when running under z/VM), this is               
*                      the LPAR name. Bit SMF89LPV is on when the               
*                      field is valid. Since this field                         
*                      field was added in service, avoid                        
*                      looking at it unless SMF89LPV is on.      @08A*/         
*       3    SMF89_Capacity_Change_Cnt FIXED(16), /* The number of              
*                                      processor capacity changes that          
*                                      occurred since the previous              
*                                      interval or event interval. This         
*                                      number will be greater than 1            
*                                      when the number of processor             
*                                      capacity changes exceeded the            
*                                      number specified in the                  
*                                      MAXEVENTINTRECS parmlib                  
*                                      option                    @L8A*/         
*       3    SMF89_RCTPCPUA_Actual FIXED(31), /* Physical CPU                   
*                                      adjustment factor (i.e.                  
*                                      adjustment factor for                    
*                                      converting CPU time to                   
*                                      equivalent service in basic-             
*                                      mode with all processors                 
*                                      online). Based on Model                  
*                                      Capacity Rating           @L8A*/         
*       3    SMF89_RCTPCPUA_Nominal FIXED(31), /* Physical CPU                  
*                                      adjustment factor for collecting         
*                                      CPU time to equivalent service           
*                                      in basic-mode with all                   
*                                      processors online). Based on             
*                                      Model Capacity Rating     @L8A*/         
*       3    SMF89_RCTPCPUA_Scaling_Factor FIXED(31), /* Scaling                
*                                      factor for                               
*                                      SMF89_RCTPCPUA_Actual  and               
*                                      SMF89_RCTPCPUA_Nominal    @L8A*/         
*       3    SMF89_Capacity_Adjustment_Ind FIXED(8), /* When zero,              
*                                      indication is not reported.              
*                                      When in the range 1-99, some             
*                                      amount of reduction is                   
*                                      indicated.  When 100, the                
*                                      machine is operating at its              
*                                      normal capacity. Primary CPUs            
*                                      and all secondary-type CPUs are          
*                                      similarly affected        @L8A*/         
*       3    SMF89_Capacity_Change_Rsn FIXED(8), /* Indicates the               
*                                      reason which is associated with          
*                                      the present value contained in           
*                                      SMF89_Capacity_Adjustment_Ind.           
*                                      The bit values of this field             
*                                      correspond to those described in         
*                                      RMCTZ_Capacity_Adjustment_               
*                                      Indication, of the IRARMCTZ              
*                                      mapping macro (see Data Areas).          
*                                                                @P7C*/         
*       3    SMF89_Capacity_Flags CHAR(1), /* Processor capacity                
*                                             flags              @L8A*/         
*          5 SMF89_Event_Driven_Interval_Rec  BIT(1), /* When on,               
*                                      indicates that the current               
*                                      record was generated as a                
*                                      result of an event, rather than          
*                                      as a result of a standard                
*                                      interval expiration based on             
*                                      time                      @L8A*/         
*          5 SMF89_Capacity_Data_err BIT(1), /* When on, indicates              
*                                      error occurred while collecting          
*                                      the processor capacity data,             
*                                      therefore the following fields           
*                                      are unreliable:                          
*                                      SMF89_RCTPCPUA_Actual                    
*                                      SMF89_RCTPCPUA_Nominal                   
*                                      SMF89_RCTPCPUA_scaling_factor            
*                                      SMF89_Capacity_Adjustment_Ind            
*                                      SMF89_Capacity_Change_Rsn @L8A*/         
*          5 SMF89_PCD_Rsvd_Exists   BIT(1), /* This bit is set in              
*                                      records generated on systems             
*                                      running z/OS 1.7 through                 
*                                      z/OS 1.9. It will remain off in          
*                                      records generated at systems             
*                                      running z/OS 1.10 and                    
*                                      above.                    @ZGA*/         
*       3    * CHAR(1),             /* Reserved                  @09A*/         
*       3    SMF89ZNF FIXED(31),    /* zCBP or zAAP Normalization               
*                                      Factor for zCBP or zAAP service          
*                                      time.                     @LHA*/         
*       3    SMF89SNF FIXED(31),    /* zIIP Normalization Factor                
*                                      for zIIP service time.    @09A*/         
*       3    SMF89SEQ FIXED(15),    /* Record sequence number when              
*                                      multiple records are written             
*                                      for the interval          @09A*/         
*       3   SMF89SI_End_V1 CHAR(0), /* SMF89SI_Len_V1 is the length             
*                                      to here                   @0IA*/         
*       3   SMF89SolutionID CHAR(64),/* The Solution ID from the SOLUT=         
*                                      system parameter. 0's if SOLUT=          
*                                      was not used              @0IA*/         
*       3   SMF89SI_End_V2 CHAR(0), /* SMF89SI_Len_V2 is the length             
*                                      to here                   @0IA*/         
* SMF89SI_Len_V1 Constant(Offset(SMF89SI.SMF89SI_End_V1)),    /* @0IA*/         
* SMF89SI_Len_V2 Constant(Offset(SMF89SI.SMF89SI_End_V2)),    /* @0IA*/         
* SMF89SI_Len_Max Constant(SMF89SI_Len_V2),  /* This value might                
*                              change upon any recompile after                  
*                              installation of service or a release.            
*                              Do not use this constant unless that             
*                              is OK.                            @0IA*/         
*                                                                               
*     /***************************************************************/         
*     /*                                                             */         
*     /* Usage Data Section                                          */         
*     /*                                                             */         
*     /***************************************************************/         
*                                                                               
*     1    SMF89UD  BASED(ADDR(SMFRCD89)+SMF89UDO) BDY(WORD), /* @02A*/         
*       3    SMF89UPO CHAR(16),     /* Product Owner or Vendor Name             
*                                      (obtained PRODOWNER option ofA           
*                                      IFAUSAGE macro)           @02A*/         
*       3    SMF89UPN CHAR(16),     /* Product Name (obtained                   
*                                      PRODNAME option of IFAUSAGE              
*                                      macro)                    @02A*/         
*       3    SMF89UPV CHAR(8),      /* Product Version (obtained                
*                                      PRODVERS option of IFAUSAGE              
*                                      macro)                    @02A*/         
*       3    SMF89UPQ CHAR(8),      /* Product Qualifier (obtained              
*                                      PRODQUAL option of IFAUSAGE              
*                                      macro)                    @02A*/         
*       3    SMF89UPI CHAR(8),      /* Product ID (obtained PRODID              
*                                      option of IFAUSAGE macro) @02A*/         
*       3    SMF89UCT CHAR(8),      /* Product TCB Time (in hundredths          
*                                      of a second - floating point)            
*                                                                @02A*/         
*       3    SMF89USR CHAR(8),      /* Product SRB Time (in hundredths          
*                                      of a second - floating point)            
*                                                                @02A*/         
*       3    SMF89UFG CHAR(1),      /* Usage Entry Flags         @02A*/         
*         5    SMF89UUN BIT(1),     /* UNAUTHORIZED REGISTER                    
*                                      Requested                 @02A*/         
*         5    SMF89UNU BIT(1),     /* Ineligible for measured usage            
*                                                                @MXA*/         
*         5    SMF89UUS BIT(1),     /* UNAUTHORIZED REGISTER with SAF           
*                                      authorized UNAUTHSERV=LEVEL1             
*                                      requested                 @LIA*/         
*         5    *        BIT(5),     /* Reserved                  @LIC*/         
*       3    SMF89UF2 CHAR(1),      /* Usage Entry Flags Byte 2  @09A*/         
*         5    SMF89HCS BIT(1),     /* This product has product                 
*                                      intersection time sections               
*                                                                @09A*/         
*         5    SMF89AFS BIT(1),     /* All ADDRSP registrations of              
*                                      this product are the first               
*                                      registrations in their                   
*                                      respective address spaces @09A*/         
*         5    SMF89TSH BIT(1),     /* An ADDRSP registration of this           
*                                      product registered or                    
*                                      deregisters while active                 
*                                      TASK registrations where present         
*                                      in one or more address spaces            
*                                                                @09A*/         
*         5    SMF89PLV BIT(1),     /* All ADDRSP registrations of              
*                                      this product where at a                  
*                                      service level that supports              
*                                      product intersection time @09A*/         
*         5    SMF89HTR BIT(1),     /* This product has Tenant Resource         
*                                      Group sections. Check SMF89TRO           
*                                      for the offset to the first TRG          
*                                      section. Then check each TRG in          
*                                      the section for an exact match           
*                                      of the product information to            
*                                      find the corresponding TRG               
*                                                                @0EC*/         
*         5    *        BIT(3),     /* Reserved                  @0EC*/         
*       3 SMF89_BOOSTINFO BIT(8),   /* Boost information         @0FA*/         
*        4 SMF89_BI BIT(8),                                   /* @0FA*/         
*         5 SMF89_zIIPBoost_Active BIT(1), /* zIIP boost was active             
*                              at some point within the interval @0FA*/         
*         5 SMF89_SpeedBoost_Active BIT(1), /* Speed boost was                  
*                              active at some point within the                  
*                              interval                          @0FA*/         
*         5 * Bit(3),                         /* Reserved        @0FA*/         
*         5 SMF89_BoostClass Bit(3),    /* See SMF89_BoostClass_xxx             
*                              equates                           @0FA*/         
*       3    SMF89URT FIXED(8),     /* Data Type of value in SMF89URD           
*                                      (as specified by the FORMAT              
*                                      option on the FUNCTIONDATA               
*                                      Request of the IFAUSAGE                  
*                                      macro).                   @02A*/         
*       3    SMF89URD CHAR(8),      /* Product 'Specific' Resource              
*                                      Data (specified by the DATA              
*                                      option on the FUNCTIONDATA               
*                                      Request of the IFAUSAGE                  
*                                      macro).                   @02A*/         
*       3    SMF89UZT CHAR(8),      /* Product Offload Engine Time              
*                                      (in hundredths of a second -             
*                                      floating point)           @09A*/         
*       3    SMF89CountASTrad char(4), /* Count of active address               
*                                      spaces in traditional (non-TRG)          
*                                      sub-capacity workload                    
*                                      environment               @PDM*/         
*       3    SMF89CountASTRG  char(4), /* Count of active address               
*                                      spaces in TRG workload                   
*                                      environment               @PDM*/         
*                                                                               
* /* Boost Class equates. "AND" the byte with this mask and compare             
*    the result to the equate if you want to check the class     @0FA*/         
*     SMF89_BoostClass_Mask Bit(8) Constant('07'x),           /* @0FA*/         
*     SMF89_BoostClass_IPL Bit(3) Constant('001'b),           /* @0FA*/         
*     SMF89_BoostClass_ShutDown Bit(3) Constant('010'b),      /* @0FA*/         
*     SMF89_BoostClass_RP Bit(3) Constant('011'b),            /* @0GA*/         
*     /***************************************************************/         
*     /*                                                             */         
*     /* Product Intersection Time Data Section                      */         
*     /*                                                         @09A*/         
*     /***************************************************************/         
*                                                                               
*     1    SMF89CN  BASED(ADDR(SMFRCD89)+SMF89CNO) BDY(WORD), /* @09A*/         
*       3    SMF89CNP,              /* Container Product         @09A*/         
*         5    SMF89CPO CHAR(16),   /* Product Owner or Vendor Name             
*                                      (obtained PRODOWNER option ofA           
*                                      IFAUSAGE macro)           @09A*/         
*         5    SMF89CPN CHAR(16),   /* Product Name (obtained                   
*                                      PRODNAME option of IFAUSAGE              
*                                      macro)                    @09A*/         
*         5    SMF89CPV CHAR(8),    /* Product Version (obtained                
*                                      PRODVERS option of IFAUSAGE              
*                                      macro)                    @09A*/         
*         5    SMF89CPQ CHAR(8),    /* Product Qualifier (obtained              
*                                      PRODQUAL option of IFAUSAGE              
*                                      macro)                    @09A*/         
*         5    SMF89CPI CHAR(8),    /* Product ID (obtained PRODID              
*                                      option of IFAUSAGE macro) @09A*/         
*       3    SMF89CNI,              /* Intersect Product         @09A*/         
*         5    SMF89IPO CHAR(16),   /* Product Owner or Vendor Name             
*                                      (obtained PRODOWNER option ofA           
*                                      IFAUSAGE macro)           @09A*/         
*         5    SMF89IPN CHAR(16),   /* Product Name (obtained                   
*                                      PRODNAME option of IFAUSAGE              
*                                      macro)                    @09A*/         
*         5    SMF89IPV CHAR(8),    /* Product Version (obtained                
*                                      PRODVERS option of IFAUSAGE              
*                                      macro)                    @09A*/         
*         5    SMF89IPQ CHAR(8),    /* Product Qualifier (obtained              
*                                      PRODQUAL option of IFAUSAGE              
*                                      macro)                    @09A*/         
*         5    SMF89IPI CHAR(8),    /* Product ID (obtained PRODID              
*                                      option of IFAUSAGE macro) @09A*/         
*       3    SMF89CFG CHAR(1),      /* Usage Entry Flags         @09A*/         
*         5    SMF89CUC BIT(1),     /* UNAUTHORIZED REGISTER                    
*                                      Requested on container product           
*                                                                @09A*/         
*         5    SMF89CUP BIT(1),     /* UNAUTHORIZED REGISTER                    
*                                      Requested on intersecting                
*                                      product                   @09A*/         
*         5    SMF89CFC BIT(1),     /* Some data came from a function           
*                                      being/functionend                        
*                                      level register            @09A*/         
*         5    SMF89CTC BIT(1),     /* Some data came from a task               
*                                      level register            @09A*/         
*         5    SMF89CGO BIT(1),     /* All function based intersections         
*                                      used the FBFE keyword     @09A*/         
*         5    SMF89CHTR BIT(1),    /* This intersection has Tenant             
*                                      Resource Group Sections                  
*                                      Check SMF89TCO                           
*                                      for the offset to the first TRG          
*                                      Intersection section.                    
*                                      Then check each of those in              
*                                      the section for an exact match           
*                                      of the product information to            
*                                      find the corresponding section           
*                                                                @0EC*/         
*       3    * CHAR(7),             /* For alignment             @09A*/         
*       3    SMF89CCT CHAR(8),      /* Product Intersect TCB time               
*                                      (hundredths of a second -                
*                                       floating point)          @09A*/         
*       3    SMF89CZT CHAR(8);      /* Product Intersection Offload             
*                                      Engine Time (hundredths of a             
*                                      second - floating point)  @LIC*/         
*     /***************************************************************/         
*     /*                                                             */         
*     /* Tenant resource group Data Section                          */         
*     /*                                                         @0EA*/         
*     /***************************************************************/         
*   DECLARE                                                                     
*     1    SMF89TRG  BASED(ADDR(SMFRCD89)+SMF89TRO) BDY(WORD),/* @0EA*/         
*       3    SMF89TRP,              /* Product Identifying Info  @0EA*/         
*         5    SMF89TPO CHAR(16),   /* Product Owner or Vendor Name             
*                                      (obtained PRODOWNER option of            
*                                      IFAUSAGE macro)           @0EA*/         
*         5    SMF89TPN CHAR(16),   /* Product Name (obtained                   
*                                      PRODNAME option of IFAUSAGE              
*                                      macro)                    @0EA*/         
*         5    SMF89TPV CHAR(8),    /* Product Version (obtained                
*                                      PRODVERS option of IFAUSAGE              
*                                      macro)                    @0EA*/         
*         5    SMF89TPQ CHAR(8),    /* Product Qualifier (obtained              
*                                      PRODQUAL option of IFAUSAGE              
*                                      macro)                    @0EA*/         
*         5    SMF89TPI CHAR(8),    /* Product ID (obtained PRODID              
*                                      option of IFAUSAGE macro) @0EA*/         
*       3    SMF89TRG_Name CHAR(8), /* Tenant resource group     @0EA*/         
*       3    SMF89TCT CHAR(8),      /* Tenant resource group TCB time           
*                                      (hundredths of a second -                
*                                       floating point)          @0EA*/         
*       3    SMF89TSR CHAR(8),      /* TRG SRB Time (in hundredths              
*                                      of a second - floating point)            
*                                                                @0EA*/         
*       3    SMF89TZT CHAR(8),      /* TRG Offload                              
*                                      Engine Time (hundredths of a             
*                                      second - floating point)  @0EA*/         
*       3    SMF89TRGData CHAR(8),  /* Product Specific Resource                
*                                      Data (specified by the DATA              
*                                      option on the FUNCTIONDATA               
*                                      Request of the IFAUSAGE                  
*                                      macro).                   @MAA*/         
*       3    SMF89TRGDataType FIXED(8), /* Data Type of value in                
*                                      SMF89TRGData (as specified by            
*                                      the FORMAT option on the                 
*                                      FUNCTIONDATA Request of the              
*                                      IFAUSAGE macro).  Values:                
*                                      0 - No data specified                    
*                                      1 - CPU Time in long floating            
*                                          point (in hundredths of a            
*                                          second)                              
*                                      2 - Binary (64-bit)                      
*                                      3 - Long floating point   @MAA*/         
*     /***************************************************************/         
*     /*                                                             */         
*     /* Product Intersection Time TRG Data Section                  */         
*     /*                                                         @0EA*/         
*     /***************************************************************/         
*                                                                               
*     1    SMF89TC  BASED(ADDR(SMFRCD89)+SMF89TCO) BDY(WORD), /* @0EA*/         
*       3    SMF89TCCP,              /* Container Product        @0EA*/         
*         5    SMF89TCPO CHAR(16),   /* Product Owner or Vendor Name            
*                                      (obtained PRODOWNER option of            
*                                      IFAUSAGE macro)           @0EA*/         
*         5    SMF89TCPN CHAR(16),   /* Product Name (obtained                  
*                                      PRODNAME option of IFAUSAGE              
*                                      macro)                    @0EA*/         
*         5    SMF89TCPV CHAR(8),    /* Product Version (obtained               
*                                      PRODVERS option of IFAUSAGE              
*                                      macro)                    @0EA*/         
*         5    SMF89TCPQ CHAR(8),    /* Product Qualifier (obtained             
*                                      PRODQUAL option of IFAUSAGE              
*                                      macro)                    @0EA*/         
*         5    SMF89TCPI CHAR(8),    /* Product ID (obtained PRODID             
*                                      option of IFAUSAGE macro) @0EA*/         
*       3    SMF89TCIP,             /* Intersect Product         @0EA*/         
*         5    SMF89TIPO CHAR(16),   /* Product Owner or Vendor Name            
*                                      (obtained PRODOWNER option of            
*                                      IFAUSAGE macro)           @0EA*/         
*         5    SMF89TIPN CHAR(16),   /* Product Name (obtained                  
*                                      PRODNAME option of IFAUSAGE              
*                                      macro)                    @0EA*/         
*         5    SMF89TIPV CHAR(8),    /* Product Version (obtained               
*                                      PRODVERS option of IFAUSAGE              
*                                      macro)                    @0EA*/         
*         5    SMF89TIPQ CHAR(8),    /* Product Qualifier (obtained             
*                                      PRODQUAL option of IFAUSAGE              
*                                      macro)                    @0EA*/         
*         5    SMF89TIPI CHAR(8),    /* Product ID (obtained PRODID             
*                                      option of IFAUSAGE macro) @0EA*/         
*       3    SMF89T_TRG_Name CHAR(8), /* Tenant resource group   @0EA*/         
*       3    SMF89TCFG CHAR(1),     /* Usage Entry Flags         @0EA*/         
*         5    SMF89TCUC BIT(1),    /* UNAUTHORIZED REGISTER                    
*                                      Requested on container product           
*                                                                @0EA*/         
*         5    SMF89TCUP BIT(1),     /* UNAUTHORIZED REGISTER                   
*                                      Requested on intersecting                
*                                      product                   @0EA*/         
*       3    * char(7),             /* Reserved for alignment    @0EA*/         
*       3    SMF89TCCT CHAR(8),      /* Product Intersect TCB time              
*                                      (hundredths of a second -                
*                                       floating point)          @0EA*/         
*       3    SMF89TCZT CHAR(8);      /* Product Intersection Offload            
*                                      Engine Time (hundredths of a             
*                                      second - floating point)  @0EA*/         
*                                                                               
*   %IF SYSVERSION = '' %THEN                                                   
*     %GOTO NOPRODED;               /*                           @MXA*/         
*                                                                               
*   /*****************************************************************/         
*   /*                                                               */         
*   /* Product enable/disable section                                */         
*   /*                                                               */         
*   /*****************************************************************/         
*                                                                               
*   DECLARE                                                                     
*     1    SMF89T2  BASED(ADDR(SMFRCD89)+SMF89UDO) BDY(WORD), /* @MXA*/         
*      2    SMF89T2EI,              /* This matches EdaaeInfo in                
*                                      DSECT EDAA in macro IFAEDIDF             
*                                                                @MxA*/         
*       3    SMF89T2ProdOwner CHAR(16), /* Product Owner or Vendor              
*                                      Name (from prodowner parameter           
*                                      of IFAEDREG or OWNER option of           
*                                      PRODUCT statement of IFAPRDxx)           
*                                                                @MXA*/         
*       3    SMF89T2ProdName CHAR(16), /* Product name (from prodname           
*                                      parameter of IFAEDREG or NAME            
*                                      option of PRODUCT statement of           
*                                      IFAPRDxx)                 @MXA*/         
*       3    SMF89T2FeatureName CHAR(16), /* Feature name (from                 
*                                      featurename parameter of                 
*                                      IFAEDREG or FEATURENAME option           
*                                      of PRODUCT statement of                  
*                                      IFAPRDxx)                 @MXA*/         
*       3    SMF89T2ProdVers CHAR(2), /* Product version (from                  
*                                      prodvers parameter of IFAEDREG           
*                                      or VERSION option of PRODUCT             
*                                      statement of IFAPRDxx)    @MXA*/         
*       3    SMF89T2ProdRel CHAR(2), /* Product release (from prodrel           
*                                      parameter of IFAEDREG or                 
*                                      RELEASE option of PRODUCT                
*                                      statement of IFAPRDxx)    @MXA*/         
*       3    SMF89T2ProdMod CHAR(2), /* Product modification level              
*                                      (from prodmod parameter of               
*                                      IFAEDREG or MOD option of                
*                                      PRODUCT statement of IFAPRDxx)           
*                                                                @MXA*/         
*       3    SMF89T2ProdID CHAR(8), /* Product ID (from prodowner               
*                                      parameter of IFAEDREG or OWNER           
*                                      option of PRODUCT statement of           
*                                      IFAPRDxx)                 @MXA*/         
*      2    *,                      /*                           @MXA*/         
*       3    SMF89T2Flags BIT(8),   /* Flags                     @MXA*/         
*         5    SMF89T2NotDefined BIT(1), /* Entry is not defined @MXA*/         
*         5    SMF89T2Enabled BIT(1), /* State is enabled        @MXA*/         
*         5    *        BIT(2),     /* Reserved                  @MXA*/         
*         5    SMF89T2RegEntry BIT(1), /* Register entry         @MXA*/         
*         5    SMF89T2StateEntry BIT(1), /* State entry          @MXA*/         
*         5    SMF89T2NoReport BIT(1), /* "No Report" - registered              
*                                      with IFAEDREG_TYPE_NOREPORT              
*                                                                @MXA*/         
*         5    SMF89T2LicensedUnderProd BIT(1), /* Registered with IF           
*                                      AEDREG_TYPE_LicensedUnderProd            
*                                                                @MXA*/         
*       3 SMF89T2_BOOSTINFO BIT(8), /* Boost information         @0FA*/         
*        4 SMF89T2_BI BIT(8),                                 /* @0FA*/         
*         6 SMF89T2_zIIPBoost_Active BIT(1), /* zIIP boost was                  
*                              active at some point within the                  
*                              interval                          @0FA*/         
*         6 SMF89T2_SpeedBoost_Active BIT(1), /* Speed boost was                
*                              active at some point within the                  
*                              interval                          @0FA*/         
*         6 * Bit(3),                         /* Reserved        @0FA*/         
*         6 SMF89T2_BoostClass Bit(3),  /* See SMF89T2_BoostClass_xxx           
*                              equates                           @0FA*/         
*      2    SMF89T2NumInstances FIXED(31), /* Maximum number of                 
*                                      instances of registrations of            
*                                      this product              @MXA*/         
*      2    SMF89T2NumCurrentInstances FIXED(31), /* Current number of          
*                                      instances of registrations of            
*                                      this product. This field                 
*                                      cannot be assumed to be present.         
*                                      Check SMF89UDL to see if this            
*                                      field is present.         @0EA*/         
*      2    SMF89T2NumInstancesinTrgs fixed(31), /* Number of instances         
*                                      of registrations of this product         
*                                      that are currently associated            
*                                      with TRGs. Check the SMF89T2TRG          
*                                      section for details. This field          
*                                      cannot be assumed to be present.         
*                                      Check SMF89UDL to see if this            
*                                      field is present.         @0EA*/         
*      2    SMF89T2NumNewRegistrations FIXED(31), /* Number of                  
*                                      instances of registrations of            
*                                      this product since the last              
*                                      SMF89 Record. This field                 
*                                      cannot be assumed to be present.         
*                                      Check SMF89UDL to see if this            
*                                      field is present.         @0EA*/         
*      2    SMF89T2NumNewTrgRegistrations FIXED(31), /* Number of               
*                                      instances of registrations of            
*                                      this product since the last              
*                                      SMF89 Record that were a part            
*                                      of TRGs. This field                      
*                                      cannot be assumed to be present.         
*                                      Check SMF89UDL to see if this            
*                                      field is present.         @0EA*/         
*      2    *        CHAR(0);       /*                           @MXA*/         
*                                                                               
* /* Boost Class equates. "AND" the byte with this mask and compare             
*    the result to the equate if you want to check the class     @0FA*/         
* Dcl SMF89T2_BoostClass_Mask Bit(8) Constant('07'x);         /* @0FA*/         
* Dcl SMF89T2_BoostClass_IPL Bit(3) Constant('001'b);         /* @0FA*/         
* Dcl SMF89T2_BoostClass_ShutDown Bit(3) Constant('010'b);    /* @0FA*/         
* Dcl SMF89T2_BoostClass_RP Bit(3) Constant('011'b);          /* @0GA*/         
*   /*****************************************************************/         
*   /*                                                               */         
*   /* Product enable/disable TRG Section                        @0EA*/         
*   /*                                                               */         
*   /*****************************************************************/         
*                                                                               
*   DECLARE                                                                     
*     1    SMF89T2TRG  BASED(ADDR(SMFRCD89)+SMF89TRO) BDY(WORD),                
*      2    SMF89T2TRG_PRODINFO,    /* This matches EdaaeInfo in                
*                                      DSECT EDAA in macro IFAEDIDF             
*                                                                @0EA*/         
*       3    SMF89T2TRGProdOwner CHAR(16), /* Product Owner or Vendor           
*                                      Name (from prodowner parameter           
*                                      of IFAEDREG or OWNER option of           
*                                      PRODUCT statement of IFAPRDxx)           
*                                                                @0EA*/         
*       3    SMF89T2TRGProdName CHAR(16),/* Product name (from prodname         
*                                      parameter of IFAEDREG or NAME            
*                                      option of PRODUCT statement of           
*                                      IFAPRDxx)                 @0EA*/         
*       3    SMF89T2TRGFeatureName CHAR(16), /* Feature name (from              
*                                      featurename parameter of                 
*                                      IFAEDREG or FEATURENAME option           
*                                      of PRODUCT statement of                  
*                                      IFAPRDxx)                 @0EA*/         
*       3    SMF89T2TRGProdVers CHAR(2), /* Product version (from               
*                                      prodvers parameter of IFAEDREG           
*                                      or VERSION option of PRODUCT             
*                                      statement of IFAPRDxx)    @0EA*/         
*       3    SMF89T2TRGProdRel CHAR(2),/* Product release (from prodrel         
*                                      parameter of IFAEDREG or                 
*                                      RELEASE option of PRODUCT                
*                                      statement of IFAPRDxx)    @0EA*/         
*       3    SMF89T2TRGProdMod CHAR(2), /* Product modification level           
*                                      (from prodmod parameter of               
*                                      IFAEDREG or MOD option of                
*                                      PRODUCT statement of IFAPRDxx)           
*                                                                @0EA*/         
*       3    SMF89T2TRGProdID CHAR(8), /* Product ID (from prodowner            
*                                      parameter of IFAEDREG or OWNER           
*                                      option of PRODUCT statement of           
*                                      IFAPRDxx)                 @0EA*/         
*      2    * char(2),              /* Reserved                  @0EA*/         
*      2    SMF89T2TrgName char(8), /* Tenant Resource Group name               
*                                                                @0EA*/         
*      2    SMF89T2TrgNumInstances FIXED(31), /* Current number of              
*                                      registration of this product             
*                                      currently in this TRG     @0EA*/         
*      2    *        CHAR(0);       /*                           @MXA*/         
*%NOPRODED:                                                                     
*   ;                               /*                           @MxA*/         
*%IFAL90:;                                                    /* @LJC*/         
*%IF IBM_CBGENC = 'YES' %THEN %GOTO IFAL90A;                  /* @LJA*/         
*  %IF IFAR90 = ''                                            /* @LJC*/         
*      %THEN                                                                    
*     %GOTO IFAL92;                 /*                           @D6C*/         
*                                                                               
*%IFAL90A:;                                                   /* @LJA*/         
*                                                                               
*/*   THIS RECORD IS WRITTEN WHEN EVER AN OPERATOR COMMAND OR        */         
*/*   RESPONSE OF THE FOLLOWING TYPE IS RECEIVED:                @D2C*/         
*/*             1  SET TIME                                          */         
*/*             2  SET DATE                                          */         
*/*             3  SETDMN                                            */         
*/*             4  SET IPS                                           */         
*/*             5  SET SMF                                           */         
*/*             6  SWITCH SMF                                        */         
*/*             7  HALT EOD                                          */         
*/*             8  IPL PROMPT (RESPONSE)                             */         
*/*             9  IPL SMF (RESPONSE)                                */         
*/*             10 IPL SRM (RESPONSE)                                */         
*/*             11 SET OPT                                           */         
*/*             12 SET ICS                                           */         
*/*             13 SETSMF                                    @G383P26*/         
*/*             14 SET MPF                                   @G382P27*/         
*/*             15 RESTART SMF                                   @L1A*/         
*/*             16 SET DAE                                       @D2A*/         
*/*             17 SET PFK                                       @D8A*/         
*/*             18 SET GRSRNL                                    @LLA*/         
*/*             19 SET APPC                                      @LDA*/         
*/*             20 SET SCHPRM                                    @LDA*/         
*/*             21 SET SCH                                       @LKA*/         
*/*             22 SET CNGRP                                     @LOA*/         
*/*             23 WLM Service Definition Install                @M1C*/         
*/*             24 WLM Service Policy Activation                 @M1C*/         
*/*             25 Workload Management Mode Change               @M1C*/         
*/*             26 IPL LOGREC                                    @LZA*/         
*/*             27 ARM restarts enabled                          @D3A*/         
*/*             28 ARM restarts disabled                         @D3A*/         
*/*             29 CSV LNKLST set activated                      @M5A*/         
*/*             30 WLM RESET                                     @M5A*/         
*/*             31 Modules added or deleted from LPA             @M6A*/         
*/*             32 WLM Scheduling Environment change             @M7A*/         
*/*             33 SET AUTOR                                     @L6A*/         
*/*             34 Processor Capacity Change                     @L8A*/         
*/*             35 SETLOAD xx,IEASYM                             @L9A*/         
*/*             36 SET CON                                       @LBA*/         
*/*             37 APF list update                               @LEA*/         
*/*             38 IEFOPZ                                        @LFA*/         
*/*             39 SET SMFLIM                                    @0CA*/         
*/*             40 System Recovery Boost                         @0FA*/         
*/*             41 CVTLSO changed                                @0HA*/         
*/*                                                                  */         
*/*                                                              @LZC*/         
*/*                                                                  */         
*/*   RECORD LENGTH IS VARIABLE MINIMUM OF XXX BYTES                 */         
*                                                                               
*   DECLARE                                                                     
*                                                                               
*     /***************************************************************/         
*     /*                                                             */         
*     /* SMF RECORD HEADER SEGMENT                                   */         
*     /*                                                             */         
*     /***************************************************************/         
*                                                                               
*     1    SMFRCD90 BASED(SMF90PTR) BDY(WORD),                                  
*       3    SMF90LEN FIXED(15),    /* RECORD LENGTH                 */         
*       3    SMF90SEG FIXED(15),    /* SEGMENT DESCRIPTOR            */         
*       3    SMF90FLG BIT(8),       /* HEADER FLAG BYTE              */         
*       3    SMF90RTY FIXED(8),     /* RECORD TYPE 90 HEX 5A         */         
*       3    SMF90TME FIXED(31) BDY(HWORD), /* RECORD WRITTEN TIME   */         
*       3    SMF90DTE CHAR(4),      /* RECORD WRITTEN DATE           */         
*       3    SMF90SID CHAR(4),      /* SYSTEM IDENTIFICATION         */         
*                                                                               
*     /***************************************************************/         
*     /*                                                             */         
*     /* SELF DEFINING SECTION                                       */         
*     /*                                                             */         
*     /***************************************************************/         
*                                                                               
*       3    *        FIXED(15),    /* RESERVED              @VS49902*/         
*     1    SMF90PSG BASED(ADDR(SMFRCD90)+LENGTH(SMFRCD90)), /*                  
*                                                            @VS49902*/         
*       3    SMF90POF FIXED(31),    /* OFFSET TO PROD SECT   @VS49902*/         
*       3    SMF90PLN FIXED(15),    /* LENGTH OF PRODUCT SECTION     */         
*       3    SMF90PON FIXED(15),    /* NUMBER OF PRODUCT SECTION     */         
*       3    SMF90DOF FIXED(31),    /* OFFSET TO SUBTYPE DATA                   
*                                      SECTION                   @P5C*/         
*       3    SMF90DLN FIXED(15),    /* LENGTH OF SUBTYPE DATA                   
*                                      SECTION                   @P5C*/         
*       3    SMF90DON FIXED(15);    /* NUMBER OF SUBTYPE DATA                   
*                                      SECTIONS                  @P5C*/         
*                                                                               
*   /*****************************************************************/         
*   /*                                                               */         
*   /* PRODUCT HEADER                                                */         
*   /*                                                               */         
*   /*****************************************************************/         
*                                                                               
*   DECLARE                                                                     
*     1    SMF90PRH BASED(ADDR(SMFRCD90)+SMF90POF),                             
*       3    SMF90TID FIXED(15) BDY(BYTE), /* SUB TYPE ID            */         
*                                                                               
*/*  *************************************************************** */         
*/*    1 = SET TIME   2 = SET DATE     3 = SETDMN     4 = SET IPS    */         
*/*    5 = SET SMF    6 = SWITCH SMF   7 = HALT EOD   8 = IPL PROMPT */         
*/*    9 = IPL SMF   10 = IPL SRM     11 = SET OPT   12 = SET ICS    */         
*/*   13 = SETSMF    14 = SET MPF     15=RESTART SMF 16 = SET DAE    */         
*/*   17 = SET PFK   18 = SET GRSRNL  19 = SET APPC              @LLC*/         
*/*   20 = SET SCHPRM                 21 = SET SCH               @LKC*/         
*/*   22 = SET CNGRP                                             @LOA*/         
*/*   23 = WLM Service Definition Install                        @M1C*/         
*/*   24 = WLM Service Policy Activation                         @M1A*/         
*/*   25 = Workload Management Mode Change                       @M1A*/         
*/*   26 = IPL LOGREC                                            @LZA*/         
*/*                                                             2@D3D*/         
*/*   27 = ARM restarts enabled                                  @D3C*/         
*/*   28 = ARM restarts disabled                                 @D3C*/         
*/*   29 = CSV LNKLST set activated                              @M5A*/         
*/*   30 = WLM RESET                                             @M6A*/         
*/*   31 = Modules added to or deleted from LPA                  @M6A*/         
*/*   32 = WLM Scheduling Environment change                     @M7A*/         
*/*   33 = SET AUTOR                                             @L6A*/         
*/*   36 = SET CON                                               @LBA*/         
*/*   39 = SET SMFLIM                                            @0CA*/         
*/*   40 = System Recovery Boost                                 @0FA*/         
*/*   41 = CVTLSO changed                                        @0HA*/         
*/*                                                                  */         
*/*  *************************************************************** */         
*                                                                               
*       3    SMF90RVN CHAR(2) BDY(BYTE), /* RECORD VERSION NUMBER    */         
*       3    SMF90PNM CHAR(8);      /* PRODUCT NAME - SMF,SRM,SUP,ETC*/         
*                                                                               
*   /*****************************************************************/         
*   /*                                                               */         
*   /* IPL SMF/SET SMF/SETSMF COMMAND SEGMENT - SUBTYPE ID 5 OR 9 OR */         
*   /* 13 OR 15                                                      */         
*   /*                                                               */         
*   /*****************************************************************/         
*                                                                               
*   DECLARE                                                                     
*     1    SMF90T5  BASED(ADDR(SMFRCD90)+SMF90DOF),                             
*                                                                               
*     /***************************************************************/         
*     /*                                                             */         
*     /* SELF DEFINING SECTION FOR SUBTYPE 5,9,13,OR 15              */         
*     /*                                                             */         
*     /***************************************************************/         
*                                                                               
*       3    SMF90OSM FIXED(31) BDY(BYTE), /* OFFSET OF SMF SEG                 
*                                                            @VS49902*/         
*       3    SMF90LSM FIXED(15) BDY(BYTE), /* LENGTH OF SMF SEGMENT  */         
*       3    SMF90NSM FIXED(15) BDY(BYTE), /* NUMBER OF SMF SEGMENTS */         
*       3    SMF90ODA FIXED(31) BDY(BYTE), /* OFFSET OF DATASET SG              
*                                                            @VS49902*/         
*       3    SMF90LDA FIXED(15) BDY(BYTE), /* LENGTH OF DATASET                 
*                                      SEGMENT                       */         
*       3    SMF90NDA FIXED(15) BDY(BYTE), /* NUMBER OF DATA SETS    */         
*       3    SMF90OWK FIXED(31) BDY(BYTE), /* OFFSET OF SUBSYS SEG              
*                                                            @VS49902*/         
*       3    SMF90LWK FIXED(15) BDY(BYTE), /* LENGTH OF SUBSYSTEM               
*                                      SEGMENT                       */         
*       3    SMF90NWK FIXED(15) BDY(BYTE), /* NUMBER OF SUBSYSTEMS   */         
*       3    SMF90OOT FIXED(31) BDY(BYTE), /* OFFSET OF SUBPARM SEG             
*                                                            @G383P26*/         
*       3    SMF90LOT FIXED(15) BDY(BYTE), /* LENGTH OF SUBPARM SEG             
*                                                            @G383P26*/         
*       3    SMF90NOT FIXED(15) BDY(BYTE); /* NUMBER OF SUBPARM SEG             
*                                                                @L1C*/         
*                                                                               
*   /*****************************************************************/         
*   /*                                                               */         
*   /* SMF SEGMENT - MAPS THE SMFPRMXX PARAMETERS SPECIFIED          */         
*   /*                                                               */         
*   /*****************************************************************/         
*                                                                               
*   DECLARE                                                                     
*     1    SMF90DSM BASED(ADDR(SMFRCD90)+SMF90OSM),                             
*       3    SMF90MAX CHAR(4),      /* MAXDORM IN MMSS FORMAT        */         
*       3    SMF90STA CHAR(6),      /* STATUS IN HHMMSS FORMAT       */         
*       3    SMF90JWT CHAR(4),      /* JWT IN MMSS FORMAT            */         
*       3    SMF90SYI CHAR(4),      /* SYSID IN CHARACTER            */         
*       3    SMF90BUF FIXED(8),     /* RESERVED (PREVIOUSLY THE                 
*                                      MINIMUM NUMBER OF BUFFERS)               
*                                                                @P2C*/         
*       3    SMF90BUM FIXED(8),     /* RESERVED (PREVIOUSLY THE                 
*                                      MAXIMUM NUMBER OF BUFFERS)               
*                                                                @P2C*/         
*       3    SMF90SWT CHAR(1),      /* SWITCHES                      */         
*         5    SMF90PAL BIT(1),     /* PROMPT(ALL)                   */         
*         5    SMF90PLT BIT(1),     /* PROMPT(LIST)                  */         
*         5    SMF90PIP BIT(1),     /* PROMPT(IPLR)                  */         
*         5    SMF90PNO BIT(1),     /* NOPROMPT                  @P1C*/         
*         5    SMF90RPR BIT(1),     /* REC(PERM)                     */         
*         5    SMF90RAL BIT(1),     /* REC(ALL)                      */         
*         5    SMF90LDS BIT(1),     /* LISTDSN                       */         
*         5    SMF90NLD BIT(1),     /* NOLISTDSN                     */         
*       3    SMF90SW2 CHAR(1),      /* SWITCHES                  @DIA*/         
*         5    SMF90NBM BIT(1),     /* NOBUFFS(MSG)              @DIA*/         
*         5    SMF90NBH BIT(1),     /* NOBUFFS(HALT)             @DIA*/         
*         5    SMF90LDM BIT(1),     /* LASTDS(MSG)               @DIA*/         
*         5    SMF90LDH BIT(1),     /* LASTDS(HALT)              @DIA*/         
*         5    SMF90TSS BIT(1),     /* AUTHSETSMF                @PBA*/         
*         5    SMF90NSS BIT(1),     /* NOAUTHSETSMF              @PBA*/         
*         5    SMF90S3C BIT(1),     /* SMF30COUNT                @LAA*/         
*         5    SMF90N3C BIT(1),     /* NOSMF30COUNT              @LAA*/         
*       3    SMF90SBU FIXED(8),     /* SMF SID Syntax Used       @LWA*/         
*         5    SMF90SDF BIT(1),     /* 'Default'                 @LWA*/         
*         5    SMF90SON BIT(1),     /* SID(xxxx)                 @LWA*/         
*         5    SMF90SSE BIT(1),     /* SID(xxxx,ser#)            @LWA*/         
*         5    SMF90SSY BIT(1),     /* SID(xxxx,SYSNAME(sysname))               
*                                                                @LWA*/         
*         5    SMF90SSM BIT(1),     /* Reserved                  @L3C*/         
*         5    SMF90SCO BIT(1),     /* SID(xxxx,COMBIN(ser#,)    @LWA*/         
*         5    SMF90SRV BIT(2),     /* Reserved                  @LWA*/         
*       3    SMF90RV7 CHAR(1),      /* RESERVED                  @LWC*/         
*       3    SMF90REL CHAR(4),      /* MVS RELEASE NUMBER            */         
*       3    SMF90IIT CHAR(4),      /* IPL TIME - Binary             */         
*       3    SMF90IDT CHAR(4),      /* IPL DATE - 0cyydddF       @L5C*/         
*       3    SMF90BFM CHAR(5),      /* BUFSIZMAX value (ddddu)   @L5A*/         
*       3    SMF90BFL CHAR(2),      /* BUFUSEWARN value (dd)     @L5A*/         
*       3    SMF90ESWT CHAR(4),     /* SWT value as entered in                  
*                                      SMFPRMxx                  @PCA*/         
*       3    SMF90ETWT CHAR(4),     /* TWT value as entered in                  
*                                      SMFPRMxx                  @PCA*/         
*       3    SMF90RV8 CHAR(5);      /* RESERVED                  @P6C*/         
*                                                                               
*   /*****************************************************************/         
*   /*                                                               */         
*   /* SUBTYPE 5,9,13,OR 15 - DATA SET SEGMENT. THERE WILL BE AN     */         
*   /* ENTRY FOR EACH SMF RECORDING DATA SET. THE FIRST DATA SET IS  */         
*   /* THE ACTIVE DATA SET AT IPL                                    */         
*   /*                                                               */         
*   /*****************************************************************/         
*                                                                               
*   DECLARE                                                                     
*     1    SMF90DSE BASED(ADDR(SMFRCD90)+SMF90ODA),                             
*       3    SMF90DSN CHAR(44);     /* SMF DATA SET NAME         @LXC*/         
*                                                                               
*   /*****************************************************************/         
*   /*                                                               */         
*   /* SUBTYPE 5,9,13, OR 15- WORK CLASS RECORDING SEGMENT. THERE    */         
*   /* WILL BE ONE ENTRY FOR EACH SYS OR SUBSYS                      */         
*   /*                                                               */         
*   /*****************************************************************/         
*                                                                               
*   DECLARE                                                                     
*     1    SMF90WCH BASED(ADDR(SMFRCD90)+SMF90OWK),                             
*       3    SMF90WKN CHAR(4),      /* SUBSYSTEM NAME                */         
*       3    SMF90DTL CHAR(1),      /* SMF SUBSYS FLAGS X'80' DETAIL */         
*       3    SMF90RS9 CHAR(3),      /* RESERVED                      */         
*       3    SMF90SVL CHAR(8),      /* INTERVAL RECORD FOR SUB SYSTEM*/         
*       3    SMF90SYS BIT(256),     /* BIT REPRESENTATION FOR WORK              
*                                      CLASS RECORDS 1 = RECORD ON, 0           
*                                      = RECORD OFF BIT 0 = RECORD 0            
*                                      BIT 255 = RECORD 255          */         
*       3    SMF90EXN(15) CHAR(8),  /* EIGHT BYTE NAME OF EACH EXIT  */         
*       3    SMF90SYE BIT(2048);    /* Record selectivity bits for              
*                                      extended record types. The               
*                                      first 256 bits are also                  
*                                      recorded in SMF90SYS.     @LGA*/         
*                                                                               
*   /*****************************************************************/         
*   /*                                                               */         
*   /* SUBTYPE 5 OR 9 OR 13 OR 15 - SUBPARM SEGMENT. THERE WILL BE AN*/         
*   /* ENTRY FOR EACH SUBSYSTEM FOR WHICH AN SUBPARM HAS BEEN        */         
*   /* SPECIFIED                                                     */         
*   /*                                                               */         
*   /*****************************************************************/         
*                                                                               
*   DECLARE                                                                     
*     1    SMF90SUB BASED(ADDR(SMFRCD90)+SMF90OOT), /*       @G383P26*/         
*       3    SMF90ASN CHAR(4),      /* SUBSYSTEM NAME        @G383P26*/         
*       3    SMF90APM CHAR(60);     /* SUBSYSTEM PARAMETER   @G383P26*/         
*                                                                               
*   /*****************************************************************/         
*   /*                                                               */         
*   /* SWITCH SMF/HALT EOD SEGMENT - SUBTYPE 6 OR 7                  */         
*   /*                                                               */         
*   /*****************************************************************/         
*                                                                               
*   DECLARE                                                                     
*     1    SMF90T6  BASED(ADDR(SMFRCD90)+SMF90DOF),                             
*       3    SMF90SWO CHAR(10),     /* Old Recording Data Set Name   */         
*                                                                               
*     /***************************************************************/         
*     /*                                                             */         
*     /* Subtype 6: Blank, if data is lost                       @LXC*/         
*     /* Subtype 7: Blank If the length of the data set is greater   */         
*     /* than 10, this field is Blank. See SMF90SOD for the complete */         
*     /* data set name.                                              */         
*     /*                                                             */         
*     /***************************************************************/         
*                                                                               
*       3    SMF90SWN CHAR(10),     /* New Recording Data Set Name   */         
*                                                                               
*     /***************************************************************/         
*     /*                                                             */         
*     /* Subtype 7: Blank                                        @LXC*/         
*     /* If the length of the data set is greater than 10, this field*/         
*     /* is Blank. See SMF90SND for the complete data set name.      */         
*     /*                                                             */         
*     /***************************************************************/         
*                                                                               
*       3    SMF90IT  CHAR(4),      /* IPL TIME                      */         
*       3    SMF90DT  CHAR(4),      /* IPL DATE                      */         
*       3    SMF90SOD CHAR(44),     /* Old Recording Data Set Name              
*                                                                @LXA*/         
*                                                                               
*     /***************************************************************/         
*     /*                                                             */         
*     /* Subtype 6: Blank, if data is lost                       @LXA*/         
*     /* Subtype 7: Blank                                            */         
*     /*                                                             */         
*     /***************************************************************/         
*                                                                               
*       3    SMF90SND CHAR(44);     /* New Recording Data Set Name              
*                                                                @LXA*/         
*                                                                               
*   /*****************************************************************/         
*   /*                                                               */         
*   /* Subtype 7: Blank SYSTEM IPL PROMPT DATA - SUBTYPE ID 8        */         
*   /*                                                               */         
*   /*****************************************************************/         
*                                                                               
*   DECLARE                                                                     
*     1    SMF90T8  BASED(ADDR(SMFRCD90)+SMF90DOF),                             
*       3    SMF90DTM CHAR(8),      /* SYSTEM DOWN TIME HH.MM.SS OR U*/         
*       3    SMF90RSN CHAR(65),     /* IPL REASON OR U               */         
*       3    SMF90OPR CHAR(20),     /* OPERATOR'S NAME OR U          */         
*       3    SMF90ITM CHAR(4),      /* TIME OF IPL                   */         
*       3    SMF90DTT CHAR(4);      /* DATE OF IPL YYDDDF            */         
*                                                                               
*   /*****************************************************************/         
*   /*                                                               */         
*   /* SET DATE / TOD SEGMENT - SUBTYPE ID 1 OR 2                    */         
*   /*                                                               */         
*   /*****************************************************************/         
*                                                                               
*   DECLARE                                                                     
*     1    SMF90T1  BASED(ADDR(SMFRCD90)+SMF90DOF),                             
*       3    SMF90OTM FIXED(31),    /* TIME BEFORE CMD ISSUED        */         
*       3    SMF90ODT CHAR(4),      /* OLD DATE BEFORE CMD ISSUED    */         
*       3    SMF90NTM FIXED(31),    /* NEW TIME                      */         
*       3    SMF90NDT CHAR(4);      /* DATE AFTER COMMAND ISSUED     */         
*                                                                               
*   /*****************************************************************/         
*   /*                                                               */         
*   /* SET IPS COMMAND SEGMENT - SUBTYPE ID 4                        */         
*   /*                                                               */         
*   /*****************************************************************/         
*                                                                               
*   DECLARE                                                                     
*     1    SMF90T4  BASED(ADDR(SMFRCD90)+SMF90DOF),                             
*       3    SMF90TIP CHAR(8),      /* SET IPS TIME                  */         
*       3    SMF90IPO CHAR(8),      /* OLD IPS NAME                  */         
*       3    SMF90IPN CHAR(8);      /* NEW IPS NAME                  */         
*                                                                               
*   /*****************************************************************/         
*   /*                                                               */         
*   /* SETDMN SEGMENT - SUBTYPE ID 3                                 */         
*   /*                                                               */         
*   /*****************************************************************/         
*                                                                               
*   DECLARE                                                                     
*     1    SMF90T3  BASED(ADDR(SMFRCD90)+SMF90DOF),                             
*       3    SMF90DDT CHAR(8),      /* TIME OF CHANGE                */         
*       3    SMF90DMM BIT(8),       /* DOMAIN NUMBER                 */         
*       3    SMF90DFG CHAR(1),      /* DOMAIN FLAGS                  */         
*         5    SMF90MND BIT(1),     /* MIN CHANGED                   */         
*         5    SMF90MXD BIT(1),     /* MAX CHANGED                   */         
*         5    SMF90WGT BIT(1),     /* WEIGHT CHANGED                */         
*         5    SMF90AOB BIT(1),     /* AOBJ CHANGED                  */         
*         5    SMF90DOB BIT(1),     /* DOBJ CHANGED                  */         
*         5    SMF90FWK BIT(1),     /* FWKLD CHANGED                 */         
*         5    SMF90ASV BIT(1),     /* AVERAGE SERVICE RATE SPECIFIED           
*                                                                @LMC*/         
*         5    SMF90DSV BIT(1),     /* TOTAL SERVICE RATE SPECIFIED             
*                                                                @LMA*/         
*       3    SMF90NMI BIT(16),      /* NEW MIN VALUE             @D4C*/         
*       3    SMF90NMA BIT(16),      /* NEW MAX VALUE             @D4C*/         
*       3    SMF90NWT BIT(16),      /* NEW WEIGHT VALUE          @D4C*/         
*       3    SMF90NAO BIT(16),      /* NEW AOBJ VALUE            @D4C*/         
*       3    SMF90NDO BIT(16),      /* NEW DOBJ VALUE            @D4C*/         
*       3    SMF90WKL BIT(16),      /* NEW FWKLD VALUE           @D4C*/         
*       3    SMF90T3R BIT(16),      /* RESERVED                  @LMA*/         
*       3    SMF90ALO FIXED(31),    /* LOW AVERAGE SERVICE RATE VALUE           
*                                      SPECIFIED                 @LMA*/         
*       3    SMF90AHI FIXED(31),    /* HIGH AVERAGE SERVICE RATE                
*                                      VALUE SPECIFIED           @LMA*/         
*       3    SMF90DLO FIXED(31),    /* LOW TOTAL SERVICE RATE VALUE             
*                                      SPECIFIED                 @LMA*/         
*       3    SMF90DHI FIXED(31),    /* HIGH TOTAL SERVICE RATE VALUE            
*                                      SPECIFIED                 @LMA*/         
*       3    SMF90FL2 BIT(8),       /* FLAGS                     @P3A*/         
*         5    SMF90XCF BIT(1),     /* IF 1, FIXCIDX VALUE IS SET               
*                                                                @P3A*/         
*       3    SMF90TRR BIT(8),       /* RESERVED                  @P3A*/         
*       3    SMF90XCI FIXED(16),    /* FIXED CONTENTION INDEX    @P3A*/         
*       3    SMF90T3E CHAR(0);      /* END OF 'SMF90T3' MAPPING  @LMA*/         
*                                                                               
*   /*****************************************************************/         
*   /*                                                               */         
*   /* IPL SRM COMMAND SEGMENT - SUBTYPE ID 10                       */         
*   /*                                                               */         
*   /*****************************************************************/         
*                                                                               
*   DECLARE                                                                     
*     1    SMF90T10 BASED(ADDR(SMFRCD90)+SMF90DOF),                             
*      2    SMF90C10,               /* Compatibility mode fields:               
*                                      These fields are always filled           
*                                      in.                       @M2A*/         
*       3    SMF90IPT CHAR(8),      /* TIME OF IPL                   */         
*       3    SMF90IPS CHAR(8),      /* IEAIPSXX PARMLIB MEMBER       */         
*       3    SMF90OPT CHAR(8),      /* IEAOPTXX PARMLIB MEMBER       */         
*       3    SMF90ICS CHAR(8),      /* IEAICSXX PARMLIB MEMBER       */         
*      2    SMF90G10,               /* Goal mode fields: These fields           
*                                      are filled in when goal mode             
*                                      system operation is                      
*                                      applicable.               @M2A*/         
*       3    SMF90SPN CHAR(8),      /* Active service policy name.              
*                                                                @M2A*/         
*       3    SMF90SPT CHAR(8),      /* Time/date (STCK format) that             
*                                      the active service policy was            
*                                      originally activated.     @M2A*/         
*       3    SMF90SPU CHAR(8),      /* Userid of the operator or                
*                                      service administrator that               
*                                      activated the service policy.            
*                                                                @M2A*/         
*       3    SMF90SPS CHAR(8),      /* Name of the system on which              
*                                      the service policy activation            
*                                      was initiated.            @M2A*/         
*       3    SMF90SDN CHAR(8),      /* Name of the installed service            
*                                      definition at the time the               
*                                      policy was activated.     @M2A*/         
*       3    SMF90SDT CHAR(8),      /* Time/date (STCK format) that             
*                                      the service definition was               
*                                      installed.                @M2A*/         
*       3    SMF90SDU CHAR(8),      /* Userid of service                        
*                                      administrator that installed             
*                                      the service definition.   @M2A*/         
*       3    SMF90SDS CHAR(8);      /* Name of the system on which              
*                                      the service definition was               
*                                      installed.                @M2A*/         
*                                                                               
*   /*****************************************************************/         
*   /*                                                               */         
*   /* SET OPT COMMAND SEGMENT - SUBTYPE ID 11                       */         
*   /*                                                               */         
*   /*****************************************************************/         
*                                                                               
*   DECLARE                                                                     
*     1    SMF90T11 BASED(ADDR(SMFRCD90)+SMF90DOF),                             
*       3    SMF90TOP CHAR(8),      /* TIME OF OPT CHANGE            */         
*       3    SMF90OPO CHAR(8),      /* OLD OPT PARMLIB MEMBER        */         
*       3    SMF90OPN CHAR(8);      /* NEW OPT PARMLIB MEMBER        */         
*                                                                               
*   /*****************************************************************/         
*   /*                                                               */         
*   /* SET ICS COMMAND SEGMENT - SUBTYPE ID 12                       */         
*   /*                                                               */         
*   /*****************************************************************/         
*                                                                               
*   DECLARE                                                                     
*     1    SMF90T12 BASED(ADDR(SMFRCD90)+SMF90DOF),                             
*       3    SMF90TIC CHAR(8),      /* TIME OF 'SETICS' CHANGE       */         
*       3    SMF90ICO CHAR(8),      /* OLD PARMLIB MEMBER            */         
*       3    SMF90ICN CHAR(8);      /* NEW PARMLIB MEMBER            */         
*                                                                               
*   /*****************************************************************/         
*   /*                                                               */         
*   /* SET MPF COMMAND SEGMENT - SUBTYPE ID 14                       */         
*   /*                                                               */         
*   /*****************************************************************/         
*                                                                               
*   DECLARE                                                                     
*     1    SMF90T14 BASED(ADDR(SMFRCD90)+SMF90DOF), /*       @G382827*/         
*       3    SMF90TMP CHAR(8),      /* TIME OF 'SET MPF' CHANGE                 
*                                                            @G383P27*/         
*       3    SMF90MPO CHAR(8),      /* RESERVED - WAS OLD PARMLIB MEM           
*                                                                @D1C*/         
*       3    SMF90MPN CHAR(8),      /* RESERVED - WAS NEW PARMLIB MEM           
*                                                                @D1C*/         
*       3    SMF90MPC CHAR(8),      /* RESERVED - WAS OLD PARMLIB MEM           
*                                      - COLOR                   @D1C*/         
*       3    SMF90MCN CHAR(8),      /* RESERVED - WAS NEW PARMLIB MEM           
*                                      - CMD                     @D1C*/         
*       3    SMF90MCO CHAR(8),      /* RESERVED - WAS OLD PARMLIB MEM           
*                                      - CMD                     @D1C*/         
*       3    SMF90CMP FIXED(31),    /* COUNT OF MPF ENTRIES      @D1A*/         
*       3    SMF9014D(39) CHAR(2);  /* ARRAY OF MPF SUFFIXES     @D1A*/         
*                                                                               
*   /*****************************************************************/         
*   /*                                                               */         
*   /* SET DAE COMMAND SEGMENT - SUBTYPE ID 16                       */         
*   /*                                                               */         
*   /*****************************************************************/         
*                                                                               
*   DECLARE                                                                     
*     1    SMF90T16 BASED(ADDR(SMFRCD90)+SMF90DOF), /*           @D2A*/         
*       3    SMF90DAT CHAR(8),      /* TIME AND DATE OF 'SET DAE' CMD           
*                                                                @D2A*/         
*       3    SMF90DAO CHAR(8),      /* OLD PARMLIB MEMBER        @D2A*/         
*       3    SMF90DAN CHAR(8);      /* NEW PARMLIB MEMBER        @D2A*/         
*                                                                               
*   /*****************************************************************/         
*   /*                                                               */         
*   /* SET PFK COMMAND SEGMENT - SUBTYPE ID 17                       */         
*   /*                                                               */         
*   /*****************************************************************/         
*                                                                               
*   DECLARE                                                                     
*     1    SMF90T17 BASED(ADDR(SMFRCD90)+SMF90DOF), /*           @D8A*/         
*       3    SMF90TPF CHAR(8),      /* TIME OF SET PFK CHANGE    @D8A*/         
*       3    SMF90PFO CHAR(8),      /* OLD PFK PARMLIB MEMBER    @D8A*/         
*       3    SMF90PFN CHAR(8);      /* NEW PFK PARMLIB MEMBER    @D8A*/         
*                                                                               
*   /*****************************************************************/         
*   /*                                                               */         
*   /* SET GRSRNL COMMAND SEGMENT - SUBTYPE ID 18                    */         
*   /*                                                               */         
*   /*****************************************************************/         
*                                                                               
*   DECLARE                                                                     
*     1    SMF90T18 BASED(ADDR(SMFRCD90)+SMF90DOF), /*           @LLA*/         
*       3    SMF90SGH,              /* SET GRSRNL CMD HEADER SECTION            
*                                                                @LLA*/         
*         5    SMF90SGT CHAR(8),    /* TIME OF COMMAND           @LLA*/         
*         5    SMF90SGS CHAR(8),    /* SYSTEM THAT ISSUED THE COMMAND           
*                                                                @LLA*/         
*         5    SMF90SGC FIXED(31),  /* COUNT OF ENTRIES          @LLA*/         
*       3    SMF90SGN(39) CHAR(2);  /* NEW PARMLIB MEMBERS       @LLA*/         
*                                                                               
*   /*****************************************************************/         
*   /*                                                               */         
*   /* SET APPC COMMAND SEGMENT - SUBTYPE ID 19                      */         
*   /*                                                               */         
*   /*****************************************************************/         
*                                                                               
*   DECLARE                                                                     
*     1    SMF90T19 BASED(ADDR(SMFRCD90)+SMF90DOF), /*           @LDA*/         
*       3    SMF90APT CHAR(8),      /* TIME OF SET APPC CHANGE   @LDA*/         
*       3    SMF90APC FIXED(31),    /* COUNT OF ENTRIES          @LDA*/         
*       3    SMF9019D CHAR(*),      /* NEW PARMLIB MEMBERS       @LDA*/         
*     SMF90APN BASED(ADDR(SMF9019D)) CHAR(8); /*                 @LDA*/         
*                                                                               
*   /*****************************************************************/         
*   /*                                                               */         
*   /* SET SCHPRM COMMAND SEGMENT - SUBTYPE ID 20                    */         
*   /*                                                               */         
*   /*****************************************************************/         
*                                                                               
*   DECLARE                                                                     
*     1    SMF90T20 BASED(ADDR(SMFRCD90)+SMF90DOF), /*           @LDA*/         
*       3    SMF90SCT CHAR(8),      /* TIME OF SET SCHPRM CHANGE @LDA*/         
*       3    SMF90SCC FIXED(31),    /* COUNT OF ENTRIES          @LDA*/         
*       3    SMF9020D CHAR(*),      /* NEW PARMLIB MEMBERS       @LDA*/         
*     SMF90SCN BASED(ADDR(SMF9020D)) CHAR(8); /*                 @LDA*/         
*                                                                               
*   /*****************************************************************/         
*   /*                                                               */         
*   /* SET SCH COMMAND SEGMENT - SUBTYPE ID 21                       */         
*   /*                                                               */         
*   /*****************************************************************/         
*                                                                               
*   DECLARE                                                                     
*     1    SMF90T21 BASED(ADDR(SMFRCD90)+SMF90DOF), /*           @LKA*/         
*       3    SMF90SHH,              /* SET SCH CMD HEADER SECTION               
*                                                                @LKA*/         
*         5    SMF90SHT CHAR(8),    /* TIME OF SET SCH CHANGE    @LKA*/         
*         5    SMF90SHC FIXED(31),  /* COUNT OF ENTRIES          @LKA*/         
*       3    SMF90SHN(*) CHAR(8);   /* NEW PARMLIB MEMBERS       @LKA*/         
*                                                                               
*   /*****************************************************************/         
*   /*                                                               */         
*   /* SET CNGRP COMMAND SEGMENT - SUBTYPE ID 22                     */         
*   /*                                                               */         
*   /*****************************************************************/         
*                                                                               
*   DECLARE                                                                     
*     1    SMF90T22 BASED(ADDR(SMFRCD90)+SMF90DOF), /*           @LOA*/         
*       3    SMF90CGT CHAR(8),      /* TIME OF SET CNGRP CHANGE  @LOA*/         
*       3    SMF90CGC FIXED(31),    /* COUNT OF ENTRIES          @LOA*/         
*       3    SMF9022D CHAR(*),      /* NEW PARMLIB MEMBERS       @LOA*/         
*     SMF90CGN BASED(ADDR(SMF9022D)) CHAR(8); /*                 @LOA*/         
*                                                                               
* %IF IBM_CBGENC = 'YES' %THEN %GOTO IFASMFRAC;                                 
*   /*****************************************************************/         
*   /*                                                               */         
*   /* WLM Service Definition Install Segment - Subtype ID 23 WLM    */         
*   /* Service Policy Activation Segment - Subtype ID 24 Workload    */         
*   /* Management Mode Change Segment - Subtype ID 25                */         
*   /* WLM RESET - Subtype ID 30                                     */         
*   /* WLM Scheduling Environment change - Subtype ID 32         @M7A*/         
*   /*                                                               */         
*   /*****************************************************************/         
*                                                                               
*   %INCLUDE SYSLIB(IWMSMF90) NOSEG; /* DCL Subtypes 23,24,25,30,@M7C*/         
*/*                                     32                       @M7C*/         
*                                                                               
*   /*****************************************************************/         
*   /*                                                               */         
*   /* IPL LOGREC SEGMENT - SUBTYPE ID 26                            */         
*   /*                                                               */         
*   /*****************************************************************/         
*                                                                               
*   %INCLUDE SYSLIB(IFBSMF90) NOSEG; /* DCLS for Subtype 26      @LZA*/         
*                                                                               
*/* ARM restarts enabled                         - Subtype ID 27 @D3C*/         
*/* ARM restarts disabled                        - Subtype ID 28 @D3C*/         
*   %INCLUDE SYSLIB(IXCYSM90) NOSEG; /* DCLS for Subtype 27-28   @D3C*/         
*/* Only expand for PL/X users                                   @M5A*/         
*%IF SYSVERSION = '' %THEN            /* Skip if pre-PL/AS       @M5A*/         
*    %GOTO IFAL92;                    /*                         @M5A*/         
*%IF SYSVERSION(1:5) = 'PL/AS' %THEN  /* Skip if PL/AS           @M5A*/         
*    %GOTO IFAL92;                    /*                         @M5A*/         
*/* Dynamic LNKLST activation                    - Subtype ID 29 @M5A*/         
*%INCLUDE SYSLIB(CSVDLSMF) NOSEG;  /* DCLS for Subtype 29        @M5A*/         
*/* Dynamic LPA add or delete                    - Subtype ID 31 @M6A*/         
*%INCLUDE SYSLIB(CSVLPSMF) NOSEG;  /* DCLS for Subtype 31        @M6A*/         
*                                                                               
*   /*****************************************************************/         
*   /*                                                               */         
*   /* SET AUTOR          - SUBTYPE ID 33                        @L6A*/         
*   /*                                                               */         
*   /*****************************************************************/         
*                                                                               
*%INCLUDE SYSLIB(CNZMYSMF) NOSEG;  /* DCLS for Subtype 33        @L6A*/         
*                                                                               
* %IFASMFRAC:;                                                                  
*   /*****************************************************************/         
*   /*                                                               */         
*   /* Processor Capacity change segment - subtype ID 34             */         
*   /*   This record is generated when a processor capacity change   */         
*   /*   occurs.                                                     */         
*   /*                                                           @L8A*/         
*   /*****************************************************************/         
*   DECLARE                                                                     
*     1 SMF90T34 BASED(ADDR(SMFRCD90)+SMF90DOF),   /*            @L8A*/         
*       3  SMF90T34_Capacity_Change_Time BIT(64), /* Time when the              
*                                      capacity was last changed                
*                                      (STCK format)             @P8C*/         
*       3  SMF90T34_RQSVSuS FIXED(32), /* Current SU factor from                
*                                      RQSVSUS, which is described              
*                                      as:  RQSFSuS Copy of RmctAdjC            
*                                      when this SMF record was                 
*                                      produced, number of sixteenths           
*                                      of one CPU microsecond per CPU           
*                                      service unit              @L8A*/         
*       3  SMF90T34_RCTPCPUA_Actual FIXED(31), /* Physical CPU                  
*                                      adjustment factor (i.e.                  
*                                      adjustment factor for                    
*                                      converting CPU time to                   
*                                      equivalent service in basic-             
*                                      mode with all processors                 
*                                      online). Based on Model                  
*                                      Capacity Rating           @L8A*/         
*       3  SMF90T34_RCTPCPUA_Nominal FIXED(31), /* Physical CPU                 
*                                      adjustment factor for                    
*                                      converting CPU time to                   
*                                      equivalent service in                    
*                                      basic-mode with all processors           
*                                      online). Based on Nominal Model          
*                                      Capacity Rating           @L8A*/         
*       3  SMF90T34_RCTPCPUA_Scaling_Factor FIXED(31), /* Scaling               
*                                      factor for                               
*                                      SMF90T34_RCTPCPUA_Actual and             
*                                      SMF90T34_RCTPCPUA_Nominal @L8A*/         
*       3  SMF90T34_Capacity_Adjustment_Ind FIXED(8), /* When zero,             
*                                      the indication is not reported.          
*                                      When in the range 1-99, some             
*                                      amount of reduction is                   
*                                      indicated. When 100, the machine         
*                                      is operating at its normal               
*                                      capacity. Primary CPU and all            
*                                      secondary-type CPUs are                  
*                                      similarly affected        @L8A*/         
*       3  SMF90T34_Capacity_Change_Reason FIXED(8), /* Indicates the           
*                                      reason which is associated with          
*                                      the present value contained in           
*                                      SMF90T34_Capacity_Adjustment_Ind         
*                                                                @L8A*/         
*       3  SMF90T34_Flags       CHAR(1), /* Flag byte            @P9C*/         
*          5  SMF90T34_RQSVSUS_Err       BIT(1), /* When on, indicates          
*                                      that an error occurred while             
*                                      collecting the value from                
*                                      RQSVSUS.                  @L8A*/         
*          5  SMF90T34_Capacity_Data_err BIT(1), /* When on, indicates          
*                                      that an error occurred while             
*                                      collecting the processor                 
*                                      capacity data             @L8A*/         
*          5  SMF90T34_PCD_Rsvd_Exists   BIT(1), /* This bit is set             
*                                      in records generated on systems          
*                                      running z/OS 1.7 through                 
*                                      z/OS 1.9. It will remain off in          
*                                      records generated at systems             
*                                      running z/OS 1.10 and                    
*                                      above.                    @PAC*/         
*       3  SMF90T34_RSV1   CHAR(1), /* Reserved for alignment    @PAA*/         
*       3  SMF90T34_RMCTADJN_Nominal FIXED(31); /* Nominal CPU rate             
*                                      adjustment                @PAA*/         
*   /*****************************************************************/         
*   /*                                                               */         
*   /* SETLOAD xx,IEASYM - subtype ID 35.                            */         
*   /*   This record is generated when a SETLOAD xx,IEASYM occurs    */         
*   /*                                                               */         
*   /*****************************************************************/         
*   DECLARE                                                                     
*     1 SMF90T35 BASED(ADDR(SMFRCD90)+SMF90DOF),              /* @L9A*/         
*       3  SMF90T35_Timestamp CHAR(8),  /* Time of SETLOAD xx,IEASYM            
*                                                                @L9A*/         
*       3  SMF90T35_ConsID Fixed(32),   /* Console ID of issuer                 
*                                                                @L9A*/         
*       3  SMF90T35_LOADxxName Char(8), /* LOADxx member name    @L9A*/         
*       3  SMF90T35_IeasymStatement Char(72);   /* IEASYM statement,            
*                                      identifies the IEASYMxx suffixes         
*                                                                @L9A*/         
* %IF IBM_CBGENC = 'YES' %THEN %GOTO IFASMFRAD;                                 
*   /*****************************************************************/         
*   /*                                                               */         
*   /* SET CON            - SUBTYPE ID 36                        @LBA*/         
*   /*                                                               */         
*   /*****************************************************************/         
*                                                                               
*%INCLUDE SYSLIB(CNZMYSM2) NOSEG;  /* DCLS for Subtype 36        @LBA*/         
*                                                                               
*/* APF list update                              - Subtype ID 37 @LEA*/         
*%INCLUDE SYSLIB(CSVAPSMF) NOSEG;  /* DCLS for Subtype 37        @LEA*/         
*                                                                               
*/* IEFOPZ                                       - Subtype ID 38 @LFA*/         
*%INCLUDE SYSLIB(IEFOPSMF) NOSEG;  /* DCLS for Subtype 38        @LFA*/         
*                                                                               
* %IFASMFRAD:;                                                                  
*   /*****************************************************************/         
*   /*                                                               */         
*   /* SET SMFLIM         - SUBTYPE ID 39                        @0CA*/         
*   /*                                                               */         
*   /*****************************************************************/         
*   DECLARE                                                                     
*     1    SMF90T39 BASED(ADDR(SMFRCD90)+SMF90DOF)  /*           @0CA*/         
*       ,3    SMF90T39_Timestamp Char(8) /* Time of SET SMFLIM policy           
*                                     change, in TOD clock (STCK)               
*                                     format                     @0CA*/         
*       ,3    SMF90T39_Num_Suffixes Fixed(31) /* Count of SMFLIMxx              
*                                     suffixes                   @0CA*/         
*       ,3    SMF90T39_Suffixes(38) Char(2) /* Array of 2-byte suffixes         
*                                     of specified SMFLIMxx members             
*                                     (maximum of 38 suffixes)   @0CA*/         
*       ;                                                                       
* /*******************************************************************/         
* /* System Recovery Boost - Subtype ID 40                       @0FA*/         
* /*******************************************************************/         
*   DECLARE                                                                     
*     1    SMF90T40 BASED(ADDR(SMFRCD90)+SMF90DOF)  /*           @0FA*/         
*       ,3    SMF90T40_ETOD Char(16) /* For IPLBoosts_Start, not                
*                                     applicable. For IPLBoosts_End,            
*                                     time of IPL Boosts end. For               
*                                     SDBoosts_Start, not applicable.           
*                                     For SDBoosts_End, time of                 
*                                     shutdown Boosts end. For                  
*                                     RPBoosts_Start, not applicable.           
*                                     For RPBoosts_End, time of                 
*                                     Recovery Process boosts end.              
*                                     In STCKE format.           @0FA*/         
*       ,3    SMF90T40_Event Fixed(31)  /* The Boost event. See                 
*                                     constants SMF90T40_Event_xxx              
*                                                                @0FA*/         
*       ,3    SMF90T40_NumTransientzIIPCores Fixed(15)/* Number of zIIP         
*                                     cores configured online due to            
*                                     zIIP boost (and configured                
*                                     offline upon boost end)    @0FA*/         
*       ,3    SMF90T40_Flags0 Bit(8)     /* Flags                @0FA*/         
*         ,5  SMF90T40_zIIPBoost_Active Bit(1)  /* For the "boosts end"         
*                                     events, the boost was active. For         
*                                     the "boosts start" events, the            
*                                     boost was activated        @0FA*/         
*         ,5  SMF90T40_SpeedBoost_Active Bit(1) /* For the "boosts end"         
*                                     events, the boost was active. For         
*                                     the "boosts start" events, the            
*                                     boost was activated        @0FA*/         
*         ,5  SMF90T40_zIIPBoost_EndedByError Bit(1)          /*                
*                                     Applies only to the "boosts               
*                                     end" events                @0FA*/         
*         ,5  SMF90T40_SpeedBoost_EndedByError Bit(1)         /*                
*                                     Applies only to the "boosts               
*                                     end" events                @0FA*/         
*         ,5  SMF90T40_RPBoosts_Last_EndedByError Bit(1)    /*                  
*                                     The last (most recent) RP boosts          
*                                     ended by error.                           
*                                     Applies only to the "boosts               
*                                     end" events                @0GA*/         
*         ,5  SMF90T40_BoostClass Bit(3) /* See SMF90T40_BoostClass_xxx         
*                                     equates                    @0FA*/         
*       ,3    SMF90T40_Flags1 Bit(8)     /* Flags                @0FA*/         
*         ,5  SMF90T40_Boosts_EndedByTimer Bit(1) /* All boosts                 
*                                     were ended. Timer expired.                
*                                     Applies only to the "boosts               
*                                     end" events                @0FA*/         
*         ,5  SMF90T40_Boosts_EndedByPgm     Bit(1)  /* All boosts              
*                                     were ended by proc IEABE.                 
*                                     Applies only to the "boosts               
*                                     end" events                @0FA*/         
*         ,5  SMF90T40_Boosts_EndedBySD     Bit(1)  /* All boosts               
*                                     were ended by shutdown.                   
*                                     Shutdown was begun before IPL             
*                                     boosts or RP boosts ended.                
*                                     Applies only to the "IPL boosts           
*                                     end" and "Recovery process boosts         
*                                     end" events                @0GC*/         
*         ,5  SMF90T40_Boosts_EndedByError Bit(1) /* All boosts                 
*                                     were ended due to error.                  
*                                     Applies only to the "boosts               
*                                     end" events                @0FA*/         
*         ,5  * Bit(3)                /* Reserved                @0JA*/         
*         ,5  SMF90T40_RPB_Disabled Bit(1)  /* When 1, RP boosts                
*                        are disabled. When 0, RP boosts are                    
*                        enabled. Valid when                                    
*                        SMF90T40_BoostLevel >= 2.               @0JA*/         
*       ,3    SMF90T40_RPB_Start_Requestor_ID Fixed(8) /* The ID of the         
*                                     requestor for which the boost             
*                                     was started. Applies only to              
*                                     RPBoosts start event. Possible            
*                                     values are:                               
*                                     0 - not identified, 1 - Sysplex           
*                                     partitioning, 2 - Coupling                
*                                     facility structure recovery, 3 -          
*                                     Coupling facility datasharing             
*                                     member recovery,                          
*                                     4 - Hyperswap                             
*                                     5 - SVC Dump                              
*                                     6 - Middleware region startup             
*                                     7 - Hyperswap config load                 
*                                                                @0JA*/         
*         ,5  SMF90T40_RP_Start_Requestor_ID Fixed(8)  /* Same as               
*                                     RPB_Start_Requestor_ID     @0JC*/         
*       ,3    SMF90T40_BoostLevel Fixed(8)  /* Valid when non-zero.             
*                                     From ECVT_BoostLevel       @0JA*/         
*       ,3    * Char(6)               /*  Reserved               @0JC*/         
*       ,3    SMF90T40_RPB_Duration Bit(64) /* Total duration for the           
*                        life of the IPL of recovery process boosts.            
*                        Updated when RP boost is extended or ends.             
*                        In STCK format. Provided for all events when           
*                        SMF90T40_BoostLevel >= 2.                              
*                                                                @0JA*/         
*         ,5  SMF90T40_RP_Duration Bit(64) /* Same as RPB_Duration   */         
*       ,3  SMF90T40_End_V1 CHAR(0)  /* SMF90T40_Len_V1 is the length           
*                                      to here                   @0JA*/         
*       ,3    SMF90T40_RPB_Duration_Delta                                       
*                                  Bit(64) /* Delta of RPB_Duration             
*                        since last SMF90T40 RPBoosts_Info record.              
*                        In STCK format. Provided only for                      
*                        RPBoosts_Info event.                                   
*                        Valid when SMF90T40_BoostLevel is >= 2.                
*                                                                @0JA*/         
*       ,3    SMF90T40_RPB_Duration_Potential                                   
*                                  Bit(64) /* Total duration for the            
*                        life of the IPL of recovery process boosts,            
*                        ignoring the duration limit per 24 hours.              
*                        Updated when                                           
*                        RP boost would have been extended or ends.             
*                        In STCK format. Provided for all events.               
*                        Valid when SMF90T40_BoostLevel is >= 2.                
*                                                                @0JA*/         
*       ,3    SMF90T40_RPB_Duration_Potential_Delta                             
*                                  Bit(64) /* Delta of                          
*                        RPB_Duration_Potential since last                      
*                        SMF90T40 RPBoosts_Info event.                          
*                        In STCK format. Provided only for                      
*                        RPBoosts_Info event.                                   
*                        Valid when SMF90T40_BoostLevel is >= 2.                
*                                                                @0JA*/         
*       ,3    SMF90T40_RPB_Duration_Potential_E                                 
*                                  Bit(64) /* Total duration for the            
*                        life of the IPL of recovery process boosts,            
*                        ignoring the duration limit per 24 hours.              
*                        Updated when                                           
*                        RP boost would have been extended or ends              
*                        but only when RP boosts are enabled.                   
*                        In STCK format. Provided for all events.               
*                        Valid when SMF90T40_BoostLevel is >= 2.                
*                                                                @0JA*/         
*       ,3    SMF90T40_RPB_Duration_Potential_E_Delta                           
*                                  Bit(64) /* Delta of                          
*                        RPB_Duration_Potential_E since last                    
*                        SMF90T40 RPBoosts_Info event.                          
*                        In STCK format. Provided only for                      
*                        RPBoosts_Info event.                                   
*                        Valid when SMF90T40_BoostLevel is >= 2.                
*                                                                @0JA*/         
*       ,3  SMF90T40_End_V2 CHAR(0)  /* SMF90T40_Len_V2 is the length           
*                                      to here                   @0JA*/         
*       ;                                                                       
* /* Length/Version equates for SMF90T40                             */         
* Dcl                                                                           
* SMF90T40_Len_V1 Constant(Offset(SMF90T40.SMF90T40_End_V1)), /* @0JA*/         
* SMF90T40_Len_V2 Constant(Offset(SMF90T40.SMF90T40_End_V2)), /* @0JA*/         
* SMF90T40_Len_Max Constant(SMF90T40_Len_V2); /* This value might               
*                              change upon any recompile after                  
*                              installation of service or a release.            
*                              Do not use this constant unless that             
*                              is OK.                            @0JA*/         
* /* Equates for SMF90T40_Event                                      */         
*Dcl SMF90T40_Event_IPLBoosts_Start Constant(1); /* IPL boosts                  
*                                                 start          @0FA*/         
*Dcl SMF90T40_Event_IPLBoosts_End Constant(2); /* IPL boosts end @0FA*/         
*Dcl SMF90T40_Event_SDBoosts_Start Constant(3); /* Shutdown boosts              
*                                     start                      @0FA*/         
*Dcl SMF90T40_Event_SDBoosts_End Constant(4);   /* Shutdown boosts              
*                                     end                        @0FA*/         
*Dcl SMF90T40_Event_RPBoosts_Start Constant(5); /* Recovery process             
*                                     boosts start               @0GA*/         
*Dcl SMF90T40_Event_RPBoosts_End Constant(6);   /* Recovery process             
*                                     boosts start               @0GA*/         
*Dcl SMF90T40_Event_RPBoosts_EnabDisab Constant(7);  /* Recovery                
*                                     process boosts have either been           
*                                     enabled or disabled. In addition          
*                                     to the Event and BoostLevel               
*                                     fields, SMF90T40_RPB_Disabled             
*                                     is valid                   @0JA*/         
*Dcl SMF90T40_Event_RPBoosts_Info Constant(8);   /* Recovery process            
*                                     boost usage information.                  
*                                     In addition to the Event and              
*                                     BoostLevel fields,                        
*                                     the fields with names beginning           
*                                     SMF90T40_RPB_Duration are the             
*                                     valid ones                 @0JA*/         
* /* Equates for SMF90T40_Flags0                                     */         
* /* Boost Class equates. "AND" the byte with this mask and compare             
*    the result to the equate if you want to check the class     @0FA*/         
* Dcl SMF90T40_BoostClass_Mask Bit(8) Constant('07'x);        /* @0FA*/         
* Dcl SMF90T40_BoostClass_IPL Bit(3) Constant('001'b);        /* @0FA*/         
* Dcl SMF90T40_BoostClass_ShutDown Bit(3) Constant('010'b);   /* @0FA*/         
* Dcl SMF90T40_BoostClass_RP Bit(3) Constant('011'b);         /* @0GA*/         
*   /*****************************************************************/         
*   /*                                                               */         
*   /* CVTLSO Changed     - SUBTYPE ID 41                            */         
*   /*   Note: This record is generated on the SMF global interval   */         
*   /*         boundary after a change to CVTLSO occurred. It is     */         
*   /*         not necessarily generated at the time when the        */         
*   /*         change to CVTLSO occurred.                            */         
*   /*                                                           @0HA*/         
*   /*****************************************************************/         
*   DECLARE                                                                     
*     1    SMF90T41 BASED(ADDR(SMFRCD90)+SMF90DOF)  /*           @0HA*/         
*       ,3    SMF90T41_Old_CVTLSO Char(8) /* Value of CVTLSO before             
*                                     the change                 @0HA*/         
*       ,3    SMF90T41_New_CVTLSO Char(8) /* Value of CVTLSO after              
*                                     the change                 @0HA*/         
*       ;                                                                       
* %IF IBM_CBGENC = 'YES' %THEN %GOTO IFAL92;                  /* @0KA*/         
*   /*****************************************************************/         
*   /*                                                               */         
*   /* Validated Boot     - SUBTYPE ID 42                            */         
*   /*   Note: This record is written once per IPL                   */         
*   /*                                                           @0KA*/         
*   /*****************************************************************/         
*%INCLUDE SYSLIB(IHAVBSMF) NOSEG;  /* DCLs for Subtype 42        @0KA*/         
*%IFAL92:;                                                    /* @LJC*/         
*  %IF IFAR92 = ''                                            /* @LJC*/         
*      %THEN                                                                    
*     %GOTO IFAL94;                 /*                           @D6A*/         
*                                                                               
*/* THIS STRUCTURE DEFINES THE FORMAT FOR RECORD TYPE 92 WRITTEN @D6A*/         
*/* BY THE O/MVS FILE SYSTEM                                     @D6A*/         
*                                                                               
*   %INCLUDE SYSLIB(BPXYSMFR) NOSEG; /* DCLS FOR TYPE 92 RECORD  @D6A*/         
*%IFAL94:;                                                    /* @LJC*/         
*  %IF IFAR94 = ''                                            /* @LJC*/         
*      %THEN                                                                    
*     %GOTO IFAL96;                 /*                           @D5A*/         
*                                                                               
*/* THIS STRUCTURE DEFINES THE FORMAT FOR RECORD TYPE 94 WRITTEN @D5A*/         
*/* BY THE AUTOMATED TAPE LIBRARY FUNCTION                       @D5A*/         
*                                                                               
*   %INCLUDE SYSLIB(IECSMF94) NOSEG; /* DCLS FOR TYPE 94 RECORD  @D5A*/         
*%IFAL96:;                                                    /* @LJC*/         
*  %IF IFAR96 = ''                                            /* @LJC*/         
*      %THEN                                                                    
*     %GOTO IFAL97;                 /*                           @M8C*/         
*                                                                               
*/*                                                              @01A*/         
*/* NO PLS MAPPING MACRO DEFINED FOR RECORD TYPE 96              @01A*/         
*/*                                                              @01A*/         
*                                                                               
*%IFAL97:;                                                    /* @LJC*/         
*  %IF IFAR97 = ''                                            /* @LJC*/         
*      %THEN                                                                    
*     %GOTO IFAL98;                 /*                           @0DC*/         
*                                                                               
*/* THIS STRUCTURE DEFINES THE FORMAT FOR RECORD TYPE 97 WRITTEN @M8A*/         
*/* BY THE WORKLOAD MANAGER                                      @M8A*/         
*                                                                               
*   %INCLUDE SYSLIB(IWMSMF97) NOSEG; /* DCLS FOR TYPE 97 RECORD  @M8A*/         
*%IFAL98:;                                                    /* @LJC*/         
*  %IF IFAR98 = '' %THEN                                      /* @LJC*/         
*     %GOTO IFALRB;                                           /* @0DA*/         
*                                                                               
*/* THIS STRUCTURE DEFINES THE FORMAT FOR RECORD TYPE 98 records @0DA*/         
*                                                                               
*   %INCLUDE SYSLIB(IHAHR098) NOSEG; /* DCL for Type 98 rcd hdr  @0DA*/         
*%IFALRB:                                                                       
*   ;                               /*                       @G50FPJW*/         
* @LOGIC;                                                                       
* #PRAGMA TOOL=PADI.                                                            
* #ASMLINE.   IFASMFRA 89                                                       
* #LINE.   %IFAR89='YES';                                                       
* #LINE.   DCL SMF89PTR PTR(31);                                                
* #PADIDELETE.SMF89S11                                                          
* #PADIDELETE.SMF89S22                                                          
* #PADIDELETE.SMF89T2EI                                                         
* #PADIDELETE.SMF89AFE                                                          
* #ASMLINE.SMFRCD90 DSECT                                                       
* #ASMLINE. IFASMFRA 90                                                         
* #LINE.   %IFAR90='YES';                                                       
* #LINE.   DCL SMF90PTR PTR(31);                                                
* #PADIDELETE.SMF90PSG                                                          
* #PADIDELETE.SMF90T3E                                                          
* #PADIDELETE.SMF90C10                                                          
* #PADIDELETE.SMF90G10                                                          
* #PADIDELETE.SMF90SGH                                                          
* #PADIDELETE.SMF9019D                                                          
* #PADIDELETE.SMF9020D                                                          
* #PADIDELETE.SMF90SHH                                                          
* #PADIDELETE.SMF9022D                                                          
* #PADIDELETE.SMF90LRC                                                          
* #PADIDELETE.SMF90LPR                                                          
* #PADIDELETE.SMF90LT5                                                          
* #PADIDELETE.SMF90DSL                                                          
* #PADIDELETE.SMF90LWC                                                          
* #PADIDELETE.SMF90LAC                                                          
* #PADIDELETE.SMF90LT8                                                          
* #PADIDELETE.SMF90LT1                                                          
* #PADIDELETE.SMF90LT4                                                          
* #PADIDELETE.SMF90LAC                                                          
* #PADIDELETE.SMF90LT6                                                          
* #PADIDELETE.SMF90LT3                                                          
* #PADIDELETE.SMF90LTA                                                          
* #PADIDELETE.SMF90LTB                                                          
* #PADIDELETE.SMF90LTC                                                          
* #PADIDELETE.SMF90LTE                                                          
* #PADIDELETE.SMF90LTF                                                          
* #PADIDELETE.SMF90LTG                                                          
* #PADIDELETE.SMF90LTH                                                          
* #PADIDELETE.SMF90APN                                                          
* #PADIDELETE.SMF90LTI                                                          
* #PADIDELETE.SMF90SCN                                                          
* #PADIDELETE.SMF90LTJ                                                          
* #PADIDELETE.SMF90LTK                                                          
* #PADIDELETE.SMF90CGN                                                          
* #PADIDELETE.SMF90LTL                                                          
* #PADIDELETE.SMF90T23_LEN                                                      
* #PADIDELETE.SMF90T24_LEN                                                      
* #PADIDELETE.SMF90T25_LEN                                                      
* #PADIDELETE.SMF90T30_LEN                                                      
* #PADIDELETE.SMF90T32_LEN                                                      
* #PADIDELETE.SMF90T29_LEN                                                      
* #PADIDELETE.SMF90T31_Len                                                      
* #PADIDELETE.SMF90T33_LEN                                                      
* #PADIDELETE.SMF90T36_LEN                                                      
* #PADIDELETE.SMF90T37_Len                                                      
* #PADIDELETE.SMF90T38_Len_EQU                                                  
* #PADIDELETE.SMF90T38_OldNew_Len_EQU                                           
* #PADIDELETE.SMF90T38_DDJobname_Len_EQU                                        
* #PADIDELETE.SMF90POF                                                          
* #PADIDELETE.SMF90PLN                                                          
* #PADIDELETE.SMF90PON                                                          
* #PADIDELETE.SMF90DOF                                                          
* #PADIDELETE.SMF90DLN                                                          
* #PADIDELETE.SMF90DON                                                          
* Note that SMF90DT/SMF90ID are the same field, but are named                   
* differently in ASM and PL/X. If that is ever corrected (or both               
* names are mapped in both sides) we can remove the following                   
* two statements:                                                               
* #PADIDELETE.SMF90DT                                                           
* #PADIDELETE.SMF90ID                                                           
* #PADIDELETE.SMF89_BOOSTCLASS_SHUTDOWN                                         
* #PADIDELETE.SMF89T2_BOOSTCLASS_SHUTDOWN                                       
* #PADIDELETE.SMF90T40_BOOSTCLASS_SHUTDOWN                                      
* #PADIDELETE.SMF89_BOOSTCLASS_RP                                               
* #PADIDELETE.SMF89T2_BOOSTCLASS_RP                                             
* #PADIDELETE.SMF90T40_BOOSTCLASS_RP                                            
* #EPRAGMA.                                                                     
* @ENDLOGIC;                                                                    
*%IF IBM_CBGENC ^= 'YES' %THEN %GOTO IFASMFRAZ;                                 
*@logic;                                                                        
*#PRAGMA TOOL=CBGENC.                                                           
*#CADDAFTERSTRUCT.smf90t22                                                      
*#include <iwmsmf90.h>                                                          
*#include <ifbsmf90.h>                                                          
*#include <ixcysm90.h>                                                          
*#include <csvdlsmf.h>                                                          
*#include <csvlpsmf.h>                                                          
*#include <cnzmysmf.h>                                                          
*#ECADDAFTERSTRUCT.                                                             
*#CADDAFTERSTRUCT.smf90t35                                                      
*#include <cnzmysm2.h>                                                          
*#include <csvapsmf.h>                                                          
*#include <iefopsmf.h>                                                          
*#ECADDAFTERSTRUCT.                                                             
*#CADDAFTERSTRUCT.smf90t41                                                      
*#include <ihavbsmf.h>                                                          
*#ECADDAFTERSTRUCT.                                                             
*#EPRAGMA.                                                                      
*@endlogic;                                                                     
*%IFASMFRAZ:;                                                                   
