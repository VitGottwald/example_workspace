*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IXCSRVR                               -01/13/18-<0> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  XCF Server Interfaces                         * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5694-A01 COPYRIGHT IBM CORP. 2011                               * 00001200
*                                                                     * 00001300
* STATUS= HBB7780                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      The XCF Server Interface (IXCSRVR) is one of the macros that   * 00002100
*      comprise the XCF Client/Server interfaces.  With these         * 00002200
*      interfaces, a "client" can send a request to a "server" for    * 00002300
*      processing and then receive the "results" provided by the      * 00002400
*      server.  Related macros include the XCF Send Service (IXCSEND) * 00002500
*      which is used to send requests to servers and responses to     * 00002600
*      clients, and the XCF Receive Service (IXCRECV) which is used   * 00002700
*      to obtain the responses sent by the servers.                   * 00002800
*                                                                     * 00002900
*      A "server" uses the IXCSRVR interface to define itself to XCF. * 00003000
*      The server must provide a "server exit" routine for XCF to     * 00003100
*      call when there is a request for the server to process.  When  * 00003200
*      the server finishes processing the request, it uses IXCSEND to * 00003300
*      send a response containing the request results back to the     * 00003400
*      client.  The client uses the IXCRECV interface to receive the  * 00003500
*      response provided by the server.                               * 00003600
*                                                                     * 00003700
*      The IXCSRVR macro completes a parameter list with caller       * 00003800
*      provided data and generates a non-space switch program call to * 00003900
*      an XCF service routine.  When starting a server, the service   * 00004000
*      routine will not return to the caller until the server stops   * 00004100
*      or fails.  The XCF service routine repeatedly calls the server * 00004200
*      exit routine so long as there are requests to process.  Each   * 00004300
*      time it is called, the server exit routine (or its agent)      * 00004400
*      processes the request and as needed, invokes IXCSEND to send a * 00004500
*      response containing the results of the processing.  When the   * 00004600
*      server exit routine returns, XCF will either call it again to  * 00004700
*      process the next request or suspend the work unit until there  * 00004800
*      is a request to process.                                       * 00004900
*                                                                     * 00005000
*                                                                     * 00005100
*      o   Starting Servers                                           * 00005200
*                                                                     * 00005300
*          One or more servers can be started for the same server     * 00005400
*          name.  Each such server is a server instance.  The servers * 00005500
*          can be started in any address space on any system in the   * 00005600
*          sysplex.  Each server instance has a "server ID" that can  * 00005700
*          be used to uniquely identify that instance.                * 00005800
*                                                                     * 00005900
*          A server instance is in essence a task running the "XCF    * 00006000
*          server stub".  This routine runs in an infinite loop,      * 00006100
*          suspending when there are no requests to process.  When a  * 00006200
*          request arrives, the work unit is resumed and the XCF      * 00006300
*          server stub calls the "server exit routine" to process the * 00006400
*          request.                                                   * 00006500
*                                                                     * 00006600
*          In some cases the term "server" will refer to the          * 00006700
*          collection of server instances for a particular server     * 00006800
*          name.  In some cases, the term "server" will refer to one  * 00006900
*          particular server instance.                                * 00007000
*                                                                     * 00007100
*          The first call to the server will be an "initialize        * 00007200
*          server" request.  The server exit routine can perform any  * 00007300
*          suitable initialization.  XCF starts the "XCF server stub" * 00007400
*          loop upon successful return from this initialization.  At  * 00007500
*          that point, the server becomes eligible to process work.   * 00007600
*                                                                     * 00007700
*      o   Identifying the Target Server                              * 00007800
*                                                                     * 00007900
*          When a client uses the IXCSEND macro to send a request to  * 00008000
*          a server, it must indicate which server is to receive the  * 00008100
*          request.  Typically, the target server is identified by a  * 00008200
*          combination of server name and system.  XCF sends the      * 00008300
*          request to the indicated system and presents the request   * 00008400
*          to a suitable instance of the named server.  Given a       * 00008500
*          choice of suitable server instances, XCF will present the  * 00008600
*          request to an instance that is not currently busy          * 00008700
*          processing a request.  Alternatively, the client can use   * 00008800
*          the "server ID" to send the request to a particular        * 00008900
*          instance of the server.                                    * 00009000
*                                                                     * 00009100
*          So the client must either know the name of the server, or  * 00009200
*          it must know the server ID.  The server may have a name    * 00009300
*          that is "well known" to its clients.  Alternatively,       * 00009400
*          installation parameters might be used to determine the     * 00009500
*          server name, and the client must know how to derive the    * 00009600
*          server name from those parameters.  It may be that the     * 00009700
*          client/server application has a protocol that allows the   * 00009800
*          names of servers to be constructed dynamically, perhaps    * 00009900
*          for example as a combination of an application name,       * 00010000
*          system name, and/or perhaps job name.                      * 00010100
*                                                                     * 00010200
*          XCF also has services that will return information about   * 00010300
*          the instantiated servers, such as the server name, server  * 00010400
*          ID, and information provided by the server (keyword INFO   * 00010500
*          when starting the server with IXCSRVR).  For example, one  * 00010600
*          can send a request to the XCF Server to have it respond    * 00010700
*          with information about the various servers defined in the  * 00010800
*          sysplex (see the IXCREQ macro for details).  Even with a   * 00010900
*          list of server names, the client must still be able to     * 00011000
*          recognize which servers are relevant to its requests.      * 00011100
*          Since server names should start with an application or     * 00011200
*          component name, inspecting section 1 of the server name    * 00011300
*          will eliminate most of the servers not related to the      * 00011400
*          application.  Also note that when a server is              * 00011500
*          instantiated, it can provide 64 bytes of control           * 00011600
*          information which may help clients determine the           * 00011700
*          appropriate server(s) for a given application.  In the     * 00011800
*          end, it is the responsibility of the client and server to  * 00011900
*          devise a server naming scheme that allows the client to    * 00012000
*          identify the appropriate server.                           * 00012100
*                                                                     * 00012200
*      o   Startup Timing Issues                                      * 00012300
*                                                                     * 00012400
*          When a client sends a request to a server, it may not      * 00012500
*          necessarily know whether the server is up.  It could be    * 00012600
*          that the request arrives before any instance of the server * 00012700
*          has started.  In such cases, the request is discarded and  * 00012800
*          XCF sends back an acknowledgment to indicate that there is * 00012900
*          "no receiver".                                             * 00013000
*                                                                     * 00013100
*          How can the client determine when the server comes up?     * 00013200
*          There are several possibilities.  The client could         * 00013300
*          periodically poll by sending requests to the server, or by * 00013400
*          sending requests to the XCF Server to get information      * 00013500
*          about servers that have been defined (see the IXCREQ macro * 00013600
*          for details).  Alternatively, the application could be     * 00013700
*          structured such that both the client and the server run    * 00013800
*          servers.  The client could start a server whose role is to * 00013900
*          receive "I am up" messages from the "real" servers.  After * 00014000
*          an "I am up" message is received from the "real" server,   * 00014100
*          the client could start sending requests.                   * 00014200
*                                                                     * 00014300
*      o   Client/Server Compatibility                                * 00014400
*                                                                     * 00014500
*          In a sysplex, software maintenance and software upgrades   * 00014600
*          are typically applied in a "rolling" fashion, with new     * 00014700
*          software being installed on one system at a time.  It may  * 00014800
*          take weeks or months for the change to be fully deployed   * 00014900
*          throughout the sysplex.  In the mean time, installations   * 00015000
*          expect applications to remain available and operational.   * 00015100
*          Thus different levels of clients, servers, or both can be  * 00015200
*          running simultaneously in the sysplex, perhaps even within * 00015300
*          the same system.  Clients might require their requests to  * 00015400
*          be processed either by servers running at certain levels   * 00015500
*          or by servers that support certain features.  A given      * 00015600
*          server might be able to offer different kinds of response  * 00015700
*          data depending on what the client understands.  Some       * 00015800
*          levels of a client might be incompatible with some levels  * 00015900
*          of a server.                                               * 00016000
*                                                                     * 00016100
*          XCF provides protocols intended to help clients and        * 00016200
*          servers function compatibly with mixed levels of support   * 00016300
*          and functionality.  In particular, these protocols provide * 00016400
*          the criteria that XCF uses to determine whether a server   * 00016500
*          instance is suitable for processing a given request.  A    * 00016600
*          request will not be presented to a particular server       * 00016700
*          instance if the instance is not suitable for the request.  * 00016800
*                                                                     * 00016900
*          When a server is started, it can specify the range of      * 00017000
*          server levels that it supports (MINLEVEL, MAXLEVEL), the   * 00017100
*          range of client levels whose requests it is willing to     * 00017200
*          accept (MINCLIENT, MAXCLIENT), and the set of features     * 00017300
*          that it supports (FEATURES).  When a client uses IXCSEND   * 00017400
*          to send a request, it specifies its own level              * 00017500
*          (CLIENTLEVEL) and the routing criteria (CRITERIA) that XCF * 00017600
*          is to use to determine which instances of a server are     * 00017700
*          suitable for the request.  The routing criteria indicate   * 00017800
*          the range of server levels that are suitable for the       * 00017900
*          request and the features that the server must support in   * 00018000
*          order to process the request.  The desired server levels   * 00018100
*          and features, as well as the client level are passed to    * 00018200
*          the server exit routine when the request is presented for  * 00018300
*          processing.  The actual content and interpretation of the  * 00018400
*          levels and features is determined by the client and        * 00018500
*          server.  As described below, XCF compares the requirements * 00018600
*          of the request against the support offered by the server   * 00018700
*          to determine whether a given instance of the server is     * 00018800
*          suitable for the request.                                  * 00018900
*                                                                     * 00019000
*          The initial release of a client/server application would   * 00019100
*          likely default to zero for all levels and features as the  * 00019200
*          base starting point.  So initially every server instance   * 00019300
*          can process every request.  Sometime later the             * 00019400
*          installation might install a new version of the server     * 00019500
*          and/or a new version of the client.  Let us consider some  * 00019600
*          examples of how these routing criteria could be used to    * 00019700
*          ensure that various levels of clients and servers work     * 00019800
*          compatibly.                                                * 00019900
*                                                                     * 00020000
*                                                                     * 00020100
*          -   Server Upgrade                                         * 00020200
*                                                                     * 00020300
*              Suppose the new level 1 release of a server supports   * 00020400
*              all the old level 0 functionality.  When it starts, it * 00020500
*              would indicate that it supports server levels 0 to 1.  * 00020600
*              The clients running in the sysplex might not yet have  * 00020700
*              been upgraded to understand server level 1, so they    * 00020800
*              continue to request server level 0 for their requests. * 00020900
*              Since the new level 1 server supports server level 0   * 00021000
*              functionality as well, the new level 1 server can      * 00021100
*              process those requests.  If there was both a level 0   * 00021200
*              and a level 1 server instance running, either one      * 00021300
*              would be suitable for such requests.                   * 00021400
*                                                                     * 00021500
*              If instead the new level 1 server was not compatible   * 00021600
*              with the level 0 server protocols or functionality, it * 00021700
*              would indicate that it supports only server level 1.   * 00021800
*              Again suppose older versions of the clients are        * 00021900
*              running in the sysplex.  They are unaware of server    * 00022000
*              level 1, and thus do not know that server level 1 is   * 00022100
*              incompatible with their request.  However, being down  * 00022200
*              level, they are still specifying server level 0 for    * 00022300
*              their requests.  Because the new level 1 server does   * 00022400
*              not support server level 0 requests, it will not be    * 00022500
*              seen as a suitable server for these requests.  They    * 00022600
*              would have to be processed by a server that supports   * 00022700
*              server level 0.  This usage might allow for example,   * 00022800
*              two different product releases to coexist at the same  * 00022900
*              time.  The server level ensures that the requests from * 00023000
*              old clients are processed by old servers, and new      * 00023100
*              requests are processed by new servers -- even if both  * 00023200
*              releases used the same server names.                   * 00023300
*                                                                     * 00023400
*              One might also use the server name to ensure that      * 00023500
*              requests are processed by a suitable server.  If a new * 00023600
*              release changes the server names, the new server would * 00023700
*              only receive requests from clients that have been      * 00023800
*              upgraded to target requests to servers using the new   * 00023900
*              names.  There would not be any need to change the      * 00024000
*              supported server levels in this scenario, or           * 00024100
*              alternatively, they could be reset to 0.               * 00024200
*                                                                     * 00024300
*          -   Client Upgrade                                         * 00024400
*                                                                     * 00024500
*              Suppose a new release of a client is installed and     * 00024600
*              this new client understands how to interact with a new * 00024700
*              server level 1.  In particular, the new client will    * 00024800
*              know whether and which of its requests are compatible  * 00024900
*              with which server levels.  There may be requests that  * 00025000
*              should only be processed by a level 0 server, some     * 00025100
*              that can be processed by either level, and some that   * 00025200
*              can only be processed by the new level 1 server.  When * 00025300
*              it sends requests, the new client is expected to       * 00025400
*              indicate the appropriate server level range for its    * 00025500
*              request: (0..0) for requests restricted to level 0     * 00025600
*              servers, (0..1) for requests that can be processed by  * 00025700
*              a server at either level, and (1..1) for requests that * 00025800
*              can only be processed by a level 1 server.             * 00025900
*                                                                     * 00026000
*              When a client request arrives, the target system might * 00026100
*              have server instances A, B, and C supporting server    * 00026200
*              levels (0..0), (0..1), and (1..1) respectively.  If    * 00026300
*              the request specified server levels (0..0), server     * 00026400
*              instances A and B are suitable because they are both   * 00026500
*              willing to accept requests for server level 0.  If the * 00026600
*              request specified server levels (1..1), server         * 00026700
*              instances B and C are suitable because they are both   * 00026800
*              willing to accept requests for server level 1.  If the * 00026900
*              request specified server levels (0..1), any of the     * 00027000
*              server instances will be suitable for the request      * 00027100
*              because each of them is willing to accept requests for * 00027200
*              one or more of the server levels requested by the      * 00027300
*              client.                                                * 00027400
*                                                                     * 00027500
*              Note that the client level was not incremented as part * 00027600
*              of the upgrade.  The client behavior is not            * 00027700
*              fundamentally changed simply because it understands a  * 00027800
*              new server level.  In general, the client level should * 00027900
*              only be updated if there is a need to indicate that    * 00028000
*              the client understands some incompatibility introduced * 00028100
*              by a server.                                           * 00028200
*                                                                     * 00028300
*              For example, we saw in the "server upgrade" section    * 00028400
*              above that a new server release could change the range * 00028500
*              of supported server levels to exclude requests from    * 00028600
*              down level clients.  An alternative way for an uplevel * 00028700
*              server to exclude requests from a downlevel client is  * 00028800
*              to advance the minimum acceptable client level.  It    * 00028900
*              might be that the upgraded clients specify client      * 00029000
*              level 1.  The server might then indicate that it will  * 00029100
*              only accept requests from clients that are at least    * 00029200
*              level 1.  So even though the server levels have not    * 00029300
*              changed, requests from the older level 0 clients will  * 00029400
*              not be presented to the server instance.               * 00029500
*                                                                     * 00029600
*          -   An Example                                             * 00029700
*                                                                     * 00029800
*              Sometimes the upgrade path for a client/server         * 00029900
*              application can be rather involved.  Suppose we have   * 00030000
*              level 0 clients and level 0 servers installed.  The    * 00030100
*              application needs to remain available during an        * 00030200
*              upgrade to level 1 clients and servers, but the level  * 00030300
*              1 functionality when fully deployed is incompatible    * 00030400
*              with level 0.  The upgrade path might look something   * 00030500
*              like this.                                             * 00030600
*                                                                     * 00030700
*              First, the level 0 clients are upgraded with support   * 00030800
*              to allow them to operate compatibly with a level 1     * 00030900
*              server.  The level 0 clients might now specify server  * 00031000
*              level (0..1) when sending requests.  Since the servers * 00031100
*              have not yet been upgraded, the requests continue to   * 00031200
*              be processed by the level 0 servers.  The compatible   * 00031300
*              clients would still be functioning at level 0 since    * 00031400
*              they know that they have to operate with a mixture of  * 00031500
*              server levels, the current level 0 servers and the     * 00031600
*              anticipated level 1 servers that will soon be          * 00031700
*              installed.                                             * 00031800
*                                                                     * 00031900
*              After the compatibility support for the clients has    * 00032000
*              been rolled around the sysplex, the servers are        * 00032100
*              upgraded.  The upgraded servers indicate to XCF that   * 00032200
*              they support server level (1..1).  Thus, requests from * 00032300
*              the clients with the compatibility support installed   * 00032400
*              will be accepted by the upgraded servers.  If clients  * 00032500
*              without the compatibility support were somehow still   * 00032600
*              running (presumably a mistake), their requests would   * 00032700
*              not be presented to the upgraded server because those  * 00032800
*              requests still specify server level (0..0).  Note that * 00032900
*              the compatibility mode clients are still sending       * 00033000
*              requests with level 0 content because they had to be   * 00033100
*              able to communicate with servers running at both level * 00033200
*              (0..0) and (0..1).  Thus, despite having indicated to  * 00033300
*              XCF that the upgraded servers only support server      * 00033400
*              level (1..1), these servers in fact must continue to   * 00033500
*              process requests with level 0 content because that is  * 00033600
*              the content still being sent by the compatibility mode * 00033700
*              clients.  The server might provide data (INFO) as      * 00033800
*              needed to make this clear to those who might need to   * 00033900
*              know.                                                  * 00034000
*                                                                     * 00034100
*              After the compatibility mode servers have been rolled  * 00034200
*              around the sysplex, the clients can be upgraded to     * 00034300
*              send requests with level 1 content.  The clients can   * 00034400
*              now do so because all the servers should be running    * 00034500
*              with support that understands level 1.  Thus the new   * 00034600
*              clients will specify server level (1..1) when sending  * 00034700
*              requests.  If servers without the compatibility        * 00034800
*              support were somehow still running (presumably a       * 00034900
*              mistake), they would not receive requests from the new * 00035000
*              level 1 clients because those servers still indicate   * 00035100
*              that their supported range of server levels is (0..0). * 00035200
*              Note that the clients will now specify that they are   * 00035300
*              running at client level 1.                             * 00035400
*                                                                     * 00035500
*              After all the clients have been upgraded to level 1,   * 00035600
*              the servers can finally be upgraded to level 1.  These * 00035700
*              server instances will continue to indicate that their  * 00035800
*              supported range of server levels is (1..1).  In        * 00035900
*              addition, they will indicate that the minimum          * 00036000
*              acceptable client level is level 1 because it should   * 00036100
*              be the case that all the clients are at level 1.  Thus * 00036200
*              the server can safely operate with full level 1        * 00036300
*              functionality.  There is no danger that a level 0      * 00036400
*              request will be presented to the level 1 server.  As   * 00036500
*              before, requests from clients running without the      * 00036600
*              compatibility support will be excluded since their     * 00036700
*              requested server level (0..0) is not in the range      * 00036800
*              (1..1) supported by the level 1 server.  Requests from * 00036900
*              clients running with the compatibility support (who    * 00037000
*              are still operating at level 0 functionality), will be * 00037100
*              excluded because their client level of 0 is not        * 00037200
*              acceptable to the level 1 server which demands clients * 00037300
*              be at level 1 or higher.  Note that requests from      * 00037400
*              clients running the compatibility support would have   * 00037500
*              been accepted if server level alone was the only       * 00037600
*              consideration -- their requested level of (0..1) can   * 00037700
*              be processed by a server supporting level (1..1).      * 00037800
*                                                                     * 00037900
*          -   Feature Strings                                        * 00038000
*                                                                     * 00038100
*              Feature strings are intended to provide a mechanism by * 00038200
*              which a client can ensure that its request is          * 00038300
*              presented to a server instance that has the            * 00038400
*              functionality needed to process the request.  XCF      * 00038500
*              compares the features requested by a client to the     * 00038600
*              features supported by the server when determining      * 00038700
*              whether the server is suitable for the request.  A     * 00038800
*              client/server application might use feature strings    * 00038900
*              instead of, or in addition to, client and server       * 00039000
*              levels.                                                * 00039100
*                                                                     * 00039200
*              Feature strings can be thought of as a set of flags    * 00039300
*              where each flag corresponds to some feature, function, * 00039400
*              or protocol that a server supports.  With the initial  * 00039500
*              release of a client/server application, no flags need  * 00039600
*              be set.  A feature string is mapped by                 * 00039700
*              ixcysrvr_tFeatures which is defined in the IXCYSRVR    * 00039800
*              macro.  As new releases of the server are installed,   * 00039900
*              or perhaps even as maintenance is applied, a server    * 00040000
*              will support new functions, features, or protocols.    * 00040100
*              When a server is started, it would set one or more     * 00040200
*              feature flags to indicate that it offers the relevant  * 00040300
*              support.                                               * 00040400
*                                                                     * 00040500
*              Presumably there would be clients interested in        * 00040600
*              exploiting these new features.  Some requests might    * 00040700
*              require the new support in order to be processed.      * 00040800
*              Some requests might be such that the new support is    * 00040900
*              desirable, but not absolutely required for the request * 00041000
*              to be processed.  For other requests, the new server   * 00041100
*              support might be completely irrelevant.  Thus a client * 00041200
*              can specify the required features that a server must   * 00041300
*              support in order to process the request.  The server   * 00041400
*              instance selected to process a request must support    * 00041500
*              all of the features required by the sender.            * 00041600
*                                                                     * 00041700
*          -   Response Levels                                        * 00041800
*                                                                     * 00041900
*              When sending a request, a client can specify the       * 00042000
*              desired "response level" for the data it would like to * 00042100
*              receive in reply.  The requested response level is     * 00042200
*              passed to the server exit when the client request is   * 00042300
*              presented for processing.  When a server is upgraded,  * 00042400
*              it might have new data that it can provide in response * 00042500
*              to a request.  Alternatively, a server might offer     * 00042600
*              different levels of detail that it can provide for any * 00042700
*              given request.  For compatibility, a server would      * 00042800
*              generally not reply with the new data unless it knows  * 00042900
*              the requester is prepared to deal with it.  Blindly    * 00043000
*              returning the new data could cause the requester to    * 00043100
*              fail.  Perhaps the client is not prepared to deal with * 00043200
*              the increased storage requirements for additional      * 00043300
*              data, or perhaps the client will not correctly process * 00043400
*              existing data that has a new interpretation.           * 00043500
*              Regardless, when the server sends a reply, it can      * 00043600
*              indicate the level of data being provided              * 00043700
*              (SUPPLIEDLEVEL) as well as the maximum level it could  * 00043800
*              support (SUPPORTSLEVEL).  These levels are reported to * 00043900
*              the client when it receives the results of its         * 00044000
*              request.                                               * 00044100
*                                                                     * 00044200
*              Servers do not define to XCF the response levels that  * 00044300
*              they support.  Thus XCF does not account for response  * 00044400
*              level when selecting servers.  However, use of         * 00044500
*              RESPONSELEVEL (and SUPPLIEDLEVEL and SUPPORTSLEVEL) on * 00044600
*              the IXCSEND macro may prove useful for dealing with    * 00044700
*              mixed release levels.                                  * 00044800
*                                                                     * 00044900
*                                                                     * 00045000
*                                                                     * 00045100
*          A given client/server application is not required to       * 00045200
*          exploit the protocols offered by XCF to assist with the    * 00045300
*          client/server compatibility issues.  Nor is the            * 00045400
*          application required to exploit them for the purposes for  * 00045500
*          which they are intended.  For example, one could exploit   * 00045600
*          server levels to get requests routed to server instances   * 00045700
*          based on some application criteria.  Perhaps a server at   * 00045800
*          level 27 is dedicated to processing function number 27.    * 00045900
*                                                                     * 00046000
*          Regardless of whether or how the XCF protocols are         * 00046100
*          exploited, the issue of running mixed levels of clients    * 00046200
*          and servers in a sysplex will need to be addressed.        * 00046300
*          Furthermore, the application designer must consider the    * 00046400
*          XCF protocols because they determine how servers are       * 00046500
*          selected to process a request.                             * 00046600
*                                                                     * 00046700
*      o   Selecting Servers                                          * 00046800
*                                                                     * 00046900
*          If the client explicitly identifies the target servers by  * 00047000
*          their server ID, the client is responsible for determining * 00047100
*          the suitability of the server.                             * 00047200
*                                                                     * 00047300
*          If the client identifies the target server by server name, * 00047400
*          XCF selects a server instance to process the request       * 00047500
*          according to the rules described in the following          * 00047600
*          paragraphs.  When a server is started, it can specify the  * 00047700
*          range of server levels that it supports (MINLEVEL,         * 00047800
*          MAXLEVEL), the range of client levels whose requests it is * 00047900
*          willing to accept (MINCLIENT, MAXCLIENT), and the set of   * 00048000
*          features that it supports (FEATURES).  When a client uses  * 00048100
*          IXCSEND to send a request, it specifies its own level      * 00048200
*          (CLIENTLEVEL) and the routing criteria (CRITERIA) that XCF * 00048300
*          is to use when selecting a server that is suitable  for    * 00048400
*          the request.  The routing criteria indicate the range of   * 00048500
*          server levels that are suitable for the request and the    * 00048600
*          features that the server must support in order to process  * 00048700
*          the request.                                               * 00048800
*                                                                     * 00048900
*          When the request arrives on a system, XCF locates the set  * 00049000
*          of servers instantiated for the specified server name.  If * 00049100
*          the set of instantiated servers is empty, the request is   * 00049200
*          discarded and acknowledged with a "no receiver" response   * 00049300
*          code.                                                      * 00049400
*                                                                     * 00049500
*          The range of server levels requested by the client is      * 00049600
*          compared to the range of server levels supported by a      * 00049700
*          candidate server instance.  If the requested range does    * 00049800
*          not intersect the supported range, the server is not       * 00049900
*          eligible to process the request.  If no server supports    * 00050000
*          the requested server levels, the request is discarded and  * 00050100
*          acknowledged with a "no receiver" response code.           * 00050200
*                                                                     * 00050300
*          From the server instances that remain, XCF compares the    * 00050400
*          client level to the range of client levels that the server * 00050500
*          is willing to accept.  If the client level is not within   * 00050600
*          the supported range, the server is not eligible to process * 00050700
*          the request.  If no server supports the requested client   * 00050800
*          levels, the request is discarded and acknowledged with a   * 00050900
*          "no receiver" response code.                               * 00051000
*                                                                     * 00051100
*          From the server instances that remain, XCF compares the    * 00051200
*          features required for the request to the set of features   * 00051300
*          supported by the server.  The features are specified as a  * 00051400
*          feature string, which contains a feature level and feature * 00051500
*          flags.  If the feature level required by the request is    * 00051600
*          larger than the feature level supported by the server, the * 00051700
*          server is not eligible to process the request.  If the     * 00051800
*          required feature level equals the server feature level,    * 00051900
*          the server is deemed suitable for the request only if the  * 00052000
*          server supports every feature (flag) requested by the      * 00052100
*          client.  If the required feature level is less than the    * 00052200
*          server feature level, the server is suitable.  If no       * 00052300
*          server supports the required features, the request is      * 00052400
*          discarded and acknowledged with a "no receiver" response   * 00052500
*          code.                                                      * 00052600
*                                                                     * 00052700
*          At this point any server instance that remains is suitable * 00052800
*          for the request with respect to server level, client       * 00052900
*          level, and required features.  From this set of suitable   * 00053000
*          server instances, XCF determines which ones are currently  * 00053100
*          available to process work and selects one to process the   * 00053200
*          request.  If none of the suitable servers are currently    * 00053300
*          available, the request is queued and held for processing   * 00053400
*          until a suitable server becomes available.  If all of the  * 00053500
*          servers suitable for the request subsequently terminate,   * 00053600
*          the request is discarded and acknowledged with a "no       * 00053700
*          receiver" response code.                                   * 00053800
*                                                                     * 00053900
*      o   Server Exit Routine                                        * 00054000
*                                                                     * 00054100
*          After selecting a server instance to process the request,  * 00054200
*          XCF constructs a parameter list appropriate to the type of * 00054300
*          request being presented to the server.  The parameter list * 00054400
*          resides in the primary address space of the server and in  * 00054500
*          storage that has the same key as the caller (invoker of    * 00054600
*          IXCSRVR).  XCF puts the address of the parameter list in   * 00054700
*          register 1 and calls the server exit routine.  Register    * 00054800
*          R13 will be the same value as when the IXCSRVR macro was   * 00054900
*          invoked to start the server (including AR13 if invoked in  * 00055000
*          AR mode).  The server exit routine receives control in the * 00055100
*          same environment that was in effect when the IXCSRVR macro * 00055200
*          was invoked to start the server, except that it will be    * 00055300
*          running under XCF recovery.  In particular, the XCF server * 00055400
*          stub establishes its own recovery environment and calls    * 00055500
*          the server exit routine in the same addressing mode, the   * 00055600
*          same ASC mode, with the same PSW key, and in the same      * 00055700
*          state (supervisor or problem) as when the IXCSRVR macro    * 00055800
*          was invoked to start the server.                           * 00055900
*                                                                     * 00056000
*          The server exit routine is passed a "server exit parameter * 00056100
*          list" (SXPL) which is mapped by ixcysrvr_tSXPL in macro    * 00056200
*          IXCYSRVR.  A "server code" within that parameter list      * 00056300
*          identifies the specific type of processing that the server * 00056400
*          exit is to perform.  Additional parameters unique to the   * 00056500
*          server code are also provided.  For example, when called   * 00056600
*          to process a client request, a server is presented with    * 00056700
*          parameters to describe the request (mapped by              * 00056800
*          ixcysrvr_tRequest) as well as a copy of the message data   * 00056900
*          sent by the client.  See the IXCYSRVR macro for additional * 00057000
*          details.                                                   * 00057100
*                                                                     * 00057200
*          The server must provide a "work area" for XCF to use when  * 00057300
*          calling the server exit.  As needed, XCF uses the work     * 00057400
*          area to store additional parameters related to the request * 00057500
*          that is to be processed.  For example, the work area will  * 00057600
*          contain a copy of the message data provided by the client  * 00057700
*          that sent the request to the server (the data specified by * 00057800
*          the MSGDATA keyword or described by the MSGDESC keyword on * 00057900
*          the IXCSEND SENDTO=SERVER invocation that sent the         * 00058000
*          request).  In general, the Server Exit Parameter List will * 00058100
*          contain information that allows the server exit routine to * 00058200
*          determine where within the work area the relevant data     * 00058300
*          resides.                                                   * 00058400
*                                                                     * 00058500
*          Each time the server exit routine is called, the SXPL      * 00058600
*          contains a "work area descriptor" (SXPL_WAD) for the work  * 00058700
*          area that XCF is currently using.  Upon return from the    * 00058800
*          server exit routine, XCF examines the work area descriptor * 00058900
*          to determine what work area storage is to be used for      * 00059000
*          subsequent calls to the server exit routine.  Thus the     * 00059100
*          server can dynamically provide new work areas to XCF as    * 00059200
*          needed.  For some servers, it might be possible to use the * 00059300
*          same work area over and over again for each call to the    * 00059400
*          server exit.  For others, it might be appropriate for XCF  * 00059500
*          to use a new work area each time the server exit is        * 00059600
*          called.                                                    * 00059700
*                                                                     * 00059800
*          If the server exit disposes of a work area, it may need to * 00059900
*          be sensitive to the possibility that storage within the    * 00060000
*          work area may contain data that is needed to process the   * 00060100
*          request.  The server exit may need to refrain from         * 00060200
*          accessing such data after the work area is freed, or       * 00060300
*          appropriately preserve a copy of the needed data before    * 00060400
*          the work area is released.                                 * 00060500
*                                                                     * 00060600
*          Before it calls the server exit routine to process a       * 00060700
*          request, XCF determines whether a work area of sufficient  * 00060800
*          size has been provided.  If not, XCF calls the server exit * 00060900
*          routine with a "get work area" request ("server code" =    * 00061000
*          ixcysrvr_kSC_GetWorkArea).  The work area descriptor in    * 00061100
*          the SXPL identifies the current work area, if any.  The    * 00061200
*          server exit is expected to dispose of the current work     * 00061300
*          area as appropriate, obtain a new work of sufficient size, * 00061400
*          update the SXPL_WAD to describe the new work area, and     * 00061500
*          return to XCF.  XCF will then prepare the relevant         * 00061600
*          request, storing relevant data in the work area, and then  * 00061700
*          call the server exit routine to process the request.       * 00061800
*                                                                     * 00061900
*          If the server exit fails to provide a work area suitable   * 00062000
*          for processing the request, XCF cancels the request with a * 00062100
*          response code indicating that the server failed to provide * 00062200
*          a suitable work area, and thus refused to process the      * 00062300
*          request.                                                   * 00062400
*                                                                     * 00062500
*      o   Server Exit Failures                                       * 00062600
*                                                                     * 00062700
*          A server exit routine is deemed to have failed if it fails * 00062800
*          to field an error, or if it violates the rules of the XCF  * 00062900
*          interface.  If the server exit fails, XCF will either      * 00063000
*          return to the invoker of the IXCSRVER REQTYPE=START        * 00063100
*          request with a failing return code, or percolate to its    * 00063200
*          recovery environment.  In either case, XCF cleans up its   * 00063300
*          own resources and deletes the definition of the server     * 00063400
*          instance.  Requests for which the failed server was the    * 00063500
*          last suitable instance will be cancelled and acknowledged  * 00063600
*          with a "no receiver" response code.                        * 00063700
*                                                                     * 00063800
*          If a server exit is to establish its own recovery          * 00063900
*          environment, it must do so on each call (and delete it     * 00064000
*          before returning to the XCF server stub).  A server exit   * 00064100
*          routine need not establish recovery as it could rely on    * 00064200
*          the recovery established by the invoker of the IXCSRVR     * 00064300
*          REQTYPE=START request.  In that case, the server exit      * 00064400
*          would likely use the USERDATA provided by the starter to   * 00064500
*          locate control blocks in which it would anchor the         * 00064600
*          resources for which it was responsible.  In the event of   * 00064700
*          an error, the recovery for the XCF server stub routine     * 00064800
*          would get control and percolate to the recovery            * 00064900
*          established by the invoker of the IXCSRVR REQTYPE=START    * 00065000
*          request.  That recovery would then inspect the control     * 00065100
*          blocks updated by the server exit to determine what        * 00065200
*          resources needed to be cleaned up.                         * 00065300
*                                                                     * 00065400
*          If the failed server exit routine was the last suitable    * 00065500
*          server for a set of pending requests, those requests will  * 00065600
*          be cancelled and acknowledged with a response code         * 00065700
*          indicating "no receiver".  To avoid having these pending   * 00065800
*          requests be discarded, one would either need to have the   * 00065900
*          server exit routine establish recovery so that it could    * 00066000
*          field errors and successfully retry, or one would need to  * 00066100
*          ensure that there is some other server instance suitable   * 00066200
*          for the pending requests.  Since some errors are not       * 00066300
*          retriable, one might consider starting at least two server * 00066400
*          instances to help mitigate the risk of there being a       * 00066500
*          window of time where pending requests are discarded        * 00066600
*          because there is no suitable server instance to process    * 00066700
*          them.                                                      * 00066800
*                                                                     * 00066900
*          The invoker of the IXCSRVR REQTYPE=START request can       * 00067000
*          establish an ESTAE recovery environment but not an FRR.    * 00067100
*          The server exit routine can establish either type of       * 00067200
*          recovery environment.                                      * 00067300
*                                                                     * 00067400
*          If the server exit violates the XCF interface, the server  * 00067500
*          is stopped by XCF.  The XCF server stub will return to the * 00067600
*          invoker of the IXCSRVR REQTYPE=START request with a        * 00067700
*          failing return and reason code.  Generally, violations of  * 00067800
*          the interface occur when the server exit routine updates   * 00067900
*          output fields in the Server Exit Parameter List (SXPL) in  * 00068000
*          an inappropriate manner.                                   * 00068100
*                                                                     * 00068200
*      o   Response Codes                                             * 00068300
*                                                                     * 00068400
*          XCF will always try to supply a "response code" to the     * 00068500
*          client to indicate what happened to the request.  For      * 00068600
*          example, a response code might indicate that the request   * 00068700
*          was never sent, or that it was delivered to the server, or * 00068800
*          that the server terminated while procesing the request, or * 00068900
*          that a response was received.                              * 00069000
*                                                                     * 00069100
*          In cases where the server does not intend to send an       * 00069200
*          explicit response to the client (using IXCSEND             * 00069300
*          SENDTO=ORIGINATOR), it can direct XCF to acknowledge the   * 00069400
*          request with a response code indicating that the request   * 00069500
*          was either "processed" or "refused" by the server.  It     * 00069600
*          does so by updating the server exit parameter list to set  * 00069700
*          either the "result code" (SXPL_ResultCode) or the "refusal * 00069800
*          code" (SXPL_RefusalCode) before returning to the XCF       * 00069900
*          server exit stub routine.  If one of these codes is        * 00070000
*          nonzero, XCF will send an acknowledgment to the client to  * 00070100
*          indicate that the request was "delivered" with the         * 00070200
*          indicted result code, or "refused" with the indicated      * 00070300
*          refusal code.                                              * 00070400
*                                                                     * 00070500
*      o   Unresponsive Servers                                       * 00070600
*                                                                     * 00070700
*          XCF monitors the server to ensure that it is making        * 00070800
*          progress.  When the server is started, the FDI             * 00070900
*          specification indicates how long the server can be appear  * 00071000
*          to be unresponsive before XCF deems it to have failed.  If * 00071100
*          the server is deemed to have failed, the server task is    * 00071200
*          subject to being terminated by XCF (abend 00C reason       * 00071300
*          x164).                                                     * 00071400
*                                                                     * 00071500
*          A server waiting for work in the XCF server stub loop is   * 00071600
*          deemed to be responsive if there is no pending work.  When * 00071700
*          the server is selected to process work, it is deemed to be * 00071800
*          responsive if the XCF server stub loop "wakes up" and      * 00071900
*          accepts the work within the server FDI time limit.  After  * 00072000
*          accepting the work item, the XCF server stub may determine * 00072100
*          that a new work area is required to process the request.   * 00072200
*          The server is deemed to be responsive if it provides the   * 00072300
*          requested work area within the FDI time limit.  If the     * 00072400
*          server is processing a request for which there is an       * 00072500
*          associated timeout value (for example, the RESPTIME        * 00072600
*          timeout value from the IXCSEND invocation used to send a   * 00072700
*          client request), the XCF monitor expects the server exit   * 00072800
*          to return to XCF within FDI seconds after the timeout      * 00072900
*          expires.  If there is no associated timeout, the server    * 00073000
*          exit is expected to return to XCF within FDI seconds.  If  * 00073100
*          the server returns within the specified time, it is deemed * 00073200
*          to be responsive.                                          * 00073300
*                                                                     * 00073400
*          For example, suppose the server exit was called to process * 00073500
*          a client request that had a timeout value of 100 seconds   * 00073600
*          (IXCSEND SENDTO=SERVER RESPTIME=100).  XCF would allow the * 00073700
*          server to process the request for as long as 100 seconds.  * 00073800
*          After 100 seconds have elapsed, XCF allows up to FDI more  * 00073900
*          seconds for the server exit routine to return to XCF.  If  * 00074000
*          it fails to do so, XCF deems the server to be              * 00074100
*          unresponsive.                                              * 00074200
*                                                                     * 00074300
*      o   Stopping Servers                                           * 00074400
*                                                                     * 00074500
*          A server exit routine can voluntarily terminate by setting * 00074600
*          the "stop code" (SXPL_StopCode) in the Server Exit         * 00074700
*          Parameter List (mapped by ixcysrvr_tSXPL in macro          * 00074800
*          IXCYSRVR) to a nonzero value.  Upon return from the server * 00074900
*          exit routine, XCF will then terminate the server stub loop * 00075000
*          and return to the caller who invoked IXCSRVR REQTYPE=START * 00075100
*          to start the server instance.  The IXCSRVR return and      * 00075200
*          reason code for the START request is determined by the     * 00075300
*          "stop code" when the server exit stops in this manner (the * 00075400
*          macro IXCYSRVR describes the correlation).                 * 00075500
*                                                                     * 00075600
*          Servers can also be stopped by invoking the IXCSRVR macro  * 00075700
*          to process a REQTYPE=STOP request.  The service routine    * 00075800
*          indicates that the designated server instances are to      * 00075900
*          stop, and then returns to the caller.  Stop processing     * 00076000
*          occurs asynchronously.  Thus there may still be instances  * 00076100
*          of the server running upon return from the stop request.   * 00076200
*                                                                     * 00076300
*          When invoking IXCSRVR to stop a server, the server can be  * 00076400
*          stopped in one of two ways: normal or immediate.  For a    * 00076500
*          normal stop, the server is allowed to finish processing    * 00076600
*          any suitable work that was being processed and/or queued   * 00076700
*          for processing prior to the arrival and acceptance of the  * 00076800
*          stop request.  For an immediate stop, the server is        * 00076900
*          allowed to finish the request that is currently being      * 00077000
*          processed (if any).  However, the server will not process  * 00077100
*          any queued work that might have been suitable for the      * 00077200
*          server.                                                    * 00077300
*                                                                     * 00077400
*          When the last instance of a server stops, XCF deletes the  * 00077500
*          server definition.  If any work remains pending when the   * 00077600
*          last instance is stopped, the work is cancelled and        * 00077700
*          discarded in an appropriate fashion.  For example, if the  * 00077800
*          cancelled work item was a client request that was          * 00077900
*          expecting a reply, the request would be cancelled and      * 00078000
*          acknowledged with a "no receiver" response code.           * 00078100
*                                                                     * 00078200
*          The IXCSRVR macro only stops servers that are instantiated * 00078300
*          on the system where the macro is invoked.  To stop servers * 00078400
*          on other systems, one could for example, send a "stop      * 00078500
*          request" to the server that would be presented to and      * 00078600
*          processed by the server exit routine as it would any other * 00078700
*          request.  Presumably the server exit would set the "stop   * 00078800
*          code" to have XCF exit the server loop.  However, note     * 00078900
*          that the stop request will be processed just like any      * 00079000
*          other request.  If the server is hung or has a long queue  * 00079100
*          of pending requests, there might be significant delay      * 00079200
*          before the stop request is processed (if ever).  Note that * 00079300
*          failure to process requests would eventually make the      * 00079400
*          unresponsive server instance subject to termination by     * 00079500
*          XCF.                                                       * 00079600
*                                                                     * 00079700
*          If a server exit routine is in the XCF server exit stub    * 00079800
*          loop when the stop is recognized, XCF will exit the loop   * 00079900
*          and return to the caller who invoked IXCSRVR REQTYPE=START * 00080000
*          to start the server instance.  The IXCSRVR return code for * 00080100
*          the START request is set to 4 and the reason code          * 00080200
*          indicates how the server was stopped.  The reason code     * 00080300
*          could indicate that the XCF server exit loop terminated    * 00080400
*          normally, or that the server was abnormally terminated.    * 00080500
*                                                                     * 00080600
*          Note that the server exit routine can invoke the IXCSRVR   * 00080700
*          macro to stop itself if it so chooses.                     * 00080800
*                                                                     * 00080900
*      o   Response Binds                                             * 00081000
*                                                                     * 00081100
*          For most requests, the server will be expected to provide  * 00081200
*          a response to the sender.  The response might for example  * 00081300
*          always be sent by the server exit routine.  Alternatively, * 00081400
*          the server exit routine might arrange for some other work  * 00081500
*          unit to send the response.  Depending on the               * 00081600
*          implementation of the server, it might be the case that    * 00081700
*          responsibility for sending the response varies depending   * 00081800
*          on the type of request.                                    * 00081900
*                                                                     * 00082000
*          Requesters will generally be held up until the anticipated * 00082100
*          response arrives or a timeout value expires (RESPTIME      * 00082200
*          keyword on IXCSEND).  It may be the case that the server   * 00082300
*          or its agent suffers an unrecoverable failure before it    * 00082400
*          can send the response.  In such a case, the requester will * 00082500
*          then be held up until the timeout expires.                 * 00082600
*                                                                     * 00082700
*          When a server is started, one can establish a default      * 00082800
*          "response bind" to indicate who has responsibility for     * 00082900
*          sending the response to a request.  For example, one might * 00083000
*          indicate that the server exit routine is responsible for   * 00083100
*          sending the response.  Now suppose that XCF determines     * 00083200
*          that the server exit failed while processing a request     * 00083300
*          that expects a response.  XCF will then cancel the         * 00083400
*          expected response on behalf of the failed server exit.     * 00083500
*          That is, XCF will indicate to the requester that the       * 00083600
*          anticipated response will not be coming.  Thus the         * 00083700
*          requester will not be forced to endure the full timeout    * 00083800
*          before it is allowed to resume processing.                 * 00083900
*                                                                     * 00084000
*          The "response bind" can be assigned to the server exit     * 00084100
*          routine, to the server address space, or the to the system * 00084200
*          on which the server instance resides.  If assigned to the  * 00084300
*          server exit routine, XCF will cancel the response if the   * 00084400
*          server instance terminates (task termination, address      * 00084500
*          space termination, or system termination).  If assigned to * 00084600
*          the server address space, XCF will cancel the response if  * 00084700
*          the address space terminates (which inludes system         * 00084800
*          termination).  If assigned to the local system, XCF will   * 00084900
*          cancel the response only if the system terminates.         * 00085000
*                                                                     * 00085100
*          Since responsibility for sending the response could vary   * 00085200
*          by request, the server exit routine can update the Server  * 00085300
*          Exit Parameter List (SXPL_RespBind) to assign              * 00085400
*          responsibility for sending the response to some other      * 00085500
*          entity.  Thus the server exit routine can specify the      * 00085600
*          response bind on a request by request basis.               * 00085700
*                                                                     * 00085800
*                                                                     * 00085900
*                                                                     * 00086000
*      The IXCSRVR macro is provided in list, execute, and standard   * 00086100
*      form.  The list form accepts no variable parameters and is     * 00086200
*      used only to reserve space for the parameter list.  The        * 00086300
*      standard form is provided for use with routines which do not   * 00086400
*      require reentrant code.  The execute form is provided for use  * 00086500
*      with the list format for reentrant routines.  The IXCSRVR      * 00086600
*      macro is provided in PL/X and assembler formats.               * 00086700
*                                                                     * 00086800
*      The storage containing the IXCSRVR parameter list, as well as  * 00086900
*      the storage areas referenced by certain keywords (SERVER,      * 00087000
*      SERVERID, INFO, DESCRIPTION), must reside in the primary       * 00087100
*      address space of the caller, or in a space addressable via a   * 00087200
*      public entry on the dispatchable unit access list (DU-AL), or  * 00087300
*      in a common area data space.  XCF uses the key of the caller   * 00087400
*      when accessing these storage areas.                            * 00087500
*                                                                     * 00087600
*      If the parameter list, or the storage areas referenced by      * 00087700
*      certain keywords (SERVER, SERVERID, INFO, DESCRIPTION) do not  * 00087800
*      reside in the primary address space of the caller, the caller  * 00087900
*      must be running in Access Register ASC mode.                   * 00088000
*                                                                     * 00088100
*                                                                     * 00088200
*                                                                     * 00088300
*      INPUT REGISTERS:                                               * 00088400
*                                                                     * 00088500
*                                                                     * 00088600
*                          GR0-GR1     reserved                       * 00088700
*                                                                     * 00088800
*                          GR2-GR12    undefined                      * 00088900
*                                                                     * 00089000
*                          GR13        When starting a server, value  * 00089100
*                                      to be set in GR13 when XCF     * 00089200
*                                      calls the server exit routine. * 00089300
*                                      Otherwise undefined.           * 00089400
*                                                                     * 00089500
*                          GR14-GR15   reserved                       * 00089600
*                                                                     * 00089700
*                          AR0-AR1     reserved                       * 00089800
*                                                                     * 00089900
*                          AR2-AR12    undefined                      * 00090000
*                                                                     * 00090100
*                          AR13        When starting a server in AR   * 00090200
*                                      mode, value to be set in AR13  * 00090300
*                                      when XCF calls the server exit * 00090400
*                                      routine.  When starting a      * 00090500
*                                      server in primary mode, the    * 00090600
*                                      AR13 will be zero when XCF     * 00090700
*                                      calls the server exit routine. * 00090800
*                                      Otherwise undefined.           * 00090900
*                                                                     * 00091000
*                          AR14-AR15   reserved                       * 00091100
*                                                                     * 00091200
*                                                                     * 00091300
*                                                                     * 00091400
*      OUTPUT ENVIRONMENT: Same as on entry                           * 00091500
*                                                                     * 00091600
*      OUTPUT REGISTERS:                                              * 00091700
*                                                                     * 00091800
*                                                                     * 00091900
*                          GR0         reason code based on GR15 or 0 * 00092000
*                                                                     * 00092100
*                          GR1         unpredictable                  * 00092200
*                                                                     * 00092300
*                          GR2-GR13    unchanged                      * 00092400
*                                                                     * 00092500
*                          GR14        unpredictable                  * 00092600
*                                                                     * 00092700
*                          GR15        return code                    * 00092800
*                                                                     * 00092900
*                          AR0-AR1     unpredictable                  * 00093000
*                                                                     * 00093100
*                          AR2-AR13    unchanged                      * 00093200
*                                                                     * 00093300
*                          AR14-AR15   unpredictable                  * 00093400
*                                                                     * 00093500
*                                                                     * 00093600
*                                                                     * 00093700
*                                                                     * 00093800
*                                                                     * 00093900
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00094000
*                                                                     * 00094100
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00094200
*                                                                     * 00094300
*01* ENVIRONMENT:                                                     * 00094400
*                                                                     * 00094500
*                                                                     * 00094600
*      Dispatchable unit mode:                                        * 00094700
*                         For REQTYPE=START: Task mode                * 00094800
*                         For REQTYPE=STOP: Task or SRB mode.         * 00094900
*                                                                     * 00095000
*      Minimum authorization: Supervisor state or PKM allowing keys   * 00095100
*                        0-7.                                         * 00095200
*                                                                     * 00095300
*      AMODE:            31- or 64-bit.                               * 00095400
*                                                                     * 00095500
*                        If in 64-bit mode, specify SYSSTATE          * 00095600
*                        AMODE64=YES before invoking this macro.      * 00095700
*                                                                     * 00095800
*      ASC mode:         Primary or Access Register.                  * 00095900
*                                                                     * 00096000
*                        If in Access Register ASC mode, specify      * 00096100
*                        SYSSTATE ASCENV=AR before invoking this      * 00096200
*                        macro.                                       * 00096300
*                                                                     * 00096400
*                        For REQTYPE=START, any primary address       * 00096500
*                        space.  Primary, secondary, and home must be * 00096600
*                        the same space.                              * 00096700
*                                                                     * 00096800
*                        For REQTYPE=STOP, any primary address space; * 00096900
*                        any secondary address space; any home        * 00097000
*                        address space.                               * 00097100
*                                                                     * 00097200
*      Interrupt status: Enabled for I/O and external interrupts      * 00097300
*                                                                     * 00097400
*      Locks:            No locks held                                * 00097500
*                                                                     * 00097600
*                                                                     * 00097700
*                                                                     * 00097800
*01* RESTRICTIONS:                                                    * 00097900
*                                                                     * 00098000
*    REQTYPE=START has the following restrictions:                    * 00098100
*                                                                     * 00098200
*                                                                     * 00098300
*    o   No EUT FRR set.                                              * 00098400
*                                                                     * 00098500
*    o   IXCSRVR cannot be used by tasks higher in the task tree than * 00098600
*        the cross memory resource owning task (the top, or first,    * 00098700
*        job step task in the address space).                         * 00098800
*                                                                     * 00098900
*    o   Cannot be invoked by an address space resource manager.      * 00099000
*                                                                     * 00099100
*    o   Cannot be invoked by a task that is being terminated.        * 00099200
*                                                                     * 00099300
*                                                                     * 00099400
*                                                                     * 00099500
*01* SYNTAX:                                                          * 00099600
*                                                                     * 00099700
*Ýxlabel¨  IXCSRVR  Ð  REQTYPE=START                                  * 00099800
*                   !     ,SERVER=xserver                             * 00099900
*                   !     ,DESCRIPTION=xdescription                   * 00100000
*                   !    Ý,FEATURES=»xfeatures!0º¨                    * 00100100
*                   !    Ý,MINLEVEL=»xminlevel!0º¨                    * 00100200
*                   !    Ý,MAXLEVEL=»xmaxlevel!MINLEVELº¨             * 00100300
*                   !    Ý,MINCLIENT=»xminclient!0º¨                  * 00100400
*                   !    Ý,MAXCLIENT=»xmaxclient!MINCLIENTº¨          * 00100500
*                   !     ,SERVEREXIT=xserverexit                     * 00100600
*                   !    Ý,INFO=»xinfo!0º¨                            * 00100700
*                   !    Ý,FDI=»xfdi!120º¨                            * 00100800
*                   !    Ý,USERDATA=»xuserdata!0º¨                    * 00100900
*                   !   ÐÝ,RESPBIND=INSTANCE¨                         * 00101000
*                   !   ÔÝ,RESPBIND=ADDRSPACE¨                        * 00101100
*                   !   ¿Ý,RESPBIND=SYSTEM¨                           * 00101200
*                   ¿ ,REQTYPE=STOP                                   * 00101300
*                       Ð ,SERVER=xserver                             * 00101400
*                       !   Ð ,SCOPE=SOME                             * 00101500
*                       !   !    Ý,#SERVERS=»x#servers!1º¨            * 00101600
*                       !   ¿ ,SCOPE=ALL                              * 00101700
*                       ¿ ,SERVERID=xserverid                         * 00101800
*                       Ð ,MODE=NORMAL                                * 00101900
*                       ¿ ,MODE=IMMEDIATE                             * 00102000
*                    Ý,RETCODE=xretcode¨                              * 00102100
*                    Ý,RSNCODE=xrsncode¨                              * 00102200
*                    Ý,PLISTVER=»xplistver!IMPLIED_VERSIONº¨          * 00102300
*                   ÐÝ,MF=S¨                                          * 00102400
*                   ÔÝ,MF=(L,xmfctrl»,xmfattr!0Dº)¨                   * 00102500
*                   ¿Ý,MF=(E,xmfctrl»,COMPLETEº)¨                     * 00102600
*                                                                     * 00102700
*                                                                     * 00102800
*      Where:                                                         * 00102900
*                                                                     * 00103000
*                                                                     * 00103100
*      Ýxlabel¨                                                       * 00103200
*          is an optional symbol, starting in column 1, that is the   * 00103300
*          name on the IXCSRVR macro invocation.  The name must       * 00103400
*          conform to the rules for an ordinary assembler language    * 00103500
*          symbol.                                                    * 00103600
*          DEFAULT: No name.                                          * 00103700
*                                                                     * 00103800
*                                                                     * 00103900
*                                                                     * 00104000
*                                                                     * 00104100
*      REQTYPE=»START!STOPº                                           * 00104200
*          is a required keyword input indicating whether a server is * 00104300
*          to be started or stopped.                                  * 00104400
*                                                                     * 00104500
*                                                                     * 00104600
*          REQTYPE=START                                              * 00104700
*              Start an instance of the named server.                 * 00104800
*                                                                     * 00104900
*              If the request is valid, the XCF service routine will  * 00105000
*              not return to the caller until the server is stopped.  * 00105100
*              The XCF service routine will repeatedly call the       * 00105200
*              indicated server exit routine (SERVEREXIT) to process  * 00105300
*              client messages (requests).  If there are no messages  * 00105400
*              to process, the work unit is suspended until one       * 00105500
*              arrives.                                               * 00105600
*                                                                     * 00105700
*                                                                     * 00105800
*              SERVER=xserver                                         * 00105900
*                  is the name (RS-type), or address in register      * 00106000
*                  (2)-(12), of a required 32 character input         * 00106100
*                  variable containing the name of the server.        * 00106200
*                  Server names are mapped by ixcysrvr_tName (macro   * 00106300
*                  IXCYSRVR).  Server names consist of four 8 byte    * 00106400
*                  sections.  Each 8 byte section must be left        * 00106500
*                  justified, padded on the right with EBCDIC blanks  * 00106600
*                  as needed.  Each section can contain any           * 00106700
*                  alphanumeric (A-Z,a-z,0-9), national (@,#,$), or   * 00106800
*                  underscore character.  Any section but the first   * 00106900
*                  can be entirely blank.  Server names are case      * 00107000
*                  sensitive.  The name will appear in various XCF    * 00107100
*                  messages and diagnostic data reports.  Clients     * 00107200
*                  using the IXCSEND service to send requests to a    * 00107300
*                  server can identify the target server by its name. * 00107400
*                                                                     * 00107500
*                  To avoid names used by IBM, do not begin server    * 00107600
*                  names (section 1) with the letters A through I or  * 00107700
*                  the character string SYS.                          * 00107800
*                                                                     * 00107900
*                                                                     * 00108000
*                                                                     * 00108100
*                                                                     * 00108200
*              DESCRIPTION=xdescription                               * 00108300
*                  is the name (RS-type), or address in register      * 00108400
*                  (2)-(12), of a required 32 character input         * 00108500
*                  variable containing a description of the server.   * 00108600
*                  The string can contain any alphanumeric            * 00108700
*                  (A-Z,a-z,0-9), national (@,#,$), or special        * 00108800
*                  (underscore or blank) character.  Leading blanks   * 00108900
*                  and all blank descriptors are not permitted.       * 00109000
*                  Descriptions are case sensitive.  The description  * 00109100
*                  will appear in various XCF messages and diagnostic * 00109200
*                  data reports.  The description is intended to help * 00109300
*                  installations and service personnel understand the * 00109400
*                  function, purpose, or role of the server.          * 00109500
*                                                                     * 00109600
*                                                                     * 00109700
*                                                                     * 00109800
*                                                                     * 00109900
*              ÝFEATURES=»xfeatures!0º¨                               * 00110000
*                  is the name (RS-type), or address in register      * 00110100
*                  (2)-(12), of an optional 8 character input         * 00110200
*                  variable containing a "feature string".  The       * 00110300
*                  feature string indicates the features supported by * 00110400
*                  the server and is mapped by ixcysrvr_tFeatures in  * 00110500
*                  macro IXCYSRVR.  The interpretion of the feature   * 00110600
*                  level and feature flags within the feature string  * 00110700
*                  is determined by the server.                       * 00110800
*                                                                     * 00110900
*                  When a client sends a request, it can specify the  * 00111000
*                  features that the target server must support.      * 00111100
*                  When the request arrives on the server system, and * 00111200
*                  the client identified the target server by name    * 00111300
*                  (as opposed to Server ID), XCF compares the        * 00111400
*                  features requested by the client to the features   * 00111500
*                  supported by the server.  If the server does not   * 00111600
*                  support all of the requested features, the server  * 00111700
*                  is not eligible to process the request.  When the  * 00111800
*                  client identifies the target server by Server ID   * 00111900
*                  (as opposed to server name), the request is        * 00112000
*                  presented to the server regardless of whether the  * 00112100
*                  server supports the requested features.            * 00112200
*                                                                     * 00112300
*                  DEFAULT: 0                                         * 00112400
*                                                                     * 00112500
*                                                                     * 00112600
*                                                                     * 00112700
*                                                                     * 00112800
*              ÝMINLEVEL=»xminlevel!0º¨                               * 00112900
*                  is the name (RS-type), or address in register      * 00113000
*                  (2)-(12), of an optional fullword input variable   * 00113100
*                  containing a number that identifies the smallest   * 00113200
*                  server level supported by this server.  In         * 00113300
*                  combination with MAXLEVEL, MINLEVEL defines the    * 00113400
*                  range of levels supported by the server.  The      * 00113500
*                  interpretation of level is determined by the       * 00113600
*                  server.                                            * 00113700
*                                                                     * 00113800
*                  When a client sends a request, it specifies the    * 00113900
*                  range of server levels that are acceptable for     * 00114000
*                  processing the request.  When the request arrives  * 00114100
*                  on the server system, and the client identified    * 00114200
*                  the target server by name (as opposed to Server    * 00114300
*                  ID), XCF compares the range of server levels       * 00114400
*                  requested by the client to the range of levels     * 00114500
*                  supported by the server.  If the requested range   * 00114600
*                  does not intersect the supported range, the server * 00114700
*                  is not eligible to process the request.  When the  * 00114800
*                  client identifies the target server by Server ID   * 00114900
*                  (as opposed to server name), the request is        * 00115000
*                  presented to the server regardless of whether the  * 00115100
*                  server level requested by the client falls within  * 00115200
*                  the range of levels supported by the server.       * 00115300
*                                                                     * 00115400
*                  DEFAULT: 0                                         * 00115500
*                                                                     * 00115600
*                                                                     * 00115700
*                                                                     * 00115800
*                                                                     * 00115900
*              ÝMAXLEVEL=»xmaxlevel!MINLEVELº¨                        * 00116000
*                  is the name (RS-type), or address in register      * 00116100
*                  (2)-(12), of an optional fullword input variable   * 00116200
*                  containing a number that identifies the maximum    * 00116300
*                  server level supported by this server.  MAXLEVEL   * 00116400
*                  must be greater than or equal to MINLEVEL.         * 00116500
*                                                                     * 00116600
*                  DEFAULT: MINLEVEL                                  * 00116700
*                                                                     * 00116800
*                                                                     * 00116900
*                                                                     * 00117000
*                                                                     * 00117100
*              ÝMINCLIENT=»xminclient!0º¨                             * 00117200
*                  is the name (RS-type), or address in register      * 00117300
*                  (2)-(12), of an optional fullword input variable   * 00117400
*                  containing a number that identifies the smallest   * 00117500
*                  client level that is acceptable to the server.  In * 00117600
*                  combination with MAXCLIENT, MINCLIENT defines the  * 00117700
*                  range of client levels whose requests the server   * 00117800
*                  will accept.  The interpretation of level is       * 00117900
*                  determined by the client.                          * 00118000
*                                                                     * 00118100
*                  When a client sends a request, it specifies its    * 00118200
*                  level.  When the request arrives on the server     * 00118300
*                  system, and the client identified the target       * 00118400
*                  server by name (as opposed to Server ID), XCF      * 00118500
*                  compares the client level to the range of client   * 00118600
*                  levels acceptable to the server.  If the client    * 00118700
*                  level does not fall within the acceptable range,   * 00118800
*                  the server is not eligible to process the request. * 00118900
*                  When the client identifies the target server by    * 00119000
*                  Server ID (as opposed to server name), the request * 00119100
*                  is presented to the server regardless of whether   * 00119200
*                  the client level falls within the range of client  * 00119300
*                  levels that the server will accept.                * 00119400
*                                                                     * 00119500
*                  DEFAULT: 0                                         * 00119600
*                                                                     * 00119700
*                                                                     * 00119800
*                                                                     * 00119900
*                                                                     * 00120000
*              ÝMAXCLIENT=»xmaxclient!MINCLIENTº¨                     * 00120100
*                  is the name (RS-type), or address in register      * 00120200
*                  (2)-(12), of an optional fullword input variable   * 00120300
*                  containing a number that identifies the largest    * 00120400
*                  client level that the server will accept.          * 00120500
*                  MAXCLIENT must be greater than or equal to         * 00120600
*                  MINCLIENT.                                         * 00120700
*                  DEFAULT: MINCLIENT                                 * 00120800
*                                                                     * 00120900
*                                                                     * 00121000
*                                                                     * 00121100
*                                                                     * 00121200
*              SERVEREXIT=xserverexit                                 * 00121300
*                  is a required input.  It is the name (RS-type), or * 00121400
*                  address in register (2)-(12), of the routine that  * 00121500
*                  XCF is to call to process the indicated request    * 00121600
*                  type.  The exit receives control under the current * 00121700
*                  thread in the same addressing mode and ASC mode as * 00121800
*                  the caller.  On entry, R1 contains the address of  * 00121900
*                  a Server Exit Parameter List which is mapped by    * 00122000
*                  ixcysrvr_tSXPL in macro IXCYSRVR.  The exit is     * 00122100
*                  responsible for establishing its own recovery      * 00122200
*                  environment.                                       * 00122300
*                                                                     * 00122400
*                                                                     * 00122500
*                                                                     * 00122600
*                                                                     * 00122700
*              ÝINFO=»xinfo!0º¨                                       * 00122800
*                  is the name (RS-type), or address in register      * 00122900
*                  (2)-(12), of an optional 64 character input        * 00123000
*                  variable which contains information about the      * 00123100
*                  server.  The content and interpretation of this    * 00123200
*                  information is determined by the server.  XCF      * 00123300
*                  saves a copy of the indicated data.  The saved     * 00123400
*                  copy is passed to the server exit routine whenever * 00123500
*                  it is called.  A copy of the data is also visible  * 00123600
*                  to other processes in the sysplex via queries that * 00123700
*                  return information about the server.  Thus related * 00123800
*                  componentry, such as a sender, can obtain whatever * 00123900
*                  information the server cares to define and share   * 00124000
*                  about itself.                                      * 00124100
*                  DEFAULT: 0                                         * 00124200
*                                                                     * 00124300
*                                                                     * 00124400
*                                                                     * 00124500
*                                                                     * 00124600
*              ÝFDI=»xfdi!120º¨                                       * 00124700
*                  is the name (RS-type), or address in register      * 00124800
*                  (2)-(12), of an optional halfword input variable   * 00124900
*                  indicating the server failure detection interval,  * 00125000
*                  which is the number of seconds that the server can * 00125100
*                  appear to be unresponsive before the system deems  * 00125200
*                  it to have failed.  If the server is deemed to     * 00125300
*                  have failed, the server task is subject to being   * 00125400
*                  terminated by XCF (abend 00C reason x164).         * 00125500
*                                                                     * 00125600
*                  A server is deemed responsive if it returns to the * 00125700
*                  XCF server exit stub routine, and unresponsive     * 00125800
*                  otherwise.  If the server is processing a request  * 00125900
*                  for which there is an associated timeout value,    * 00126000
*                  the XCF monitor expects the server exit to return  * 00126100
*                  to XCF within FDI seconds after the timeout        * 00126200
*                  expires.  If there is no associated timeout, the   * 00126300
*                  server exit is expected to return to XCF within    * 00126400
*                  FDI seconds.                                       * 00126500
*                                                                     * 00126600
*                  For example, suppose the server exit was called to * 00126700
*                  process a client request that had a timeout value  * 00126800
*                  of 100 seconds (IXCSEND SENDTO=SERVER              * 00126900
*                  RESPTIME=100).  XCF would allow the server to      * 00127000
*                  process the request for as long as 100 seconds.    * 00127100
*                  After 100 seconds have elapsed, XCF allows up to   * 00127200
*                  FDI more seconds for the server exit routine to    * 00127300
*                  return to XCF.  If it fails to do so, XCF deems    * 00127400
*                  the server to be unresponsive.                     * 00127500
*                                                                     * 00127600
*                  If not specified, the server failure detection     * 00127700
*                  interval is set to two minutes.  The FDI value     * 00127800
*                  must be between 1 and 3600, inclusive.             * 00127900
*                                                                     * 00128000
*                  DEFAULT: 120                                       * 00128100
*                                                                     * 00128200
*                                                                     * 00128300
*                                                                     * 00128400
*                                                                     * 00128500
*              ÝUSERDATA=»xuserdata!0º¨                               * 00128600
*                  is the name (RS-type), or address in register      * 00128700
*                  (2)-(12), of an optional 16 character input        * 00128800
*                  containing user data that is to be associated with * 00128900
*                  the server.  A copy of the user data is presented  * 00129000
*                  to the server exit routine.                        * 00129100
*                  DEFAULT: 0                                         * 00129200
*                                                                     * 00129300
*                                                                     * 00129400
*                                                                     * 00129500
*                                                                     * 00129600
*              ÝRESPBIND=»INSTANCE!ADDRSPACE!SYSTEMº¨                 * 00129700
*                  is an optional keyword input indicating the        * 00129800
*                  default recovery bind XCF should establish for the * 00129900
*                  server with respect to response processing.  This  * 00130000
*                  specification determines the circumstances for     * 00130100
*                  which XCF will cancel responses that this server   * 00130200
*                  instance is expected to send.  Canceling a         * 00130300
*                  response implies that its recipient need not wait  * 00130400
*                  for its timeout value to expire to discover that   * 00130500
*                  no response was sent.                              * 00130600
*                                                                     * 00130700
*                  The server exit routine can update the             * 00130800
*                  SXPL_RespBind field to change the default response * 00130900
*                  bind on a request by request basis.                * 00131000
*                  DEFAULT: INSTANCE                                  * 00131100
*                                                                     * 00131200
*                                                                     * 00131300
*                  ÝRESPBIND=INSTANCE¨                                * 00131400
*                      XCF is to associate responsibility for sending * 00131500
*                      responses to this instance of the server.  If  * 00131600
*                      the server is stopped, XCF is to cancel any    * 00131700
*                      outstanding responses that the server was      * 00131800
*                      expected to provide.                           * 00131900
*                                                                     * 00132000
*                      This option is intended for servers whose      * 00132100
*                      server exit is responsible for sending         * 00132200
*                      responses.  In such cases, termination of the  * 00132300
*                      server instance implies no further responses   * 00132400
*                      will be sent.  Termination of the server       * 00132500
*                      instance includes task termination, address    * 00132600
*                      space termination, system termination, or      * 00132700
*                      simply stopping the server.                    * 00132800
*                                                                     * 00132900
*                      This option can be used even if there are      * 00133000
*                      other work units responsible for sending the   * 00133100
*                      responses.  However, there will in effect be a * 00133200
*                      race condition between such responses and the  * 00133300
*                      XCF cancel processing.  The responses may or   * 00133400
*                      may not be presented to the intended           * 00133500
*                      recipient.  The IXCSEND service may or may not * 00133600
*                      accept the response for delivery.              * 00133700
*                                                                     * 00133800
*                  ÝRESPBIND=ADDRSPACE¨                               * 00133900
*                      XCF is to associate responsibility for sending * 00134000
*                      responses to the server address space.  When   * 00134100
*                      the address space terminates, XCF cancels any  * 00134200
*                      outstanding responses that the server instance * 00134300
*                      was expected to provide.                       * 00134400
*                                                                     * 00134500
*                      This option is intended for servers whose      * 00134600
*                      server exit routine does not send responses.   * 00134700
*                      Instead, the server exit routine arranges for  * 00134800
*                      other work units in the server address space   * 00134900
*                      to send responses.  Since the server exit is   * 00135000
*                      not responsible for sending responses, XCF     * 00135100
*                      should not cancel the expected responses if    * 00135200
*                      the server instance terminates.  Not until the * 00135300
*                      server address space terminates should XCF     * 00135400
*                      cancel the responses.                          * 00135500
*                                                                     * 00135600
*                      This option can be used even if there are work * 00135700
*                      units in other address spaces responsible for  * 00135800
*                      sending the responses.  However, there will in * 00135900
*                      effect be a race condition between such        * 00136000
*                      responses and the XCF cancel processing.  The  * 00136100
*                      responses may or may not be presented to the   * 00136200
*                      intended recipient.  The IXCSEND service may   * 00136300
*                      or may not accept the response for delivery.   * 00136400
*                                                                     * 00136500
*                  ÝRESPBIND=SYSTEM¨                                  * 00136600
*                      XCF is to associate responsibility for sending * 00136700
*                      responses to the local system.  When the       * 00136800
*                      system terminates, XCF cancels any outstanding * 00136900
*                      responses that the server instance was         * 00137000
*                      expected to provide.                           * 00137100
*                                                                     * 00137200
*                      This option is intended for servers whose      * 00137300
*                      server exit routine does not send responses.   * 00137400
*                      Instead, the server exit routine arranges for  * 00137500
*                      work units in an address space other than the  * 00137600
*                      server address space to send responses.  Since * 00137700
*                      neither the server exit nor the server address * 00137800
*                      space is responsible for sending responses,    * 00137900
*                      XCF should not cancel the expected responses   * 00138000
*                      when the server instance or the server address * 00138100
*                      space terminates.  Not until the system        * 00138200
*                      terminates should XCF cancel the responses.    * 00138300
*                                                                     * 00138400
*                      If the server arranges for some other system   * 00138500
*                      in the sysplex to send responses, there will   * 00138600
*                      be a race condition between such responses and * 00138700
*                      the XCF cancel processing.  The responses sent * 00138800
*                      by the third party systems may or may not be   * 00138900
*                      presented to the intended recipient.           * 00139000
*                                                                     * 00139100
*                                                                     * 00139200
*                                                                     * 00139300
*                                                                     * 00139400
*                                                                     * 00139500
*          REQTYPE=STOP                                               * 00139600
*              Stop one or more servers on the local system.          * 00139700
*                                                                     * 00139800
*              XCF will initiate stop processing for the indicated    * 00139900
*              instances of the server on the local system, and then  * 00140000
*              return to the caller.  The actual stopping of the      * 00140100
*              servers completes asynchronously to the stop request.  * 00140200
*              Thus on return from the IXCSRVR invocation, the        * 00140300
*              indicated server instances may or may not have been    * 00140400
*              stopped.                                               * 00140500
*                                                                     * 00140600
*                                                                     * 00140700
*              The following is a set of mutually exclusive keys.     * 00140800
*              This set is required; only one key must be specified.  * 00140900
*                                                                     * 00141000
*                                                                     * 00141100
*              SERVER=xserver                                         * 00141200
*                  belongs to a set of mutually exclusive keys. It is * 00141300
*                  the name (RS-type), or address in register         * 00141400
*                  (2)-(12), of a 32 character input variable         * 00141500
*                  containing the name of the server to be stopped.   * 00141600
*                  Server names are mapped by ixcysrvr_tName (macro   * 00141700
*                  IXCYSRVR).  Server names consist of four 8 byte    * 00141800
*                  sections.  Each 8 byte section must be left        * 00141900
*                  justified, padded on the right with EBCDIC blanks  * 00142000
*                  as needed.  Each section can contain any           * 00142100
*                  alphanumeric (A-Z,a-z,0-9), national (@,#,$), or   * 00142200
*                  underscore character.  Any section but the first   * 00142300
*                  can be entirely blank.  Server names are case      * 00142400
*                  sensitive.                                         * 00142500
*                                                                     * 00142600
*                                                                     * 00142700
*                                                                     * 00142800
*                  SCOPE=»SOME!ALLº                                   * 00142900
*                      is a required keyword input that indicates how * 00143000
*                      many instances of the indicated server are to  * 00143100
*                      be stopped.                                    * 00143200
*                                                                     * 00143300
*                                                                     * 00143400
*                      SCOPE=SOME                                     * 00143500
*                          The indicated number of server instances   * 00143600
*                          on the local system are to be stopped.     * 00143700
*                                                                     * 00143800
*                                                                     * 00143900
*                          Ý#SERVERS=»x#servers!1º¨                   * 00144000
*                              is the name (RS-type), or address in   * 00144100
*                              register (2)-(12), of an optional      * 00144200
*                              fullword input containing the number   * 00144300
*                              of server instances on the local       * 00144400
*                              system that are to be stopped.  If     * 00144500
*                              #SERVERS exceeds the number of         * 00144600
*                              instances, all instances of the        * 00144700
*                              indicated server on the local system   * 00144800
*                              will be stopped.                       * 00144900
*                              DEFAULT: 1                             * 00145000
*                                                                     * 00145100
*                                                                     * 00145200
*                                                                     * 00145300
*                      SCOPE=ALL                                      * 00145400
*                          All instances of the indicated server on   * 00145500
*                          the local system are to be stopped.        * 00145600
*                                                                     * 00145700
*                                                                     * 00145800
*                                                                     * 00145900
*                                                                     * 00146000
*                                                                     * 00146100
*              SERVERID=xserverid                                     * 00146200
*                  belongs to a set of mutually exclusive keys. It is * 00146300
*                  the name (RS-type), or address in register         * 00146400
*                  (2)-(12), of a 16 character input field that       * 00146500
*                  contains the server ID of the server instance that * 00146600
*                  is to be stopped.  If a specified server ID does   * 00146700
*                  not identify an active server instance on the      * 00146800
*                  local system, the request is rejected.             * 00146900
*                                                                     * 00147000
*                  The storage containing the indicated SERVERID can  * 00147100
*                  reside in the primary address space of the caller, * 00147200
*                  or in a space addressable via a public entry on    * 00147300
*                  the dispatchable unit access list (DU-AL), or in a * 00147400
*                  common area data space.                            * 00147500
*                                                                     * 00147600
*                                                                     * 00147700
*                                                                     * 00147800
*              End of a set of mutually exclusive required keys.      * 00147900
*                                                                     * 00148000
*                                                                     * 00148100
*                                                                     * 00148200
*              MODE=»NORMAL!IMMEDIATEº                                * 00148300
*                  is a required keyword input that indicates whether * 00148400
*                  the servers being stopped are to finish pending    * 00148500
*                  work                                               * 00148600
*                                                                     * 00148700
*                                                                     * 00148800
*                  MODE=NORMAL                                        * 00148900
*                      The server is to be stopped as soon as it      * 00149000
*                      finishes processing both its current request   * 00149100
*                      as well as any pending work that may have been * 00149200
*                      queued prior to the stop request being         * 00149300
*                      recognized.                                    * 00149400
*                                                                     * 00149500
*                      Requests that arrive after the stop request is * 00149600
*                      recognized will be cancelled if there is no    * 00149700
*                      other suitable server instance to process the  * 00149800
*                      request.                                       * 00149900
*                                                                     * 00150000
*                  MODE=IMMEDIATE                                     * 00150100
*                      The server is to be stopped as soon as it      * 00150200
*                      finishes processing its current request (if    * 00150300
*                      any).  The server will not process any pending * 00150400
*                      work that may have been queued.  If stopping   * 00150500
*                      the server instance leaves the pending work    * 00150600
*                      with no suitable server to process it, the     * 00150700
*                      pending work will be cancelled.  For example,  * 00150800
*                      pending client requests would be discarded and * 00150900
*                      acknowledged with a "no receiver" response     * 00151000
*                      code.                                          * 00151100
*                                                                     * 00151200
*                                                                     * 00151300
*                                                                     * 00151400
*                                                                     * 00151500
*                                                                     * 00151600
*                                                                     * 00151700
*                                                                     * 00151800
*                                                                     * 00151900
*                                                                     * 00152000
*                                                                     * 00152100
*      ÝRETCODE=xretcode¨                                             * 00152200
*          is the name (RS-type) of an optional fullword output       * 00152300
*          variable, or register (2)-(12) or (15), into which the     * 00152400
*          return code is to be copied from GPR 15.  If you specify   * 00152500
*          15, GPR15, REG15, or R15 (within or without parentheses),  * 00152600
*          the value will be left in GPR 15.                          * 00152700
*                                                                     * 00152800
*                                                                     * 00152900
*                                                                     * 00153000
*                                                                     * 00153100
*      ÝRSNCODE=xrsncode¨                                             * 00153200
*          is the name (RS-type) of an optional fullword output       * 00153300
*          variable into which the reason code is to be copied from   * 00153400
*          GPR 0.  If you specify 0, 00, GPR0, GPR00, REG0, REG00, or * 00153500
*          R0 (within or without parentheses), the value will be left * 00153600
*          in GPR 0.                                                  * 00153700
*                                                                     * 00153800
*                                                                     * 00153900
*                                                                     * 00154000
*                                                                     * 00154100
*      ÝPLISTVER=»xplistver!IMPLIED_VERSIONº¨                         * 00154200
*          is an optional byte input decimal value in the "0-0" range * 00154300
*          that specifies the macro version.  PLISTVER is the only    * 00154400
*          key allowed on the list form of MF and determines which    * 00154500
*          parameter list is generated.  Note that MAX may be         * 00154600
*          specified instead of a number, and the parameter list will * 00154700
*          be of the largest size currently supported. This size may  * 00154800
*          grow from release to release (thus possibly affecting the  * 00154900
*          amount of storage needed by your program).  If your        * 00155000
*          program can tolerate this, IBM recommends that you always  * 00155100
*          specify MAX when creating the list form parameter list as  * 00155200
*          that will ensure that the list form parameter list is      * 00155300
*          always long enough to hold whatever parameters might be    * 00155400
*          specified on the execute form.                             * 00155500
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00155600
*          default is the lowest version which allows all of the      * 00155700
*          parameters specified on the invocation to be processed.    * 00155800
*                                                                     * 00155900
*                                                                     * 00156000
*                                                                     * 00156100
*                                                                     * 00156200
*      ÝMF=»S!L!Eº¨                                                   * 00156300
*          is an optional keyword input which specifies the macro     * 00156400
*          form.                                                      * 00156500
*          DEFAULT: S                                                 * 00156600
*                                                                     * 00156700
*                                                                     * 00156800
*          ÝMF=S¨                                                     * 00156900
*              specifies the standard form of the macro.  The "S"     * 00157000
*              form generates code to put the parameters into an      * 00157100
*              in-line parameter list and invoke the desired service. * 00157200
*              Full checking for required macro keys is done along    * 00157300
*              with supplying defaults for omitted optional           * 00157400
*              parameters.                                            * 00157500
*                                                                     * 00157600
*          ÝMF=(L,xmfctrl»,xmfattr!0Dº)¨                              * 00157700
*              specifies the list form of the macro.  The "L" form    * 00157800
*              defines an area to be used for the parameter list.     * 00157900
*              Only the PLISTVER key may be specified on the          * 00158000
*              invocation.  All other macro parameters are flagged as * 00158100
*              errors.  If PLISTVER is not specified, the original    * 00158200
*              parameter list definition is used.                     * 00158300
*                                                                     * 00158400
*            ,xmfctrl                                                 * 00158500
*              is a required input.  It is the name of a storage area * 00158600
*              for the parameter list.                                * 00158700
*                                                                     * 00158800
*            »,xmfattr!0Dº                                            * 00158900
*              is an optional 60 character input string that varies   * 00159000
*              from 1 to 60 characters. Use it to force boundary      * 00159100
*              alignment of the parameter list. Use only 0F or 0D.    * 00159200
*              DEFAULT: 0D which forces the parameter list to a       * 00159300
*              doubleword boundary.                                   * 00159400
*                                                                     * 00159500
*          ÝMF=(E,xmfctrl»,COMPLETEº)¨                                * 00159600
*              specifies the execute form of the macro.  The "E" form * 00159700
*              generates code to put the parameters into the          * 00159800
*              parameter list specified by xmfctrl and provides full  * 00159900
*              syntax checking with default setting.                  * 00160000
*                                                                     * 00160100
*            ,xmfctrl                                                 * 00160200
*              is a required input.  It is the name (RS-type), or     * 00160300
*              address in register (1)-(12), of a storage area for    * 00160400
*              the parameter list.                                    * 00160500
*                                                                     * 00160600
*            »,COMPLETEº                                              * 00160700
*              is an optional keyword input which specifies the       * 00160800
*              degree of macro parameter syntax checking.             * 00160900
*              DEFAULT: COMPLETE                                      * 00161000
*                                                                     * 00161100
*                                                                     * 00161200
*              COMPLETE                                               * 00161300
*                  Checking for required macro keys is done and       * 00161400
*                  defaults are supplied for omitted optional         * 00161500
*                  parameters.                                        * 00161600
*                                                                     * 00161700
*                                                                     * 00161800
*                                                                     * 00161900
*                                                                     * 00162000
*                                                                     * 00162100
*                                                                     * 00162200
*                                                                     * 00162300
*01* RETURN CODES:                                                    * 00162400
*                                                                     * 00162500
*                                                                     * 00162600
*       0         IxcRetcodeOK:  Successful completion.               * 00162700
*                                                                     * 00162800
*                 For a START request, the server exit routine set    * 00162900
*                 the "stop code" to indicate that it had finished    * 00163000
*                 processing (ixcysrvr_kStopCodeFinished).  For a     * 00163100
*                 STOP request, stop processing for the indicated     * 00163200
*                 server was initiated.                               * 00163300
*                                                                     * 00163400
*       4         IxcRetcodeWarning:  Successful completion, although * 00163500
*                 with exceptional circumstances.                     * 00163600
*                                                                     * 00163700
*                 HEX REASON       MEANING                            * 00163800
*                 CODE                                                * 00163900
*                                                                     * 00164000
*                                                                     * 00164100
*                 01          ixcsrvrRsnStopped: Stop requested.      * 00164200
*                                                                     * 00164300
*                             The XCF Server Stub loop terminated     * 00164400
*                             because the server was stopped via an   * 00164500
*                             IXCSRVR REQTYPE=STOP request.  The      * 00164600
*                             server exit routine was not involved in * 00164700
*                             the stop and so did not have an         * 00164800
*                             opportunity to set the stop code.       * 00164900
*                                                                     * 00165000
*                             This reason applies only to             * 00165100
*                             REQTYPE=START.                          * 00165200
*                                                                     * 00165300
*                 02          ixcsrvrRsnExitFailure: Server Exit      * 00165400
*                             stopped due to a failure.               * 00165500
*                                                                     * 00165600
*                             The server exit routine set the "stop   * 00165700
*                             code" to indicate that it was           * 00165800
*                             terminating due to a failure            * 00165900
*                             (ixcysrvr_kStopCodeFailure).            * 00166000
*                                                                     * 00166100
*                             This reason applies only to             * 00166200
*                             REQTYPE=START.                          * 00166300
*                                                                     * 00166400
*                 04          ixcsrvrRsnNoServer:                     * 00166500
*                                                                     * 00166600
*                             The server does not have any instances  * 00166700
*                             defined on the local system.  Nothing   * 00166800
*                             to stop.                                * 00166900
*                                                                     * 00167000
*                                                                     * 00167100
*                                                                     * 00167200
*       8         IxcRetCodeParmError: Invalid parameters             * 00167300
*                                                                     * 00167400
*                 HEX REASON       MEANING                            * 00167500
*                 CODE                                                * 00167600
*                                                                     * 00167700
*                                                                     * 00167800
*                 01          ixcsrvrRsnPlistBadStg:  Program error.  * 00167900
*                             The storage containing the parameter    * 00168000
*                             list is not accessible.                 * 00168100
*                                                                     * 00168200
*                 02          ixcsrvrRsnPlistBadAlet:  Program error. * 00168300
*                             The parameter list ALET is not valid.   * 00168400
*                             The storage containing the IXCSRVR      * 00168500
*                             parameter list must reside in the       * 00168600
*                             primary address space of the caller, or * 00168700
*                             in a space addressable via a public     * 00168800
*                             entry on the dispatchable unit access   * 00168900
*                             list (DU-AL), or in a common area data  * 00169000
*                             space.                                  * 00169100
*                                                                     * 00169200
*                 03          ixcsrvrRsnPlistBadRsvd:  Program error. * 00169300
*                             Reserved field in the parameter list is * 00169400
*                             not zero.  Either the parameter list    * 00169500
*                             was corrupted or the program is running * 00169600
*                             on a system that does not have the      * 00169700
*                             necessary support.                      * 00169800
*                                                                     * 00169900
*                 04          ixcsrvrRsnPlistBadVersion:  Program     * 00170000
*                             error.  Parameter list version is not   * 00170100
*                             valid.  Either the parameter list was   * 00170200
*                             corrupted or the program is running on  * 00170300
*                             a system that does not have the         * 00170400
*                             necessary support.                      * 00170500
*                                                                     * 00170600
*                 05          ixcsrvrRsnPlistBadReqType:  Program     * 00170700
*                             error.  Parameter list request type is  * 00170800
*                             not valid.  Either the parameter list   * 00170900
*                             was corrupted or the program is running * 00171000
*                             on a system that does not have the      * 00171100
*                             necessary support.                      * 00171200
*                                                                     * 00171300
*                 06          ixcsrvrRsnExitFailed:  Program error.   * 00171400
*                             The server exit routine failed.  XCF    * 00171500
*                             stops the offending server instance.    * 00171600
*                                                                     * 00171700
*                             Note that this particular reason code   * 00171800
*                             will not normally be seen.  If the      * 00171900
*                             server exit routine fails, XCF recovery * 00172000
*                             processing will stop the server         * 00172100
*                             instance, cleanup XCF resources, and    * 00172200
*                             then percolate to the recovery routine  * 00172300
*                             established by the work unit that       * 00172400
*                             started the server.                     * 00172500
*                                                                     * 00172600
*                 07          ixcsrvrRsnServerBadStg:  Program error. * 00172700
*                             The storage containing the server name  * 00172800
*                             is not accessible.                      * 00172900
*                                                                     * 00173000
*                 08          ixcsrvrRsnServerBadAlet:  Program       * 00173100
*                             error.  The ALET for the server name is * 00173200
*                             not valid.  The storage containing the  * 00173300
*                             server name must reside in the primary  * 00173400
*                             address space of the caller, or in a    * 00173500
*                             space addressable via a public entry on * 00173600
*                             the dispatchable unit access list       * 00173700
*                             (DU-AL), or in a common area data       * 00173800
*                             space.                                  * 00173900
*                                                                     * 00174000
*                 09          ixcsrvrRsnServerBadName:  Program       * 00174100
*                             error.  The server name is not valid.   * 00174200
*                                                                     * 00174300
*                 0A          ixcsrvrRsnDescBadStg:  Program error.   * 00174400
*                             The storage containing the server       * 00174500
*                             description is not accessible.          * 00174600
*                                                                     * 00174700
*                 0B          ixcsrvrRsnDescBadAlet:  Program error.  * 00174800
*                             The ALET for the server description is  * 00174900
*                             not valid.  The storage containing the  * 00175000
*                             server description must reside in the   * 00175100
*                             primary address space of the caller, or * 00175200
*                             in a space addressable via a public     * 00175300
*                             entry on the dispatchable unit access   * 00175400
*                             list (DU-AL), or in a common area data  * 00175500
*                             space.                                  * 00175600
*                                                                     * 00175700
*                 0C          ixcsrvrRsnDescBadDesc:  Program error.  * 00175800
*                             The server description is not valid.    * 00175900
*                                                                     * 00176000
*                 0D          ixcsrvrRsnInfoBadStg:  Program error.   * 00176100
*                             The storage containing the server info  * 00176200
*                             is not accessible.                      * 00176300
*                                                                     * 00176400
*                 0E          ixcsrvrRsnInfoBadAlet:  Program error.  * 00176500
*                             The ALET for the server info is not     * 00176600
*                             valid.  The storage containing the      * 00176700
*                             server description must reside in the   * 00176800
*                             primary address space of the caller, or * 00176900
*                             in a space addressable via a public     * 00177000
*                             entry on the dispatchable unit access   * 00177100
*                             list (DU-AL), or in a common area data  * 00177200
*                             space.                                  * 00177300
*                                                                     * 00177400
*                 0F          ixcsrvrRsnFeaturesBadLevel:  Program    * 00177500
*                             error.  The content of FEATURES is not  * 00177600
*                             valid because the sf_level field        * 00177700
*                             specified a value that is reserved by   * 00177800
*                             XCF.                                    * 00177900
*                                                                     * 00178000
*                 10          ixcsrvrRsnLevelBadMax:  Program error.  * 00178100
*                             The value of MAXLEVEL must be greater   * 00178200
*                             than or equal to the value of MINLEVEL. * 00178300
*                                                                     * 00178400
*                 11          ixcsrvrRsnClientBadMax:  Program error. * 00178500
*                             The value of MAXCLIENT must be greater  * 00178600
*                             than or equal to the value of           * 00178700
*                             MINCLIENT.                              * 00178800
*                                                                     * 00178900
*                 12          ixcsrvrRsnFdiBadValue:  Program error.  * 00179000
*                             The parameter list FDI value is not     * 00179100
*                             valid.  FDI must be an integer value    * 00179200
*                             between 1 and 3600, inclusive.          * 00179300
*                                                                     * 00179400
*                 13          ixcsrvrRsnRespBindBadValue:  Program    * 00179500
*                             error.  The parameter list RESPBIND     * 00179600
*                             specification is not valid.  Either the * 00179700
*                             parameter list was corrupted or the     * 00179800
*                             program is running on a system that     * 00179900
*                             does not have the necessary support.    * 00180000
*                                                                     * 00180100
*                 14          ixcsrvrRsnServerIdBadValue:  Program    * 00180200
*                             error.  The ServerID is not valid.      * 00180300
*                                                                     * 00180400
*                 15          ixcsrvrRsnServerIdBadSystem:  Program   * 00180500
*                             error.  The ServerID is not valid for   * 00180600
*                             use on the local system.  For example,  * 00180700
*                             the server designated by the ServerID   * 00180800
*                             appears to reside on some other system  * 00180900
*                             in the sysplex.                         * 00181000
*                                                                     * 00181100
*                 16          ixcsrvrRsnDdtBadStg:  Program error.    * 00181200
*                             The data descriptor table returned to   * 00181300
*                             XCF via the work area descriptor in the * 00181400
*                             Server Exit Parameter List              * 00181500
*                             (SXPL_WAD.WAD_DataDesc.dd_DataAddr) was * 00181600
*                             not accessible.  As a consequence, XCF  * 00181700
*                             stops running the server.               * 00181800
*                                                                     * 00181900
*                 17          ixcsrvrRsnDdtBadAlet:  Program error.   * 00182000
*                             The ALET of a data descriptor table     * 00182100
*                             returned to XCF via the work area       * 00182200
*                             descriptor in the Server Exit Parameter * 00182300
*                             List                                    * 00182400
*                             (SXPL_WAD.WAD_DataDesc.dd_DataAlet) was * 00182500
*                             not valid.  As a consequence, XCF stops * 00182600
*                             running the server.  The storage        * 00182700
*                             containing the data descriptor table    * 00182800
*                             must be in the primary address space of * 00182900
*                             the server, or in a space addressable   * 00183000
*                             via a public entry on the dispatchable  * 00183100
*                             unit access list (DU-AL), or in a       * 00183200
*                             common area data space.                 * 00183300
*                                                                     * 00183400
*                 1A          ixcsrvrRsnWorkAreaBadStg:  Program      * 00183500
*                             error.  The work area provided by the   * 00183600
*                             server exit routine is not accessible.  * 00183700
*                             As a consequence, XCF stops running the * 00183800
*                             server.                                 * 00183900
*                                                                     * 00184000
*                 1B          ixcsrvrRsnWorkAreaBadAlet:  Program     * 00184100
*                             error.  The ALET for the work area      * 00184200
*                             provided by the server exit routine is  * 00184300
*                             not valid.  As a consequence, XCF stops * 00184400
*                             running the server.  The storage        * 00184500
*                             containing the work area must be in the * 00184600
*                             primary address space of the server, or * 00184700
*                             in a space addressable via a public     * 00184800
*                             entry on the dispatchable unit access   * 00184900
*                             list (DU-AL), or in a common area data  * 00185000
*                             space.                                  * 00185100
*                                                                     * 00185200
*                 1C          ixcsrvrRsnModeBadValue:  Program error. * 00185300
*                             The parameter list MODE specification   * 00185400
*                             is not valid.  Either the parameter     * 00185500
*                             list was corrupted or the program is    * 00185600
*                             running on a system that does not have  * 00185700
*                             the necessary support.                  * 00185800
*                                                                     * 00185900
*                 1D          ixcsrvrRsnServerIdBadStg:  Program      * 00186000
*                             error.  The storage containing the      * 00186100
*                             ServerID is not accessible.             * 00186200
*                                                                     * 00186300
*                 1E          ixcsrvrRsnServerIdBadAlet:  Program     * 00186400
*                             error.  The ALET for the ServerID is    * 00186500
*                             not valid.  The storage containing the  * 00186600
*                             ServerID must reside in the primary     * 00186700
*                             address space of the caller, or in a    * 00186800
*                             space addressable via a public entry on * 00186900
*                             the dispatchable unit access list       * 00187000
*                             (DU-AL), or in a common area data       * 00187100
*                             space.                                  * 00187200
*                                                                     * 00187300
*                 1F          ixcsrvrRsnScopeBadValue:  Program       * 00187400
*                             error.  The parameter list SCOPE        * 00187500
*                             specification is not valid.  Either the * 00187600
*                             parameter list was corrupted or the     * 00187700
*                             program is running on a system that     * 00187800
*                             does not have the necessary support.    * 00187900
*                                                                     * 00188000
*                 20          ixcsrvrRsn#ServersBadValue:  Program    * 00188100
*                             error.  The number of servers is not    * 00188200
*                             valid.  Must be nonzero.                * 00188300
*                                                                     * 00188400
*                 21          ixcsrvrRsnXcfServer:  Program error.    * 00188500
*                             Only XCF itself is allowed to start and * 00188600
*                             stop an XCF Server.                     * 00188700
*                                                                     * 00188800
*                 22          ixcsrvrRsnSxplRsvd:  Program error.     * 00188900
*                             The server exit routine overlaid        * 00189000
*                             reserved fields in the Server Exit      * 00189100
*                             Parameter List (SXPL).  XCF stopped the * 00189200
*                             offending server instance.              * 00189300
*                                                                     * 00189400
*                 23          ixcsrvrRsnSxplWadRsvd:  Program error.  * 00189500
*                             The server exit routine overlaid        * 00189600
*                             reserved fields in the Work Area        * 00189700
*                             Descriptor (SXPL_WAD) within the Server * 00189800
*                             Exit Parameter List (SXPL).  XCF        * 00189900
*                             stopped the offending server instance.  * 00190000
*                                                                     * 00190100
*                 24          ixcsrvrRsnSxplRespBind:  Program error. * 00190200
*                             The server exit routine stored an       * 00190300
*                             invalid response bind value in the      * 00190400
*                             SXPL_RespBind field within the Server   * 00190500
*                             Exit Parameter List (SXPL).  XCF        * 00190600
*                             stopped the offending server instance.  * 00190700
*                                                                     * 00190800
*                 25          ixcsrvrRsnSxplRefusalCode:  Program     * 00190900
*                             error.  The server exit routine stored  * 00191000
*                             a nonzero refusal code in the           * 00191100
*                             SXPL_RefusalCode field within the       * 00191200
*                             Server Exit Parameter List (SXPL).  The * 00191300
*                             refusal code is not valid for use when  * 00191400
*                             processing an initialization request    * 00191500
*                             (SXPL_ServerCode =                      * 00191600
*                             ixcysrvr_kSC_InitServer).  XCF stopped  * 00191700
*                             the offending server instance.          * 00191800
*                                                                     * 00191900
*                 26          ixcsrvrRsnSxplStopCode:  Program error. * 00192000
*                             The server exit routine stored an       * 00192100
*                             invalid stop code in the SXPL_StopCode  * 00192200
*                             field within the Server Exit Parameter  * 00192300
*                             List (SXPL).  XCF stopped the offending * 00192400
*                             server instance.                        * 00192500
*                                                                     * 00192600
*                 27          ixcsrvrRsnSxplResultCode:  Program      * 00192700
*                             error.  The server exit routine stored  * 00192800
*                             a nonzero result code in the            * 00192900
*                             SXPL_ResultCode field within the Server * 00193000
*                             Exit Parameter List (SXPL).  The result * 00193100
*                             code is not valid for use when          * 00193200
*                             processing an initialization request    * 00193300
*                             (SXPL_ServerCode =                      * 00193400
*                             ixcysrvr_kSC_InitServer) nor when       * 00193500
*                             processing a get work area request      * 00193600
*                             (SXPL_ServerCode =                      * 00193700
*                             ixcysrvr_kSC_GetWorkArea).  XCF stopped * 00193800
*                             the offending server instance.          * 00193900
*                                                                     * 00194000
*                 28          ixcsrvrRsnSxplMixedResult:  Program     * 00194100
*                             error.  The server exit routine stored  * 00194200
*                             a nonzero value in both the             * 00194300
*                             SXPL_ResultCode field and the           * 00194400
*                             SXPL_RefusalCode field within the       * 00194500
*                             Server Exit Parameter List (SXPL).      * 00194600
*                             Thus XCF cannot determine whether the   * 00194700
*                             request was accepted or whether it was  * 00194800
*                             refused.  The relevant request is       * 00194900
*                             acknowledged with a response code       * 00195000
*                             indicating that the server exit failed  * 00195100
*                             while processing the request.  XCF      * 00195200
*                             stopped the offending server instance.  * 00195300
*                                                                     * 00195400
*                 57          ixcsrvrRsnHasFRR:  Program error.       * 00195500
*                             Caller is running with an FRR           * 00195600
*                             established.  Ensure that the macro is  * 00195700
*                             invoked while the program is running in * 00195800
*                             the required environment.  This reason  * 00195900
*                             applies only to REQTYPE=START requests. * 00196000
*                                                                     * 00196100
*                 76          ixcsrvrRsnLocked:  Program error.       * 00196200
*                             Caller holds locks.  Ensure that the    * 00196300
*                             macro is invoked while the program is   * 00196400
*                             running in the required environment.    * 00196500
*                                                                     * 00196600
*                 8A          IxcsrvrRsnBadAscMode:  Program error.   * 00196700
*                             Caller is running neither in primary    * 00196800
*                             ASC mode nor in AR ASC mode.  Ensure    * 00196900
*                             that the macro is invoked while the     * 00197000
*                             program is running in the required      * 00197100
*                             environment.                            * 00197200
*                                                                     * 00197300
*                 A4          ixcsrvrRsnReqTypeConflict:  Program     * 00197400
*                             error.  The request type in the         * 00197500
*                             parameter list is not consistent with   * 00197600
*                             the request type in register 0 on entry * 00197700
*                             to the service routine.  The parameter  * 00197800
*                             list or the register contents were      * 00197900
*                             corrupted before the service routine    * 00198000
*                             received control.                       * 00198100
*                                                                     * 00198200
*                 118         ixcsrvrRsnNotTaskMode:  Program error.  * 00198300
*                             Caller is not running in task mode.     * 00198400
*                             Ensure that the macro is invoked while  * 00198500
*                             the program is running in the required  * 00198600
*                             environment.  This reason applies only  * 00198700
*                             to REQTYPE=START requests.              * 00198800
*                                                                     * 00198900
*                 11C         ixcsrvrRsnNotEnabled:  Program error.   * 00199000
*                             Caller is not running enabled.  Ensure  * 00199100
*                             that the macro is invoked while the     * 00199200
*                             program is running in the required      * 00199300
*                             environment.                            * 00199400
*                                                                     * 00199500
*                 120         ixcsrvrRsnXMEM:  Program error.  Caller * 00199600
*                             is running cross-memory mode.  Ensure   * 00199700
*                             that the macro is invoked while the     * 00199800
*                             program is running in the required      * 00199900
*                             environment.  This reason applies only  * 00200000
*                             to REQTYPE=START requests.              * 00200100
*                                                                     * 00200200
*                 127         ixcsrvrRsnOnlyOne:  Program error.      * 00200300
*                             Current task is already instantiated as * 00200400
*                             a server.  At most one server can be    * 00200500
*                             instantiated under any given task.      * 00200600
*                                                                     * 00200700
*                 128         ixcsrvrRsnTaskTerm:  Program error.     * 00200800
*                             Current task is undergoing termination. * 00200900
*                             A server cannot be started once task    * 00201000
*                             termination begins.                     * 00201100
*                                                                     * 00201200
*                 129         ixcsrvrRsnResMgr:  Program error.  The  * 00201300
*                             caller is a resource manager.  A server * 00201400
*                             cannot be started by an (address space) * 00201500
*                             resource manager.                       * 00201600
*                                                                     * 00201700
*                                                                     * 00201800
*                                                                     * 00201900
*                                                                     * 00202000
*       C         IxcRetCodeEnvError: Environmental error             * 00202100
*                                                                     * 00202200
*                 HEX REASON       MEANING                            * 00202300
*                 CODE                                                * 00202400
*                                                                     * 00202500
*                                                                     * 00202600
*                 0CA1        ixcsrvrRsnNoUserStorage:  Unable to     * 00202700
*                             obtain user storage needed to process   * 00202800
*                             the request.                            * 00202900
*                                                                     * 00203000
*                 0CA2        ixcsrvrRsnNoXcfStorage:  Unable to      * 00203100
*                             obtain XCF storage needed to process    * 00203200
*                             the request.                            * 00203300
*                                                                     * 00203400
*                 0CA3        ixcsrvrRsnMaxServers:  Unable to define * 00203500
*                             new server.  Maximum number of servers  * 00203600
*                             already defined.                        * 00203700
*                                                                     * 00203800
*                 0CA4        ixcsrvrRsnNoSysResources:  Unable to    * 00203900
*                             obtain the system resources needed to   * 00204000
*                             process the request.                    * 00204100
*                                                                     * 00204200
*                                                                     * 00204300
*                                                                     * 00204400
*                                                                     * 00204500
*       10        IxcRetCodeCompError: Failure in XCF processing.     * 00204600
*                 The reason codes are intended for use by IBM        * 00204700
*                 service personnel.  The explanations are not        * 00204800
*                 documented.                                         * 00204900
*                                                                     * 00205000
*                                                                     * 00205100
*                                                                     * 00205200
*01* REASON CODES:                                                    * 00205300
*                                                                     * 00205400
*       A unique reason code will be returned whenever the return     * 00205500
*       code is non-zero.                                             * 00205600
*                                                                     * 00205700
*01* MODULE TYPE:  ASSEM MACRO                                        * 00205800
*                                                                     * 00205900
*02*   PROCESSOR:  ASSEM                                              * 00206000
*                                                                     * 00206100
*01* COMPONENT:  SCXCF                                                * 00206200
*                                                                     * 00206300
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00206400
*                                                                     * 00206500
*01* ABEND CODES:                                                     * 00206600
*                                                                     * 00206700
*                                                                     * 00206800
*       073       Environment not valid.  The caller held a lock.     * 00206900
*                                                                     * 00207000
*                                                                     * 00207100
*                                                                     * 00207200
*01* MACRO USAGE NOTES:                                               * 00207300
*                                                                     * 00207400
*                                                                     * 00207500
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00207600
*        global macro variable.  Any value other than 'NO' will       * 00207700
*        result in the macro expansion being printed.  The default is * 00207800
*        'YES'.  The following examples illustrate how the ZPRINT     * 00207900
*        variable should be set.                                      * 00208000
*                                                                     * 00208100
*                    GBLC &ZPRINT                                     * 00208200
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00208300
*                                                                     * 00208400
*                                                                     * 00208500
*    2.  All keys currently contained in the IXCSRVR macro correspond * 00208600
*        to  version 0.  If you specify PLISTVER, use a value of 0 or * 00208700
*        MAX.                                                         * 00208800
*                                                                     * 00208900
*                                                                     * 00209000
*                                                                     * 00209100
*                                                                     * 00209200
*01* CHANGE ACTIVITY:                                                 * 00209300
*                                                                     * 00209400
*   Flag LineItem  FMID    Date   ID    Comment                       * 00209500
*                                                                     * 00209600
*    $L0=XCFSRVR  HBB7780 100604 PD00BJ:  XCF Client/Server           * 00209700
*    $P1=OA36283  HBB7780 110321 PD00C9:  Clear R14 in assembler      * 00209800
*                                         linkage (TRSQ for ME21339)  * 00209900
****** END OF SPECIFICATIONS *****************************************/ 00210000
*/********************************************************************* 00210100
         MACRO                                                          00210200
&XLABEL  IXCSRVR &REQTYPE=,&SERVER=,&DESCRIPTION=,&FEATURES=,          *00210300
               &MINLEVEL=,&MAXLEVEL=,&MINCLIENT=,&MAXCLIENT=,          *00210400
               &SERVEREXIT=,&INFO=,&FDI=,&USERDATA=,&RESPBIND=,&SCOPE=,*00210500
               &#SERVERS=,&SERVERID=,&MODE=,&RETCODE=,&RSNCODE=,       *00210600
               &PLISTVER=,&MF=                                          00210700
.*                                                                      00210800
*                 MACDATE -01/13/18-<0>                                 00210900
.*                                                                      00211000
.*******************************************************************    00211100
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00211200
.*******************************************************************    00211300
                 GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                00211400
                 GBLC  &ZTEST      YES=TEST NO=NO TEST                  00211500
                 GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX          00211600
.*                                                                      00211700
                 GBLC  &ZIXCSRVR   YES=MACRO USED AT LEAST ONCE         00211800
.*******************************************************************    00211900
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00212000
.*******************************************************************    00212100
                 LCLC  &ZMS        ERROR MESSAGE WORK AREA              00212200
                 LCLC  &ZCNDX      SYSNDX CHARACTERS                    00212300
                 LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED           00212400
                 LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR          00212500
                 LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE          00212600
                 LCLA  &ZAWRK      USED AS A WORK AREA                  00212700
                 LCLA  &ZASIZ      USED FOR SIZE OF VALUE               00212800
                 LCLA  &ZN         NUMERIC WORK VARIABLE                00212900
                 LCLC  &ZC         CHARACTER WORK VARIABLE              00213000
                 LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE          00213100
                 LCLA  &ZTLA       VALUE TOO LONG VARIABLE              00213200
                 LCLC  &ZMAC_G     "G" or null                          00213300
&ZMAC_G          SETC  ''                                               00213400
                 LCLC  &ZMAC_LR                                         00213500
&ZMAC_LR         SETC  'LR'                                             00213600
                 LCLC  &ZMAC_L                                          00213700
&ZMAC_L          SETC  'L'                                              00213800
                 LCLC  &ZMAC_ST                                         00213900
&ZMAC_ST         SETC  'ST'                                             00214000
                 LCLC  &ZMAC_LLGT                                       00214100
&ZMAC_LLGT       SETC  'L'                                              00214200
                 LCLC  &ZMAC_LGR                                        00214300
&ZMAC_LGR        SETC  'LR'                                             00214400
                 LCLC  &ZMAC_LG                                         00214500
&ZMAC_LG         SETC  'L'                                              00214600
                 LCLC  &ZMAC_STG                                        00214700
&ZMAC_STG        SETC  'ST'                                             00214800
                 LCLA  &ZMACRET    MACRO RETURN CODE                    00214900
&ZMACRET         SETA  0           ASSUME NO ERRORS                     00215000
.*                                                                      00215100
                 LCLC  &ZCSYSLIST(255)          NONXKEY, POS ARRAY      00215200
                 LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()           00215300
                 LCLA  &ZPLLEN     PARAMETER LIST LENGTH                00215400
                 LCLC  &ZENDBASEPL              End of base PL          00215500
                 LCLA  &ZPLWORKA   PARAMETER LIST LENGTH                00215600
.*******************************************************************    00215700
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00215800
.*******************************************************************    00215900
                 LCLA  &ZI         INDEX FOR ARRAY                      00216000
                 LCLA  &ZJ         INDEX FOR PARMS                      00216100
                 LCLA  &ZK         INDEX FOR PARSE                      00216200
                 LCLA  &ZLO        LOW RANGE VALUE                      00216300
                 LCLA  &ZHI        HIGH RANGE VALUE                     00216400
                 LCLC  &ZW         WORK AREA FOR PARM                   00216500
.********************************************************************   00216600
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00216700
.********************************************************************   00216800
                 GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL              00216900
                 GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE       00217000
                 GBLA  &SYSALVL    SYSSTATE ARCHLVL                     00217100
                 GBLC  &SYSAM64    SYSSTATE AMODE64                     00217200
.*                                                                      00217300
                 AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED       00217400
                 AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED        00217500
                 SPLEVEL  TEST                                          00217600
.ZSYS2           ANOP  ,                                                00217700
                 AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1            00217800
                 AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1            00217900
                 SYSSTATE TEST                                          00218000
                 AGO   .ZSYS4                                           00218100
.ZSYS3           ANOP  ,                                                00218200
&SYSASCE         SETC  'P'         ASSUME SYSSTATE PRIMARY              00218300
.ZSYS4           ANOP  ,                                                00218400
                 AIF   ('&SYSAM64' NE 'YES').ZSYSN64                    00218500
&ZMAC_LLGT       SETC 'LLGT'                                            00218600
&ZMAC_LGR        SETC 'LGR'                                             00218700
&ZMAC_LG         SETC 'LG'                                              00218800
&ZMAC_STG        SETC 'STG'                                             00218900
.ZSYSN64         ANOP  ,                                                00219000
                 AIF   (&SYSALVL LE 1).ZSYS4A                           00219100
&ZMAC_G          SETC 'G'                                               00219200
&ZMAC_LR         SETC 'LGR'                                             00219300
&ZMAC_L          SETC 'LG'                                              00219400
&ZMAC_ST         SETC 'STG'                                             00219500
.ZSYS4A          ANOP  ,                                                00219600
.*******************************************************************    00219700
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00219800
.*******************************************************************    00219900
                 LCLC  &XREQTYPE   ++ VALUE                             00220000
                 LCLC  &XSERVER    ++ NAME                              00220100
                 LCLC  &XDESCRIPTION            ++ NAME                 00220200
                 LCLC  &XFEATURES  ++ NAME                              00220300
                 LCLC  &XMINLEVEL  ++ NAME                              00220400
                 LCLC  &XMAXLEVEL  ++ NAME                              00220500
                 LCLC  &XMINCLIENT              ++ NAME                 00220600
                 LCLC  &XMAXCLIENT              ++ NAME                 00220700
                 LCLC  &XSERVEREXIT             ++ NAME                 00220800
                 LCLC  &XINFO      ++ NAME                              00220900
                 LCLC  &XFDI       ++ NAME                              00221000
                 LCLC  &XUSERDATA  ++ NAME                              00221100
                 LCLC  &XRESPBIND  ++ VALUE                             00221200
                 LCLC  &XTARGETSERVER           ++ NAME                 00221300
                 LCLC  &XSCOPE     ++ VALUE                             00221400
                 LCLC  &X#SERVERS  ++ NAME                              00221500
                 LCLC  &XSERVERID  ++ NAME                              00221600
                 LCLC  &XMODE      ++ VALUE                             00221700
                 LCLC  &XRETCODE   ++ NAME                              00221800
                 LCLC  &XRSNCODE   ++ NAME                              00221900
                 LCLA  &XPLISTVER  ++ VALUE                             00222000
                 LCLC  &XMF        ++ VALUE                             00222100
                 LCLC  &XMFCTRL    ++ NAME                              00222200
                 LCLC  &XMFATTR    ++ VALUE                             00222300
                 LCLC  &XMFSCK     ++ VALUE                             00222400
.*******************************************************************    00222500
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00222600
.*******************************************************************    00222700
                 LCLC  &ZXREQTYPE  ++ INPUT VALUE                       00222800
                 LCLC  &ZXSERVER   ++ INPUT NAME                        00222900
                 LCLC  &ZXDESCRIPTION           ++ INPUT NAME           00223000
                 LCLC  &ZXFEATURES              ++ INPUT NAME           00223100
                 LCLC  &ZXMINLEVEL              ++ INPUT NAME           00223200
                 LCLC  &ZXMAXLEVEL              ++ INPUT NAME           00223300
                 LCLC  &ZXMINCLIENT             ++ INPUT NAME           00223400
                 LCLC  &ZXMAXCLIENT             ++ INPUT NAME           00223500
                 LCLC  &ZXSERVEREXIT            ++ INPUT NAME           00223600
                 LCLC  &ZXINFO     ++ INPUT NAME                        00223700
                 LCLC  &ZXFDI      ++ INPUT NAME                        00223800
                 LCLC  &ZXUSERDATA              ++ INPUT NAME           00223900
                 LCLC  &ZXRESPBIND              ++ INPUT VALUE          00224000
                 LCLC  &ZXTARGETSERVER          ++ INPUT NAME           00224100
                 LCLC  &ZXSCOPE    ++ INPUT VALUE                       00224200
                 LCLC  &ZX#SERVERS              ++ INPUT NAME           00224300
                 LCLC  &ZXSERVERID              ++ INPUT NAME           00224400
                 LCLC  &ZXMODE     ++ INPUT VALUE                       00224500
                 LCLC  &ZXRETCODE  ++ OUTPUT NAME                       00224600
                 LCLC  &ZXRSNCODE  ++ OUTPUT NAME                       00224700
                 LCLC  &ZXPLISTVER              ++ INPUT VALUE          00224800
                 LCLC  &ZXMF       ++ INPUT VALUE                       00224900
                 LCLC  &ZXMFCTRL   ++ INPUT NAME                        00225000
                 LCLC  &ZXMFATTR   ++ INPUT VALUE                       00225100
                 LCLC  &ZXMFSCK    ++ INPUT VALUE                       00225200
.********************************************************************   00225300
.***AC.PLV01  PROCESS PLISTVER                                      *   00225400
.********************************************************************   00225500
&XPLISTVER      SETA  0                                                 00225600
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00225700
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00225800
&XPLISTVER      SETA  0                                                 00225900
.ZPLV0          ANOP  ,                                                 00226000
.*                                                                      00226100
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00226200
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00226300
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00226400
.*-------------------------------------------------------------------   00226500
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00226600
&ZMS            SETC  '"PLISTVER='                                      00226700
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00226800
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00226900
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00227000
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00227100
                AGO   .ZPVCK2                                           00227200
.ZPVCK3         ANOP  ,                                                 00227300
.*-------------------------------------------------------------------   00227400
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00227500
&ZMS            SETC  '"PLISTVER='                                      00227600
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00227700
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00227800
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00227900
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00228000
                AGO   .ZPVCKE                                           00228100
.ZPVCK2         ANOP  ,                                                 00228200
.*-------------------------------------------------------------------   00228300
&ZCVAL          SETC  '&PLISTVER(1)'                                    00228400
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00228500
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00228600
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00228700
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00228800
                AIF   (&ZN LE 0).ZPVCK4A   NOT HIGH                     00228900
.ZPVCK6         ANOP  ,                                                 00229000
&ZMS            SETC  '"PLISTVER='                                      00229100
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00229200
&ZMS            SETC  '&ZMS THE RANGE IS "0-0"'                         00229300
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00229400
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00229500
&XPLISTVER      SETA  0                                                 00229600
                AGO   .ZPVCKE                                           00229700
.*-------------------------------------------------------------------   00229800
.ZPVCK4A        ANOP  ,                                                 00229900
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00230000
&ZMS            SETC  'PLISTVER='                                       00230100
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00230200
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00230300
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00230400
                MNOTE 8,' &ZMS IS REQUIRED.'                            00230500
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00230600
                AGO   .ZPVCK5                                           00230700
.ZPVCK4         ANOP  ,                                                 00230800
&XPLISTVER      SETA  &PLISTVER(1)                                      00230900
.ZPVCK5         ANOP  ,                                                 00231000
.ZPVCKE         ANOP  ,                                                 00231100
.********************************************************************   00231200
.***AG.MF01 PROCESS MF MACRO FORMS                                      00231300
.********************************************************************   00231400
                 ACTR  10000                                            00231500
.*------------------------------------------------------------------    00231600
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00231700
&XMF             SETC  ''          INITIALIZE XVARIABLE                 00231800
.*-------------------------------------------------------------------   00231900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00232000
.ZG73            ANOP  ,                                                00232100
&ZTLC            SETC 'S'                                               00232200
                 AIF   ('&MF(1)' NE '&ZTLC').ZG74                       00232300
&XMF             SETC  'S'         SET KEYWORD                          00232400
                 AIF   (N'&MF LE 1).ZG73A       CK NUM                  00232500
&ZMS             SETC  '"MF='                                           00232600
&ZMS             SETC  '&ZMS.&MF"'                                      00232700
&ZMS             SETC  '&ZMS "MF"'                                      00232800
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00232900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00233000
.ZG73A           ANOP  ,                                                00233100
.*-------------------------------------------------------------------   00233200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00233300
.ZG74            ANOP  ,                                                00233400
&ZTLC            SETC 'L'                                               00233500
                 AIF   ('&MF(1)' NE '&ZTLC').ZG81                       00233600
&XMF             SETC  'L'         SET KEYWORD                          00233700
                 AIF   (N'&MF LE 3).ZG74A       CK NUM                  00233800
&ZMS             SETC  '"MF='                                           00233900
&ZMS             SETC  '&ZMS.&MF"'                                      00234000
&ZMS             SETC  '&ZMS "MF"'                                      00234100
                 MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'             00234200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00234300
.ZG74A           ANOP  ,                                                00234400
.*-------------------------------------------------------------------   00234500
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00234600
                 AIF   (N'&SYSLIST NE 0).ZG74B  POSITIONALS?            00234700
                 AIF   ('&REQTYPE' NE '').ZG74B  KEYS?                  00234800
                 AIF   ('&SERVER' NE '').ZG74B  KEYS?                   00234900
                 AIF   ('&DESCRIPTION' NE '').ZG74B  KEYS?              00235000
                 AIF   ('&FEATURES' NE '').ZG74B  KEYS?                 00235100
                 AIF   ('&MINLEVEL' NE '').ZG74B  KEYS?                 00235200
                 AIF   ('&MAXLEVEL' NE '').ZG74B  KEYS?                 00235300
                 AIF   ('&MINCLIENT' NE '').ZG74B  KEYS?                00235400
                 AIF   ('&MAXCLIENT' NE '').ZG74B  KEYS?                00235500
                 AIF   ('&SERVEREXIT' NE '').ZG74B  KEYS?               00235600
                 AIF   ('&INFO' NE '').ZG74B    KEYS?                   00235700
                 AIF   ('&FDI' NE '').ZG74B     KEYS?                   00235800
                 AIF   ('&USERDATA' NE '').ZG74B  KEYS?                 00235900
                 AIF   ('&RESPBIND' NE '').ZG74B  KEYS?                 00236000
                 AIF   ('&SCOPE' NE '').ZG74B   KEYS?                   00236100
                 AIF   ('&#SERVERS' NE '').ZG74B  KEYS?                 00236200
                 AIF   ('&SERVERID' NE '').ZG74B  KEYS?                 00236300
                 AIF   ('&MODE' NE '').ZG74B    KEYS?                   00236400
                 AIF   ('&RETCODE' NE '').ZG74B  KEYS?                  00236500
                 AIF   ('&RSNCODE' NE '').ZG74B  KEYS?                  00236600
                 AGO    .ZG74C     INVOCATION OKAY                      00236700
.ZG74B           ANOP  ,                                                00236800
&ZMS             SETC  'THE "L" FORM OF "MF"'                           00236900
&ZMS             SETC  '&ZMS CAN ONLY HAVE'                             00237000
&ZMS             SETC  '&ZMS THE "PLISTVER" KEY'                        00237100
                 MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'           00237200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00237300
.ZG74C           ANOP  ,                                                00237400
.*-------------------------------------------------------------------   00237500
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00237600
&ZXMFCTRL        SETC  'INPUT'     SET IN/OUTPUT                        00237700
&XMFCTRL         SETC  '&MF(2,1)'  SET XVARIABLE                        00237800
                 AIF   (N'&MF(2) GT 1).ZG76B    MULTI                   00237900
&XMFCTRL         SETC  '&MF(2)'    SET XVARIABLE                        00238000
.ZG76B           AIF   (K'&MF(2) GT 0).ZG76C                            00238100
&ZXMFCTRL        SETC  ''          RESET IN/OUTPUT                      00238200
&ZMS             SETC  'WHEN "L" IS SPECIFIED'                          00238300
&ZMS             SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'              00238400
                 MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                     00238500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00238600
.ZG76C           ANOP  ,                                                00238700
.*-------------------------------------------------------------------   00238800
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00238900
                 AIF   (K'&ZXMFCTRL LE 0).ZG76P  NOT I/O                00239000
                 AIF   ('&XMFCTRL'(1,1) NE '(').ZG76P                   00239100
&ZXMFCTRL        SETC  ''          RESET IN/OUTPUT                      00239200
&ZMS             SETC  '"MF='                                           00239300
&ZMS             SETC  '&ZMS.&MF"'                                      00239400
&ZMS             SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'        00239500
                 MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'                00239600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00239700
.ZG76P           ANOP  ,                                                00239800
.*-------------------------------------------------------------------   00239900
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00240000
&ZXMFATTR        SETC  'INPUT'     SET IN/OUTPUT                        00240100
&XMFATTR         SETC  '0D'                                             00240200
                 AIF   (K'&MF(3) LE 0).ZG79B    PARM                    00240300
&XMFATTR         SETC  '&MF(3,1)'  SET XVARIABLE                        00240400
                 AIF   (N'&MF(3) GT 1).ZG79B    MULTI                   00240500
&XMFATTR         SETC  '&MF(3)'    SET XVARIABLE                        00240600
.ZG79B           ANOP  ,                                                00240700
.*-------------------------------------------------------------------   00240800
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00240900
                 AIF   (K'&ZXMFATTR LE 0).ZG79P  NOT I/O                00241000
                 AIF   ('&XMFATTR'(1,1) NE '(').ZG79P                   00241100
&ZXMFATTR        SETC  ''          RESET IN/OUTPUT                      00241200
&ZMS             SETC  '"MF='                                           00241300
&ZMS             SETC  '&ZMS.&MF"'                                      00241400
&ZMS             SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'        00241500
                 MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'                00241600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00241700
.ZG79P           ANOP  ,                                                00241800
.*-------------------------------------------------------------------   00241900
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00242000
                 AIF   (K'&ZXMFATTR LE 0).ZG79S  NOT I/O                00242100
                 AIF   (K'&XMFATTR LE 60).ZG79S  LNG OK                 00242200
&ZXMFATTR        SETC  ''          RESET IN/OUTPUT                      00242300
&ZMS             SETC  '"MF='                                           00242400
&ZMS             SETC  '&ZMS.&MF"'                                      00242500
&ZMS             SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'            00242600
                 MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'               00242700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00242800
.ZG79S           ANOP  ,                                                00242900
.*-------------------------------------------------------------------   00243000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00243100
.ZG81            ANOP  ,                                                00243200
&ZTLC            SETC 'E'                                               00243300
                 AIF   ('&MF(1)' NE '&ZTLC').ZG89                       00243400
&XMF             SETC  'E'         SET KEYWORD                          00243500
                 AIF   (N'&MF LE 3).ZG81A       CK NUM                  00243600
&ZMS             SETC  '"MF='                                           00243700
&ZMS             SETC  '&ZMS.&MF"'                                      00243800
&ZMS             SETC  '&ZMS "MF"'                                      00243900
                 MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'             00244000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00244100
.ZG81A           ANOP  ,                                                00244200
.*-------------------------------------------------------------------   00244300
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00244400
&ZXMFCTRL        SETC  'INPUT'     SET IN/OUTPUT                        00244500
&XMFCTRL         SETC  '&MF(2,1)'  SET XVARIABLE                        00244600
                 AIF   (N'&MF(2) GT 1).ZG83B    MULTI                   00244700
&XMFCTRL         SETC  '&MF(2)'    SET XVARIABLE                        00244800
.ZG83B           AIF   (K'&MF(2) GT 0).ZG83C                            00244900
&ZXMFCTRL        SETC  ''          RESET IN/OUTPUT                      00245000
&ZMS             SETC  'WHEN "E" IS SPECIFIED'                          00245100
&ZMS             SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'              00245200
                 MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                     00245300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00245400
.ZG83C           ANOP  ,                                                00245500
.*-------------------------------------------------------------------   00245600
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00245700
                 AIF   (K'&ZXMFCTRL LE 0).ZG83R  NOT I/O                00245800
                 AIF   ('&XMFCTRL'(1,1) NE '(').ZG83R                   00245900
&ZCGPR           SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                       00246000
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG83P                     00246100
                 AIF   (K'&ZCGPR GT 2).ZG83Q                            00246200
                 AIF   ('&ZCGPR' EQ '0').ZG83Q                          00246300
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00246400
                 AIF   (T'&ZCGPR NE 'N').ZG83Q  INVALID REG NAME        00246500
.ZG83P           ANOP  ,                                                00246600
                 AIF   (T'&ZCGPR NE 'N').ZG83R  NON NUMERIC             00246700
                 AIF   ('&ZCGPR' LT '1').ZG83Q                          00246800
                 AIF   ('&ZCGPR' LE '12').ZG83R                         00246900
.ZG83Q           ANOP  ,                                                00247000
&ZMS             SETC  '"MF='                                           00247100
&ZMS             SETC  '&ZMS.&MF"'                                      00247200
&ZMS             SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'        00247300
                 MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                 00247400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00247500
.ZG83R           ANOP  ,                                                00247600
.*-------------------------------------------------------------------   00247700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00247800
&XMFSCK          SETC  ''          INITIALIZE XVARIABLE                 00247900
.ZG87A   AIF   ('&MF(3)' NE 'COMPLETE').ZG88A                           00248000
&XMFSCK          SETC  'COMPLETE'  SET KEYWORD                          00248100
.*-------------------------------------------------------------------   00248200
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00248300
.ZG88A           AIF   (K'&XMFSCK GT 0).ZG88C   KEYWORD                 00248400
                 AIF   (K'&MF(3) LE 0).ZG88B                            00248500
&ZMS             SETC  '"MF='                                           00248600
&ZMS             SETC  '&ZMS.&MF"'                                      00248700
&ZMS             SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '        00248800
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00248900
&ZMS             SETC  '&ZMS "COMPLETE".'                               00249000
                 MNOTE 8,' &ZMS '                                       00249100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00249200
.ZG88B           ANOP  ,                                                00249300
&XMFSCK          SETC  'COMPLETE'  SET DEFAULT KEYWORD                  00249400
.ZG88C           ANOP  ,                                                00249500
&ZXMFSCK         SETC  'INPUT'     SET IN/OUTPUT                        00249600
.*------------------------------------------------------------------    00249700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00249800
.ZG89            ANOP  ,                                                00249900
&ZXMF            SETC  'INPUT'     SET IN/OUTPUT                        00250000
                 AIF   (K'&XMF GT 0).ZG89E      VALID ARG               00250100
                 AIF   (T'&MF EQ 'O').ZG89D     OMITTED                 00250200
&ZASYSLNDX       SETA  0                                                00250300
.ZG89A           ANOP  ,           POSITIONAL MACRO KEY                 00250400
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00250500
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG89C                 00250600
&ZTLC            SETC 'MF'                                              00250700
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG89A        00250800
.ZG89B           ANOP  ,                                                00250900
&ZXMF            SETC  ''          RESET IN/OUTPUT                      00251000
&ZMS             SETC  'THE "MF" KEY'                                   00251100
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00251200
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00251300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00251400
                 AGO   .ZG89E                                           00251500
.ZG89C           ANOP  ,                                                00251600
&ZXMF            SETC  ''          RESET IN/OUTPUT                      00251700
&ZMS             SETC  '"MF='                                           00251800
&ZMS             SETC  '&ZMS.&MF"'                                      00251900
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00252000
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00252100
&ZMS             SETC  '&ZMS "S",'                                      00252200
&ZMS             SETC  '&ZMS "L",'                                      00252300
&ZMS             SETC  '&ZMS OR "E".'                                   00252400
                 MNOTE 8,' &ZMS '                                       00252500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00252600
                 AGO   .ZG89E                                           00252700
.ZG89D           ANOP  ,                                                00252800
&XMF             SETC  'S'         SET DEFAULT KEYWORD                  00252900
&XMFSCK          SETC  'COMPLETE'  COMPLETE CHECKING                    00253000
.ZG89E           ANOP  ,                                                00253100
.********************************************************************   00253200
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00253300
.********************************************************************   00253400
                 ACTR  10000                                            00253500
.*-------------------------------------------------------------------   00253600
.***AG.MF03 MF=(SLE)                                                    00253700
                 AIF   ('&XMF' EQ 'L').ZGMFX                            00253800
.*------------------------------------------------------------------    00253900
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00254000
&XREQTYPE        SETC  ''          INITIALIZE XVARIABLE                 00254100
.*-------------------------------------------------------------------   00254200
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00254300
.ZG3             ANOP  ,                                                00254400
                 AIF   (K'&REQTYPE(1) LE 0).ZG3A                        00254500
&ZTLC            SETC 'START'                                           00254600
                 AIF   ('&REQTYPE(1)' NE '&ZTLC').ZG43                  00254700
&XREQTYPE        SETC  'START'     SET KEYWORD                          00254800
                 AIF   (N'&REQTYPE LE 1).ZG3A   CK NUM                  00254900
&ZMS             SETC  '"REQTYPE='                                      00255000
&ZMS             SETC  '&ZMS.&REQTYPE"'                                 00255100
&ZMS             SETC  '&ZMS "REQTYPE"'                                 00255200
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00255300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00255400
.ZG3A            ANOP  ,                                                00255500
.*------------------------------------------------------------------    00255600
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00255700
&ZCVAL           SETC ''           CLEAR ERROR KEY ACCUMULATOR          00255800
.ZG3A0           AIF   (K'&SCOPE LE 0).ZG3A1    OK                      00255900
&ZCVAL           SETC '&ZCVAL SCOPE'            INCORRECT KEY USED      00256000
.ZG3A1           AIF   (K'&#SERVERS LE 0).ZG3A2  OK                     00256100
&ZCVAL           SETC '&ZCVAL #SERVERS'         INCORRECT KEY USED      00256200
.ZG3A2           AIF   (K'&SERVERID LE 0).ZG3A3  OK                     00256300
&ZCVAL           SETC '&ZCVAL SERVERID'         INCORRECT KEY USED      00256400
.ZG3A3           AIF   (K'&MODE LE 0).ZG3A4     OK                      00256500
&ZCVAL           SETC '&ZCVAL MODE'             INCORRECT KEY USED      00256600
.ZG3A4           AIF   (K'&ZCVAL LE 0).ZG3A5    OK                      00256700
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00256800
&ZMS             SETC  '"REQTYPE'                                       00256900
&ZMS             SETC  '&ZMS.=&REQTYPE"'                                00257000
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00257100
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00257200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00257300
.ZG3A5           ANOP  ,                                                00257400
.*----------------------------------------------------------------***   00257500
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00257600
                 AIF   (N'&SERVER LE 1).ZG5A    CK NUM                  00257700
&ZMS             SETC  '"SERVER='                                       00257800
&ZMS             SETC  '&ZMS.&SERVER"'                                  00257900
&ZMS             SETC  '&ZMS "SERVER"'                                  00258000
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00258100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00258200
.ZG5A            ANOP  ,                                                00258300
.*-------------------------------------------------------------------   00258400
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00258500
&ZXSERVER        SETC  'INPUT'     SET IN/OUTPUT                        00258600
&XSERVER         SETC  '&SERVER(1)'             SET XVARIABLE           00258700
                 AIF   (N'&SERVER GT 1).ZG5B    MULTI                   00258800
&XSERVER         SETC  '&SERVER'   SET XVARIABLE                        00258900
.ZG5B            AIF   (K'&SERVER(1) GT 0).ZG5C                         00259000
&ZXSERVER        SETC  ''          RESET IN/OUTPUT                      00259100
&ZMS             SETC  ' '                                              00259200
&ZMS             SETC  '&ZMS "SERVER" KEY AND ITS'                      00259300
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00259400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00259500
.ZG5C            ANOP  ,                                                00259600
.*-------------------------------------------------------------------   00259700
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00259800
                 AIF   (K'&ZXSERVER LE 0).ZG5R  NOT I/O                 00259900
                 AIF   ('&XSERVER'(1,1) NE '(').ZG5R                    00260000
&ZCGPR           SETC  '&XSERVER'(2,K'&XSERVER-2)                       00260100
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                      00260200
                 AIF   (K'&ZCGPR GT 2).ZG5Q                             00260300
                 AIF   ('&ZCGPR' EQ '0').ZG5Q                           00260400
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00260500
                 AIF   (T'&ZCGPR NE 'N').ZG5Q   INVALID REG NAME        00260600
.ZG5P            ANOP  ,                                                00260700
                 AIF   (T'&ZCGPR NE 'N').ZG5R   NON NUMERIC             00260800
                 AIF   ('&ZCGPR' LT '2').ZG5Q                           00260900
                 AIF   ('&ZCGPR' LE '12').ZG5R                          00261000
.ZG5Q            ANOP  ,                                                00261100
&ZMS             SETC  '"SERVER='                                       00261200
&ZMS             SETC  '&ZMS.&SERVER"'                                  00261300
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00261400
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00261500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00261600
.ZG5R            ANOP  ,                                                00261700
.*----------------------------------------------------------------***   00261800
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00261900
                 AIF   (N'&DESCRIPTION LE 1).ZG8A  CK NUM               00262000
&ZMS             SETC  '"DESCRIPTION='                                  00262100
&ZMS             SETC  '&ZMS.&DESCRIPTION"'                             00262200
&ZMS             SETC  '&ZMS "DESCRIPTION"'                             00262300
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00262400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00262500
.ZG8A            ANOP  ,                                                00262600
.*-------------------------------------------------------------------   00262700
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00262800
&ZXDESCRIPTION   SETC  'INPUT'     SET IN/OUTPUT                        00262900
&XDESCRIPTION    SETC  '&DESCRIPTION(1)'        SET XVARIABLE           00263000
                 AIF   (N'&DESCRIPTION GT 1).ZG8B  MULTI                00263100
&XDESCRIPTION    SETC  '&DESCRIPTION'           SET XVARIABLE           00263200
.ZG8B            AIF   (K'&DESCRIPTION(1) GT 0).ZG8C                    00263300
&ZXDESCRIPTION   SETC  ''          RESET IN/OUTPUT                      00263400
&ZMS             SETC  ' '                                              00263500
&ZMS             SETC  '&ZMS "DESCRIPTION" KEY AND ITS'                 00263600
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00263700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00263800
.ZG8C            ANOP  ,                                                00263900
.*-------------------------------------------------------------------   00264000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00264100
                 AIF   (K'&ZXDESCRIPTION LE 0).ZG8R  NOT I/O            00264200
                 AIF   ('&XDESCRIPTION'(1,1) NE '(').ZG8R               00264300
&ZCGPR           SETC  '&XDESCRIPTION'(2,K'&XDESCRIPTION-2)             00264400
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                      00264500
                 AIF   (K'&ZCGPR GT 2).ZG8Q                             00264600
                 AIF   ('&ZCGPR' EQ '0').ZG8Q                           00264700
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00264800
                 AIF   (T'&ZCGPR NE 'N').ZG8Q   INVALID REG NAME        00264900
.ZG8P            ANOP  ,                                                00265000
                 AIF   (T'&ZCGPR NE 'N').ZG8R   NON NUMERIC             00265100
                 AIF   ('&ZCGPR' LT '2').ZG8Q                           00265200
                 AIF   ('&ZCGPR' LE '12').ZG8R                          00265300
.ZG8Q            ANOP  ,                                                00265400
&ZMS             SETC  '"DESCRIPTION='                                  00265500
&ZMS             SETC  '&ZMS.&DESCRIPTION"'                             00265600
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00265700
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00265800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00265900
.ZG8R            ANOP  ,                                                00266000
.*----------------------------------------------------------------***   00266100
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00266200
                 AIF   (N'&FEATURES LE 1).ZG11A  CK NUM                 00266300
&ZMS             SETC  '"FEATURES='                                     00266400
&ZMS             SETC  '&ZMS.&FEATURES"'                                00266500
&ZMS             SETC  '&ZMS "FEATURES"'                                00266600
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00266700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00266800
.ZG11A           ANOP  ,                                                00266900
.*-------------------------------------------------------------------   00267000
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00267100
&ZXFEATURES      SETC  'INPUT'     SET IN/OUTPUT                        00267200
&XFEATURES       SETC  '0'                                              00267300
                 AIF   (K'&FEATURES(1) LE 0).ZG11B  PARM                00267400
&XFEATURES       SETC  '&FEATURES(1)'           SET XVARIABLE           00267500
                 AIF   (N'&FEATURES GT 1).ZG11B  MULTI                  00267600
&XFEATURES       SETC  '&FEATURES'              SET XVARIABLE           00267700
.ZG11B           ANOP  ,                                                00267800
.*-------------------------------------------------------------------   00267900
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00268000
                 AIF   (K'&ZXFEATURES LE 0).ZG11R  NOT I/O              00268100
                 AIF   ('&XFEATURES'(1,1) NE '(').ZG11R                 00268200
&ZCGPR           SETC  '&XFEATURES'(2,K'&XFEATURES-2)                   00268300
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                     00268400
                 AIF   (K'&ZCGPR GT 2).ZG11Q                            00268500
                 AIF   ('&ZCGPR' EQ '0').ZG11Q                          00268600
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00268700
                 AIF   (T'&ZCGPR NE 'N').ZG11Q  INVALID REG NAME        00268800
.ZG11P           ANOP  ,                                                00268900
                 AIF   (T'&ZCGPR NE 'N').ZG11R  NON NUMERIC             00269000
                 AIF   ('&ZCGPR' LT '2').ZG11Q                          00269100
                 AIF   ('&ZCGPR' LE '12').ZG11R                         00269200
.ZG11Q           ANOP  ,                                                00269300
&ZMS             SETC  '"FEATURES='                                     00269400
&ZMS             SETC  '&ZMS.&FEATURES"'                                00269500
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00269600
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00269700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00269800
.ZG11R           ANOP  ,                                                00269900
.*----------------------------------------------------------------***   00270000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00270100
                 AIF   (N'&MINLEVEL LE 1).ZG14A  CK NUM                 00270200
&ZMS             SETC  '"MINLEVEL='                                     00270300
&ZMS             SETC  '&ZMS.&MINLEVEL"'                                00270400
&ZMS             SETC  '&ZMS "MINLEVEL"'                                00270500
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00270600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00270700
.ZG14A           ANOP  ,                                                00270800
.*-------------------------------------------------------------------   00270900
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00271000
&ZXMINLEVEL      SETC  'INPUT'     SET IN/OUTPUT                        00271100
&XMINLEVEL       SETC  '0'                                              00271200
                 AIF   (K'&MINLEVEL(1) LE 0).ZG14B  PARM                00271300
&XMINLEVEL       SETC  '&MINLEVEL(1)'           SET XVARIABLE           00271400
                 AIF   (N'&MINLEVEL GT 1).ZG14B  MULTI                  00271500
&XMINLEVEL       SETC  '&MINLEVEL'              SET XVARIABLE           00271600
.ZG14B           ANOP  ,                                                00271700
.*-------------------------------------------------------------------   00271800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00271900
                 AIF   (K'&ZXMINLEVEL LE 0).ZG14R  NOT I/O              00272000
                 AIF   ('&XMINLEVEL'(1,1) NE '(').ZG14R                 00272100
&ZCGPR           SETC  '&XMINLEVEL'(2,K'&XMINLEVEL-2)                   00272200
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG14P                     00272300
                 AIF   (K'&ZCGPR GT 2).ZG14Q                            00272400
                 AIF   ('&ZCGPR' EQ '0').ZG14Q                          00272500
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00272600
                 AIF   (T'&ZCGPR NE 'N').ZG14Q  INVALID REG NAME        00272700
.ZG14P           ANOP  ,                                                00272800
                 AIF   (T'&ZCGPR NE 'N').ZG14R  NON NUMERIC             00272900
                 AIF   ('&ZCGPR' LT '2').ZG14Q                          00273000
                 AIF   ('&ZCGPR' LE '12').ZG14R                         00273100
.ZG14Q           ANOP  ,                                                00273200
&ZMS             SETC  '"MINLEVEL='                                     00273300
&ZMS             SETC  '&ZMS.&MINLEVEL"'                                00273400
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00273500
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00273600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00273700
.ZG14R           ANOP  ,                                                00273800
.*----------------------------------------------------------------***   00273900
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00274000
                 AIF   (N'&MAXLEVEL LE 1).ZG17A  CK NUM                 00274100
&ZMS             SETC  '"MAXLEVEL='                                     00274200
&ZMS             SETC  '&ZMS.&MAXLEVEL"'                                00274300
&ZMS             SETC  '&ZMS "MAXLEVEL"'                                00274400
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00274500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00274600
.ZG17A           ANOP  ,                                                00274700
.*-------------------------------------------------------------------   00274800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00274900
&ZXMAXLEVEL      SETC  'INPUT'     SET IN/OUTPUT                        00275000
&XMAXLEVEL       SETC  'MINLEVEL'                                       00275100
                 AIF   (K'&MAXLEVEL(1) LE 0).ZG17B  PARM                00275200
&XMAXLEVEL       SETC  '&MAXLEVEL(1)'           SET XVARIABLE           00275300
                 AIF   (N'&MAXLEVEL GT 1).ZG17B  MULTI                  00275400
&XMAXLEVEL       SETC  '&MAXLEVEL'              SET XVARIABLE           00275500
.ZG17B           ANOP  ,                                                00275600
.*-------------------------------------------------------------------   00275700
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00275800
                 AIF   (K'&ZXMAXLEVEL LE 0).ZG17R  NOT I/O              00275900
         AIF   ('&XMAXLEVEL' EQ 'MINLEVEL').ZG17R                       00276000
                 AIF   ('&XMAXLEVEL'(1,1) NE '(').ZG17R                 00276100
&ZCGPR           SETC  '&XMAXLEVEL'(2,K'&XMAXLEVEL-2)                   00276200
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG17P                     00276300
                 AIF   (K'&ZCGPR GT 2).ZG17Q                            00276400
                 AIF   ('&ZCGPR' EQ '0').ZG17Q                          00276500
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00276600
                 AIF   (T'&ZCGPR NE 'N').ZG17Q  INVALID REG NAME        00276700
.ZG17P           ANOP  ,                                                00276800
                 AIF   (T'&ZCGPR NE 'N').ZG17R  NON NUMERIC             00276900
                 AIF   ('&ZCGPR' LT '2').ZG17Q                          00277000
                 AIF   ('&ZCGPR' LE '12').ZG17R                         00277100
.ZG17Q           ANOP  ,                                                00277200
&ZMS             SETC  '"MAXLEVEL='                                     00277300
&ZMS             SETC  '&ZMS.&MAXLEVEL"'                                00277400
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00277500
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00277600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00277700
.ZG17R           ANOP  ,                                                00277800
.*----------------------------------------------------------------***   00277900
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00278000
                 AIF   (N'&MINCLIENT LE 1).ZG20A  CK NUM                00278100
&ZMS             SETC  '"MINCLIENT='                                    00278200
&ZMS             SETC  '&ZMS.&MINCLIENT"'                               00278300
&ZMS             SETC  '&ZMS "MINCLIENT"'                               00278400
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00278500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00278600
.ZG20A           ANOP  ,                                                00278700
.*-------------------------------------------------------------------   00278800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00278900
&ZXMINCLIENT     SETC  'INPUT'     SET IN/OUTPUT                        00279000
&XMINCLIENT      SETC  '0'                                              00279100
                 AIF   (K'&MINCLIENT(1) LE 0).ZG20B  PARM               00279200
&XMINCLIENT      SETC  '&MINCLIENT(1)'          SET XVARIABLE           00279300
                 AIF   (N'&MINCLIENT GT 1).ZG20B  MULTI                 00279400
&XMINCLIENT      SETC  '&MINCLIENT'             SET XVARIABLE           00279500
.ZG20B           ANOP  ,                                                00279600
.*-------------------------------------------------------------------   00279700
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00279800
                 AIF   (K'&ZXMINCLIENT LE 0).ZG20R  NOT I/O             00279900
                 AIF   ('&XMINCLIENT'(1,1) NE '(').ZG20R                00280000
&ZCGPR           SETC  '&XMINCLIENT'(2,K'&XMINCLIENT-2)                 00280100
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG20P                     00280200
                 AIF   (K'&ZCGPR GT 2).ZG20Q                            00280300
                 AIF   ('&ZCGPR' EQ '0').ZG20Q                          00280400
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00280500
                 AIF   (T'&ZCGPR NE 'N').ZG20Q  INVALID REG NAME        00280600
.ZG20P           ANOP  ,                                                00280700
                 AIF   (T'&ZCGPR NE 'N').ZG20R  NON NUMERIC             00280800
                 AIF   ('&ZCGPR' LT '2').ZG20Q                          00280900
                 AIF   ('&ZCGPR' LE '12').ZG20R                         00281000
.ZG20Q           ANOP  ,                                                00281100
&ZMS             SETC  '"MINCLIENT='                                    00281200
&ZMS             SETC  '&ZMS.&MINCLIENT"'                               00281300
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00281400
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00281500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00281600
.ZG20R           ANOP  ,                                                00281700
.*----------------------------------------------------------------***   00281800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00281900
                 AIF   (N'&MAXCLIENT LE 1).ZG23A  CK NUM                00282000
&ZMS             SETC  '"MAXCLIENT='                                    00282100
&ZMS             SETC  '&ZMS.&MAXCLIENT"'                               00282200
&ZMS             SETC  '&ZMS "MAXCLIENT"'                               00282300
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00282400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00282500
.ZG23A           ANOP  ,                                                00282600
.*-------------------------------------------------------------------   00282700
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00282800
&ZXMAXCLIENT     SETC  'INPUT'     SET IN/OUTPUT                        00282900
&XMAXCLIENT      SETC  'MINCLIENT'                                      00283000
                 AIF   (K'&MAXCLIENT(1) LE 0).ZG23B  PARM               00283100
&XMAXCLIENT      SETC  '&MAXCLIENT(1)'          SET XVARIABLE           00283200
                 AIF   (N'&MAXCLIENT GT 1).ZG23B  MULTI                 00283300
&XMAXCLIENT      SETC  '&MAXCLIENT'             SET XVARIABLE           00283400
.ZG23B           ANOP  ,                                                00283500
.*-------------------------------------------------------------------   00283600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00283700
                 AIF   (K'&ZXMAXCLIENT LE 0).ZG23R  NOT I/O             00283800
         AIF   ('&XMAXCLIENT' EQ 'MINCLIENT').ZG23R                     00283900
                 AIF   ('&XMAXCLIENT'(1,1) NE '(').ZG23R                00284000
&ZCGPR           SETC  '&XMAXCLIENT'(2,K'&XMAXCLIENT-2)                 00284100
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG23P                     00284200
                 AIF   (K'&ZCGPR GT 2).ZG23Q                            00284300
                 AIF   ('&ZCGPR' EQ '0').ZG23Q                          00284400
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00284500
                 AIF   (T'&ZCGPR NE 'N').ZG23Q  INVALID REG NAME        00284600
.ZG23P           ANOP  ,                                                00284700
                 AIF   (T'&ZCGPR NE 'N').ZG23R  NON NUMERIC             00284800
                 AIF   ('&ZCGPR' LT '2').ZG23Q                          00284900
                 AIF   ('&ZCGPR' LE '12').ZG23R                         00285000
.ZG23Q           ANOP  ,                                                00285100
&ZMS             SETC  '"MAXCLIENT='                                    00285200
&ZMS             SETC  '&ZMS.&MAXCLIENT"'                               00285300
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00285400
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00285500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00285600
.ZG23R           ANOP  ,                                                00285700
.*----------------------------------------------------------------***   00285800
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00285900
                 AIF   (N'&SERVEREXIT LE 1).ZG26A  CK NUM               00286000
&ZMS             SETC  '"SERVEREXIT='                                   00286100
&ZMS             SETC  '&ZMS.&SERVEREXIT"'                              00286200
&ZMS             SETC  '&ZMS "SERVEREXIT"'                              00286300
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00286400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00286500
.ZG26A           ANOP  ,                                                00286600
.*-------------------------------------------------------------------   00286700
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00286800
&ZXSERVEREXIT    SETC  'INPUT'     SET IN/OUTPUT                        00286900
&XSERVEREXIT     SETC  '&SERVEREXIT(1)'         SET XVARIABLE           00287000
                 AIF   (N'&SERVEREXIT GT 1).ZG26B  MULTI                00287100
&XSERVEREXIT     SETC  '&SERVEREXIT'            SET XVARIABLE           00287200
.ZG26B           AIF   (K'&SERVEREXIT(1) GT 0).ZG26C                    00287300
&ZXSERVEREXIT    SETC  ''          RESET IN/OUTPUT                      00287400
&ZMS             SETC  ' '                                              00287500
&ZMS             SETC  '&ZMS "SERVEREXIT" KEY AND ITS'                  00287600
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00287700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00287800
.ZG26C           ANOP  ,                                                00287900
.*-------------------------------------------------------------------   00288000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00288100
                 AIF   (K'&ZXSERVEREXIT LE 0).ZG26R  NOT I/O            00288200
                 AIF   ('&XSERVEREXIT'(1,1) NE '(').ZG26R               00288300
&ZCGPR           SETC  '&XSERVEREXIT'(2,K'&XSERVEREXIT-2)               00288400
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG26P                     00288500
                 AIF   (K'&ZCGPR GT 2).ZG26Q                            00288600
                 AIF   ('&ZCGPR' EQ '0').ZG26Q                          00288700
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00288800
                 AIF   (T'&ZCGPR NE 'N').ZG26Q  INVALID REG NAME        00288900
.ZG26P           ANOP  ,                                                00289000
                 AIF   (T'&ZCGPR NE 'N').ZG26R  NON NUMERIC             00289100
                 AIF   ('&ZCGPR' LT '2').ZG26Q                          00289200
                 AIF   ('&ZCGPR' LE '12').ZG26R                         00289300
.ZG26Q           ANOP  ,                                                00289400
&ZMS             SETC  '"SERVEREXIT='                                   00289500
&ZMS             SETC  '&ZMS.&SERVEREXIT"'                              00289600
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00289700
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00289800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00289900
.ZG26R           ANOP  ,                                                00290000
.*----------------------------------------------------------------***   00290100
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00290200
                 AIF   (N'&INFO LE 1).ZG29A     CK NUM                  00290300
&ZMS             SETC  '"INFO='                                         00290400
&ZMS             SETC  '&ZMS.&INFO"'                                    00290500
&ZMS             SETC  '&ZMS "INFO"'                                    00290600
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00290700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00290800
.ZG29A           ANOP  ,                                                00290900
.*-------------------------------------------------------------------   00291000
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00291100
&ZXINFO          SETC  'INPUT'     SET IN/OUTPUT                        00291200
&XINFO           SETC  '0'                                              00291300
                 AIF   (K'&INFO(1) LE 0).ZG29B  PARM                    00291400
&XINFO           SETC  '&INFO(1)'  SET XVARIABLE                        00291500
                 AIF   (N'&INFO GT 1).ZG29B     MULTI                   00291600
&XINFO           SETC  '&INFO'     SET XVARIABLE                        00291700
.ZG29B           ANOP  ,                                                00291800
.*-------------------------------------------------------------------   00291900
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00292000
                 AIF   (K'&ZXINFO LE 0).ZG29R   NOT I/O                 00292100
                 AIF   ('&XINFO'(1,1) NE '(').ZG29R                     00292200
&ZCGPR           SETC  '&XINFO'(2,K'&XINFO-2)                           00292300
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG29P                     00292400
                 AIF   (K'&ZCGPR GT 2).ZG29Q                            00292500
                 AIF   ('&ZCGPR' EQ '0').ZG29Q                          00292600
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00292700
                 AIF   (T'&ZCGPR NE 'N').ZG29Q  INVALID REG NAME        00292800
.ZG29P           ANOP  ,                                                00292900
                 AIF   (T'&ZCGPR NE 'N').ZG29R  NON NUMERIC             00293000
                 AIF   ('&ZCGPR' LT '2').ZG29Q                          00293100
                 AIF   ('&ZCGPR' LE '12').ZG29R                         00293200
.ZG29Q           ANOP  ,                                                00293300
&ZMS             SETC  '"INFO='                                         00293400
&ZMS             SETC  '&ZMS.&INFO"'                                    00293500
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00293600
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00293700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00293800
.ZG29R           ANOP  ,                                                00293900
.*----------------------------------------------------------------***   00294000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00294100
                 AIF   (N'&FDI LE 1).ZG32A      CK NUM                  00294200
&ZMS             SETC  '"FDI='                                          00294300
&ZMS             SETC  '&ZMS.&FDI"'                                     00294400
&ZMS             SETC  '&ZMS "FDI"'                                     00294500
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00294600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00294700
.ZG32A           ANOP  ,                                                00294800
.*-------------------------------------------------------------------   00294900
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00295000
&ZXFDI           SETC  'INPUT'     SET IN/OUTPUT                        00295100
&XFDI            SETC  '120'                                            00295200
                 AIF   (K'&FDI(1) LE 0).ZG32B   PARM                    00295300
&XFDI            SETC  '&FDI(1)'   SET XVARIABLE                        00295400
                 AIF   (N'&FDI GT 1).ZG32B      MULTI                   00295500
&XFDI            SETC  '&FDI'      SET XVARIABLE                        00295600
.ZG32B           ANOP  ,                                                00295700
.*-------------------------------------------------------------------   00295800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00295900
                 AIF   (K'&ZXFDI LE 0).ZG32R    NOT I/O                 00296000
                 AIF   ('&XFDI'(1,1) NE '(').ZG32R                      00296100
&ZCGPR           SETC  '&XFDI'(2,K'&XFDI-2)                             00296200
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG32P                     00296300
                 AIF   (K'&ZCGPR GT 2).ZG32Q                            00296400
                 AIF   ('&ZCGPR' EQ '0').ZG32Q                          00296500
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00296600
                 AIF   (T'&ZCGPR NE 'N').ZG32Q  INVALID REG NAME        00296700
.ZG32P           ANOP  ,                                                00296800
                 AIF   (T'&ZCGPR NE 'N').ZG32R  NON NUMERIC             00296900
                 AIF   ('&ZCGPR' LT '2').ZG32Q                          00297000
                 AIF   ('&ZCGPR' LE '12').ZG32R                         00297100
.ZG32Q           ANOP  ,                                                00297200
&ZMS             SETC  '"FDI='                                          00297300
&ZMS             SETC  '&ZMS.&FDI"'                                     00297400
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00297500
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00297600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00297700
.ZG32R           ANOP  ,                                                00297800
.*----------------------------------------------------------------***   00297900
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00298000
                 AIF   (N'&USERDATA LE 1).ZG35A  CK NUM                 00298100
&ZMS             SETC  '"USERDATA='                                     00298200
&ZMS             SETC  '&ZMS.&USERDATA"'                                00298300
&ZMS             SETC  '&ZMS "USERDATA"'                                00298400
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00298500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00298600
.ZG35A           ANOP  ,                                                00298700
.*-------------------------------------------------------------------   00298800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00298900
&ZXUSERDATA      SETC  'INPUT'     SET IN/OUTPUT                        00299000
&XUSERDATA       SETC  '0'                                              00299100
                 AIF   (K'&USERDATA(1) LE 0).ZG35B  PARM                00299200
&XUSERDATA       SETC  '&USERDATA(1)'           SET XVARIABLE           00299300
                 AIF   (N'&USERDATA GT 1).ZG35B  MULTI                  00299400
&XUSERDATA       SETC  '&USERDATA'              SET XVARIABLE           00299500
.ZG35B           ANOP  ,                                                00299600
.*-------------------------------------------------------------------   00299700
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00299800
                 AIF   (K'&ZXUSERDATA LE 0).ZG35R  NOT I/O              00299900
                 AIF   ('&XUSERDATA'(1,1) NE '(').ZG35R                 00300000
&ZCGPR           SETC  '&XUSERDATA'(2,K'&XUSERDATA-2)                   00300100
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG35P                     00300200
                 AIF   (K'&ZCGPR GT 2).ZG35Q                            00300300
                 AIF   ('&ZCGPR' EQ '0').ZG35Q                          00300400
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00300500
                 AIF   (T'&ZCGPR NE 'N').ZG35Q  INVALID REG NAME        00300600
.ZG35P           ANOP  ,                                                00300700
                 AIF   (T'&ZCGPR NE 'N').ZG35R  NON NUMERIC             00300800
                 AIF   ('&ZCGPR' LT '2').ZG35Q                          00300900
                 AIF   ('&ZCGPR' LE '12').ZG35R                         00301000
.ZG35Q           ANOP  ,                                                00301100
&ZMS             SETC  '"USERDATA='                                     00301200
&ZMS             SETC  '&ZMS.&USERDATA"'                                00301300
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00301400
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00301500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00301600
.ZG35R           ANOP  ,                                                00301700
.*------------------------------------------------------------------    00301800
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00301900
&XRESPBIND       SETC  ''          INITIALIZE XVARIABLE                 00302000
.*-------------------------------------------------------------------   00302100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00302200
.ZG39            ANOP  ,                                                00302300
                 AIF   (K'&RESPBIND(1) LE 0).ZG39A                      00302400
&ZTLC            SETC 'INSTANCE'                                        00302500
                 AIF   ('&RESPBIND(1)' NE '&ZTLC').ZG40                 00302600
&XRESPBIND       SETC  'INSTANCE'  SET KEYWORD                          00302700
                 AIF   (N'&RESPBIND LE 1).ZG39A  CK NUM                 00302800
&ZMS             SETC  '"RESPBIND='                                     00302900
&ZMS             SETC  '&ZMS.&RESPBIND"'                                00303000
&ZMS             SETC  '&ZMS "RESPBIND"'                                00303100
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00303200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00303300
.ZG39A           ANOP  ,                                                00303400
.*-------------------------------------------------------------------   00303500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00303600
.ZG40            ANOP  ,                                                00303700
&ZTLC            SETC 'ADDRSPACE'                                       00303800
                 AIF   ('&RESPBIND(1)' NE '&ZTLC').ZG41                 00303900
&XRESPBIND       SETC  'ADDRSPACE'              SET KEYWORD             00304000
                 AIF   (N'&RESPBIND LE 1).ZG40A  CK NUM                 00304100
&ZMS             SETC  '"RESPBIND='                                     00304200
&ZMS             SETC  '&ZMS.&RESPBIND"'                                00304300
&ZMS             SETC  '&ZMS "RESPBIND"'                                00304400
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00304500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00304600
.ZG40A           ANOP  ,                                                00304700
.*-------------------------------------------------------------------   00304800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00304900
.ZG41            ANOP  ,                                                00305000
&ZTLC            SETC 'SYSTEM'                                          00305100
                 AIF   ('&RESPBIND(1)' NE '&ZTLC').ZG42                 00305200
&XRESPBIND       SETC  'SYSTEM'    SET KEYWORD                          00305300
                 AIF   (N'&RESPBIND LE 1).ZG41A  CK NUM                 00305400
&ZMS             SETC  '"RESPBIND='                                     00305500
&ZMS             SETC  '&ZMS.&RESPBIND"'                                00305600
&ZMS             SETC  '&ZMS "RESPBIND"'                                00305700
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00305800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00305900
.ZG41A           ANOP  ,                                                00306000
.*------------------------------------------------------------------    00306100
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00306200
.ZG42            ANOP  ,                                                00306300
&ZXRESPBIND      SETC  'INPUT'     SET IN/OUTPUT                        00306400
                 AIF   (K'&XRESPBIND GT 0).ZG42E  VALID ARG             00306500
                 AIF   (T'&RESPBIND EQ 'O').ZG42D  OMITTED              00306600
&ZASYSLNDX       SETA  0                                                00306700
.ZG42A           ANOP  ,           POSITIONAL MACRO KEY                 00306800
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00306900
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG42C                 00307000
&ZTLC            SETC 'RESPBIND'                                        00307100
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG42A        00307200
.ZG42B           ANOP  ,                                                00307300
&ZXRESPBIND      SETC  ''          RESET IN/OUTPUT                      00307400
&ZMS             SETC  'THE "RESPBIND" KEY'                             00307500
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00307600
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00307700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00307800
                 AGO   .ZG42E                                           00307900
.ZG42C           ANOP  ,                                                00308000
&ZXRESPBIND      SETC  ''          RESET IN/OUTPUT                      00308100
&ZMS             SETC  '"RESPBIND='                                     00308200
&ZMS             SETC  '&ZMS.&RESPBIND"'                                00308300
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00308400
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00308500
&ZMS             SETC  '&ZMS "INSTANCE",'                               00308600
&ZMS             SETC  '&ZMS "ADDRSPACE",'                              00308700
&ZMS             SETC  '&ZMS OR "SYSTEM".'                              00308800
                 MNOTE 8,' &ZMS '                                       00308900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00309000
                 AGO   .ZG42E                                           00309100
.ZG42D           ANOP  ,                                                00309200
&XRESPBIND       SETC  'INSTANCE'  SET DEFAULT KEYWORD                  00309300
.ZG42E           ANOP  ,                                                00309400
.*-------------------------------------------------------------------   00309500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00309600
.ZG43            ANOP  ,                                                00309700
&ZTLC            SETC 'STOP'                                            00309800
                 AIF   ('&REQTYPE(1)' NE '&ZTLC').ZG61                  00309900
&XREQTYPE        SETC  'STOP'      SET KEYWORD                          00310000
                 AIF   (N'&REQTYPE LE 1).ZG43A  CK NUM                  00310100
&ZMS             SETC  '"REQTYPE='                                      00310200
&ZMS             SETC  '&ZMS.&REQTYPE"'                                 00310300
&ZMS             SETC  '&ZMS "REQTYPE"'                                 00310400
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00310500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00310600
.ZG43A           ANOP  ,                                                00310700
.*------------------------------------------------------------------    00310800
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00310900
&ZCVAL           SETC ''           CLEAR ERROR KEY ACCUMULATOR          00311000
.ZG43A0          AIF   (K'&DESCRIPTION LE 0).ZG43A1  OK                 00311100
&ZCVAL           SETC '&ZCVAL DESCRIPTION'      INCORRECT KEY USED      00311200
.ZG43A1          AIF   (K'&FEATURES LE 0).ZG43A2  OK                    00311300
&ZCVAL           SETC '&ZCVAL FEATURES'         INCORRECT KEY USED      00311400
.ZG43A2          AIF   (K'&MINLEVEL LE 0).ZG43A3  OK                    00311500
&ZCVAL           SETC '&ZCVAL MINLEVEL'         INCORRECT KEY USED      00311600
.ZG43A3          AIF   (K'&MAXLEVEL LE 0).ZG43A4  OK                    00311700
&ZCVAL           SETC '&ZCVAL MAXLEVEL'         INCORRECT KEY USED      00311800
.ZG43A4          AIF   (K'&MINCLIENT LE 0).ZG43A5  OK                   00311900
&ZCVAL           SETC '&ZCVAL MINCLIENT'        INCORRECT KEY USED      00312000
.ZG43A5          AIF   (K'&MAXCLIENT LE 0).ZG43A6  OK                   00312100
&ZCVAL           SETC '&ZCVAL MAXCLIENT'        INCORRECT KEY USED      00312200
.ZG43A6          AIF   (K'&SERVEREXIT LE 0).ZG43A7  OK                  00312300
&ZCVAL           SETC '&ZCVAL SERVEREXIT'       INCORRECT KEY USED      00312400
.ZG43A7          AIF   (K'&INFO LE 0).ZG43A8    OK                      00312500
&ZCVAL           SETC '&ZCVAL INFO'             INCORRECT KEY USED      00312600
.ZG43A8          AIF   (K'&FDI LE 0).ZG43A9     OK                      00312700
&ZCVAL           SETC '&ZCVAL FDI'              INCORRECT KEY USED      00312800
.ZG43A9          AIF   (K'&USERDATA LE 0).ZG43A10  OK                   00312900
&ZCVAL           SETC '&ZCVAL USERDATA'         INCORRECT KEY USED      00313000
.ZG43A10         AIF   (K'&RESPBIND LE 0).ZG43A11  OK                   00313100
&ZCVAL           SETC '&ZCVAL RESPBIND'         INCORRECT KEY USED      00313200
.ZG43A11         AIF   (K'&ZCVAL LE 0).ZG43A12  OK                      00313300
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00313400
&ZMS             SETC  '"REQTYPE'                                       00313500
&ZMS             SETC  '&ZMS.=&REQTYPE"'                                00313600
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00313700
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00313800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00313900
.ZG43A12         ANOP  ,                                                00314000
.*----------------------------------------------------------------***   00314100
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00314200
&XTARGETSERVER   SETC  ''          INITIALIZE XVARIABLE                 00314300
                 AIF   (K'&SERVER LE 0).ZG45C                           00314400
&ZXTARGETSERVER  SETC  'INPUT'     SET IN/OUTPUT                        00314500
&XTARGETSERVER   SETC  'SERVER'    SET XVARIABLE                        00314600
&ZXSERVER        SETC  'INPUT'     SET IN/OUTPUT                        00314700
&XSERVER         SETC  '&SERVER(1)'             SET XVARIABLE PARM      00314800
                 AIF   (N'&SERVER GT 1).ZG45A                           00314900
&XSERVER         SETC  '&SERVER'   SET XVARIABLE PARM                   00315000
.ZG45A           AIF   (N'&SERVER LE 1).ZG45B   CK NUM                  00315100
&ZMS             SETC  '"SERVER='                                       00315200
&ZMS             SETC  '&ZMS.&SERVER"'                                  00315300
&ZMS             SETC  '&ZMS "SERVER"'                                  00315400
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00315500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00315600
.ZG45B           AIF   (K'&XSERVER GT 0).ZG45C  ONE PARM                00315700
&ZXTARGETSERVER  SETC  ''          RESET IN/OUTPUT                      00315800
&ZXSERVER        SETC  ''          RESET IN/OUTPUT                      00315900
&ZMS             SETC  ' '                                              00316000
&ZMS             SETC  '&ZMS "SERVER" KEY AND ITS'                      00316100
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00316200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00316300
.ZG45C           ANOP  ,                                                00316400
.*----------------------------------------------------------------***   00316500
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00316600
                 AIF   (K'&SERVERID LE 0).ZG54D  NO ME KEY              00316700
                 AIF   (N'&SERVERID LE 1).ZG54A  CK NUM                 00316800
&ZMS             SETC  '"SERVERID='                                     00316900
&ZMS             SETC  '&ZMS.&SERVERID"'                                00317000
&ZMS             SETC  '&ZMS "SERVERID"'                                00317100
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00317200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00317300
.ZG54A           AIF   (K'&XTARGETSERVER LE 0).ZG54B                    00317400
&ZMS             SETC  '"SERVERID'                                      00317500
&ZMS             SETC  '&ZMS.=&SERVERID"'                               00317600
&ZMS             SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'            00317700
&ZMS             SETC  '&ZMS "&XTARGETSERVER"'                          00317800
                 MNOTE 8,' &ZMS KEY.'                                   00317900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00318000
                 AGO   .ZG54D                                           00318100
.*                                                                      00318200
.ZG54B           ANOP  ,                                                00318300
&ZXTARGETSERVER  SETC  'INPUT'     SET IN/OUTPUT                        00318400
&XTARGETSERVER   SETC  'SERVERID'  SET XVARIABLE                        00318500
&ZXSERVERID      SETC  'INPUT'     SET IN/OUTPUT                        00318600
&XSERVERID       SETC  '&SERVERID(1)'           SET XVARIABLE PARM      00318700
                 AIF   (N'&SERVERID GT 1).ZG54C                         00318800
&XSERVERID       SETC  '&SERVERID'              SET XVARIABLE PARM      00318900
.ZG54C           AIF   (K'&XSERVERID GT 0).ZG54D  ONE PARM              00319000
&ZXTARGETSERVER  SETC  ''          RESET IN/OUTPUT                      00319100
&ZXSERVERID      SETC  ''          RESET IN/OUTPUT                      00319200
&ZMS             SETC  ' '                                              00319300
&ZMS             SETC  '&ZMS "SERVERID" KEY AND ITS'                    00319400
                 MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                 00319500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00319600
.ZG54D           ANOP  ,                                                00319700
.*------------------------------------------------------------------    00319800
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           00319900
                 AIF   (K'&XTARGETSERVER GT 0).ZG55B                    00320000
&ZXTARGETSERVER  SETC  ''          RESET IN/OUTPUT                      00320100
&ZXSERVER        SETC  ''          RESET IN/OUTPUT                      00320200
&XTARGETSERVER   SETC  ''          ENSURE NULL                          00320300
&XSERVER         SETC  ''          ENSURE NULL                          00320400
&ZMS             SETC  'ONE OF THE FOLLOWING'                           00320500
&ZMS             SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'              00320600
&ZMS             SETC  '&ZMS REQUIRED:'                                 00320700
&ZMS             SETC  '&ZMS "SERVER"'          VALID ME KEY            00320800
&ZMS             SETC  '&ZMS OR "SERVERID".'    VALID ME KEY            00320900
                 MNOTE 8,' &ZMS '                                       00321000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00321100
.ZG55B           ANOP  ,                                                00321200
.*-------------------------------------------------------------------   00321300
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00321400
.ZG45ZY  AIF    ('&XTARGETSERVER' NE 'SERVER').ZG54ZY                   00321500
.*-------------------------------------------------------------------   00321600
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00321700
                 AIF   (K'&ZXSERVER LE 0).ZG45R  NOT I/O                00321800
                 AIF   ('&XSERVER'(1,1) NE '(').ZG45R                   00321900
&ZCGPR           SETC  '&XSERVER'(2,K'&XSERVER-2)                       00322000
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG45P                     00322100
                 AIF   (K'&ZCGPR GT 2).ZG45Q                            00322200
                 AIF   ('&ZCGPR' EQ '0').ZG45Q                          00322300
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00322400
                 AIF   (T'&ZCGPR NE 'N').ZG45Q  INVALID REG NAME        00322500
.ZG45P           ANOP  ,                                                00322600
                 AIF   (T'&ZCGPR NE 'N').ZG45R  NON NUMERIC             00322700
                 AIF   ('&ZCGPR' LT '2').ZG45Q                          00322800
                 AIF   ('&ZCGPR' LE '12').ZG45R                         00322900
.ZG45Q           ANOP  ,                                                00323000
&ZMS             SETC  '"SERVER='                                       00323100
&ZMS             SETC  '&ZMS.&SERVER"'                                  00323200
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00323300
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00323400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00323500
.ZG45R           ANOP  ,                                                00323600
.*------------------------------------------------------------------    00323700
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00323800
&XSCOPE          SETC  ''          INITIALIZE XVARIABLE                 00323900
.*-------------------------------------------------------------------   00324000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00324100
.ZG48            ANOP  ,                                                00324200
                 AIF   (K'&SCOPE(1) LE 0).ZG48A                         00324300
&ZTLC            SETC 'SOME'                                            00324400
                 AIF   ('&SCOPE(1)' NE '&ZTLC').ZG52                    00324500
&XSCOPE          SETC  'SOME'      SET KEYWORD                          00324600
                 AIF   (N'&SCOPE LE 1).ZG48A    CK NUM                  00324700
&ZMS             SETC  '"SCOPE='                                        00324800
&ZMS             SETC  '&ZMS.&SCOPE"'                                   00324900
&ZMS             SETC  '&ZMS "SCOPE"'                                   00325000
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00325100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00325200
.ZG48A           ANOP  ,                                                00325300
.*----------------------------------------------------------------***   00325400
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00325500
                 AIF   (N'&#SERVERS LE 1).ZG50A  CK NUM                 00325600
&ZMS             SETC  '"#SERVERS='                                     00325700
&ZMS             SETC  '&ZMS.&#SERVERS"'                                00325800
&ZMS             SETC  '&ZMS "#SERVERS"'                                00325900
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00326000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00326100
.ZG50A           ANOP  ,                                                00326200
.*-------------------------------------------------------------------   00326300
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00326400
&ZX#SERVERS      SETC  'INPUT'     SET IN/OUTPUT                        00326500
&X#SERVERS       SETC  '1'                                              00326600
                 AIF   (K'&#SERVERS(1) LE 0).ZG50B  PARM                00326700
&X#SERVERS       SETC  '&#SERVERS(1)'           SET XVARIABLE           00326800
                 AIF   (N'&#SERVERS GT 1).ZG50B  MULTI                  00326900
&X#SERVERS       SETC  '&#SERVERS'              SET XVARIABLE           00327000
.ZG50B           ANOP  ,                                                00327100
.*-------------------------------------------------------------------   00327200
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00327300
                 AIF   (K'&ZX#SERVERS LE 0).ZG50R  NOT I/O              00327400
                 AIF   ('&X#SERVERS'(1,1) NE '(').ZG50R                 00327500
&ZCGPR           SETC  '&X#SERVERS'(2,K'&X#SERVERS-2)                   00327600
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG50P                     00327700
                 AIF   (K'&ZCGPR GT 2).ZG50Q                            00327800
                 AIF   ('&ZCGPR' EQ '0').ZG50Q                          00327900
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00328000
                 AIF   (T'&ZCGPR NE 'N').ZG50Q  INVALID REG NAME        00328100
.ZG50P           ANOP  ,                                                00328200
                 AIF   (T'&ZCGPR NE 'N').ZG50R  NON NUMERIC             00328300
                 AIF   ('&ZCGPR' LT '2').ZG50Q                          00328400
                 AIF   ('&ZCGPR' LE '12').ZG50R                         00328500
.ZG50Q           ANOP  ,                                                00328600
&ZMS             SETC  '"#SERVERS='                                     00328700
&ZMS             SETC  '&ZMS.&#SERVERS"'                                00328800
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00328900
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00329000
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00329100
.ZG50R           ANOP  ,                                                00329200
.*-------------------------------------------------------------------   00329300
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00329400
.ZG52            ANOP  ,                                                00329500
&ZTLC            SETC 'ALL'                                             00329600
                 AIF   ('&SCOPE(1)' NE '&ZTLC').ZG53                    00329700
&XSCOPE          SETC  'ALL'       SET KEYWORD                          00329800
                 AIF   (N'&SCOPE LE 1).ZG52A    CK NUM                  00329900
&ZMS             SETC  '"SCOPE='                                        00330000
&ZMS             SETC  '&ZMS.&SCOPE"'                                   00330100
&ZMS             SETC  '&ZMS "SCOPE"'                                   00330200
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00330300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00330400
.ZG52A           ANOP  ,                                                00330500
.*------------------------------------------------------------------    00330600
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00330700
&ZCVAL           SETC ''           CLEAR ERROR KEY ACCUMULATOR          00330800
.ZG52A0          AIF   (K'&#SERVERS LE 0).ZG52A1  OK                    00330900
&ZCVAL           SETC '&ZCVAL #SERVERS'         INCORRECT KEY USED      00331000
.ZG52A1          AIF   (K'&ZCVAL LE 0).ZG52A2   OK                      00331100
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00331200
&ZMS             SETC  '"SCOPE'                                         00331300
&ZMS             SETC  '&ZMS.=&SCOPE"'                                  00331400
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00331500
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00331600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00331700
.ZG52A2          ANOP  ,                                                00331800
.*------------------------------------------------------------------    00331900
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00332000
.ZG53            ANOP  ,                                                00332100
&ZXSCOPE         SETC  'INPUT'     SET IN/OUTPUT                        00332200
                 AIF   (K'&XSCOPE GT 0).ZG53E   VALID ARG               00332300
                 AIF   (T'&SCOPE EQ 'O').ZG53D  OMITTED                 00332400
&ZASYSLNDX       SETA  0                                                00332500
.ZG53A           ANOP  ,           POSITIONAL MACRO KEY                 00332600
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00332700
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG53C                 00332800
&ZTLC            SETC 'SCOPE'                                           00332900
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG53A        00333000
.ZG53B           ANOP  ,                                                00333100
&ZXSCOPE         SETC  ''          RESET IN/OUTPUT                      00333200
&ZMS             SETC  'THE "SCOPE" KEY'                                00333300
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00333400
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00333500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00333600
                 AGO   .ZG53E                                           00333700
.ZG53C           ANOP  ,                                                00333800
&ZXSCOPE         SETC  ''          RESET IN/OUTPUT                      00333900
&ZMS             SETC  '"SCOPE='                                        00334000
&ZMS             SETC  '&ZMS.&SCOPE"'                                   00334100
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00334200
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00334300
&ZMS             SETC  '&ZMS "SOME"'                                    00334400
&ZMS             SETC  '&ZMS OR "ALL".'                                 00334500
                 MNOTE 8,' &ZMS '                                       00334600
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00334700
                 AGO   .ZG53E                                           00334800
.ZG53D           ANOP  ,                                                00334900
&XSCOPE          SETC  'SOME'      SET DEFAULT KEYWORD                  00335000
.ZG53E           ANOP  ,                                                00335100
.*------------------------------------------------------------------    00335200
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00335300
                 AIF   (K'&SCOPE(1) GT 0).ZG53F  PARM                   00335400
&XSCOPE          SETC  ''          ENSURE NULL KEYWORD                  00335500
&ZXSCOPE         SETC  ''          RESET IN/OUTPUT                      00335600
&ZMS             SETC  'THE'                                            00335700
&ZMS             SETC  '&ZMS "SCOPE" KEY AND ITS'                       00335800
&ZMS             SETC  '&ZMS ARGUMENT ARE REQUIRED.'                    00335900
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00336000
&ZMS             SETC  '&ZMS "SOME"'                                    00336100
&ZMS             SETC  '&ZMS OR "ALL".'                                 00336200
                 MNOTE 8,' &ZMS '                                       00336300
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00336400
.ZG53F           ANOP  ,                                                00336500
.*-------------------------------------------------------------------   00336600
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00336700
.ZG54ZY  AIF    ('&XTARGETSERVER' NE 'SERVERID').ZG55ZY                 00336800
.*-------------------------------------------------------------------   00336900
.***AG.KMEKY14 NAME, RQD INPUT, ME KEYS -DISALLOWED KEYS                00337000
&ZCVAL           SETC ''           ERROR KEY FIELD                      00337100
.ZG54I0          AIF   (K'&SCOPE LE 0).ZG54I1                           00337200
&ZCVAL           SETC '&ZCVAL SCOPE'            DISALLOWED KEY          00337300
.ZG54I1          AIF   (K'&#SERVERS LE 0).ZG54I2                        00337400
&ZCVAL           SETC '&ZCVAL #SERVERS'         DISALLOWED KEY          00337500
.ZG54I2          AIF   (K'&ZCVAL LE 0).ZG54J    KEY                     00337600
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)                            00337700
&ZMS             SETC  '"SERVERID'                                      00337800
&ZMS             SETC  '&ZMS.=&SERVERID"'                               00337900
&ZMS             SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'             00338000
                 MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'             00338100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00338200
.ZG54J           ANOP  ,                                                00338300
.*-------------------------------------------------------------------   00338400
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00338500
                 AIF   (K'&ZXSERVERID LE 0).ZG54R  NOT I/O              00338600
                 AIF   ('&XSERVERID'(1,1) NE '(').ZG54R                 00338700
&ZCGPR           SETC  '&XSERVERID'(2,K'&XSERVERID-2)                   00338800
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG54P                     00338900
                 AIF   (K'&ZCGPR GT 2).ZG54Q                            00339000
                 AIF   ('&ZCGPR' EQ '0').ZG54Q                          00339100
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00339200
                 AIF   (T'&ZCGPR NE 'N').ZG54Q  INVALID REG NAME        00339300
.ZG54P           ANOP  ,                                                00339400
                 AIF   (T'&ZCGPR NE 'N').ZG54R  NON NUMERIC             00339500
                 AIF   ('&ZCGPR' LT '2').ZG54Q                          00339600
                 AIF   ('&ZCGPR' LE '12').ZG54R                         00339700
.ZG54Q           ANOP  ,                                                00339800
&ZMS             SETC  '"SERVERID='                                     00339900
&ZMS             SETC  '&ZMS.&SERVERID"'                                00340000
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00340100
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                 00340200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00340300
.ZG54R           ANOP  ,                                                00340400
.*-------------------------------------------------------------------   00340500
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            00340600
.ZG55ZY          ANOP ,            END MUTUALLY EXCLUSIVE KEYS          00340700
.*------------------------------------------------------------------    00340800
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00340900
&XMODE           SETC  ''          INITIALIZE XVARIABLE                 00341000
.*-------------------------------------------------------------------   00341100
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00341200
.ZG58            ANOP  ,                                                00341300
                 AIF   (K'&MODE(1) LE 0).ZG58A                          00341400
&ZTLC            SETC 'NORMAL'                                          00341500
                 AIF   ('&MODE(1)' NE '&ZTLC').ZG59                     00341600
&XMODE           SETC  'NORMAL'    SET KEYWORD                          00341700
                 AIF   (N'&MODE LE 1).ZG58A     CK NUM                  00341800
&ZMS             SETC  '"MODE='                                         00341900
&ZMS             SETC  '&ZMS.&MODE"'                                    00342000
&ZMS             SETC  '&ZMS "MODE"'                                    00342100
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00342200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00342300
.ZG58A           ANOP  ,                                                00342400
.*-------------------------------------------------------------------   00342500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00342600
.ZG59            ANOP  ,                                                00342700
&ZTLC            SETC 'IMMEDIATE'                                       00342800
                 AIF   ('&MODE(1)' NE '&ZTLC').ZG60                     00342900
&XMODE           SETC  'IMMEDIATE'              SET KEYWORD             00343000
                 AIF   (N'&MODE LE 1).ZG59A     CK NUM                  00343100
&ZMS             SETC  '"MODE='                                         00343200
&ZMS             SETC  '&ZMS.&MODE"'                                    00343300
&ZMS             SETC  '&ZMS "MODE"'                                    00343400
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00343500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00343600
.ZG59A           ANOP  ,                                                00343700
.*------------------------------------------------------------------    00343800
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00343900
.ZG60            ANOP  ,                                                00344000
&ZXMODE          SETC  'INPUT'     SET IN/OUTPUT                        00344100
                 AIF   (K'&XMODE GT 0).ZG60E    VALID ARG               00344200
                 AIF   (T'&MODE EQ 'O').ZG60D   OMITTED                 00344300
&ZASYSLNDX       SETA  0                                                00344400
.ZG60A           ANOP  ,           POSITIONAL MACRO KEY                 00344500
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00344600
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG60C                 00344700
&ZTLC            SETC 'MODE'                                            00344800
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG60A        00344900
.ZG60B           ANOP  ,                                                00345000
&ZXMODE          SETC  ''          RESET IN/OUTPUT                      00345100
&ZMS             SETC  'THE "MODE" KEY'                                 00345200
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00345300
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00345400
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00345500
                 AGO   .ZG60E                                           00345600
.ZG60C           ANOP  ,                                                00345700
&ZXMODE          SETC  ''          RESET IN/OUTPUT                      00345800
&ZMS             SETC  '"MODE='                                         00345900
&ZMS             SETC  '&ZMS.&MODE"'                                    00346000
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00346100
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00346200
&ZMS             SETC  '&ZMS "NORMAL"'                                  00346300
&ZMS             SETC  '&ZMS OR "IMMEDIATE".'                           00346400
                 MNOTE 8,' &ZMS '                                       00346500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00346600
                 AGO   .ZG60E                                           00346700
.ZG60D           ANOP  ,                                                00346800
&XMODE           SETC  'NORMAL'    SET DEFAULT KEYWORD                  00346900
.ZG60E           ANOP  ,                                                00347000
.*------------------------------------------------------------------    00347100
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00347200
                 AIF   (K'&MODE(1) GT 0).ZG60F  PARM                    00347300
&XMODE           SETC  ''          ENSURE NULL KEYWORD                  00347400
&ZXMODE          SETC  ''          RESET IN/OUTPUT                      00347500
&ZMS             SETC  'THE'                                            00347600
&ZMS             SETC  '&ZMS "MODE" KEY AND ITS'                        00347700
&ZMS             SETC  '&ZMS ARGUMENT ARE REQUIRED.'                    00347800
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00347900
&ZMS             SETC  '&ZMS "NORMAL"'                                  00348000
&ZMS             SETC  '&ZMS OR "IMMEDIATE".'                           00348100
                 MNOTE 8,' &ZMS '                                       00348200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00348300
.ZG60F           ANOP  ,                                                00348400
.*------------------------------------------------------------------    00348500
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00348600
.ZG61            ANOP  ,                                                00348700
&ZXREQTYPE       SETC  'INPUT'     SET IN/OUTPUT                        00348800
                 AIF   (K'&XREQTYPE GT 0).ZG61E  VALID ARG              00348900
                 AIF   (T'&REQTYPE EQ 'O').ZG61D  OMITTED               00349000
&ZASYSLNDX       SETA  0                                                00349100
.ZG61A           ANOP  ,           POSITIONAL MACRO KEY                 00349200
&ZASYSLNDX       SETA  &ZASYSLNDX+1                                     00349300
                 AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG61C                 00349400
&ZTLC            SETC 'REQTYPE'                                         00349500
                 AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG61A        00349600
.ZG61B           ANOP  ,                                                00349700
&ZXREQTYPE       SETC  ''          RESET IN/OUTPUT                      00349800
&ZMS             SETC  'THE "REQTYPE" KEY'                              00349900
&ZMS             SETC  '&ZMS MUST CONTAIN ONE'                          00350000
                 MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                 00350100
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00350200
                 AGO   .ZG61E                                           00350300
.ZG61C           ANOP  ,                                                00350400
&ZXREQTYPE       SETC  ''          RESET IN/OUTPUT                      00350500
&ZMS             SETC  '"REQTYPE='                                      00350600
&ZMS             SETC  '&ZMS.&REQTYPE"'                                 00350700
&ZMS             SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '        00350800
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00350900
&ZMS             SETC  '&ZMS "START"'                                   00351000
&ZMS             SETC  '&ZMS OR "STOP".'                                00351100
                 MNOTE 8,' &ZMS '                                       00351200
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00351300
                 AGO   .ZG61E                                           00351400
.ZG61D           ANOP  ,                                                00351500
&XREQTYPE        SETC  'START'     SET DEFAULT KEYWORD                  00351600
.ZG61E           ANOP  ,                                                00351700
.*------------------------------------------------------------------    00351800
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00351900
                 AIF   (K'&REQTYPE(1) GT 0).ZG61F  PARM                 00352000
&XREQTYPE        SETC  ''          ENSURE NULL KEYWORD                  00352100
&ZXREQTYPE       SETC  ''          RESET IN/OUTPUT                      00352200
&ZMS             SETC  'THE'                                            00352300
&ZMS             SETC  '&ZMS "REQTYPE" KEY AND ITS'                     00352400
&ZMS             SETC  '&ZMS ARGUMENT ARE REQUIRED.'                    00352500
&ZMS             SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'              00352600
&ZMS             SETC  '&ZMS "START"'                                   00352700
&ZMS             SETC  '&ZMS OR "STOP".'                                00352800
                 MNOTE 8,' &ZMS '                                       00352900
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00353000
.ZG61F           ANOP  ,                                                00353100
.*----------------------------------------------------------------***   00353200
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00353300
                 AIF   (N'&RETCODE LE 1).ZG63A  CK NUM                  00353400
&ZMS             SETC  '"RETCODE='                                      00353500
&ZMS             SETC  '&ZMS.&RETCODE"'                                 00353600
&ZMS             SETC  '&ZMS "RETCODE"'                                 00353700
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00353800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00353900
.ZG63A           ANOP  ,                                                00354000
.*-------------------------------------------------------------------   00354100
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00354200
                 AIF   (K'&RETCODE(1) LE 0).ZG63C  NO PARM              00354300
&ZXRETCODE       SETC  'OUTPUT'    SET OUTPUT                           00354400
&XRETCODE        SETC  '&RETCODE(1)'            SET XVARIABLE           00354500
                 AIF   (N'&RETCODE GT 1).ZG63C                          00354600
&XRETCODE        SETC  '&RETCODE'  SET XVARIABLE                        00354700
.ZG63C           ANOP  ,                                                00354800
.*-------------------------------------------------------------------   00354900
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00355000
                 AIF   (K'&ZXRETCODE LE 0).ZG63R  NOT I/O               00355100
                 AIF   ('&XRETCODE'(1,1) NE '(').ZG63R                  00355200
&ZCGPR           SETC  '&XRETCODE'(2,K'&XRETCODE-2)                     00355300
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG63P                     00355400
                 AIF   (K'&ZCGPR GT 2).ZG63Q                            00355500
                 AIF   ('&ZCGPR' EQ '0').ZG63Q                          00355600
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00355700
                 AIF   (T'&ZCGPR NE 'N').ZG63Q  INVALID REG NAME        00355800
.ZG63P           ANOP  ,                                                00355900
                 AIF   (T'&ZCGPR NE 'N').ZG63R  NON NUMERIC             00356000
                 AIF   ('&ZCGPR' EQ '15').ZG63R                         00356100
                 AIF   ('&ZCGPR' LT '2').ZG63Q                          00356200
                 AIF   ('&ZCGPR' LE '12').ZG63R                         00356300
.ZG63Q           ANOP  ,                                                00356400
&ZMS             SETC  '"RETCODE='                                      00356500
&ZMS             SETC  '&ZMS.&RETCODE"'                                 00356600
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00356700
                 MNOTE 8,' &ZMS IN THE RANGE (2)-(12) OR (15).'         00356800
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00356900
.ZG63R           ANOP  ,                                                00357000
.*----------------------------------------------------------------***   00357100
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00357200
                 AIF   (N'&RSNCODE LE 1).ZG66A  CK NUM                  00357300
&ZMS             SETC  '"RSNCODE='                                      00357400
&ZMS             SETC  '&ZMS.&RSNCODE"'                                 00357500
&ZMS             SETC  '&ZMS "RSNCODE"'                                 00357600
                 MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'              00357700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00357800
.ZG66A           ANOP  ,                                                00357900
.*-------------------------------------------------------------------   00358000
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00358100
                 AIF   (K'&RSNCODE(1) LE 0).ZG66C  NO PARM              00358200
&ZXRSNCODE       SETC  'OUTPUT'    SET OUTPUT                           00358300
&XRSNCODE        SETC  '&RSNCODE(1)'            SET XVARIABLE           00358400
                 AIF   (N'&RSNCODE GT 1).ZG66C                          00358500
&XRSNCODE        SETC  '&RSNCODE'  SET XVARIABLE                        00358600
.ZG66C           ANOP  ,                                                00358700
.*-------------------------------------------------------------------   00358800
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00358900
                 AIF   (K'&ZXRSNCODE LE 0).ZG66R  NOT I/O               00359000
                 AIF   ('&XRSNCODE'(1,1) NE '(').ZG66R                  00359100
&ZCGPR           SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                     00359200
                 AIF   ('&ZCGPR'(1,1) NE '0').ZG66P                     00359300
                 AIF   (K'&ZCGPR GT 2).ZG66Q                            00359400
                 AIF   ('&ZCGPR' EQ '0').ZG66R                          00359500
&ZCGPR           SETC  '&ZCGPR'(2,1)                                    00359600
                 AIF   (T'&ZCGPR NE 'N').ZG66Q  INVALID REG NAME        00359700
.ZG66P           ANOP  ,                                                00359800
                 AIF   (T'&ZCGPR NE 'N').ZG66R  NON NUMERIC             00359900
                 AIF   ('&ZCGPR' EQ '0').ZG66R                          00360000
                 AIF   ('&ZCGPR' LT '2').ZG66Q                          00360100
                 AIF   ('&ZCGPR' LE '12').ZG66R                         00360200
.ZG66Q           ANOP  ,                                                00360300
&ZMS             SETC  '"RSNCODE='                                      00360400
&ZMS             SETC  '&ZMS.&RSNCODE"'                                 00360500
&ZMS             SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'        00360600
                 MNOTE 8,' &ZMS IN THE RANGE (0) OR (2)-(12).'          00360700
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00360800
.ZG66R           ANOP  ,                                                00360900
.******************************************************************     00361000
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00361100
.******************************************************************     00361200
                 ACTR  10000                                            00361300
.*----------------------------------------------------------------***   00361400
.***AH.P02 EXTRA POSITIONALS                                            00361500
                 AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS             00361600
                 AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL             00361700
                 AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL         00361800
                 AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL          00361900
.ZGLISTX1        ANOP  ,                                                00362000
&ZCVAL           SETC  ''          ERROR FIELD                          00362100
&ZAWRK           SETA  0           POSITIONAL NUMBER                    00362200
.ZGLIST2         ANOP  ,                                                00362300
&ZAWRK           SETA  &ZAWRK+1    NEXT POSITIONAL                      00362400
                 AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE             00362500
&ZCVAL           SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                  00362600
                 AGO   .ZGLIST2                                         00362700
.*                                                                      00362800
.ZGLIST3         ANOP  ,                                                00362900
&ZCVAL           SETC '&ZCVAL'(2,K'&ZCVAL-1)    STRIP COMMA             00363000
&ZMS             SETC  'POSITIONAL ARGUMENT(S),'                        00363100
&ZMS             SETC  '&ZMS "&ZCVAL"'                                  00363200
&ZMS             SETC  '&ZMS CANNOT BE USED.'                           00363300
&ZMS             SETC  '&ZMS NO POSITIONAL ARGUMENTS'                   00363400
                 MNOTE 8,' &ZMS ARE ALLOWED.'                           00363500
&ZMACRET         SETA  8           SET MACRO ERROR RETURN CODE          00363600
.ZGLISTX         ANOP  ,                                                00363700
&ZASYSLNDX       SETA  0                                                00363800
.*-------------------------------------------------------------------   00363900
.***AG.MF04 MF=(SLE)                                                    00364000
.ZGMFX           ANOP  ,           END OF FULL SYNTAX CHECK             00364100
.*******************************************************************    00364200
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00364300
.*******************************************************************    00364400
                 AIF   (&ZMACRET NE 0).ZLX2     ERROR DETECTED          00364500
.*******************************************************************    00364600
.***AE.01  START OF IXCSRVR MACRO CODE                                  00364700
.*******************************************************************    00364800
                 LCLC  &M0M0001                 NAME                    00364900
&M0M0001         SETC  '&XLABEL'                SET NAME                00365000
                 AIF   (K'&XLABEL NE 0).XLAB2                           00365100
&M0M0001         SETC  'M00M&SYSNDX'            DEFAULT NAME            00365200
.*                                                                      00365300
.XLAB2           ANOP  ,                                                00365400
                 AIF   ('&XMF' EQ 'L').XLAB3                            00365500
&M0M0001 DS    0H                             IXCSRVR-0                 00365600
.XLAB3           ANOP  ,                                                00365700
.*******************************************************************    00365800
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00365900
.*******************************************************************    00366000
              PUSH  PRINT                                               00366100
                 AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON       00366200
                 PRINT OFF         ++ PR01                              00366300
                 AGO   .ZPRNTXX                                         00366400
.ZPRINTX         PRINT ON                                               00366500
.ZPRNTXX         ANOP  ,                                                00366600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00366700
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00366800
.********************************************************************   00366900
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00367000
.********************************************************************   00367100
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00367200
                      LCLA  &ZOPN1         INVOCATION INDEX             00367300
                      LCLC  &ZOPL(4095)    LABEL                        00367400
                      LCLC  &ZOPO(4095)    OPERATION                    00367500
                      LCLC  &ZOPV(4095)    VALUE                        00367600
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00367700
.*                                                                      00367800
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00367900
.******************************************************************     00368000
.***AL.L10 IXCSRVR FMT=LIST MF=S!L PARAMETERS                           00368100
.******************************************************************     00368200
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00368300
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00368400
&XMFCTRL              SETC  '#Z'.'&SYSNDX'.'A'                          00368500
&XMFATTR              SETC  '0D'                                        00368600
.*                                                                      00368700
&ZOPN                 SETA  &ZOPN+1                                     00368800
&ZOPL(&ZOPN)          SETC  ' '                                         00368900
&ZOPO(&ZOPN)          SETC  'CNOP'                                      00369000
&ZOPV(&ZOPN)          SETC  '4,8'                                       00369100
&ZOPN                 SETA  &ZOPN+1                                     00369200
&ZOPL(&ZOPN)          SETC  ' '                                         00369300
&ZOPO(&ZOPN)          SETC  'BRAS'                                      00369400
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              00369500
&ZOPD(&ZOPN)          SETC  '++ IXCSRVR ARG PARMS'                      00369600
.*                                                                      00369700
&ZOPN                 SETA  &ZOPN+1                                     00369800
&ZOPL(&ZOPN)          SETC  ' '                                         00369900
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00370000
&ZOPV(&ZOPN)          SETC  '1'                                         00370100
&ZOPD(&ZOPN)          SETC  ' '                                         00370200
.*                                                                      00370300
.ZLMFSL2              ANOP  ,                                           00370400
.*-------------------------------------------------------------------   00370500
.***AM.L00  IXCSRVR FMT=LIST name                                       00370600
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00370700
&ZOPN                 SETA &ZOPN+1                                      00370800
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00370900
&ZOPO(&ZOPN)          SETC 'EQU'                                        00371000
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00371100
&ZOPD(&ZOPN)          SETC '++ IXCSRVR NAME'                            00371200
.ZLMFSL2M             ANOP  ,                                           00371300
.*-------------------------------------------------------------------   00371400
.***AM.L01  IXCSRVR FMT=LIST PARAMETERS                                 00371500
&ZOPN                 SETA &ZOPN+1                                      00371600
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00371700
&ZOPO(&ZOPN)          SETC 'DS'                                         00371800
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00371900
&ZOPD(&ZOPN)          SETC '++ IXCSRVR PARM LIST'                       00372000
.*-------------------------------------------------------------------   00372100
.***AM.L02 XVERSION XL1                                                 00372200
&ZOPN                 SETA &ZOPN+1                                      00372300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00372400
&ZOPO(&ZOPN)          SETC 'DS'                                         00372500
&ZOPV(&ZOPN)          SETC 'XL1'                                        00372600
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00372700
.*-------------------------------------------------------------------   00372800
.***AM.L09  XRSV0001 CL1                                                00372900
&ZOPN                 SETA &ZOPN+1                                      00373000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0001'                         00373100
&ZOPO(&ZOPN)          SETC 'DS'                                         00373200
&ZOPV(&ZOPN)          SETC 'CL1'                                        00373300
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00373400
.*-------------------------------------------------------------------   00373500
.***AM.L05 XREQTYPE XL1                                                 00373600
&ZOPN                 SETA &ZOPN+1                                      00373700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQTYPE'                         00373800
&ZOPO(&ZOPN)          SETC 'DS'                                         00373900
&ZOPV(&ZOPN)          SETC 'XL1'                                        00374000
&ZOPD(&ZOPN)          SETC '++ &ZXREQTYPE XREQTYPE'                     00374100
.*                                                                      00374200
&ZOPN                 SETA  &ZOPN+1                                     00374300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQTYPE_START'                  00374400
&ZOPO(&ZOPN)          SETC  'EQU'                                       00374500
&ZOPV(&ZOPN)          SETC  '1'                                         00374600
&ZOPD(&ZOPN)          SETC  '++ XREQTYPE.'                              00374700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).START'                        00374800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00374900
.*                                                                      00375000
&ZOPN                 SETA  &ZOPN+1                                     00375100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XREQTYPE_STOP'                   00375200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00375300
&ZOPV(&ZOPN)          SETC  '2'                                         00375400
&ZOPD(&ZOPN)          SETC  '++ XREQTYPE.'                              00375500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).STOP'                         00375600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00375700
.*-------------------------------------------------------------------   00375800
.***AM.L05 XRESPBIND XL1                                                00375900
&ZOPN                 SETA &ZOPN+1                                      00376000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRESPBIND'                        00376100
&ZOPO(&ZOPN)          SETC 'DS'                                         00376200
&ZOPV(&ZOPN)          SETC 'XL1'                                        00376300
&ZOPD(&ZOPN)          SETC '++ &ZXRESPBIND XRESPBIND'                   00376400
.*                                                                      00376500
&ZOPN                 SETA  &ZOPN+1                                     00376600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XRESPBIND_INSTANCE'              00376700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00376800
&ZOPV(&ZOPN)          SETC  '1'                                         00376900
&ZOPD(&ZOPN)          SETC  '++ XRESPBIND.'                             00377000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).INSTANCE'                     00377100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00377200
.*                                                                      00377300
&ZOPN                 SETA  &ZOPN+1                                     00377400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XRESPBIND_ADDRSPACE'             00377500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00377600
&ZOPV(&ZOPN)          SETC  '2'                                         00377700
&ZOPD(&ZOPN)          SETC  '++ XRESPBIND.'                             00377800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ADDRSPACE'                    00377900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00378000
.*                                                                      00378100
&ZOPN                 SETA  &ZOPN+1                                     00378200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XRESPBIND_SYSTEM'                00378300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00378400
&ZOPV(&ZOPN)          SETC  '3'                                         00378500
&ZOPD(&ZOPN)          SETC  '++ XRESPBIND.'                             00378600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SYSTEM'                       00378700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00378800
.*-------------------------------------------------------------------   00378900
.***AM.L03 XSTOPFLAGS BL.8                                              00379000
&ZOPN                 SETA &ZOPN+1                                      00379100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSTOPFLAGS'                       00379200
&ZOPO(&ZOPN)          SETC 'DS'                                         00379300
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00379400
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00379500
.*                                                                      00379600
&ZOPN                 SETA  &ZOPN+1                                     00379700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSCOPE_SOME'                     00379800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00379900
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00380000
&ZOPD(&ZOPN)          SETC  '++ XSCOPE.'                                00380100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SOME'                         00380200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00380300
.*                                                                      00380400
&ZOPN                 SETA  &ZOPN+1                                     00380500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSCOPE_ALL'                      00380600
&ZOPO(&ZOPN)          SETC  'EQU'                                       00380700
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00380800
&ZOPD(&ZOPN)          SETC  '++ XSCOPE.'                                00380900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ALL'                          00381000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00381100
.*                                                                      00381200
&ZOPN                 SETA  &ZOPN+1                                     00381300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODE_NORMAL'                    00381400
&ZOPO(&ZOPN)          SETC  'EQU'                                       00381500
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             00381600
&ZOPD(&ZOPN)          SETC  '++ XMODE.'                                 00381700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).NORMAL'                       00381800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00381900
.*                                                                      00382000
&ZOPN                 SETA  &ZOPN+1                                     00382100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XMODE_IMMEDIATE'                 00382200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00382300
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             00382400
&ZOPD(&ZOPN)          SETC  '++ XMODE.'                                 00382500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).IMMEDIATE'                    00382600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00382700
.*-------------------------------------------------------------------   00382800
.***AM.L03 XKEYUSED2 BL.8                                               00382900
&ZOPN                 SETA &ZOPN+1                                      00383000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XKEYUSED2'                        00383100
&ZOPO(&ZOPN)          SETC 'DS'                                         00383200
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00383300
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00383400
.*                                                                      00383500
&ZOPN                 SETA  &ZOPN+1                                     00383600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_MAXLEVEL'                00383700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00383800
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00383900
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00384000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).MAXLEVEL'                     00384100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00384200
.*                                                                      00384300
&ZOPN                 SETA  &ZOPN+1                                     00384400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_MAXCLIENT'               00384500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00384600
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00384700
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00384800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).MAXCLIENT'                    00384900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00385000
.*                                                                      00385100
&ZOPN                 SETA  &ZOPN+1                                     00385200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_INFO'                    00385300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00385400
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             00385500
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00385600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).INFO'                         00385700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00385800
.*                                                                      00385900
&ZOPN                 SETA  &ZOPN+1                                     00386000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_SERVERID'                00386100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00386200
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             00386300
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00386400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SERVERID'                     00386500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00386600
.*-------------------------------------------------------------------   00386700
.***AM.L09  XFDI XL2                                                    00386800
&ZOPN                 SETA &ZOPN+1                                      00386900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFDI'                             00387000
&ZOPO(&ZOPN)          SETC 'DS'                                         00387100
&ZOPV(&ZOPN)          SETC 'XL2'                                        00387200
&ZOPD(&ZOPN)          SETC '++ &ZXFDI '                                 00387300
.*-------------------------------------------------------------------   00387400
.***AM.L09  X#SERVERS F                                                 00387500
&ZOPN                 SETA &ZOPN+1                                      00387600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._X#SERVERS'                        00387700
&ZOPO(&ZOPN)          SETC 'DS'                                         00387800
&ZOPV(&ZOPN)          SETC 'F'                                          00387900
&ZOPD(&ZOPN)          SETC '++ &ZX#SERVERS '                            00388000
.*-------------------------------------------------------------------   00388100
.***AM.L09  XRSV000C CL4                                                00388200
&ZOPN                 SETA &ZOPN+1                                      00388300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV000C'                         00388400
&ZOPO(&ZOPN)          SETC 'DS'                                         00388500
&ZOPV(&ZOPN)          SETC 'CL4'                                        00388600
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00388700
.*-------------------------------------------------------------------   00388800
.***AM.L09  XSERVERLOC CL16                                             00388900
&ZOPN                 SETA &ZOPN+1                                      00389000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSERVERLOC'                       00389100
&ZOPO(&ZOPN)          SETC 'DS'                                         00389200
&ZOPV(&ZOPN)          SETC 'CL16'                                       00389300
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL '                            00389400
.*-------------------------------------------------------------------   00389500
.***AM.L09  XRSV0020 CL4                                                00389600
&ZOPN                 SETA &ZOPN+1                                      00389700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0020'                         00389800
&ZOPO(&ZOPN)          SETC 'DS'                                         00389900
&ZOPV(&ZOPN)          SETC 'CL4'                                        00390000
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00390100
.*-------------------------------------------------------------------   00390200
.***AM.L09  XSERVEREXIT A                                               00390300
&ZOPN                 SETA &ZOPN+1                                      00390400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSERVEREXIT'                      00390500
&ZOPO(&ZOPN)          SETC 'DS'                                         00390600
&ZOPV(&ZOPN)          SETC 'A'                                          00390700
&ZOPD(&ZOPN)          SETC '++ &ZXSERVEREXIT '                          00390800
.*-------------------------------------------------------------------   00390900
.***AM.L09 ADDR64 XDESCRIPTION AD                                       00391000
&ZOPN                 SETA &ZOPN+1                                      00391100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDESCRIPTION_ADDR64'              00391200
&ZOPO(&ZOPN)          SETC 'DS'                                         00391300
&ZOPV(&ZOPN)          SETC 'AD'                                         00391400
&ZOPD(&ZOPN)          SETC '++ &ZXDESCRIPTION ADDR64'                   00391500
.*-------------------------------------------------------------------   00391600
.***AM.L09 ADDR64 XINFO AD                                              00391700
&ZOPN                 SETA &ZOPN+1                                      00391800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XINFO_ADDR64'                     00391900
&ZOPO(&ZOPN)          SETC 'DS'                                         00392000
&ZOPV(&ZOPN)          SETC 'AD'                                         00392100
&ZOPD(&ZOPN)          SETC '++ &ZXINFO ADDR64'                          00392200
.*-------------------------------------------------------------------   00392300
.***AM.L09 ALET XDESCRIPTION F                                          00392400
&ZOPN                 SETA &ZOPN+1                                      00392500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDESCRIPTION_ALET'                00392600
&ZOPO(&ZOPN)          SETC 'DS'                                         00392700
&ZOPV(&ZOPN)          SETC 'F'                                          00392800
&ZOPD(&ZOPN)          SETC '++ &ZXDESCRIPTION ALET'                     00392900
.*-------------------------------------------------------------------   00393000
.***AM.L09 ALET XINFO F                                                 00393100
&ZOPN                 SETA &ZOPN+1                                      00393200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XINFO_ALET'                       00393300
&ZOPO(&ZOPN)          SETC 'DS'                                         00393400
&ZOPV(&ZOPN)          SETC 'F'                                          00393500
&ZOPD(&ZOPN)          SETC '++ &ZXINFO ALET'                            00393600
.*-------------------------------------------------------------------   00393700
.***AM.L09  XUSERDATA CL16                                              00393800
&ZOPN                 SETA &ZOPN+1                                      00393900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XUSERDATA'                        00394000
&ZOPO(&ZOPN)          SETC 'DS'                                         00394100
&ZOPV(&ZOPN)          SETC 'CL16'                                       00394200
&ZOPD(&ZOPN)          SETC '++ &ZXUSERDATA '                            00394300
.*-------------------------------------------------------------------   00394400
.***AM.L09  XFEATURES CL8                                               00394500
&ZOPN                 SETA &ZOPN+1                                      00394600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFEATURES'                        00394700
&ZOPO(&ZOPN)          SETC 'DS'                                         00394800
&ZOPV(&ZOPN)          SETC 'CL8'                                        00394900
&ZOPD(&ZOPN)          SETC '++ &ZXFEATURES '                            00395000
.*-------------------------------------------------------------------   00395100
.***AM.L09  XMINLEVEL F                                                 00395200
&ZOPN                 SETA &ZOPN+1                                      00395300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMINLEVEL'                        00395400
&ZOPO(&ZOPN)          SETC 'DS'                                         00395500
&ZOPV(&ZOPN)          SETC 'F'                                          00395600
&ZOPD(&ZOPN)          SETC '++ &ZXMINLEVEL '                            00395700
.*-------------------------------------------------------------------   00395800
.***AM.L09  XMAXLEVEL F                                                 00395900
&ZOPN                 SETA &ZOPN+1                                      00396000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMAXLEVEL'                        00396100
&ZOPO(&ZOPN)          SETC 'DS'                                         00396200
&ZOPV(&ZOPN)          SETC 'F'                                          00396300
&ZOPD(&ZOPN)          SETC '++ &ZXMAXLEVEL '                            00396400
.*-------------------------------------------------------------------   00396500
.***AM.L09  XMINCLIENT F                                                00396600
&ZOPN                 SETA &ZOPN+1                                      00396700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMINCLIENT'                       00396800
&ZOPO(&ZOPN)          SETC 'DS'                                         00396900
&ZOPV(&ZOPN)          SETC 'F'                                          00397000
&ZOPD(&ZOPN)          SETC '++ &ZXMINCLIENT '                           00397100
.*-------------------------------------------------------------------   00397200
.***AM.L09  XMAXCLIENT F                                                00397300
&ZOPN                 SETA &ZOPN+1                                      00397400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMAXCLIENT'                       00397500
&ZOPO(&ZOPN)          SETC 'DS'                                         00397600
&ZOPV(&ZOPN)          SETC 'F'                                          00397700
&ZOPD(&ZOPN)          SETC '++ &ZXMAXCLIENT '                           00397800
.*-------------------------------------------------------------------   00397900
.***AM.MLM1 SAVED LOCATION COUNTER                                      00398000
                      AIF  ('&ZENDBASEPL' NE '').ZL35LB                 00398100
&ZENDBASEPL           SETC 'YES'                                        00398200
&ZOPN                 SETA &ZOPN+1                                      00398300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00398400
&ZOPO(&ZOPN)          SETC 'EQU'                                        00398500
&ZOPV(&ZOPN)          SETC '*'                                          00398600
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00398700
.ZL35LB               ANOP  ,                                           00398800
.*-------------------------------------------------------------------   00398900
.***AM.PJR1 DEFINED ON XSERVERLOC                                       00399000
&ZOPN                 SETA &ZOPN+1                                      00399100
&ZOPL(&ZOPN)          SETC ' '                                          00399200
&ZOPO(&ZOPN)          SETC 'ORG'                                        00399300
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+16'                               00399400
&ZOPD(&ZOPN)          SETC ' '                                          00399500
.*-------------------------------------------------------------------   00399600
.***AM.L09  XRSV0010 CL4                                                00399700
&ZOPN                 SETA &ZOPN+1                                      00399800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0010'                         00399900
&ZOPO(&ZOPN)          SETC 'DS'                                         00400000
&ZOPV(&ZOPN)          SETC 'CL4'                                        00400100
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00400200
.*-------------------------------------------------------------------   00400300
.***AM.L09 ALET XSERVER F                                               00400400
&ZOPN                 SETA &ZOPN+1                                      00400500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSERVER_ALET'                     00400600
&ZOPO(&ZOPN)          SETC 'DS'                                         00400700
&ZOPV(&ZOPN)          SETC 'F'                                          00400800
&ZOPD(&ZOPN)          SETC '++ &ZXSERVER ALET'                          00400900
.*-------------------------------------------------------------------   00401000
.***AM.L09 ADDR64 XSERVER AD                                            00401100
&ZOPN                 SETA &ZOPN+1                                      00401200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSERVER_ADDR64'                   00401300
&ZOPO(&ZOPN)          SETC 'DS'                                         00401400
&ZOPV(&ZOPN)          SETC 'AD'                                         00401500
&ZOPD(&ZOPN)          SETC '++ &ZXSERVER ADDR64'                        00401600
.*-------------------------------------------------------------------   00401700
.***AM.PJR1 DEFINED ON XSERVERLOC                                       00401800
&ZOPN                 SETA &ZOPN+1                                      00401900
&ZOPL(&ZOPN)          SETC ' '                                          00402000
&ZOPO(&ZOPN)          SETC 'ORG'                                        00402100
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+16'                               00402200
&ZOPD(&ZOPN)          SETC ' '                                          00402300
.*-------------------------------------------------------------------   00402400
.***AM.L09  XRSV0011 CL4                                                00402500
&ZOPN                 SETA &ZOPN+1                                      00402600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0011'                         00402700
&ZOPO(&ZOPN)          SETC 'DS'                                         00402800
&ZOPV(&ZOPN)          SETC 'CL4'                                        00402900
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00403000
.*-------------------------------------------------------------------   00403100
.***AM.L09 ALET XSERVERID F                                             00403200
&ZOPN                 SETA &ZOPN+1                                      00403300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSERVERID_ALET'                   00403400
&ZOPO(&ZOPN)          SETC 'DS'                                         00403500
&ZOPV(&ZOPN)          SETC 'F'                                          00403600
&ZOPD(&ZOPN)          SETC '++ &ZXSERVERID ALET'                        00403700
.*-------------------------------------------------------------------   00403800
.***AM.L09 ADDR64 XSERVERID AD                                          00403900
&ZOPN                 SETA &ZOPN+1                                      00404000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSERVERID_ADDR64'                 00404100
&ZOPO(&ZOPN)          SETC 'DS'                                         00404200
&ZOPV(&ZOPN)          SETC 'AD'                                         00404300
&ZOPD(&ZOPN)          SETC '++ &ZXSERVERID ADDR64'                      00404400
&ZOPN                 SETA &ZOPN+1                                      00404500
&ZOPL(&ZOPN)          SETC ' '                                          00404600
&ZOPO(&ZOPN)          SETC 'ORG'                                        00404700
&ZOPV(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00404800
&ZOPD(&ZOPN)          SETC 'RESET LOCATION COUNTER'                     00404900
.*-------------------------------------------------------------------   00405000
.***AM.L10 END OF IXCSRVR LIST PARAMETERS                               00405100
&ZOPN                 SETA &ZOPN+1                                      00405200
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00405300
&ZOPO(&ZOPN)          SETC 'EQU'                                        00405400
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00405500
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00405600
.*                                                                      00405700
&ZOPN                 SETA &ZOPN+1                                      00405800
&ZOPL(&ZOPN)          SETC ' '                                          00405900
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00406000
&ZOPV(&ZOPN)          SETC '1'                                          00406100
&ZOPD(&ZOPN)          SETC ' '                                          00406200
.*-------------------------------------------------------------------   00406300
.***AL.L12 IXCSRVR FMT=LIST MF=S!L PARAMETERS                           00406400
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00406500
.*                                                                      00406600
&ZOPN                 SETA  &ZOPN+1                                     00406700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00406800
&ZOPO(&ZOPN)          SETC  'DC'                                        00406900
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00407000
&ZOPD(&ZOPN)          SETC  '++ IXCSRVR ARG PARMS'                      00407100
.*                                                                      00407200
.ZLMFSLX              ANOP  ,                                           00407300
.*-------------------------------------------------------------------   00407400
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00407500
&ZPLLEN               SETA 104                                          00407600
.*                                                                      00407700
.******************************************************************     00407800
.***AI.L01 IXCSRVR FMT=LIST FILL IN PARAMETER AREA                      00407900
.******************************************************************     00408000
                      ACTR  10000                                       00408100
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00408200
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00408300
&ZCVAL                SETC  'LAE'          XAX MODE                     00408400
.ZIMFXA               ANOP ,                                            00408500
.*                                                                      00408600
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00408700
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00408800
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00408900
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00409000
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00409100
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00409200
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00409300
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00409400
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00409500
&ZOPN                 SETA  &ZOPN+1                                     00409600
&ZOPL(&ZOPN)          SETC  ' '                                         00409700
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00409800
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00409900
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00410000
                      AGO   .ZIMFNX                                     00410100
.*                                                                      00410200
.ZIMFN2               ANOP ,                                            00410300
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     00410400
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  00410500
&ZOPN                 SETA  &ZOPN+1                                     00410600
&ZOPL(&ZOPN)          SETC  ' '                                         00410700
&ZOPO(&ZOPN)          SETC  'LAE'                                       00410800
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  00410900
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00411000
                      AGO   .ZIMFNX                                     00411100
.ZIMFNX1              ANOP ,                                            00411200
&ZOPN                 SETA  &ZOPN+1                                     00411300
&ZOPL(&ZOPN)          SETC  ' '                                         00411400
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00411500
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00411600
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00411700
.ZIMFNX               ANOP ,                                            00411800
.********************************************************************   00411900
.***AI.L02 IXCSRVR FMT=LIST INITIALIZE PARAMETER AREA                   00412000
.********************************************************************   00412100
.***AI.L03 MF=(SLE)                                                     00412200
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00412300
.*                                                                      00412400
&ZOPN                 SETA  &ZOPN+1                                     00412500
&ZOPL(&ZOPN)          SETC  ' '                                         00412600
&ZOPO(&ZOPN)          SETC  'XC'                                        00412700
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00412800
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00412900
.ZIMFLX               ANOP  ,                                           00413000
.*-------------------------------------------------------------------   00413100
.***AI.L07 XREQTYPE AL1                                                 00413200
&ZW                   SETC  ''                                          00413300
.*-------------------------------------------------------------------   00413400
.***AI.L15 XREQTYPE "START" AL1                                         00413500
         AIF   ('&XREQTYPE' NE 'START').ZI4A                            00413600
&ZW                   SETC  '1'                                         00413700
.ZI4A                 ANOP  ,                                           00413800
.*-------------------------------------------------------------------   00413900
.***AI.L15 XREQTYPE "STOP" AL1                                          00414000
         AIF   ('&XREQTYPE' NE 'STOP').ZI5A                             00414100
&ZW                   SETC  '2'                                         00414200
.ZI5A                 ANOP  ,                                           00414300
.*-------------------------------------------------------------------   00414400
.***AI.L17 XREQTYPE AL1                                                 00414500
                      AIF   ('&ZW' EQ '0').ZI5B                         00414600
                      AIF   ('&ZW' EQ '').ZI5B                          00414700
.*                                                                      00414800
&ZOPN                 SETA  &ZOPN+1                                     00414900
&ZOPL(&ZOPN)          SETC  ' '                                         00415000
&ZOPO(&ZOPN)          SETC  'MVI'                                       00415100
&ZOPV(&ZOPN)          SETC  '2(1),&ZW'                                  00415200
&ZOPD(&ZOPN)          SETC  '++ &ZXREQTYPE XREQTYPE'                    00415300
.ZI5B                 ANOP  ,                                           00415400
.*-------------------------------------------------------------------   00415500
.***AI.L07 XRESPBIND AL1                                                00415600
&ZW                   SETC  ''                                          00415700
.*-------------------------------------------------------------------   00415800
.***AI.L15 XRESPBIND "INSTANCE" AL1                                     00415900
         AIF   ('&XRESPBIND' NE 'INSTANCE').ZI7A                        00416000
&ZW                   SETC  '1'                                         00416100
.ZI7A                 ANOP  ,                                           00416200
.*-------------------------------------------------------------------   00416300
.***AI.L15 XRESPBIND "ADDRSPACE" AL1                                    00416400
         AIF   ('&XRESPBIND' NE 'ADDRSPACE').ZI8A                       00416500
&ZW                   SETC  '2'                                         00416600
.ZI8A                 ANOP  ,                                           00416700
.*-------------------------------------------------------------------   00416800
.***AI.L15 XRESPBIND "SYSTEM" AL1                                       00416900
         AIF   ('&XRESPBIND' NE 'SYSTEM').ZI9A                          00417000
&ZW                   SETC  '3'                                         00417100
.ZI9A                 ANOP  ,                                           00417200
.*-------------------------------------------------------------------   00417300
.***AI.L17 XRESPBIND AL1                                                00417400
                      AIF   ('&ZW' EQ '0').ZI9B                         00417500
                      AIF   ('&ZW' EQ '').ZI9B                          00417600
.*                                                                      00417700
&ZOPN                 SETA  &ZOPN+1                                     00417800
&ZOPL(&ZOPN)          SETC  ' '                                         00417900
&ZOPO(&ZOPN)          SETC  'MVI'                                       00418000
&ZOPV(&ZOPN)          SETC  '3(1),&ZW'                                  00418100
&ZOPD(&ZOPN)          SETC  '++ &ZXRESPBIND XRESPBIND'                  00418200
.ZI9B                 ANOP  ,                                           00418300
.*-------------------------------------------------------------------   00418400
.***AI.L05 XSTOPFLAGS BL1                                               00418500
&ZW                   SETC  ''                                          00418600
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00418700
.*-------------------------------------------------------------------   00418800
.***AI.L08 XSTOPFLAGS "SOME"                                            00418900
.***      BL1'1XXXXXXX'                                                 00419000
         AIF   ('&XSCOPE' NE 'SOME').ZI11A                              00419100
&ZW                   SETC  '&ZW.1'                                     00419200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00419300
                      AGO   .ZI11C                                      00419400
.*                                                                      00419500
.ZI11A                ANOP  ,                                           00419600
&ZW                   SETC  '&ZW.0'                                     00419700
.ZI11C                ANOP  ,                                           00419800
.*-------------------------------------------------------------------   00419900
.***AI.L08 XSTOPFLAGS "ALL"                                             00420000
.***      BL1'X1XXXXXX'                                                 00420100
         AIF   ('&XSCOPE' NE 'ALL').ZI12A                               00420200
&ZW                   SETC  '&ZW.1'                                     00420300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00420400
                      AGO   .ZI12C                                      00420500
.*                                                                      00420600
.ZI12A                ANOP  ,                                           00420700
&ZW                   SETC  '&ZW.0'                                     00420800
.ZI12C                ANOP  ,                                           00420900
.*-------------------------------------------------------------------   00421000
.***AI.L08 XSTOPFLAGS "NORMAL"                                          00421100
.***      BL1'XX1XXXXX'                                                 00421200
         AIF   ('&XMODE' NE 'NORMAL').ZI13A                             00421300
&ZW                   SETC  '&ZW.1'                                     00421400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00421500
                      AGO   .ZI13C                                      00421600
.*                                                                      00421700
.ZI13A                ANOP  ,                                           00421800
&ZW                   SETC  '&ZW.0'                                     00421900
.ZI13C                ANOP  ,                                           00422000
.*-------------------------------------------------------------------   00422100
.***AI.L08 XSTOPFLAGS "IMMEDIATE"                                       00422200
.***      BL1'XXX1XXXX'                                                 00422300
         AIF   ('&XMODE' NE 'IMMEDIATE').ZI14A                          00422400
&ZW                   SETC  '&ZW.10000'                                 00422500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00422600
                      AGO   .ZI14C                                      00422700
.*                                                                      00422800
.ZI14A                ANOP  ,                                           00422900
&ZW                   SETC  '&ZW.00000'                                 00423000
.ZI14C                ANOP  ,                                           00423100
.*-------------------------------------------------------------------   00423200
.***AI.L11 XSTOPFLAGS BL1                                               00423300
                      AIF   ('&ZCLNG' NE 'YES').ZI14E  ALL ZERO BITS    00423400
&ZOPN                 SETA  &ZOPN+1                                     00423500
&ZOPL(&ZOPN)          SETC  ' '                                         00423600
&ZOPO(&ZOPN)          SETC  'OI'                                        00423700
&ZOPV(&ZOPN)          SETC  '4(1),B''&ZW'''                             00423800
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00423900
.ZI14E                ANOP  ,                                           00424000
.*-------------------------------------------------------------------   00424100
.***AI.L05 XKEYUSED2 BL1                                                00424200
&ZW                   SETC  ''                                          00424300
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00424400
.*-------------------------------------------------------------------   00424500
.***AI.L08 XKEYUSED2 "MAXLEVEL"                                         00424600
.***      BL1'1XXXXXXX'                                                 00424700
         AIF   ('&MAXLEVEL' EQ '').ZI16A                                00424800
         AIF   ('&MAXLEVEL' EQ 'MINLEVEL').ZI16A                        00424900
&ZW                   SETC  '&ZW.1'                                     00425000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00425100
                      AGO   .ZI16C                                      00425200
.*                                                                      00425300
.ZI16A                ANOP  ,                                           00425400
&ZW                   SETC  '&ZW.0'                                     00425500
.ZI16C                ANOP  ,                                           00425600
.*-------------------------------------------------------------------   00425700
.***AI.L08 XKEYUSED2 "MAXCLIENT"                                        00425800
.***      BL1'X1XXXXXX'                                                 00425900
         AIF   ('&MAXCLIENT' EQ '').ZI17A                               00426000
         AIF   ('&MAXCLIENT' EQ 'MINCLIENT').ZI17A                      00426100
&ZW                   SETC  '&ZW.1'                                     00426200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00426300
                      AGO   .ZI17C                                      00426400
.*                                                                      00426500
.ZI17A                ANOP  ,                                           00426600
&ZW                   SETC  '&ZW.0'                                     00426700
.ZI17C                ANOP  ,                                           00426800
.*-------------------------------------------------------------------   00426900
.***AI.L08 XKEYUSED2 "INFO"                                             00427000
.***      BL1'XX1XXXXX'                                                 00427100
         AIF   ('&INFO' EQ '').ZI18A                                    00427200
         AIF   ('&INFO' EQ '0').ZI18A                                   00427300
&ZW                   SETC  '&ZW.1'                                     00427400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00427500
                      AGO   .ZI18C                                      00427600
.*                                                                      00427700
.ZI18A                ANOP  ,                                           00427800
&ZW                   SETC  '&ZW.0'                                     00427900
.ZI18C                ANOP  ,                                           00428000
.*-------------------------------------------------------------------   00428100
.***AI.L08 XKEYUSED2 "SERVERID"                                         00428200
.***      BL1'XXX1XXXX'                                                 00428300
         AIF   ('&SERVERID' EQ '').ZI19A                                00428400
&ZW                   SETC  '&ZW.10000'                                 00428500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00428600
                      AGO   .ZI19C                                      00428700
.*                                                                      00428800
.ZI19A                ANOP  ,                                           00428900
&ZW                   SETC  '&ZW.00000'                                 00429000
.ZI19C                ANOP  ,                                           00429100
.*-------------------------------------------------------------------   00429200
.***AI.L11 XKEYUSED2 BL1                                                00429300
                      AIF   ('&ZCLNG' NE 'YES').ZI19E  ALL ZERO BITS    00429400
&ZOPN                 SETA  &ZOPN+1                                     00429500
&ZOPL(&ZOPN)          SETC  ' '                                         00429600
&ZOPO(&ZOPN)          SETC  'OI'                                        00429700
&ZOPV(&ZOPN)          SETC  '5(1),B''&ZW'''                             00429800
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00429900
.ZI19E                ANOP  ,                                           00430000
.*-------------------------------------------------------------------   00430100
.***AI.L25  XFDI XL2                                                    00430200
                      AIF   ('&ZXFDI' EQ '').ZI20E                      00430300
                      AIF   ('&ZXFDI' EQ 'OUTPUT').ZI20E                00430400
&ZCGPR                SETC  '&XFDI'                                     00430500
.*                                                                      00430600
                      AIF   ('&XFDI'(1,1) NE '(').ZI20B                 00430700
&ZCGPR   SETC  '0('.'&XFDI'(2,K'&XFDI-2).')'                            00430800
                      AGO   .ZI20D                                      00430900
.ZI20B                ANOP  ,                                           00431000
.*                                                                      00431100
&ZC                   SETC  '&XFDI'(1,1)                                00431200
                      AIF   (T'&ZC NE 'N').ZI20D                        00431300
&ZC                   SETC  '&XFDI'                                     00431400
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI20D               00431500
&ZCGPR                SETC  '=FL2''&XFDI'''                             00431600
.*                                                                      00431700
.ZI20D                ANOP  ,                                           00431800
.*                                                                      00431900
&ZOPN                 SETA  &ZOPN+1                                     00432000
&ZOPL(&ZOPN)          SETC  ' '                                         00432100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00432200
&ZOPV(&ZOPN)          SETC  '6(2,1),&ZCGPR'                             00432300
&ZOPD(&ZOPN)          SETC  '++ &ZXFDI XFDI'                            00432400
.*                                                                      00432500
.ZI20E                ANOP  ,                                           00432600
.*-------------------------------------------------------------------   00432700
.***AI.L25  X#SERVERS F                                                 00432800
                      AIF   ('&ZX#SERVERS' EQ '').ZI21E                 00432900
                      AIF   ('&ZX#SERVERS' EQ 'OUTPUT').ZI21E           00433000
&ZCGPR                SETC  '&X#SERVERS'                                00433100
.*                                                                      00433200
                      AIF   ('&X#SERVERS'(1,1) NE '(').ZI21B            00433300
&ZCGPR   SETC  '0('.'&X#SERVERS'(2,K'&X#SERVERS-2).')'                  00433400
                      AGO   .ZI21D                                      00433500
.ZI21B                ANOP  ,                                           00433600
.*                                                                      00433700
&ZC                   SETC  '&X#SERVERS'(1,1)                           00433800
                      AIF   (T'&ZC NE 'N').ZI21D                        00433900
&ZC                   SETC  '&X#SERVERS'                                00434000
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI21D               00434100
&ZCGPR                SETC  '=AL4(&X#SERVERS)'                          00434200
.*                                                                      00434300
.ZI21D                ANOP  ,                                           00434400
.*                                                                      00434500
&ZOPN                 SETA  &ZOPN+1                                     00434600
&ZOPL(&ZOPN)          SETC  ' '                                         00434700
&ZOPO(&ZOPN)          SETC  'MVC'                                       00434800
&ZOPV(&ZOPN)          SETC  '8(4,1),&ZCGPR'                             00434900
&ZOPD(&ZOPN)          SETC  '++ &ZX#SERVERS X#SERVERS'                  00435000
.*                                                                      00435100
.ZI21E                ANOP  ,                                           00435200
.*-------------------------------------------------------------------   00435300
.***AI.L19  XSERVEREXIT A                                               00435400
                      AIF   ('&ZXSERVEREXIT' EQ '').ZI25H               00435500
&ZCLNG                SETC  '&XSERVEREXIT'                              00435600
&ZCGPR                SETC  '14'                                        00435700
         AIF   ('&XSERVEREXIT'(1,1) EQ '(').ZI25F  IN GPR               00435800
.*                                                                      00435900
&ZOPN                 SETA  &ZOPN+1                                     00436000
&ZOPL(&ZOPN)          SETC  ' '                                         00436100
&ZOPO(&ZOPN)          SETC  'LA'                                        00436200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00436300
&ZOPD(&ZOPN)          SETC  '++ &ZXSERVEREXIT XSERVEREXIT'              00436400
.*                                                                      00436500
                      AGO   .ZI25G                                      00436600
.*                                                                      00436700
.ZI25F                ANOP  ,                                           00436800
&ZCGPR   SETC  '&XSERVEREXIT'(2,K'&XSERVEREXIT-2)                       00436900
.*                                                                      00437000
.ZI25G                ANOP  ,                                           00437100
.*                                                                      00437200
&ZOPN                 SETA  &ZOPN+1                                     00437300
&ZOPL(&ZOPN)          SETC  ' '                                         00437400
&ZOPO(&ZOPN)          SETC  'ST'                                        00437500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,36(,1)'                             00437600
&ZOPD(&ZOPN)          SETC  '++ &ZXSERVEREXIT XSERVEREXIT'              00437700
.*                                                                      00437800
.ZI25H                ANOP  ,                                           00437900
.*-------------------------------------------------------------------   00438000
.***AI.L19 ADDR64 XDESCRIPTION AD                                       00438100
                      AIF   ('&ZXDESCRIPTION' EQ '').ZI26H              00438200
&ZCLNG                SETC  '&XDESCRIPTION'                             00438300
&ZCGPR                SETC  '14'                                        00438400
         AIF   ('&XDESCRIPTION'(1,1) EQ '(').ZI26F  IN GPR              00438500
.*                                                                      00438600
&ZOPN                 SETA  &ZOPN+1                                     00438700
&ZOPL(&ZOPN)          SETC  ' '                                         00438800
&ZOPO(&ZOPN)          SETC  'LA'                                        00438900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00439000
&ZOPD(&ZOPN)          SETC  '++ &ZXDESCRIPTION XDESCRIPTION'            00439100
.*                                                                      00439200
                      AGO   .ZI26G                                      00439300
.*                                                                      00439400
.ZI26F                ANOP  ,                                           00439500
&ZCGPR   SETC  '&XDESCRIPTION'(2,K'&XDESCRIPTION-2)                     00439600
.*                                                                      00439700
.ZI26G                ANOP  ,                                           00439800
                      AIF   ('&SYSAM64' EQ 'YES').ZI26H1A               00439900
.*                                                                      00440000
&ZOPN                 SETA  &ZOPN+1                                     00440100
&ZOPL(&ZOPN)          SETC  ' '                                         00440200
&ZOPO(&ZOPN)          SETC  'ST'                                        00440300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4+40(,1)'                           00440400
&ZOPD(&ZOPN)          SETC  '++ &ZXDESCRIPTION XDESCRIPTION'            00440500
.*                                                                      00440600
                      AGO   .ZI26H                                      00440700
.ZI26H1A              ANOP  ,                                           00440800
.*                                                                      00440900
&ZOPN                 SETA  &ZOPN+1                                     00441000
&ZOPL(&ZOPN)          SETC  ' '                                         00441100
&ZOPO(&ZOPN)          SETC  'STG'                                       00441200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,40(,1)'                             00441300
&ZOPD(&ZOPN)          SETC  '++ &ZXDESCRIPTION XDESCRIPTION'            00441400
.*                                                                      00441500
.ZI26H                ANOP  ,                                           00441600
.*-------------------------------------------------------------------   00441700
.***AI.L19 ADDR64 XINFO AD                                              00441800
                      AIF   ('&ZXINFO' EQ '').ZI27H                     00441900
&ZCLNG                SETC  '&XINFO'                                    00442000
&ZCGPR                SETC  '14'                                        00442100
         AIF   ('&XINFO'(1,1) EQ '(').ZI27F  IN GPR                     00442200
        AIF   ('&XINFO' EQ '0').ZI27H                                   00442300
.*                                                                      00442400
.*                                                                      00442500
&ZOPN                 SETA  &ZOPN+1                                     00442600
&ZOPL(&ZOPN)          SETC  ' '                                         00442700
&ZOPO(&ZOPN)          SETC  'LA'                                        00442800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00442900
&ZOPD(&ZOPN)          SETC  '++ &ZXINFO XINFO'                          00443000
.*                                                                      00443100
                      AGO   .ZI27G                                      00443200
.*                                                                      00443300
.ZI27F                ANOP  ,                                           00443400
&ZCGPR   SETC  '&XINFO'(2,K'&XINFO-2)                                   00443500
.*                                                                      00443600
.ZI27G                ANOP  ,                                           00443700
                      AIF   ('&SYSAM64' EQ 'YES').ZI27H1A               00443800
.*                                                                      00443900
&ZOPN                 SETA  &ZOPN+1                                     00444000
&ZOPL(&ZOPN)          SETC  ' '                                         00444100
&ZOPO(&ZOPN)          SETC  'ST'                                        00444200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4+48(,1)'                           00444300
&ZOPD(&ZOPN)          SETC  '++ &ZXINFO XINFO'                          00444400
.*                                                                      00444500
                      AGO   .ZI27H                                      00444600
.ZI27H1A              ANOP  ,                                           00444700
.*                                                                      00444800
&ZOPN                 SETA  &ZOPN+1                                     00444900
&ZOPL(&ZOPN)          SETC  ' '                                         00445000
&ZOPO(&ZOPN)          SETC  'STG'                                       00445100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,48(,1)'                             00445200
&ZOPD(&ZOPN)          SETC  '++ &ZXINFO XINFO'                          00445300
.*                                                                      00445400
.ZI27H                ANOP  ,                                           00445500
.*-------------------------------------------------------------------   00445600
.***AI.L23 ALET XDESCRIPTION F                                          00445700
         AIF   ('&ZXDESCRIPTION' EQ '').ZI28G                           00445800
         AIF   ('&SYSASCE' EQ 'P').ZI28G   SYSSTATE PRIMARY             00445900
&ZCLNG                SETC  '&XDESCRIPTION'                             00446000
         AIF   ('&XDESCRIPTION'(1,1) EQ '(').ZI28E  IN AR               00446100
.*                                                                      00446200
&ZCGPR                SETC  '14'                                        00446300
&ZOPN                 SETA  &ZOPN+1                                     00446400
&ZOPL(&ZOPN)          SETC  ' '                                         00446500
&ZOPO(&ZOPN)          SETC  'LAE'                                       00446600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00446700
&ZOPD(&ZOPN)          SETC  '++ &ZXDESCRIPTION XDESCRIPTION'            00446800
                      AGO   .ZI28F                                      00446900
.*                                                                      00447000
.ZI28E                ANOP  ,                                           00447100
&ZCGPR   SETC  '&XDESCRIPTION'(2,K'&XDESCRIPTION-2)                     00447200
.*                                                                      00447300
.ZI28F                ANOP  ,                                           00447400
.*                                                                      00447500
&ZOPN                 SETA  &ZOPN+1                                     00447600
&ZOPL(&ZOPN)          SETC  ' '                                         00447700
&ZOPO(&ZOPN)          SETC  'STAM'                                      00447800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,56(1)'                       00447900
&ZOPD(&ZOPN)          SETC  '++ &ZXDESCRIPTION XDESCRIPTION'            00448000
.*                                                                      00448100
.ZI28G                ANOP  ,                                           00448200
.*-------------------------------------------------------------------   00448300
.***AI.L23 ALET XINFO F                                                 00448400
         AIF   ('&ZXINFO' EQ '').ZI29G                                  00448500
         AIF   ('&SYSASCE' EQ 'P').ZI29G   SYSSTATE PRIMARY             00448600
&ZCLNG                SETC  '&XINFO'                                    00448700
         AIF   ('&XINFO'(1,1) EQ '(').ZI29E  IN AR                      00448800
        AIF   ('&XINFO' EQ '0').ZI29G                                   00448900
.*                                                                      00449000
&ZCGPR                SETC  '14'                                        00449100
&ZOPN                 SETA  &ZOPN+1                                     00449200
&ZOPL(&ZOPN)          SETC  ' '                                         00449300
&ZOPO(&ZOPN)          SETC  'LAE'                                       00449400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00449500
&ZOPD(&ZOPN)          SETC  '++ &ZXINFO XINFO'                          00449600
                      AGO   .ZI29F                                      00449700
.*                                                                      00449800
.ZI29E                ANOP  ,                                           00449900
&ZCGPR   SETC  '&XINFO'(2,K'&XINFO-2)                                   00450000
.*                                                                      00450100
.ZI29F                ANOP  ,                                           00450200
.*                                                                      00450300
&ZOPN                 SETA  &ZOPN+1                                     00450400
&ZOPL(&ZOPN)          SETC  ' '                                         00450500
&ZOPO(&ZOPN)          SETC  'STAM'                                      00450600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,60(1)'                       00450700
&ZOPD(&ZOPN)          SETC  '++ &ZXINFO XINFO'                          00450800
.*                                                                      00450900
.ZI29G                ANOP  ,                                           00451000
.*-------------------------------------------------------------------   00451100
.***AI.L25  XUSERDATA CL16                                              00451200
                      AIF   ('&ZXUSERDATA' EQ '').ZI30E                 00451300
                      AIF   ('&ZXUSERDATA' EQ 'OUTPUT').ZI30E           00451400
&ZCGPR                SETC  '&XUSERDATA'                                00451500
         AIF   ('&XUSERDATA' EQ '0').ZI30E                              00451600
         AIF   ('&XUSERDATA' EQ '0').ZI30E                              00451700
.*                                                                      00451800
                      AIF   ('&XUSERDATA'(1,1) NE '(').ZI30B            00451900
&ZCGPR   SETC  '0('.'&XUSERDATA'(2,K'&XUSERDATA-2).')'                  00452000
                      AGO   .ZI30D                                      00452100
.ZI30B                ANOP  ,                                           00452200
.*                                                                      00452300
                      AIF   ('&USERDATA(1)' EQ '').ZI30I                00452400
&ZC                   SETC  '0'                                         00452500
                      AIF   ('&XUSERDATA' NE '&ZC').ZI30C               00452600
.ZI30I                ANOP  ,                                           00452700
&ZCGPR                SETC  '=CL16''&XUSERDATA'''                       00452800
.ZI30C                ANOP  ,                                           00452900
.*                                                                      00453000
.ZI30D                ANOP  ,                                           00453100
.*                                                                      00453200
&ZOPN                 SETA  &ZOPN+1                                     00453300
&ZOPL(&ZOPN)          SETC  ' '                                         00453400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00453500
&ZOPV(&ZOPN)          SETC  '64(16,1),&ZCGPR'                           00453600
&ZOPD(&ZOPN)          SETC  '++ &ZXUSERDATA XUSERDATA'                  00453700
.*                                                                      00453800
.ZI30E                ANOP  ,                                           00453900
.*-------------------------------------------------------------------   00454000
.***AI.L25  XFEATURES CL8                                               00454100
                      AIF   ('&ZXFEATURES' EQ '').ZI31E                 00454200
                      AIF   ('&ZXFEATURES' EQ 'OUTPUT').ZI31E           00454300
&ZCGPR                SETC  '&XFEATURES'                                00454400
         AIF   ('&XFEATURES' EQ '0').ZI31E                              00454500
         AIF   ('&XFEATURES' EQ '0').ZI31E                              00454600
.*                                                                      00454700
                      AIF   ('&XFEATURES'(1,1) NE '(').ZI31B            00454800
&ZCGPR   SETC  '0('.'&XFEATURES'(2,K'&XFEATURES-2).')'                  00454900
                      AGO   .ZI31D                                      00455000
.ZI31B                ANOP  ,                                           00455100
.*                                                                      00455200
                      AIF   ('&FEATURES(1)' EQ '').ZI31I                00455300
&ZC                   SETC  '0'                                         00455400
                      AIF   ('&XFEATURES' NE '&ZC').ZI31C               00455500
.ZI31I                ANOP  ,                                           00455600
&ZCGPR                SETC  '=CL8''&XFEATURES'''                        00455700
.ZI31C                ANOP  ,                                           00455800
.*                                                                      00455900
.ZI31D                ANOP  ,                                           00456000
.*                                                                      00456100
&ZOPN                 SETA  &ZOPN+1                                     00456200
&ZOPL(&ZOPN)          SETC  ' '                                         00456300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00456400
&ZOPV(&ZOPN)          SETC  '80(8,1),&ZCGPR'                            00456500
&ZOPD(&ZOPN)          SETC  '++ &ZXFEATURES XFEATURES'                  00456600
.*                                                                      00456700
.ZI31E                ANOP  ,                                           00456800
.*-------------------------------------------------------------------   00456900
.***AI.L25  XMINLEVEL F                                                 00457000
                      AIF   ('&ZXMINLEVEL' EQ '').ZI32E                 00457100
                      AIF   ('&ZXMINLEVEL' EQ 'OUTPUT').ZI32E           00457200
&ZCGPR                SETC  '&XMINLEVEL'                                00457300
         AIF   ('&XMINLEVEL' EQ '0').ZI32E                              00457400
         AIF   ('&XMINLEVEL' EQ '0').ZI32E                              00457500
.*                                                                      00457600
                      AIF   ('&XMINLEVEL'(1,1) NE '(').ZI32B            00457700
&ZCGPR   SETC  '0('.'&XMINLEVEL'(2,K'&XMINLEVEL-2).')'                  00457800
                      AGO   .ZI32D                                      00457900
.ZI32B                ANOP  ,                                           00458000
.*                                                                      00458100
&ZC                   SETC  '&XMINLEVEL'(1,1)                           00458200
                      AIF   (T'&ZC NE 'N').ZI32D                        00458300
&ZC                   SETC  '&XMINLEVEL'                                00458400
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI32D               00458500
&ZCGPR                SETC  '=AL4(&XMINLEVEL)'                          00458600
.*                                                                      00458700
.ZI32D                ANOP  ,                                           00458800
.*                                                                      00458900
&ZOPN                 SETA  &ZOPN+1                                     00459000
&ZOPL(&ZOPN)          SETC  ' '                                         00459100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00459200
&ZOPV(&ZOPN)          SETC  '88(4,1),&ZCGPR'                            00459300
&ZOPD(&ZOPN)          SETC  '++ &ZXMINLEVEL XMINLEVEL'                  00459400
.*                                                                      00459500
.ZI32E                ANOP  ,                                           00459600
.*-------------------------------------------------------------------   00459700
.***AI.L18  XMAXLEVEL F                                                 00459800
         AIF   ('&XMAXLEVEL' NE 'MINLEVEL').ZI33                        00459900
&ZXMAXLEVEL           SETC  ''             RESET INPUT/OUTPUT           00460000
.ZI33                 ANOP  ,                                           00460100
.*-------------------------------------------------------------------   00460200
.***AI.L25  XMAXLEVEL F                                                 00460300
                      AIF   ('&ZXMAXLEVEL' EQ '').ZI33E                 00460400
                      AIF   ('&ZXMAXLEVEL' EQ 'OUTPUT').ZI33E           00460500
&ZCGPR                SETC  '&XMAXLEVEL'                                00460600
.*                                                                      00460700
                      AIF   ('&XMAXLEVEL'(1,1) NE '(').ZI33B            00460800
&ZCGPR   SETC  '0('.'&XMAXLEVEL'(2,K'&XMAXLEVEL-2).')'                  00460900
                      AGO   .ZI33D                                      00461000
.ZI33B                ANOP  ,                                           00461100
.*                                                                      00461200
&ZC                   SETC  '&XMAXLEVEL'(1,1)                           00461300
                      AIF   (T'&ZC NE 'N').ZI33D                        00461400
&ZC                   SETC  '&XMAXLEVEL'                                00461500
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI33D               00461600
&ZCGPR                SETC  '=AL4(&XMAXLEVEL)'                          00461700
.*                                                                      00461800
.ZI33D                ANOP  ,                                           00461900
.*                                                                      00462000
&ZOPN                 SETA  &ZOPN+1                                     00462100
&ZOPL(&ZOPN)          SETC  ' '                                         00462200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00462300
&ZOPV(&ZOPN)          SETC  '92(4,1),&ZCGPR'                            00462400
&ZOPD(&ZOPN)          SETC  '++ &ZXMAXLEVEL XMAXLEVEL'                  00462500
.*                                                                      00462600
.ZI33E                ANOP  ,                                           00462700
.*-------------------------------------------------------------------   00462800
.***AI.L25  XMINCLIENT F                                                00462900
                      AIF   ('&ZXMINCLIENT' EQ '').ZI34E                00463000
                      AIF   ('&ZXMINCLIENT' EQ 'OUTPUT').ZI34E          00463100
&ZCGPR                SETC  '&XMINCLIENT'                               00463200
         AIF   ('&XMINCLIENT' EQ '0').ZI34E                             00463300
         AIF   ('&XMINCLIENT' EQ '0').ZI34E                             00463400
.*                                                                      00463500
                      AIF   ('&XMINCLIENT'(1,1) NE '(').ZI34B           00463600
&ZCGPR   SETC  '0('.'&XMINCLIENT'(2,K'&XMINCLIENT-2).')'                00463700
                      AGO   .ZI34D                                      00463800
.ZI34B                ANOP  ,                                           00463900
.*                                                                      00464000
&ZC                   SETC  '&XMINCLIENT'(1,1)                          00464100
                      AIF   (T'&ZC NE 'N').ZI34D                        00464200
&ZC                   SETC  '&XMINCLIENT'                               00464300
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI34D               00464400
&ZCGPR                SETC  '=AL4(&XMINCLIENT)'                         00464500
.*                                                                      00464600
.ZI34D                ANOP  ,                                           00464700
.*                                                                      00464800
&ZOPN                 SETA  &ZOPN+1                                     00464900
&ZOPL(&ZOPN)          SETC  ' '                                         00465000
&ZOPO(&ZOPN)          SETC  'MVC'                                       00465100
&ZOPV(&ZOPN)          SETC  '96(4,1),&ZCGPR'                            00465200
&ZOPD(&ZOPN)          SETC  '++ &ZXMINCLIENT XMINCLIENT'                00465300
.*                                                                      00465400
.ZI34E                ANOP  ,                                           00465500
.*-------------------------------------------------------------------   00465600
.***AI.L18  XMAXCLIENT F                                                00465700
         AIF   ('&XMAXCLIENT' NE 'MINCLIENT').ZI35                      00465800
&ZXMAXCLIENT          SETC  ''             RESET INPUT/OUTPUT           00465900
.ZI35                 ANOP  ,                                           00466000
.*-------------------------------------------------------------------   00466100
.***AI.L25  XMAXCLIENT F                                                00466200
                      AIF   ('&ZXMAXCLIENT' EQ '').ZI35E                00466300
                      AIF   ('&ZXMAXCLIENT' EQ 'OUTPUT').ZI35E          00466400
&ZCGPR                SETC  '&XMAXCLIENT'                               00466500
.*                                                                      00466600
                      AIF   ('&XMAXCLIENT'(1,1) NE '(').ZI35B           00466700
&ZCGPR   SETC  '0('.'&XMAXCLIENT'(2,K'&XMAXCLIENT-2).')'                00466800
                      AGO   .ZI35D                                      00466900
.ZI35B                ANOP  ,                                           00467000
.*                                                                      00467100
&ZC                   SETC  '&XMAXCLIENT'(1,1)                          00467200
                      AIF   (T'&ZC NE 'N').ZI35D                        00467300
&ZC                   SETC  '&XMAXCLIENT'                               00467400
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI35D               00467500
&ZCGPR                SETC  '=AL4(&XMAXCLIENT)'                         00467600
.*                                                                      00467700
.ZI35D                ANOP  ,                                           00467800
.*                                                                      00467900
&ZOPN                 SETA  &ZOPN+1                                     00468000
&ZOPL(&ZOPN)          SETC  ' '                                         00468100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00468200
&ZOPV(&ZOPN)          SETC  '100(4,1),&ZCGPR'                           00468300
&ZOPD(&ZOPN)          SETC  '++ &ZXMAXCLIENT XMAXCLIENT'                00468400
.*                                                                      00468500
.ZI35E                ANOP  ,                                           00468600
.*-------------------------------------------------------------------   00468700
.***AI.L23 ALET XSERVER F                                               00468800
         AIF   ('&ZXSERVER' EQ '').ZI38G                                00468900
         AIF   ('&SYSASCE' EQ 'P').ZI38G   SYSSTATE PRIMARY             00469000
&ZCLNG                SETC  '&XSERVER'                                  00469100
         AIF   ('&XSERVER'(1,1) EQ '(').ZI38E  IN AR                    00469200
.*                                                                      00469300
&ZCGPR                SETC  '14'                                        00469400
&ZOPN                 SETA  &ZOPN+1                                     00469500
&ZOPL(&ZOPN)          SETC  ' '                                         00469600
&ZOPO(&ZOPN)          SETC  'LAE'                                       00469700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00469800
&ZOPD(&ZOPN)          SETC  '++ &ZXSERVER XSERVER'                      00469900
                      AGO   .ZI38F                                      00470000
.*                                                                      00470100
.ZI38E                ANOP  ,                                           00470200
&ZCGPR   SETC  '&XSERVER'(2,K'&XSERVER-2)                               00470300
.*                                                                      00470400
.ZI38F                ANOP  ,                                           00470500
.*                                                                      00470600
&ZOPN                 SETA  &ZOPN+1                                     00470700
&ZOPL(&ZOPN)          SETC  ' '                                         00470800
&ZOPO(&ZOPN)          SETC  'STAM'                                      00470900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,20(1)'                       00471000
&ZOPD(&ZOPN)          SETC  '++ &ZXSERVER XSERVER'                      00471100
.*                                                                      00471200
.ZI38G                ANOP  ,                                           00471300
.*-------------------------------------------------------------------   00471400
.***AI.L19 ADDR64 XSERVER AD                                            00471500
                      AIF   ('&ZXSERVER' EQ '').ZI39H                   00471600
&ZCLNG                SETC  '&XSERVER'                                  00471700
&ZCGPR                SETC  '14'                                        00471800
         AIF   ('&XSERVER'(1,1) EQ '(').ZI39F  IN GPR                   00471900
         AIF   ('&SYSASCE' NE 'P').ZI39G   SYSSTATE PRIMARY             00472000
.*                                                                      00472100
&ZOPN                 SETA  &ZOPN+1                                     00472200
&ZOPL(&ZOPN)          SETC  ' '                                         00472300
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00472400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00472500
&ZOPD(&ZOPN)          SETC  '++ &ZXSERVER XSERVER'                      00472600
.*                                                                      00472700
                      AGO   .ZI39G                                      00472800
.*                                                                      00472900
.ZI39F                ANOP  ,                                           00473000
&ZCGPR   SETC  '&XSERVER'(2,K'&XSERVER-2)                               00473100
.*                                                                      00473200
.ZI39G                ANOP  ,                                           00473300
                      AIF   ('&SYSAM64' EQ 'YES').ZI39H1A               00473400
.*                                                                      00473500
&ZOPN                 SETA  &ZOPN+1                                     00473600
&ZOPL(&ZOPN)          SETC  ' '                                         00473700
&ZOPO(&ZOPN)          SETC  'ST'                                        00473800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4+24(,1)'                           00473900
&ZOPD(&ZOPN)          SETC  '++ &ZXSERVER XSERVER'                      00474000
.*                                                                      00474100
                      AGO   .ZI39H                                      00474200
.ZI39H1A              ANOP  ,                                           00474300
.*                                                                      00474400
&ZOPN                 SETA  &ZOPN+1                                     00474500
&ZOPL(&ZOPN)          SETC  ' '                                         00474600
&ZOPO(&ZOPN)          SETC  'STG'                                       00474700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,24(,1)'                             00474800
&ZOPD(&ZOPN)          SETC  '++ &ZXSERVER XSERVER'                      00474900
.*                                                                      00475000
.ZI39H                ANOP  ,                                           00475100
.*-------------------------------------------------------------------   00475200
.***AI.L23 ALET XSERVERID F                                             00475300
         AIF   ('&ZXSERVERID' EQ '').ZI42G                              00475400
         AIF   ('&SYSASCE' EQ 'P').ZI42G   SYSSTATE PRIMARY             00475500
&ZCLNG                SETC  '&XSERVERID'                                00475600
         AIF   ('&XSERVERID'(1,1) EQ '(').ZI42E  IN AR                  00475700
.*                                                                      00475800
&ZCGPR                SETC  '14'                                        00475900
&ZOPN                 SETA  &ZOPN+1                                     00476000
&ZOPL(&ZOPN)          SETC  ' '                                         00476100
&ZOPO(&ZOPN)          SETC  'LAE'                                       00476200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00476300
&ZOPD(&ZOPN)          SETC  '++ &ZXSERVERID XSERVERID'                  00476400
                      AGO   .ZI42F                                      00476500
.*                                                                      00476600
.ZI42E                ANOP  ,                                           00476700
&ZCGPR   SETC  '&XSERVERID'(2,K'&XSERVERID-2)                           00476800
.*                                                                      00476900
.ZI42F                ANOP  ,                                           00477000
.*                                                                      00477100
&ZOPN                 SETA  &ZOPN+1                                     00477200
&ZOPL(&ZOPN)          SETC  ' '                                         00477300
&ZOPO(&ZOPN)          SETC  'STAM'                                      00477400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,20(1)'                       00477500
&ZOPD(&ZOPN)          SETC  '++ &ZXSERVERID XSERVERID'                  00477600
.*                                                                      00477700
.ZI42G                ANOP  ,                                           00477800
.*-------------------------------------------------------------------   00477900
.***AI.L19 ADDR64 XSERVERID AD                                          00478000
                      AIF   ('&ZXSERVERID' EQ '').ZI43H                 00478100
&ZCLNG                SETC  '&XSERVERID'                                00478200
&ZCGPR                SETC  '14'                                        00478300
         AIF   ('&XSERVERID'(1,1) EQ '(').ZI43F  IN GPR                 00478400
         AIF   ('&SYSASCE' NE 'P').ZI43G   SYSSTATE PRIMARY             00478500
.*                                                                      00478600
&ZOPN                 SETA  &ZOPN+1                                     00478700
&ZOPL(&ZOPN)          SETC  ' '                                         00478800
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00478900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00479000
&ZOPD(&ZOPN)          SETC  '++ &ZXSERVERID XSERVERID'                  00479100
.*                                                                      00479200
                      AGO   .ZI43G                                      00479300
.*                                                                      00479400
.ZI43F                ANOP  ,                                           00479500
&ZCGPR   SETC  '&XSERVERID'(2,K'&XSERVERID-2)                           00479600
.*                                                                      00479700
.ZI43G                ANOP  ,                                           00479800
                      AIF   ('&SYSAM64' EQ 'YES').ZI43H1A               00479900
.*                                                                      00480000
&ZOPN                 SETA  &ZOPN+1                                     00480100
&ZOPL(&ZOPN)          SETC  ' '                                         00480200
&ZOPO(&ZOPN)          SETC  'ST'                                        00480300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4+24(,1)'                           00480400
&ZOPD(&ZOPN)          SETC  '++ &ZXSERVERID XSERVERID'                  00480500
.*                                                                      00480600
                      AGO   .ZI43H                                      00480700
.ZI43H1A              ANOP  ,                                           00480800
.*                                                                      00480900
&ZOPN                 SETA  &ZOPN+1                                     00481000
&ZOPL(&ZOPN)          SETC  ' '                                         00481100
&ZOPO(&ZOPN)          SETC  'STG'                                       00481200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,24(,1)'                             00481300
&ZOPD(&ZOPN)          SETC  '++ &ZXSERVERID XSERVERID'                  00481400
.*                                                                      00481500
.ZI43H                ANOP  ,                                           00481600
.*-------------------------------------------------------------------   00481700
&ZOPN1                SETA &ZOPN                                        00481800
.*******************************************************************    00481900
.***  PROCESS IXCSRVR OUTPUT PARAMETERS                                 00482000
.*******************************************************************    00482100
                      ACTR  10000                                       00482200
.*******************************************************************    00482300
.***AO.X02  RETURN CODE PROCESSING                                      00482400
.*******************************************************************    00482500
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00482600
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00482700
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00482800
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00482900
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00483000
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00483100
&ZOPN                 SETA  &ZOPN+1                                     00483200
&ZOPL(&ZOPN)          SETC  ' '                                         00483300
&ZOPO(&ZOPN)          SETC  'ST'                                        00483400
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00483500
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00483600
                      AGO   .ZMRETX                                     00483700
.*                                                                      00483800
.ZMRET2               ANOP  ,                                           00483900
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00484000
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00484100
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00484200
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00484300
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00484400
&ZOPN                 SETA  &ZOPN+1                                     00484500
&ZOPL(&ZOPN)          SETC  ' '                                         00484600
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00484700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00484800
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00484900
.ZMRETX               ANOP  ,                                           00485000
.*******************************************************************    00485100
.***AO.X03  REASON CODE PROCESSING                                      00485200
.*******************************************************************    00485300
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00485400
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00485500
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00485600
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00485700
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00485800
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00485900
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00486000
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00486100
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00486200
&ZOPN                 SETA  &ZOPN+1                                     00486300
&ZOPL(&ZOPN)          SETC  ' '                                         00486400
&ZOPO(&ZOPN)          SETC  'ST'                                        00486500
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00486600
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00486700
                      AGO   .ZMRSNX                                     00486800
.*                                                                      00486900
.ZMRSN2               ANOP  ,                                           00487000
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00487100
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00487200
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00487300
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00487400
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00487500
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00487600
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00487700
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00487800
&ZOPN                 SETA  &ZOPN+1                                     00487900
&ZOPL(&ZOPN)          SETC  ' '                                         00488000
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00488100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00488200
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00488300
.ZMRSNX               ANOP  ,                                           00488400
.*******************************************************************    00488500
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00488600
.*******************************************************************    00488700
.ZMFLX                ANOP  ,              MF=L PROCESSING              00488800
.*******************************************************************    00488900
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00489000
.*******************************************************************    00489100
                      ACTR  10000                                       00489200
.*                                                                      00489300
                      LCLA  &ZLC           COLUMN POSITION              00489400
                      LCLA  &ZOPX          LIST TABLE INDEX             00489500
                      LCLC  &ZLL           LABEL                        00489600
                      LCLC  &ZLOP          OPERATION                    00489700
                      LCLC  &ZLV           VALUE                        00489800
                      LCLC  &ZLD           DESCRIPTION                  00489900
.*                                                                      00490000
&ZOPX                 SETA  1                                           00490100
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00490200
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00490300
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00490400
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00490500
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00490600
                      AIF   (K'&ZLD LE 0).ZL5                           00490700
&ZLC                  SETA  35             COMMENT COLUMN               00490800
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00490900
&ZLC                  SETA  33             COMMMENT COLUMN              00491000
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00491100
&ZLV                  SETC  '&ZLV'.' '                                  00491200
                      AGO   .ZL3                                        00491300
.*                                                                      00491400
.ZL4                  ANOP  ,                                           00491500
&ZLV                  SETC  '&ZLV'.' '                                  00491600
.ZL5                  ANOP  ,                                           00491700
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00491800
.*                                                                      00491900
&ZLL     &ZLOP &ZLV                                                     00492000
.*                                                                      00492100
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00492200
                      AGO   .ZL2           CONTINUE LOOPING             00492300
.*                                                                      00492400
.ZLX                  ANOP  ,                                           00492500
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00492600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00492700
&ZMS     SETC  '1'                                                      00492800
         AIF   ('&XREQTYPE' EQ 'START').SRVRPC                          00492900
&ZMS     SETC  '2'                                                      00493000
         AIF   ('&XREQTYPE' EQ 'STOP').SRVRPC                           00493100
&ZMS     SETC  '0'                                                      00493200
.SRVRPC  ANOP  ,                                                        00493300
         AIF   ('&SYSAM64' NE 'YES').NOTAM64                       @P1A 00493400
         LLGTR 14,14                   CLEAR HIGH HALF             @P1A 00493500
.NOTAM64 L     14,16(0,0)              GET CVT ADDRESS             @P1C 00493600
         L     14,772(14,0)            GET SFT ADDRESS                  00493700
         L     14,220(14,0)            GET LX FOR SERVICE ROUTINE       00493800
         LA    15,54                   GET EX FOR SERVICE ROUTINE       00493900
         OR    14,15                   GET PC NUMBER                    00494000
         LA    0,&ZMS.(0,0)            Indicate REQTYPE                 00494100
         PC    0(14)                                                    00494200
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00494300
.ZLINKX               ANOP  ,                                           00494400
.*******************************************************************    00494500
.***AP.X01  FORMAT GENERATED CODE                                       00494600
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00494700
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00494800
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00494900
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00495000
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00495100
                      AIF   (K'&ZLD LE 0).ZL51                          00495200
&ZLC                  SETA  35             COMMENT COLUMN               00495300
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00495400
&ZLC                  SETA  33             COMMENT COLUMN               00495500
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00495600
&ZLV                  SETC  '&ZLV'.' '                                  00495700
                      AGO   .ZL31                                       00495800
.*                                                                      00495900
.ZL41                 ANOP  ,                                           00496000
&ZLV                  SETC  '&ZLV'.' '                                  00496100
.ZL51                 ANOP  ,                                           00496200
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00496300
.*                                                                      00496400
&ZLL     &ZLOP &ZLV                                                     00496500
.*                                                                      00496600
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00496700
                      AGO   .ZL21          CONTINUE LOOPING             00496800
.*                                                                      00496900
.ZLX1                 ANOP  ,                                           00497000
.*******************************************************************    00497100
.***AP.X02  END OF IXCSRVR MACRO                                        00497200
&ZIXCSRVR             SETC  'YES'          SET IXCSRVR USED             00497300
         POP   PRINT                                                    00497400
*                                            IXCSRVR-0                  00497500
         SPACE 1                                                        00497600
.ZLX2                 ANOP  ,                                           00497700
         MEND                                                           00497800
**********************************************************************/ 00497900
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00498000
*%IXCSRVR: MACRO KEYS(REQTYPE,SERVER,DESCRIPTION,FEATURES,MINLEVEL,     00498100
*                 MAXLEVEL,MINCLIENT,MAXCLIENT,SERVEREXIT,INFO,FDI,     00498200
*                 USERDATA,RESPBIND,SCOPE,#SERVERS,SERVERID,MODE,       00498300
*                 RETCODE,RSNCODE,PLISTVER,MF);                         00498400
*  ANS('?'!!MACLABEL!!' '!!'IXCSRVRP '!!MACLIST!!                       00498500
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              00498600
*%END IXCSRVR;                                                          00498700
