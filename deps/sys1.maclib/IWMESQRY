*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IWMESQRY                              -10/02/22-<1> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  Enclave State Query                           * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5694-A01 COPYRIGHT IBM CORP. 1997, 2010                         * 00001200
*                                                                     * 00001300
* STATUS= HBB7770                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      The purpose of this service is to query whether or not the     * 00002100
*      current dispatchable workunit is associated with an Enclave.   * 00002200
*      The output is either the Enclave token or the STOKEN of the    * 00002300
*      address space associated with the caller's workunit.           * 00002400
*                                                                     * 00002500
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00002600
*                                                                     * 00002700
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00002800
*                                                                     * 00002900
*01* ENVIRONMENT:                                                     * 00003000
*                                                                     * 00003100
*                                                                     * 00003200
*      Minimum authorization: Supervisor state. Any PSW key.          * 00003300
*                                                                     * 00003400
*      Dispatchable unit mode: Task or SRB mode.                      * 00003500
*                                                                     * 00003600
*      Cross Memory Mode: Non-XMEM or XMEM. Any PASN, HASN, SASN.     * 00003700
*                                                                     * 00003800
*      AMODE:            31-bit.                                      * 00003900
*                                                                     * 00004000
*      ASC mode:         Primary.                                     * 00004100
*                                                                     * 00004200
*      Interrupt status: Enabled or disabled for I/O and external     * 00004300
*                        interrupts.                                  * 00004400
*                                                                     * 00004500
*      Locks:            No locks are required.                       * 00004600
*                                                                     * 00004700
*      Control parameters: Control parameters must be in the primary  * 00004800
*                        address space.                               * 00004900
*                                                                     * 00005000
*                                                                     * 00005100
*                                                                     * 00005200
*01* PROGRAMMING REQUIREMENTS:                                        * 00005300
*                                                                     * 00005400
*                                                                     * 00005500
*    1.  The macro IWMYCON must be included to use this macro.        * 00005600
*                                                                     * 00005700
*    2.  The macro IWMPB must be in the library concatenation, since  * 00005800
*        it is included by IWMYCON.                                   * 00005900
*                                                                     * 00006000
*    3.  Note that the high order halfword of register 0, and the     * 00006100
*        reason code variable when specified, may be non-zero and     * 00006200
*        represents diagnostic data which is NOT part of the external * 00006300
*        interface.  The high order halfword should thus be excluded  * 00006400
*        from comparison with the reason code values described above. * 00006500
*        The constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may  * 00006600
*        be used for this purpose.                                    * 00006700
*                                                                     * 00006800
*    4.  Caller is responsible for error recovery.                    * 00006900
*                                                                     * 00007000
*                                                                     * 00007100
*                                                                     * 00007200
*01* RESTRICTIONS:                                                    * 00007300
*                                                                     * 00007400
*                                                                     * 00007500
*    1.  This macro may not be used prior to the completion of WLM    * 00007600
*        address space initialization.                                * 00007700
*                                                                     * 00007800
*    2.  This macro may only be used on MVS/ESA HBB6603 or higher.    * 00007900
*                                                                     * 00008000
*    3.  This macro may only be used on z/OS V1R12 or higher levels   * 00008100
*        for the IMPORTANCE keyword.                                  * 00008200
*                                                                     * 00008300
*                                                                     * 00008400
*                                                                     * 00008500
*01* INPUT REGISTER INFORMATION:                                      * 00008600
*                                                                     * 00008700
*    Before issuing the IWMESQRY macro, the caller does not have to   * 00008800
*    place any information into any register unless using it in       * 00008900
*    register notation for a particular parameter, or using it as a   * 00009000
*    base register.                                                   * 00009100
*                                                                     * 00009200
*01* OUTPUT REGISTER INFORMATION:                                     * 00009300
*                                                                     * 00009400
*    When control returns to the caller, the GPRs contain:            * 00009500
*                                                                     * 00009600
*                                                                     * 00009700
*    REGISTER  CONTENTS                                               * 00009800
*                                                                     * 00009900
*    0         Reason code if GR15 return code is non-zero            * 00010000
*                                                                     * 00010100
*    1         Used as work registers by the system                   * 00010200
*                                                                     * 00010300
*    2-13      Unchanged                                              * 00010400
*                                                                     * 00010500
*    14        Used as work registers by the system                   * 00010600
*                                                                     * 00010700
*    15        Return code                                            * 00010800
*                                                                     * 00010900
*                                                                     * 00011000
*                                                                     * 00011100
*    When control returns to the caller, the ARs contain:             * 00011200
*                                                                     * 00011300
*                                                                     * 00011400
*    REGISTER  CONTENTS                                               * 00011500
*                                                                     * 00011600
*    0-1       Used as work registers by the system                   * 00011700
*                                                                     * 00011800
*    2-13      Unchanged                                              * 00011900
*                                                                     * 00012000
*    14-15     Used as work registers by the system                   * 00012100
*                                                                     * 00012200
*                                                                     * 00012300
*                                                                     * 00012400
*    Some callers depend on register contents remaining the same      * 00012500
*    before and after issuing a service.  If the system changes the   * 00012600
*    contents of registers on which the caller depends, the caller    * 00012700
*    must save them before issuing the service, and restore them      * 00012800
*    after the system returns control.                                * 00012900
*                                                                     * 00013000
*01* PERFORMANCE IMPLICATIONS:                                        * 00013100
*                                                                     * 00013200
*    None                                                             * 00013300
*                                                                     * 00013400
*01* SYNTAX:                                                          * 00013500
*                                                                     * 00013600
*Ýxlabel¨  IWMESQRY  Ð  ETOKEN=Ýxetoken¨                              * 00013700
*                    ¿ ,TOKEN=Ýxtoken¨                                * 00013800
*                     Ý,IMPORTANCE=ximportance¨                       * 00013900
*                     Ý,RETCODE=xretcode¨                             * 00014000
*                     Ý,RSNCODE=xrsncode¨                             * 00014100
*                     Ý,PLISTVER=»xplistver!IMPLIED_VERSIONº¨         * 00014200
*                    ÐÝ,MF=S¨                                         * 00014300
*                    ÔÝ,MF=(L,xmfctrl»,xmfattr!0Dº)¨                  * 00014400
*                    ¿Ý,MF=(E,xmfctrl»,COMPLETEº)¨                    * 00014500
*                                                                     * 00014600
*                                                                     * 00014700
*      Where:                                                         * 00014800
*                                                                     * 00014900
*                                                                     * 00015000
*      Ýxlabel¨                                                       * 00015100
*          is an optional symbol, starting in column 1, that is the   * 00015200
*          name on the IWMESQRY macro invocation.  The name must      * 00015300
*          conform to the rules for an ordinary assembler language    * 00015400
*          symbol.                                                    * 00015500
*          DEFAULT: No name.                                          * 00015600
*                                                                     * 00015700
*                                                                     * 00015800
*                                                                     * 00015900
*                                                                     * 00016000
*      The following is a set of mutually exclusive keys.  This set   * 00016100
*      is required; only one key must be specified.                   * 00016200
*                                                                     * 00016300
*                                                                     * 00016400
*      ETOKEN=Ýxetoken¨                                               * 00016500
*          belongs to a set of mutually exclusive keys. It is the     * 00016600
*          name (RS-type), or address in register (2)-(12), of an 8   * 00016700
*          character output which will receive the enclave token if   * 00016800
*          the current dispatchable workunit is associated with an    * 00016900
*          enclave.  If it is not associated with an enclave, the     * 00017000
*          field is set to 0. This parameter is depricated and        * 00017100
*          supported for compatibility reasons only.  The TOKEN       * 00017200
*          parameter should be used instead.                          * 00017300
*                                                                     * 00017400
*      TOKEN=Ýxtoken¨                                                 * 00017500
*          belongs to a set of mutually exclusive keys. It is the     * 00017600
*          name (RS-type), or address in register (2)-(12), of an 8   * 00017700
*          character output which will receive either the enclave     * 00017800
*          token if the current dispatchable workunit is associated   * 00017900
*          with an enclave, or the STOKEN of the address space the    * 00018000
*          workunit is associated with.                               * 00018100
*                                                                     * 00018200
*                                                                     * 00018300
*                                                                     * 00018400
*      End of a set of mutually exclusive required keys.              * 00018500
*                                                                     * 00018600
*                                                                     * 00018700
*                                                                     * 00018800
*      ÝIMPORTANCE=ximportance¨                                       * 00018900
*          is the name (RS-type), or address in register (2)-(12), of * 00019000
*          an optional halfword output that will receive the          * 00019100
*          importance value of the service class to which the unit of * 00019200
*          work is classified.                                        * 00019300
*                                                                     * 00019400
*                                                                     * 00019500
*                                                                     * 00019600
*                                                                     * 00019700
*      ÝRETCODE=xretcode¨                                             * 00019800
*          is the name (RS-type) of an optional fullword output       * 00019900
*          variable, or register (2)-(12) or (15), into which the     * 00020000
*          return code is to be copied from GPR 15.  If you specify   * 00020100
*          15, GPR15, REG15, or R15 (within or without parentheses),  * 00020200
*          the value will be left in GPR 15.                          * 00020300
*                                                                     * 00020400
*                                                                     * 00020500
*                                                                     * 00020600
*                                                                     * 00020700
*      ÝRSNCODE=xrsncode¨                                             * 00020800
*          is the name (RS-type) of an optional fullword output       * 00020900
*          variable into which the reason code is to be copied from   * 00021000
*          GPR 0.  If you specify 0, 00, GPR0, GPR00, REG0, REG00, or * 00021100
*          R0 (within or without parentheses), the value will be left * 00021200
*          in GPR 0.                                                  * 00021300
*                                                                     * 00021400
*                                                                     * 00021500
*                                                                     * 00021600
*                                                                     * 00021700
*      ÝPLISTVER=»xplistver!IMPLIED_VERSIONº¨                         * 00021800
*          is an optional byte input decimal value in the "0-1" range * 00021900
*          that specifies the macro version.  PLISTVER is the only    * 00022000
*          key allowed on the list form of MF and determines which    * 00022100
*          parameter list is generated.  The macro keys associated    * 00022200
*          with each supported version of the macro are listed in     * 00022300
*          MACRO USAGE NOTE 2.  Note that MAX may be specified        * 00022400
*          instead of a number, and the parameter list will be of the * 00022500
*          largest size currently supported. This size may grow from  * 00022600
*          release to release (thus possibly affecting the amount of  * 00022700
*          storage needed by your program).  If your program can      * 00022800
*          tolerate this, IBM recommends that you always specify MAX  * 00022900
*          when creating the list form parameter list as that will    * 00023000
*          ensure that the list form parameter list is always long    * 00023100
*          enough to hold whatever parameters might be specified on   * 00023200
*          the execute form.                                          * 00023300
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00023400
*          default is the lowest version which allows all of the      * 00023500
*          parameters specified on the invocation to be processed.    * 00023600
*                                                                     * 00023700
*                                                                     * 00023800
*                                                                     * 00023900
*                                                                     * 00024000
*      ÝMF=»S!L!Eº¨                                                   * 00024100
*          is an optional keyword input which specifies the macro     * 00024200
*          form.                                                      * 00024300
*          DEFAULT: S                                                 * 00024400
*                                                                     * 00024500
*                                                                     * 00024600
*          ÝMF=S¨                                                     * 00024700
*              specifies the standard form of the macro.  The "S"     * 00024800
*              form generates code to put the parameters into an      * 00024900
*              in-line parameter list and invoke the desired service. * 00025000
*              Full checking for required macro keys is done along    * 00025100
*              with supplying defaults for omitted optional           * 00025200
*              parameters.                                            * 00025300
*                                                                     * 00025400
*          ÝMF=(L,xmfctrl»,xmfattr!0Dº)¨                              * 00025500
*              specifies the list form of the macro.  The "L" form    * 00025600
*              defines an area to be used for the parameter list.     * 00025700
*              Only the PLISTVER key may be specified on the          * 00025800
*              invocation.  All other macro parameters are flagged as * 00025900
*              errors.  If PLISTVER is not specified, the original    * 00026000
*              parameter list definition is used.                     * 00026100
*                                                                     * 00026200
*            ,xmfctrl                                                 * 00026300
*              is a required input.  It is the name of a storage area * 00026400
*              for the parameter list.                                * 00026500
*                                                                     * 00026600
*            »,xmfattr!0Dº                                            * 00026700
*              is an optional 60 character input string that varies   * 00026800
*              from 1 to 60 characters. Use it to force boundary      * 00026900
*              alignment of the parameter list. Use only 0F or 0D.    * 00027000
*              DEFAULT: 0D which forces the parameter list to a       * 00027100
*              doubleword boundary.                                   * 00027200
*                                                                     * 00027300
*          ÝMF=(E,xmfctrl»,COMPLETEº)¨                                * 00027400
*              specifies the execute form of the macro.  The "E" form * 00027500
*              generates code to put the parameters into the          * 00027600
*              parameter list specified by xmfctrl and provides full  * 00027700
*              syntax checking with default setting.                  * 00027800
*                                                                     * 00027900
*            ,xmfctrl                                                 * 00028000
*              is a required input.  It is the name (RS-type), or     * 00028100
*              address in register (1)-(12), of a storage area for    * 00028200
*              the parameter list.                                    * 00028300
*                                                                     * 00028400
*            »,COMPLETEº                                              * 00028500
*              is an optional keyword input which specifies the       * 00028600
*              degree of macro parameter syntax checking.             * 00028700
*              DEFAULT: COMPLETE                                      * 00028800
*                                                                     * 00028900
*                                                                     * 00029000
*              COMPLETE                                               * 00029100
*                  Checking for required macro keys is done and       * 00029200
*                  defaults are supplied for omitted optional         * 00029300
*                  parameters.                                        * 00029400
*                                                                     * 00029500
*                                                                     * 00029600
*                                                                     * 00029700
*                                                                     * 00029800
*                                                                     * 00029900
*                                                                     * 00030000
*                                                                     * 00030100
*01* ABEND CODES:  None.                                              * 00030200
*                                                                     * 00030300
*01* RETURN CODES:                                                    * 00030400
*                                                                     * 00030500
*                                                                     * 00030600
*            0    Name: IwmRetCodeOk                                  * 00030700
*                                                                     * 00030800
*                 Meaning: Successful completion.                     * 00030900
*                                                                     * 00031000
*                 Action: None required.                              * 00031100
*                                                                     * 00031200
*            4    Name: IwmRetCodeWarning                             * 00031300
*                                                                     * 00031400
*                 Meaning: Successful completion, unusual conditions  * 00031500
*                 noted.                                              * 00031600
*                                                                     * 00031700
*                                                                     * 00031800
*                 HEX REASON  MEANING/ACTION                          * 00031900
*                 CODE                                                * 00032000
*                                                                     * 00032100
*                 xxxx041C    Name: IwmRsnCodeNotEnclave              * 00032200
*                                                                     * 00032300
*                             Meaning:  The current dispatchable      * 00032400
*                             workunit is not associated with an      * 00032500
*                             Enclave.  The returned token is the     * 00032600
*                             STOKEN of the associated address space. * 00032700
*                                                                     * 00032800
*                             Action: None required.                  * 00032900
*                                                                     * 00033000
*                                                                     * 00033100
*                                                                     * 00033200
*                                                                     * 00033300
*                                                                     * 00033400
*01* REASON CODES:                                                    * 00033500
*                                                                     * 00033600
*       A unique reason code will be returned whenever the return     * 00033700
*       code is non-zero.  Reason codes, as appropriate, are defined  * 00033800
*       under their corresponding return code.  Reason code and       * 00033900
*       return code constants are defined within IWMYCON.  Note that  * 00034000
*       the high order halfword of register 0, and the reason code    * 00034100
*       variable when specified, may be non-zero and represents       * 00034200
*       diagnostic data which is NOT part of the external interface.  * 00034300
*       The high order halfword should thus be excluded from          * 00034400
*       comparison with the reason code values described above.  The  * 00034500
*       constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may be    * 00034600
*       used for this purpose.                                        * 00034700
*                                                                     * 00034800
*01* MODULE TYPE:  ASSEM MACRO                                        * 00034900
*                                                                     * 00035000
*02*   PROCESSOR:  ASSEM                                              * 00035100
*                                                                     * 00035200
*01* COMPONENT:  SCWLM                                                * 00035300
*                                                                     * 00035400
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00035500
*                                                                     * 00035600
*01* EXAMPLES:                                                        * 00035700
*                                                                     * 00035800
*    To query whether the current dispatchable workunit is associated * 00035900
*    with an Enclave or an address space:                             * 00036000
*                                                                     * 00036100
*               IWMESQRY TOKEN=MYTOKEN,RETCODE=RC,RSNCODE=RSN         * 00036200
*      *                                                              * 00036300
*      * Storage areas                                                * 00036400
*      *                                                              * 00036500
*      MYTOKEN  DS    CL8             Enclave token or STOKEN         * 00036600
*      RC       DS    F               Return code                     * 00036700
*      RSN      DS    F               Reason code                     * 00036800
*                                                                     * 00036900
*                                                                     * 00037000
*01* MACRO USAGE NOTES:                                               * 00037100
*                                                                     * 00037200
*                                                                     * 00037300
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00037400
*        global macro variable.  Any value other than 'NO' will       * 00037500
*        result in the macro expansion being printed.  The default is * 00037600
*        'YES'.  The following examples illustrate how the ZPRINT     * 00037700
*        variable should be set.                                      * 00037800
*                                                                     * 00037900
*                    GBLC &ZPRINT                                     * 00038000
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00038100
*                                                                     * 00038200
*                                                                     * 00038300
*    2.  The IWMESQRY macro supports multiple versions. The macro key * 00038400
*        list  below  contains the version level in which the key was * 00038500
*        first  introduced.  Positionals  are  identified by the word * 00038600
*        'Positional'  followed by the numeric value of its position. * 00038700
*        Nested  positionals  are  preceded  by their outer key.  The * 00038800
*        lowest value represents the original version and the highest * 00038900
*        value  represents  the  most  recent version of the IWMESQRY * 00039000
*        macro.    When  specifying  PLISTVER,  be sure that it is at * 00039100
*        least  as high as the highest version number of all the keys * 00039200
*        being used.                                                  * 00039300
*                                                                     * 00039400
*        VERSION   KEY                                                * 00039500
*                                                                     * 00039600
*              0      ETOKEN                                          * 00039700
*                     TOKEN                                           * 00039800
*              1      IMPORTANCE                                      * 00039900
*                                                                     * 00040000
*                                                                     * 00040100
*                                                                     * 00040200
*01* CHANGE ACTIVITY:                                                 * 00040300
*                                                                     * 00040400
*   Flag LineItem  FMID    Date   ID    Comment                       * 00040500
*                                                                     * 00040600
*    $L0=WLMP0AMG HBB6603 950223 PD88RK:  Enclave State Query         * 00040700
*    $P1=WLMEM2   HBB7707 010911 3241MO:  Parameter TOKEN             * 00040800
*    $P2=PYV0380  HBB7707 020207 3241MO:  Leave ETOKEN field          * 00040900
*                                         unchanged if RC=4           * 00041000
*    $P6=@OA31910 HBB7770 100222 3241KHH:  Importance as optional     * 00041100
*                                         output paramater in support * 00041200
*                                         of DB2 SAO. A new version   * 00041300
*                                         level for this macro is     * 00041400
*                                         defined.                    * 00041500
****** END OF SPECIFICATIONS *****************************************/ 00041600
*/********************************************************************* 00041700
         MACRO                                                          00041800
&XLABEL  IWMESQRY &ETOKEN=,&TOKEN=,&IMPORTANCE=,&RETCODE=,&RSNCODE=,   *00041900
               &PLISTVER=,&MF=                                          00042000
.*                                                                      00042100
*                MACDATE -10/02/22-<1>                                  00042200
.*                                                                      00042300
.*******************************************************************    00042400
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00042500
.*******************************************************************    00042600
                GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                 00042700
                GBLC  &ZTEST      YES=TEST NO=NO TEST                   00042800
                GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX           00042900
.*                                                                      00043000
                GBLC  &ZIWMESQRY  YES=MACRO USED AT LEAST ONCE          00043100
.*******************************************************************    00043200
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00043300
.*******************************************************************    00043400
                LCLC  &ZMS        ERROR MESSAGE WORK AREA               00043500
                LCLC  &ZCNDX      SYSNDX CHARACTERS                     00043600
                LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED            00043700
                LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR           00043800
                LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE           00043900
                LCLA  &ZAWRK      USED AS A WORK AREA                   00044000
                LCLA  &ZASIZ      USED FOR SIZE OF VALUE                00044100
                LCLA  &ZN         NUMERIC WORK VARIABLE                 00044200
                LCLC  &ZC         CHARACTER WORK VARIABLE               00044300
                LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE           00044400
                LCLA  &ZTLA       VALUE TOO LONG VARIABLE               00044500
                LCLC  &ZMAC_G     "G" or null                           00044600
&ZMAC_G         SETC  ''                                                00044700
                LCLC  &ZMAC_LR                                          00044800
&ZMAC_LR        SETC  'LR'                                              00044900
                LCLC  &ZMAC_L                                           00045000
&ZMAC_L         SETC  'L'                                               00045100
                LCLC  &ZMAC_ST                                          00045200
&ZMAC_ST        SETC  'ST'                                              00045300
                LCLA  &ZMACRET    MACRO RETURN CODE                     00045400
&ZMACRET        SETA  0           ASSUME NO ERRORS                      00045500
.*                                                                      00045600
                LCLC  &ZCSYSLIST(255)           NONXKEY, POS ARRAY      00045700
                LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()            00045800
                LCLA  &ZPLLEN     PARAMETER LIST LENGTH                 00045900
                LCLC  &ZENDBASEPL               End of base PL          00046000
                LCLA  &ZPLWORKA   PARAMETER LIST LENGTH                 00046100
.*******************************************************************    00046200
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00046300
.*******************************************************************    00046400
                LCLA  &ZI         INDEX FOR ARRAY                       00046500
                LCLA  &ZJ         INDEX FOR PARMS                       00046600
                LCLA  &ZK         INDEX FOR PARSE                       00046700
                LCLA  &ZLO        LOW RANGE VALUE                       00046800
                LCLA  &ZHI        HIGH RANGE VALUE                      00046900
                LCLC  &ZW         WORK AREA FOR PARM                    00047000
.********************************************************************   00047100
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00047200
.********************************************************************   00047300
                GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL               00047400
                GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE        00047500
                GBLA  &SYSALVL    SYSSTATE ARCHLVL                      00047600
                GBLC  &SYSAM64    SYSSTATE AMODE64                      00047700
.*                                                                      00047800
                AIF   (K'&SYSASCE GT 0).ZSYS4   SYS STATE DEFINED       00047900
                AIF   (K'&SYSSPLV GT 0).ZSYS2   SP LEVEL DEFINED        00048000
                SPLEVEL  TEST                                           00048100
.ZSYS2          ANOP  ,                                                 00048200
                AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1             00048300
                AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1             00048400
                SYSSTATE TEST                                           00048500
                AGO   .ZSYS4                                            00048600
.ZSYS3          ANOP  ,                                                 00048700
&SYSASCE        SETC  'P'         ASSUME SYSSTATE PRIMARY               00048800
.ZSYS4          ANOP  ,                                                 00048900
.*******************************************************************    00049000
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00049100
.*******************************************************************    00049200
                LCLC  &XCBTOKEN   ++ NAME                               00049300
                LCLC  &XETOKEN    ++ NAME                               00049400
                LCLC  &XTOKEN     ++ NAME                               00049500
                LCLC  &XIMPORTANCE              ++ NAME                 00049600
                LCLC  &XRETCODE   ++ NAME                               00049700
                LCLC  &XRSNCODE   ++ NAME                               00049800
                LCLA  &XPLISTVER  ++ VALUE                              00049900
                LCLC  &XMF        ++ VALUE                              00050000
                LCLC  &XMFCTRL    ++ NAME                               00050100
                LCLC  &XMFATTR    ++ VALUE                              00050200
                LCLC  &XMFSCK     ++ VALUE                              00050300
.*******************************************************************    00050400
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00050500
.*******************************************************************    00050600
                LCLC  &ZXCBTOKEN  ++ OUTPUT NAME                        00050700
                LCLC  &ZXETOKEN   ++ OUTPUT NAME                        00050800
                LCLC  &ZXTOKEN    ++ OUTPUT NAME                        00050900
                LCLC  &ZXIMPORTANCE             ++ OUTPUT NAME          00051000
                LCLC  &ZXRETCODE  ++ OUTPUT NAME                        00051100
                LCLC  &ZXRSNCODE  ++ OUTPUT NAME                        00051200
                LCLC  &ZXPLISTVER               ++ INPUT VALUE          00051300
                LCLC  &ZXMF       ++ INPUT VALUE                        00051400
                LCLC  &ZXMFCTRL   ++ INPUT NAME                         00051500
                LCLC  &ZXMFATTR   ++ INPUT VALUE                        00051600
                LCLC  &ZXMFSCK    ++ INPUT VALUE                        00051700
.********************************************************************   00051800
.***AC.PLV01  PROCESS PLISTVER                                      *   00051900
.********************************************************************   00052000
&XPLISTVER      SETA  0                                                 00052100
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00052200
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00052300
&XPLISTVER      SETA  1                                                 00052400
.ZPLV0          ANOP  ,                                                 00052500
.*                                                                      00052600
                AIF   ('&IMPORTANCE' EQ '').ZPLV1E                      00052700
                AIF   (&XPLISTVER GE 1).ZPLV1E                          00052800
&XPLISTVER      SETA  1                                                 00052900
.ZPLV1E         ANOP  ,                                                 00053000
.*                                                                      00053100
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00053200
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00053300
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00053400
.*-------------------------------------------------------------------   00053500
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00053600
&ZMS            SETC  '"PLISTVER='                                      00053700
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00053800
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00053900
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00054000
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00054100
                AGO   .ZPVCK2                                           00054200
.ZPVCK3         ANOP  ,                                                 00054300
.*-------------------------------------------------------------------   00054400
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00054500
&ZMS            SETC  '"PLISTVER='                                      00054600
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00054700
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00054800
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00054900
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00055000
                AGO   .ZPVCKE                                           00055100
.ZPVCK2         ANOP  ,                                                 00055200
.*-------------------------------------------------------------------   00055300
&ZCVAL          SETC  '&PLISTVER(1)'                                    00055400
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00055500
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00055600
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00055700
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00055800
                AIF   (&ZN LE 1).ZPVCK4A   NOT HIGH                     00055900
.ZPVCK6         ANOP  ,                                                 00056000
&ZMS            SETC  '"PLISTVER='                                      00056100
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00056200
&ZMS            SETC  '&ZMS THE RANGE IS "0-1"'                         00056300
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00056400
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00056500
&XPLISTVER      SETA  1                                                 00056600
                AGO   .ZPVCKE                                           00056700
.*-------------------------------------------------------------------   00056800
.ZPVCK4A        ANOP  ,                                                 00056900
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00057000
&ZMS            SETC  'PLISTVER='                                       00057100
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00057200
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00057300
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00057400
                MNOTE 8,' &ZMS IS REQUIRED.'                            00057500
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00057600
                AGO   .ZPVCK5                                           00057700
.ZPVCK4         ANOP  ,                                                 00057800
&XPLISTVER      SETA  &PLISTVER(1)                                      00057900
.ZPVCK5         ANOP  ,                                                 00058000
.ZPVCKE         ANOP  ,                                                 00058100
.********************************************************************   00058200
.***AG.MF01 PROCESS MF MACRO FORMS                                      00058300
.********************************************************************   00058400
                ACTR  10000                                             00058500
.*------------------------------------------------------------------    00058600
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00058700
&XMF            SETC  ''          INITIALIZE XVARIABLE                  00058800
.*-------------------------------------------------------------------   00058900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00059000
.ZG19           ANOP  ,                                                 00059100
&ZTLC           SETC 'S'                                                00059200
                AIF   ('&MF(1)' NE '&ZTLC').ZG20                        00059300
&XMF            SETC  'S'         SET KEYWORD                           00059400
                AIF   (N'&MF LE 1).ZG19A        CK NUM                  00059500
&ZMS            SETC  '"MF='                                            00059600
&ZMS            SETC  '&ZMS.&MF"'                                       00059700
&ZMS            SETC  '&ZMS "MF"'                                       00059800
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00059900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00060000
.ZG19A          ANOP  ,                                                 00060100
.*-------------------------------------------------------------------   00060200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00060300
.ZG20           ANOP  ,                                                 00060400
&ZTLC           SETC 'L'                                                00060500
                AIF   ('&MF(1)' NE '&ZTLC').ZG27                        00060600
&XMF            SETC  'L'         SET KEYWORD                           00060700
                AIF   (N'&MF LE 3).ZG20A        CK NUM                  00060800
&ZMS            SETC  '"MF='                                            00060900
&ZMS            SETC  '&ZMS.&MF"'                                       00061000
&ZMS            SETC  '&ZMS "MF"'                                       00061100
                MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'              00061200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00061300
.ZG20A          ANOP  ,                                                 00061400
.*-------------------------------------------------------------------   00061500
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00061600
                AIF   (N'&SYSLIST NE 0).ZG20B   POSITIONALS?            00061700
                AIF   ('&ETOKEN' NE '').ZG20B   KEYS?                   00061800
                AIF   ('&TOKEN' NE '').ZG20B    KEYS?                   00061900
                AIF   ('&IMPORTANCE' NE '').ZG20B  KEYS?                00062000
                AIF   ('&RETCODE' NE '').ZG20B  KEYS?                   00062100
                AIF   ('&RSNCODE' NE '').ZG20B  KEYS?                   00062200
                AGO    .ZG20C     INVOCATION OKAY                       00062300
.ZG20B          ANOP  ,                                                 00062400
&ZMS            SETC  'THE "L" FORM OF "MF"'                            00062500
&ZMS            SETC  '&ZMS CAN ONLY HAVE'                              00062600
&ZMS            SETC  '&ZMS THE "PLISTVER" KEY'                         00062700
                MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'            00062800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00062900
.ZG20C          ANOP  ,                                                 00063000
.*-------------------------------------------------------------------   00063100
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00063200
&ZXMFCTRL       SETC  'INPUT'     SET IN/OUTPUT                         00063300
&XMFCTRL        SETC  '&MF(2,1)'  SET XVARIABLE                         00063400
                AIF   (N'&MF(2) GT 1).ZG22B     MULTI PARMS             00063500
&XMFCTRL        SETC  '&MF(2)'    SET XVARIABLE                         00063600
.ZG22B          AIF   (K'&MF(2) GT 0).ZG22C                             00063700
&ZXMFCTRL       SETC  ''          RESET IN/OUTPUT                       00063800
&ZMS            SETC  'WHEN "L" IS SPECIFIED'                           00063900
&ZMS            SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'               00064000
                MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                      00064100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00064200
.ZG22C          ANOP  ,                                                 00064300
.*-------------------------------------------------------------------   00064400
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00064500
                AIF   (K'&ZXMFCTRL LE 0).ZG22P  NOT I/O                 00064600
                AIF   ('&XMFCTRL'(1,1) NE '(').ZG22P                    00064700
&ZXMFCTRL       SETC  ''          RESET IN/OUTPUT                       00064800
&ZMS            SETC  '"MF='                                            00064900
&ZMS            SETC  '&ZMS.&MF"'                                       00065000
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00065100
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'                 00065200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00065300
.ZG22P          ANOP  ,                                                 00065400
.*-------------------------------------------------------------------   00065500
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00065600
&ZXMFATTR       SETC  'INPUT'     SET IN/OUTPUT                         00065700
&XMFATTR        SETC  '0D'                                              00065800
                AIF   (K'&MF(3) LE 0).ZG25B     PARM                    00065900
&XMFATTR        SETC  '&MF(3,1)'  SET XVARIABLE                         00066000
                AIF   (N'&MF(3) GT 1).ZG25B     MULTI                   00066100
&XMFATTR        SETC  '&MF(3)'    SET XVARIABLE                         00066200
.ZG25B          ANOP  ,                                                 00066300
.*-------------------------------------------------------------------   00066400
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00066500
                AIF   (K'&ZXMFATTR LE 0).ZG25P  NOT I/O                 00066600
                AIF   ('&XMFATTR'(1,1) NE '(').ZG25P                    00066700
&ZXMFATTR       SETC  ''          RESET IN/OUTPUT                       00066800
&ZMS            SETC  '"MF='                                            00066900
&ZMS            SETC  '&ZMS.&MF"'                                       00067000
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00067100
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'                 00067200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00067300
.ZG25P          ANOP  ,                                                 00067400
.*-------------------------------------------------------------------   00067500
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00067600
                AIF   (K'&ZXMFATTR LE 0).ZG25S  NOT I/O                 00067700
                AIF   (K'&XMFATTR LE 60).ZG25S  LNG OK                  00067800
&ZXMFATTR       SETC  ''          RESET IN/OUTPUT                       00067900
&ZMS            SETC  '"MF='                                            00068000
&ZMS            SETC  '&ZMS.&MF"'                                       00068100
&ZMS            SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'             00068200
                MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'                00068300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00068400
.ZG25S          ANOP  ,                                                 00068500
.*-------------------------------------------------------------------   00068600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00068700
.ZG27           ANOP  ,                                                 00068800
&ZTLC           SETC 'E'                                                00068900
                AIF   ('&MF(1)' NE '&ZTLC').ZG35                        00069000
&XMF            SETC  'E'         SET KEYWORD                           00069100
                AIF   (N'&MF LE 3).ZG27A        CK NUM                  00069200
&ZMS            SETC  '"MF='                                            00069300
&ZMS            SETC  '&ZMS.&MF"'                                       00069400
&ZMS            SETC  '&ZMS "MF"'                                       00069500
                MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'              00069600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00069700
.ZG27A          ANOP  ,                                                 00069800
.*-------------------------------------------------------------------   00069900
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00070000
&ZXMFCTRL       SETC  'INPUT'     SET IN/OUTPUT                         00070100
&XMFCTRL        SETC  '&MF(2,1)'  SET XVARIABLE                         00070200
                AIF   (N'&MF(2) GT 1).ZG29B     MULTI PARMS             00070300
&XMFCTRL        SETC  '&MF(2)'    SET XVARIABLE                         00070400
.ZG29B          AIF   (K'&MF(2) GT 0).ZG29C                             00070500
&ZXMFCTRL       SETC  ''          RESET IN/OUTPUT                       00070600
&ZMS            SETC  'WHEN "E" IS SPECIFIED'                           00070700
&ZMS            SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'               00070800
                MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                      00070900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00071000
.ZG29C          ANOP  ,                                                 00071100
.*-------------------------------------------------------------------   00071200
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00071300
                AIF   (K'&ZXMFCTRL LE 0).ZG29R  NOT I/O                 00071400
                AIF   ('&XMFCTRL'(1,1) NE '(').ZG29R                    00071500
&ZCGPR          SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                        00071600
                AIF   ('&ZCGPR'(1,1) NE '0').ZG29P                      00071700
                AIF   (K'&ZCGPR GT 2).ZG29Q                             00071800
                AIF   ('&ZCGPR' EQ '0').ZG29Q                           00071900
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00072000
                AIF   (T'&ZCGPR NE 'N').ZG29Q   INVALID REG NAME        00072100
.ZG29P          ANOP  ,                                                 00072200
                AIF   (T'&ZCGPR NE 'N').ZG29R   NON NUMERIC             00072300
                AIF   ('&ZCGPR' LT '1').ZG29Q                           00072400
                AIF   ('&ZCGPR' LE '12').ZG29R                          00072500
.ZG29Q          ANOP  ,                                                 00072600
&ZMS            SETC  '"MF='                                            00072700
&ZMS            SETC  '&ZMS.&MF"'                                       00072800
&ZMS            SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'         00072900
                MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                  00073000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00073100
.ZG29R          ANOP  ,                                                 00073200
.*-------------------------------------------------------------------   00073300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00073400
&XMFSCK         SETC  ''          INITIALIZE XVARIABLE                  00073500
.ZG33A   AIF   ('&MF(3)' NE 'COMPLETE').ZG34A                           00073600
&XMFSCK         SETC  'COMPLETE'  SET KEYWORD                           00073700
.*-------------------------------------------------------------------   00073800
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00073900
.ZG34A          AIF   (K'&XMFSCK GT 0).ZG34C    KEYWORD                 00074000
                AIF   (K'&MF(3) LE 0).ZG34B                             00074100
&ZMS            SETC  '"MF='                                            00074200
&ZMS            SETC  '&ZMS.&MF"'                                       00074300
&ZMS            SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '         00074400
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00074500
&ZMS            SETC  '&ZMS "COMPLETE".'                                00074600
                MNOTE 8,' &ZMS '                                        00074700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00074800
.ZG34B          ANOP  ,                                                 00074900
&XMFSCK         SETC  'COMPLETE'  SET DEFAULT KEYWORD                   00075000
.ZG34C          ANOP  ,                                                 00075100
&ZXMFSCK        SETC  'INPUT'     SET IN/OUTPUT                         00075200
.*------------------------------------------------------------------    00075300
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00075400
.ZG35           ANOP  ,                                                 00075500
&ZXMF           SETC  'INPUT'     SET IN/OUTPUT                         00075600
                AIF   (K'&XMF GT 0).ZG35E       VALID ARG               00075700
                AIF   (T'&MF EQ 'O').ZG35D      OMITTED                 00075800
&ZASYSLNDX      SETA  0                                                 00075900
.ZG35A          ANOP  ,           POSITIONAL MACRO KEY                  00076000
&ZASYSLNDX      SETA  &ZASYSLNDX+1                                      00076100
                AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG35C                  00076200
&ZTLC           SETC 'MF'                                               00076300
                AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG35A         00076400
.ZG35B          ANOP  ,                                                 00076500
&ZXMF           SETC  ''          RESET IN/OUTPUT                       00076600
&ZMS            SETC  'THE "MF" KEY'                                    00076700
&ZMS            SETC  '&ZMS MUST CONTAIN ONE'                           00076800
                MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                  00076900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00077000
                AGO   .ZG35E                                            00077100
.ZG35C          ANOP  ,                                                 00077200
&ZXMF           SETC  ''          RESET IN/OUTPUT                       00077300
&ZMS            SETC  '"MF='                                            00077400
&ZMS            SETC  '&ZMS.&MF"'                                       00077500
&ZMS            SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '         00077600
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00077700
&ZMS            SETC  '&ZMS "S",'                                       00077800
&ZMS            SETC  '&ZMS "L",'                                       00077900
&ZMS            SETC  '&ZMS OR "E".'                                    00078000
                MNOTE 8,' &ZMS '                                        00078100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00078200
                AGO   .ZG35E                                            00078300
.ZG35D          ANOP  ,                                                 00078400
&XMF            SETC  'S'         SET DEFAULT KEYWORD                   00078500
&XMFSCK         SETC  'COMPLETE'  COMPLETE CHECKING                     00078600
.ZG35E          ANOP  ,                                                 00078700
.********************************************************************   00078800
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00078900
.********************************************************************   00079000
                ACTR  10000                                             00079100
.*-------------------------------------------------------------------   00079200
.***AG.MF03 MF=(SLE)                                                    00079300
                AIF   ('&XMF' EQ 'L').ZGMFX                             00079400
.*----------------------------------------------------------------***   00079500
.***AG.KMEKY01 NAME, RQD OUTPUT, ME KEYS -XVARIABLE                     00079600
&XCBTOKEN       SETC  ''          INITIALIZE XVARIABLE                  00079700
                AIF   (K'&ETOKEN LE 0).ZG2C                             00079800
&ZXCBTOKEN      SETC  'OUTPUT'    SET IN/OUTPUT                         00079900
&XCBTOKEN       SETC  'ETOKEN'    SET XVARIABLE                         00080000
&ZXETOKEN       SETC  'OUTPUT'    SET IN/OUTPUT                         00080100
&XETOKEN        SETC  '&ETOKEN(1)'              SET XVARIABLE PARM      00080200
                AIF   (N'&ETOKEN GT 1).ZG2A                             00080300
&XETOKEN        SETC  '&ETOKEN'   SET XVARIABLE PARM                    00080400
.ZG2A           AIF   (N'&ETOKEN LE 1).ZG2B     CK NUM                  00080500
&ZMS            SETC  '"ETOKEN='                                        00080600
&ZMS            SETC  '&ZMS.&ETOKEN"'                                   00080700
&ZMS            SETC  '&ZMS "ETOKEN"'                                   00080800
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00080900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00081000
.ZG2B           AIF   (K'&XETOKEN GT 0).ZG2C    ONE PARM                00081100
&ZXCBTOKEN      SETC  ''          RESET IN/OUTPUT                       00081200
&ZXETOKEN       SETC  ''          RESET IN/OUTPUT                       00081300
&ZMS            SETC  ' '                                               00081400
&ZMS            SETC  '&ZMS "ETOKEN" KEY AND ITS'                       00081500
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  00081600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00081700
.ZG2C           ANOP  ,                                                 00081800
.*----------------------------------------------------------------***   00081900
.***AG.KMEKY02 NAME, RQD OUTPUT, ME KEYS -XVARIABLE                     00082000
                AIF   (K'&TOKEN LE 0).ZG3D      NO ME KEY               00082100
                AIF   (N'&TOKEN LE 1).ZG3A      CK NUM                  00082200
&ZMS            SETC  '"TOKEN='                                         00082300
&ZMS            SETC  '&ZMS.&TOKEN"'                                    00082400
&ZMS            SETC  '&ZMS "TOKEN"'                                    00082500
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00082600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00082700
.ZG3A           AIF   (K'&XCBTOKEN LE 0).ZG3B                           00082800
&ZMS            SETC  '"TOKEN'                                          00082900
&ZMS            SETC  '&ZMS.=&TOKEN"'                                   00083000
&ZMS            SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'             00083100
&ZMS            SETC  '&ZMS "&XCBTOKEN"'                                00083200
                MNOTE 8,' &ZMS KEY.'                                    00083300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00083400
                AGO   .ZG3D                                             00083500
.*                                                                      00083600
.ZG3B           ANOP  ,                                                 00083700
&ZXCBTOKEN      SETC  'OUTPUT'    SET IN/OUTPUT                         00083800
&XCBTOKEN       SETC  'TOKEN'     SET XVARIABLE                         00083900
&ZXTOKEN        SETC  'OUTPUT'    SET IN/OUTPUT                         00084000
&XTOKEN         SETC  '&TOKEN(1)'               SET XVARIABLE PARM      00084100
                AIF   (N'&TOKEN GT 1).ZG3C                              00084200
&XTOKEN         SETC  '&TOKEN'    SET XVARIABLE PARM                    00084300
.ZG3C           AIF   (K'&XTOKEN GT 0).ZG3D     ONE PARM                00084400
&ZXCBTOKEN      SETC  ''          RESET IN/OUTPUT                       00084500
&ZXTOKEN        SETC  ''          RESET IN/OUTPUT                       00084600
&ZMS            SETC  ' '                                               00084700
&ZMS            SETC  '&ZMS "TOKEN" KEY AND ITS'                        00084800
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  00084900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00085000
.ZG3D           ANOP  ,                                                 00085100
.*------------------------------------------------------------------    00085200
.***AG.KME4Y09 NAME, RQD OUTPUT, ME KEYS -CHECK IF KEY ENTERED          00085300
                AIF   (K'&XCBTOKEN GT 0).ZG4B                           00085400
&ZXCBTOKEN      SETC  ''          RESET IN/OUTPUT                       00085500
&ZXETOKEN       SETC  ''          RESET IN/OUTPUT                       00085600
&XCBTOKEN       SETC  ''          ENSURE NULL                           00085700
&XETOKEN        SETC  ''          ENSURE NULL                           00085800
&ZMS            SETC  'ONE OF THE FOLLOWING'                            00085900
&ZMS            SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'               00086000
&ZMS            SETC  '&ZMS REQUIRED:'                                  00086100
&ZMS            SETC  '&ZMS "ETOKEN"'           VALID ME KEY            00086200
&ZMS            SETC  '&ZMS OR "TOKEN".'        VALID ME KEY            00086300
                MNOTE 8,' &ZMS '                                        00086400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00086500
.ZG4B           ANOP  ,                                                 00086600
.*-------------------------------------------------------------------   00086700
.***AG.KMEKY13 NAME, RQD OUTPUT, ME KEYS -PROCESS DEPENDENCIES          00086800
.ZG2ZY  AIF    ('&XCBTOKEN' NE 'ETOKEN').ZG3ZY                          00086900
.*-------------------------------------------------------------------   00087000
.***AG.KCK02 NAME, RQD OUTPUT, ME KEYS -GPR OUT OF RANGE                00087100
                AIF   (K'&ZXETOKEN LE 0).ZG2R   NOT I/O                 00087200
                AIF   ('&XETOKEN'(1,1) NE '(').ZG2R                     00087300
&ZCGPR          SETC  '&XETOKEN'(2,K'&XETOKEN-2)                        00087400
                AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                       00087500
                AIF   (K'&ZCGPR GT 2).ZG2Q                              00087600
                AIF   ('&ZCGPR' EQ '0').ZG2Q                            00087700
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00087800
                AIF   (T'&ZCGPR NE 'N').ZG2Q    INVALID REG NAME        00087900
.ZG2P           ANOP  ,                                                 00088000
                AIF   (T'&ZCGPR NE 'N').ZG2R    NON NUMERIC             00088100
                AIF   ('&ZCGPR' LT '2').ZG2Q                            00088200
                AIF   ('&ZCGPR' LE '12').ZG2R                           00088300
.ZG2Q           ANOP  ,                                                 00088400
&ZMS            SETC  '"ETOKEN='                                        00088500
&ZMS            SETC  '&ZMS.&ETOKEN"'                                   00088600
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00088700
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00088800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00088900
.ZG2R           ANOP  ,                                                 00089000
.*-------------------------------------------------------------------   00089100
.***AG.KMEKY13 NAME, RQD OUTPUT, ME KEYS -PROCESS DEPENDENCIES          00089200
.ZG3ZY  AIF    ('&XCBTOKEN' NE 'TOKEN').ZG4ZY                           00089300
.*-------------------------------------------------------------------   00089400
.***AG.KCK02 NAME, RQD OUTPUT, ME KEYS -GPR OUT OF RANGE                00089500
                AIF   (K'&ZXTOKEN LE 0).ZG3R    NOT I/O                 00089600
                AIF   ('&XTOKEN'(1,1) NE '(').ZG3R                      00089700
&ZCGPR          SETC  '&XTOKEN'(2,K'&XTOKEN-2)                          00089800
                AIF   ('&ZCGPR'(1,1) NE '0').ZG3P                       00089900
                AIF   (K'&ZCGPR GT 2).ZG3Q                              00090000
                AIF   ('&ZCGPR' EQ '0').ZG3Q                            00090100
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00090200
                AIF   (T'&ZCGPR NE 'N').ZG3Q    INVALID REG NAME        00090300
.ZG3P           ANOP  ,                                                 00090400
                AIF   (T'&ZCGPR NE 'N').ZG3R    NON NUMERIC             00090500
                AIF   ('&ZCGPR' LT '2').ZG3Q                            00090600
                AIF   ('&ZCGPR' LE '12').ZG3R                           00090700
.ZG3Q           ANOP  ,                                                 00090800
&ZMS            SETC  '"TOKEN='                                         00090900
&ZMS            SETC  '&ZMS.&TOKEN"'                                    00091000
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00091100
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00091200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00091300
.ZG3R           ANOP  ,                                                 00091400
.*-------------------------------------------------------------------   00091500
.***AG.KMEKY15 NAME, RQD OUTPUT, ME KEYS -END                           00091600
.ZG4ZY          ANOP ,            END MUTUALLY EXCLUSIVE KEYS           00091700
.*----------------------------------------------------------------***   00091800
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00091900
                AIF   (N'&IMPORTANCE LE 1).ZG6A  CK NUM                 00092000
&ZMS            SETC  '"IMPORTANCE='                                    00092100
&ZMS            SETC  '&ZMS.&IMPORTANCE"'                               00092200
&ZMS            SETC  '&ZMS "IMPORTANCE"'                               00092300
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00092400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00092500
.ZG6A           ANOP  ,                                                 00092600
.*-------------------------------------------------------------------   00092700
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00092800
                AIF   (K'&IMPORTANCE(1) LE 0).ZG6C  NO PARM             00092900
&ZXIMPORTANCE   SETC  'OUTPUT'    SET OUTPUT                            00093000
&XIMPORTANCE    SETC  '&IMPORTANCE(1)'          SET XVARIABLE           00093100
                AIF   (N'&IMPORTANCE GT 1).ZG6C                         00093200
&XIMPORTANCE    SETC  '&IMPORTANCE'             SET XVARIABLE           00093300
.ZG6C           ANOP  ,                                                 00093400
.*-------------------------------------------------------------------   00093500
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00093600
                AIF   (K'&ZXIMPORTANCE LE 0).ZG6R  NOT I/O              00093700
                AIF   ('&XIMPORTANCE'(1,1) NE '(').ZG6R                 00093800
&ZCGPR          SETC  '&XIMPORTANCE'(2,K'&XIMPORTANCE-2)                00093900
                AIF   ('&ZCGPR'(1,1) NE '0').ZG6P                       00094000
                AIF   (K'&ZCGPR GT 2).ZG6Q                              00094100
                AIF   ('&ZCGPR' EQ '0').ZG6Q                            00094200
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00094300
                AIF   (T'&ZCGPR NE 'N').ZG6Q    INVALID REG NAME        00094400
.ZG6P           ANOP  ,                                                 00094500
                AIF   (T'&ZCGPR NE 'N').ZG6R    NON NUMERIC             00094600
                AIF   ('&ZCGPR' LT '2').ZG6Q                            00094700
                AIF   ('&ZCGPR' LE '12').ZG6R                           00094800
.ZG6Q           ANOP  ,                                                 00094900
&ZMS            SETC  '"IMPORTANCE='                                    00095000
&ZMS            SETC  '&ZMS.&IMPORTANCE"'                               00095100
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00095200
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00095300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00095400
.ZG6R           ANOP  ,                                                 00095500
.*----------------------------------------------------------------***   00095600
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00095700
                AIF   (N'&RETCODE LE 1).ZG9A    CK NUM                  00095800
&ZMS            SETC  '"RETCODE='                                       00095900
&ZMS            SETC  '&ZMS.&RETCODE"'                                  00096000
&ZMS            SETC  '&ZMS "RETCODE"'                                  00096100
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00096200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00096300
.ZG9A           ANOP  ,                                                 00096400
.*-------------------------------------------------------------------   00096500
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00096600
                AIF   (K'&RETCODE(1) LE 0).ZG9C  NO PARM                00096700
&ZXRETCODE      SETC  'OUTPUT'    SET OUTPUT                            00096800
&XRETCODE       SETC  '&RETCODE(1)'             SET XVARIABLE           00096900
                AIF   (N'&RETCODE GT 1).ZG9C                            00097000
&XRETCODE       SETC  '&RETCODE'  SET XVARIABLE                         00097100
.ZG9C           ANOP  ,                                                 00097200
.*-------------------------------------------------------------------   00097300
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00097400
                AIF   (K'&ZXRETCODE LE 0).ZG9R  NOT I/O                 00097500
                AIF   ('&XRETCODE'(1,1) NE '(').ZG9R                    00097600
&ZCGPR          SETC  '&XRETCODE'(2,K'&XRETCODE-2)                      00097700
                AIF   ('&ZCGPR'(1,1) NE '0').ZG9P                       00097800
                AIF   (K'&ZCGPR GT 2).ZG9Q                              00097900
                AIF   ('&ZCGPR' EQ '0').ZG9Q                            00098000
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00098100
                AIF   (T'&ZCGPR NE 'N').ZG9Q    INVALID REG NAME        00098200
.ZG9P           ANOP  ,                                                 00098300
                AIF   (T'&ZCGPR NE 'N').ZG9R    NON NUMERIC             00098400
                AIF   ('&ZCGPR' EQ '15').ZG9R                           00098500
                AIF   ('&ZCGPR' LT '2').ZG9Q                            00098600
                AIF   ('&ZCGPR' LE '12').ZG9R                           00098700
.ZG9Q           ANOP  ,                                                 00098800
&ZMS            SETC  '"RETCODE='                                       00098900
&ZMS            SETC  '&ZMS.&RETCODE"'                                  00099000
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00099100
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12) OR (15).'          00099200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00099300
.ZG9R           ANOP  ,                                                 00099400
.*----------------------------------------------------------------***   00099500
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00099600
                AIF   (N'&RSNCODE LE 1).ZG12A   CK NUM                  00099700
&ZMS            SETC  '"RSNCODE='                                       00099800
&ZMS            SETC  '&ZMS.&RSNCODE"'                                  00099900
&ZMS            SETC  '&ZMS "RSNCODE"'                                  00100000
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00100100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00100200
.ZG12A          ANOP  ,                                                 00100300
.*-------------------------------------------------------------------   00100400
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00100500
                AIF   (K'&RSNCODE(1) LE 0).ZG12C  NO PARM               00100600
&ZXRSNCODE      SETC  'OUTPUT'    SET OUTPUT                            00100700
&XRSNCODE       SETC  '&RSNCODE(1)'             SET XVARIABLE           00100800
                AIF   (N'&RSNCODE GT 1).ZG12C                           00100900
&XRSNCODE       SETC  '&RSNCODE'  SET XVARIABLE                         00101000
.ZG12C          ANOP  ,                                                 00101100
.*-------------------------------------------------------------------   00101200
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00101300
                AIF   (K'&ZXRSNCODE LE 0).ZG12R  NOT I/O                00101400
                AIF   ('&XRSNCODE'(1,1) NE '(').ZG12R                   00101500
&ZCGPR          SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                      00101600
                AIF   ('&ZCGPR'(1,1) NE '0').ZG12P                      00101700
                AIF   (K'&ZCGPR GT 2).ZG12Q                             00101800
                AIF   ('&ZCGPR' EQ '0').ZG12R                           00101900
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00102000
                AIF   (T'&ZCGPR NE 'N').ZG12Q   INVALID REG NAME        00102100
.ZG12P          ANOP  ,                                                 00102200
                AIF   (T'&ZCGPR NE 'N').ZG12R   NON NUMERIC             00102300
                AIF   ('&ZCGPR' EQ '0').ZG12R                           00102400
                AIF   ('&ZCGPR' LT '2').ZG12Q                           00102500
                AIF   ('&ZCGPR' LE '12').ZG12R                          00102600
.ZG12Q          ANOP  ,                                                 00102700
&ZMS            SETC  '"RSNCODE='                                       00102800
&ZMS            SETC  '&ZMS.&RSNCODE"'                                  00102900
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00103000
                MNOTE 8,' &ZMS IN THE RANGE (0) OR (2)-(12).'           00103100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00103200
.ZG12R          ANOP  ,                                                 00103300
.******************************************************************     00103400
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00103500
.******************************************************************     00103600
                ACTR  10000                                             00103700
.*----------------------------------------------------------------***   00103800
.***AH.P02 EXTRA POSITIONALS                                            00103900
                AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS              00104000
                AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL              00104100
                AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL          00104200
                AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL           00104300
.ZGLISTX1       ANOP  ,                                                 00104400
&ZCVAL          SETC  ''          ERROR FIELD                           00104500
&ZAWRK          SETA  0           POSITIONAL NUMBER                     00104600
.ZGLIST2        ANOP  ,                                                 00104700
&ZAWRK          SETA  &ZAWRK+1    NEXT POSITIONAL                       00104800
                AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE              00104900
&ZCVAL          SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                   00105000
                AGO   .ZGLIST2                                          00105100
.*                                                                      00105200
.ZGLIST3        ANOP  ,                                                 00105300
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)     STRIP COMMA             00105400
&ZMS            SETC  'POSITIONAL ARGUMENT(S),'                         00105500
&ZMS            SETC  '&ZMS "&ZCVAL"'                                   00105600
&ZMS            SETC  '&ZMS CANNOT BE USED.'                            00105700
&ZMS            SETC  '&ZMS NO POSITIONAL ARGUMENTS'                    00105800
                MNOTE 8,' &ZMS ARE ALLOWED.'                            00105900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00106000
.ZGLISTX        ANOP  ,                                                 00106100
&ZASYSLNDX      SETA  0                                                 00106200
.*-------------------------------------------------------------------   00106300
.***AG.MF04 MF=(SLE)                                                    00106400
.ZGMFX          ANOP  ,           END OF FULL SYNTAX CHECK              00106500
.*******************************************************************    00106600
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00106700
.*******************************************************************    00106800
                AIF   (&ZMACRET NE 0).ZLX2      ERROR DETECTED          00106900
.*******************************************************************    00107000
.***AE.01  START OF IWMESQRY MACRO CODE                                 00107100
.*******************************************************************    00107200
                LCLC  &M0M0001                 NAME                     00107300
&M0M0001        SETC  '&XLABEL'                SET NAME                 00107400
                AIF   (K'&XLABEL NE 0).XLAB2                            00107500
&M0M0001        SETC  'M00M&SYSNDX'            DEFAULT NAME             00107600
.*                                                                      00107700
.XLAB2          ANOP  ,                                                 00107800
                AIF   ('&XMF' EQ 'L').XLAB3                             00107900
&M0M0001 DS    0H                             IWMESQRY-1                00108000
.XLAB3          ANOP  ,                                                 00108100
.*******************************************************************    00108200
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00108300
.*******************************************************************    00108400
              PUSH  PRINT                                               00108500
                AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON        00108600
                PRINT OFF         ++ PR01                               00108700
                AGO   .ZPRNTXX                                          00108800
.ZPRINTX        PRINT ON                                                00108900
.ZPRNTXX        ANOP  ,                                                 00109000
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00109100
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00109200
.********************************************************************   00109300
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00109400
.********************************************************************   00109500
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00109600
                      LCLA  &ZOPN1         INVOCATION INDEX             00109700
                      LCLC  &ZOPL(4095)    LABEL                        00109800
                      LCLC  &ZOPO(4095)    OPERATION                    00109900
                      LCLC  &ZOPV(4095)    VALUE                        00110000
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00110100
.*                                                                      00110200
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00110300
.******************************************************************     00110400
.***AL.L10 IWMESQRY FMT=LIST MF=S!L PARAMETERS                          00110500
.******************************************************************     00110600
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00110700
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00110800
&XMFCTRL              SETC  '#Z'.'&SYSNDX'.'A'                          00110900
&XMFATTR              SETC  '0D'                                        00111000
.*                                                                      00111100
&ZOPN                 SETA  &ZOPN+1                                     00111200
&ZOPL(&ZOPN)          SETC  ' '                                         00111300
                      AIF   (&SYSALVL NE 0).ZALVL6A                     00111400
&ZOPO(&ZOPN)          SETC  'B'                                         00111500
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00111600
                      AGO   .ZALVL6B                                    00111700
.ZALVL6A              ANOP                                              00111800
&ZOPO(&ZOPN)          SETC  'CNOP'                                      00111900
&ZOPV(&ZOPN)          SETC  '4,8'                                       00112000
&ZOPN                 SETA  &ZOPN+1                                     00112100
&ZOPL(&ZOPN)          SETC  ' '                                         00112200
&ZOPO(&ZOPN)          SETC  'BRAS'                                      00112300
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              00112400
.ZALVL6B              ANOP                                              00112500
&ZOPD(&ZOPN)          SETC  '++ IWMESQRY ARG PARMS'                     00112600
.*                                                                      00112700
&ZOPN                 SETA  &ZOPN+1                                     00112800
&ZOPL(&ZOPN)          SETC  ' '                                         00112900
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00113000
&ZOPV(&ZOPN)          SETC  '1'                                         00113100
&ZOPD(&ZOPN)          SETC  ' '                                         00113200
.*                                                                      00113300
.ZLMFSL2              ANOP  ,                                           00113400
.*-------------------------------------------------------------------   00113500
.***AM.L00  IWMESQRY FMT=LIST name                                      00113600
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00113700
&ZOPN                 SETA &ZOPN+1                                      00113800
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00113900
&ZOPO(&ZOPN)          SETC 'EQU'                                        00114000
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00114100
&ZOPD(&ZOPN)          SETC '++ IWMESQRY NAME'                           00114200
.ZLMFSL2M             ANOP  ,                                           00114300
.*-------------------------------------------------------------------   00114400
.***AM.L01  IWMESQRY FMT=LIST PARAMETERS                                00114500
&ZOPN                 SETA &ZOPN+1                                      00114600
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00114700
&ZOPO(&ZOPN)          SETC 'DS'                                         00114800
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00114900
&ZOPD(&ZOPN)          SETC '++ IWMESQRY PARM LIST'                      00115000
.*-------------------------------------------------------------------   00115100
.***AM.L02 XVERSION XL1                                                 00115200
&ZOPN                 SETA &ZOPN+1                                      00115300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00115400
&ZOPO(&ZOPN)          SETC 'DS'                                         00115500
&ZOPV(&ZOPN)          SETC 'XL1'                                        00115600
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00115700
.*-------------------------------------------------------------------   00115800
.***AM.L03 XFLAGS BL.8                                                  00115900
&ZOPN                 SETA &ZOPN+1                                      00116000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFLAGS'                           00116100
&ZOPO(&ZOPN)          SETC 'DS'                                         00116200
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00116300
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00116400
.*                                                                      00116500
&ZOPN                 SETA  &ZOPN+1                                     00116600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_TOKEN'                   00116700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00116800
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00116900
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00117000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).TOKEN'                        00117100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00117200
.*                                                                      00117300
&ZOPN                 SETA  &ZOPN+1                                     00117400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_IMPORTANCE'              00117500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00117600
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             00117700
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00117800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).IMPORTANCE'                   00117900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00118000
.*-------------------------------------------------------------------   00118100
.***AM.L09  XPLISTLEN XL2                                               00118200
&ZOPN                 SETA &ZOPN+1                                      00118300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPLISTLEN'                        00118400
&ZOPO(&ZOPN)          SETC 'DS'                                         00118500
&ZOPV(&ZOPN)          SETC 'XL2'                                        00118600
&ZOPD(&ZOPN)          SETC '++ INPUT '                                  00118700
.*-------------------------------------------------------------------   00118800
.***AM.L09  XETOKEN CL8                                                 00118900
&ZOPN                 SETA &ZOPN+1                                      00119000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XETOKEN'                          00119100
&ZOPO(&ZOPN)          SETC 'DS'                                         00119200
&ZOPV(&ZOPN)          SETC 'CL8'                                        00119300
&ZOPD(&ZOPN)          SETC '++ &ZXETOKEN '                              00119400
.*-------------------------------------------------------------------   00119500
.***AM.MLM2 SAVED LOCATION COUNTER                                      00119600
                      AIF  (&XPLISTVER GE 1).ZL7LA                      00119700
                      AIF  ('&ZENDBASEPL' NE '').ZL7LA                  00119800
&ZENDBASEPL           SETC 'YES'                                        00119900
&ZOPN                 SETA &ZOPN+1                                      00120000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00120100
&ZOPO(&ZOPN)          SETC 'EQU'                                        00120200
&ZOPV(&ZOPN)          SETC '*'                                          00120300
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00120400
.ZL7LA                ANOP  ,                                           00120500
.*-------------------------------------------------------------------   00120600
.***AM.LVER1                                                            00120700
                      AIF  (&XPLISTVER LT 1).ZL7L                       00120800
.*-------------------------------------------------------------------   00120900
.*-------------------------------------------------------------------   00121000
.***AM.L09  XIMPORTANCE XL2                                             00121100
&ZOPN                 SETA &ZOPN+1                                      00121200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XIMPORTANCE'                      00121300
&ZOPO(&ZOPN)          SETC 'DS'                                         00121400
&ZOPV(&ZOPN)          SETC 'XL2'                                        00121500
&ZOPD(&ZOPN)          SETC '++ &ZXIMPORTANCE '                          00121600
.*-------------------------------------------------------------------   00121700
.***AM.LVER2                                                            00121800
.ZL7L                 ANOP  ,                                           00121900
.*-------------------------------------------------------------------   00122000
.*-------------------------------------------------------------------   00122100
.***AM.MLM1 SAVED LOCATION COUNTER                                      00122200
                      AIF  ('&ZENDBASEPL' NE '').ZL8LB                  00122300
&ZENDBASEPL           SETC 'YES'                                        00122400
&ZOPN                 SETA &ZOPN+1                                      00122500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00122600
&ZOPO(&ZOPN)          SETC 'EQU'                                        00122700
&ZOPV(&ZOPN)          SETC '*'                                          00122800
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00122900
.ZL8LB                ANOP  ,                                           00123000
.*-------------------------------------------------------------------   00123100
.***AM.PJR1 DEFINED ON XETOKEN                                          00123200
&ZOPN                 SETA &ZOPN+1                                      00123300
&ZOPL(&ZOPN)          SETC ' '                                          00123400
&ZOPO(&ZOPN)          SETC 'ORG'                                        00123500
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+4'                                00123600
&ZOPD(&ZOPN)          SETC ' '                                          00123700
.*-------------------------------------------------------------------   00123800
.***AM.L09  XTOKEN CL8                                                  00123900
&ZOPN                 SETA &ZOPN+1                                      00124000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XTOKEN'                           00124100
&ZOPO(&ZOPN)          SETC 'DS'                                         00124200
&ZOPV(&ZOPN)          SETC 'CL8'                                        00124300
&ZOPD(&ZOPN)          SETC '++ &ZXTOKEN '                               00124400
&ZOPN                 SETA &ZOPN+1                                      00124500
&ZOPL(&ZOPN)          SETC ' '                                          00124600
&ZOPO(&ZOPN)          SETC 'ORG'                                        00124700
&ZOPV(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00124800
&ZOPD(&ZOPN)          SETC 'RESET LOCATION COUNTER'                     00124900
.*-------------------------------------------------------------------   00125000
.***AM.L10 END OF IWMESQRY LIST PARAMETERS                              00125100
&ZOPN                 SETA &ZOPN+1                                      00125200
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00125300
&ZOPO(&ZOPN)          SETC 'EQU'                                        00125400
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00125500
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00125600
.*                                                                      00125700
&ZOPN                 SETA &ZOPN+1                                      00125800
&ZOPL(&ZOPN)          SETC ' '                                          00125900
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00126000
&ZOPV(&ZOPN)          SETC '1'                                          00126100
&ZOPD(&ZOPN)          SETC ' '                                          00126200
.*-------------------------------------------------------------------   00126300
.***AL.L12 IWMESQRY FMT=LIST MF=S!L PARAMETERS                          00126400
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00126500
.*                                                                      00126600
&ZOPN                 SETA  &ZOPN+1                                     00126700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00126800
&ZOPO(&ZOPN)          SETC  'DC'                                        00126900
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00127000
&ZOPD(&ZOPN)          SETC  '++ IWMESQRY ARG PARMS'                     00127100
.*                                                                      00127200
.ZLMFSLX              ANOP  ,                                           00127300
.*-------------------------------------------------------------------   00127400
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00127500
&ZPLLEN               SETA 12                                           00127600
.*                                                                      00127700
                      AIF  (&XPLISTVER LT 1).ZLLEN2Z                    00127800
&ZPLLEN               SETA 14                                           00127900
.ZLLEN2Z              ANOP  ,                                           00128000
.*                                                                      00128100
.******************************************************************     00128200
.***AI.L01 IWMESQRY FMT=LIST FILL IN PARAMETER AREA                     00128300
.******************************************************************     00128400
                      ACTR  10000                                       00128500
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00128600
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00128700
&ZCVAL                SETC  'LAE'          XAX MODE                     00128800
.ZIMFXA               ANOP ,                                            00128900
.*                                                                      00129000
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00129100
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00129200
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00129300
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00129400
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00129500
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00129600
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00129700
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00129800
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00129900
&ZOPN                 SETA  &ZOPN+1                                     00130000
&ZOPL(&ZOPN)          SETC  ' '                                         00130100
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00130200
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00130300
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00130400
                      AGO   .ZIMFNX                                     00130500
.*                                                                      00130600
.ZIMFN2               ANOP ,                                            00130700
                      AIF   (&SYSALVL EQ 0).ZIMFNX1                     00130800
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     00130900
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  00131000
&ZOPN                 SETA  &ZOPN+1                                     00131100
&ZOPL(&ZOPN)          SETC  ' '                                         00131200
&ZOPO(&ZOPN)          SETC  'LAE'                                       00131300
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  00131400
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00131500
                      AGO   .ZIMFNX                                     00131600
.ZIMFNX1              ANOP ,                                            00131700
&ZOPN                 SETA  &ZOPN+1                                     00131800
&ZOPL(&ZOPN)          SETC  ' '                                         00131900
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00132000
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00132100
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00132200
.ZIMFNX               ANOP ,                                            00132300
.********************************************************************   00132400
.***AI.L02 IWMESQRY FMT=LIST INITIALIZE PARAMETER AREA                  00132500
.********************************************************************   00132600
.***AI.L03 MF=(SLE)                                                     00132700
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00132800
.*                                                                      00132900
&ZOPN                 SETA  &ZOPN+1                                     00133000
&ZOPL(&ZOPN)          SETC  ' '                                         00133100
&ZOPO(&ZOPN)          SETC  'XC'                                        00133200
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00133300
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00133400
.ZIMFLX               ANOP  ,                                           00133500
.*-------------------------------------------------------------------   00133600
.***AI.L04B XVERSION XL1                                                00133700
                      AIF   (&XPLISTVER EQ 0).ZIMFVZ                    00133800
&ZOPN                 SETA  &ZOPN+1                                     00133900
&ZOPL(&ZOPN)          SETC  ' '                                         00134000
&ZOPO(&ZOPN)          SETC  'MVI'                                       00134100
&ZOPV(&ZOPN)          SETC  '0(1),&XPLISTVER'                           00134200
&ZOPD(&ZOPN)          SETC  '++ INPUT XVERSION XL1'                     00134300
.ZIMFVZ               ANOP  ,                                           00134400
.*-------------------------------------------------------------------   00134500
.***AI.L05 XFLAGS BL1                                                   00134600
&ZW                   SETC  ''                                          00134700
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00134800
.*-------------------------------------------------------------------   00134900
.***AI.L08 XFLAGS "TOKEN"                                               00135000
.***      BL1'X1XXXXXX'                                                 00135100
         AIF   ('&TOKEN' EQ '').ZI3A                                    00135200
&ZW                   SETC  '&ZW.01'                                    00135300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00135400
                      AGO   .ZI3C                                       00135500
.*                                                                      00135600
.ZI3A                 ANOP  ,                                           00135700
&ZW                   SETC  '&ZW.00'                                    00135800
.ZI3C                 ANOP  ,                                           00135900
.*-------------------------------------------------------------------   00136000
.***AI.L08 XFLAGS "IMPORTANCE"                                          00136100
.***      BL1'XX1XXXXX'                                                 00136200
         AIF   ('&IMPORTANCE' EQ '').ZI4A                               00136300
         AIF   ('&IMPORTANCE' EQ '').ZI4A                               00136400
&ZW                   SETC  '&ZW.100000'                                00136500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00136600
                      AGO   .ZI4C                                       00136700
.*                                                                      00136800
.ZI4A                 ANOP  ,                                           00136900
&ZW                   SETC  '&ZW.000000'                                00137000
.ZI4C                 ANOP  ,                                           00137100
.*-------------------------------------------------------------------   00137200
.***AI.L11 XFLAGS BL1                                                   00137300
                      AIF   ('&ZCLNG' NE 'YES').ZI4E  ALL ZERO BITS     00137400
&ZOPN                 SETA  &ZOPN+1                                     00137500
&ZOPL(&ZOPN)          SETC  ' '                                         00137600
&ZOPO(&ZOPN)          SETC  'OI'                                        00137700
&ZOPV(&ZOPN)          SETC  '1(1),B''&ZW'''                             00137800
&ZOPD(&ZOPN)          SETC  '++ OUTPUT BL1'                             00137900
.ZI4E                 ANOP  ,                                           00138000
.*-------------------------------------------------------------------   00138100
.***AI.L04 XPLISTLEN XL2                                                00138200
&ZOPN                 SETA  &ZOPN+1                                     00138300
&ZOPL(&ZOPN)          SETC  ' '                                         00138400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00138500
&ZOPV(&ZOPN)          SETC  '2(2,1),=AL2(&ZPLLEN)'                      00138600
&ZOPD(&ZOPN)          SETC  '++ INPUT XPLISTLEN XL2'                    00138700
.*-------------------------------------------------------------------   00138800
&ZOPN1                SETA &ZOPN                                        00138900
.*******************************************************************    00139000
.***  PROCESS IWMESQRY OUTPUT PARAMETERS                                00139100
.*******************************************************************    00139200
                      ACTR  10000                                       00139300
.*------------------------------------------------------------------    00139400
.***AO.L02 XETOKEN CL8                                                  00139500
         AIF   ('&ZXETOKEN' EQ 'OUTPUT').ZO6A  OUTPUT                   00139600
         AIF   ('&ZXETOKEN' NE 'INOUT').ZO6C  INOUT                     00139700
.ZO6A    AIF   ('&XETOKEN'(1,1) NE '(').ZO6B  ADDR IN GPR               00139800
&ZCGPR   SETC  '&XETOKEN'(2,K'&XETOKEN-2)                               00139900
&ZOPN                 SETA  &ZOPN+1                                     00140000
&ZOPL(&ZOPN)          SETC  ' '                                         00140100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00140200
&ZOPV(&ZOPN)          SETC  '0(8,&ZCGPR),4(1)'                          00140300
&ZOPD(&ZOPN)          SETC  '++ XETOKEN CL8'                            00140400
                      AGO   .ZO6C                                       00140500
.*                                                                      00140600
.ZO6B                 ANOP  ,                                           00140700
&ZAWRK   SETA  K'&XETOKEN                                               00140800
         AIF   ('&XETOKEN'(&ZAWRK,1) NE ')').ZO6G                       00140900
&ZN      SETA  2                                                        00141000
.ZO6H    ANOP                                                           00141100
         AIF   (&ZN GE &ZAWRK).ZO6G                                     00141200
         AIF   ('&XETOKEN'(&ZN,1) NE '(').ZO6I                          00141300
&ZC      SETC  '&XETOKEN'(1,&ZN).'8'.','                                00141400
&ZC      SETC  '&ZC'.'&XETOKEN'(&ZN+1,&ZAWRK-&ZN).',4(1)'               00141500
         AGO   .ZO6J                                                    00141600
.ZO6I    ANOP                                                           00141700
&ZN      SETA  &ZN+1                                                    00141800
         AGO   .ZO6H                                                    00141900
.ZO6G    ANOP                                                           00142000
&ZC      SETC  '&XETOKEN.(8),4(1)'                                      00142100
.ZO6J    ANOP                                                           00142200
&ZOPN                 SETA  &ZOPN+1                                     00142300
&ZOPL(&ZOPN)          SETC  ' '                                         00142400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00142500
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00142600
&ZOPD(&ZOPN)          SETC  '++ XETOKEN CL8'                            00142700
.ZO6C                 ANOP  ,                                           00142800
.*------------------------------------------------------------------    00142900
.***AO.LVER01                                                           00143000
                      AIF  (&XPLISTVER LT 1).ZO7Z  PLVER                00143100
.*------------------------------------------------------------------    00143200
.***AO.L02 XIMPORTANCE FL2                                              00143300
         AIF   ('&ZXIMPORTANCE' EQ 'OUTPUT').ZO7A  OUTPUT               00143400
         AIF   ('&ZXIMPORTANCE' NE 'INOUT').ZO7C  INOUT                 00143500
.ZO7A    AIF   ('&XIMPORTANCE'(1,1) NE '(').ZO7B  ADDR IN GPR           00143600
&ZCGPR   SETC  '&XIMPORTANCE'(2,K'&XIMPORTANCE-2)                       00143700
&ZOPN                 SETA  &ZOPN+1                                     00143800
&ZOPL(&ZOPN)          SETC  ' '                                         00143900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00144000
&ZOPV(&ZOPN)          SETC  '0(2,&ZCGPR),12(1)'                         00144100
&ZOPD(&ZOPN)          SETC  '++ XIMPORTANCE FL2'                        00144200
                      AGO   .ZO7C                                       00144300
.*                                                                      00144400
.ZO7B                 ANOP  ,                                           00144500
&ZAWRK   SETA  K'&XIMPORTANCE                                           00144600
         AIF   ('&XIMPORTANCE'(&ZAWRK,1) NE ')').ZO7G                   00144700
&ZN      SETA  2                                                        00144800
.ZO7H    ANOP                                                           00144900
         AIF   (&ZN GE &ZAWRK).ZO7G                                     00145000
         AIF   ('&XIMPORTANCE'(&ZN,1) NE '(').ZO7I                      00145100
&ZC      SETC  '&XIMPORTANCE'(1,&ZN).'2'.','                            00145200
&ZC      SETC  '&ZC'.'&XIMPORTANCE'(&ZN+1,&ZAWRK-&ZN).',12(1)'          00145300
         AGO   .ZO7J                                                    00145400
.ZO7I    ANOP                                                           00145500
&ZN      SETA  &ZN+1                                                    00145600
         AGO   .ZO7H                                                    00145700
.ZO7G    ANOP                                                           00145800
&ZC      SETC  '&XIMPORTANCE.(2),12(1)'                                 00145900
.ZO7J    ANOP                                                           00146000
&ZOPN                 SETA  &ZOPN+1                                     00146100
&ZOPL(&ZOPN)          SETC  ' '                                         00146200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00146300
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00146400
&ZOPD(&ZOPN)          SETC  '++ XIMPORTANCE FL2'                        00146500
.ZO7C                 ANOP  ,                                           00146600
.*------------------------------------------------------------------    00146700
.***AO.LVER02                                                           00146800
.ZO7Z                 ANOP  ,                                           00146900
.*------------------------------------------------------------------    00147000
.***AO.L02 XTOKEN CL8                                                   00147100
         AIF   ('&ZXTOKEN' EQ 'OUTPUT').ZO9A  OUTPUT                    00147200
         AIF   ('&ZXTOKEN' NE 'INOUT').ZO9C  INOUT                      00147300
.ZO9A    AIF   ('&XTOKEN'(1,1) NE '(').ZO9B  ADDR IN GPR                00147400
&ZCGPR   SETC  '&XTOKEN'(2,K'&XTOKEN-2)                                 00147500
&ZOPN                 SETA  &ZOPN+1                                     00147600
&ZOPL(&ZOPN)          SETC  ' '                                         00147700
&ZOPO(&ZOPN)          SETC  'MVC'                                       00147800
&ZOPV(&ZOPN)          SETC  '0(8,&ZCGPR),4(1)'                          00147900
&ZOPD(&ZOPN)          SETC  '++ XTOKEN CL8'                             00148000
                      AGO   .ZO9C                                       00148100
.*                                                                      00148200
.ZO9B                 ANOP  ,                                           00148300
&ZAWRK   SETA  K'&XTOKEN                                                00148400
         AIF   ('&XTOKEN'(&ZAWRK,1) NE ')').ZO9G                        00148500
&ZN      SETA  2                                                        00148600
.ZO9H    ANOP                                                           00148700
         AIF   (&ZN GE &ZAWRK).ZO9G                                     00148800
         AIF   ('&XTOKEN'(&ZN,1) NE '(').ZO9I                           00148900
&ZC      SETC  '&XTOKEN'(1,&ZN).'8'.','                                 00149000
&ZC      SETC  '&ZC'.'&XTOKEN'(&ZN+1,&ZAWRK-&ZN).',4(1)'                00149100
         AGO   .ZO9J                                                    00149200
.ZO9I    ANOP                                                           00149300
&ZN      SETA  &ZN+1                                                    00149400
         AGO   .ZO9H                                                    00149500
.ZO9G    ANOP                                                           00149600
&ZC      SETC  '&XTOKEN.(8),4(1)'                                       00149700
.ZO9J    ANOP                                                           00149800
&ZOPN                 SETA  &ZOPN+1                                     00149900
&ZOPL(&ZOPN)          SETC  ' '                                         00150000
&ZOPO(&ZOPN)          SETC  'MVC'                                       00150100
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00150200
&ZOPD(&ZOPN)          SETC  '++ XTOKEN CL8'                             00150300
.ZO9C                 ANOP  ,                                           00150400
.*******************************************************************    00150500
.***AO.X02  RETURN CODE PROCESSING                                      00150600
.*******************************************************************    00150700
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00150800
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00150900
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00151000
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00151100
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00151200
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00151300
&ZOPN                 SETA  &ZOPN+1                                     00151400
&ZOPL(&ZOPN)          SETC  ' '                                         00151500
&ZOPO(&ZOPN)          SETC  'ST'                                        00151600
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00151700
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00151800
                      AGO   .ZMRETX                                     00151900
.*                                                                      00152000
.ZMRET2               ANOP  ,                                           00152100
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00152200
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00152300
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00152400
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00152500
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00152600
&ZOPN                 SETA  &ZOPN+1                                     00152700
&ZOPL(&ZOPN)          SETC  ' '                                         00152800
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00152900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00153000
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00153100
.ZMRETX               ANOP  ,                                           00153200
.*******************************************************************    00153300
.***AO.X03  REASON CODE PROCESSING                                      00153400
.*******************************************************************    00153500
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00153600
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00153700
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00153800
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00153900
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00154000
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00154100
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00154200
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00154300
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00154400
&ZOPN                 SETA  &ZOPN+1                                     00154500
&ZOPL(&ZOPN)          SETC  ' '                                         00154600
&ZOPO(&ZOPN)          SETC  'ST'                                        00154700
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00154800
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00154900
                      AGO   .ZMRSNX                                     00155000
.*                                                                      00155100
.ZMRSN2               ANOP  ,                                           00155200
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00155300
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00155400
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00155500
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00155600
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00155700
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00155800
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00155900
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00156000
&ZOPN                 SETA  &ZOPN+1                                     00156100
&ZOPL(&ZOPN)          SETC  ' '                                         00156200
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00156300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00156400
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00156500
.ZMRSNX               ANOP  ,                                           00156600
.*******************************************************************    00156700
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00156800
.*******************************************************************    00156900
.ZMFLX                ANOP  ,              MF=L PROCESSING              00157000
.*******************************************************************    00157100
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00157200
.*******************************************************************    00157300
                      ACTR  10000                                       00157400
.*                                                                      00157500
                      LCLA  &ZLC           COLUMN POSITION              00157600
                      LCLA  &ZOPX          LIST TABLE INDEX             00157700
                      LCLC  &ZLL           LABEL                        00157800
                      LCLC  &ZLOP          OPERATION                    00157900
                      LCLC  &ZLV           VALUE                        00158000
                      LCLC  &ZLD           DESCRIPTION                  00158100
.*                                                                      00158200
&ZOPX                 SETA  1                                           00158300
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00158400
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00158500
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00158600
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00158700
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00158800
                      AIF   (K'&ZLD LE 0).ZL5                           00158900
&ZLC                  SETA  35             COMMENT COLUMN               00159000
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00159100
&ZLC                  SETA  33             COMMMENT COLUMN              00159200
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00159300
&ZLV                  SETC  '&ZLV'.' '                                  00159400
                      AGO   .ZL3                                        00159500
.*                                                                      00159600
.ZL4                  ANOP  ,                                           00159700
&ZLV                  SETC  '&ZLV'.' '                                  00159800
.ZL5                  ANOP  ,                                           00159900
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00160000
.*                                                                      00160100
&ZLL     &ZLOP &ZLV                                                     00160200
.*                                                                      00160300
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00160400
                      AGO   .ZL2           CONTINUE LOOPING             00160500
.*                                                                      00160600
.ZLX                  ANOP  ,                                           00160700
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00160800
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00160900
     L     14,16(0,0)              GET CVT ADDRESS                      00161000
     L     14,X'8C'(14,0)          GET ECVT ADDRESS                     00161100
     L     14,X'C4'(14,0)          GET WMVT ADDRESS                     00161200
     L     15,X'124'(14,0)         GET ESQRY RTN ENTRY POINT ADDR       00161300
     BASR  14,15                   CALL ESQRY ROUTINE                   00161400
END&SYSNDX DS    0H                END LABEL                            00161500
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00161600
.ZLINKX               ANOP  ,                                           00161700
.*******************************************************************    00161800
.***AP.X01  FORMAT GENERATED CODE                                       00161900
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00162000
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00162100
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00162200
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00162300
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00162400
                      AIF   (K'&ZLD LE 0).ZL51                          00162500
&ZLC                  SETA  35             COMMENT COLUMN               00162600
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00162700
&ZLC                  SETA  33             COMMENT COLUMN               00162800
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00162900
&ZLV                  SETC  '&ZLV'.' '                                  00163000
                      AGO   .ZL31                                       00163100
.*                                                                      00163200
.ZL41                 ANOP  ,                                           00163300
&ZLV                  SETC  '&ZLV'.' '                                  00163400
.ZL51                 ANOP  ,                                           00163500
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00163600
.*                                                                      00163700
&ZLL     &ZLOP &ZLV                                                     00163800
.*                                                                      00163900
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00164000
                      AGO   .ZL21          CONTINUE LOOPING             00164100
.*                                                                      00164200
.ZLX1                 ANOP  ,                                           00164300
.*******************************************************************    00164400
.***AP.X02  END OF IWMESQRY MACRO                                       00164500
&ZIWMESQRY            SETC  'YES'          SET IWMESQRY USED            00164600
         POP   PRINT                                                    00164700
*                                            IWMESQRY-1                 00164800
         SPACE 1                                                        00164900
.ZLX2                 ANOP  ,                                           00165000
         MEND                                                           00165100
**********************************************************************/ 00165200
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00165300
*%IWMESQRY: MACRO KEYS(ETOKEN,TOKEN,IMPORTANCE,RETCODE,RSNCODE,         00165400
*                 PLISTVER,MF);                                         00165500
*  ANS('?'!!MACLABEL!!' '!!'IWMESQRP '!!MACLIST!!                       00165600
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              00165700
*%END IWMESQRY;                                                         00165800
