*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IWMQINS                               -11/09/04-<3> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  WLM Queue Manager Insert Service              * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5694-A01 (C) COPYRIGHT IBM CORP. 2004                           * 00001200
*                                                                     * 00001300
* STATUS= HBB7709                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      The IWMQINS service inserts a work request onto workload       * 00002100
*      management queues so its execution in a server address space   * 00002200
*      can be managed by WLM.                                         * 00002300
*                                                                     * 00002400
*      Before using this service, the caller must connect to WLM      * 00002500
*      using the IWMCONN service, specifying Queue_Manager=Yes, or    * 00002600
*      Server_Manager=Yes with Server_Type=Queue.                     * 00002700
*                                                                     * 00002800
*      The IWMQINS service requires the use of enclaves to manage the * 00002900
*      performance goals and reporting of work.  It requires the use  * 00003000
*      of application environments to associate types of work         * 00003100
*      requests with servers capable of processing them.  Refer to    * 00003200
*      OS/390 MVS Workload Management Services for more information.  * 00003300
*                                                                     * 00003400
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00003500
*                                                                     * 00003600
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00003700
*                                                                     * 00003800
*01* ENVIRONMENT:                                                     * 00003900
*                                                                     * 00004000
*                                                                     * 00004100
*      Minimum authorization: Supervisor state or program key mask    * 00004200
*                        (PKM) allowing keys 0-7.                     * 00004300
*                                                                     * 00004400
*      Dispatchable unit mode: Task or SRB mode.                      * 00004500
*                                                                     * 00004600
*      Cross Memory Mode: Any HASN, any SASN.  PASN must be the       * 00004700
*                        address space which connected to WLM (i.e.   * 00004800
*                        the address space that was home when IWMCONN * 00004900
*                        was issued for Queue_Manager=Yes, or         * 00005000
*                        Server_Manager=Yes with Server_Type=Queue).  * 00005100
*                                                                     * 00005200
*      AMODE:            31-bit.                                      * 00005300
*                                                                     * 00005400
*      ASC mode:         Primary.                                     * 00005500
*                                                                     * 00005600
*      Interrupt status: Enabled for I/O and external interrupts.     * 00005700
*                                                                     * 00005800
*      Locks:            No locks held.                               * 00005900
*                                                                     * 00006000
*      Control parameters: Control parameters must be in the primary  * 00006100
*                        address space.                               * 00006200
*                                                                     * 00006300
*                                                                     * 00006400
*                                                                     * 00006500
*01* PROGRAMMING REQUIREMENTS:                                        * 00006600
*                                                                     * 00006700
*                                                                     * 00006800
*    1.  The macro CVT must be included to use this macro.            * 00006900
*                                                                     * 00007000
*    2.  The macro IWMYCON must be included to use this macro.        * 00007100
*                                                                     * 00007200
*    3.  The macro IWMPB must be in the library concatenation, since  * 00007300
*        it is included by IWMYCON.                                   * 00007400
*                                                                     * 00007500
*    4.  Note that the high order halfword of register 0, and the     * 00007600
*        reason code variable when specified, may be non-zero and     * 00007700
*        represents diagnostic data which is NOT part of the external * 00007800
*        interface.  The high order halfword should thus be excluded  * 00007900
*        from comparison with the reason code values described above. * 00008000
*        The constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may  * 00008100
*        be used for this purpose.                                    * 00008200
*                                                                     * 00008300
*    5.  All character data, unless otherwise specified, is assumed   * 00008400
*        to be left justified and padded with blanks on the right, as * 00008500
*        needed, to occupy the specified number of bytes.             * 00008600
*                                                                     * 00008700
*                                                                     * 00008800
*                                                                     * 00008900
*01* RESTRICTIONS:                                                    * 00009000
*                                                                     * 00009100
*                                                                     * 00009200
*    1.  This macro may not be used prior to the completion of WLM    * 00009300
*        address space initialization.                                * 00009400
*                                                                     * 00009500
*    2.  This macro may only be used on MVS/ESA HBB6603 or higher.    * 00009600
*                                                                     * 00009700
*                                                                     * 00009800
*                                                                     * 00009900
*01* INPUT REGISTER INFORMATION:                                      * 00010000
*                                                                     * 00010100
*    Before issuing the IWMQINS macro, the caller does not have to    * 00010200
*    place any information into any register unless using it in       * 00010300
*    register notation for a particular parameter, or using it as a   * 00010400
*    base register.                                                   * 00010500
*                                                                     * 00010600
*01* OUTPUT REGISTER INFORMATION:                                     * 00010700
*                                                                     * 00010800
*    When control returns to the caller, the GPRs contain:            * 00010900
*                                                                     * 00011000
*                                                                     * 00011100
*    REGISTER  CONTENTS                                               * 00011200
*                                                                     * 00011300
*    0         Reason code if GR15 return code is non-zero            * 00011400
*                                                                     * 00011500
*    1         Used as work registers by the system                   * 00011600
*                                                                     * 00011700
*    2-13      Unchanged                                              * 00011800
*                                                                     * 00011900
*    14        Used as work registers by the system                   * 00012000
*                                                                     * 00012100
*    15        Return code                                            * 00012200
*                                                                     * 00012300
*                                                                     * 00012400
*                                                                     * 00012500
*    When control returns to the caller, the ARs contain:             * 00012600
*                                                                     * 00012700
*                                                                     * 00012800
*    REGISTER  CONTENTS                                               * 00012900
*                                                                     * 00013000
*    0-1       Used as work registers by the system                   * 00013100
*                                                                     * 00013200
*    2-13      Unchanged                                              * 00013300
*                                                                     * 00013400
*    14-15     Used as work registers by the system                   * 00013500
*                                                                     * 00013600
*                                                                     * 00013700
*                                                                     * 00013800
*    Some callers depend on register contents remaining the same      * 00013900
*    before and after issuing a service.  If the system changes the   * 00014000
*    contents of registers on which the caller depends, the caller    * 00014100
*    must save them before issuing the service, and restore them      * 00014200
*    after the system returns control.                                * 00014300
*                                                                     * 00014400
*01* PERFORMANCE IMPLICATIONS:                                        * 00014500
*                                                                     * 00014600
*    None                                                             * 00014700
*                                                                     * 00014800
*01* SYNTAX:                                                          * 00014900
*                                                                     * 00015000
*Ýxlabel¨  IWMQINS     CONNTKN=xconntkn                               * 00015100
*                     ,ETOKEN=xetoken                                 * 00015200
*                     ,USERDATA=xuserdata                             * 00015300
*                     ,APPLENV=xapplenv                               * 00015400
*                       ÐÝ,DYNAMIC=NO¨                                * 00015500
*                       ¿Ý,DYNAMIC=YES¨                               * 00015600
*                   ÐÝ,DEPENDENT=NO¨                                  * 00015700
*                   ¿Ý,DEPENDENT=YES¨                                 * 00015800
*                   ÐÝ,SECUSER=NO¨                                    * 00015900
*                   ¿Ý,SECUSER=YES                                    * 00016000
*                         ,USERID=xuserid¨                            * 00016100
*                    Ý,WLMWUTKN=xwlmwutkn¨                            * 00016200
*                    Ý,SERVER_TOKEN=»xserver_token!0º¨                * 00016300
*                    Ý,REGION_TOKEN=»xregion_token!0º¨                * 00016400
*                    Ý,RETCODE=xretcode¨                              * 00016500
*                    Ý,RSNCODE=xrsncode¨                              * 00016600
*                    Ý,PLISTVER=»xplistver!IMPLIED_VERSIONº¨          * 00016700
*                   ÐÝ,MF=S¨                                          * 00016800
*                   ÔÝ,MF=(L,xmfctrl»,xmfattr!0Dº)¨                   * 00016900
*                   ÔÝ,MF=(M,xmfctrl»,COMPLETE!NOCHECKº)¨             * 00017000
*                   ¿Ý,MF=(E,xmfctrl»,COMPLETE!NOCHECKº)¨             * 00017100
*                                                                     * 00017200
*                                                                     * 00017300
*      Where:                                                         * 00017400
*                                                                     * 00017500
*                                                                     * 00017600
*      Ýxlabel¨                                                       * 00017700
*          is an optional symbol, starting in column 1, that is the   * 00017800
*          name on the IWMQINS macro invocation.  The name must       * 00017900
*          conform to the rules for an ordinary assembler language    * 00018000
*          symbol.                                                    * 00018100
*          DEFAULT: No name.                                          * 00018200
*                                                                     * 00018300
*                                                                     * 00018400
*                                                                     * 00018500
*                                                                     * 00018600
*      CONNTKN=xconntkn                                               * 00018700
*          is the name (RS-type), or address in register (2)-(12), of * 00018800
*          a required 32 bit input which contains the connect token   * 00018900
*          returned by the IWMCONN macro.                             * 00019000
*                                                                     * 00019100
*                                                                     * 00019200
*                                                                     * 00019300
*                                                                     * 00019400
*      ETOKEN=xetoken                                                 * 00019500
*          is the name (RS-type), or address in register (2)-(12), of * 00019600
*          a required 8 character input which contains the enclave    * 00019700
*          token associated with the work request.  An enclave token  * 00019800
*          is obtained using either the IWMECREA or IWMESQRY macro.   * 00019900
*                                                                     * 00020000
*                                                                     * 00020100
*                                                                     * 00020200
*                                                                     * 00020300
*      USERDATA=xuserdata                                             * 00020400
*          is the name (RS-type), or address in register (2)-(12), of * 00020500
*          a required 16 character input which contains data to pass  * 00020600
*          to the server address space.  This user data is returned   * 00020700
*          to the caller of the IWMSSEL or IWMSSEM macro.  The format * 00020800
*          is undefined to MVS.                                       * 00020900
*                                                                     * 00021000
*                                                                     * 00021100
*                                                                     * 00021200
*                                                                     * 00021300
*      APPLENV=xapplenv                                               * 00021400
*          is the name (RS-type), or address in register (2)-(12), of * 00021500
*          a required 32 character input which contains an            * 00021600
*          application environment name.  An application environment  * 00021700
*          is defined in the workload manager service definition and  * 00021800
*          instructs WLM how to create a server address space.        * 00021900
*                                                                     * 00022000
*                                                                     * 00022100
*          ÝDYNAMIC=»NO!YESº¨                                         * 00022200
*              is an optional keyword input indicating whether the    * 00022300
*              insert is for a dynamic or static application          * 00022400
*              environment.                                           * 00022500
*              DEFAULT: NO                                            * 00022600
*                                                                     * 00022700
*                                                                     * 00022800
*              ÝDYNAMIC=NO¨                                           * 00022900
*                  The server manager connects to a static            * 00023000
*                  application environment according to the WLM       * 00023100
*                  service defintion (default).                       * 00023200
*                                                                     * 00023300
*              ÝDYNAMIC=YES¨                                          * 00023400
*                  The server manager connects to a dynamic           * 00023500
*                  application environment according to a prior       * 00023600
*                  definition via IWMAEDEF service.                   * 00023700
*                                                                     * 00023800
*                                                                     * 00023900
*                                                                     * 00024000
*                                                                     * 00024100
*                                                                     * 00024200
*                                                                     * 00024300
*                                                                     * 00024400
*                                                                     * 00024500
*      ÝDEPENDENT=»NO!YESº¨                                           * 00024600
*          is an optional keyword input indicating whether the insert * 00024700
*          is for a dependent or a standard request.                  * 00024800
*          DEFAULT: NO                                                * 00024900
*                                                                     * 00025000
*                                                                     * 00025100
*          ÝDEPENDENT=NO¨                                             * 00025200
*              The request is for an independent (standard) work      * 00025300
*              request (default).                                     * 00025400
*                                                                     * 00025500
*          ÝDEPENDENT=YES¨                                            * 00025600
*              The insert is for a dependent work request which is    * 00025700
*              required by already active server tasks to complete    * 00025800
*              their processing. The request is prioritized above     * 00025900
*              requests which are not marked as dependent.            * 00026000
*                                                                     * 00026100
*                                                                     * 00026200
*                                                                     * 00026300
*                                                                     * 00026400
*                                                                     * 00026500
*                                                                     * 00026600
*      ÝSECUSER=»NO!YESº¨                                             * 00026700
*          is an optional keyword input which specifies whether the   * 00026800
*          security environment of the user should be associated with * 00026900
*          the request at run time.                                   * 00027000
*          DEFAULT: NO                                                * 00027100
*                                                                     * 00027200
*                                                                     * 00027300
*          ÝSECUSER=NO¨                                               * 00027400
*              No security environment to be established.             * 00027500
*                                                                     * 00027600
*          ÝSECUSER=YES                                               * 00027700
*              Use the specified userid to establish a security       * 00027800
*              environment.                                           * 00027900
*                                                                     * 00028000
*                                                                     * 00028100
*              USERID=xuserid¨                                        * 00028200
*                  is the name (RS-type), or address in register      * 00028300
*                  (2)-(12), of a required 8 character input which    * 00028400
*                  contains the requester's userid.                   * 00028500
*                                                                     * 00028600
*                                                                     * 00028700
*                                                                     * 00028800
*                                                                     * 00028900
*                                                                     * 00029000
*                                                                     * 00029100
*                                                                     * 00029200
*                                                                     * 00029300
*      ÝWLMWUTKN=xwlmwutkn¨                                           * 00029400
*          is the name (RS-type), or address in register (2)-(12), of * 00029500
*          an optional 16 character output which will receive the     * 00029600
*          work unit token.  This token can be passed to the IWMQDEL  * 00029700
*          service to delete the work request.                        * 00029800
*                                                                     * 00029900
*                                                                     * 00030000
*                                                                     * 00030100
*                                                                     * 00030200
*      ÝSERVER_TOKEN=»xserver_token!0º¨                               * 00030300
*          is the name (RS-type), or address in register (2)-(12), of * 00030400
*          an optional 32 character input which contains a server     * 00030500
*          token returned by the IWMSSEL macro.  Use SERVER_TOKEN to  * 00030600
*          queue a secondary work request to the same server task     * 00030700
*          that selected a prior work request.  A secondary work      * 00030800
*          request is considered to be an extension of the prior work * 00030900
*          request.                                                   * 00031000
*                                                                     * 00031100
*          The following qualifications apply when specifying a       * 00031200
*          server token:                                              * 00031300
*                                                                     * 00031400
*                                                                     * 00031500
*          o   The server task is responsible for passing the server  * 00031600
*              token to the queueing manager so that it can insert a  * 00031700
*              secondary work request.                                * 00031800
*                                                                     * 00031900
*          o   Coordination is required between the queueing manager  * 00032000
*              and the server task so that the server task knows when * 00032100
*              to expect secondary work requests.  The server task    * 00032200
*              uses the IWMSSEM macro to select secondary work        * 00032300
*              requests.  It must select all secondary work requests  * 00032400
*              before it can resume normal selection using IWMSSEL.   * 00032500
*                                                                     * 00032600
*          o   The same application environment and enclave token     * 00032700
*              passed for the original work request must be passed    * 00032800
*              for each secondary work request.                       * 00032900
*                                                                     * 00033000
*          o   A secondary work request cannot be deleted using the   * 00033100
*              IWMQDEL macro.  IWMQINS does not return a work unit    * 00033200
*              token (WLMWUTKN).                                      * 00033300
*                                                                     * 00033400
*          o   The SECUSER keyword is ignored.                        * 00033500
*                                                                     * 00033600
*                                                                     * 00033700
*                                                                     * 00033800
*          Coding SERVER_TOKEN=0 is equivalent to omitting the        * 00033900
*          SERVER_TOKEN keyword.                                      * 00034000
*          DEFAULT: 0                                                 * 00034100
*                                                                     * 00034200
*                                                                     * 00034300
*                                                                     * 00034400
*                                                                     * 00034500
*      ÝREGION_TOKEN=»xregion_token!0º¨                               * 00034600
*          is the name (RS-type), or address in register (2)-(12), of * 00034700
*          an optional 16 character input which contains a region     * 00034800
*          token returned by the IWMSSEL macro.  Use REGION_TOKEN to  * 00034900
*          queue a work request to a specific server region.  Such a  * 00035000
*          work request is considered to be part of a set of work     * 00035100
*          requests which all need access to the same status          * 00035200
*          information which is kept in the virtual storage of the    * 00035300
*          server region.                                             * 00035400
*                                                                     * 00035500
*          The following qualifications apply when specifying a       * 00035600
*          region token:                                              * 00035700
*                                                                     * 00035800
*                                                                     * 00035900
*          o   The application is responsible for passing the region  * 00036000
*              token to the queueing manager so that it can insert    * 00036100
*              the work request to the region.                        * 00036200
*                                                                     * 00036300
*          o   WLM has to know that temporal affinities for work      * 00036400
*              requests to a specific server region exist in order    * 00036500
*              not to stop the server region.  The application must   * 00036600
*              use the IWMTAFF macro to tell WLM when a temporal      * 00036700
*              affinity starts and when it ends.                      * 00036800
*                                                                     * 00036900
*                                                                     * 00037000
*                                                                     * 00037100
*          Coding REGION_TOKEN=0 is equivalent to omitting the        * 00037200
*          REGION_TOKEN keyword.                                      * 00037300
*          DEFAULT: 0                                                 * 00037400
*                                                                     * 00037500
*                                                                     * 00037600
*                                                                     * 00037700
*                                                                     * 00037800
*      ÝRETCODE=xretcode¨                                             * 00037900
*          is the name (RS-type) of an optional fullword output       * 00038000
*          variable, or register (2)-(12), into which the return code * 00038100
*          is to be copied from GPR 15.                               * 00038200
*                                                                     * 00038300
*                                                                     * 00038400
*                                                                     * 00038500
*                                                                     * 00038600
*      ÝRSNCODE=xrsncode¨                                             * 00038700
*          is the name (RS-type) of an optional fullword output       * 00038800
*          variable, or register (2)-(12), into which the reason code * 00038900
*          is to be copied from GPR 0.                                * 00039000
*                                                                     * 00039100
*                                                                     * 00039200
*                                                                     * 00039300
*                                                                     * 00039400
*      ÝPLISTVER=»xplistver!IMPLIED_VERSIONº¨                         * 00039500
*          is an optional byte input decimal value in the "0-3" range * 00039600
*          that specifies the macro version.  PLISTVER is the only    * 00039700
*          key allowed on the list form of MF and determines which    * 00039800
*          parameter list is generated.  The macro keys associated    * 00039900
*          with each supported version of the macro are listed in     * 00040000
*          MACRO USAGE NOTE 3.  Note that MAX may be specified        * 00040100
*          instead of a number, and the parameter list will be of the * 00040200
*          largest size currently supported. This size may grow from  * 00040300
*          release to release (thus possibly affecting the amount of  * 00040400
*          storage needed by your program).  If your program can      * 00040500
*          tolerate this, IBM recommends that you always specify MAX  * 00040600
*          when creating the list form parameter list as that will    * 00040700
*          ensure that the list form parameter list is always long    * 00040800
*          enough to hold whatever parameters might be specified on   * 00040900
*          the execute form.                                          * 00041000
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00041100
*          default is the lowest version which allows all of the      * 00041200
*          parameters specified on the invocation to be processed.    * 00041300
*                                                                     * 00041400
*                                                                     * 00041500
*                                                                     * 00041600
*                                                                     * 00041700
*      ÝMF=»S!L!M!Eº¨                                                 * 00041800
*          is an optional keyword input which specifies the macro     * 00041900
*          form.                                                      * 00042000
*          DEFAULT: S                                                 * 00042100
*                                                                     * 00042200
*                                                                     * 00042300
*          ÝMF=S¨                                                     * 00042400
*              specifies the standard form of the macro.  The "S"     * 00042500
*              form generates code to put the parameters into an      * 00042600
*              in-line parameter list and invoke the desired service. * 00042700
*              Full checking for required macro keys is done along    * 00042800
*              with supplying defaults for omitted optional           * 00042900
*              parameters.                                            * 00043000
*                                                                     * 00043100
*          ÝMF=(L,xmfctrl»,xmfattr!0Dº)¨                              * 00043200
*              specifies the list form of the macro.  The "L" form    * 00043300
*              defines an area to be used for the parameter list.     * 00043400
*              Only the PLISTVER key may be specified on the          * 00043500
*              invocation.  All other macro parameters are flagged as * 00043600
*              errors.  If PLISTVER is not specified, the original    * 00043700
*              parameter list definition is used.                     * 00043800
*                                                                     * 00043900
*            ,xmfctrl                                                 * 00044000
*              is a required input.  It is the name of a storage area * 00044100
*              for the parameter list.                                * 00044200
*                                                                     * 00044300
*            »,xmfattr!0Dº                                            * 00044400
*              is an optional 60 character input string that varies   * 00044500
*              from 1 to 60 characters. Use it to force boundary      * 00044600
*              alignment of the parameter list. Use only 0F or 0D.    * 00044700
*              DEFAULT: 0D which forces the parameter list to a       * 00044800
*              doubleword boundary.                                   * 00044900
*                                                                     * 00045000
*          ÝMF(M,xmfctrl»,COMPLETE!NOCHECKº)¨                         * 00045100
*              specifies the modify form of the macro.  The "M" form  * 00045200
*              generates code to put the parameters into the          * 00045300
*              parameter list specified by xmfctrl.                   * 00045400
*                                                                     * 00045500
*            ,xmfctrl                                                 * 00045600
*              is a required input.  It is the name (RS-type), or     * 00045700
*              address in register (1)-(12), of a storage area for    * 00045800
*              the parameter list.                                    * 00045900
*                                                                     * 00046000
*            »,COMPLETE!NOCHECKº¨                                     * 00046100
*              is an optional keyword input which specifies the       * 00046200
*              degree of macro parameter syntax checking.             * 00046300
*              DEFAULT: COMPLETE                                      * 00046400
*                                                                     * 00046500
*                                                                     * 00046600
*              COMPLETE                                               * 00046700
*                  Checking for required macro keys is done and       * 00046800
*                  defaults are supplied for omitted optional         * 00046900
*                  parameters.  (See Macro Usage Note 2).             * 00047000
*                                                                     * 00047100
*              NOCHECK                                                * 00047200
*                  Checking for required macro keys is not done nor   * 00047300
*                  are defaults supplied for omitted optional         * 00047400
*                  parameters.                                        * 00047500
*                                                                     * 00047600
*                                                                     * 00047700
*                                                                     * 00047800
*          ÝMF=(E,xmfctrl»,COMPLETE!NOCHECKº)¨                        * 00047900
*              specifies the execute form of the macro.  The "E" form * 00048000
*              generates code to put the parameters into the          * 00048100
*              parameter list specified by xmfctrl and invoke the     * 00048200
*              desired service.                                       * 00048300
*                                                                     * 00048400
*            ,xmfctrl                                                 * 00048500
*              is a required input.  It is the name (RS-type), or     * 00048600
*              address in register (1)-(12), of a storage area for    * 00048700
*              the parameter list.                                    * 00048800
*                                                                     * 00048900
*            »,COMPLETE!NOCHECKº                                      * 00049000
*              is an optional keyword input which specifies the       * 00049100
*              degree of macro parameter syntax checking.             * 00049200
*              DEFAULT: COMPLETE                                      * 00049300
*                                                                     * 00049400
*                                                                     * 00049500
*              COMPLETE                                               * 00049600
*                  Checking for required macro keys is done and       * 00049700
*                  defaults are supplied for omitted optional         * 00049800
*                  parameters.  (See Macro Usage Note 2).             * 00049900
*                                                                     * 00050000
*              NOCHECK                                                * 00050100
*                  Checking for required macro keys is not done nor   * 00050200
*                  are defaults supplied for omitted optional         * 00050300
*                  parameters.                                        * 00050400
*                                                                     * 00050500
*                                                                     * 00050600
*                                                                     * 00050700
*                                                                     * 00050800
*                                                                     * 00050900
*                                                                     * 00051000
*                                                                     * 00051100
*01* ABEND CODES:  None.                                              * 00051200
*                                                                     * 00051300
*01* RETURN CODES:                                                    * 00051400
*                                                                     * 00051500
*                                                                     * 00051600
*            0    Name: IwmRetCodeOk                                  * 00051700
*                                                                     * 00051800
*                 Meaning: Successful completion.                     * 00051900
*                                                                     * 00052000
*                 Action: None required.                              * 00052100
*                                                                     * 00052200
*                                                                     * 00052300
*            4    Name: IwmRetCodeWarning                             * 00052400
*                                                                     * 00052500
*                 Meaning:  Successful completion, unusual conditions * 00052600
*                 noted.                                              * 00052700
*                                                                     * 00052800
*                                                                     * 00052900
*                 HEX REASON  MEANING/ACTION                          * 00053000
*                 CODE                                                * 00053100
*                                                                     * 00053200
*                 xxxx042E    Name: IwmRsnCodeServerNotFound          * 00053300
*                                                                     * 00053400
*                             Meaning: The server token does not      * 00053500
*                             identify an existing server task.  The  * 00053600
*                             server task may have terminated since   * 00053700
*                             the token was obtained.                 * 00053800
*                                                                     * 00053900
*                             Action: If the server task has not      * 00054000
*                             terminated, check that the correct      * 00054100
*                             token is specified.                     * 00054200
*                                                                     * 00054300
*                 xxxx043A    Name: IwmRsnCodeRegionNotFound          * 00054400
*                                                                     * 00054500
*                             Meaning: The region token does not      * 00054600
*                             identify a valid server region.         * 00054700
*                                                                     * 00054800
*                             Action: Please specify the correct      * 00054900
*                             region token.                           * 00055000
*                                                                     * 00055100
*                                                                     * 00055200
*                                                                     * 00055300
*                                                                     * 00055400
*            8    Name: IwmRetCodeInvocError                          * 00055500
*                                                                     * 00055600
*                 Meaning: Invalid invocation environment or          * 00055700
*                 parameters.                                         * 00055800
*                                                                     * 00055900
*                                                                     * 00056000
*                 HEX REASON  MEANING/ACTION                          * 00056100
*                 CODE                                                * 00056200
*                                                                     * 00056300
*                 xxxx0803    Name: IwmRsnCodeDisabled                * 00056400
*                                                                     * 00056500
*                             Meaning: Caller is disabled.            * 00056600
*                                                                     * 00056700
*                             Action: Avoid requesting this function  * 00056800
*                             while disabled.                         * 00056900
*                                                                     * 00057000
*                 xxxx0804    Name: IwmRsnCodeLocked                  * 00057100
*                                                                     * 00057200
*                             Meaning: Caller is locked.              * 00057300
*                                                                     * 00057400
*                             Action: Avoid requesting this function  * 00057500
*                             while locked.                           * 00057600
*                                                                     * 00057700
*                 xxxx080B    Name: IwmRsnCodeBadPl                   * 00057800
*                                                                     * 00057900
*                             Meaning: Error accessing parameter      * 00058000
*                             list.                                   * 00058100
*                                                                     * 00058200
*                             Action: Check for possible storage      * 00058300
*                             overlay.  Also check if you call this   * 00058400
*                             macro in 64 bit adressing mode (see     * 00058500
*                             explanations for xxxx089E).             * 00058600
*                                                                     * 00058700
*                 xxxx0821    Name: IwmRsnCodeBadConn                 * 00058800
*                                                                     * 00058900
*                             Meaning: Input connect token does not   * 00059000
*                             pass validity checking.                 * 00059100
*                                                                     * 00059200
*                             Action: Make sure to use the connect    * 00059300
*                             token returned by the IWMCONN service   * 00059400
*                             requesting Queue_Manager=Yes, or        * 00059500
*                             Server_Manager=Yes with                 * 00059600
*                             Server_Type=Queue.                      * 00059700
*                                                                     * 00059800
*                 xxxx0823    Name: IwmRsnCodeDatoff                  * 00059900
*                                                                     * 00060000
*                             Meaning: Caller invoked service while   * 00060100
*                             DATOFF                                  * 00060200
*                                                                     * 00060300
*                             Action: Avoid requesting this function  * 00060400
*                             in this environment.                    * 00060500
*                                                                     * 00060600
*                 xxxx0824    Name: IwmRsnCodeAmode24                 * 00060700
*                                                                     * 00060800
*                             Meaning: Caller invoked service but was * 00060900
*                             in 24 bit addressing mode.              * 00061000
*                                                                     * 00061100
*                             Action: Request this function only when * 00061200
*                             you are in 31 bit addressing mode.      * 00061300
*                                                                     * 00061400
*                 xxxx0825    Name: IwmRsnCodeAscModeNotPrimary       * 00061500
*                                                                     * 00061600
*                             Meaning: Caller invoked service but was * 00061700
*                             not in primary ASC mode.                * 00061800
*                                                                     * 00061900
*                             Action: Avoid requesting this function  * 00062000
*                             in this environment.                    * 00062100
*                                                                     * 00062200
*                 xxxx0827    Name: IwmRsnCodeRsvdNot0                * 00062300
*                                                                     * 00062400
*                             Meaning: Reserved field in parameter    * 00062500
*                             list was non-zero.                      * 00062600
*                                                                     * 00062700
*                             Action:  Check for use of keywords that * 00062800
*                             are not supported by the MVS release on * 00062900
*                             which the program is running.           * 00063000
*                                                                     * 00063100
*                 xxxx0828    Name: IwmRsnCodeBadVersion              * 00063200
*                                                                     * 00063300
*                             Meaning: Version number in parameter    * 00063400
*                             list is not valid.                      * 00063500
*                                                                     * 00063600
*                             Action: Check for possible storage      * 00063700
*                             overlay of the parameter list.          * 00063800
*                                                                     * 00063900
*                 xxxx083A    Name: IwmRsnCodeBadEnclave              * 00064000
*                                                                     * 00064100
*                             Meaning: Enclave token in parameter     * 00064200
*                             list is not valid.                      * 00064300
*                                                                     * 00064400
*                             Action: Check the specification of the  * 00064500
*                             ETOKEN parameter.                       * 00064600
*                                                                     * 00064700
*                 xxxx083F    Name: IwmRsnCodePrimaryNotOwnConn       * 00064800
*                                                                     * 00064900
*                             Meaning: Primary address space does not * 00065000
*                             own the passed connect token.           * 00065100
*                                                                     * 00065200
*                             Action: Ensure that the primary address * 00065300
*                             space has previously connected to WLM   * 00065400
*                             using the IWMCONN macro.  Ensure that   * 00065500
*                             the connect token returned by the       * 00065600
*                             IWMCONN macro is passed to the IWMQINS  * 00065700
*                             macro.                                  * 00065800
*                                                                     * 00065900
*                 xxxx0840    Name: IwmRsnCodeServiceNotEnabled       * 00066000
*                                                                     * 00066100
*                             Meaning: Caller's space connection is   * 00066200
*                             not enabled for this service.           * 00066300
*                                                                     * 00066400
*                             Action: Make sure that                  * 00066500
*                             Queue_Manager=Yes, or                   * 00066600
*                             Server_Manager=Yes with                 * 00066700
*                             Server_Type=Queue is specified on the   * 00066800
*                             IWMCONN request to enable this service. * 00066900
*                                                                     * 00067000
*                 xxxx0842    Name: IwmRsnCodeNoWLMConnect            * 00067100
*                                                                     * 00067200
*                             Meaning: Caller's space disconnected    * 00067300
*                             from WLM during processing of the       * 00067400
*                             insert request.                         * 00067500
*                                                                     * 00067600
*                             Action: None.                           * 00067700
*                                                                     * 00067800
*                 xxxx0845    Name: IwmRsnCodeWrongEnclave            * 00067900
*                                                                     * 00068000
*                             Meaning: The caller tried to queue a    * 00068100
*                             secondary work request to a specific    * 00068200
*                             server task using the SERVER_TOKEN      * 00068300
*                             parameter.  The caller's enclave token  * 00068400
*                             does not match the enclave token of the * 00068500
*                             last work request selected by the       * 00068600
*                             server task.                            * 00068700
*                                                                     * 00068800
*                             Action: Check that the correct enclave  * 00068900
*                             token was specified.  Check that the    * 00069000
*                             server task is invoking the IWMSSEL and * 00069100
*                             IWMSSEM macros in the correct sequence. * 00069200
*                                                                     * 00069300
*                 xxxx089E    Name: IwmRsnCodeServiceAModeMismatch    * 00069400
*                                                                     * 00069500
*                             Meaning:  The caller works in 64-bit    * 00069600
*                             address mode and tried to invoke a      * 00069700
*                             service macro that is only enabled for  * 00069800
*                             a 31-bit address environment.           * 00069900
*                                                                     * 00070000
*                             Action:  Use the 64-bit enabled service * 00070100
*                             macro (IWM4QIN ) or change the          * 00070200
*                             addressing mode of the caller to        * 00070300
*                             31-bit.                                 * 00070400
*                                                                     * 00070500
*                                                                     * 00070600
*                                                                     * 00070700
*                                                                     * 00070800
*            C    Name: IwmRetCodeEnvError                            * 00070900
*                                                                     * 00071000
*                 Meaning: Environmental error.                       * 00071100
*                                                                     * 00071200
*                                                                     * 00071300
*                 HEX REASON  MEANING/ACTION                          * 00071400
*                 CODE                                                * 00071500
*                                                                     * 00071600
*                 xxxx0C01    Name: IwmRsnCodeNoStg                   * 00071700
*                                                                     * 00071800
*                             Meaning: Storage is not available for   * 00071900
*                             the request.                            * 00072000
*                                                                     * 00072100
*                             Action: Contact your system programmer. * 00072200
*                             There is a common storage shortage.     * 00072300
*                                                                     * 00072400
*                 xxxx0C16    Name: IwmRsnCodeServerUnavail           * 00072500
*                                                                     * 00072600
*                             Meaning: A server cannot be started to  * 00072700
*                             process the work request.  This is      * 00072800
*                             probably caused by one of the           * 00072900
*                             following:                              * 00073000
*                                                                     * 00073100
*                                                                     * 00073200
*                             1.  An error in the JCL procedure used  * 00073300
*                                 to start the server address space.  * 00073400
*                                                                     * 00073500
*                             2.  Repeated, unexpected terminations   * 00073600
*                                 of the server address space.        * 00073700
*                                                                     * 00073800
*                                                                     * 00073900
*                                                                     * 00074000
*                             In either of these cases, workload      * 00074100
*                             management stops the application        * 00074200
*                             environment.  A DISPLAY WLM command     * 00074300
*                             shows this state as INTERNALLY STOPPED. * 00074400
*                                                                     * 00074500
*                             Action: Look at the system log to       * 00074600
*                             determine what caused the error:        * 00074700
*                                                                     * 00074800
*                                                                     * 00074900
*                             1.  If it is a JCL error, correct the   * 00075000
*                                 error in the procedure.             * 00075100
*                                                                     * 00075200
*                             2.  If it is repeated terminations of   * 00075300
*                                 the server address space, correct   * 00075400
*                                 the application error causing the   * 00075500
*                                 termination.                        * 00075600
*                                                                     * 00075700
*                                                                     * 00075800
*                                                                     * 00075900
*                             In either case, the server environment  * 00076000
*                             can then be resumed using the VARY      * 00076100
*                             operator command: V                     * 00076200
*                             WLM,APLLENV=nnn,RESUME where nnn is the * 00076300
*                             applicable application environment      * 00076400
*                             name.                                   * 00076500
*                                                                     * 00076600
*                             NOTE:  A re-IPL of some or all of the   * 00076700
*                             systems in the sysplex does not reset   * 00076800
*                             the stopped state of the application    * 00076900
*                             environment.  The VARY command is the   * 00077000
*                             only way to resume the environment.     * 00077100
*                                                                     * 00077200
*                 xxxx0C1A    Name: IwmRsnCodeApplNotDefined          * 00077300
*                                                                     * 00077400
*                             Meaning:  The application environment   * 00077500
*                             name is not defined in the active WLM   * 00077600
*                             policy.                                 * 00077700
*                                                                     * 00077800
*                             Action: Check whether the correct       * 00077900
*                             application environment name is being   * 00078000
*                             used.  If so, a service administrator   * 00078100
*                             must define the application environment * 00078200
*                             in the WLM service definition.          * 00078300
*                                                                     * 00078400
*                 xxxx0C1B    Name: IwmRsnCodeApplNotSST              * 00078500
*                                                                     * 00078600
*                             Meaning:  The application environment   * 00078700
*                             name is defined for use by a different  * 00078800
*                             subsystem type in the active WLM        * 00078900
*                             policy.                                 * 00079000
*                                                                     * 00079100
*                             Action: Check whether the correct       * 00079200
*                             application environment name is being   * 00079300
*                             used.  If so, a service administrator   * 00079400
*                             must change the application environment * 00079500
*                             in the WLM service definition to        * 00079600
*                             specify the correct subsystem type.     * 00079700
*                                                                     * 00079800
*                 xxxx0C1D    Name: IwmRsnCodeQMgrNotActive           * 00079900
*                                                                     * 00080000
*                             Meaning:  The required Queue Manager is * 00080100
*                             not active.                             * 00080200
*                                                                     * 00080300
*                             Action: The Queue Manager with the same * 00080400
*                             subsystem type and name as the server   * 00080500
*                             must be started and connected to        * 00080600
*                             workload management before the request  * 00080700
*                             can be honored.                         * 00080800
*                                                                     * 00080900
*                 xxxx0C22    Name: IwmRsnCodeApplEnvQuiesced         * 00081000
*                                                                     * 00081100
*                             Meaning:  For server applications       * 00081200
*                             connecting to WLM with subsystem type   * 00081300
*                             IWEB only: The application environment  * 00081400
*                             has been quiesced. The work reqeust is  * 00081500
*                             not inserted to the WLM work queue.     * 00081600
*                                                                     * 00081700
*                             Action: Resume the application          * 00081800
*                             environment.                            * 00081900
*                                                                     * 00082000
*                 xxxx0C40    Name: IwmRsnCodeNoSafCheckPossible      * 00082100
*                                                                     * 00082200
*                             Meaning:  MLS is active but a security  * 00082300
*                             check could not be performed, probably  * 00082400
*                             for one of the following reasons:       * 00082500
*                                                                     * 00082600
*                                                                     * 00082700
*                             o   No security decision could be made. * 00082800
*                                 The RACF router was not loaded; the * 00082900
*                                 request, resource, subsystem        * 00083000
*                                 combination could not be found in   * 00083100
*                                 the RACF ROUTER table,...           * 00083200
*                                                                     * 00083300
*                             o   A resource or class name is not     * 00083400
*                                 defined to RACF or the class has    * 00083500
*                                 not been RAClisted.                 * 00083600
*                                                                     * 00083700
*                             o   The class was RAClisted, but the    * 00083800
*                                 data space cannot be accessed due   * 00083900
*                                 to an ALESERV failure.              * 00084000
*                                                                     * 00084100
*                             o   The class was RAClisted, but the    * 00084200
*                                 data space has been deleted.        * 00084300
*                                                                     * 00084400
*                             o   No security decision could be made. * 00084500
*                                 The RACF router was not loaded,;    * 00084600
*                                 the request, resource, subsystem    * 00084700
*                                 combination could not be found in   * 00084800
*                                 the RACF ROUTER table.              * 00084900
*                                                                     * 00085000
*                                                                     * 00085100
*                                                                     * 00085200
*                             Action: Contact your RACF Security      * 00085300
*                             Administrator.  Check if RACF is        * 00085400
*                             properly installed, configured and      * 00085500
*                             tuned. Correct the eventual problems.   * 00085600
*                                                                     * 00085700
*                 xxxx0C41    Name: IwmRsnCodeSafCheckFailed          * 00085800
*                                                                     * 00085900
*                             Meaning: MLS is active. Queue Manager   * 00086000
*                             and Server Manager are not authorized   * 00086100
*                             to communicate.                         * 00086200
*                                                                     * 00086300
*                             Action: Normally none. If QM and SM     * 00086400
*                             really must communicate, contact your   * 00086500
*                             RACF Security Administrator. Set the    * 00086600
*                             appropriate Security Labels.            * 00086700
*                                                                     * 00086800
*                 xxxx0C42    Name: IwmRsnCodeAletError               * 00086900
*                                                                     * 00087000
*                             Meaning: Error while accessing access   * 00087100
*                             list with ALESERV probably because of   * 00087200
*                             one of the following                    * 00087300
*                                                                     * 00087400
*                                                                     * 00087500
*                             1.  The current access list cannot be   * 00087600
*                                 expanded. There are no free access  * 00087700
*                                 list entries and the maximum size   * 00087800
*                                 has been reached.                   * 00087900
*                                                                     * 00088000
*                             2.  ALESERV could not obtain storage    * 00088100
*                                 for an expanded access list.        * 00088200
*                                                                     * 00088300
*                                                                     * 00088400
*                                                                     * 00088500
*                             Action: Delete unused entries and       * 00088600
*                             reissue the request in first case. Free * 00088700
*                             some storage and retry the request in   * 00088800
*                             second case.  Contact your System       * 00088900
*                             Programmer if none works                * 00089000
*                                                                     * 00089100
*                                                                     * 00089200
*                                                                     * 00089300
*                                                                     * 00089400
*            10   Name: IwmRetCodeCompError                           * 00089500
*                                                                     * 00089600
*                 Meaning: Component error.                           * 00089700
*                                                                     * 00089800
*                 Action: Contact your system programmer.             * 00089900
*                                                                     * 00090000
*                                                                     * 00090100
*                                                                     * 00090200
*01* REASON CODES:                                                    * 00090300
*                                                                     * 00090400
*       A unique reason code will be returned whenever the return     * 00090500
*       code is non-zero.  Reason codes, as appropriate, are defined  * 00090600
*       under their corresponding return code.  Reason code and       * 00090700
*       return code constants are defined within IWMYCON.  Note that  * 00090800
*       the high order halfword of register 0, and the reason code    * 00090900
*       variable when specified, may be non-zero and represents       * 00091000
*       diagnostic data which is NOT part of the external interface.  * 00091100
*       The high order halfword should thus be excluded from          * 00091200
*       comparison with the reason code values described above.  The  * 00091300
*       constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may be    * 00091400
*       used for this purpose.                                        * 00091500
*                                                                     * 00091600
*01* MODULE TYPE:  ASSEM MACRO                                        * 00091700
*                                                                     * 00091800
*02*   PROCESSOR:  ASSEM                                              * 00091900
*                                                                     * 00092000
*01* COMPONENT:  SCWLM                                                * 00092100
*                                                                     * 00092200
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00092300
*                                                                     * 00092400
*01* EXAMPLES:                                                        * 00092500
*                                                                     * 00092600
*    To insert a work request onto the WLM queue manager queues:      * 00092700
*                                                                     * 00092800
*               IWMQINS  CONNTKN=CONNTOKEN,ETOKEN=ENCTOKEN,         X * 00092900
*                     USERDATA=USERDATA,APPLENV=APPLENV,SECUSER=NO, X * 00093000
*                     WLMWUTKN=WLMWUTKN,RETCODE=RC,RSNCODE=RSN        * 00093100
*      *                                                              * 00093200
*      * Storage areas                                                * 00093300
*      *                                                              * 00093400
*      CONNTOKEN DS   FL4             Contains the connect token      * 00093500
*      *                              associated with the use of WLM  * 00093600
*      *                              Queuing services as returned by * 00093700
*      *                              IWMCONN                         * 00093800
*      *                              (specifying QUEUE_MANAGER=YES   * 00093900
*      *                              or SERVER_MANAGER=YES           * 00094000
*      *                                   SERVER_TYPE=QUEUE          * 00094100
*      ENCTOKEN DS    CL8             Contains the Enclave token      * 00094200
*      *                              associated with the work        * 00094300
*      *                              request as returned by IWMECREA * 00094400
*      USERDATA DS    CL16            Contains data maintained by the * 00094500
*      *                              user                            * 00094600
*      APPLENV  DS    CL32            Contains the application        * 00094700
*      *                              environment name                * 00094800
*      WLMWUTKN DS    CL16            Work unit token                 * 00094900
*      RC       DS    F               Return code                     * 00095000
*      RSN      DS    F               Reason code                     * 00095100
*                                                                     * 00095200
*                                                                     * 00095300
*01* MACRO USAGE NOTES:                                               * 00095400
*                                                                     * 00095500
*                                                                     * 00095600
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00095700
*        global macro variable.  Any value other than 'NO' will       * 00095800
*        result in the macro expansion being printed.  The default is * 00095900
*        'YES'.  The following examples illustrate how the ZPRINT     * 00096000
*        variable should be set.                                      * 00096100
*                                                                     * 00096200
*                    GBLC &ZPRINT                                     * 00096300
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00096400
*                                                                     * 00096500
*                                                                     * 00096600
*    2.  When using the NOCHECK option in conjunction with the Modify * 00096700
*        and/or  Execute  forms,  be  sure  that  it is preceded by a * 00096800
*        Modify   or  Execute  form  invocation  which  specifies  or * 00096900
*        defaults  to  the  COMPLETE  option.   This insures that the * 00097000
*        parameter  list  is  initialized completely.   The parameter * 00097100
*        list  field which identifies the version number of the macro * 00097200
*        is only set when the Standard form or the Complete option of * 00097300
*        the  Execute/Modify  form  is  used,  or  when  PLISTVER  is * 00097400
*        explicitly  specified.  Be sure that the resulting parameter * 00097500
*        list version number covers all the keys that you use.        * 00097600
*                                                                     * 00097700
*                                                                     * 00097800
*    3.  The  IWMQINS macro supports multiple versions. The macro key * 00097900
*        list  below  contains the version level in which the key was * 00098000
*        first  introduced.  Positionals  are  identified by the word * 00098100
*        'Positional'  followed by the numeric value of its position. * 00098200
*        Nested  positionals  are  preceded  by their outer key.  The * 00098300
*        lowest value represents the original version and the highest * 00098400
*        value  represents  the  most  recent  version of the IWMQINS * 00098500
*        macro.    When  specifying  PLISTVER,  be sure that it is at * 00098600
*        least  as high as the highest version number of all the keys * 00098700
*        being used.                                                  * 00098800
*                                                                     * 00098900
*        VERSION   KEY                                                * 00099000
*                                                                     * 00099100
*              0      APPLENV                                         * 00099200
*                     CONNTKN                                         * 00099300
*                     DEPENDENT                                       * 00099400
*                     ETOKEN                                          * 00099500
*                     SECUSER                                         * 00099600
*                     USERDATA                                        * 00099700
*                     USERID                                          * 00099800
*                     WLMWUTKN                                        * 00099900
*              1      SERVER_TOKEN                                    * 00100000
*              2      REGION_TOKEN                                    * 00100100
*              3      DYNAMIC                                         * 00100200
*                                                                     * 00100300
*                                                                     * 00100400
*                                                                     * 00100500
*01* CHANGE ACTIVITY:                                                 * 00100600
*                                                                     * 00100700
*   Flag LineItem  FMID    Date   ID    Comment                       * 00100800
*                                                                     * 00100900
*    $L0=WLMP     HBB6603 950216 PD88RK:  DB2 Stored SQL Procedure    * 00101000
*    $L1=WLMP     HBB6603 950331 PD88GD:  DB2 Stored SQL Procedure    * 00101100
*    $L2=WLMP     HBB6603 950426 PD88GD:  DB2 Stored SQL Procedure    * 00101200
*    $L3=WLMP     HBB6603 960821 PD88GW:  DB2 Stored SQL Procedure    * 00101300
*    $L4=WLMP     HBB6605 970528 B9HAGD:  Business object server      * 00101400
*    $L5=OW45238  HBB6608 006015 B9HARV:  Temporal Affinity Support   * 00101500
*    $L6=OW50436  HBB7705 010718 3241RV:  Scalable Webserver Support  * 00101600
*    $L7=WLMPMLS  HBB7707 011015 3241NN:  Multilevel Security Support * 00101700
*    $L8=WLMDAE   HBB7708 020213 3241UH:  Dynamic Application         * 00101800
*                                         Environment Support         * 00101900
*    $L9=WLMP64W  HBB7709 030315 3241NN:  IWM4QIN  created. Please do * 00102000
*                                         not change this macro any   * 00102100
*                                         longer.                     * 00102200
*                                           maccflg = L9              * 00102300
*                                           macclnit = WLMPDRE        * 00102400
*                                           maccfmd = HBB7709         * 00102500
*                                           maccdte = 030520          * 00102600
*                                           maccpgmr = 3241UH.        * 00102700
*                                         Dependent Work Requests     * 00102800
*                                         Support                     * 00102900
*    $P1=ME02076  HBB7720 041015 3241NN:  Added reason code for       * 00103000
*                                         callers in AMODE 64.        * 00103100
*                                         Specific to 31-bit version. * 00103200
****** END OF SPECIFICATIONS *****************************************/ 00103300
*/********************************************************************* 00103400
         MACRO                                                          00103500
&XLABEL  IWMQINS &CONNTKN=,&ETOKEN=,&USERDATA=,&APPLENV=,&DYNAMIC=,    *00103600
               &DEPENDENT=,&SECUSER=,&USERID=,&WLMWUTKN=,              *00103700
               &SERVER_TOKEN=,&REGION_TOKEN=,&RETCODE=,&RSNCODE=,      *00103800
               &PLISTVER=,&MF=                                          00103900
.*                                                                      00104000
*                  MACDATE -11/09/04-<3>                                00104100
.*                                                                      00104200
.*******************************************************************    00104300
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00104400
.*******************************************************************    00104500
                  GBLC  &ZPRINT     YES=PRINT NO=NO PRINT               00104600
                  GBLC  &ZTEST      YES=TEST NO=NO TEST                 00104700
                  GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX         00104800
.*                                                                      00104900
                  GBLC  &ZIWMQINS   YES=MACRO USED AT LEAST ONCE        00105000
.*******************************************************************    00105100
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00105200
.*******************************************************************    00105300
                  LCLC  &ZMS        ERROR MESSAGE WORK AREA             00105400
                  LCLC  &ZCNDX      SYSNDX CHARACTERS                   00105500
                  LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED          00105600
                  LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR         00105700
                  LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE         00105800
                  LCLA  &ZAWRK      USED AS A WORK AREA                 00105900
                  LCLA  &ZASIZ      USED FOR SIZE OF VALUE              00106000
                  LCLA  &ZN         NUMERIC WORK VARIABLE               00106100
                  LCLC  &ZC         CHARACTER WORK VARIABLE             00106200
                  LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE         00106300
                  LCLA  &ZTLA       VALUE TOO LONG VARIABLE             00106400
                  LCLC  &ZMAC_G     "G" or null                         00106500
&ZMAC_G           SETC  ''                                              00106600
                  LCLC  &ZMAC_LR                                        00106700
&ZMAC_LR          SETC  'LR'                                            00106800
                  LCLC  &ZMAC_L                                         00106900
&ZMAC_L           SETC  'L'                                             00107000
                  LCLC  &ZMAC_ST                                        00107100
&ZMAC_ST          SETC  'ST'                                            00107200
                  LCLA  &ZMACRET    MACRO RETURN CODE                   00107300
&ZMACRET          SETA  0           ASSUME NO ERRORS                    00107400
.*                                                                      00107500
                  LCLC  &ZCSYSLIST(255)         NONXKEY, POS ARRAY      00107600
                  LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()          00107700
                  LCLA  &ZPLLEN     PARAMETER LIST LENGTH               00107800
                  LCLC  &ZENDBASEPL             End of base PL          00107900
                  LCLA  &ZPLWORKA   PARAMETER LIST LENGTH               00108000
.*******************************************************************    00108100
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00108200
.*******************************************************************    00108300
                  LCLA  &ZI         INDEX FOR ARRAY                     00108400
                  LCLA  &ZJ         INDEX FOR PARMS                     00108500
                  LCLA  &ZK         INDEX FOR PARSE                     00108600
                  LCLA  &ZLO        LOW RANGE VALUE                     00108700
                  LCLA  &ZHI        HIGH RANGE VALUE                    00108800
                  LCLC  &ZW         WORK AREA FOR PARM                  00108900
.********************************************************************   00109000
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00109100
.********************************************************************   00109200
                  GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL             00109300
                  GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE      00109400
                  GBLA  &SYSALVL    SYSSTATE ARCHLVL                    00109500
                  GBLC  &SYSAM64    SYSSTATE AMODE64                    00109600
.*                                                                      00109700
                  AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED      00109800
                  AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED       00109900
                  SPLEVEL  TEST                                         00110000
.ZSYS2            ANOP  ,                                               00110100
                  AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1           00110200
                  AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1           00110300
                  SYSSTATE TEST                                         00110400
                  AGO   .ZSYS4                                          00110500
.ZSYS3            ANOP  ,                                               00110600
&SYSASCE          SETC  'P'         ASSUME SYSSTATE PRIMARY             00110700
.ZSYS4            ANOP  ,                                               00110800
.*******************************************************************    00110900
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00111000
.*******************************************************************    00111100
                  LCLC  &XCONNTKN   ++ NAME                             00111200
                  LCLC  &XETOKEN    ++ NAME                             00111300
                  LCLC  &XUSERDATA  ++ NAME                             00111400
                  LCLC  &XAPPLENV   ++ NAME                             00111500
                  LCLC  &XDYNAMIC   ++ VALUE                            00111600
                  LCLC  &XDEPENDENT             ++ VALUE                00111700
                  LCLC  &XSECUSER   ++ VALUE                            00111800
                  LCLC  &XUSERID    ++ NAME                             00111900
                  LCLC  &XWLMWUTKN  ++ NAME                             00112000
                  LCLC  &XSERVER_TOKEN          ++ NAME                 00112100
                  LCLC  &XREGION_TOKEN          ++ NAME                 00112200
                  LCLC  &XRETCODE   ++ NAME                             00112300
                  LCLC  &XRSNCODE   ++ NAME                             00112400
                  LCLA  &XPLISTVER  ++ VALUE                            00112500
                  LCLC  &XMF        ++ VALUE                            00112600
                  LCLC  &XMFCTRL    ++ NAME                             00112700
                  LCLC  &XMFATTR    ++ VALUE                            00112800
                  LCLC  &XMFSCK     ++ VALUE                            00112900
.*******************************************************************    00113000
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00113100
.*******************************************************************    00113200
                  LCLC  &ZXCONNTKN  ++ INPUT NAME                       00113300
                  LCLC  &ZXETOKEN   ++ INPUT NAME                       00113400
                  LCLC  &ZXUSERDATA             ++ INPUT NAME           00113500
                  LCLC  &ZXAPPLENV  ++ INPUT NAME                       00113600
                  LCLC  &ZXDYNAMIC  ++ INPUT VALUE                      00113700
                  LCLC  &ZXDEPENDENT            ++ INPUT VALUE          00113800
                  LCLC  &ZXSECUSER  ++ INPUT VALUE                      00113900
                  LCLC  &ZXUSERID   ++ INPUT NAME                       00114000
                  LCLC  &ZXWLMWUTKN             ++ OUTPUT NAME          00114100
                  LCLC  &ZXSERVER_TOKEN         ++ INPUT NAME           00114200
                  LCLC  &ZXREGION_TOKEN         ++ INPUT NAME           00114300
                  LCLC  &ZXRETCODE  ++ OUTPUT NAME                      00114400
                  LCLC  &ZXRSNCODE  ++ OUTPUT NAME                      00114500
                  LCLC  &ZXPLISTVER             ++ INPUT VALUE          00114600
                  LCLC  &ZXMF       ++ INPUT VALUE                      00114700
                  LCLC  &ZXMFCTRL   ++ INPUT NAME                       00114800
                  LCLC  &ZXMFATTR   ++ INPUT VALUE                      00114900
                  LCLC  &ZXMFSCK    ++ INPUT VALUE                      00115000
.********************************************************************   00115100
.***AC.PLV01  PROCESS PLISTVER                                      *   00115200
.********************************************************************   00115300
&XPLISTVER      SETA  0                                                 00115400
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00115500
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00115600
&XPLISTVER      SETA  3                                                 00115700
.ZPLV0          ANOP  ,                                                 00115800
.*                                                                      00115900
                AIF   ('&DYNAMIC' EQ '').ZPLV1E                         00116000
                AIF   (&XPLISTVER GE 3).ZPLV1E                          00116100
&XPLISTVER      SETA  3                                                 00116200
.ZPLV1E         ANOP  ,                                                 00116300
.*                                                                      00116400
                AIF   ('&SERVER_TOKEN' EQ '').ZPLV2E                    00116500
                AIF   (&XPLISTVER GE 1).ZPLV2E                          00116600
&XPLISTVER      SETA  1                                                 00116700
.ZPLV2E         ANOP  ,                                                 00116800
.*                                                                      00116900
                AIF   ('&REGION_TOKEN' EQ '').ZPLV3E                    00117000
                AIF   (&XPLISTVER GE 2).ZPLV3E                          00117100
&XPLISTVER      SETA  2                                                 00117200
.ZPLV3E         ANOP  ,                                                 00117300
.*                                                                      00117400
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00117500
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00117600
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00117700
.*-------------------------------------------------------------------   00117800
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00117900
&ZMS            SETC  '"PLISTVER='         *KPOSA* MNOTE                00118000
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00118100
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00118200
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00118300
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00118400
                AGO   .ZPVCK2                                           00118500
.ZPVCK3         ANOP  ,                                                 00118600
.*-------------------------------------------------------------------   00118700
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00118800
&ZMS            SETC  '"PLISTVER='         *KGPRA* MNOTE                00118900
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00119000
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00119100
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00119200
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00119300
                AGO   .ZPVCKE                                           00119400
.ZPVCK2         ANOP  ,                                                 00119500
.*-------------------------------------------------------------------   00119600
&ZCVAL          SETC  '&PLISTVER(1)'                                    00119700
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00119800
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00119900
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00120000
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00120100
                AIF   (&ZN LE 3).ZPVCK4A   NOT HIGH                     00120200
.ZPVCK6         ANOP  ,                                                 00120300
&ZMS            SETC  '"PLISTVER='         *KRNGA* MNOTE                00120400
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00120500
&ZMS            SETC  '&ZMS THE RANGE IS "0-3"'                         00120600
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00120700
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00120800
&XPLISTVER      SETA  3                                                 00120900
                AGO   .ZPVCKE                                           00121000
.*-------------------------------------------------------------------   00121100
.ZPVCK4A        ANOP  ,                                                 00121200
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00121300
&ZMS            SETC  'PLISTVER='          *KVALA* MNOTE                00121400
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00121500
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00121600
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00121700
                MNOTE 8,' &ZMS IS REQUIRED.'                            00121800
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00121900
                AGO   .ZPVCK5                                           00122000
.ZPVCK4         ANOP  ,                                                 00122100
&XPLISTVER      SETA  &PLISTVER(1)                                      00122200
.ZPVCK5         ANOP  ,                                                 00122300
.ZPVCKE         ANOP  ,                                                 00122400
.********************************************************************   00122500
.***AG.MF01 PROCESS MF MACRO FORMS                                      00122600
.********************************************************************   00122700
                  ACTR  10000                                           00122800
.*------------------------------------------------------------------    00122900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00123000
&XMF              SETC  ''          INITIALIZE XVARIABLE                00123100
.*-------------------------------------------------------------------   00123200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00123300
.ZG51             ANOP  ,                                               00123400
&ZTLC             SETC 'S'                                              00123500
                  AIF   ('&MF(1)' NE '&ZTLC').ZG52                      00123600
&XMF              SETC  'S'         SET KEYWORD                         00123700
&XMFSCK           SETC  'COMPLETE'  SET XMFSCK                          00123800
                  AIF   (N'&MF LE 1).ZG51A      CK NUM                  00123900
&ZMS              SETC  '"MF='      *KPOSA* MNOTE                       00124000
&ZMS              SETC  '&ZMS.&MF"'                                     00124100
&ZMS              SETC  '&ZMS "MF"'                                     00124200
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00124300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00124400
.ZG51A            ANOP  ,                                               00124500
.*-------------------------------------------------------------------   00124600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00124700
.ZG52             ANOP  ,                                               00124800
&ZTLC             SETC 'L'                                              00124900
                  AIF   ('&MF(1)' NE '&ZTLC').ZG59                      00125000
&XMF              SETC  'L'         SET KEYWORD                         00125100
                  AIF   (N'&MF LE 3).ZG52A      CK NUM                  00125200
&ZMS              SETC  '"MF='      *KPOSA* MNOTE                       00125300
&ZMS              SETC  '&ZMS.&MF"'                                     00125400
&ZMS              SETC  '&ZMS "MF"'                                     00125500
                  MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'            00125600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00125700
.ZG52A            ANOP  ,                                               00125800
.*-------------------------------------------------------------------   00125900
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00126000
                  AIF   (N'&SYSLIST NE 0).ZG52B  POSITIONALS?           00126100
                  AIF   ('&CONNTKN' NE '').ZG52B  KEYS?                 00126200
                  AIF   ('&ETOKEN' NE '').ZG52B  KEYS?                  00126300
                  AIF   ('&USERDATA' NE '').ZG52B  KEYS?                00126400
                  AIF   ('&APPLENV' NE '').ZG52B  KEYS?                 00126500
                  AIF   ('&DYNAMIC' NE '').ZG52B  KEYS?                 00126600
                  AIF   ('&DEPENDENT' NE '').ZG52B  KEYS?               00126700
                  AIF   ('&SECUSER' NE '').ZG52B  KEYS?                 00126800
                  AIF   ('&USERID' NE '').ZG52B  KEYS?                  00126900
                  AIF   ('&WLMWUTKN' NE '').ZG52B  KEYS?                00127000
                  AIF   ('&SERVER_TOKEN' NE '').ZG52B  KEYS?            00127100
                  AIF   ('&REGION_TOKEN' NE '').ZG52B  KEYS?            00127200
                  AIF   ('&RETCODE' NE '').ZG52B  KEYS?                 00127300
                  AIF   ('&RSNCODE' NE '').ZG52B  KEYS?                 00127400
                  AGO    .ZG52C     INVOCATION OKAY                     00127500
.ZG52B            ANOP  ,                                               00127600
&ZMS              SETC  'THE "L" FORM OF "MF"'  *MFLA* MNOTE            00127700
&ZMS              SETC  '&ZMS CAN ONLY HAVE'                            00127800
&ZMS              SETC  '&ZMS THE "PLISTVER" KEY'                       00127900
                  MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'          00128000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00128100
.ZG52C            ANOP  ,                                               00128200
.*-------------------------------------------------------------------   00128300
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00128400
&ZXMFCTRL         SETC  'INPUT'     SET IN/OUTPUT                       00128500
&XMFCTRL          SETC  '&MF(2,1)'  SET XVARIABLE                       00128600
                  AIF   (N'&MF(2) GT 1).ZG54B   MULTI PARMS             00128700
&XMFCTRL          SETC  '&MF(2)'    SET XVARIABLE                       00128800
.ZG54B            AIF   (K'&MF(2) GT 0).ZG54C                           00128900
&ZXMFCTRL         SETC  ''          RESET IN/OUTPUT                     00129000
&ZMS              SETC  'WHEN "L" IS SPECIFIED'  *KRQDA*                00129100
&ZMS              SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'             00129200
                  MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                    00129300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00129400
.ZG54C            ANOP  ,                                               00129500
.*-------------------------------------------------------------------   00129600
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00129700
                  AIF   (K'&ZXMFCTRL LE 0).ZG54P  NOT I/O               00129800
                  AIF   ('&XMFCTRL'(1,1) NE '(').ZG54P                  00129900
&ZXMFCTRL         SETC  ''          RESET IN/OUTPUT                     00130000
&ZMS              SETC  '"MF='      *KGPRA* MNOTE                       00130100
&ZMS              SETC  '&ZMS.&MF"'                                     00130200
&ZMS              SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'       00130300
                  MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'               00130400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00130500
.ZG54P            ANOP  ,                                               00130600
.*-------------------------------------------------------------------   00130700
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00130800
&ZXMFATTR         SETC  'INPUT'     SET IN/OUTPUT                       00130900
&XMFATTR          SETC  '0D'                                            00131000
                  AIF   (K'&MF(3) LE 0).ZG57B   PARM                    00131100
&XMFATTR          SETC  '&MF(3,1)'  SET XVARIABLE                       00131200
                  AIF   (N'&MF(3) GT 1).ZG57B   MULTI PARMS             00131300
&XMFATTR          SETC  '&MF(3)'    SET XVARIABLE                       00131400
.ZG57B            ANOP  ,                                               00131500
.*-------------------------------------------------------------------   00131600
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00131700
                  AIF   (K'&ZXMFATTR LE 0).ZG57P  NOT I/O               00131800
                  AIF   ('&XMFATTR'(1,1) NE '(').ZG57P                  00131900
&ZXMFATTR         SETC  ''          RESET IN/OUTPUT                     00132000
&ZMS              SETC  '"MF='      *KGPRA* MNOTE                       00132100
&ZMS              SETC  '&ZMS.&MF"'                                     00132200
&ZMS              SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'       00132300
                  MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'               00132400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00132500
.ZG57P            ANOP  ,                                               00132600
.*-------------------------------------------------------------------   00132700
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00132800
                  AIF   (K'&ZXMFATTR LE 0).ZG57S  NOT I/O               00132900
                  AIF   (K'&XMFATTR LE 60).ZG57S  LNG OK                00133000
&ZXMFATTR         SETC  ''          RESET IN/OUTPUT                     00133100
&ZMS              SETC  '"MF='      *KLNGA* MNOTE                       00133200
&ZMS              SETC  '&ZMS.&MF"'                                     00133300
&ZMS              SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'           00133400
                  MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'              00133500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00133600
.ZG57S            ANOP  ,                                               00133700
.*-------------------------------------------------------------------   00133800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00133900
.ZG59             ANOP  ,                                               00134000
&ZTLC             SETC 'M'                                              00134100
                  AIF   ('&MF(1)' NE '&ZTLC').ZG68                      00134200
&XMF              SETC  'M'         SET KEYWORD                         00134300
                  AIF   (N'&MF LE 3).ZG59A      CK NUM                  00134400
&ZMS              SETC  '"MF='      *KPOSA* MNOTE                       00134500
&ZMS              SETC  '&ZMS.&MF"'                                     00134600
&ZMS              SETC  '&ZMS "MF"'                                     00134700
                  MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'            00134800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00134900
.ZG59A            ANOP  ,                                               00135000
.*-------------------------------------------------------------------   00135100
.***AG.KKCTL09 -MF(M) OUTPUT KEYS SPECIFIED?                            00135200
                  AIF   ('&WLMWUTKN' NE '').ZG59B  OUTPUT SPECIFIED?    00135300
                  AGO    .ZG59C     INVOCATION OKAY                     00135400
.ZG59B            ANOP  ,                                               00135500
&ZMS              SETC  'THE "M" FORM OF "MF" CANNOT'  *MFMOA* MNOTE    00135600
&ZMS              SETC  '&ZMS HAVE THE FOLLOWING OUTPUT KEY(S)'         00135700
&ZMS              SETC  '&ZMS SPECIFIED ON THE INVOCATION:'             00135800
&ZMS              SETC  '&ZMS "WLMWUTKN"'                               00135900
                  MNOTE 8,' &ZMS '                                      00136000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00136100
.ZG59C            ANOP  ,                                               00136200
.*-------------------------------------------------------------------   00136300
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00136400
&ZXMFCTRL         SETC  'INPUT'     SET IN/OUTPUT                       00136500
&XMFCTRL          SETC  '&MF(2,1)'  SET XVARIABLE                       00136600
                  AIF   (N'&MF(2) GT 1).ZG61B   MULTI PARMS             00136700
&XMFCTRL          SETC  '&MF(2)'    SET XVARIABLE                       00136800
.ZG61B            AIF   (K'&MF(2) GT 0).ZG61C                           00136900
&ZXMFCTRL         SETC  ''          RESET IN/OUTPUT                     00137000
&ZMS              SETC  'WHEN "M" IS SPECIFIED'  *KRQDA*                00137100
&ZMS              SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'             00137200
                  MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                    00137300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00137400
.ZG61C            ANOP  ,                                               00137500
.*-------------------------------------------------------------------   00137600
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00137700
                  AIF   (K'&ZXMFCTRL LE 0).ZG61R  NOT I/O               00137800
                  AIF   ('&XMFCTRL'(1,1) NE '(').ZG61R                  00137900
&ZCGPR            SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                      00138000
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG61P                    00138100
                  AIF   (K'&ZCGPR GT 2).ZG61Q                           00138200
                  AIF   ('&ZCGPR' EQ '0').ZG61Q                         00138300
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00138400
                  AIF   (T'&ZCGPR NE 'N').ZG61Q  INVALID REG NAME       00138500
.ZG61P            ANOP  ,                                               00138600
                  AIF   (T'&ZCGPR NE 'N').ZG61R  NON NUMERIC            00138700
                  AIF   ('&ZCGPR' LT '1').ZG61Q                         00138800
                  AIF   ('&ZCGPR' LE '12').ZG61R                        00138900
.ZG61Q            ANOP  ,                                               00139000
&ZMS              SETC  '"MF='      *KGPRA* MNOTE                       00139100
&ZMS              SETC  '&ZMS.&MF"'                                     00139200
&ZMS              SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'       00139300
                  MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                00139400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00139500
.ZG61R            ANOP  ,                                               00139600
.*-------------------------------------------------------------------   00139700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00139800
&XMFSCK           SETC  ''          INITIALIZE XVARIABLE                00139900
.ZG65A   AIF   ('&MF(3)' NE 'COMPLETE').ZG66A                           00140000
&XMFSCK           SETC  'COMPLETE'  SET KEYWORD                         00140100
.*-------------------------------------------------------------------   00140200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00140300
.ZG66A   AIF   ('&MF(3)' NE 'NOCHECK').ZG67A                            00140400
&XMFSCK           SETC  'NOCHECK'   SET KEYWORD                         00140500
.*-------------------------------------------------------------------   00140600
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00140700
.ZG67A            AIF   (K'&XMFSCK GT 0).ZG67C  KEYWORD                 00140800
                  AIF   (K'&MF(3) LE 0).ZG67B                           00140900
&ZMS              SETC  '"MF='      *KUKWA* MNOTE                       00141000
&ZMS              SETC  '&ZMS.&MF"'                                     00141100
&ZMS              SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '       00141200
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00141300
&ZMS              SETC  '&ZMS "COMPLETE"'                               00141400
&ZMS              SETC  '&ZMS OR "NOCHECK".'                            00141500
                  MNOTE 8,' &ZMS '                                      00141600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00141700
.ZG67B            ANOP  ,                                               00141800
&XMFSCK           SETC  'COMPLETE'  SET DEFAULT KEYWORD                 00141900
.ZG67C            ANOP  ,                                               00142000
&ZXMFSCK          SETC  'INPUT'     SET IN/OUTPUT                       00142100
.*-------------------------------------------------------------------   00142200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00142300
.ZG68             ANOP  ,                                               00142400
&ZTLC             SETC 'E'                                              00142500
                  AIF   ('&MF(1)' NE '&ZTLC').ZG77                      00142600
&XMF              SETC  'E'         SET KEYWORD                         00142700
                  AIF   (N'&MF LE 3).ZG68A      CK NUM                  00142800
&ZMS              SETC  '"MF='      *KPOSA* MNOTE                       00142900
&ZMS              SETC  '&ZMS.&MF"'                                     00143000
&ZMS              SETC  '&ZMS "MF"'                                     00143100
                  MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'            00143200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00143300
.ZG68A            ANOP  ,                                               00143400
.*-------------------------------------------------------------------   00143500
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00143600
&ZXMFCTRL         SETC  'INPUT'     SET IN/OUTPUT                       00143700
&XMFCTRL          SETC  '&MF(2,1)'  SET XVARIABLE                       00143800
                  AIF   (N'&MF(2) GT 1).ZG70B   MULTI PARMS             00143900
&XMFCTRL          SETC  '&MF(2)'    SET XVARIABLE                       00144000
.ZG70B            AIF   (K'&MF(2) GT 0).ZG70C                           00144100
&ZXMFCTRL         SETC  ''          RESET IN/OUTPUT                     00144200
&ZMS              SETC  'WHEN "E" IS SPECIFIED'  *KRQDA*                00144300
&ZMS              SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'             00144400
                  MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                    00144500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00144600
.ZG70C            ANOP  ,                                               00144700
.*-------------------------------------------------------------------   00144800
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00144900
                  AIF   (K'&ZXMFCTRL LE 0).ZG70R  NOT I/O               00145000
                  AIF   ('&XMFCTRL'(1,1) NE '(').ZG70R                  00145100
&ZCGPR            SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                      00145200
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG70P                    00145300
                  AIF   (K'&ZCGPR GT 2).ZG70Q                           00145400
                  AIF   ('&ZCGPR' EQ '0').ZG70Q                         00145500
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00145600
                  AIF   (T'&ZCGPR NE 'N').ZG70Q  INVALID REG NAME       00145700
.ZG70P            ANOP  ,                                               00145800
                  AIF   (T'&ZCGPR NE 'N').ZG70R  NON NUMERIC            00145900
                  AIF   ('&ZCGPR' LT '1').ZG70Q                         00146000
                  AIF   ('&ZCGPR' LE '12').ZG70R                        00146100
.ZG70Q            ANOP  ,                                               00146200
&ZMS              SETC  '"MF='      *KGPRA* MNOTE                       00146300
&ZMS              SETC  '&ZMS.&MF"'                                     00146400
&ZMS              SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'       00146500
                  MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                00146600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00146700
.ZG70R            ANOP  ,                                               00146800
.*-------------------------------------------------------------------   00146900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00147000
&XMFSCK           SETC  ''          INITIALIZE XVARIABLE                00147100
.ZG74A   AIF   ('&MF(3)' NE 'COMPLETE').ZG75A                           00147200
&XMFSCK           SETC  'COMPLETE'  SET KEYWORD                         00147300
.*-------------------------------------------------------------------   00147400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00147500
.ZG75A   AIF   ('&MF(3)' NE 'NOCHECK').ZG76A                            00147600
&XMFSCK           SETC  'NOCHECK'   SET KEYWORD                         00147700
.*-------------------------------------------------------------------   00147800
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00147900
.ZG76A            AIF   (K'&XMFSCK GT 0).ZG76C  KEYWORD                 00148000
                  AIF   (K'&MF(3) LE 0).ZG76B                           00148100
&ZMS              SETC  '"MF='      *KUKWA* MNOTE                       00148200
&ZMS              SETC  '&ZMS.&MF"'                                     00148300
&ZMS              SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '       00148400
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00148500
&ZMS              SETC  '&ZMS "COMPLETE"'                               00148600
&ZMS              SETC  '&ZMS OR "NOCHECK".'                            00148700
                  MNOTE 8,' &ZMS '                                      00148800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00148900
.ZG76B            ANOP  ,                                               00149000
&XMFSCK           SETC  'COMPLETE'  SET DEFAULT KEYWORD                 00149100
.ZG76C            ANOP  ,                                               00149200
&ZXMFSCK          SETC  'INPUT'     SET IN/OUTPUT                       00149300
.*------------------------------------------------------------------    00149400
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00149500
.ZG77             ANOP  ,                                               00149600
&ZXMF             SETC  'INPUT'     SET IN/OUTPUT                       00149700
                  AIF   (K'&XMF GT 0).ZG77E     VALID ARG               00149800
                  AIF   (T'&MF EQ 'O').ZG77D    OMITTED                 00149900
&ZASYSLNDX        SETA  0                                               00150000
.ZG77A            ANOP  ,           POSITIONAL MACRO KEY                00150100
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00150200
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG77C                00150300
&ZTLC             SETC 'MF'                                             00150400
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG77A       00150500
.ZG77B            ANOP  ,                                               00150600
&ZXMF             SETC  ''          RESET IN/OUTPUT                     00150700
&ZMS              SETC  'THE "MF" KEY'          *KOPTA* MNOTE           00150800
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00150900
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00151000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00151100
                  AGO   .ZG77E                                          00151200
.ZG77C            ANOP  ,                                               00151300
&ZXMF             SETC  ''          RESET IN/OUTPUT                     00151400
&ZMS              SETC  '"MF='      *KUKWA* MNOTE                       00151500
&ZMS              SETC  '&ZMS.&MF"'                                     00151600
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00151700
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00151800
&ZMS              SETC  '&ZMS "S",'                                     00151900
&ZMS              SETC  '&ZMS "L",'                                     00152000
&ZMS              SETC  '&ZMS "M",'                                     00152100
&ZMS              SETC  '&ZMS OR "E".'                                  00152200
                  MNOTE 8,' &ZMS '                                      00152300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00152400
                  AGO   .ZG77E                                          00152500
.ZG77D            ANOP  ,                                               00152600
&XMF              SETC  'S'         SET DEFAULT KEYWORD                 00152700
&XMFSCK           SETC  'COMPLETE'  COMPLETE CHECKING                   00152800
.ZG77E            ANOP  ,                                               00152900
.********************************************************************   00153000
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00153100
.********************************************************************   00153200
                  ACTR  10000                                           00153300
.*-------------------------------------------------------------------   00153400
.***AG.MF03 MF=(SLME)                                                   00153500
                  AIF   ('&XMF' EQ 'L').ZGMFX                           00153600
                  AIF   ('&XMFSCK' NE 'COMPLETE').ZGMFX                 00153700
.*----------------------------------------------------------------***   00153800
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00153900
                  AIF   (N'&CONNTKN LE 1).ZG2A  CK NUM                  00154000
&ZMS              SETC  '"CONNTKN='             *KPOSA* MNOTE           00154100
&ZMS              SETC  '&ZMS.&CONNTKN"'                                00154200
&ZMS              SETC  '&ZMS "CONNTKN"'                                00154300
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00154400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00154500
.ZG2A             ANOP  ,                                               00154600
.*-------------------------------------------------------------------   00154700
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00154800
&ZXCONNTKN        SETC  'INPUT'     SET IN/OUTPUT                       00154900
&XCONNTKN         SETC  '&CONNTKN(1)'           SET XVARIABLE           00155000
                  AIF   (N'&CONNTKN GT 1).ZG2B  MULTI PARMS             00155100
&XCONNTKN         SETC  '&CONNTKN'  SET XVARIABLE                       00155200
.ZG2B             AIF   (K'&CONNTKN(1) GT 0).ZG2C                       00155300
&ZXCONNTKN        SETC  ''          RESET IN/OUTPUT                     00155400
&ZMS              SETC  ' '         *KRQDA*                             00155500
&ZMS              SETC  '&ZMS "CONNTKN" KEY AND ITS'                    00155600
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00155700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00155800
.ZG2C             ANOP  ,                                               00155900
.*-------------------------------------------------------------------   00156000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00156100
                  AIF   (K'&ZXCONNTKN LE 0).ZG2R  NOT I/O               00156200
                  AIF   ('&XCONNTKN'(1,1) NE '(').ZG2R                  00156300
&ZCGPR            SETC  '&XCONNTKN'(2,K'&XCONNTKN-2)                    00156400
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                     00156500
                  AIF   (K'&ZCGPR GT 2).ZG2Q                            00156600
                  AIF   ('&ZCGPR' EQ '0').ZG2Q                          00156700
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00156800
                  AIF   (T'&ZCGPR NE 'N').ZG2Q  INVALID REG NAME        00156900
.ZG2P             ANOP  ,                                               00157000
                  AIF   (T'&ZCGPR NE 'N').ZG2R  NON NUMERIC             00157100
                  AIF   ('&ZCGPR' LT '2').ZG2Q                          00157200
                  AIF   ('&ZCGPR' LE '12').ZG2R                         00157300
.ZG2Q             ANOP  ,                                               00157400
&ZMS              SETC  '"CONNTKN='             *KGPRA* MNOTE           00157500
&ZMS              SETC  '&ZMS.&CONNTKN"'                                00157600
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00157700
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00157800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00157900
.ZG2R             ANOP  ,                                               00158000
.*----------------------------------------------------------------***   00158100
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00158200
                  AIF   (N'&ETOKEN LE 1).ZG5A   CK NUM                  00158300
&ZMS              SETC  '"ETOKEN='  *KPOSA* MNOTE                       00158400
&ZMS              SETC  '&ZMS.&ETOKEN"'                                 00158500
&ZMS              SETC  '&ZMS "ETOKEN"'                                 00158600
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00158700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00158800
.ZG5A             ANOP  ,                                               00158900
.*-------------------------------------------------------------------   00159000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00159100
&ZXETOKEN         SETC  'INPUT'     SET IN/OUTPUT                       00159200
&XETOKEN          SETC  '&ETOKEN(1)'            SET XVARIABLE           00159300
                  AIF   (N'&ETOKEN GT 1).ZG5B   MULTI PARMS             00159400
&XETOKEN          SETC  '&ETOKEN'   SET XVARIABLE                       00159500
.ZG5B             AIF   (K'&ETOKEN(1) GT 0).ZG5C                        00159600
&ZXETOKEN         SETC  ''          RESET IN/OUTPUT                     00159700
&ZMS              SETC  ' '         *KRQDA*                             00159800
&ZMS              SETC  '&ZMS "ETOKEN" KEY AND ITS'                     00159900
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00160000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00160100
.ZG5C             ANOP  ,                                               00160200
.*-------------------------------------------------------------------   00160300
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00160400
                  AIF   (K'&ZXETOKEN LE 0).ZG5R  NOT I/O                00160500
                  AIF   ('&XETOKEN'(1,1) NE '(').ZG5R                   00160600
&ZCGPR            SETC  '&XETOKEN'(2,K'&XETOKEN-2)                      00160700
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                     00160800
                  AIF   (K'&ZCGPR GT 2).ZG5Q                            00160900
                  AIF   ('&ZCGPR' EQ '0').ZG5Q                          00161000
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00161100
                  AIF   (T'&ZCGPR NE 'N').ZG5Q  INVALID REG NAME        00161200
.ZG5P             ANOP  ,                                               00161300
                  AIF   (T'&ZCGPR NE 'N').ZG5R  NON NUMERIC             00161400
                  AIF   ('&ZCGPR' LT '2').ZG5Q                          00161500
                  AIF   ('&ZCGPR' LE '12').ZG5R                         00161600
.ZG5Q             ANOP  ,                                               00161700
&ZMS              SETC  '"ETOKEN='  *KGPRA* MNOTE                       00161800
&ZMS              SETC  '&ZMS.&ETOKEN"'                                 00161900
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00162000
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00162100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00162200
.ZG5R             ANOP  ,                                               00162300
.*----------------------------------------------------------------***   00162400
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00162500
                  AIF   (N'&USERDATA LE 1).ZG8A  CK NUM                 00162600
&ZMS              SETC  '"USERDATA='            *KPOSA* MNOTE           00162700
&ZMS              SETC  '&ZMS.&USERDATA"'                               00162800
&ZMS              SETC  '&ZMS "USERDATA"'                               00162900
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00163000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00163100
.ZG8A             ANOP  ,                                               00163200
.*-------------------------------------------------------------------   00163300
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00163400
&ZXUSERDATA       SETC  'INPUT'     SET IN/OUTPUT                       00163500
&XUSERDATA        SETC  '&USERDATA(1)'          SET XVARIABLE           00163600
                  AIF   (N'&USERDATA GT 1).ZG8B  MULTI PARMS            00163700
&XUSERDATA        SETC  '&USERDATA'             SET XVARIABLE           00163800
.ZG8B             AIF   (K'&USERDATA(1) GT 0).ZG8C                      00163900
&ZXUSERDATA       SETC  ''          RESET IN/OUTPUT                     00164000
&ZMS              SETC  ' '         *KRQDA*                             00164100
&ZMS              SETC  '&ZMS "USERDATA" KEY AND ITS'                   00164200
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00164300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00164400
.ZG8C             ANOP  ,                                               00164500
.*-------------------------------------------------------------------   00164600
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00164700
                  AIF   (K'&ZXUSERDATA LE 0).ZG8R  NOT I/O              00164800
                  AIF   ('&XUSERDATA'(1,1) NE '(').ZG8R                 00164900
&ZCGPR            SETC  '&XUSERDATA'(2,K'&XUSERDATA-2)                  00165000
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                     00165100
                  AIF   (K'&ZCGPR GT 2).ZG8Q                            00165200
                  AIF   ('&ZCGPR' EQ '0').ZG8Q                          00165300
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00165400
                  AIF   (T'&ZCGPR NE 'N').ZG8Q  INVALID REG NAME        00165500
.ZG8P             ANOP  ,                                               00165600
                  AIF   (T'&ZCGPR NE 'N').ZG8R  NON NUMERIC             00165700
                  AIF   ('&ZCGPR' LT '2').ZG8Q                          00165800
                  AIF   ('&ZCGPR' LE '12').ZG8R                         00165900
.ZG8Q             ANOP  ,                                               00166000
&ZMS              SETC  '"USERDATA='            *KGPRA* MNOTE           00166100
&ZMS              SETC  '&ZMS.&USERDATA"'                               00166200
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00166300
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00166400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00166500
.ZG8R             ANOP  ,                                               00166600
.*----------------------------------------------------------------***   00166700
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00166800
                  AIF   (N'&APPLENV LE 1).ZG11A  CK NUM                 00166900
&ZMS              SETC  '"APPLENV='             *KPOSA* MNOTE           00167000
&ZMS              SETC  '&ZMS.&APPLENV"'                                00167100
&ZMS              SETC  '&ZMS "APPLENV"'                                00167200
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00167300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00167400
.ZG11A            ANOP  ,                                               00167500
.*-------------------------------------------------------------------   00167600
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00167700
&ZXAPPLENV        SETC  'INPUT'     SET IN/OUTPUT                       00167800
&XAPPLENV         SETC  '&APPLENV(1)'           SET XVARIABLE           00167900
                  AIF   (N'&APPLENV GT 1).ZG11B  MULTI PARMS            00168000
&XAPPLENV         SETC  '&APPLENV'  SET XVARIABLE                       00168100
.ZG11B            AIF   (K'&APPLENV(1) GT 0).ZG11C                      00168200
&ZXAPPLENV        SETC  ''          RESET IN/OUTPUT                     00168300
&ZMS              SETC  ' '         *KRQDA*                             00168400
&ZMS              SETC  '&ZMS "APPLENV" KEY AND ITS'                    00168500
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00168600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00168700
.ZG11C            ANOP  ,                                               00168800
.*-------------------------------------------------------------------   00168900
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00169000
                  AIF   (K'&ZXAPPLENV LE 0).ZG11R  NOT I/O              00169100
                  AIF   ('&XAPPLENV'(1,1) NE '(').ZG11R                 00169200
&ZCGPR            SETC  '&XAPPLENV'(2,K'&XAPPLENV-2)                    00169300
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                    00169400
                  AIF   (K'&ZCGPR GT 2).ZG11Q                           00169500
                  AIF   ('&ZCGPR' EQ '0').ZG11Q                         00169600
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00169700
                  AIF   (T'&ZCGPR NE 'N').ZG11Q  INVALID REG NAME       00169800
.ZG11P            ANOP  ,                                               00169900
                  AIF   (T'&ZCGPR NE 'N').ZG11R  NON NUMERIC            00170000
                  AIF   ('&ZCGPR' LT '2').ZG11Q                         00170100
                  AIF   ('&ZCGPR' LE '12').ZG11R                        00170200
.ZG11Q            ANOP  ,                                               00170300
&ZMS              SETC  '"APPLENV='             *KGPRA* MNOTE           00170400
&ZMS              SETC  '&ZMS.&APPLENV"'                                00170500
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00170600
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00170700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00170800
.ZG11R            ANOP  ,                                               00170900
.*------------------------------------------------------------------    00171000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00171100
&XDYNAMIC         SETC  ''          INITIALIZE XVARIABLE                00171200
.*-------------------------------------------------------------------   00171300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00171400
.ZG14             ANOP  ,                                               00171500
                  AIF   (K'&DYNAMIC(1) LE 0).ZG14A                      00171600
&ZTLC             SETC 'NO'                                             00171700
                  AIF   ('&DYNAMIC(1)' NE '&ZTLC').ZG15                 00171800
&XDYNAMIC         SETC  'NO'        SET KEYWORD                         00171900
                  AIF   (N'&DYNAMIC LE 1).ZG14A  CK NUM                 00172000
&ZMS              SETC  '"DYNAMIC='             *KPOSA* MNOTE           00172100
&ZMS              SETC  '&ZMS.&DYNAMIC"'                                00172200
&ZMS              SETC  '&ZMS "DYNAMIC"'                                00172300
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00172400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00172500
.ZG14A            ANOP  ,                                               00172600
.*-------------------------------------------------------------------   00172700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00172800
.ZG15             ANOP  ,                                               00172900
&ZTLC             SETC 'YES'                                            00173000
                  AIF   ('&DYNAMIC(1)' NE '&ZTLC').ZG16                 00173100
&XDYNAMIC         SETC  'YES'       SET KEYWORD                         00173200
                  AIF   (N'&DYNAMIC LE 1).ZG15A  CK NUM                 00173300
&ZMS              SETC  '"DYNAMIC='             *KPOSA* MNOTE           00173400
&ZMS              SETC  '&ZMS.&DYNAMIC"'                                00173500
&ZMS              SETC  '&ZMS "DYNAMIC"'                                00173600
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00173700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00173800
.ZG15A            ANOP  ,                                               00173900
.*------------------------------------------------------------------    00174000
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00174100
.ZG16             ANOP  ,                                               00174200
&ZXDYNAMIC        SETC  'INPUT'     SET IN/OUTPUT                       00174300
                  AIF   (K'&XDYNAMIC GT 0).ZG16E  VALID ARG             00174400
                  AIF   (T'&DYNAMIC EQ 'O').ZG16D  OMITTED              00174500
&ZASYSLNDX        SETA  0                                               00174600
.ZG16A            ANOP  ,           POSITIONAL MACRO KEY                00174700
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00174800
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG16C                00174900
&ZTLC             SETC 'DYNAMIC'                                        00175000
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG16A       00175100
.ZG16B            ANOP  ,                                               00175200
&ZXDYNAMIC        SETC  ''          RESET IN/OUTPUT                     00175300
&ZMS              SETC  'THE "DYNAMIC" KEY'     *KOPTA* MNOTE           00175400
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00175500
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00175600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00175700
                  AGO   .ZG16E                                          00175800
.ZG16C            ANOP  ,                                               00175900
&ZXDYNAMIC        SETC  ''          RESET IN/OUTPUT                     00176000
&ZMS              SETC  '"DYNAMIC='             *KUKWA* MNOTE           00176100
&ZMS              SETC  '&ZMS.&DYNAMIC"'                                00176200
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00176300
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00176400
&ZMS              SETC  '&ZMS "NO"'                                     00176500
&ZMS              SETC  '&ZMS OR "YES".'                                00176600
                  MNOTE 8,' &ZMS '                                      00176700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00176800
                  AGO   .ZG16E                                          00176900
.ZG16D            ANOP  ,                                               00177000
&XDYNAMIC         SETC  'NO'        SET DEFAULT KEYWORD                 00177100
.ZG16E            ANOP  ,                                               00177200
.*------------------------------------------------------------------    00177300
.***AG.KKCTL07 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00177400
                  AIF   (K'&APPLENV(1) GT 0).ZG16F  KEY                 00177500
                  AIF   (K'&DYNAMIC(1) LE 0).ZG16F  PARM                00177600
&ZMS              SETC  '"DYNAMIC'  *KDEPA* MNOTE                       00177700
&ZMS              SETC  '&ZMS.=&DYNAMIC"'                               00177800
&ZMS              SETC  '&ZMS CAN ONLY BE SPECIFIED IF'                 00177900
&ZMS              SETC  '&ZMS '                                         00178000
&ZMS              SETC  '&ZMS "APPLENV"'                                00178100
                  MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                    00178200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00178300
.ZG16F            ANOP  ,                                               00178400
.*------------------------------------------------------------------    00178500
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00178600
&XDEPENDENT       SETC  ''          INITIALIZE XVARIABLE                00178700
.*-------------------------------------------------------------------   00178800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00178900
.ZG20             ANOP  ,                                               00179000
                  AIF   (K'&DEPENDENT(1) LE 0).ZG20A                    00179100
&ZTLC             SETC 'NO'                                             00179200
                  AIF   ('&DEPENDENT(1)' NE '&ZTLC').ZG21               00179300
&XDEPENDENT       SETC  'NO'        SET KEYWORD                         00179400
                  AIF   (N'&DEPENDENT LE 1).ZG20A  CK NUM               00179500
&ZMS              SETC  '"DEPENDENT='           *KPOSA* MNOTE           00179600
&ZMS              SETC  '&ZMS.&DEPENDENT"'                              00179700
&ZMS              SETC  '&ZMS "DEPENDENT"'                              00179800
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00179900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00180000
.ZG20A            ANOP  ,                                               00180100
.*-------------------------------------------------------------------   00180200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00180300
.ZG21             ANOP  ,                                               00180400
&ZTLC             SETC 'YES'                                            00180500
                  AIF   ('&DEPENDENT(1)' NE '&ZTLC').ZG22               00180600
&XDEPENDENT       SETC  'YES'       SET KEYWORD                         00180700
                  AIF   (N'&DEPENDENT LE 1).ZG21A  CK NUM               00180800
&ZMS              SETC  '"DEPENDENT='           *KPOSA* MNOTE           00180900
&ZMS              SETC  '&ZMS.&DEPENDENT"'                              00181000
&ZMS              SETC  '&ZMS "DEPENDENT"'                              00181100
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00181200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00181300
.ZG21A            ANOP  ,                                               00181400
.*------------------------------------------------------------------    00181500
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00181600
.ZG22             ANOP  ,                                               00181700
&ZXDEPENDENT      SETC  'INPUT'     SET IN/OUTPUT                       00181800
                  AIF   (K'&XDEPENDENT GT 0).ZG22E  VALID ARG           00181900
                  AIF   (T'&DEPENDENT EQ 'O').ZG22D  OMITTED            00182000
&ZASYSLNDX        SETA  0                                               00182100
.ZG22A            ANOP  ,           POSITIONAL MACRO KEY                00182200
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00182300
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG22C                00182400
&ZTLC             SETC 'DEPENDENT'                                      00182500
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG22A       00182600
.ZG22B            ANOP  ,                                               00182700
&ZXDEPENDENT      SETC  ''          RESET IN/OUTPUT                     00182800
&ZMS              SETC  'THE "DEPENDENT" KEY'   *KOPTA* MNOTE           00182900
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00183000
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00183100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00183200
                  AGO   .ZG22E                                          00183300
.ZG22C            ANOP  ,                                               00183400
&ZXDEPENDENT      SETC  ''          RESET IN/OUTPUT                     00183500
&ZMS              SETC  '"DEPENDENT='           *KUKWA* MNOTE           00183600
&ZMS              SETC  '&ZMS.&DEPENDENT"'                              00183700
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00183800
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00183900
&ZMS              SETC  '&ZMS "NO"'                                     00184000
&ZMS              SETC  '&ZMS OR "YES".'                                00184100
                  MNOTE 8,' &ZMS '                                      00184200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00184300
                  AGO   .ZG22E                                          00184400
.ZG22D            ANOP  ,                                               00184500
&XDEPENDENT       SETC  'NO'        SET DEFAULT KEYWORD                 00184600
.ZG22E            ANOP  ,                                               00184700
.*------------------------------------------------------------------    00184800
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00184900
&XSECUSER         SETC  ''          INITIALIZE XVARIABLE                00185000
.*-------------------------------------------------------------------   00185100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00185200
.ZG25             ANOP  ,                                               00185300
                  AIF   (K'&SECUSER(1) LE 0).ZG25A                      00185400
&ZTLC             SETC 'NO'                                             00185500
                  AIF   ('&SECUSER(1)' NE '&ZTLC').ZG26                 00185600
&XSECUSER         SETC  'NO'        SET KEYWORD                         00185700
                  AIF   (N'&SECUSER LE 1).ZG25A  CK NUM                 00185800
&ZMS              SETC  '"SECUSER='             *KPOSA* MNOTE           00185900
&ZMS              SETC  '&ZMS.&SECUSER"'                                00186000
&ZMS              SETC  '&ZMS "SECUSER"'                                00186100
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00186200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00186300
.ZG25A            ANOP  ,                                               00186400
.*------------------------------------------------------------------    00186500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00186600
&ZCVAL            SETC ''           CLEAR ERROR KEY ACCUMULATOR         00186700
.ZG25A0           AIF   (K'&USERID LE 0).ZG25A1  OK                     00186800
&ZCVAL            SETC '&ZCVAL USERID'          INCORRECT KEY USED      00186900
.ZG25A1           AIF   (K'&ZCVAL LE 0).ZG25A2  OK                      00187000
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)                           00187100
&ZMS              SETC  '"SECUSER'  *KMEIA* MNOTE                       00187200
&ZMS              SETC  '&ZMS.=&SECUSER"'                               00187300
&ZMS              SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'            00187400
                  MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'            00187500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00187600
.ZG25A2           ANOP  ,                                               00187700
.*-------------------------------------------------------------------   00187800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00187900
.ZG26             ANOP  ,                                               00188000
&ZTLC             SETC 'YES'                                            00188100
                  AIF   ('&SECUSER(1)' NE '&ZTLC').ZG30                 00188200
&XSECUSER         SETC  'YES'       SET KEYWORD                         00188300
                  AIF   (N'&SECUSER LE 1).ZG26A  CK NUM                 00188400
&ZMS              SETC  '"SECUSER='             *KPOSA* MNOTE           00188500
&ZMS              SETC  '&ZMS.&SECUSER"'                                00188600
&ZMS              SETC  '&ZMS "SECUSER"'                                00188700
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00188800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00188900
.ZG26A            ANOP  ,                                               00189000
.*----------------------------------------------------------------***   00189100
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00189200
                  AIF   (N'&USERID LE 1).ZG28A  CK NUM                  00189300
&ZMS              SETC  '"USERID='  *KPOSA* MNOTE                       00189400
&ZMS              SETC  '&ZMS.&USERID"'                                 00189500
&ZMS              SETC  '&ZMS "USERID"'                                 00189600
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00189700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00189800
.ZG28A            ANOP  ,                                               00189900
.*-------------------------------------------------------------------   00190000
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00190100
&ZXUSERID         SETC  'INPUT'     SET IN/OUTPUT                       00190200
&XUSERID          SETC  '&USERID(1)'            SET XVARIABLE           00190300
                  AIF   (N'&USERID GT 1).ZG28B  MULTI PARMS             00190400
&XUSERID          SETC  '&USERID'   SET XVARIABLE                       00190500
.ZG28B            AIF   (K'&USERID(1) GT 0).ZG28C                       00190600
&ZXUSERID         SETC  ''          RESET IN/OUTPUT                     00190700
&ZMS              SETC  'WHEN "YES" IS SPECIFIED'  *KRQDA*              00190800
&ZMS              SETC  '&ZMS , "USERID" KEY AND ITS'                   00190900
                  MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                00191000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00191100
.ZG28C            ANOP  ,                                               00191200
.*-------------------------------------------------------------------   00191300
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00191400
                  AIF   (K'&ZXUSERID LE 0).ZG28R  NOT I/O               00191500
                  AIF   ('&XUSERID'(1,1) NE '(').ZG28R                  00191600
&ZCGPR            SETC  '&XUSERID'(2,K'&XUSERID-2)                      00191700
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG28P                    00191800
                  AIF   (K'&ZCGPR GT 2).ZG28Q                           00191900
                  AIF   ('&ZCGPR' EQ '0').ZG28Q                         00192000
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00192100
                  AIF   (T'&ZCGPR NE 'N').ZG28Q  INVALID REG NAME       00192200
.ZG28P            ANOP  ,                                               00192300
                  AIF   (T'&ZCGPR NE 'N').ZG28R  NON NUMERIC            00192400
                  AIF   ('&ZCGPR' LT '2').ZG28Q                         00192500
                  AIF   ('&ZCGPR' LE '12').ZG28R                        00192600
.ZG28Q            ANOP  ,                                               00192700
&ZMS              SETC  '"USERID='  *KGPRA* MNOTE                       00192800
&ZMS              SETC  '&ZMS.&USERID"'                                 00192900
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00193000
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00193100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00193200
.ZG28R            ANOP  ,                                               00193300
.*------------------------------------------------------------------    00193400
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00193500
.ZG30             ANOP  ,                                               00193600
&ZXSECUSER        SETC  'INPUT'     SET IN/OUTPUT                       00193700
                  AIF   (K'&XSECUSER GT 0).ZG30E  VALID ARG             00193800
                  AIF   (T'&SECUSER EQ 'O').ZG30D  OMITTED              00193900
&ZASYSLNDX        SETA  0                                               00194000
.ZG30A            ANOP  ,           POSITIONAL MACRO KEY                00194100
&ZASYSLNDX        SETA  &ZASYSLNDX+1                                    00194200
                  AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG30C                00194300
&ZTLC             SETC 'SECUSER'                                        00194400
                  AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG30A       00194500
.ZG30B            ANOP  ,                                               00194600
&ZXSECUSER        SETC  ''          RESET IN/OUTPUT                     00194700
&ZMS              SETC  'THE "SECUSER" KEY'     *KOPTA* MNOTE           00194800
&ZMS              SETC  '&ZMS MUST CONTAIN ONE'                         00194900
                  MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                00195000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00195100
                  AGO   .ZG30E                                          00195200
.ZG30C            ANOP  ,                                               00195300
&ZXSECUSER        SETC  ''          RESET IN/OUTPUT                     00195400
&ZMS              SETC  '"SECUSER='             *KUKWA* MNOTE           00195500
&ZMS              SETC  '&ZMS.&SECUSER"'                                00195600
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00195700
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00195800
&ZMS              SETC  '&ZMS "NO"'                                     00195900
&ZMS              SETC  '&ZMS OR "YES".'                                00196000
                  MNOTE 8,' &ZMS '                                      00196100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00196200
                  AGO   .ZG30E                                          00196300
.ZG30D            ANOP  ,                                               00196400
&XSECUSER         SETC  'NO'        SET DEFAULT KEYWORD                 00196500
.ZG30E            ANOP  ,                                               00196600
.*-------------------------------------------------------------------   00196700
.***AG.KMOUT01 BYPASS CHECK ON OUTPUT KEY PROCESSING -START             00196800
                  AIF   ('&XMF' EQ 'M').ZG33    BYPASS IF MF=M          00196900
.*----------------------------------------------------------------***   00197000
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00197100
                  AIF   (N'&WLMWUTKN LE 1).ZG32A  CK NUM                00197200
&ZMS              SETC  '"WLMWUTKN='            *KPOSA* MNOTE           00197300
&ZMS              SETC  '&ZMS.&WLMWUTKN"'                               00197400
&ZMS              SETC  '&ZMS "WLMWUTKN"'                               00197500
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00197600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00197700
.ZG32A            ANOP  ,                                               00197800
.*-------------------------------------------------------------------   00197900
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00198000
                  AIF   (K'&WLMWUTKN(1) LE 0).ZG32C  NO PARM            00198100
&ZXWLMWUTKN       SETC  'OUTPUT'    SET OUTPUT                          00198200
&XWLMWUTKN        SETC  '&WLMWUTKN(1)'          SET XVARIABLE           00198300
                  AIF   (N'&WLMWUTKN GT 1).ZG32C                        00198400
&XWLMWUTKN        SETC  '&WLMWUTKN'             SET XVARIABLE           00198500
.ZG32C            ANOP  ,                                               00198600
.*-------------------------------------------------------------------   00198700
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00198800
                  AIF   (K'&ZXWLMWUTKN LE 0).ZG32R  NOT I/O             00198900
                  AIF   ('&XWLMWUTKN'(1,1) NE '(').ZG32R                00199000
&ZCGPR            SETC  '&XWLMWUTKN'(2,K'&XWLMWUTKN-2)                  00199100
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG32P                    00199200
                  AIF   (K'&ZCGPR GT 2).ZG32Q                           00199300
                  AIF   ('&ZCGPR' EQ '0').ZG32Q                         00199400
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00199500
                  AIF   (T'&ZCGPR NE 'N').ZG32Q  INVALID REG NAME       00199600
.ZG32P            ANOP  ,                                               00199700
                  AIF   (T'&ZCGPR NE 'N').ZG32R  NON NUMERIC            00199800
                  AIF   ('&ZCGPR' LT '2').ZG32Q                         00199900
                  AIF   ('&ZCGPR' LE '12').ZG32R                        00200000
.ZG32Q            ANOP  ,                                               00200100
&ZMS              SETC  '"WLMWUTKN='            *KGPRA* MNOTE           00200200
&ZMS              SETC  '&ZMS.&WLMWUTKN"'                               00200300
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00200400
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00200500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00200600
.ZG32R            ANOP  ,                                               00200700
.*-------------------------------------------------------------------   00200800
.***AG.KMOUT02 BYPASS CHECK ON OUTPUT KEY PROCESSING -END               00200900
.ZG33             ANOP  ,           END OF BYPASS CHECK                 00201000
.*----------------------------------------------------------------***   00201100
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00201200
                  AIF   (N'&SERVER_TOKEN LE 1).ZG35A  CK NUM            00201300
&ZMS              SETC  '"SERVER_TOKEN='        *KPOSA* MNOTE           00201400
&ZMS              SETC  '&ZMS.&SERVER_TOKEN"'                           00201500
&ZMS              SETC  '&ZMS "SERVER_TOKEN"'                           00201600
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00201700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00201800
.ZG35A            ANOP  ,                                               00201900
.*-------------------------------------------------------------------   00202000
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00202100
&ZXSERVER_TOKEN   SETC  'INPUT'     SET IN/OUTPUT                       00202200
&XSERVER_TOKEN    SETC  '0'                                             00202300
                  AIF   (K'&SERVER_TOKEN(1) LE 0).ZG35B  PARM           00202400
&XSERVER_TOKEN    SETC  '&SERVER_TOKEN(1)'      SET XVARIABLE           00202500
                  AIF   (N'&SERVER_TOKEN GT 1).ZG35B  MULTI PARMS       00202600
&XSERVER_TOKEN    SETC  '&SERVER_TOKEN'         SET XVARIABLE           00202700
.ZG35B            ANOP  ,                                               00202800
.*-------------------------------------------------------------------   00202900
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00203000
                  AIF   (K'&ZXSERVER_TOKEN LE 0).ZG35R  NOT I/O         00203100
                  AIF   ('&XSERVER_TOKEN'(1,1) NE '(').ZG35R            00203200
&ZCGPR            SETC  '&XSERVER_TOKEN'(2,K'&XSERVER_TOKEN-2)          00203300
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG35P                    00203400
                  AIF   (K'&ZCGPR GT 2).ZG35Q                           00203500
                  AIF   ('&ZCGPR' EQ '0').ZG35Q                         00203600
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00203700
                  AIF   (T'&ZCGPR NE 'N').ZG35Q  INVALID REG NAME       00203800
.ZG35P            ANOP  ,                                               00203900
                  AIF   (T'&ZCGPR NE 'N').ZG35R  NON NUMERIC            00204000
                  AIF   ('&ZCGPR' LT '2').ZG35Q                         00204100
                  AIF   ('&ZCGPR' LE '12').ZG35R                        00204200
.ZG35Q            ANOP  ,                                               00204300
&ZMS              SETC  '"SERVER_TOKEN='        *KGPRA* MNOTE           00204400
&ZMS              SETC  '&ZMS.&SERVER_TOKEN"'                           00204500
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00204600
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00204700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00204800
.ZG35R            ANOP  ,                                               00204900
.*----------------------------------------------------------------***   00205000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00205100
                  AIF   (N'&REGION_TOKEN LE 1).ZG38A  CK NUM            00205200
&ZMS              SETC  '"REGION_TOKEN='        *KPOSA* MNOTE           00205300
&ZMS              SETC  '&ZMS.&REGION_TOKEN"'                           00205400
&ZMS              SETC  '&ZMS "REGION_TOKEN"'                           00205500
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00205600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00205700
.ZG38A            ANOP  ,                                               00205800
.*-------------------------------------------------------------------   00205900
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00206000
&ZXREGION_TOKEN   SETC  'INPUT'     SET IN/OUTPUT                       00206100
&XREGION_TOKEN    SETC  '0'                                             00206200
                  AIF   (K'&REGION_TOKEN(1) LE 0).ZG38B  PARM           00206300
&XREGION_TOKEN    SETC  '&REGION_TOKEN(1)'      SET XVARIABLE           00206400
                  AIF   (N'&REGION_TOKEN GT 1).ZG38B  MULTI PARMS       00206500
&XREGION_TOKEN    SETC  '&REGION_TOKEN'         SET XVARIABLE           00206600
.ZG38B            ANOP  ,                                               00206700
.*-------------------------------------------------------------------   00206800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00206900
                  AIF   (K'&ZXREGION_TOKEN LE 0).ZG38R  NOT I/O         00207000
                  AIF   ('&XREGION_TOKEN'(1,1) NE '(').ZG38R            00207100
&ZCGPR            SETC  '&XREGION_TOKEN'(2,K'&XREGION_TOKEN-2)          00207200
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG38P                    00207300
                  AIF   (K'&ZCGPR GT 2).ZG38Q                           00207400
                  AIF   ('&ZCGPR' EQ '0').ZG38Q                         00207500
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00207600
                  AIF   (T'&ZCGPR NE 'N').ZG38Q  INVALID REG NAME       00207700
.ZG38P            ANOP  ,                                               00207800
                  AIF   (T'&ZCGPR NE 'N').ZG38R  NON NUMERIC            00207900
                  AIF   ('&ZCGPR' LT '2').ZG38Q                         00208000
                  AIF   ('&ZCGPR' LE '12').ZG38R                        00208100
.ZG38Q            ANOP  ,                                               00208200
&ZMS              SETC  '"REGION_TOKEN='        *KGPRA* MNOTE           00208300
&ZMS              SETC  '&ZMS.&REGION_TOKEN"'                           00208400
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00208500
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00208600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00208700
.ZG38R            ANOP  ,                                               00208800
.*----------------------------------------------------------------***   00208900
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00209000
                  AIF   (N'&RETCODE LE 1).ZG41A  CK NUM                 00209100
&ZMS              SETC  '"RETCODE='             *KPOSA* MNOTE           00209200
&ZMS              SETC  '&ZMS.&RETCODE"'                                00209300
&ZMS              SETC  '&ZMS "RETCODE"'                                00209400
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00209500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00209600
.ZG41A            ANOP  ,                                               00209700
.*-------------------------------------------------------------------   00209800
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00209900
                  AIF   (K'&RETCODE(1) LE 0).ZG41C  NO PARM             00210000
&ZXRETCODE        SETC  'OUTPUT'    SET OUTPUT                          00210100
&XRETCODE         SETC  '&RETCODE(1)'           SET XVARIABLE           00210200
                  AIF   (N'&RETCODE GT 1).ZG41C                         00210300
&XRETCODE         SETC  '&RETCODE'  SET XVARIABLE                       00210400
.ZG41C            ANOP  ,                                               00210500
.*-------------------------------------------------------------------   00210600
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00210700
                  AIF   (K'&ZXRETCODE LE 0).ZG41R  NOT I/O              00210800
                  AIF   ('&XRETCODE'(1,1) NE '(').ZG41R                 00210900
&ZCGPR            SETC  '&XRETCODE'(2,K'&XRETCODE-2)                    00211000
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG41P                    00211100
                  AIF   (K'&ZCGPR GT 2).ZG41Q                           00211200
                  AIF   ('&ZCGPR' EQ '0').ZG41Q                         00211300
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00211400
                  AIF   (T'&ZCGPR NE 'N').ZG41Q  INVALID REG NAME       00211500
.ZG41P            ANOP  ,                                               00211600
                  AIF   (T'&ZCGPR NE 'N').ZG41R  NON NUMERIC            00211700
                  AIF   ('&ZCGPR' LT '2').ZG41Q                         00211800
                  AIF   ('&ZCGPR' LE '12').ZG41R                        00211900
.ZG41Q            ANOP  ,                                               00212000
&ZMS              SETC  '"RETCODE='             *KGPRA* MNOTE           00212100
&ZMS              SETC  '&ZMS.&RETCODE"'                                00212200
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00212300
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00212400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00212500
.ZG41R            ANOP  ,                                               00212600
.*----------------------------------------------------------------***   00212700
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00212800
                  AIF   (N'&RSNCODE LE 1).ZG44A  CK NUM                 00212900
&ZMS              SETC  '"RSNCODE='             *KPOSA* MNOTE           00213000
&ZMS              SETC  '&ZMS.&RSNCODE"'                                00213100
&ZMS              SETC  '&ZMS "RSNCODE"'                                00213200
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00213300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00213400
.ZG44A            ANOP  ,                                               00213500
.*-------------------------------------------------------------------   00213600
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00213700
                  AIF   (K'&RSNCODE(1) LE 0).ZG44C  NO PARM             00213800
&ZXRSNCODE        SETC  'OUTPUT'    SET OUTPUT                          00213900
&XRSNCODE         SETC  '&RSNCODE(1)'           SET XVARIABLE           00214000
                  AIF   (N'&RSNCODE GT 1).ZG44C                         00214100
&XRSNCODE         SETC  '&RSNCODE'  SET XVARIABLE                       00214200
.ZG44C            ANOP  ,                                               00214300
.*-------------------------------------------------------------------   00214400
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00214500
                  AIF   (K'&ZXRSNCODE LE 0).ZG44R  NOT I/O              00214600
                  AIF   ('&XRSNCODE'(1,1) NE '(').ZG44R                 00214700
&ZCGPR            SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                    00214800
                  AIF   ('&ZCGPR'(1,1) NE '0').ZG44P                    00214900
                  AIF   (K'&ZCGPR GT 2).ZG44Q                           00215000
                  AIF   ('&ZCGPR' EQ '0').ZG44Q                         00215100
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00215200
                  AIF   (T'&ZCGPR NE 'N').ZG44Q  INVALID REG NAME       00215300
.ZG44P            ANOP  ,                                               00215400
                  AIF   (T'&ZCGPR NE 'N').ZG44R  NON NUMERIC            00215500
                  AIF   ('&ZCGPR' LT '2').ZG44Q                         00215600
                  AIF   ('&ZCGPR' LE '12').ZG44R                        00215700
.ZG44Q            ANOP  ,                                               00215800
&ZMS              SETC  '"RSNCODE='             *KGPRA* MNOTE           00215900
&ZMS              SETC  '&ZMS.&RSNCODE"'                                00216000
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00216100
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00216200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00216300
.ZG44R            ANOP  ,                                               00216400
.******************************************************************     00216500
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00216600
.******************************************************************     00216700
                  ACTR  10000                                           00216800
.*----------------------------------------------------------------***   00216900
.***AH.P02 EXTRA POSITIONALS                                            00217000
                  AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS            00217100
                  AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL            00217200
                  AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL        00217300
                  AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL         00217400
.ZGLISTX1         ANOP  ,                                               00217500
&ZCVAL            SETC  ''          ERROR FIELD                         00217600
&ZAWRK            SETA  0           POSITIONAL NUMBER                   00217700
.ZGLIST2          ANOP  ,                                               00217800
&ZAWRK            SETA  &ZAWRK+1    NEXT POSITIONAL                     00217900
                  AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE            00218000
&ZCVAL            SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                 00218100
                  AGO   .ZGLIST2                                        00218200
.*                                                                      00218300
.ZGLIST3          ANOP  ,                                               00218400
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)   STRIP COMMA             00218500
&ZMS              SETC  'POSITIONAL ARGUMENT(S),'  *PPOSA* MNOTE        00218600
&ZMS              SETC  '&ZMS "&ZCVAL"'                                 00218700
&ZMS              SETC  '&ZMS CANNOT BE USED.'                          00218800
&ZMS              SETC  '&ZMS NO POSITIONAL ARGUMENTS'                  00218900
                  MNOTE 8,' &ZMS ARE ALLOWED.'                          00219000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00219100
.ZGLISTX          ANOP  ,                                               00219200
&ZASYSLNDX        SETA  0                                               00219300
.*-------------------------------------------------------------------   00219400
.***AG.MF04 MF=(SLME)                                                   00219500
.ZGMFX            ANOP  ,           END OF FULL SYNTAX CHECK            00219600
.********************************************************************   00219700
.***AE.MF01   PARTIAL MACRO SYNTAX CHECKING                             00219800
.********************************************************************   00219900
                  ACTR  10000                                           00220000
.*-------------------------------------------------------------------   00220100
.***AE.MF01 MF=(SLME)                                                   00220200
                  AIF   ('&XMF' EQ 'L').ZEMFX                           00220300
                  AIF   ('&XMFSCK' NE 'NOCHECK').ZEMFX                  00220400
.********************************************************************   00220500
.***AE.KC00 INITIALIZE KEYWORD CONTROL VARIABLES                        00220600
.********************************************************************   00220700
&XDYNAMIC         SETC  ''          INITIALIZE XVARIABLE                00220800
&XDEPENDENT       SETC  ''          INITIALIZE XVARIABLE                00220900
&XSECUSER         SETC  ''          INITIALIZE XVARIABLE                00221000
.*----------------------------------------------------------------***   00221100
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                          00221200
                  AIF   (N'&CONNTKN LE 1).ZE2A  CK NUM                  00221300
&ZMS              SETC  '"CONNTKN='             *KPOSA* MNOTE           00221400
&ZMS              SETC  '&ZMS.&CONNTKN"'                                00221500
&ZMS              SETC  '&ZMS "CONNTKN"'                                00221600
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00221700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00221800
.ZE2A             ANOP  ,                                               00221900
.*-------------------------------------------------------------------   00222000
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                     00222100
                  AIF   (K'&CONNTKN(1) LE 0).ZE2B NO PRM                00222200
&ZXCONNTKN        SETC  'INPUT'     SET IN/OUTPUT                       00222300
&XCONNTKN         SETC  '&CONNTKN(1)'           SET XVARIABLE           00222400
                  AIF   (N'&CONNTKN GT 1).ZE2B                          00222500
.*                ANOP              MULTIPLE PARMS                      00222600
&XCONNTKN         SETC  '&CONNTKN'  SET XVARIABLE                       00222700
.ZE2B             ANOP  ,                                               00222800
.*-------------------------------------------------------------------   00222900
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00223000
                  AIF   (K'&ZXCONNTKN LE 0).ZE2R  NOT I/O               00223100
                  AIF   ('&XCONNTKN'(1,1) NE '(').ZE2R                  00223200
&ZCGPR            SETC  '&XCONNTKN'(2,K'&XCONNTKN-2)                    00223300
                  AIF   ('&ZCGPR'(1,1) NE '0').ZE2P                     00223400
                  AIF   (K'&ZCGPR GT 2).ZE2Q                            00223500
                  AIF   ('&ZCGPR' EQ '0').ZE2Q                          00223600
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00223700
                  AIF   (T'&ZCGPR NE 'N').ZE2Q  INVALID REG NAME        00223800
.ZE2P             ANOP  ,                                               00223900
                  AIF   (T'&ZCGPR NE 'N').ZE2R  NON NUMERIC             00224000
                  AIF   ('&ZCGPR' LT '2').ZE2Q                          00224100
                  AIF   ('&ZCGPR' LE '12').ZE2R                         00224200
.ZE2Q             ANOP  ,                                               00224300
&ZMS              SETC  '"CONNTKN='             *KGPRA* MNOTE           00224400
&ZMS              SETC  '&ZMS.&CONNTKN"'                                00224500
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00224600
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00224700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00224800
.ZE2R             ANOP  ,                                               00224900
.*----------------------------------------------------------------***   00225000
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                          00225100
                  AIF   (N'&ETOKEN LE 1).ZE5A   CK NUM                  00225200
&ZMS              SETC  '"ETOKEN='  *KPOSA* MNOTE                       00225300
&ZMS              SETC  '&ZMS.&ETOKEN"'                                 00225400
&ZMS              SETC  '&ZMS "ETOKEN"'                                 00225500
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00225600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00225700
.ZE5A             ANOP  ,                                               00225800
.*-------------------------------------------------------------------   00225900
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                     00226000
                  AIF   (K'&ETOKEN(1) LE 0).ZE5B NO PRM                 00226100
&ZXETOKEN         SETC  'INPUT'     SET IN/OUTPUT                       00226200
&XETOKEN          SETC  '&ETOKEN(1)'            SET XVARIABLE           00226300
                  AIF   (N'&ETOKEN GT 1).ZE5B                           00226400
.*                ANOP              MULTIPLE PARMS                      00226500
&XETOKEN          SETC  '&ETOKEN'   SET XVARIABLE                       00226600
.ZE5B             ANOP  ,                                               00226700
.*-------------------------------------------------------------------   00226800
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00226900
                  AIF   (K'&ZXETOKEN LE 0).ZE5R  NOT I/O                00227000
                  AIF   ('&XETOKEN'(1,1) NE '(').ZE5R                   00227100
&ZCGPR            SETC  '&XETOKEN'(2,K'&XETOKEN-2)                      00227200
                  AIF   ('&ZCGPR'(1,1) NE '0').ZE5P                     00227300
                  AIF   (K'&ZCGPR GT 2).ZE5Q                            00227400
                  AIF   ('&ZCGPR' EQ '0').ZE5Q                          00227500
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00227600
                  AIF   (T'&ZCGPR NE 'N').ZE5Q  INVALID REG NAME        00227700
.ZE5P             ANOP  ,                                               00227800
                  AIF   (T'&ZCGPR NE 'N').ZE5R  NON NUMERIC             00227900
                  AIF   ('&ZCGPR' LT '2').ZE5Q                          00228000
                  AIF   ('&ZCGPR' LE '12').ZE5R                         00228100
.ZE5Q             ANOP  ,                                               00228200
&ZMS              SETC  '"ETOKEN='  *KGPRA* MNOTE                       00228300
&ZMS              SETC  '&ZMS.&ETOKEN"'                                 00228400
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00228500
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00228600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00228700
.ZE5R             ANOP  ,                                               00228800
.*----------------------------------------------------------------***   00228900
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                          00229000
                  AIF   (N'&USERDATA LE 1).ZE8A  CK NUM                 00229100
&ZMS              SETC  '"USERDATA='            *KPOSA* MNOTE           00229200
&ZMS              SETC  '&ZMS.&USERDATA"'                               00229300
&ZMS              SETC  '&ZMS "USERDATA"'                               00229400
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00229500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00229600
.ZE8A             ANOP  ,                                               00229700
.*-------------------------------------------------------------------   00229800
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                     00229900
                  AIF   (K'&USERDATA(1) LE 0).ZE8B NO PRM               00230000
&ZXUSERDATA       SETC  'INPUT'     SET IN/OUTPUT                       00230100
&XUSERDATA        SETC  '&USERDATA(1)'          SET XVARIABLE           00230200
                  AIF   (N'&USERDATA GT 1).ZE8B                         00230300
.*                ANOP              MULTIPLE PARMS                      00230400
&XUSERDATA        SETC  '&USERDATA'             SET XVARIABLE           00230500
.ZE8B             ANOP  ,                                               00230600
.*-------------------------------------------------------------------   00230700
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00230800
                  AIF   (K'&ZXUSERDATA LE 0).ZE8R  NOT I/O              00230900
                  AIF   ('&XUSERDATA'(1,1) NE '(').ZE8R                 00231000
&ZCGPR            SETC  '&XUSERDATA'(2,K'&XUSERDATA-2)                  00231100
                  AIF   ('&ZCGPR'(1,1) NE '0').ZE8P                     00231200
                  AIF   (K'&ZCGPR GT 2).ZE8Q                            00231300
                  AIF   ('&ZCGPR' EQ '0').ZE8Q                          00231400
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00231500
                  AIF   (T'&ZCGPR NE 'N').ZE8Q  INVALID REG NAME        00231600
.ZE8P             ANOP  ,                                               00231700
                  AIF   (T'&ZCGPR NE 'N').ZE8R  NON NUMERIC             00231800
                  AIF   ('&ZCGPR' LT '2').ZE8Q                          00231900
                  AIF   ('&ZCGPR' LE '12').ZE8R                         00232000
.ZE8Q             ANOP  ,                                               00232100
&ZMS              SETC  '"USERDATA='            *KGPRA* MNOTE           00232200
&ZMS              SETC  '&ZMS.&USERDATA"'                               00232300
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00232400
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00232500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00232600
.ZE8R             ANOP  ,                                               00232700
.*----------------------------------------------------------------***   00232800
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                          00232900
                  AIF   (N'&APPLENV LE 1).ZE11A  CK NUM                 00233000
&ZMS              SETC  '"APPLENV='             *KPOSA* MNOTE           00233100
&ZMS              SETC  '&ZMS.&APPLENV"'                                00233200
&ZMS              SETC  '&ZMS "APPLENV"'                                00233300
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00233400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00233500
.ZE11A            ANOP  ,                                               00233600
.*-------------------------------------------------------------------   00233700
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                     00233800
                  AIF   (K'&APPLENV(1) LE 0).ZE11B NO PRM               00233900
&ZXAPPLENV        SETC  'INPUT'     SET IN/OUTPUT                       00234000
&XAPPLENV         SETC  '&APPLENV(1)'           SET XVARIABLE           00234100
                  AIF   (N'&APPLENV GT 1).ZE11B                         00234200
.*                ANOP              MULTIPLE PARMS                      00234300
&XAPPLENV         SETC  '&APPLENV'  SET XVARIABLE                       00234400
.ZE11B            ANOP  ,                                               00234500
.*-------------------------------------------------------------------   00234600
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00234700
                  AIF   (K'&ZXAPPLENV LE 0).ZE11R  NOT I/O              00234800
                  AIF   ('&XAPPLENV'(1,1) NE '(').ZE11R                 00234900
&ZCGPR            SETC  '&XAPPLENV'(2,K'&XAPPLENV-2)                    00235000
                  AIF   ('&ZCGPR'(1,1) NE '0').ZE11P                    00235100
                  AIF   (K'&ZCGPR GT 2).ZE11Q                           00235200
                  AIF   ('&ZCGPR' EQ '0').ZE11Q                         00235300
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00235400
                  AIF   (T'&ZCGPR NE 'N').ZE11Q  INVALID REG NAME       00235500
.ZE11P            ANOP  ,                                               00235600
                  AIF   (T'&ZCGPR NE 'N').ZE11R  NON NUMERIC            00235700
                  AIF   ('&ZCGPR' LT '2').ZE11Q                         00235800
                  AIF   ('&ZCGPR' LE '12').ZE11R                        00235900
.ZE11Q            ANOP  ,                                               00236000
&ZMS              SETC  '"APPLENV='             *KGPRA* MNOTE           00236100
&ZMS              SETC  '&ZMS.&APPLENV"'                                00236200
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00236300
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00236400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00236500
.ZE11R            ANOP  ,                                               00236600
.*-------------------------------------------------------------------   00236700
.***AE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00236800
&ZTLC             SETC 'NO'                                             00236900
                  AIF   ('&DYNAMIC(1)' NE '&ZTLC').ZE14A                00237000
&XDYNAMIC         SETC  'NO'        SET KEYWORD                         00237100
                  AIF   (N'&DYNAMIC LE 1).ZE14A  CK NUM                 00237200
&ZMS              SETC  '"DYNAMIC='             *KPOSA* MNOTE           00237300
&ZMS              SETC  '&ZMS.&DYNAMIC"'                                00237400
&ZMS              SETC  '&ZMS "DYNAMIC"'                                00237500
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00237600
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00237700
.ZE14A            ANOP  ,                                               00237800
.*-------------------------------------------------------------------   00237900
.***AE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00238000
&ZTLC             SETC 'YES'                                            00238100
                  AIF   ('&DYNAMIC(1)' NE '&ZTLC').ZE15A                00238200
&XDYNAMIC         SETC  'YES'       SET KEYWORD                         00238300
                  AIF   (N'&DYNAMIC LE 1).ZE15A  CK NUM                 00238400
&ZMS              SETC  '"DYNAMIC='             *KPOSA* MNOTE           00238500
&ZMS              SETC  '&ZMS.&DYNAMIC"'                                00238600
&ZMS              SETC  '&ZMS "DYNAMIC"'                                00238700
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00238800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00238900
.ZE15A            ANOP  ,                                               00239000
.*------------------------------------------------------------------    00239100
.***AE.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00239200
.ZE16             AIF   (K'&XDYNAMIC GT 0).ZE16A                        00239300
                  AIF   (K'&DYNAMIC(1) LE 0).ZE16B                      00239400
&ZMS              SETC  '"DYNAMIC='             *KUKWA* MNOTE           00239500
&ZMS              SETC  '&ZMS.&DYNAMIC"'                                00239600
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00239700
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00239800
&ZMS              SETC  '&ZMS "NO"'                                     00239900
&ZMS              SETC  '&ZMS OR "YES".'                                00240000
                  MNOTE 8,' &ZMS '                                      00240100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00240200
                  AGO   .ZE16B                                          00240300
.*                                                                      00240400
.ZE16A            ANOP  ,                                               00240500
&ZXDYNAMIC        SETC  'INPUT'     SET IN/OUTPUT                       00240600
.ZE16B            ANOP  ,                                               00240700
.*-------------------------------------------------------------------   00240800
.***AE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00240900
&ZTLC             SETC 'NO'                                             00241000
                  AIF   ('&DEPENDENT(1)' NE '&ZTLC').ZE20A              00241100
&XDEPENDENT       SETC  'NO'        SET KEYWORD                         00241200
                  AIF   (N'&DEPENDENT LE 1).ZE20A  CK NUM               00241300
&ZMS              SETC  '"DEPENDENT='           *KPOSA* MNOTE           00241400
&ZMS              SETC  '&ZMS.&DEPENDENT"'                              00241500
&ZMS              SETC  '&ZMS "DEPENDENT"'                              00241600
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00241700
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00241800
.ZE20A            ANOP  ,                                               00241900
.*-------------------------------------------------------------------   00242000
.***AE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00242100
&ZTLC             SETC 'YES'                                            00242200
                  AIF   ('&DEPENDENT(1)' NE '&ZTLC').ZE21A              00242300
&XDEPENDENT       SETC  'YES'       SET KEYWORD                         00242400
                  AIF   (N'&DEPENDENT LE 1).ZE21A  CK NUM               00242500
&ZMS              SETC  '"DEPENDENT='           *KPOSA* MNOTE           00242600
&ZMS              SETC  '&ZMS.&DEPENDENT"'                              00242700
&ZMS              SETC  '&ZMS "DEPENDENT"'                              00242800
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00242900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00243000
.ZE21A            ANOP  ,                                               00243100
.*------------------------------------------------------------------    00243200
.***AE.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00243300
.ZE22             AIF   (K'&XDEPENDENT GT 0).ZE22A                      00243400
                  AIF   (K'&DEPENDENT(1) LE 0).ZE22B                    00243500
&ZMS              SETC  '"DEPENDENT='           *KUKWA* MNOTE           00243600
&ZMS              SETC  '&ZMS.&DEPENDENT"'                              00243700
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00243800
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00243900
&ZMS              SETC  '&ZMS "NO"'                                     00244000
&ZMS              SETC  '&ZMS OR "YES".'                                00244100
                  MNOTE 8,' &ZMS '                                      00244200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00244300
                  AGO   .ZE22B                                          00244400
.*                                                                      00244500
.ZE22A            ANOP  ,                                               00244600
&ZXDEPENDENT      SETC  'INPUT'     SET IN/OUTPUT                       00244700
.ZE22B            ANOP  ,                                               00244800
.*-------------------------------------------------------------------   00244900
.***AE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00245000
&ZTLC             SETC 'NO'                                             00245100
                  AIF   ('&SECUSER(1)' NE '&ZTLC').ZE25A                00245200
&XSECUSER         SETC  'NO'        SET KEYWORD                         00245300
                  AIF   (N'&SECUSER LE 1).ZE25A  CK NUM                 00245400
&ZMS              SETC  '"SECUSER='             *KPOSA* MNOTE           00245500
&ZMS              SETC  '&ZMS.&SECUSER"'                                00245600
&ZMS              SETC  '&ZMS "SECUSER"'                                00245700
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00245800
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00245900
.ZE25A            ANOP  ,                                               00246000
.*-------------------------------------------------------------------   00246100
.***AE.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00246200
&ZTLC             SETC 'YES'                                            00246300
                  AIF   ('&SECUSER(1)' NE '&ZTLC').ZE26A                00246400
&XSECUSER         SETC  'YES'       SET KEYWORD                         00246500
                  AIF   (N'&SECUSER LE 1).ZE26A  CK NUM                 00246600
&ZMS              SETC  '"SECUSER='             *KPOSA* MNOTE           00246700
&ZMS              SETC  '&ZMS.&SECUSER"'                                00246800
&ZMS              SETC  '&ZMS "SECUSER"'                                00246900
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00247000
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00247100
.ZE26A            ANOP  ,                                               00247200
.*----------------------------------------------------------------***   00247300
.***AE.KXVAR03 NAME, RQD INPUT, KEYS -XVAR KEY                          00247400
                  AIF   (N'&USERID LE 1).ZE28A  CK NUM                  00247500
&ZMS              SETC  '"USERID='  *KPOSA* MNOTE                       00247600
&ZMS              SETC  '&ZMS.&USERID"'                                 00247700
&ZMS              SETC  '&ZMS "USERID"'                                 00247800
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00247900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00248000
.ZE28A            ANOP  ,                                               00248100
.*-------------------------------------------------------------------   00248200
.***AE.KXVAR04 NAME, RQD INPUT, KEYS -XVAR ARGUMENT                     00248300
                  AIF   (K'&USERID(1) LE 0).ZE28B NO PRM                00248400
&ZXUSERID         SETC  'INPUT'     SET IN/OUTPUT                       00248500
&XUSERID          SETC  '&USERID(1)'            SET XVARIABLE           00248600
                  AIF   (N'&USERID GT 1).ZE28B                          00248700
.*                ANOP              MULTIPLE PARMS                      00248800
&XUSERID          SETC  '&USERID'   SET XVARIABLE                       00248900
.ZE28B            ANOP  ,                                               00249000
.*-------------------------------------------------------------------   00249100
.***AE.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00249200
                  AIF   (K'&ZXUSERID LE 0).ZE28R  NOT I/O               00249300
                  AIF   ('&XUSERID'(1,1) NE '(').ZE28R                  00249400
&ZCGPR            SETC  '&XUSERID'(2,K'&XUSERID-2)                      00249500
                  AIF   ('&ZCGPR'(1,1) NE '0').ZE28P                    00249600
                  AIF   (K'&ZCGPR GT 2).ZE28Q                           00249700
                  AIF   ('&ZCGPR' EQ '0').ZE28Q                         00249800
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00249900
                  AIF   (T'&ZCGPR NE 'N').ZE28Q  INVALID REG NAME       00250000
.ZE28P            ANOP  ,                                               00250100
                  AIF   (T'&ZCGPR NE 'N').ZE28R  NON NUMERIC            00250200
                  AIF   ('&ZCGPR' LT '2').ZE28Q                         00250300
                  AIF   ('&ZCGPR' LE '12').ZE28R                        00250400
.ZE28Q            ANOP  ,                                               00250500
&ZMS              SETC  '"USERID='  *KGPRA* MNOTE                       00250600
&ZMS              SETC  '&ZMS.&USERID"'                                 00250700
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00250800
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00250900
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00251000
.ZE28R            ANOP  ,                                               00251100
.*------------------------------------------------------------------    00251200
.***AE.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00251300
.ZE30             AIF   (K'&XSECUSER GT 0).ZE30A                        00251400
                  AIF   (K'&SECUSER(1) LE 0).ZE30B                      00251500
&ZMS              SETC  '"SECUSER='             *KUKWA* MNOTE           00251600
&ZMS              SETC  '&ZMS.&SECUSER"'                                00251700
&ZMS              SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '       00251800
&ZMS              SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'             00251900
&ZMS              SETC  '&ZMS "NO"'                                     00252000
&ZMS              SETC  '&ZMS OR "YES".'                                00252100
                  MNOTE 8,' &ZMS '                                      00252200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00252300
                  AGO   .ZE30B                                          00252400
.*                                                                      00252500
.ZE30A            ANOP  ,                                               00252600
&ZXSECUSER        SETC  'INPUT'     SET IN/OUTPUT                       00252700
.ZE30B            ANOP  ,                                               00252800
.*----------------------------------------------------------------***   00252900
.***AE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVAR KEY                         00253000
                  AIF   (N'&WLMWUTKN LE 1).ZE32A  CK NUM                00253100
&ZMS              SETC  '"WLMWUTKN='            *KPOSA* MNOTE           00253200
&ZMS              SETC  '&ZMS.&WLMWUTKN"'                               00253300
&ZMS              SETC  '&ZMS "WLMWUTKN"'                               00253400
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00253500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00253600
.ZE32A            ANOP  ,                                               00253700
.*-------------------------------------------------------------------   00253800
.***AE.KXVAR04 NAME, OPT OUTPUT, KEYS -XVAR ARGUMENT                    00253900
                  AIF   (K'&WLMWUTKN(1) LE 0).ZE32B NO PRM              00254000
&ZXWLMWUTKN       SETC  'OUTPUT'    SET IN/OUTPUT                       00254100
&XWLMWUTKN        SETC  '&WLMWUTKN(1)'          SET XVARIABLE           00254200
                  AIF   (N'&WLMWUTKN GT 1).ZE32B                        00254300
.*                ANOP              MULTIPLE PARMS                      00254400
&XWLMWUTKN        SETC  '&WLMWUTKN'             SET XVARIABLE           00254500
.ZE32B            ANOP  ,                                               00254600
.*-------------------------------------------------------------------   00254700
.***AE.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00254800
                  AIF   (K'&ZXWLMWUTKN LE 0).ZE32R  NOT I/O             00254900
                  AIF   ('&XWLMWUTKN'(1,1) NE '(').ZE32R                00255000
&ZCGPR            SETC  '&XWLMWUTKN'(2,K'&XWLMWUTKN-2)                  00255100
                  AIF   ('&ZCGPR'(1,1) NE '0').ZE32P                    00255200
                  AIF   (K'&ZCGPR GT 2).ZE32Q                           00255300
                  AIF   ('&ZCGPR' EQ '0').ZE32Q                         00255400
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00255500
                  AIF   (T'&ZCGPR NE 'N').ZE32Q  INVALID REG NAME       00255600
.ZE32P            ANOP  ,                                               00255700
                  AIF   (T'&ZCGPR NE 'N').ZE32R  NON NUMERIC            00255800
                  AIF   ('&ZCGPR' LT '2').ZE32Q                         00255900
                  AIF   ('&ZCGPR' LE '12').ZE32R                        00256000
.ZE32Q            ANOP  ,                                               00256100
&ZMS              SETC  '"WLMWUTKN='            *KGPRA* MNOTE           00256200
&ZMS              SETC  '&ZMS.&WLMWUTKN"'                               00256300
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00256400
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00256500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00256600
.ZE32R            ANOP  ,                                               00256700
.*----------------------------------------------------------------***   00256800
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          00256900
                  AIF   (N'&SERVER_TOKEN LE 1).ZE35A  CK NUM            00257000
&ZMS              SETC  '"SERVER_TOKEN='        *KPOSA* MNOTE           00257100
&ZMS              SETC  '&ZMS.&SERVER_TOKEN"'                           00257200
&ZMS              SETC  '&ZMS "SERVER_TOKEN"'                           00257300
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00257400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00257500
.ZE35A            ANOP  ,                                               00257600
.*-------------------------------------------------------------------   00257700
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     00257800
                  AIF   (K'&SERVER_TOKEN(1) LE 0).ZE35B NO PRM          00257900
&ZXSERVER_TOKEN   SETC  'INPUT'     SET IN/OUTPUT                       00258000
&XSERVER_TOKEN    SETC  '&SERVER_TOKEN(1)'      SET XVARIABLE           00258100
                  AIF   (N'&SERVER_TOKEN GT 1).ZE35B                    00258200
.*                ANOP              MULTIPLE PARMS                      00258300
&XSERVER_TOKEN    SETC  '&SERVER_TOKEN'         SET XVARIABLE           00258400
.ZE35B            ANOP  ,                                               00258500
.*-------------------------------------------------------------------   00258600
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00258700
                  AIF   (K'&ZXSERVER_TOKEN LE 0).ZE35R  NOT I/O         00258800
                  AIF   ('&XSERVER_TOKEN'(1,1) NE '(').ZE35R            00258900
&ZCGPR            SETC  '&XSERVER_TOKEN'(2,K'&XSERVER_TOKEN-2)          00259000
                  AIF   ('&ZCGPR'(1,1) NE '0').ZE35P                    00259100
                  AIF   (K'&ZCGPR GT 2).ZE35Q                           00259200
                  AIF   ('&ZCGPR' EQ '0').ZE35Q                         00259300
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00259400
                  AIF   (T'&ZCGPR NE 'N').ZE35Q  INVALID REG NAME       00259500
.ZE35P            ANOP  ,                                               00259600
                  AIF   (T'&ZCGPR NE 'N').ZE35R  NON NUMERIC            00259700
                  AIF   ('&ZCGPR' LT '2').ZE35Q                         00259800
                  AIF   ('&ZCGPR' LE '12').ZE35R                        00259900
.ZE35Q            ANOP  ,                                               00260000
&ZMS              SETC  '"SERVER_TOKEN='        *KGPRA* MNOTE           00260100
&ZMS              SETC  '&ZMS.&SERVER_TOKEN"'                           00260200
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00260300
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00260400
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00260500
.ZE35R            ANOP  ,                                               00260600
.*----------------------------------------------------------------***   00260700
.***AE.KXVAR03 NAME, OPT INPUT, KEYS -XVAR KEY                          00260800
                  AIF   (N'&REGION_TOKEN LE 1).ZE38A  CK NUM            00260900
&ZMS              SETC  '"REGION_TOKEN='        *KPOSA* MNOTE           00261000
&ZMS              SETC  '&ZMS.&REGION_TOKEN"'                           00261100
&ZMS              SETC  '&ZMS "REGION_TOKEN"'                           00261200
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00261300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00261400
.ZE38A            ANOP  ,                                               00261500
.*-------------------------------------------------------------------   00261600
.***AE.KXVAR04 NAME, OPT INPUT, KEYS -XVAR ARGUMENT                     00261700
                  AIF   (K'&REGION_TOKEN(1) LE 0).ZE38B NO PRM          00261800
&ZXREGION_TOKEN   SETC  'INPUT'     SET IN/OUTPUT                       00261900
&XREGION_TOKEN    SETC  '&REGION_TOKEN(1)'      SET XVARIABLE           00262000
                  AIF   (N'&REGION_TOKEN GT 1).ZE38B                    00262100
.*                ANOP              MULTIPLE PARMS                      00262200
&XREGION_TOKEN    SETC  '&REGION_TOKEN'         SET XVARIABLE           00262300
.ZE38B            ANOP  ,                                               00262400
.*-------------------------------------------------------------------   00262500
.***AE.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00262600
                  AIF   (K'&ZXREGION_TOKEN LE 0).ZE38R  NOT I/O         00262700
                  AIF   ('&XREGION_TOKEN'(1,1) NE '(').ZE38R            00262800
&ZCGPR            SETC  '&XREGION_TOKEN'(2,K'&XREGION_TOKEN-2)          00262900
                  AIF   ('&ZCGPR'(1,1) NE '0').ZE38P                    00263000
                  AIF   (K'&ZCGPR GT 2).ZE38Q                           00263100
                  AIF   ('&ZCGPR' EQ '0').ZE38Q                         00263200
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00263300
                  AIF   (T'&ZCGPR NE 'N').ZE38Q  INVALID REG NAME       00263400
.ZE38P            ANOP  ,                                               00263500
                  AIF   (T'&ZCGPR NE 'N').ZE38R  NON NUMERIC            00263600
                  AIF   ('&ZCGPR' LT '2').ZE38Q                         00263700
                  AIF   ('&ZCGPR' LE '12').ZE38R                        00263800
.ZE38Q            ANOP  ,                                               00263900
&ZMS              SETC  '"REGION_TOKEN='        *KGPRA* MNOTE           00264000
&ZMS              SETC  '&ZMS.&REGION_TOKEN"'                           00264100
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00264200
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00264300
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00264400
.ZE38R            ANOP  ,                                               00264500
.*----------------------------------------------------------------***   00264600
.***AE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVAR KEY                         00264700
                  AIF   (N'&RETCODE LE 1).ZE41A  CK NUM                 00264800
&ZMS              SETC  '"RETCODE='             *KPOSA* MNOTE           00264900
&ZMS              SETC  '&ZMS.&RETCODE"'                                00265000
&ZMS              SETC  '&ZMS "RETCODE"'                                00265100
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00265200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00265300
.ZE41A            ANOP  ,                                               00265400
.*-------------------------------------------------------------------   00265500
.***AE.KXVAR04 NAME, OPT OUTPUT, KEYS -XVAR ARGUMENT                    00265600
                  AIF   (K'&RETCODE(1) LE 0).ZE41B NO PRM               00265700
&ZXRETCODE        SETC  'OUTPUT'    SET IN/OUTPUT                       00265800
&XRETCODE         SETC  '&RETCODE(1)'           SET XVARIABLE           00265900
                  AIF   (N'&RETCODE GT 1).ZE41B                         00266000
.*                ANOP              MULTIPLE PARMS                      00266100
&XRETCODE         SETC  '&RETCODE'  SET XVARIABLE                       00266200
.ZE41B            ANOP  ,                                               00266300
.*-------------------------------------------------------------------   00266400
.***AE.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00266500
                  AIF   (K'&ZXRETCODE LE 0).ZE41R  NOT I/O              00266600
                  AIF   ('&XRETCODE'(1,1) NE '(').ZE41R                 00266700
&ZCGPR            SETC  '&XRETCODE'(2,K'&XRETCODE-2)                    00266800
                  AIF   ('&ZCGPR'(1,1) NE '0').ZE41P                    00266900
                  AIF   (K'&ZCGPR GT 2).ZE41Q                           00267000
                  AIF   ('&ZCGPR' EQ '0').ZE41Q                         00267100
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00267200
                  AIF   (T'&ZCGPR NE 'N').ZE41Q  INVALID REG NAME       00267300
.ZE41P            ANOP  ,                                               00267400
                  AIF   (T'&ZCGPR NE 'N').ZE41R  NON NUMERIC            00267500
                  AIF   ('&ZCGPR' LT '2').ZE41Q                         00267600
                  AIF   ('&ZCGPR' LE '12').ZE41R                        00267700
.ZE41Q            ANOP  ,                                               00267800
&ZMS              SETC  '"RETCODE='             *KGPRA* MNOTE           00267900
&ZMS              SETC  '&ZMS.&RETCODE"'                                00268000
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00268100
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00268200
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00268300
.ZE41R            ANOP  ,                                               00268400
.*----------------------------------------------------------------***   00268500
.***AE.KXVAR03 NAME, OPT OUTPUT, KEYS -XVAR KEY                         00268600
                  AIF   (N'&RSNCODE LE 1).ZE44A  CK NUM                 00268700
&ZMS              SETC  '"RSNCODE='             *KPOSA* MNOTE           00268800
&ZMS              SETC  '&ZMS.&RSNCODE"'                                00268900
&ZMS              SETC  '&ZMS "RSNCODE"'                                00269000
                  MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'             00269100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00269200
.ZE44A            ANOP  ,                                               00269300
.*-------------------------------------------------------------------   00269400
.***AE.KXVAR04 NAME, OPT OUTPUT, KEYS -XVAR ARGUMENT                    00269500
                  AIF   (K'&RSNCODE(1) LE 0).ZE44B NO PRM               00269600
&ZXRSNCODE        SETC  'OUTPUT'    SET IN/OUTPUT                       00269700
&XRSNCODE         SETC  '&RSNCODE(1)'           SET XVARIABLE           00269800
                  AIF   (N'&RSNCODE GT 1).ZE44B                         00269900
.*                ANOP              MULTIPLE PARMS                      00270000
&XRSNCODE         SETC  '&RSNCODE'  SET XVARIABLE                       00270100
.ZE44B            ANOP  ,                                               00270200
.*-------------------------------------------------------------------   00270300
.***AE.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00270400
                  AIF   (K'&ZXRSNCODE LE 0).ZE44R  NOT I/O              00270500
                  AIF   ('&XRSNCODE'(1,1) NE '(').ZE44R                 00270600
&ZCGPR            SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                    00270700
                  AIF   ('&ZCGPR'(1,1) NE '0').ZE44P                    00270800
                  AIF   (K'&ZCGPR GT 2).ZE44Q                           00270900
                  AIF   ('&ZCGPR' EQ '0').ZE44Q                         00271000
&ZCGPR            SETC  '&ZCGPR'(2,1)                                   00271100
                  AIF   (T'&ZCGPR NE 'N').ZE44Q  INVALID REG NAME       00271200
.ZE44P            ANOP  ,                                               00271300
                  AIF   (T'&ZCGPR NE 'N').ZE44R  NON NUMERIC            00271400
                  AIF   ('&ZCGPR' LT '2').ZE44Q                         00271500
                  AIF   ('&ZCGPR' LE '12').ZE44R                        00271600
.ZE44Q            ANOP  ,                                               00271700
&ZMS              SETC  '"RSNCODE='             *KGPRA* MNOTE           00271800
&ZMS              SETC  '&ZMS.&RSNCODE"'                                00271900
&ZMS              SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'       00272000
                  MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                00272100
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00272200
.ZE44R            ANOP  ,                                               00272300
.******************************************************************     00272400
.***AF.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00272500
.******************************************************************     00272600
                  ACTR  10000                                           00272700
.*----------------------------------------------------------------***   00272800
.***AF.P02 EXTRA POSITIONALS                                            00272900
                  AIF   (N'&SYSLIST LE 0).ZELISTX  NO EXTRAS            00273000
&ZCVAL            SETC  ''          ERROR FIELD                         00273100
&ZAWRK            SETA  0           POSITIONAL NUMBER                   00273200
.ZELIST2          ANOP  ,                                               00273300
&ZAWRK            SETA  &ZAWRK+1    NEXT POSITIONAL                     00273400
                  AIF   (&ZAWRK GT N'&SYSLIST).ZELIST3  DONE            00273500
&ZCVAL            SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                 00273600
                  AGO   .ZELIST2                                        00273700
.*                                                                      00273800
.ZELIST3          ANOP  ,                                               00273900
&ZCVAL            SETC '&ZCVAL'(2,K'&ZCVAL-1)   STRIP COMMA             00274000
&ZMS              SETC  'POSITIONAL ARGUMENT(S),'  *PPOSA* MNOTE        00274100
&ZMS              SETC  '&ZMS "&ZCVAL"'                                 00274200
&ZMS              SETC  '&ZMS CANNOT BE USED.'                          00274300
&ZMS              SETC  '&ZMS NO POSITIONAL ARGUMENTS'                  00274400
                  MNOTE 8,' &ZMS ARE ALLOWED.'                          00274500
&ZMACRET          SETA  8           SET MACRO ERROR RETURN CODE         00274600
.ZELISTX          ANOP  ,                                               00274700
&ZASYSLNDX        SETA  0                                               00274800
.*-------------------------------------------------------------------   00274900
.***AE.MF02 MF=(SLME)                                                   00275000
.ZEMFX            ANOP  ,           END OF PARTIAL SYNTAX CHECK         00275100
.*******************************************************************    00275200
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00275300
.*******************************************************************    00275400
                  AIF   (&ZMACRET NE 0).ZLX2    ERROR DETECTED          00275500
.*******************************************************************    00275600
.***AE.01  START OF IWMQINS MACRO CODE                                  00275700
.*******************************************************************    00275800
                  LCLC  &M0M0001                 NAME                   00275900
&M0M0001          SETC  '&XLABEL'                SET NAME               00276000
                  AIF   (K'&XLABEL NE 0).XLAB2                          00276100
&M0M0001          SETC  'M00M&SYSNDX'            DEFAULT NAME           00276200
.*                                                                      00276300
.XLAB2            ANOP  ,                                               00276400
                  AIF   ('&XMF' EQ 'L').XLAB3                           00276500
&M0M0001 DS    0H                             IWMQINS-3                 00276600
.XLAB3            ANOP  ,                                               00276700
.*******************************************************************    00276800
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00276900
.*******************************************************************    00277000
              PUSH  PRINT                                               00277100
                  AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON      00277200
                  PRINT OFF         ++ PR01                             00277300
                  AGO   .ZPRNTXX                                        00277400
.ZPRINTX          PRINT ON                                              00277500
.ZPRNTXX          ANOP  ,                                               00277600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00277700
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00277800
.********************************************************************   00277900
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00278000
.********************************************************************   00278100
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00278200
                      LCLA  &ZOPN1         INVOCATION INDEX             00278300
                      LCLC  &ZOPL(4095)    LABEL                        00278400
                      LCLC  &ZOPO(4095)    OPERATION                    00278500
                      LCLC  &ZOPV(4095)    VALUE                        00278600
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00278700
.*                                                                      00278800
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00278900
.******************************************************************     00279000
.***AL.L10 IWMQINS FMT=LIST MF=S!L PARAMETERS                           00279100
.******************************************************************     00279200
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00279300
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00279400
&XMFCTRL              SETC  '#Z'.'&SYSNDX'.'A'                          00279500
&XMFATTR              SETC  '0D'                                        00279600
.*                                                                      00279700
&ZOPN                 SETA  &ZOPN+1                                     00279800
&ZOPL(&ZOPN)          SETC  ' '                                         00279900
                      AIF   (&SYSALVL NE 0).ZALVL6A                     00280000
&ZOPO(&ZOPN)          SETC  'B'                                         00280100
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00280200
                      AGO   .ZALVL6B                                    00280300
.ZALVL6A              ANOP                                              00280400
&ZOPO(&ZOPN)          SETC  'CNOP'                                      00280500
&ZOPV(&ZOPN)          SETC  '4,8'                                       00280600
&ZOPN                 SETA  &ZOPN+1                                     00280700
&ZOPL(&ZOPN)          SETC  ' '                                         00280800
&ZOPO(&ZOPN)          SETC  'BRAS'                                      00280900
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              00281000
.ZALVL6B              ANOP                                              00281100
&ZOPD(&ZOPN)          SETC  '++ IWMQINS ARG PARMS'                      00281200
.*                                                                      00281300
&ZOPN                 SETA  &ZOPN+1                                     00281400
&ZOPL(&ZOPN)          SETC  ' '                                         00281500
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00281600
&ZOPV(&ZOPN)          SETC  '1'                                         00281700
&ZOPD(&ZOPN)          SETC  ' '                                         00281800
.*                                                                      00281900
.ZLMFSL2              ANOP  ,                                           00282000
.*-------------------------------------------------------------------   00282100
.***AM.L00  IWMQINS FMT=LIST name                                       00282200
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00282300
&ZOPN                 SETA &ZOPN+1                                      00282400
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00282500
&ZOPO(&ZOPN)          SETC 'EQU'                                        00282600
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00282700
&ZOPD(&ZOPN)          SETC '++ IWMQINS NAME'                            00282800
.ZLMFSL2M             ANOP  ,                                           00282900
.*-------------------------------------------------------------------   00283000
.***AM.L01  IWMQINS FMT=LIST PARAMETERS                                 00283100
&ZOPN                 SETA &ZOPN+1                                      00283200
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00283300
&ZOPO(&ZOPN)          SETC 'DS'                                         00283400
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00283500
&ZOPD(&ZOPN)          SETC '++ IWMQINS PARM LIST'                       00283600
.*-------------------------------------------------------------------   00283700
.***AM.L02 XVERSION XL1                                                 00283800
&ZOPN                 SETA &ZOPN+1                                      00283900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00284000
&ZOPO(&ZOPN)          SETC 'DS'                                         00284100
&ZOPV(&ZOPN)          SETC 'XL1'                                        00284200
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00284300
.*-------------------------------------------------------------------   00284400
.***AM.L09  XOPTIONS BL.8                                               00284500
&ZOPN                 SETA &ZOPN+1                                      00284600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XOPTIONS'                         00284700
&ZOPO(&ZOPN)          SETC 'DS'                                         00284800
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00284900
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL  XOPTIONS'                   00285000
.*-------------------------------------------------------------------   00285100
.***AM.L09  XPLISTLEN XL2                                               00285200
&ZOPN                 SETA &ZOPN+1                                      00285300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPLISTLEN'                        00285400
&ZOPO(&ZOPN)          SETC 'DS'                                         00285500
&ZOPV(&ZOPN)          SETC 'XL2'                                        00285600
&ZOPD(&ZOPN)          SETC '++ INPUT  XPLISTLEN'                        00285700
.*-------------------------------------------------------------------   00285800
.***AM.L09  XCONNTKN BL.32                                              00285900
&ZOPN                 SETA &ZOPN+1                                      00286000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCONNTKN'                         00286100
&ZOPO(&ZOPN)          SETC 'DS'                                         00286200
&ZOPV(&ZOPN)          SETC 'BL.32'                                      00286300
&ZOPD(&ZOPN)          SETC '++ &ZXCONNTKN  XCONNTKN'                    00286400
.*-------------------------------------------------------------------   00286500
.***AM.L09  XETOKEN CL8                                                 00286600
&ZOPN                 SETA &ZOPN+1                                      00286700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XETOKEN'                          00286800
&ZOPO(&ZOPN)          SETC 'DS'                                         00286900
&ZOPV(&ZOPN)          SETC 'CL8'                                        00287000
&ZOPD(&ZOPN)          SETC '++ &ZXETOKEN  XETOKEN'                      00287100
.*-------------------------------------------------------------------   00287200
.***AM.L09  XUSERDATA CL16                                              00287300
&ZOPN                 SETA &ZOPN+1                                      00287400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XUSERDATA'                        00287500
&ZOPO(&ZOPN)          SETC 'DS'                                         00287600
&ZOPV(&ZOPN)          SETC 'CL16'                                       00287700
&ZOPD(&ZOPN)          SETC '++ &ZXUSERDATA  XUSERDATA'                  00287800
.*-------------------------------------------------------------------   00287900
.***AM.L09 ADDR XAPPLENV A                                              00288000
&ZOPN                 SETA &ZOPN+1                                      00288100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XAPPLENV_ADDR'                    00288200
&ZOPO(&ZOPN)          SETC 'DS'                                         00288300
&ZOPV(&ZOPN)          SETC 'A'                                          00288400
&ZOPD(&ZOPN)          SETC '++ &ZXAPPLENV ADDR XAPPLENV'                00288500
.*-------------------------------------------------------------------   00288600
.***AM.L03 XSECUSER_OPTIONS BL.8                                        00288700
&ZOPN                 SETA &ZOPN+1                                      00288800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSECUSER_OPTIONS'                 00288900
&ZOPO(&ZOPN)          SETC 'DS'                                         00289000
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00289100
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00289200
.*                                                                      00289300
&ZOPN                 SETA  &ZOPN+1                                     00289400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSECUSER_YES'                    00289500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00289600
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00289700
&ZOPD(&ZOPN)          SETC  '++ XSECUSER.'                              00289800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00289900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00290000
.*                                                                      00290100
&ZOPN                 SETA  &ZOPN+1                                     00290200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XDYNAMIC_YES'                    00290300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00290400
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00290500
&ZOPD(&ZOPN)          SETC  '++ XDYNAMIC.'                              00290600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00290700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00290800
.*                                                                      00290900
&ZOPN                 SETA  &ZOPN+1                                     00291000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XDEPENDENT_YES'                  00291100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00291200
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             00291300
&ZOPD(&ZOPN)          SETC  '++ XDEPENDENT.'                            00291400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00291500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00291600
.*-------------------------------------------------------------------   00291700
.***AM.L09  XRSV029 CL3                                                 00291800
&ZOPN                 SETA &ZOPN+1                                      00291900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV029'                          00292000
&ZOPO(&ZOPN)          SETC 'DS'                                         00292100
&ZOPV(&ZOPN)          SETC 'CL3'                                        00292200
&ZOPD(&ZOPN)          SETC '++ RESERVED  XRSV029'                       00292300
.*-------------------------------------------------------------------   00292400
.***AM.L09  XUSERID CL8                                                 00292500
&ZOPN                 SETA &ZOPN+1                                      00292600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XUSERID'                          00292700
&ZOPO(&ZOPN)          SETC 'DS'                                         00292800
&ZOPV(&ZOPN)          SETC 'CL8'                                        00292900
&ZOPD(&ZOPN)          SETC '++ &ZXUSERID  XUSERID'                      00293000
.*-------------------------------------------------------------------   00293100
.***AM.L09  XWLMWUTKN CL16                                              00293200
&ZOPN                 SETA &ZOPN+1                                      00293300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XWLMWUTKN'                        00293400
&ZOPO(&ZOPN)          SETC 'DS'                                         00293500
&ZOPV(&ZOPN)          SETC 'CL16'                                       00293600
&ZOPD(&ZOPN)          SETC '++ &ZXWLMWUTKN  XWLMWUTKN'                  00293700
.*-------------------------------------------------------------------   00293800
.***AM.MLM2 SAVED LOCATION COUNTER                                      00293900
                      AIF  (&XPLISTVER GE 1).ZL14LA                     00294000
                      AIF  ('&ZENDBASEPL' NE '').ZL14LA                 00294100
&ZENDBASEPL           SETC 'YES'                                        00294200
&ZOPN                 SETA &ZOPN+1                                      00294300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00294400
&ZOPO(&ZOPN)          SETC 'EQU'                                        00294500
&ZOPV(&ZOPN)          SETC '*'                                          00294600
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00294700
.ZL14LA               ANOP  ,                                           00294800
.*-------------------------------------------------------------------   00294900
.***AM.LVER1                                                            00295000
                      AIF  (&XPLISTVER LT 1).ZL14L                      00295100
.*-------------------------------------------------------------------   00295200
.*-------------------------------------------------------------------   00295300
.***AM.L09  XSERVER_TOKEN CL32                                          00295400
&ZOPN                 SETA &ZOPN+1                                      00295500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSERVER_TOKEN'                    00295600
&ZOPO(&ZOPN)          SETC 'DS'                                         00295700
&ZOPV(&ZOPN)          SETC 'CL32'                                       00295800
&ZOPD(&ZOPN)          SETC '++ &ZXSERVER_TOKEN  XSERVER_TOKEN'          00295900
.*-------------------------------------------------------------------   00296000
.***AM.LVER2                                                            00296100
.ZL14L                ANOP  ,                                           00296200
.*-------------------------------------------------------------------   00296300
.*-------------------------------------------------------------------   00296400
.***AM.MLM2 SAVED LOCATION COUNTER                                      00296500
                      AIF  (&XPLISTVER GE 2).ZL15LA                     00296600
                      AIF  ('&ZENDBASEPL' NE '').ZL15LA                 00296700
&ZENDBASEPL           SETC 'YES'                                        00296800
&ZOPN                 SETA &ZOPN+1                                      00296900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00297000
&ZOPO(&ZOPN)          SETC 'EQU'                                        00297100
&ZOPV(&ZOPN)          SETC '*'                                          00297200
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00297300
.ZL15LA               ANOP  ,                                           00297400
.*-------------------------------------------------------------------   00297500
.***AM.LVER1                                                            00297600
                      AIF  (&XPLISTVER LT 2).ZL15L                      00297700
.*-------------------------------------------------------------------   00297800
.*-------------------------------------------------------------------   00297900
.***AM.L09  XREGION_TOKEN CL16                                          00298000
&ZOPN                 SETA &ZOPN+1                                      00298100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREGION_TOKEN'                    00298200
&ZOPO(&ZOPN)          SETC 'DS'                                         00298300
&ZOPV(&ZOPN)          SETC 'CL16'                                       00298400
&ZOPD(&ZOPN)          SETC '++ &ZXREGION_TOKEN  XREGION_TOKEN'          00298500
.*-------------------------------------------------------------------   00298600
.***AM.LVER2                                                            00298700
.ZL15L                ANOP  ,                                           00298800
.*-------------------------------------------------------------------   00298900
.*-------------------------------------------------------------------   00299000
.***AM.L10 END OF IWMQINS LIST PARAMETERS                               00299100
&ZOPN                 SETA &ZOPN+1                                      00299200
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00299300
&ZOPO(&ZOPN)          SETC 'EQU'                                        00299400
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00299500
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00299600
.*                                                                      00299700
&ZOPN                 SETA &ZOPN+1                                      00299800
&ZOPL(&ZOPN)          SETC ' '                                          00299900
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00300000
&ZOPV(&ZOPN)          SETC '1'                                          00300100
&ZOPD(&ZOPN)          SETC ' '                                          00300200
.*-------------------------------------------------------------------   00300300
.***AL.L12 IWMQINS FMT=LIST MF=S!L PARAMETERS                           00300400
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00300500
.*                                                                      00300600
&ZOPN                 SETA  &ZOPN+1                                     00300700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00300800
&ZOPO(&ZOPN)          SETC  'DC'                                        00300900
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00301000
&ZOPD(&ZOPN)          SETC  '++ IWMQINS ARG PARMS'                      00301100
.*                                                                      00301200
.ZLMFSLX              ANOP  ,                                           00301300
.*-------------------------------------------------------------------   00301400
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00301500
&ZPLLEN               SETA 64                                           00301600
.*                                                                      00301700
                      AIF  (&XPLISTVER LT 1).ZLLEN2Z                    00301800
&ZPLLEN               SETA 96                                           00301900
.ZLLEN2Z              ANOP  ,                                           00302000
.*                                                                      00302100
                      AIF  (&XPLISTVER LT 2).ZLLEN3Z                    00302200
&ZPLLEN               SETA 112                                          00302300
.ZLLEN3Z              ANOP  ,                                           00302400
.*                                                                      00302500
.******************************************************************     00302600
.***AI.L01 IWMQINS FMT=LIST FILL IN PARAMETER AREA                      00302700
.******************************************************************     00302800
                      ACTR  10000                                       00302900
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00303000
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00303100
&ZCVAL                SETC  'LAE'          XAX MODE                     00303200
.ZIMFXA               ANOP ,                                            00303300
.*                                                                      00303400
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00303500
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00303600
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00303700
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00303800
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00303900
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00304000
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00304100
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00304200
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00304300
&ZOPN                 SETA  &ZOPN+1                                     00304400
&ZOPL(&ZOPN)          SETC  ' '                                         00304500
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00304600
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00304700
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00304800
                      AGO   .ZIMFNX                                     00304900
.*                                                                      00305000
.ZIMFN2               ANOP ,                                            00305100
                      AIF   (&SYSALVL EQ 0).ZIMFNX1                     00305200
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     00305300
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  00305400
&ZOPN                 SETA  &ZOPN+1                                     00305500
&ZOPL(&ZOPN)          SETC  ' '                                         00305600
&ZOPO(&ZOPN)          SETC  'LAE'                                       00305700
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  00305800
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00305900
                      AGO   .ZIMFNX                                     00306000
.ZIMFNX1              ANOP ,                                            00306100
&ZOPN                 SETA  &ZOPN+1                                     00306200
&ZOPL(&ZOPN)          SETC  ' '                                         00306300
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00306400
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00306500
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00306600
.ZIMFNX               ANOP ,                                            00306700
.********************************************************************   00306800
.***AI.L02 IWMQINS FMT=LIST INITIALIZE PARAMETER AREA                   00306900
.********************************************************************   00307000
.***AI.L03 MF=(SLME)                                                    00307100
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00307200
                      AIF   ('&XMFSCK' NE 'COMPLETE').ZIMFLX            00307300
.*                                                                      00307400
&ZOPN                 SETA  &ZOPN+1                                     00307500
&ZOPL(&ZOPN)          SETC  ' '                                         00307600
&ZOPO(&ZOPN)          SETC  'XC'                                        00307700
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00307800
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00307900
.ZIMFLX               ANOP  ,                                           00308000
.*-------------------------------------------------------------------   00308100
.***AI.L04A XVERSION XL1                                                00308200
                      AIF   (&XPLISTVER EQ 0).ZIMFVU                    00308300
                      AIF   ('&XMFSCK' EQ 'COMPLETE').ZIMFVV            00308400
.ZIMFVU               ANOP  ,                                           00308500
                      AIF   ('&PLISTVER' EQ '').ZIMFVW                  00308600
                      AIF   ('&XMFSCK' EQ 'COMPLETE').ZIMFVW            00308700
.ZIMFVV               ANOP  ,                                           00308800
&ZOPN                 SETA  &ZOPN+1                                     00308900
&ZOPL(&ZOPN)          SETC  ' '                                         00309000
&ZOPO(&ZOPN)          SETC  'MVI'                                       00309100
&ZOPV(&ZOPN)          SETC  '0(1),&XPLISTVER'                           00309200
&ZOPD(&ZOPN)          SETC  '++ INPUT XVERSION XL1'                     00309300
.ZIMFVW               ANOP  ,                                           00309400
.*-------------------------------------------------------------------   00309500
.***AI.L04 XPLISTLEN XL2                                                00309600
&ZOPN                 SETA  &ZOPN+1                                     00309700
&ZOPL(&ZOPN)          SETC  ' '                                         00309800
&ZOPO(&ZOPN)          SETC  'MVC'                                       00309900
&ZOPV(&ZOPN)          SETC  '2(2,1),=AL2(&ZPLLEN)'                      00310000
&ZOPD(&ZOPN)          SETC  '++ INPUT XPLISTLEN XL2'                    00310100
.*-------------------------------------------------------------------   00310200
.***AI.L25  XCONNTKN XL4                                                00310300
                      AIF   ('&ZXCONNTKN' EQ '').ZI4E                   00310400
                      AIF   ('&ZXCONNTKN' EQ 'OUTPUT').ZI4E             00310500
&ZCGPR                SETC  '&XCONNTKN'                                 00310600
.*                                                                      00310700
                      AIF   ('&XCONNTKN'(1,1) NE '(').ZI4B              00310800
&ZCGPR   SETC  '0('.'&XCONNTKN'(2,K'&XCONNTKN-2).')'                    00310900
                      AGO   .ZI4D                                       00311000
.ZI4B                 ANOP  ,                                           00311100
.*                                                                      00311200
&ZC                   SETC  '&XCONNTKN'(1,1)                            00311300
                      AIF   (T'&ZC NE 'N').ZI4D                         00311400
&ZC                   SETC  '&XCONNTKN'                                 00311500
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI4D                00311600
&ZCGPR                SETC  '=BL4''&XCONNTKN'''                         00311700
.*                                                                      00311800
.ZI4D                 ANOP  ,                                           00311900
.*                                                                      00312000
&ZOPN                 SETA  &ZOPN+1                                     00312100
&ZOPL(&ZOPN)          SETC  ' '                                         00312200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00312300
&ZOPV(&ZOPN)          SETC  '4(4,1),&ZCGPR'                             00312400
&ZOPD(&ZOPN)          SETC  '++ &ZXCONNTKN XCONNTKN'                    00312500
.*                                                                      00312600
.ZI4E                 ANOP  ,                                           00312700
.*-------------------------------------------------------------------   00312800
.***AI.L25  XETOKEN CL8                                                 00312900
                      AIF   ('&ZXETOKEN' EQ '').ZI5E                    00313000
                      AIF   ('&ZXETOKEN' EQ 'OUTPUT').ZI5E              00313100
&ZCGPR                SETC  '&XETOKEN'                                  00313200
.*                                                                      00313300
                      AIF   ('&XETOKEN'(1,1) NE '(').ZI5B               00313400
&ZCGPR   SETC  '0('.'&XETOKEN'(2,K'&XETOKEN-2).')'                      00313500
.ZI5B                 ANOP  ,                                           00313600
.*                                                                      00313700
&ZOPN                 SETA  &ZOPN+1                                     00313800
&ZOPL(&ZOPN)          SETC  ' '                                         00313900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00314000
&ZOPV(&ZOPN)          SETC  '8(8,1),&ZCGPR'                             00314100
&ZOPD(&ZOPN)          SETC  '++ &ZXETOKEN XETOKEN'                      00314200
.*                                                                      00314300
.ZI5E                 ANOP  ,                                           00314400
.*-------------------------------------------------------------------   00314500
.***AI.L25  XUSERDATA CL16                                              00314600
                      AIF   ('&ZXUSERDATA' EQ '').ZI6E                  00314700
                      AIF   ('&ZXUSERDATA' EQ 'OUTPUT').ZI6E            00314800
&ZCGPR                SETC  '&XUSERDATA'                                00314900
.*                                                                      00315000
                      AIF   ('&XUSERDATA'(1,1) NE '(').ZI6B             00315100
&ZCGPR   SETC  '0('.'&XUSERDATA'(2,K'&XUSERDATA-2).')'                  00315200
.ZI6B                 ANOP  ,                                           00315300
.*                                                                      00315400
&ZOPN                 SETA  &ZOPN+1                                     00315500
&ZOPL(&ZOPN)          SETC  ' '                                         00315600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00315700
&ZOPV(&ZOPN)          SETC  '16(16,1),&ZCGPR'                           00315800
&ZOPD(&ZOPN)          SETC  '++ &ZXUSERDATA XUSERDATA'                  00315900
.*                                                                      00316000
.ZI6E                 ANOP  ,                                           00316100
.*-------------------------------------------------------------------   00316200
.***AI.L19 ADDR XAPPLENV A                                              00316300
                      AIF   ('&ZXAPPLENV' EQ '').ZI7H                   00316400
&ZCLNG                SETC  '&XAPPLENV'                                 00316500
&ZCGPR                SETC  '14'                                        00316600
         AIF   ('&XAPPLENV'(1,1) EQ '(').ZI7F  IN GPR                   00316700
.*                                                                      00316800
&ZOPN                 SETA  &ZOPN+1                                     00316900
&ZOPL(&ZOPN)          SETC  ' '                                         00317000
&ZOPO(&ZOPN)          SETC  'LA'                                        00317100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00317200
&ZOPD(&ZOPN)          SETC  '++ &ZXAPPLENV XAPPLENV'                    00317300
.*                                                                      00317400
                      AGO   .ZI7G                                       00317500
.*                                                                      00317600
.ZI7F                 ANOP  ,                                           00317700
&ZCGPR   SETC  '&XAPPLENV'(2,K'&XAPPLENV-2)                             00317800
.*                                                                      00317900
.ZI7G                 ANOP  ,                                           00318000
.*                                                                      00318100
&ZOPN                 SETA  &ZOPN+1                                     00318200
&ZOPL(&ZOPN)          SETC  ' '                                         00318300
&ZOPO(&ZOPN)          SETC  'ST'                                        00318400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,32(,1)'                             00318500
&ZOPD(&ZOPN)          SETC  '++ &ZXAPPLENV XAPPLENV'                    00318600
.*                                                                      00318700
.ZI7H                 ANOP  ,                                           00318800
.*-------------------------------------------------------------------   00318900
.***AI.L05 XSECUSER_OPTIONS BL1                                         00319000
&ZW                   SETC  ''                                          00319100
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00319200
&ZMS                  SETC  ''                                          00319300
&ZC                   SETC  ''                                          00319400
.*-------------------------------------------------------------------   00319500
.***AI.L08 XSECUSER_OPTIONS "YES"                                       00319600
.***      BL1'1XXXXXXX'                                                 00319700
         AIF   ('&XSECUSER' NE 'YES').ZI9A                              00319800
&ZW                   SETC  '&ZW.1'                                     00319900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00320000
&ZMS                  SETC  '&ZMS.1'                                    00320100
                      AGO   .ZI9C                                       00320200
.*                                                                      00320300
.ZI9A                 ANOP  ,                                           00320400
&ZW                   SETC  '&ZW.0'                                     00320500
         AIF   ('&ZXSECUSER' EQ '').ZI9B                                00320600
&ZMS                  SETC  '&ZMS.0'                                    00320700
&ZC                   SETC  'YES'          SET BIT OFF FLAG             00320800
                      AGO   .ZI9C                                       00320900
.*                                                                      00321000
.ZI9B                 ANOP  ,                                           00321100
&ZMS                  SETC  '&ZMS.1'                                    00321200
.ZI9C                 ANOP  ,                                           00321300
.*-------------------------------------------------------------------   00321400
.***AI.L08 XSECUSER_OPTIONS "YES"                                       00321500
.***      BL1'X1XXXXXX'                                                 00321600
         AIF   ('&XDYNAMIC' NE 'YES').ZI10A                             00321700
&ZW                   SETC  '&ZW.1'                                     00321800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00321900
&ZMS                  SETC  '&ZMS.1'                                    00322000
                      AGO   .ZI10C                                      00322100
.*                                                                      00322200
.ZI10A                ANOP  ,                                           00322300
&ZW                   SETC  '&ZW.0'                                     00322400
         AIF   ('&ZXDYNAMIC' EQ '').ZI10B                               00322500
&ZMS                  SETC  '&ZMS.0'                                    00322600
&ZC                   SETC  'YES'          SET BIT OFF FLAG             00322700
                      AGO   .ZI10C                                      00322800
.*                                                                      00322900
.ZI10B                ANOP  ,                                           00323000
&ZMS                  SETC  '&ZMS.1'                                    00323100
.ZI10C                ANOP  ,                                           00323200
.*-------------------------------------------------------------------   00323300
.***AI.L08 XSECUSER_OPTIONS "YES"                                       00323400
.***      BL1'XX1XXXXX'                                                 00323500
         AIF   ('&XDEPENDENT' NE 'YES').ZI11A                           00323600
&ZW                   SETC  '&ZW.100000'                                00323700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00323800
&ZMS                  SETC  '&ZMS.111111'                               00323900
                      AGO   .ZI11C                                      00324000
.*                                                                      00324100
.ZI11A                ANOP  ,                                           00324200
&ZW                   SETC  '&ZW.000000'                                00324300
         AIF   ('&ZXDEPENDENT' EQ '').ZI11B                             00324400
&ZMS                  SETC  '&ZMS.011111'                               00324500
&ZC                   SETC  'YES'          SET BIT OFF FLAG             00324600
                      AGO   .ZI11C                                      00324700
.*                                                                      00324800
.ZI11B                ANOP  ,                                           00324900
&ZMS                  SETC  '&ZMS.111111'                               00325000
.ZI11C                ANOP  ,                                           00325100
.*-------------------------------------------------------------------   00325200
.***AI.L11 XSECUSER_OPTIONS BL1                                         00325300
                      AIF   ('&XMFSCK' NE 'NOCHECK').ZI11D              00325400
                      AIF   ('&ZC' NE 'YES').ZI11D                      00325500
&ZOPN                 SETA  &ZOPN+1                                     00325600
&ZOPL(&ZOPN)          SETC  ' '                                         00325700
&ZOPO(&ZOPN)          SETC  'NI'                                        00325800
&ZOPV(&ZOPN)          SETC  '36(1),B''&ZMS'''                           00325900
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00326000
.ZI11D                ANOP  ,                                           00326100
                      AIF   ('&ZCLNG' NE 'YES').ZI11E  ALL ZERO BITS    00326200
&ZOPN                 SETA  &ZOPN+1                                     00326300
&ZOPL(&ZOPN)          SETC  ' '                                         00326400
&ZOPO(&ZOPN)          SETC  'OI'                                        00326500
&ZOPV(&ZOPN)          SETC  '36(1),B''&ZW'''                            00326600
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00326700
.ZI11E                ANOP  ,                                           00326800
.*-------------------------------------------------------------------   00326900
.***AI.L25  XUSERID CL8                                                 00327000
                      AIF   ('&ZXUSERID' EQ '').ZI13E                   00327100
                      AIF   ('&ZXUSERID' EQ 'OUTPUT').ZI13E             00327200
&ZCGPR                SETC  '&XUSERID'                                  00327300
.*                                                                      00327400
                      AIF   ('&XUSERID'(1,1) NE '(').ZI13B              00327500
&ZCGPR   SETC  '0('.'&XUSERID'(2,K'&XUSERID-2).')'                      00327600
.ZI13B                ANOP  ,                                           00327700
.*                                                                      00327800
&ZOPN                 SETA  &ZOPN+1                                     00327900
&ZOPL(&ZOPN)          SETC  ' '                                         00328000
&ZOPO(&ZOPN)          SETC  'MVC'                                       00328100
&ZOPV(&ZOPN)          SETC  '40(8,1),&ZCGPR'                            00328200
&ZOPD(&ZOPN)          SETC  '++ &ZXUSERID XUSERID'                      00328300
.*                                                                      00328400
.ZI13E                ANOP  ,                                           00328500
.*-------------------------------------------------------------------   00328600
.***AI.LVER01                                                           00328700
                      AIF  (&XPLISTVER LT 1).ZI15Z                      00328800
.*-------------------------------------------------------------------   00328900
.***AI.L25  XSERVER_TOKEN CL32                                          00329000
                      AIF   ('&ZXSERVER_TOKEN' EQ '').ZI15E             00329100
                      AIF   ('&ZXSERVER_TOKEN' EQ 'OUTPUT').ZI15E       00329200
&ZCGPR                SETC  '&XSERVER_TOKEN'                            00329300
         AIF   ('&XSERVER_TOKEN' NE '0').ZI15A                          00329400
         AIF   ('&XMFSCK' EQ 'COMPLETE').ZI15E                          00329500
.*                                                                      00329600
&ZCGPR                SETC  '=XL32''00'''                               00329700
.ZI15A                ANOP  ,                                           00329800
.*                                                                      00329900
                      AIF   ('&XSERVER_TOKEN'(1,1) NE '(').ZI15B        00330000
&ZCGPR   SETC  '0('.'&XSERVER_TOKEN'(2,K'&XSERVER_TOKEN-2).')'          00330100
                      AGO   .ZI15D                                      00330200
.ZI15B                ANOP  ,                                           00330300
.*                                                                      00330400
                      AIF   ('&SERVER_TOKEN(1)' EQ '').ZI15I  OMITTED   00330500
&ZC                   SETC  '0'                                         00330600
                      AIF   ('&XSERVER_TOKEN' NE '&ZC').ZI15C           00330700
.ZI15I                ANOP  ,                                           00330800
&ZCGPR                SETC  '=CL32''&XSERVER_TOKEN'''                   00330900
.ZI15C                ANOP  ,                                           00331000
.*                                                                      00331100
.ZI15D                ANOP  ,                                           00331200
.*                                                                      00331300
&ZOPN                 SETA  &ZOPN+1                                     00331400
&ZOPL(&ZOPN)          SETC  ' '                                         00331500
&ZOPO(&ZOPN)          SETC  'MVC'                                       00331600
&ZOPV(&ZOPN)          SETC  '64(32,1),&ZCGPR'                           00331700
&ZOPD(&ZOPN)          SETC  '++ &ZXSERVER_TOKEN XSERVER_TOKEN'          00331800
.*                                                                      00331900
.ZI15E                ANOP  ,                                           00332000
.*-------------------------------------------------------------------   00332100
.***AI.LVER02                                                           00332200
.ZI15Z                ANOP  ,                                           00332300
.*-------------------------------------------------------------------   00332400
.***AI.LVER01                                                           00332500
                      AIF  (&XPLISTVER LT 2).ZI16Z                      00332600
.*-------------------------------------------------------------------   00332700
.***AI.L25  XREGION_TOKEN CL16                                          00332800
                      AIF   ('&ZXREGION_TOKEN' EQ '').ZI16E             00332900
                      AIF   ('&ZXREGION_TOKEN' EQ 'OUTPUT').ZI16E       00333000
&ZCGPR                SETC  '&XREGION_TOKEN'                            00333100
         AIF   ('&XREGION_TOKEN' NE '0').ZI16A                          00333200
         AIF   ('&XMFSCK' EQ 'COMPLETE').ZI16E                          00333300
.*                                                                      00333400
&ZCGPR                SETC  '=XL16''00'''                               00333500
.ZI16A                ANOP  ,                                           00333600
.*                                                                      00333700
                      AIF   ('&XREGION_TOKEN'(1,1) NE '(').ZI16B        00333800
&ZCGPR   SETC  '0('.'&XREGION_TOKEN'(2,K'&XREGION_TOKEN-2).')'          00333900
                      AGO   .ZI16D                                      00334000
.ZI16B                ANOP  ,                                           00334100
.*                                                                      00334200
                      AIF   ('&REGION_TOKEN(1)' EQ '').ZI16I  OMITTED   00334300
&ZC                   SETC  '0'                                         00334400
                      AIF   ('&XREGION_TOKEN' NE '&ZC').ZI16C           00334500
.ZI16I                ANOP  ,                                           00334600
&ZCGPR                SETC  '=CL16''&XREGION_TOKEN'''                   00334700
.ZI16C                ANOP  ,                                           00334800
.*                                                                      00334900
.ZI16D                ANOP  ,                                           00335000
.*                                                                      00335100
&ZOPN                 SETA  &ZOPN+1                                     00335200
&ZOPL(&ZOPN)          SETC  ' '                                         00335300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00335400
&ZOPV(&ZOPN)          SETC  '96(16,1),&ZCGPR'                           00335500
&ZOPD(&ZOPN)          SETC  '++ &ZXREGION_TOKEN XREGION_TOKEN'          00335600
.*                                                                      00335700
.ZI16E                ANOP  ,                                           00335800
.*-------------------------------------------------------------------   00335900
.***AI.LVER02                                                           00336000
.ZI16Z                ANOP  ,                                           00336100
.*-------------------------------------------------------------------   00336200
&ZOPN1                SETA &ZOPN                                        00336300
.*-------------------------------------------------------------------   00336400
.***AI.C00 MF=M CHECK TO BYPASS INVOCATION                              00336500
                      AIF   ('&XMF' EQ 'M').ZMFLX  DONE IF MF=M         00336600
.*******************************************************************    00336700
.***  PROCESS IWMQINS OUTPUT PARAMETERS                                 00336800
.*******************************************************************    00336900
                      ACTR  10000                                       00337000
.*------------------------------------------------------------------    00337100
.***AO.L02 XWLMWUTKN CL16                                               00337200
         AIF   ('&ZXWLMWUTKN' EQ 'OUTPUT').ZO14A  OUTPUT                00337300
         AIF   ('&ZXWLMWUTKN' NE 'INOUT').ZO14C  INOUT                  00337400
.ZO14A    AIF   ('&XWLMWUTKN'(1,1) NE '(').ZO14B  ADDR IN GPR           00337500
&ZCGPR   SETC  '&XWLMWUTKN'(2,K'&XWLMWUTKN-2)                           00337600
&ZOPN                 SETA  &ZOPN+1                                     00337700
&ZOPL(&ZOPN)          SETC  ' '                                         00337800
&ZOPO(&ZOPN)          SETC  'MVC'                                       00337900
&ZOPV(&ZOPN)          SETC  '0(16,&ZCGPR),48(1)'                        00338000
&ZOPD(&ZOPN)          SETC  '++ XWLMWUTKN CL16'                         00338100
                      AGO   .ZO14C                                      00338200
.*                                                                      00338300
.ZO14B                ANOP  ,                                           00338400
&ZAWRK   SETA  K'&XWLMWUTKN                                             00338500
         AIF   ('&XWLMWUTKN'(&ZAWRK,1) NE ')').ZO14G                    00338600
&ZN      SETA  2                                                        00338700
.ZO14H    ANOP                                                          00338800
         AIF   (&ZN GE &ZAWRK).ZO14G                                    00338900
         AIF   ('&XWLMWUTKN'(&ZN,1) NE '(').ZO14I                       00339000
&ZC      SETC  '&XWLMWUTKN'(1,&ZN).'16'.','                             00339100
&ZC      SETC  '&ZC'.'&XWLMWUTKN'(&ZN+1,&ZAWRK-&ZN).',48(1)'            00339200
         AGO   .ZO14J                                                   00339300
.ZO14I    ANOP                                                          00339400
&ZN      SETA  &ZN+1                                                    00339500
         AGO   .ZO14H                                                   00339600
.ZO14G    ANOP                                                          00339700
&ZC      SETC  '&XWLMWUTKN.(16),48(1)'                                  00339800
.ZO14J    ANOP                                                          00339900
&ZOPN                 SETA  &ZOPN+1                                     00340000
&ZOPL(&ZOPN)          SETC  ' '                                         00340100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00340200
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00340300
&ZOPD(&ZOPN)          SETC  '++ XWLMWUTKN CL16'                         00340400
.ZO14C                ANOP  ,                                           00340500
.*******************************************************************    00340600
.***AO.X02  RETURN CODE PROCESSING                                      00340700
.*******************************************************************    00340800
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00340900
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00341000
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00341100
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00341200
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00341300
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00341400
&ZOPN                 SETA  &ZOPN+1                                     00341500
&ZOPL(&ZOPN)          SETC  ' '                                         00341600
&ZOPO(&ZOPN)          SETC  'ST'                                        00341700
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00341800
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00341900
                      AGO   .ZMRETX                                     00342000
.*                                                                      00342100
.ZMRET2               ANOP  ,                                           00342200
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00342300
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00342400
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00342500
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00342600
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00342700
&ZOPN                 SETA  &ZOPN+1                                     00342800
&ZOPL(&ZOPN)          SETC  ' '                                         00342900
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00343000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00343100
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00343200
.ZMRETX               ANOP  ,                                           00343300
.*******************************************************************    00343400
.***AO.X03  REASON CODE PROCESSING                                      00343500
.*******************************************************************    00343600
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00343700
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00343800
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00343900
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00344000
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00344100
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00344200
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00344300
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00344400
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00344500
&ZOPN                 SETA  &ZOPN+1                                     00344600
&ZOPL(&ZOPN)          SETC  ' '                                         00344700
&ZOPO(&ZOPN)          SETC  'ST'                                        00344800
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00344900
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00345000
                      AGO   .ZMRSNX                                     00345100
.*                                                                      00345200
.ZMRSN2               ANOP  ,                                           00345300
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00345400
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00345500
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00345600
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00345700
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00345800
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00345900
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00346000
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00346100
&ZOPN                 SETA  &ZOPN+1                                     00346200
&ZOPL(&ZOPN)          SETC  ' '                                         00346300
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00346400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00346500
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00346600
.ZMRSNX               ANOP  ,                                           00346700
.*******************************************************************    00346800
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00346900
.*******************************************************************    00347000
.ZMFLX                ANOP  ,              MF=L PROCESSING              00347100
.*******************************************************************    00347200
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00347300
.*******************************************************************    00347400
                      ACTR  10000                                       00347500
.*                                                                      00347600
                      LCLA  &ZLC           COLUMN POSITION              00347700
                      LCLA  &ZOPX          LIST TABLE INDEX             00347800
                      LCLC  &ZLL           LABEL                        00347900
                      LCLC  &ZLOP          OPERATION                    00348000
                      LCLC  &ZLV           VALUE                        00348100
                      LCLC  &ZLD           DESCRIPTION                  00348200
.*                                                                      00348300
&ZOPX                 SETA  1                                           00348400
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00348500
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00348600
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00348700
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00348800
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00348900
                      AIF   (K'&ZLD LE 0).ZL5                           00349000
&ZLC                  SETA  35             COMMENT COLUMN               00349100
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00349200
&ZLC                  SETA  33             COMMMENT COLUMN              00349300
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00349400
&ZLV                  SETC  '&ZLV'.' '                                  00349500
                      AGO   .ZL3                                        00349600
.*                                                                      00349700
.ZL4                  ANOP  ,                                           00349800
&ZLV                  SETC  '&ZLV'.' '                                  00349900
.ZL5                  ANOP  ,                                           00350000
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00350100
.*                                                                      00350200
&ZLL     &ZLOP &ZLV                                                     00350300
.*                                                                      00350400
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00350500
                      AGO   .ZL2           CONTINUE LOOPING             00350600
.*                                                                      00350700
.ZLX                  ANOP  ,                                           00350800
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00350900
                      AIF   ('&XMF' EQ 'M').ZLINKX  MF=M                00351000
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00351100
     L     14,16(0,0)              GET CVT ADDRESS                      00351200
     L     14,772(14,0)            GET SFT ADDRESS                      00351300
     L     14,380(14,0)            GET LX FOR SERVICE ROUTINE           00351400
     LA    15,38                   GET EX FOR SERVICE ROUTINE           00351500
     OR    14,15                   GET PC NUMBER                        00351600
     PC    0(14)                                                        00351700
END&SYSNDX DS    0H                END LABEL                            00351800
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00351900
.ZLINKX               ANOP  ,                                           00352000
.*******************************************************************    00352100
.***AP.X01  FORMAT GENERATED CODE                                       00352200
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00352300
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00352400
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00352500
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00352600
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00352700
                      AIF   (K'&ZLD LE 0).ZL51                          00352800
&ZLC                  SETA  35             COMMENT COLUMN               00352900
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00353000
&ZLC                  SETA  33             COMMENT COLUMN               00353100
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00353200
&ZLV                  SETC  '&ZLV'.' '                                  00353300
                      AGO   .ZL31                                       00353400
.*                                                                      00353500
.ZL41                 ANOP  ,                                           00353600
&ZLV                  SETC  '&ZLV'.' '                                  00353700
.ZL51                 ANOP  ,                                           00353800
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00353900
.*                                                                      00354000
&ZLL     &ZLOP &ZLV                                                     00354100
.*                                                                      00354200
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00354300
                      AGO   .ZL21          CONTINUE LOOPING             00354400
.*                                                                      00354500
.ZLX1                 ANOP  ,                                           00354600
.*******************************************************************    00354700
.***AP.X02  END OF IWMQINS MACRO                                        00354800
&ZIWMQINS             SETC  'YES'          SET IWMQINS USED             00354900
         POP   PRINT                                                    00355000
*                                            IWMQINS-3                  00355100
         SPACE 1                                                        00355200
.ZLX2                 ANOP  ,                                           00355300
         MEND                                                           00355400
**********************************************************************/ 00355500
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00355600
*%IWMQINS: MACRO KEYS(CONNTKN,ETOKEN,USERDATA,APPLENV,DYNAMIC,          00355700
*                 DEPENDENT,SECUSER,USERID,WLMWUTKN,SERVER_TOKEN,       00355800
*                 REGION_TOKEN,RETCODE,RSNCODE,PLISTVER,MF);            00355900
*  ANS('?'!!MACLABEL!!' '!!'IWMQINSP '!!MACLIST!!                       00356000
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              00356100
*%END IWMQINS;                                                          00356200
