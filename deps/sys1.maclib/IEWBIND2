*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IEWBIND2                              -03/16/21-<0> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  Secondary Macro to Invoke the Binder          * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5650-ZOS COPYRIGHT IBM CORP. 1993, 2015                         * 00001200
*                                                                     * 00001300
* STATUS= HPM77A0                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*      Macro IEWBIND invokes IEWBIND2 to call the Binder.             * 00002000
*                                                                     * 00002100
*01* SYNTAX:                                                          * 00002200
*                                                                     * 00002300
*Ýxlabel¨  IEWBIND2  Ð  FUNC=ADDA                                     * 00002400
*                    !     ,WORKMOD=xworkmod                          * 00002500
*                    !     ,ANAME=xaname                              * 00002600
*                    !    Ý,ENAME=»xename!0º¨                         * 00002700
*                    !    Ý,AMODE=»xamode!0º¨                         * 00002800
*                    !   ÐÝ,ATYPE=A¨                                  * 00002900
*                    !   ÔÝ,ATYPE=T¨                                  * 00003000
*                    !   ÔÝ,ATYPE=S¨                                  * 00003100
*                    !   ¿Ý,ATYPE=P¨                                  * 00003200
*                    !    Ý,DNAME=»xdname!0º¨                         * 00003300
*                    Ô ,FUNC=ALIGNT                                   * 00003400
*                    !     ,WORKMOD=xworkmod                          * 00003500
*                    !     ,SECTION=xsection                          * 00003600
*                    !    Ý,BDY=»xbdy!4096º¨                          * 00003700
*                    !    Ý,CLASSL=»xclassl!0º¨                       * 00003800
*                    Ô ,FUNC=ALTERW                                   * 00003900
*                    !     ,WORKMOD=xworkmod                          * 00004000
*                    !     ,OLDNAME=xoldname                          * 00004100
*                    !   Ð ,ATYPE=C                                   * 00004200
*                    !   !     ,NEWNAME=xnewname                      * 00004300
*                    !   Ô ,ATYPE=R                                   * 00004400
*                    !   !     ,NEWNAME=xnewname                      * 00004500
*                    !   Ô ,ATYPE=D                                   * 00004600
*                    !   ¿ ,ATYPE=E                                   * 00004700
*                    !         ,COUNT=xcount                          * 00004800
*                    !    Ý,MODE=»N!Iº¨                               * 00004900
*                    !    Ý,CLASS=»xclass!0º¨                         * 00005000
*                    Ô ,FUNC=AUTOC                                    * 00005100
*                    !     ,WORKMOD=xworkmod                          * 00005200
*                    !   Ð ,CALLIB=xcallib                            * 00005300
*                    !   ¿ ,PATHNAME=xpathname                        * 00005400
*                    Ô ,FUNC=BINDW                                    * 00005500
*                    !     ,WORKMOD=xworkmod                          * 00005600
*                    !    Ý,CALLIB=»xcallib!0º¨                       * 00005700
*                    Ô ,FUNC=CREATEW                                  * 00005800
*                    !     ,DIALOG=xdialog                            * 00005900
*                    !     ,WORKMOD=xworkmod                          * 00006000
*                    !     ,INTENT=»B!Aº                              * 00006100
*                    Ô ,FUNC=DELETEW                                  * 00006200
*                    !     ,WORKMOD=xworkmod                          * 00006300
*                    !    Ý,PROTECT=»Y!Nº¨                            * 00006400
*                    Ô ,FUNC=DLLR                                     * 00006500
*                    !     ,WORKMOD=xworkmod                          * 00006600
*                    !     ,RENAMEL=xrenamel                          * 00006700
*                    Ô ,FUNC=ENDD                                     * 00006800
*                    !     ,DIALOG=xdialog                            * 00006900
*                    !    Ý,PROTECT=»Y!Nº¨                            * 00007000
*                    Ô ,FUNC=GETD                                     * 00007100
*                    !     ,WORKMOD=xworkmod                          * 00007200
*                    !     ,CLASS=xclass                              * 00007300
*                    !    Ý,SECTION=»xsection!0º¨                     * 00007400
*                    !     ,AREA=xarea                                * 00007500
*                    !     ,CURSOR=xcursor                            * 00007600
*                    !     ,COUNT=xcount                              * 00007700
*                    !    Ý,RELOC=»xreloc!0º¨                         * 00007800
*                    Ô ,FUNC=GETE                                     * 00007900
*                    !     ,WORKMOD=xworkmod                          * 00008000
*                    !    Ý,SECTION=»xsection!0º¨                     * 00008100
*                    !    Ý,RECTYPE=»xrectype!0º¨                     * 00008200
*                    !   ÐÝ,OFFSET=»xoffset!-1º                       * 00008300
*                    !   ¿ ,SYMBOL=»xsymbolº¨                         * 00008400
*                    !     ,AREA=xarea                                * 00008500
*                    !     ,CURSOR=xcursor                            * 00008600
*                    !     ,COUNT=xcount                              * 00008700
*                    !    Ý,CLASS=»xclass!0º¨                         * 00008800
*                    Ô ,FUNC=GETN                                     * 00008900
*                    !     ,WORKMOD=xworkmod                          * 00009000
*                    !    Ý,AREA=xarea¨                               * 00009100
*                    !     ,CURSOR=xcursor                            * 00009200
*                    !     ,COUNT=xcount                              * 00009300
*                    !     ,TCOUNT=xtcount                            * 00009400
*                    !    Ý,NTYPE=»S!Cº¨                              * 00009500
*                    Ô ,FUNC=GETC                                     * 00009600
*                    !     ,WORKMOD=xworkmod                          * 00009700
*                    !    Ý,CULIST=»xculist!0º¨                       * 00009800
*                    !     ,AREA=xarea                                * 00009900
*                    !     ,CURSOR=xcursor                            * 00010000
*                    !     ,COUNT=xcount                              * 00010100
*                    Ô ,FUNC=IMPORT                                   * 00010200
*                    !     ,WORKMOD=xworkmod                          * 00010300
*                    !   Ð ,ITYPE=C                                   * 00010400
*                    !   Ô ,ITYPE=D                                   * 00010500
*                    !   Ô ,ITYPE=E                                   * 00010600
*                    !   ¿ ,ITYPE=F                                   * 00010700
*                    !     ,DLLNAME=xdllname                          * 00010800
*                    !     ,INAME=xiname                              * 00010900
*                    !   ¿Ý,OFFSET=»xoffset!0º¨                       * 00011000
*                    Ô ,FUNC=INCLUDE                                  * 00011100
*                    !     ,WORKMOD=xworkmod                          * 00011200
*                    !   Ð ,INTYPE=D                                  * 00011300
*                    !   !   Ð ,DDNAME=xddname                        * 00011400
*                    !   !   ! ,DEPTR=xdeptr                          * 00011500
*                    !   Ô ,INTYPE=N                                  * 00011600
*                    !   !   Ð ,DDNAME=xddname                        * 00011700
*                    !   !   !    Ý,MEMBER=»xmember!0º¨               * 00011800
*                    !   !   ¿ ,PATHNAME=xpathname                    * 00011900
*                    !   Ô ,INTYPE=P                                  * 00012000
*                    !   !     ,DCBPTR=xdcbptr                        * 00012100
*                    !   !     ,DEPTR=xdeptr                          * 00012200
*                    !   Ô ,INTYPE=S                                  * 00012300
*                    !   !   Ô ,DDNAME=xddname                        * 00012400
*                    !   !   ! ,DEPTR=xdeptr                          * 00012500
*                    !   ¿ ,INTYPE=T                                  * 00012600
*                    !         ,EPTOKEN=xeptoken                      * 00012700
*                    !    Ý,ATTRIB=»N!Yº¨                             * 00012800
*                    !    Ý,ALIASES=»N!Y!Kº¨                          * 00012900
*                    !    Ý,IMPORTS=»Y!Nº¨                            * 00013000
*                    Ô ,FUNC=INSERTS                                  * 00013100
*                    !     ,WORKMOD=xworkmod                          * 00013200
*                    !     ,SECTION=xsection                          * 00013300
*                    Ô ,FUNC=LOADW                                    * 00013400
*                    !     ,WORKMOD=xworkmod                          * 00013500
*                    !     ,EPLOC=xeploc                              * 00013600
*                    !   Ð ,IDENTIFY=N                                * 00013700
*                    !   !     ,EXTLST=xextlst                        * 00013800
*                    !   ¿ ,IDENTIFY=Y                                * 00013900
*                    !        Ý,EXTLST=xextlst¨                       * 00014000
*                    !        Ý,LNAME=»xlname!0º¨                     * 00014100
*                    Ô ,FUNC=ORDERS                                   * 00014200
*                    !     ,WORKMOD=xworkmod                          * 00014300
*                    !     ,SECTION=xsection                          * 00014400
*                    Ô ,FUNC=PUTD                                     * 00014500
*                    !     ,WORKMOD=xworkmod                          * 00014600
*                    !     ,CLASS=xclass                              * 00014700
*                    !    Ý,SECTION=»xsection!0º¨                     * 00014800
*                    !    Ý,AREA=»xarea!0º                            * 00014900
*                    !         ,COUNT=xcount¨                         * 00015000
*                    !    Ý,CURSOR=»xcursor!-1º¨                      * 00015100
*                    !    Ý,NEWSECT=»N!Yº¨                            * 00015200
*                    !    Ý,ENDDATA=»N!Yº¨                            * 00015300
*                    Ô ,FUNC=RENAME                                   * 00015400
*                    !     ,WORKMOD=xworkmod                          * 00015500
*                    !     ,OLDNAME=xoldname                          * 00015600
*                    !     ,NEWNAME=xnewname                          * 00015700
*                    Ô ,FUNC=RESETW                                   * 00015800
*                    !     ,WORKMOD=xworkmod                          * 00015900
*                    !     ,INTENT=»B!Aº                              * 00016000
*                    !    Ý,PROTECT=»Y!Nº¨                            * 00016100
*                    Ô ,FUNC=SAVEW                                    * 00016200
*                    !     ,WORKMOD=xworkmod                          * 00016300
*                    !    Ý,MODLIB=»xmodlib!0º¨                       * 00016400
*                    !    Ý,SNAME=»xsname!0º¨                         * 00016500
*                    !    Ý,REPLACE=»N!Yº¨                            * 00016600
*                    Ô ,FUNC=SETL                                     * 00016700
*                    !     ,WORKMOD=xworkmod                          * 00016800
*                    !    Ý,SYMBOL=»xsymbol!0º¨                       * 00016900
*                    !    Ý,LIBOPT=»C!N!Eº¨                           * 00017000
*                    !   ÐÝ,CALLIB=»xcallibº                          * 00017100
*                    !   ¿ ,PATHNAME=»xpathnameº¨                     * 00017200
*                    Ô ,FUNC=SETO                                     * 00017300
*                    !   Ð ,DIALOG=xdialog                            * 00017400
*                    !   ¿ ,WORKMOD=xworkmod                          * 00017500
*                    !     ,OPTION=xoption                            * 00017600
*                    !     ,OPTVAL=xoptval                            * 00017700
*                    !    Ý,PARMS=»xparms!0º¨                         * 00017800
*                    Ô ,FUNC=STARTD                                   * 00017900
*                    !     ,DIALOG=xdialog                            * 00018000
*                    !    Ý,FILES=»xfiles!0º¨                         * 00018100
*                    !    Ý,EXITS=»xexits!0º¨                         * 00018200
*                    !    Ý,OPTIONS=»xoptions!0º¨                     * 00018300
*                    !    Ý,PARMS=»xparms!0º¨                         * 00018400
*                    !    Ý,ENVARS=»xenvars!0º¨                       * 00018500
*                    ¿ ,FUNC=STARTS                                   * 00018600
*                          ,WORKMOD=xworkmod                          * 00018700
*                          ,ORIGIN=xorigin                            * 00018800
*                         Ý,REGION=»N!Yº¨                             * 00018900
*                     Ý,RETCODE=xretcode¨                             * 00019000
*                     Ý,RSNCODE=xrsncode¨                             * 00019100
*                     Ý,VERSION=»1!2!3!4!5!6!7!8!9º¨                  * 00019200
*                     Ý,PLISTVER=»xplistver!IMPLIED_VERSIONº¨         * 00019300
*                    ÐÝ,MF=S¨                                         * 00019400
*                    ÔÝ,MF=(L,xmfctrl»,xmfattr!0Dº)¨                  * 00019500
*                    ¿Ý,MF=(E,xmfctrl»,COMPLETEº)¨                    * 00019600
*                                                                     * 00019700
*                                                                     * 00019800
*      Where:                                                         * 00019900
*                                                                     * 00020000
*                                                                     * 00020100
*      Ýxlabel¨                                                       * 00020200
*          is an optional symbol, starting in column 1, that is the   * 00020300
*          name on the IEWBIND2 macro invocation.  The name must      * 00020400
*          conform to the rules for an ordinary assembler language    * 00020500
*          symbol.                                                    * 00020600
*          DEFAULT: No name.                                          * 00020700
*                                                                     * 00020800
*                                                                     * 00020900
*                                                                     * 00021000
*                                                                     * 00021100
*      FUNC=»ADDA!ALIGNT!ALTERW!AUTOC!BINDW!CREATEW!DELETEW!DLLR!ENDD * 00021200
*          !GETD!GETE!GETN!GETC!IMPORT!INCLUDE!INSERTS!LOADW!ORDERS!P * 00021300
*          UTD!RENAME!RESETW!SAVEW!SETL!SETO!STARTD!STARTSº           * 00021400
*          is a required keyword input which specifies the Binder     * 00021500
*          function to perform.                                       * 00021600
*                                                                     * 00021700
*                                                                     * 00021800
*          FUNC=ADDA                                                  * 00021900
*              Establish an alias for the program.  ADDA is the       * 00022000
*              abbreviation for ADDALIAS.                             * 00022100
*                                                                     * 00022200
*                                                                     * 00022300
*              WORKMOD=xworkmod                                       * 00022400
*                  is the name (RS-type), or address in register      * 00022500
*                  (2)-(12), of a required 8 character input variable * 00022600
*                  that contains the workmod token, which the Binder  * 00022700
*                  returned on a CREATEWMOD request to represent the  * 00022800
*                  workmod. This token must not be modified by the    * 00022900
*                  caller.                                            * 00023000
*                                                                     * 00023100
*                                                                     * 00023200
*                                                                     * 00023300
*                                                                     * 00023400
*              ANAME=xaname                                           * 00023500
*                  is a required input.  It is the name (RS-type), or * 00023600
*                  address in register (2)-(12), of a 1024 byte       * 00023700
*                  varying length character string which is the name  * 00023800
*                  to use for the true alias or alternate entry       * 00023900
*                  point.                                             * 00024000
*                                                                     * 00024100
*                  The first half word of the string contains a count * 00024200
*                  (1 to 1024) of the number of characters in the     * 00024300
*                  string which follows.                              * 00024400
*                                                                     * 00024500
*                                                                     * 00024600
*                                                                     * 00024700
*                                                                     * 00024800
*              ÝENAME=»xename!0º¨                                     * 00024900
*                  is an optional input.  It is the name (RS-type),   * 00025000
*                  or address in register (2)-(12), of a 1024-byte    * 00025100
*                  varying-length character string which is the       * 00025200
*                  external entry point name to be used when the      * 00025300
*                  program is called via the name specified by ANAME. * 00025400
*                  If ENAME is not an external symbol in the program, * 00025500
*                  ANAME is assigned to the program's main entry      * 00025600
*                  point.                                             * 00025700
*                                                                     * 00025800
*                  The first half word of the string contains a count * 00025900
*                  (0 to 1024) of the number of characters in the     * 00026000
*                  string which follows.                              * 00026100
*                  DEFAULT: 0, signifying a null string, which        * 00026200
*                  indicates that ANAME is to be a true alias located * 00026300
*                  at the program's main entry point.                 * 00026400
*                                                                     * 00026500
*                                                                     * 00026600
*                                                                     * 00026700
*                                                                     * 00026800
*              ÝAMODE=»xamode!0º¨                                     * 00026900
*                  is an optional input.  It is the name (RS-type),   * 00027000
*                  or address in register (2)-(12), of a 256-byte     * 00027100
*                  varying length character string which specifies    * 00027200
*                  the amode of the alias ANAME. Valid strings are    * 00027300
*                  "24", "31", "ANY" and "MIN".                       * 00027400
*                                                                     * 00027500
*                  The first half word of the string contains a count * 00027600
*                  (0 to 256) of the number of characters in the      * 00027700
*                  string which follows.                              * 00027800
*                  DEFAULT: 0, signifying a null string, which        * 00027900
*                  indicates that the amode is to be determined by    * 00028000
*                  the amode of the ESD.                              * 00028100
*                                                                     * 00028200
*                                                                     * 00028300
*                                                                     * 00028400
*                                                                     * 00028500
*              ÝATYPE=»A!T!S!Pº¨                                      * 00028600
*                  is an optional keyword input which indicates       * 00028700
*                  whether ANAME is a regular alias or a hard link in * 00028800
*                  the case of OE.                                    * 00028900
*                  DEFAULT: A                                         * 00029000
*                                                                     * 00029100
*                                                                     * 00029200
*                  ÝATYPE=A¨                                          * 00029300
*                      Specifes that ANAME is a regular alias.        * 00029400
*                                                                     * 00029500
*                  ÝATYPE=T¨                                          * 00029600
*                      Specifes that ANAME is a regular alias which   * 00029700
*                      points to a primary entry point.               * 00029800
*                                                                     * 00029900
*                  ÝATYPE=S¨                                          * 00030000
*                      Specifes that ANAME is the pathname for a      * 00030100
*                      symbolic link.                                 * 00030200
*                                                                     * 00030300
*                  ÝATYPE=P¨                                          * 00030400
*                      Specifes that ANAME is the pathname to be      * 00030500
*                      stored in all symbolic links.                  * 00030600
*                                                                     * 00030700
*                                                                     * 00030800
*                                                                     * 00030900
*                                                                     * 00031000
*                                                                     * 00031100
*                                                                     * 00031200
*              ÝDNAME=»xdname!0º¨                                     * 00031300
*                  is an optional input.  It is the name (RS-type),   * 00031400
*                  or address in register (2)-(12), of a 1024-byte    * 00031500
*                  varying-length character string which is the alias * 00031600
*                  name to be found in the directory of an included   * 00031700
*                  module (by using the INCLUDE function with the     * 00031800
*                  ALIASES=KEEP parameter). This alias will then be   * 00031900
*                  added according to the remaining ADDALIAS function * 00032000
*                  calls.                                             * 00032100
*                                                                     * 00032200
*                  The first half word of the string contains a count * 00032300
*                  (0 to 1024) of the number of characters in the     * 00032400
*                  string which follows.                              * 00032500
*                  DEFAULT: 0, signifying a null string, which        * 00032600
*                  indicates that directory alias name is not         * 00032700
*                  searched for.                                      * 00032800
*                                                                     * 00032900
*                                                                     * 00033000
*                                                                     * 00033100
*          FUNC=ALIGNT                                                * 00033200
*              Specify alignment for the designated control section.  * 00033300
*              ALIGNT is the abbreviation for ALIGNTEXT.              * 00033400
*                                                                     * 00033500
*                                                                     * 00033600
*              WORKMOD=xworkmod                                       * 00033700
*                  is the name (RS-type), or address in register      * 00033800
*                  (2)-(12), of a required 8 character input variable * 00033900
*                  that contains the workmod token, which the Binder  * 00034000
*                  returned on a CREATEWMOD request to represent the  * 00034100
*                  workmod. This token must not be modified by the    * 00034200
*                  caller.                                            * 00034300
*                                                                     * 00034400
*                                                                     * 00034500
*                                                                     * 00034600
*                                                                     * 00034700
*              SECTION=xsection                                       * 00034800
*                  is a required input.  It is the name (RS-type), or * 00034900
*                  address in register (2)-(12), of a 1024-byte       * 00035000
*                  varying character string variable which is the     * 00035100
*                  name of the control section or named common to be  * 00035200
*                  positioned in the workmod.                         * 00035300
*                                                                     * 00035400
*                  The first half word of the string contains a count * 00035500
*                  (1 to 1024) of the number of characters in the     * 00035600
*                  string which follows.                              * 00035700
*                                                                     * 00035800
*                                                                     * 00035900
*                                                                     * 00036000
*                                                                     * 00036100
*              ÝBDY=»xbdy!4096º¨                                      * 00036200
*                  is the name (RS-type), or address in register      * 00036300
*                  (2)-(12), of an optional fullword input alignment  * 00036400
*                  boundary requested for section, or text classes    * 00036500
*                  within a section. 0 means no alignment.            * 00036600
*                                                                     * 00036700
*                  Valid values are 0 thru 4096.                      * 00036800
*                  DEFAULT: 4096, indicating that page alignment is   * 00036900
*                  desired.                                           * 00037000
*                                                                     * 00037100
*                                                                     * 00037200
*                                                                     * 00037300
*                                                                     * 00037400
*              ÝCLASSL=»xclassl!0º¨                                   * 00037500
*                  is an optional input.  It is the name (RS-type),   * 00037600
*                  or address in register (2)-(12), of a structure    * 00037700
*                  which represents the list of classes within the    * 00037800
*                  specified section to which the boundary            * 00037900
*                  specification is to apply. The structure is        * 00038000
*                  organized as follows:                              * 00038100
*                                                                     * 00038200
*                  The first word contains the number of count.       * 00038300
*                                                                     * 00038400
*                  The second part contains a class name consisting   * 00038500
*                  of a two byte length field followed by sixteen     * 00038600
*                  characters containing the class name.              * 00038700
*                  DEFAULT: 0, indicating that a class list was not   * 00038800
*                  specified.                                         * 00038900
*                                                                     * 00039000
*                                                                     * 00039100
*                                                                     * 00039200
*          FUNC=ALTERW                                                * 00039300
*              Alter symbols or control sections in a workmod.        * 00039400
*              ALTERW is the abbreviation for ALTERWMOD.              * 00039500
*                                                                     * 00039600
*                                                                     * 00039700
*              WORKMOD=xworkmod                                       * 00039800
*                  is the name (RS-type), or address in register      * 00039900
*                  (2)-(12), of a required 8 character input variable * 00040000
*                  that contains the workmod token, which the Binder  * 00040100
*                  returned on a CREATEWMOD request to represent the  * 00040200
*                  workmod. This token must not be modified by the    * 00040300
*                  caller.                                            * 00040400
*                                                                     * 00040500
*                                                                     * 00040600
*                                                                     * 00040700
*                                                                     * 00040800
*              OLDNAME=xoldname                                       * 00040900
*                  is a required input.  It is the name (RS-type), or * 00041000
*                  address in register (2)-(12), of a 1024-byte       * 00041100
*                  varying character string which is the section name * 00041200
*                  or symbol name to be altered.                      * 00041300
*                                                                     * 00041400
*                  The first half word of the string contains a count * 00041500
*                  (1 to 1024) of the number of characters in the     * 00041600
*                  string which follows.                              * 00041700
*                                                                     * 00041800
*                                                                     * 00041900
*                                                                     * 00042000
*                                                                     * 00042100
*              ATYPE=»C!R!D!Eº                                        * 00042200
*                  is a required keyword input which specifies the    * 00042300
*                  type of alteration to perform on the designated    * 00042400
*                  Workmod.                                           * 00042500
*                                                                     * 00042600
*                                                                     * 00042700
*                  ATYPE=C                                            * 00042800
*                      Specifies that an external symbol and all      * 00042900
*                      references to it are to be changed from        * 00043000
*                      OLDNAME to NEWNAME. Any pre-existing symbols   * 00043100
*                      and sections named NEWNAME are first deleted.  * 00043200
*                      C is the abbreviation for CHANGE.              * 00043300
*                                                                     * 00043400
*                                                                     * 00043500
*                      NEWNAME=xnewname                               * 00043600
*                          is a required input.  It is the name       * 00043700
*                          (RS-type), or address in register          * 00043800
*                          (2)-(12), of a 1024-byte varying character * 00043900
*                          string which is new name of the symbol     * 00044000
*                          designated by OLDNAME.                     * 00044100
*                                                                     * 00044200
*                          The first half word of the string contains * 00044300
*                          a count (1 to 1024) of the number of       * 00044400
*                          characters in the string which follows.    * 00044500
*                                                                     * 00044600
*                                                                     * 00044700
*                                                                     * 00044800
*                  ATYPE=R                                            * 00044900
*                      Specifies that an external symbol and sections * 00045000
*                      are to be replaced. All references to OLDNAME  * 00045100
*                      are changed to refer to NEWNAME. Any sections  * 00045200
*                      named OLDNAME are deleted.  R is the           * 00045300
*                      abbreviation for REPLACE.                      * 00045400
*                                                                     * 00045500
*                                                                     * 00045600
*                      NEWNAME=xnewname                               * 00045700
*                          is a required input.  It is the name       * 00045800
*                          (RS-type), or address in register          * 00045900
*                          (2)-(12), of a 1024-byte varying character * 00046000
*                          string which is new name of the symbol     * 00046100
*                          designated by OLDNAME.                     * 00046200
*                                                                     * 00046300
*                          The first half word of the string contains * 00046400
*                          a count (1 to 1024) of the number of       * 00046500
*                          characters in the string which follows.    * 00046600
*                                                                     * 00046700
*                                                                     * 00046800
*                                                                     * 00046900
*                  ATYPE=D                                            * 00047000
*                      Specifies that an external symbol is to be     * 00047100
*                      deleted.  D is the abbreviation for DELETE.    * 00047200
*                                                                     * 00047300
*                  ATYPE=E                                            * 00047400
*                      Specifies that a a control section is to be    * 00047500
*                      expanded.  E is the abbreviation for EXPAND.   * 00047600
*                                                                     * 00047700
*                                                                     * 00047800
*                      COUNT=xcount                                   * 00047900
*                          is the name (RS-type), or address in       * 00048000
*                          register (2)-(12), of a required fullword  * 00048100
*                          output which contains the number of bytes  * 00048200
*                          by which the section is to be expanded.    * 00048300
*                                                                     * 00048400
*                                                                     * 00048500
*                                                                     * 00048600
*                                                                     * 00048700
*                                                                     * 00048800
*                                                                     * 00048900
*                                                                     * 00049000
*                                                                     * 00049100
*              ÝMODE=»N!Iº¨                                           * 00049200
*                  is an optional keyword input which specifies       * 00049300
*                  whether the operation is to take place immediately * 00049400
*                  or on the next program to be included in the       * 00049500
*                  Workmod.                                           * 00049600
*                  DEFAULT: N                                         * 00049700
*                                                                     * 00049800
*                                                                     * 00049900
*                  MODE=N                                             * 00050000
*                      The alteration specified is to be performed on * 00050100
*                      the next program to be included in the         * 00050200
*                      Workmod.  N is the abbreviation for NEXT.      * 00050300
*                                                                     * 00050400
*                  MODE=I                                             * 00050500
*                      The alteration specified is to be performed    * 00050600
*                      immediately on the current Workmod.  I is the  * 00050700
*                      abbreviation for IMMED.                        * 00050800
*                                                                     * 00050900
*                                                                     * 00051000
*                                                                     * 00051100
*                                                                     * 00051200
*                                                                     * 00051300
*                                                                     * 00051400
*              ÝCLASS=»xclass!0º¨                                     * 00051500
*                  is an optional input.  It is the name (RS-type),   * 00051600
*                  or address in register (2)-(12), of a 16-byte      * 00051700
*                  varying length character string which is the       * 00051800
*                  Binder data class name.                            * 00051900
*                                                                     * 00052000
*                  The first half word of the string contains a count * 00052100
*                  (1 to 16) of the number of characters in the       * 00052200
*                  string which follows.                              * 00052300
*                  DEFAULT: 0, signifying for an EXPAND request that  * 00052400
*                  B.TEXT is to be used.  If ATYPE is not expand,     * 00052500
*                  this keyword is ignored.                           * 00052600
*                                                                     * 00052700
*                                                                     * 00052800
*                                                                     * 00052900
*          FUNC=AUTOC                                                 * 00053000
*              Perform immediate (incremental) autocall, using the    * 00053100
*              given DDNAME as the CALLIB.  AUTOC is the abbreviation * 00053200
*              for AUTOCALL.                                          * 00053300
*                                                                     * 00053400
*                                                                     * 00053500
*              WORKMOD=xworkmod                                       * 00053600
*                  is the name (RS-type), or address in register      * 00053700
*                  (2)-(12), of a required 8 character input variable * 00053800
*                  that contains the workmod token, which the Binder  * 00053900
*                  returned on a CREATEWMOD request to represent the  * 00054000
*                  workmod. This token must not be modified by the    * 00054100
*                  caller.                                            * 00054200
*                                                                     * 00054300
*                                                                     * 00054400
*                                                                     * 00054500
*                                                                     * 00054600
*              The following is a set of mutually exclusive keys.     * 00054700
*              This set is required; only one key must be specified.  * 00054800
*                                                                     * 00054900
*                                                                     * 00055000
*              CALLIB=xcallib                                         * 00055100
*                  belongs to a set of mutually exclusive keys. It is * 00055200
*                  an input.  It is the name (RS-type), or address in * 00055300
*                  register (2)-(12), of a key                        * 00055400
*                                                                     * 00055500
*                  It is an 8-byte varying character string which is  * 00055600
*                  the ddname of a library to be used for automatic   * 00055700
*                  library calls.                                     * 00055800
*                                                                     * 00055900
*                  The first half word of the string contains a count * 00056000
*                  (0 to 8) of the number of characters in the string * 00056100
*                  which follows.                                     * 00056200
*                                                                     * 00056300
*              PATHNAME=xpathname                                     * 00056400
*                  belongs to a set of mutually exclusive keys. It is * 00056500
*                  an input.  It is the name (RS-type), or address in * 00056600
*                  register (2)-(12), of a key                        * 00056700
*                                                                     * 00056800
*                  It is a 1024-byte varying length character string  * 00056900
*                  containing the HFS path name to be used for        * 00057000
*                  automatic library calls.                           * 00057100
*                                                                     * 00057200
*                  The first half word of the string contains a count * 00057300
*                  (0 to 1024) of the number of characters in the     * 00057400
*                  string which follows.                              * 00057500
*                                                                     * 00057600
*                                                                     * 00057700
*                                                                     * 00057800
*              End of a set of mutually exclusive required keys.      * 00057900
*                                                                     * 00058000
*                                                                     * 00058100
*          FUNC=BINDW                                                 * 00058200
*              Bind the program in WORKMOD.  BINDW is the             * 00058300
*              abbreviation for BINDWMOD.                             * 00058400
*                                                                     * 00058500
*                                                                     * 00058600
*              WORKMOD=xworkmod                                       * 00058700
*                  is the name (RS-type), or address in register      * 00058800
*                  (2)-(12), of a required 8 character input variable * 00058900
*                  that contains the workmod token, which the Binder  * 00059000
*                  returned on a CREATEWMOD request to represent the  * 00059100
*                  workmod. This token must not be modified by the    * 00059200
*                  caller.                                            * 00059300
*                                                                     * 00059400
*                                                                     * 00059500
*                                                                     * 00059600
*                                                                     * 00059700
*              ÝCALLIB=»xcallib!0º¨                                   * 00059800
*                  is an optional input.  It is the name (RS-type),   * 00059900
*                  or address in register (2)-(12), of an 8-byte      * 00060000
*                  varying character string which is the ddname of a  * 00060100
*                  library to be used for automatic library calls.    * 00060200
*                                                                     * 00060300
*                  The first half word of the string contains a count * 00060400
*                  (0 to 8) of the number of characters in the string * 00060500
*                  which follows.                                     * 00060600
*                  DEFAULT: 0, signifying a null string indicating    * 00060700
*                  that the Binder must use the call library which    * 00060800
*                  was established by a SETOPTIONS or STARTDIALOG     * 00060900
*                  request or else leave external references          * 00061000
*                  unresolved.                                        * 00061100
*                                                                     * 00061200
*                                                                     * 00061300
*                                                                     * 00061400
*          FUNC=CREATEW                                               * 00061500
*              Establish a new WORKMOD.  CREATEW is the abbreviation  * 00061600
*              for CREATEWMOD.                                        * 00061700
*                                                                     * 00061800
*                                                                     * 00061900
*              DIALOG=xdialog                                         * 00062000
*                  is a required input.  It is the name (RS-type), or * 00062100
*                  address in register (2)-(12), of an 8-byte         * 00062200
*                  character string which is the dialog token         * 00062300
*                  representing the Binder dialog. The Binder returns * 00062400
*                  this token on a STARTDIALOG request. The caller    * 00062500
*                  must not alter the dialog token.                   * 00062600
*                                                                     * 00062700
*                                                                     * 00062800
*                                                                     * 00062900
*                                                                     * 00063000
*              WORKMOD=xworkmod                                       * 00063100
*                  is the name (RS-type), or address in register      * 00063200
*                  (2)-(12), of a required 8 character output         * 00063300
*                  variable that contains the workmod token, which    * 00063400
*                  the Binder returned on a CREATEWMOD request to     * 00063500
*                  represent the workmod. This token must not be      * 00063600
*                  modified by the caller.                            * 00063700
*                                                                     * 00063800
*                                                                     * 00063900
*                                                                     * 00064000
*                                                                     * 00064100
*              INTENT=»B!Aº                                           * 00064200
*                  is a required keyword input which indicates        * 00064300
*                  whether or not a BIND will be requested for the    * 00064400
*                  program. Processing intent determines the range of * 00064500
*                  Binder functions which can be requested for the    * 00064600
*                  Workmod.                                           * 00064700
*                                                                     * 00064800
*                                                                     * 00064900
*                  INTENT=B                                           * 00065000
*                      Indicates a BIND will be performed on the      * 00065100
*                      program.  B is the abbreviation for BIND.      * 00065200
*                                                                     * 00065300
*                  INTENT=A                                           * 00065400
*                      Specifies that the workmod will be accessed    * 00065500
*                      but not bound.  A is the abbreviation for      * 00065600
*                      ACCESS.                                        * 00065700
*                                                                     * 00065800
*                                                                     * 00065900
*                                                                     * 00066000
*                                                                     * 00066100
*                                                                     * 00066200
*          FUNC=DELETEW                                               * 00066300
*              Delete an existing WORKMOD.  DELETEW is the            * 00066400
*              abbreviation for DELETEWMOD.                           * 00066500
*                                                                     * 00066600
*                                                                     * 00066700
*              WORKMOD=xworkmod                                       * 00066800
*                  is the name (RS-type), or address in register      * 00066900
*                  (2)-(12), of a required 8 character input variable * 00067000
*                  that contains the workmod token, which the Binder  * 00067100
*                  returned on a CREATEWMOD request to represent the  * 00067200
*                  workmod. This token must not be modified by the    * 00067300
*                  caller.                                            * 00067400
*                                                                     * 00067500
*                                                                     * 00067600
*                                                                     * 00067700
*                                                                     * 00067800
*              ÝPROTECT=»Y!Nº¨                                        * 00067900
*                  is an optional keyword input which specifies       * 00068000
*                  whether or not the Binder will be allowed to       * 00068100
*                  delete an altered program.                         * 00068200
*                  DEFAULT: Y                                         * 00068300
*                                                                     * 00068400
*                                                                     * 00068500
*                  PROTECT=Y                                          * 00068600
*                      Prevents the Binder from deleting altered      * 00068700
*                      programs.  Y is the abbreviation for YES.      * 00068800
*                                                                     * 00068900
*                  PROTECT=N                                          * 00069000
*                      The Binder is allowed to delete altered        * 00069100
*                      programs..  N is the abbreviation for NO.      * 00069200
*                                                                     * 00069300
*                                                                     * 00069400
*                                                                     * 00069500
*                                                                     * 00069600
*                                                                     * 00069700
*          FUNC=DLLR                                                  * 00069800
*              Allows for the substitution of DLL members in          * 00069900
*              Import/Export tables, as indicated by the passed list. * 00070000
*              DLLR is the abbreviation for DLLRENAME.                * 00070100
*                                                                     * 00070200
*                                                                     * 00070300
*              WORKMOD=xworkmod                                       * 00070400
*                  is the name (RS-type), or address in register      * 00070500
*                  (2)-(12), of a required 8 character input variable * 00070600
*                  that contains the workmod token, which the Binder  * 00070700
*                  returned on a CREATEWMOD request to represent the  * 00070800
*                  workmod. This token must not be modified by the    * 00070900
*                  caller.                                            * 00071000
*                                                                     * 00071100
*                                                                     * 00071200
*                                                                     * 00071300
*                                                                     * 00071400
*              RENAMEL=xrenamel                                       * 00071500
*                  is a required input.  It is the name (RS-type), or * 00071600
*                  address in register (2)-(12), of a structure which * 00071700
*                  represents the list of DLL members to be renamed.  * 00071800
*                  All entries in this list are four bytes in length, * 00071900
*                  and they are organized as follows:                 * 00072000
*                                                                     * 00072100
*                  The first word contains the number of pairs of     * 00072200
*                  names to be substituted.                           * 00072300
*                                                                     * 00072400
*                  All subsequent words represent a list of addresses * 00072500
*                  of the names to be substituted.  In this list, all * 00072600
*                  the odd-numbered entries represent the addresses   * 00072700
*                  of old names, while the even-numbered entries      * 00072800
*                  represent the addresses of the new names, which    * 00072900
*                  will replace the old ones.  Thus, this structure   * 00073000
*                  represents a list of paired names to be            * 00073100
*                  substituted, where an old name is followed by a    * 00073200
*                  new name.                                          * 00073300
*                                                                     * 00073400
*                                                                     * 00073500
*                                                                     * 00073600
*          FUNC=ENDD                                                  * 00073700
*              End the specified dialog.  ENDD is the abbreviation    * 00073800
*              for ENDDIALOG.                                         * 00073900
*                                                                     * 00074000
*                                                                     * 00074100
*              DIALOG=xdialog                                         * 00074200
*                  is a required input.  It is the name (RS-type), or * 00074300
*                  address in register (2)-(12), of an 8-byte         * 00074400
*                  character string which is the dialog token         * 00074500
*                  representing the Binder dialog. The Binder returns * 00074600
*                  this token on a STARTDIALOG request. The caller    * 00074700
*                  must not alter the dialog token.                   * 00074800
*                                                                     * 00074900
*                                                                     * 00075000
*                                                                     * 00075100
*                                                                     * 00075200
*              ÝPROTECT=»Y!Nº¨                                        * 00075300
*                  is an optional keyword input which specifies       * 00075400
*                  whether or not the Binder will be allowed to       * 00075500
*                  delete an altered program.                         * 00075600
*                  DEFAULT: Y                                         * 00075700
*                                                                     * 00075800
*                                                                     * 00075900
*                  PROTECT=Y                                          * 00076000
*                      Prevents the Binder from deleting altered      * 00076100
*                      programs.  Y is the abbreviation for YES.      * 00076200
*                                                                     * 00076300
*                  PROTECT=N                                          * 00076400
*                      The Binder is allowed to delete altered        * 00076500
*                      programs.  N is the abbreviation for NO.       * 00076600
*                                                                     * 00076700
*                                                                     * 00076800
*                                                                     * 00076900
*                                                                     * 00077000
*                                                                     * 00077100
*          FUNC=GETD                                                  * 00077200
*              Retrieve program data from the specified WORKMOD.      * 00077300
*              GETD is the abbreviation for GETDATA.                  * 00077400
*                                                                     * 00077500
*                                                                     * 00077600
*              WORKMOD=xworkmod                                       * 00077700
*                  is the name (RS-type), or address in register      * 00077800
*                  (2)-(12), of a required 8 character input variable * 00077900
*                  that contains the workmod token, which the Binder  * 00078000
*                  returned on a CREATEWMOD request to represent the  * 00078100
*                  workmod. This token must not be modified by the    * 00078200
*                  caller.                                            * 00078300
*                                                                     * 00078400
*                                                                     * 00078500
*                                                                     * 00078600
*                                                                     * 00078700
*              CLASS=xclass                                           * 00078800
*                  is a required input.  It is the name (RS-type), or * 00078900
*                  address in register (2)-(12), of a 12-byte varying * 00079000
*                  length character string which is the Binder data   * 00079100
*                  class name.                                        * 00079200
*                                                                     * 00079300
*                  The first half word of the string contains a count * 00079400
*                  (1 to 8) of the number of characters in the string * 00079500
*                  which follows.                                     * 00079600
*                                                                     * 00079700
*                                                                     * 00079800
*                                                                     * 00079900
*                                                                     * 00080000
*              ÝSECTION=»xsection!0º¨                                 * 00080100
*                  is an optional input.  It is the name (RS-type),   * 00080200
*                  or address in register (2)-(12), of a 1024-byte    * 00080300
*                  varying character string variable which is the     * 00080400
*                  name of the control section or named common to be  * 00080500
*                  processed.                                         * 00080600
*                                                                     * 00080700
*                  The first half word of the string contains a count * 00080800
*                  (0 to 1024) of the number of characters in the     * 00080900
*                  string which follows.                              * 00081000
*                  DEFAULT: 0, signifying a null string which         * 00081100
*                  indicates that all sections are to be processed.   * 00081200
*                                                                     * 00081300
*                                                                     * 00081400
*                                                                     * 00081500
*                                                                     * 00081600
*              AREA=xarea                                             * 00081700
*                  is a required output.  It is the name (RS-type),   * 00081800
*                  or address in register (2)-(12), of a standard     * 00081900
*                  Binder data buffer which will receive the data.    * 00082000
*                                                                     * 00082100
*                                                                     * 00082200
*                                                                     * 00082300
*                                                                     * 00082400
*              CURSOR=xcursor                                         * 00082500
*                  is the name (RS-type), or address in register      * 00082600
*                  (2)-(12), of a required fullword input/output      * 00082700
*                  which contains the relative record number or byte  * 00082800
*                  at which the Binder is to begin processing.        * 00082900
*                  Updated by the Binder on each GETDATA request.  A  * 00083000
*                  value of zero indicates the Binder is to start at  * 00083100
*                  the start of the item.                             * 00083200
*                                                                     * 00083300
*                                                                     * 00083400
*                                                                     * 00083500
*                                                                     * 00083600
*              COUNT=xcount                                           * 00083700
*                  is the name (RS-type), or address in register      * 00083800
*                  (2)-(12), of a required fullword output which      * 00083900
*                  contains the number of bytes or entries placed in  * 00084000
*                  the Binder's data buffer.                          * 00084100
*                                                                     * 00084200
*                                                                     * 00084300
*                                                                     * 00084400
*                                                                     * 00084500
*              ÝRELOC=»xreloc!0º¨                                     * 00084600
*                  is the name (RS-type), or address in register      * 00084700
*                  (2)-(12), of an optional 64 bit input which        * 00084800
*                  contains the eight bytes of relocation addresses.  * 00084900
*                  DEFAULT: 0, signifying that RELOC is not a         * 00085000
*                  selection criteria for.  GETD.                     * 00085100
*                                                                     * 00085200
*                                                                     * 00085300
*                                                                     * 00085400
*          FUNC=GETE                                                  * 00085500
*              Retrieve selected ESD data from the specified WORKMOD. * 00085600
*              GETE is the abbreviation for GETESD.                   * 00085700
*                                                                     * 00085800
*                                                                     * 00085900
*              WORKMOD=xworkmod                                       * 00086000
*                  is the name (RS-type), or address in register      * 00086100
*                  (2)-(12), of a required 8 character input variable * 00086200
*                  that contains the workmod token, which the Binder  * 00086300
*                  returned on a CREATEWMOD request to represent the  * 00086400
*                  workmod. This token must not be modified by the    * 00086500
*                  caller.                                            * 00086600
*                                                                     * 00086700
*                                                                     * 00086800
*                                                                     * 00086900
*                                                                     * 00087000
*              ÝSECTION=»xsection!0º¨                                 * 00087100
*                  is an optional input.  It is the name (RS-type),   * 00087200
*                  or address in register (2)-(12), of a 1024-byte    * 00087300
*                  varying character string variable which is the     * 00087400
*                  name of the control section or named common to be  * 00087500
*                  processed.                                         * 00087600
*                                                                     * 00087700
*                  The first half word of the string contains a count * 00087800
*                  (0 to 1024) of the number of characters in the     * 00087900
*                  string which follows.                              * 00088000
*                  DEFAULT: 0, signifying a null string which         * 00088100
*                  indicates that all sections are to be processed.   * 00088200
*                                                                     * 00088300
*                                                                     * 00088400
*                                                                     * 00088500
*                                                                     * 00088600
*              ÝRECTYPE=»xrectype!0º¨                                 * 00088700
*                  is an optional input.  It is the name (RS-type),   * 00088800
*                  or address in register (2)-(12), of a variable     * 00088900
*                  length string containing the list of ESD record    * 00089000
*                  types to be retrieved. The first half word         * 00089100
*                  contains a count of the number of characters in    * 00089200
*                  the following string. A null (zero length) string  * 00089300
*                  causes the Binder to return all ESD types.         * 00089400
*                                                                     * 00089500
*                  The RECTYPE string consists of 1 or two byte ESD   * 00089600
*                  type mnemonics separated by commas with no blanks. * 00089700
*                  The string is delimited by parentheses. E.g        * 00089800
*                  "(CS,ST,U)" requests ESD types CS, ST and U.       * 00089900
*                  DEFAULT: 0, signifying a null string which         * 00090000
*                  indicates that all record types are to be          * 00090100
*                  processed.                                         * 00090200
*                                                                     * 00090300
*                                                                     * 00090400
*                                                                     * 00090500
*                                                                     * 00090600
*              The following is a set of mutually exclusive keys.     * 00090700
*              This set is optional; only one key may be specified.   * 00090800
*                                                                     * 00090900
*                                                                     * 00091000
*              ÝOFFSET=»xoffset!-1º                                   * 00091100
*                  belongs to a set of mutually exclusive keys. It is * 00091200
*                  the name (RS-type), or address in register         * 00091300
*                  (2)-(12), of an optional fullword input which      * 00091400
*                  contains the offset within the program or within   * 00091500
*                  the section specified by the SECTION keyword.      * 00091600
*                  DEFAULT: -1, indicating that processing is to      * 00091700
*                  start at the start of the item.                    * 00091800
*                                                                     * 00091900
*              SYMBOL=»xsymbolº¨                                      * 00092000
*                  belongs to a set of mutually exclusive keys. It is * 00092100
*                  an optional input.  It is the name (RS-type), or   * 00092200
*                  address in register (2)-(12), of a 1024-byte       * 00092300
*                  varying length character string containing the     * 00092400
*                  symbol to be used.                                 * 00092500
*                                                                     * 00092600
*                  The first half word of the string contains a count * 00092700
*                  (0 to 1024) of the number of characters in the     * 00092800
*                  string which follows.                              * 00092900
*                                                                     * 00093000
*                                                                     * 00093100
*                                                                     * 00093200
*              End of a set of mutually exclusive optional keys.      * 00093300
*              DEFAULT: OFFSET                                        * 00093400
*                                                                     * 00093500
*                                                                     * 00093600
*                                                                     * 00093700
*              AREA=xarea                                             * 00093800
*                  is a required output.  It is the name (RS-type),   * 00093900
*                  or address in register (2)-(12), of a standard     * 00094000
*                  Binder data buffer which will receive the data.    * 00094100
*                                                                     * 00094200
*                                                                     * 00094300
*                                                                     * 00094400
*                                                                     * 00094500
*              CURSOR=xcursor                                         * 00094600
*                  is the name (RS-type), or address in register      * 00094700
*                  (2)-(12), of a required fullword input/output      * 00094800
*                  which contains the relative record number or byte  * 00094900
*                  at which the Binder is to begin processing.        * 00095000
*                  Updated by the Binder on each GETESD request.  A   * 00095100
*                  value of zero indicates the Binder is to start at  * 00095200
*                  the start of the item.                             * 00095300
*                                                                     * 00095400
*                                                                     * 00095500
*                                                                     * 00095600
*                                                                     * 00095700
*              COUNT=xcount                                           * 00095800
*                  is the name (RS-type), or address in register      * 00095900
*                  (2)-(12), of a required fullword output which      * 00096000
*                  contains the number of bytes or entries placed in  * 00096100
*                  the Binder's data buffer.                          * 00096200
*                                                                     * 00096300
*                                                                     * 00096400
*                                                                     * 00096500
*                                                                     * 00096600
*              ÝCLASS=»xclass!0º¨                                     * 00096700
*                  is an optional input.  It is the name (RS-type),   * 00096800
*                  or address in register (2)-(12), of a 16-byte      * 00096900
*                  varying length character string which is the       * 00097000
*                  Binder data class name.                            * 00097100
*                                                                     * 00097200
*                  The first half word of the string contains a count * 00097300
*                  (1 to 16) of the number of characters in the       * 00097400
*                  string which follows.                              * 00097500
*                  DEFAULT: 0, signifying that CLASS is not a         * 00097600
*                  selection criteria for     .  GETE.                * 00097700
*                                                                     * 00097800
*                                                                     * 00097900
*                                                                     * 00098000
*          FUNC=GETN                                                  * 00098100
*              Retrieve a list of section names from the specified    * 00098200
*              WORKMOD.  GETN is the abbreviation for GETNAMES.       * 00098300
*                                                                     * 00098400
*                                                                     * 00098500
*              WORKMOD=xworkmod                                       * 00098600
*                  is the name (RS-type), or address in register      * 00098700
*                  (2)-(12), of a required 8 character input variable * 00098800
*                  that contains the workmod token, which the Binder  * 00098900
*                  returned on a CREATEWMOD request to represent the  * 00099000
*                  workmod. This token must not be modified by the    * 00099100
*                  caller.                                            * 00099200
*                                                                     * 00099300
*                                                                     * 00099400
*                                                                     * 00099500
*                                                                     * 00099600
*              ÝAREA=xarea¨                                           * 00099700
*                  is an optional output.  It is the name (RS-type),  * 00099800
*                  or address in register (2)-(12), of a standard     * 00099900
*                  Binder data buffer which will receive the data. If * 00100000
*                  omitted, the Binder is only required to fill in    * 00100100
*                  the TCOUNT field with the number of section names  * 00100200
*                  in the workmod.                                    * 00100300
*                                                                     * 00100400
*                                                                     * 00100500
*                                                                     * 00100600
*                                                                     * 00100700
*              CURSOR=xcursor                                         * 00100800
*                  is the name (RS-type), or address in register      * 00100900
*                  (2)-(12), of a required fullword input/output      * 00101000
*                  which contains the relative record number or byte  * 00101100
*                  at which the Binder is to begin processing.        * 00101200
*                  Updated by the Binder on each GETDATA request.  A  * 00101300
*                  value of zero indicates the Binder is to start at  * 00101400
*                  the start of the item.                             * 00101500
*                                                                     * 00101600
*                                                                     * 00101700
*                                                                     * 00101800
*                                                                     * 00101900
*              COUNT=xcount                                           * 00102000
*                  is the name (RS-type), or address in register      * 00102100
*                  (2)-(12), of a required fullword output which      * 00102200
*                  contains number of bytes or entries placed in the  * 00102300
*                  Binder's data buffer.                              * 00102400
*                                                                     * 00102500
*                                                                     * 00102600
*                                                                     * 00102700
*                                                                     * 00102800
*              TCOUNT=xtcount                                         * 00102900
*                  is the name (RS-type), or address in register      * 00103000
*                  (2)-(12), of a required fullword output which      * 00103100
*                  contains the total number of section names in the  * 00103200
*                  workmod.                                           * 00103300
*                                                                     * 00103400
*                                                                     * 00103500
*                                                                     * 00103600
*                                                                     * 00103700
*              ÝNTYPE=»S!Cº¨                                          * 00103800
*                  is an optional keyword input which specifies       * 00103900
*                  whether class names or section names are to be     * 00104000
*                  retrived from Workmod.                             * 00104100
*                  DEFAULT: S                                         * 00104200
*                                                                     * 00104300
*                                                                     * 00104400
*                  NTYPE=S                                            * 00104500
*                      Section names are to be retrived.  S is the    * 00104600
*                      abbreviation for SECTION.                      * 00104700
*                                                                     * 00104800
*                  NTYPE=C                                            * 00104900
*                      Class names are to be retrieved.  C is the     * 00105000
*                      abbreviation for CLASS.                        * 00105100
*                                                                     * 00105200
*                                                                     * 00105300
*                                                                     * 00105400
*                                                                     * 00105500
*                                                                     * 00105600
*          FUNC=GETC                                                  * 00105700
*              Retrieve compile unit information from the specified   * 00105800
*              WORKMOD.  GETC is the abbreviation for                 * 00105900
*              GETCompileUnitInfo.                                    * 00106000
*                                                                     * 00106100
*                                                                     * 00106200
*              WORKMOD=xworkmod                                       * 00106300
*                  is the name (RS-type), or address in register      * 00106400
*                  (2)-(12), of a required 8 character input variable * 00106500
*                  that contains the workmod token, which the Binder  * 00106600
*                  returned on a CREATEWMOD request to represent the  * 00106700
*                  workmod. This token must not be modified by the    * 00106800
*                  caller.                                            * 00106900
*                                                                     * 00107000
*                                                                     * 00107100
*                                                                     * 00107200
*                                                                     * 00107300
*              ÝCULIST=»xculist!0º¨                                   * 00107400
*                  is an optional input.  It is the name (RS-type),   * 00107500
*                  or address in register (2)-(12), of a structure    * 00107600
*                  which represents the list of Compile Unit entry.   * 00107700
*                  All entries in this list are four bytes in length, * 00107800
*                  and they are organized as follow:                  * 00107900
*                                                                     * 00108000
*                  The first word contains the number of count.       * 00108100
*                                                                     * 00108200
*                  The second word contains one compile unit entry    * 00108300
*                  (as returned by GETN).                             * 00108400
*                  DEFAULT: 0, indicating that CULIST not specified.  * 00108500
*                                                                     * 00108600
*                                                                     * 00108700
*                                                                     * 00108800
*                                                                     * 00108900
*              AREA=xarea                                             * 00109000
*                  is a required output.  It is the name (RS-type),   * 00109100
*                  or address in register (2)-(12), of a standard     * 00109200
*                  Binder data buffer which will receive the data.    * 00109300
*                                                                     * 00109400
*                                                                     * 00109500
*                                                                     * 00109600
*                                                                     * 00109700
*              CURSOR=xcursor                                         * 00109800
*                  is the name (RS-type), or address in register      * 00109900
*                  (2)-(12), of a required fullword input/output      * 00110000
*                  which contains the relative record number or byte  * 00110100
*                  at which the Binder is to begin processing.        * 00110200
*                  Updated by the Binder on each GETC request.  A     * 00110300
*                  value of zero indicates the Binder is to start at  * 00110400
*                  the start of the item.                             * 00110500
*                                                                     * 00110600
*                                                                     * 00110700
*                                                                     * 00110800
*                                                                     * 00110900
*              COUNT=xcount                                           * 00111000
*                  is the name (RS-type), or address in register      * 00111100
*                  (2)-(12), of a required fullword output which      * 00111200
*                  contains the number of bytes or entries placed in  * 00111300
*                  the Binder's data buffer.                          * 00111400
*                                                                     * 00111500
*                                                                     * 00111600
*                                                                     * 00111700
*          FUNC=IMPORT                                                * 00111800
*              Imports an external symbol from the specified library. * 00111900
*                                                                     * 00112000
*                                                                     * 00112100
*              WORKMOD=xworkmod                                       * 00112200
*                  is the name (RS-type), or address in register      * 00112300
*                  (2)-(12), of a required 8 character input variable * 00112400
*                  that contains the workmod token, which the Binder  * 00112500
*                  returned on a CREATEWMOD request to represent the  * 00112600
*                  workmod. This token must not be modified by the    * 00112700
*                  caller.                                            * 00112800
*                                                                     * 00112900
*                                                                     * 00113000
*                                                                     * 00113100
*                                                                     * 00113200
*              ITYPE=»C!D!E!Fº                                        * 00113300
*                  is a required keyword input which indicates the    * 00113400
*                  type of information represented by the imported    * 00113500
*                  symbol.                                            * 00113600
*                                                                     * 00113700
*                                                                     * 00113800
*                  ITYPE=C                                            * 00113900
*                      The symbol represents code.  C is the          * 00114000
*                      abbreviation for code.                         * 00114100
*                                                                     * 00114200
*                  ITYPE=D                                            * 00114300
*                      The symbol represents data.  D is the          * 00114400
*                      abbreviation for data.                         * 00114500
*                                                                     * 00114600
*                  ITYPE=E                                            * 00114700
*                      The symbol represents code which is amode64.   * 00114800
*                      E is the abbreviation for code64.              * 00114900
*                                                                     * 00115000
*                  ITYPE=F                                            * 00115100
*                      The symbol represents data which is amode64.   * 00115200
*                      F is the abbreviation for data64.              * 00115300
*                                                                     * 00115400
*                                                                     * 00115500
*                                                                     * 00115600
*                                                                     * 00115700
*                                                                     * 00115800
*                                                                     * 00115900
*              DLLNAME=xdllname                                       * 00116000
*                  is a required input.  It is the name (RS-type), or * 00116100
*                  address in register (2)-(12), of a 1024-byte       * 00116200
*                  varying character string variable which represents * 00116300
*                  the member name or alias name of the module        * 00116400
*                  containing the DLL.                                * 00116500
*                                                                     * 00116600
*                  The first half word of the string contains a count * 00116700
*                  (1 to 1024) of the number of characters in the     * 00116800
*                  string which follows.  This count must not be      * 00116900
*                  greater than eight bytes for a directory member or * 00117000
*                  an alias, or 1024 bytes for an HFS path name.      * 00117100
*                                                                     * 00117200
*                                                                     * 00117300
*                                                                     * 00117400
*                                                                     * 00117500
*              INAME=xiname                                           * 00117600
*                  is a required input.  It is the name (RS-type), or * 00117700
*                  address in register (2)-(12), of a 1024-byte       * 00117800
*                  varying character string variable which represents * 00117900
*                  the name of the symbol to be imported.             * 00118000
*                                                                     * 00118100
*                  The first half word of the string contains a count * 00118200
*                  (1 to 1024) of the number of characters in the     * 00118300
*                  string which follows.                              * 00118400
*                                                                     * 00118500
*                                                                     * 00118600
*                                                                     * 00118700
*                                                                     * 00118800
*              The following is a set of mutually exclusive keys.     * 00118900
*              This set is optional; only one key may be specified.   * 00119000
*                                                                     * 00119100
*                                                                     * 00119200
*              ÝOFFSET=»xoffset!0º¨                                   * 00119300
*                  belongs to a set of mutually exclusive keys. It is * 00119400
*                  the name (RS-type), or address in register         * 00119500
*                  (2)-(12), of an optional fullword input Offset for * 00119600
*                  a function descriptor.                             * 00119700
*                  DEFAULT: 0, indicating that offset not specified.  * 00119800
*                                                                     * 00119900
*                                                                     * 00120000
*                                                                     * 00120100
*              End of a set of mutually exclusive optional keys.      * 00120200
*              DEFAULT: OFFSET                                        * 00120300
*                                                                     * 00120400
*                                                                     * 00120500
*          FUNC=INCLUDE                                               * 00120600
*              Include an external file into the specified WORKMOD.   * 00120700
*                                                                     * 00120800
*                                                                     * 00120900
*              WORKMOD=xworkmod                                       * 00121000
*                  is the name (RS-type), or address in register      * 00121100
*                  (2)-(12), of a required 8 character input variable * 00121200
*                  that contains the workmod token, which the Binder  * 00121300
*                  returned on a CREATEWMOD request to represent the  * 00121400
*                  workmod. This token must not be modified by the    * 00121500
*                  caller.                                            * 00121600
*                                                                     * 00121700
*                                                                     * 00121800
*                                                                     * 00121900
*                                                                     * 00122000
*              INTYPE=»D!N!P!S!Tº                                     * 00122100
*                  is a required keyword input which indicates how    * 00122200
*                  the Binder is to find the input program.           * 00122300
*                                                                     * 00122400
*                                                                     * 00122500
*                  INTYPE=D                                           * 00122600
*                      An external file contains the program and      * 00122700
*                      control statements to be included. DDNAME and  * 00122800
*                      DEPTR must be specified on the call.  The      * 00122900
*                      directory entry is in PDS2 format.  D is the   * 00123000
*                      abbreviation for DEPTR.                        * 00123100
*                                                                     * 00123200
*                                                                     * 00123300
*                      The following is a set of mutually exclusive   * 00123400
*                      keys.  This set is required; only one key must * 00123500
*                      be specified.                                  * 00123600
*                                                                     * 00123700
*                                                                     * 00123800
*                      DDNAME=xddname                                 * 00123900
*                          belongs to a set of mutually exclusive     * 00124000
*                          keys. It is an input.  It is the name      * 00124100
*                          (RS-type), or address in register          * 00124200
*                          (2)-(12), of an 8-byte varying length      * 00124300
*                          character string which contains the ddname * 00124400
*                          of the library containing the program and  * 00124500
*                          control statements to be included into the * 00124600
*                          workmod.  workmod.                         * 00124700
*                                                                     * 00124800
*                          The first half word of the string contains * 00124900
*                          a count (1 to 8) of the number of          * 00125000
*                          characters in the string which follows.    * 00125100
*                                                                     * 00125200
*                                                                     * 00125300
*                                                                     * 00125400
*                      End of a set of mutually exclusive required    * 00125500
*                      keys.                                          * 00125600
*                                                                     * 00125700
*                                                                     * 00125800
*                                                                     * 00125900
*                      DEPTR=xdeptr                                   * 00126000
*                          is the name (RS-type), or address in       * 00126100
*                          register (2)-(12), of a required 4 byte    * 00126200
*                          input that contains the address which      * 00126300
*                          contains the address of a PDS2 format      * 00126400
*                          directory entry of the member to be        * 00126500
*                          included into the workmod.                 * 00126600
*                                                                     * 00126700
*                                                                     * 00126800
*                                                                     * 00126900
*                  INTYPE=N                                           * 00127000
*                      An external file contains the program and      * 00127100
*                      control statements to be included. DDNAME and, * 00127200
*                      if the file is a library, MEMBER keywords must * 00127300
*                      be specified on the call.  N is the            * 00127400
*                      abbreviation for NAME.                         * 00127500
*                                                                     * 00127600
*                                                                     * 00127700
*                      The following is a set of mutually exclusive   * 00127800
*                      keys.  This set is required; only one key must * 00127900
*                      be specified.                                  * 00128000
*                                                                     * 00128100
*                                                                     * 00128200
*                      DDNAME=xddname                                 * 00128300
*                          belongs to a set of mutually exclusive     * 00128400
*                          keys. It is an input.  It is the name      * 00128500
*                          (RS-type), or address in register          * 00128600
*                          (2)-(12), of key                           * 00128700
*                                                                     * 00128800
*                          It is an 8-byte varying length character   * 00128900
*                          string containing the ddname of the        * 00129000
*                          sequential data set or library containing  * 00129100
*                          the program and control statements to be   * 00129200
*                          included into the workmod. If the data set * 00129300
*                          is a library then the MEMBER keyword is    * 00129400
*                          also required.                             * 00129500
*                                                                     * 00129600
*                          The first half word of the string contains * 00129700
*                          a count (1 to 8) of the number of          * 00129800
*                          characters in the string which follows.    * 00129900
*                                                                     * 00130000
*                                                                     * 00130100
*                          ÝMEMBER=»xmember!0º¨                       * 00130200
*                              is an optional input.  It is the name  * 00130300
*                              (RS-type), or address in register      * 00130400
*                              (2)-(12), of a 1024-byte varying       * 00130500
*                              length character string containing the * 00130600
*                              member name or alias name of the       * 00130700
*                              member to be included into the         * 00130800
*                              workmod.  MEMBER is only required when * 00130900
*                              DDNAME is specified and DDNAME refers  * 00131000
*                              to a library.                          * 00131100
*                                                                     * 00131200
*                              The first half word of the string      * 00131300
*                              contains a count (0 to 1024) of the    * 00131400
*                              number of characters in the string     * 00131500
*                              which follows.                         * 00131600
*                              DEFAULT: 0, signifying a null string   * 00131700
*                              which indicates that DDNAME refers to  * 00131800
*                              a sequential file.                     * 00131900
*                                                                     * 00132000
*                                                                     * 00132100
*                                                                     * 00132200
*                      PATHNAME=xpathname                             * 00132300
*                          belongs to a set of mutually exclusive     * 00132400
*                          keys. It is an input.  It is the name      * 00132500
*                          (RS-type), or address in register          * 00132600
*                          (2)-(12), of a key                         * 00132700
*                                                                     * 00132800
*                          It is a 1024-byte varying length character * 00132900
*                          string containing the HFS path name to be  * 00133000
*                          used for automatic library calls.          * 00133100
*                                                                     * 00133200
*                          The first half word of the string contains * 00133300
*                          a count (0 to 1024) of the number of       * 00133400
*                          characters in the string which follows.    * 00133500
*                                                                     * 00133600
*                                                                     * 00133700
*                                                                     * 00133800
*                      End of a set of mutually exclusive required    * 00133900
*                      keys.                                          * 00134000
*                                                                     * 00134100
*                                                                     * 00134200
*                  INTYPE=P                                           * 00134300
*                      An external file contains the program and      * 00134400
*                      control statements to be included. DCBPTR and  * 00134500
*                      DEPTR must be specified on the call.  The      * 00134600
*                      directory entry is in PDS2 BLDL format.  P is  * 00134700
*                      the abbreviation for POINTER.                  * 00134800
*                                                                     * 00134900
*                                                                     * 00135000
*                      DCBPTR=xdcbptr                                 * 00135100
*                          is the name (RS-type), or address in       * 00135200
*                          register (2)-(12), of a required 4 byte    * 00135300
*                          input that contains the address which      * 00135400
*                          contains the address of a DCB which has    * 00135500
*                          been opened for a library containing the   * 00135600
*                          program to be included into the workmod.   * 00135700
*                                                                     * 00135800
*                                                                     * 00135900
*                                                                     * 00136000
*                                                                     * 00136100
*                      DEPTR=xdeptr                                   * 00136200
*                          is the name (RS-type), or address in       * 00136300
*                          register (2)-(12), of a required 4 byte    * 00136400
*                          input that contains the address which      * 00136500
*                          contains the address of a PDS2 format (as  * 00136600
*                          returned by BLDL) directory entry of the   * 00136700
*                          member to be included into the workmod.    * 00136800
*                                                                     * 00136900
*                                                                     * 00137000
*                                                                     * 00137100
*                  INTYPE=S                                           * 00137200
*                      An external file contains the program and      * 00137300
*                      control statements to be included. DDNAME and  * 00137400
*                      DEPTR must be specified on the call.  The      * 00137500
*                      directory entry is in SMDE format.  S is the   * 00137600
*                      abbreviation for SMDE.                         * 00137700
*                                                                     * 00137800
*                                                                     * 00137900
*                      The following is a set of mutually exclusive   * 00138000
*                      keys.  This set is required; only one key must * 00138100
*                      be specified.                                  * 00138200
*                                                                     * 00138300
*                                                                     * 00138400
*                      DDNAME=xddname                                 * 00138500
*                          belongs to a set of mutually exclusive     * 00138600
*                          keys. It is an input.  It is the name      * 00138700
*                          (RS-type), or address in register          * 00138800
*                          (2)-(12), of an 8-byte varying length      * 00138900
*                          character string which contains the ddname * 00139000
*                          of the library containing the program and  * 00139100
*                          control statements to be included into the * 00139200
*                          workmod.  workmod.                         * 00139300
*                                                                     * 00139400
*                          The first half word of the string contains * 00139500
*                          a count (1 to 8) of the number of          * 00139600
*                          characters in the string which follows.    * 00139700
*                                                                     * 00139800
*                                                                     * 00139900
*                                                                     * 00140000
*                      End of a set of mutually exclusive required    * 00140100
*                      keys.                                          * 00140200
*                                                                     * 00140300
*                                                                     * 00140400
*                                                                     * 00140500
*                      DEPTR=xdeptr                                   * 00140600
*                          is the name (RS-type), or address in       * 00140700
*                          register (2)-(12), of a required 4 byte    * 00140800
*                          input that contains the address which      * 00140900
*                          contains the address of a SMDE format      * 00141000
*                          directory entry of the member to be        * 00141100
*                          included into the workmod.                 * 00141200
*                                                                     * 00141300
*                                                                     * 00141400
*                                                                     * 00141500
*                  INTYPE=T                                           * 00141600
*                      The program is already loaded into storage.    * 00141700
*                      EPTOKEN keyword must be specified on the call. * 00141800
*                      T is the abbreviation for TOKEN.               * 00141900
*                                                                     * 00142000
*                                                                     * 00142100
*                      EPTOKEN=xeptoken                               * 00142200
*                          is the name (RS-type), or address in       * 00142300
*                          register (2)-(12), of a required 4         * 00142400
*                          character input value which is the EPTOKEN * 00142500
*                          returned by the CSVQUERY service. The      * 00142600
*                          EPTOKEN represents the program to be       * 00142700
*                          included into the workmod.                 * 00142800
*                                                                     * 00142900
*                                                                     * 00143000
*                                                                     * 00143100
*                                                                     * 00143200
*                                                                     * 00143300
*                                                                     * 00143400
*                                                                     * 00143500
*                                                                     * 00143600
*              ÝATTRIB=»N!Yº¨                                         * 00143700
*                  is an optional keyword input which indicates       * 00143800
*                  whether or not the program attributes are to be    * 00143900
*                  included by INCLUDE as well as the program itself. * 00144000
*                  DEFAULT: N                                         * 00144100
*                                                                     * 00144200
*                                                                     * 00144300
*                  ATTRIB=N                                           * 00144400
*                      program attributes will not be included as     * 00144500
*                      well as the program.  included. DDNAME and, if * 00144600
*                      the file is a library, MEMBER keywords must be * 00144700
*                      specified on the call.  N is the abbreviation  * 00144800
*                      for NO.                                        * 00144900
*                                                                     * 00145000
*                  ATTRIB=Y                                           * 00145100
*                      program attributes will be included as well as * 00145200
*                      the program.  Y is the abbreviation for YES.   * 00145300
*                                                                     * 00145400
*                                                                     * 00145500
*                                                                     * 00145600
*                                                                     * 00145700
*                                                                     * 00145800
*                                                                     * 00145900
*              ÝALIASES=»N!Y!Kº¨                                      * 00146000
*                  is an optional keyword input which indicates       * 00146100
*                  whether or not the program aliases are to be       * 00146200
*                  included by INCLUDE as well as the program name.   * 00146300
*                  DEFAULT: N                                         * 00146400
*                                                                     * 00146500
*                                                                     * 00146600
*                  ALIASES=N                                          * 00146700
*                      program alias names will not be included as    * 00146800
*                      well as the program name.  N is the            * 00146900
*                      abbreviation for NO.                           * 00147000
*                                                                     * 00147100
*                  ALIASES=Y                                          * 00147200
*                      program alias names will be included as well   * 00147300
*                      as the program name.  Y is the abbreviation    * 00147400
*                      for YES.                                       * 00147500
*                                                                     * 00147600
*                  ALIASES=K                                          * 00147700
*                      program alias names are available for use on   * 00147800
*                      the ADDAlias function DNAME parameter.  K is   * 00147900
*                      the abbreviation for KEEP.                     * 00148000
*                                                                     * 00148100
*                                                                     * 00148200
*                                                                     * 00148300
*                                                                     * 00148400
*                                                                     * 00148500
*                                                                     * 00148600
*              ÝIMPORTS=»Y!Nº¨                                        * 00148700
*                  is an optional keyword input which indicates       * 00148800
*                  whether or not the import statements are to be     * 00148900
*                  included from input module.                        * 00149000
*                  DEFAULT: Y                                         * 00149100
*                                                                     * 00149200
*                                                                     * 00149300
*                  IMPORTS=Y                                          * 00149400
*                      import statements from the input module will   * 00149500
*                      be included.  Y is the abbreviation for YES.   * 00149600
*                                                                     * 00149700
*                  IMPORTS=N                                          * 00149800
*                      import statements from the input module will   * 00149900
*                      not be included.  N is the abbreviation for    * 00150000
*                      NO.                                            * 00150100
*                                                                     * 00150200
*                                                                     * 00150300
*                                                                     * 00150400
*                                                                     * 00150500
*                                                                     * 00150600
*          FUNC=INSERTS                                               * 00150700
*              Insert control section in a segment.  INSERTS is the   * 00150800
*              abbreviation for INSERTSECT.                           * 00150900
*                                                                     * 00151000
*                                                                     * 00151100
*              WORKMOD=xworkmod                                       * 00151200
*                  is the name (RS-type), or address in register      * 00151300
*                  (2)-(12), of a required 8 character input variable * 00151400
*                  that contains the workmod token, which the Binder  * 00151500
*                  returned on a CREATEWMOD request to represent the  * 00151600
*                  workmod. This token must not be modified by the    * 00151700
*                  caller.                                            * 00151800
*                                                                     * 00151900
*                                                                     * 00152000
*                                                                     * 00152100
*                                                                     * 00152200
*              SECTION=xsection                                       * 00152300
*                  is a required input.  It is the name (RS-type), or * 00152400
*                  address in register (2)-(12), of a 1024-byte       * 00152500
*                  varying length character string variable which is  * 00152600
*                  the name of the control section or named common to * 00152700
*                  be inserted in the program.                        * 00152800
*                                                                     * 00152900
*                  The first half word of the string contains a count * 00153000
*                  (1 to 1024) of the number of characters in the     * 00153100
*                  string which follows.                              * 00153200
*                                                                     * 00153300
*                                                                     * 00153400
*                                                                     * 00153500
*          FUNC=LOADW                                                 * 00153600
*              Load the specified WORKMOD into storage for execution. * 00153700
*              LOADW is the abbreviation for LOADWMOD.                * 00153800
*                                                                     * 00153900
*                                                                     * 00154000
*              WORKMOD=xworkmod                                       * 00154100
*                  is the name (RS-type), or address in register      * 00154200
*                  (2)-(12), of a required 8 character input variable * 00154300
*                  that contains the workmod token, which the Binder  * 00154400
*                  returned on a CREATEWMOD request to represent the  * 00154500
*                  workmod. This token must not be modified by the    * 00154600
*                  caller.                                            * 00154700
*                                                                     * 00154800
*                                                                     * 00154900
*                                                                     * 00155000
*                                                                     * 00155100
*              EPLOC=xeploc                                           * 00155200
*                  is the name (RS-type), or address in register      * 00155300
*                  (2)-(12), of a required 4 byte output that will    * 00155400
*                  contain the address which contains the value which * 00155500
*                  is the address of the entry point returned by the  * 00155600
*                  Binder.                                            * 00155700
*                                                                     * 00155800
*                                                                     * 00155900
*                                                                     * 00156000
*                                                                     * 00156100
*              IDENTIFY=»N!Yº                                         * 00156200
*                  is a required keyword input which indicates        * 00156300
*                  whether the program is to be identified to         * 00156400
*                  Contents Supervisor on a LOADWMOD request.         * 00156500
*                                                                     * 00156600
*                                                                     * 00156700
*                  IDENTIFY=N                                         * 00156800
*                      The Binder will not use the IDENTIFY macro to  * 00156900
*                      make the program known to Contents Supervisor. * 00157000
*                      The addresses of storage occupied by the       * 00157100
*                      program will be returned via the required      * 00157200
*                      EXTLST parameter. The caller must freemain the * 00157300
*                      program storage when it is no longer needed.   * 00157400
*                      N is the abbreviation for NO.                  * 00157500
*                                                                     * 00157600
*                                                                     * 00157700
*                      EXTLST=xextlst                                 * 00157800
*                          is a required output.  It is the name      * 00157900
*                          (RS-type), or address in register          * 00158000
*                          (2)-(12), of a standard Binder data buffer * 00158100
*                          which will contain the extent list of the  * 00158200
*                          loaded program.                            * 00158300
*                                                                     * 00158400
*                                                                     * 00158500
*                                                                     * 00158600
*                  IDENTIFY=Y                                         * 00158700
*                      The Binder should issue the IDENTIFY macro.    * 00158800
*                      The name by which the program is to be known   * 00158900
*                      to Contents Supervisor may be passed via the   * 00159000
*                      optional LNAME parameter.  The addresses of    * 00159100
*                      storage occupied by the program may be         * 00159200
*                      returned via the optional EXTLST parameter.    * 00159300
*                      Contents Supervisor will cleanup program       * 00159400
*                      storage when it is no longer needed.  Y is the * 00159500
*                      abbreviation for YES.                          * 00159600
*                                                                     * 00159700
*                                                                     * 00159800
*                      ÝEXTLST=xextlst¨                               * 00159900
*                          is an optional output.  It is the name     * 00160000
*                          (RS-type), or address in register          * 00160100
*                          (2)-(12), of a standard Binder data buffer * 00160200
*                          which will contain the extent list of the  * 00160300
*                          loaded program.                            * 00160400
*                                                                     * 00160500
*                                                                     * 00160600
*                                                                     * 00160700
*                                                                     * 00160800
*                      ÝLNAME=»xlname!0º¨                             * 00160900
*                          is an optional input.  It is the name      * 00161000
*                          (RS-type), or address in register          * 00161100
*                          (2)-(12), of an 8-byte varying length      * 00161200
*                          character string which contains the name   * 00161300
*                          to be used by the Binder to identify the   * 00161400
*                          program to Contents Supervisor.            * 00161500
*                                                                     * 00161600
*                          The first half word of the string contains * 00161700
*                          a count (0 to 8) of the number of          * 00161800
*                          characters in the string which follows.    * 00161900
*                          DEFAULT: 0, signifying a null string which * 00162000
*                          indicates that the Binder takes the        * 00162100
*                          program name from the program's options or * 00162200
*                          uses the name "**GO" for the program.      * 00162300
*                                                                     * 00162400
*                                                                     * 00162500
*                                                                     * 00162600
*                                                                     * 00162700
*                                                                     * 00162800
*                                                                     * 00162900
*                                                                     * 00163000
*          FUNC=ORDERS                                                * 00163100
*              Specify section sequence within the WORKMOD.  ORDERS   * 00163200
*              is the abbreviation for ORDERSECT.                     * 00163300
*                                                                     * 00163400
*                                                                     * 00163500
*              WORKMOD=xworkmod                                       * 00163600
*                  is the name (RS-type), or address in register      * 00163700
*                  (2)-(12), of a required 8 character input variable * 00163800
*                  that contains the workmod token, which the Binder  * 00163900
*                  returned on a CREATEWMOD request to represent the  * 00164000
*                  workmod. This token must not be modified by the    * 00164100
*                  caller.                                            * 00164200
*                                                                     * 00164300
*                                                                     * 00164400
*                                                                     * 00164500
*                                                                     * 00164600
*              SECTION=xsection                                       * 00164700
*                  is a required input.  It is the name (RS-type), or * 00164800
*                  address in register (2)-(12), of a 1024-byte       * 00164900
*                  varying length character string variable which is  * 00165000
*                  the name of the control section or named common to * 00165100
*                  be reordered in the workmod.                       * 00165200
*                                                                     * 00165300
*                  The first half word of the string contains a count * 00165400
*                  (1 to 1024) of the number of characters in the     * 00165500
*                  string which follows.                              * 00165600
*                                                                     * 00165700
*                                                                     * 00165800
*                                                                     * 00165900
*          FUNC=PUTD                                                  * 00166000
*              Store buffer data in the specified WORKMOD.  PUTD is   * 00166100
*              the abbreviation for PUTDATA.                          * 00166200
*                                                                     * 00166300
*                                                                     * 00166400
*              WORKMOD=xworkmod                                       * 00166500
*                  is the name (RS-type), or address in register      * 00166600
*                  (2)-(12), of a required 8 character input variable * 00166700
*                  that contains the workmod token, which the Binder  * 00166800
*                  returned on a CREATEWMOD request to represent the  * 00166900
*                  workmod. This token must not be modified by the    * 00167000
*                  caller.                                            * 00167100
*                                                                     * 00167200
*                                                                     * 00167300
*                                                                     * 00167400
*                                                                     * 00167500
*              CLASS=xclass                                           * 00167600
*                  is a required input.  It is the name (RS-type), or * 00167700
*                  address in register (2)-(12), of a 16-byte varying * 00167800
*                  length character string which is the Binder data   * 00167900
*                  class name.                                        * 00168000
*                                                                     * 00168100
*                  The first half word of the string contains a count * 00168200
*                  (1 to 16) of the number of characters in the       * 00168300
*                  string which follows.                              * 00168400
*                                                                     * 00168500
*                                                                     * 00168600
*                                                                     * 00168700
*                                                                     * 00168800
*              ÝSECTION=»xsection!0º¨                                 * 00168900
*                  is an optional input.  It is the name (RS-type),   * 00169000
*                  or address in register (2)-(12), of a 1024-byte    * 00169100
*                  varying length character string variable which is  * 00169200
*                  the name of the section to be processed.           * 00169300
*                                                                     * 00169400
*                  The first half word of the string contains a count * 00169500
*                  (1 to 1024) of the number of characters in the     * 00169600
*                  string which follows.                              * 00169700
*                  DEFAULT: 0, signifying a null string which         * 00169800
*                  indicates that all sections are to be processed.   * 00169900
*                                                                     * 00170000
*                                                                     * 00170100
*                                                                     * 00170200
*                                                                     * 00170300
*              ÝAREA=»xarea!0º                                        * 00170400
*                  is an optional input.  It is the name (RS-type),   * 00170500
*                  or address in register (2)-(12), of a standard     * 00170600
*                  Binder data buffer which contains the data for the * 00170700
*                  workmod.  The number of data bytes to be used is   * 00170800
*                  specified by COUNT.                                * 00170900
*                  DEFAULT: 0, signifying a zero doubleword           * 00171000
*                  indicating that no data is to be added to the      * 00171100
*                  workmod.  PUTDATA is simply signalling an          * 00171200
*                  end-of-section condition.                          * 00171300
*                                                                     * 00171400
*                                                                     * 00171500
*                  COUNT=xcount¨                                      * 00171600
*                      is the name (RS-type), or address in register  * 00171700
*                      (2)-(12), of a required fullword input which   * 00171800
*                      contains the number of bytes or records in the * 00171900
*                      Binder's data buffer which the Binder is to    * 00172000
*                      insert into the workmod.                       * 00172100
*                                                                     * 00172200
*                                                                     * 00172300
*                                                                     * 00172400
*                                                                     * 00172500
*                                                                     * 00172600
*                                                                     * 00172700
*              ÝCURSOR=»xcursor!-1º¨                                  * 00172800
*                  is the name (RS-type), or address in register      * 00172900
*                  (2)-(12), of an optional fullword input/output     * 00173000
*                  which contains the relative record number or byte  * 00173100
*                  at which the Binder is to store the data. If       * 00173200
*                  CURSOR=0 the Binder stores the data at the start   * 00173300
*                  of the item. If CURSOR=-1, the Binder stores the   * 00173400
*                  data at the end of the item.                       * 00173500
*                  DEFAULT: -1, meaning the Binder is to start at the * 00173600
*                  end.                                               * 00173700
*                                                                     * 00173800
*                                                                     * 00173900
*                                                                     * 00174000
*                                                                     * 00174100
*              ÝNEWSECT=»N!Yº¨                                        * 00174200
*                  is an optional keyword input which indicates       * 00174300
*                  whether or not new sections are being added to the * 00174400
*                  workmod on a PUTDATA request. Once NEWSECT=YES has * 00174500
*                  been passed, all subsequent PUTDATA requests must  * 00174600
*                  also specify NEWSECT=YES until ENDDATA=YES has     * 00174700
*                  been specified.                                    * 00174800
*                  DEFAULT: N                                         * 00174900
*                                                                     * 00175000
*                                                                     * 00175100
*                  NEWSECT=N                                          * 00175200
*                      Data is to be added to existing sections.  N   * 00175300
*                      is the abbreviation for NO.                    * 00175400
*                                                                     * 00175500
*                  NEWSECT=Y                                          * 00175600
*                      New sections are to be added to the workmod.   * 00175700
*                      Y is the abbreviation for YES.                 * 00175800
*                                                                     * 00175900
*                                                                     * 00176000
*                                                                     * 00176100
*                                                                     * 00176200
*                                                                     * 00176300
*                                                                     * 00176400
*              ÝENDDATA=»N!Yº¨                                        * 00176500
*                  is an optional keyword input which indicates all   * 00176600
*                  sections being added by the current series of      * 00176700
*                  PUTDATA requests are complete. The Binder performs * 00176800
*                  validity checks on the RLD and ESD data which was  * 00176900
*                  added.                                             * 00177000
*                  DEFAULT: N                                         * 00177100
*                                                                     * 00177200
*                                                                     * 00177300
*                  ENDDATA=N                                          * 00177400
*                      New sections have not been completed.  N is    * 00177500
*                      the abbreviation for NO.                       * 00177600
*                                                                     * 00177700
*                  ENDDATA=Y                                          * 00177800
*                      New sections are complete and the Binder is to * 00177900
*                      validity check them.  Y is the abbreviation    * 00178000
*                      for YES.                                       * 00178100
*                                                                     * 00178200
*                                                                     * 00178300
*                                                                     * 00178400
*                                                                     * 00178500
*                                                                     * 00178600
*          FUNC=RENAME                                                * 00178700
*              Specify that an external symbol and section(s) are to  * 00178800
*              be renamed.  All references to OLDNAME are changed to  * 00178900
*              refer to NEWNAME.  Any sections named OLDNAME are      * 00179000
*              renamed to NEWNAME.                                    * 00179100
*                                                                     * 00179200
*                                                                     * 00179300
*              WORKMOD=xworkmod                                       * 00179400
*                  is the name (RS-type), or address in register      * 00179500
*                  (2)-(12), of a required 8 character input variable * 00179600
*                  that contains the workmod token, which the Binder  * 00179700
*                  returned on a CREATEWMOD request to represent the  * 00179800
*                  workmod. This token must not be modified by the    * 00179900
*                  caller.                                            * 00180000
*                                                                     * 00180100
*                                                                     * 00180200
*                                                                     * 00180300
*                                                                     * 00180400
*              OLDNAME=xoldname                                       * 00180500
*                  is a required input.  It is the name (RS-type), or * 00180600
*                  address in register (2)-(12), of a 1024 byte       * 00180700
*                  varying length character string.  This variable    * 00180800
*                  contains the symbol to be renamed.                 * 00180900
*                                                                     * 00181000
*                  The first half word of the string contains a count * 00181100
*                  (1 to 1024) of the number of characters in the     * 00181200
*                  string which follows.                              * 00181300
*                                                                     * 00181400
*                                                                     * 00181500
*                                                                     * 00181600
*                                                                     * 00181700
*              NEWNAME=xnewname                                       * 00181800
*                  is a required input.  It is the name (RS-type), or * 00181900
*                  address in register (2)-(12), of a 1024-byte       * 00182000
*                  varying-length character string.  This variable    * 00182100
*                  contains the name to which the old name is to be   * 00182200
*                  changed.                                           * 00182300
*                                                                     * 00182400
*                  The first half word of the string contains a count * 00182500
*                  (0 to 1024) of the number of characters in the     * 00182600
*                  string which follows.                              * 00182700
*                                                                     * 00182800
*                                                                     * 00182900
*                                                                     * 00183000
*          FUNC=RESETW                                                * 00183100
*              Reset the specified WORKMOD to empty state.  RESETW is * 00183200
*              the abbreviation for RESETWMOD.                        * 00183300
*                                                                     * 00183400
*                                                                     * 00183500
*              WORKMOD=xworkmod                                       * 00183600
*                  is the name (RS-type), or address in register      * 00183700
*                  (2)-(12), of a required 8 character input variable * 00183800
*                  that contains the workmod token, which the Binder  * 00183900
*                  returned on a CREATEWMOD request to represent the  * 00184000
*                  workmod. This token must not be modified by the    * 00184100
*                  caller.                                            * 00184200
*                                                                     * 00184300
*                                                                     * 00184400
*                                                                     * 00184500
*                                                                     * 00184600
*              INTENT=»B!Aº                                           * 00184700
*                  is a required keyword input which indicates        * 00184800
*                  whether or not a BIND will be requested for the    * 00184900
*                  workmod when it is built.  Processing intent       * 00185000
*                  determines the range of Binder functions which can * 00185100
*                  be requested for the Workmod.                      * 00185200
*                                                                     * 00185300
*                                                                     * 00185400
*                  INTENT=B                                           * 00185500
*                      Indicates a BIND will be performed on the      * 00185600
*                      program.  B is the abbreviation for BIND.      * 00185700
*                                                                     * 00185800
*                  INTENT=A                                           * 00185900
*                      Specifies that the workmod will be accessed    * 00186000
*                      but not bound.  A is the abbreviation for      * 00186100
*                      ACCESS.                                        * 00186200
*                                                                     * 00186300
*                                                                     * 00186400
*                                                                     * 00186500
*                                                                     * 00186600
*                                                                     * 00186700
*                                                                     * 00186800
*              ÝPROTECT=»Y!Nº¨                                        * 00186900
*                  is an optional keyword input which specifies       * 00187000
*                  whether or not the Binder will be allowed to       * 00187100
*                  delete an altered program.                         * 00187200
*                  DEFAULT: Y                                         * 00187300
*                                                                     * 00187400
*                                                                     * 00187500
*                  PROTECT=Y                                          * 00187600
*                      Prevents the Binder from deleting altered      * 00187700
*                      programs.  Y is the abbreviation for YES.      * 00187800
*                                                                     * 00187900
*                  PROTECT=N                                          * 00188000
*                      The Binder is allowed to delete altered        * 00188100
*                      programs..  N is the abbreviation for NO.      * 00188200
*                                                                     * 00188300
*                                                                     * 00188400
*                                                                     * 00188500
*                                                                     * 00188600
*                                                                     * 00188700
*          FUNC=SAVEW                                                 * 00188800
*              Save WORKMOD in program library.  SAVEW is the         * 00188900
*              abbreviation for SAVEWMOD.                             * 00189000
*                                                                     * 00189100
*                                                                     * 00189200
*              WORKMOD=xworkmod                                       * 00189300
*                  is the name (RS-type), or address in register      * 00189400
*                  (2)-(12), of a required 8 character input variable * 00189500
*                  that contains the workmod token, which the Binder  * 00189600
*                  returned on a CREATEWMOD request to represent the  * 00189700
*                  workmod. This token must not be modified by the    * 00189800
*                  caller.                                            * 00189900
*                                                                     * 00190000
*                                                                     * 00190100
*                                                                     * 00190200
*                                                                     * 00190300
*              ÝMODLIB=»xmodlib!0º¨                                   * 00190400
*                  is an optional input.  It is the name (RS-type),   * 00190500
*                  or address in register (2)-(12), of an 8-byte      * 00190600
*                  varying character string which contains the ddname * 00190700
*                  of the target library for a SAVEWMOD request.      * 00190800
*                                                                     * 00190900
*                  The first half word of the string contains a count * 00191000
*                  (0 to 8) of the number of characters in the string * 00191100
*                  which follows.                                     * 00191200
*                  DEFAULT: 0, signifying a null string which         * 00191300
*                  indicates the Binder is to use the ddname          * 00191400
*                  specified in the MODLIB option set at STARTDIALOG  * 00191500
*                  or SETOPTIONS time.                                * 00191600
*                                                                     * 00191700
*                                                                     * 00191800
*                                                                     * 00191900
*                                                                     * 00192000
*              ÝSNAME=»xsname!0º¨                                     * 00192100
*                  is an optional input.  It is the name (RS-type),   * 00192200
*                  or address in register (2)-(12), of an 8-byte      * 00192300
*                  varying character string which contains the        * 00192400
*                  program name to be used for a SAVEWMOD request.    * 00192500
*                                                                     * 00192600
*                  The first half word of the string contains a count * 00192700
*                  (0 to 8) of the number of characters in the string * 00192800
*                  which follows.                                     * 00192900
*                  DEFAULT: 0, signifying a null string which         * 00193000
*                  indicates that the Binder is to use the member     * 00193100
*                  name appearing on the MODLIB dd statement or else  * 00193200
*                  use the member name specified in the SNAME option  * 00193300
*                  set at SETOPTIONS time.                            * 00193400
*                                                                     * 00193500
*                                                                     * 00193600
*                                                                     * 00193700
*                                                                     * 00193800
*              ÝREPLACE=»N!Yº¨                                        * 00193900
*                  is an optional keyword input which indicates       * 00194000
*                  whether or not the program will replace a like     * 00194100
*                  named existing program.                            * 00194200
*                  DEFAULT: N                                         * 00194300
*                                                                     * 00194400
*                                                                     * 00194500
*                  REPLACE=N                                          * 00194600
*                      The program will not be allowed to replace any * 00194700
*                      like named program.  N is the abbreviation for * 00194800
*                      NO.                                            * 00194900
*                                                                     * 00195000
*                  REPLACE=Y                                          * 00195100
*                      The program will replace any like named        * 00195200
*                      program.  Y is the abbreviation for YES.       * 00195300
*                                                                     * 00195400
*                                                                     * 00195500
*                                                                     * 00195600
*                                                                     * 00195700
*                                                                     * 00195800
*          FUNC=SETL                                                  * 00195900
*              Specify autocall library.  SETL is the abbreviation    * 00196000
*              for SETLIB.                                            * 00196100
*                                                                     * 00196200
*                                                                     * 00196300
*              WORKMOD=xworkmod                                       * 00196400
*                  is the name (RS-type), or address in register      * 00196500
*                  (2)-(12), of a required 8 character input variable * 00196600
*                  that contains the workmod token, which the Binder  * 00196700
*                  returned on a CREATEWMOD request to represent the  * 00196800
*                  workmod. This token must not be modified by the    * 00196900
*                  caller.                                            * 00197000
*                                                                     * 00197100
*                                                                     * 00197200
*                                                                     * 00197300
*                                                                     * 00197400
*              ÝSYMBOL=»xsymbol!0º¨                                   * 00197500
*                  is an optional input.  It is the name (RS-type),   * 00197600
*                  or address in register (2)-(12), of a 1024-byte    * 00197700
*                  varying length character string containing the     * 00197800
*                  symbol for which special processing is being       * 00197900
*                  specified.                                         * 00198000
*                                                                     * 00198100
*                  The first half word of the string contains a count * 00198200
*                  (1 to 1024) of the number of characters in the     * 00198300
*                  string which follows.                              * 00198400
*                                                                     * 00198500
*                  This may be omitted when LIBOPT=CALL to indicate   * 00198600
*                  that the entire library identified by CALLIB or    * 00198700
*                  PATHNAME is to be searched as a part of final      * 00198800
*                  autocall processing. The library will effectively  * 00198900
*                  be concatenated in front of SYSLIB (or its         * 00199000
*                  replacement).                                      * 00199100
*                  DEFAULT: 0, signifying that no symbol is being     * 00199200
*                  passed.                                            * 00199300
*                                                                     * 00199400
*                                                                     * 00199500
*                                                                     * 00199600
*                                                                     * 00199700
*              ÝLIBOPT=»C!N!Eº¨                                       * 00199800
*                  is an optional keyword input which controls which  * 00199900
*                  library is to be searched to locate the symbol     * 00200000
*                  specified on the SYMBOL parameter.                 * 00200100
*                  DEFAULT: C                                         * 00200200
*                                                                     * 00200300
*                                                                     * 00200400
*                  LIBOPT=C                                           * 00200500
*                      The library specified by CALLIB will be used.  * 00200600
*                      C is the abbreviation for CALL.                * 00200700
*                                                                     * 00200800
*                  LIBOPT=N                                           * 00200900
*                      No libraries are to be searched for the symbol * 00201000
*                      during the current invocation of the Binder.   * 00201100
*                      N is the abbreviation for NOCALL.              * 00201200
*                                                                     * 00201300
*                  LIBOPT=E                                           * 00201400
*                      No libraries are to be searched for the symbol * 00201500
*                      during this or any subsequent Binder           * 00201600
*                      invocations.  E is the abbreviation for        * 00201700
*                      EXCLUDE.                                       * 00201800
*                                                                     * 00201900
*                                                                     * 00202000
*                                                                     * 00202100
*                                                                     * 00202200
*                                                                     * 00202300
*                                                                     * 00202400
*              The following is a set of mutually exclusive keys.     * 00202500
*              This set is optional; only one key may be specified.   * 00202600
*                                                                     * 00202700
*                                                                     * 00202800
*              ÝCALLIB=»xcallibº                                      * 00202900
*                  belongs to a set of mutually exclusive keys. It is * 00203000
*                  an optional input.  It is the name (RS-type), or   * 00203100
*                  address in register (2)-(12), of an 8-byte varying * 00203200
*                  length character string which is the ddname of a   * 00203300
*                  library to be used for automatic library calls to  * 00203400
*                  resolve the symbol.                                * 00203500
*                                                                     * 00203600
*                  The first half word of the string contains a count * 00203700
*                  (0 to 8) of the number of characters in the string * 00203800
*                  which follows.                                     * 00203900
*                                                                     * 00204000
*                  Either CALLIB or PATHNAME must be supplied when    * 00204100
*                  LIBOPT=CALL.  These parameters are ignored when    * 00204200
*                  LIBOPT=NOCALL or LIBOPT=EXCLUDE has been           * 00204300
*                  specified.                                         * 00204400
*                                                                     * 00204500
*              PATHNAME=»xpathnameº¨                                  * 00204600
*                  belongs to a set of mutually exclusive keys. It is * 00204700
*                  an optional input.  It is the name (RS-type), or   * 00204800
*                  address in register (2)-(12), of a 1024-byte       * 00204900
*                  varying length character string containing the HFS * 00205000
*                  path name to be used for automatic library calls.  * 00205100
*                                                                     * 00205200
*                  The first half word of the string contains a count * 00205300
*                  (0 to 1024) of the number of characters in the     * 00205400
*                  string which follows.                              * 00205500
*                                                                     * 00205600
*                  Either CALLIB or PATHNAME must be supplied when    * 00205700
*                  LIBOPT=CALL.  These parameters are ignored when    * 00205800
*                  LIBOPT=NOCALL or LIBOPT=EXCLUDE has been           * 00205900
*                  specified.                                         * 00206000
*                                                                     * 00206100
*                                                                     * 00206200
*                                                                     * 00206300
*              End of a set of mutually exclusive optional keys.      * 00206400
*              DEFAULT: CALLIB                                        * 00206500
*                                                                     * 00206600
*                                                                     * 00206700
*          FUNC=SETO                                                  * 00206800
*              Specify binder options.  SETO is the abbreviation for  * 00206900
*              SETOPTIONS.                                            * 00207000
*                                                                     * 00207100
*                                                                     * 00207200
*              The following is a set of mutually exclusive keys.     * 00207300
*              This set is required; only one key must be specified.  * 00207400
*                                                                     * 00207500
*                                                                     * 00207600
*              DIALOG=xdialog                                         * 00207700
*                  belongs to a set of mutually exclusive keys. It is * 00207800
*                  an input.  It is the name (RS-type), or address in * 00207900
*                  register (2)-(12), of an 8-byte character string   * 00208000
*                  which is the dialog token representing the Binder  * 00208100
*                  dialog. The Binder returns this token on a         * 00208200
*                  STARTDIALOG request. The caller must not alter the * 00208300
*                  dialog token.                                      * 00208400
*                                                                     * 00208500
*              WORKMOD=xworkmod                                       * 00208600
*                  belongs to a set of mutually exclusive keys. It is * 00208700
*                  the name (RS-type), or address in register         * 00208800
*                  (2)-(12), of an 8 character input variable that    * 00208900
*                  contains the workmod token, which the Binder       * 00209000
*                  returned on a CREATEWMOD request to represent the  * 00209100
*                  workmod. This token must not be modified by the    * 00209200
*                  caller.                                            * 00209300
*                                                                     * 00209400
*                                                                     * 00209500
*                                                                     * 00209600
*              End of a set of mutually exclusive required keys.      * 00209700
*                                                                     * 00209800
*                                                                     * 00209900
*                                                                     * 00210000
*              OPTION=xoption                                         * 00210100
*                  is a required input.  It is the name (RS-type), or * 00210200
*                  address in register (2)-(12), of an 8-byte         * 00210300
*                  variable length character string which contains    * 00210400
*                  the option to be set on a SETOPTIONS request.      * 00210500
*                  Refer to the Binder user guide for a list of the   * 00210600
*                  options.                                           * 00210700
*                                                                     * 00210800
*                                                                     * 00210900
*                                                                     * 00211000
*                                                                     * 00211100
*              OPTVAL=xoptval                                         * 00211200
*                  is a required input.  It is the name (RS-type), or * 00211300
*                  address in register (2)-(12), of an 8-byte         * 00211400
*                  variable length character string which contains    * 00211500
*                  the value(s) to be assigned to the option          * 00211600
*                  specified by the OPTION keyword on a SETOPTIONS    * 00211700
*                  request.                                           * 00211800
*                                                                     * 00211900
*                                                                     * 00212000
*                                                                     * 00212100
*                                                                     * 00212200
*              ÝPARMS=»xparms!0º¨                                     * 00212300
*                  is an optional input.  It is the name (RS-type),   * 00212400
*                  or address in register (2)-(12), of a string       * 00212500
*                  containing one or more options in the same format  * 00212600
*                  they would be passed to the batch interface.  The  * 00212700
*                  format of this parameter is a half word length     * 00212800
*                  field followed by the character string itself.     * 00212900
*                  DEFAULT: 0, signifying that no options are being   * 00213000
*                  specified in character string format.              * 00213100
*                                                                     * 00213200
*                                                                     * 00213300
*                                                                     * 00213400
*          FUNC=STARTD                                                * 00213500
*              Start a binder dialog.  STARTD is the abbreviation for * 00213600
*              STARTDIALOG.                                           * 00213700
*                                                                     * 00213800
*                                                                     * 00213900
*              DIALOG=xdialog                                         * 00214000
*                  is a required output.  It is the name (RS-type),   * 00214100
*                  or address in register (2)-(12), of an 8-byte      * 00214200
*                  character string which is the dialog token         * 00214300
*                  representing the Binder dialog. The Binder returns * 00214400
*                  this token on a STARTDIALOG request. The caller    * 00214500
*                  must not alter the dialog token.                   * 00214600
*                                                                     * 00214700
*                                                                     * 00214800
*                                                                     * 00214900
*                                                                     * 00215000
*              ÝFILES=»xfiles!0º¨                                     * 00215100
*                  is an optional input.  It is the name (RS-type),   * 00215200
*                  or address in register (2)-(12), of a list of      * 00215300
*                  standard Binder file names for which ddnames are   * 00215400
*                  being supplied.                                    * 00215500
*                  DEFAULT: 0, signifying that ddnames will be        * 00215600
*                  supplied on subsequent Binder calls if they are    * 00215700
*                  needed.                                            * 00215800
*                                                                     * 00215900
*                                                                     * 00216000
*                                                                     * 00216100
*                                                                     * 00216200
*              ÝEXITS=»xexits!0º¨                                     * 00216300
*                  is an optional input.  It is the name (RS-type),   * 00216400
*                  or address in register (2)-(12), of a list of      * 00216500
*                  standard Binder user exits.                        * 00216600
*                  DEFAULT: 0, signifying that no Binder exits are to * 00216700
*                  be used.                                           * 00216800
*                                                                     * 00216900
*                                                                     * 00217000
*                                                                     * 00217100
*                                                                     * 00217200
*              ÝOPTIONS=»xoptions!0º¨                                 * 00217300
*                  is an optional input.  It is the name (RS-type),   * 00217400
*                  or address in register (2)-(12), of a list of      * 00217500
*                  standard Binder options and initial values.        * 00217600
*                  DEFAULT: 0, signifying that default values are to  * 00217700
*                  be used for Binder options or the options will be  * 00217800
*                  provided on subsequent Binder calls.               * 00217900
*                                                                     * 00218000
*                                                                     * 00218100
*                                                                     * 00218200
*                                                                     * 00218300
*              ÝPARMS=»xparms!0º¨                                     * 00218400
*                  is an optional input.  It is the name (RS-type),   * 00218500
*                  or address in register (2)-(12), of a string       * 00218600
*                  containing one or more options in the same format  * 00218700
*                  they would be passed to the batch interface.  The  * 00218800
*                  format of this parameter is a half word length     * 00218900
*                  field followed by the character string itself.     * 00219000
*                  DEFAULT: 0, signifying that no options are being   * 00219100
*                  specified in character string format.              * 00219200
*                                                                     * 00219300
*                                                                     * 00219400
*                                                                     * 00219500
*                                                                     * 00219600
*              ÝENVARS=»xenvars!0º¨                                   * 00219700
*                  is the name (RS-type), or address in register      * 00219800
*                  (2)-(12), of an optional 4 byte input that         * 00219900
*                  contains the address the C ENVIRON variable        * 00220000
*                  DEFAULT: 0, signifying that no environment         * 00220100
*                  variables are being passed.                        * 00220200
*                                                                     * 00220300
*                                                                     * 00220400
*                                                                     * 00220500
*          FUNC=STARTS                                                * 00220600
*              Begin a new overlay segment.  STARTS is the            * 00220700
*              abbreviation for STARTSEG.                             * 00220800
*                                                                     * 00220900
*                                                                     * 00221000
*              WORKMOD=xworkmod                                       * 00221100
*                  is the name (RS-type), or address in register      * 00221200
*                  (2)-(12), of a required 8 character input variable * 00221300
*                  that contains the workmod token, which the Binder  * 00221400
*                  returned on a CREATEWMOD request to represent the  * 00221500
*                  workmod. This token must not be modified by the    * 00221600
*                  caller.                                            * 00221700
*                                                                     * 00221800
*                                                                     * 00221900
*                                                                     * 00222000
*                                                                     * 00222100
*              ORIGIN=xorigin                                         * 00222200
*                  is a required input.  It is the name (RS-type), or * 00222300
*                  address in register (2)-(12), of an 8-byte varying * 00222400
*                  length character string containing the name of the * 00222500
*                  symbol which designates the segment origin on a    * 00222600
*                  STARTSEG request.                                  * 00222700
*                                                                     * 00222800
*                  The first half word of the string contains a count * 00222900
*                  (1 to 8) of the number of characters in the string * 00223000
*                  which follows.                                     * 00223100
*                                                                     * 00223200
*                                                                     * 00223300
*                                                                     * 00223400
*                                                                     * 00223500
*              ÝREGION=»N!Yº¨                                         * 00223600
*                  is an optional keyword input which may be          * 00223700
*                  specified on STARTSEG requests to indicate whether * 00223800
*                  or not the segment is to begin a new region.       * 00223900
*                  DEFAULT: N                                         * 00224000
*                                                                     * 00224100
*                                                                     * 00224200
*                  REGION=N                                           * 00224300
*                      The Binder will not place this segment in a    * 00224400
*                      new overlay region.  N is the abbreviation for * 00224500
*                      NO.                                            * 00224600
*                                                                     * 00224700
*                  REGION=Y                                           * 00224800
*                      The Binder will create a new overlay region    * 00224900
*                      starting with this segment.  Y is the          * 00225000
*                      abbreviation for YES.                          * 00225100
*                                                                     * 00225200
*                                                                     * 00225300
*                                                                     * 00225400
*                                                                     * 00225500
*                                                                     * 00225600
*                                                                     * 00225700
*                                                                     * 00225800
*                                                                     * 00225900
*                                                                     * 00226000
*                                                                     * 00226100
*      ÝRETCODE=xretcode¨                                             * 00226200
*          is the name (RS-type) of an optional fullword output which * 00226300
*          contains the variable, or register (2)-(12), return code   * 00226400
*          set by the Binder.  If omitted, the return code will only  * 00226500
*          be provided in register 15.                                * 00226600
*                                                                     * 00226700
*                                                                     * 00226800
*                                                                     * 00226900
*                                                                     * 00227000
*      ÝRSNCODE=xrsncode¨                                             * 00227100
*          is the name (RS-type) of an optional 32 bit output which   * 00227200
*          contains the variable, or register (2)-(12), reason code   * 00227300
*          set by the Binder.  If omitted, the reason code will only  * 00227400
*          be provided in register 0.                                 * 00227500
*                                                                     * 00227600
*                                                                     * 00227700
*                                                                     * 00227800
*                                                                     * 00227900
*      ÝVERSION=»1!2!3!4!5!6!7!8!9º¨                                  * 00228000
*          is an optional keyword input which is the version of       * 00228100
*          parameter list to be generated.                            * 00228200
*          DEFAULT: 1                                                 * 00228300
*                                                                     * 00228400
*                                                                     * 00228500
*          VERSION=1                                                  * 00228600
*              The format of the parameter list will be version 1.    * 00228700
*                                                                     * 00228800
*          VERSION=2                                                  * 00228900
*              The format of the parameter list will be version 2.    * 00229000
*                                                                     * 00229100
*          VERSION=3                                                  * 00229200
*              The format of the parameter list will be version 3.    * 00229300
*                                                                     * 00229400
*          VERSION=4                                                  * 00229500
*              The format of the parameter list will be version 4.    * 00229600
*                                                                     * 00229700
*          VERSION=5                                                  * 00229800
*              The format of the parameter list will be version 5.    * 00229900
*                                                                     * 00230000
*          VERSION=6                                                  * 00230100
*              The format of the parameter list will be version 6.    * 00230200
*                                                                     * 00230300
*          VERSION=7                                                  * 00230400
*              The format of the parameter list will be version 7.    * 00230500
*                                                                     * 00230600
*          VERSION=8                                                  * 00230700
*              The format of the parameter list will be version 8.    * 00230800
*                                                                     * 00230900
*          VERSION=9                                                  * 00231000
*              The format of the parameter list will be version 9.    * 00231100
*                                                                     * 00231200
*                                                                     * 00231300
*                                                                     * 00231400
*                                                                     * 00231500
*                                                                     * 00231600
*                                                                     * 00231700
*      ÝPLISTVER=»xplistver!IMPLIED_VERSIONº¨                         * 00231800
*          is an optional byte input decimal value in the "0-0" range * 00231900
*          that specifies the macro version.  PLISTVER is the only    * 00232000
*          key allowed on the list form of MF and determines which    * 00232100
*          parameter list is generated.  Note that MAX may be         * 00232200
*          specified instead of a number, and the parameter list will * 00232300
*          be of the largest size currently supported. This size may  * 00232400
*          grow from release to release (thus possibly affecting the  * 00232500
*          amount of storage needed by your program).  If your        * 00232600
*          program can tolerate this, IBM recommends that you always  * 00232700
*          specify MAX when creating the list form parameter list as  * 00232800
*          that will ensure that the list form parameter list is      * 00232900
*          always long enough to hold whatever parameters might be    * 00233000
*          specified on the execute form.                             * 00233100
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00233200
*          default is the lowest version which allows all of the      * 00233300
*          parameters specified on the invocation to be processed.    * 00233400
*                                                                     * 00233500
*                                                                     * 00233600
*                                                                     * 00233700
*                                                                     * 00233800
*      ÝMF=»S!L!Eº¨                                                   * 00233900
*          is an optional keyword input which specifies the macro     * 00234000
*          form.                                                      * 00234100
*          DEFAULT: S                                                 * 00234200
*                                                                     * 00234300
*                                                                     * 00234400
*          ÝMF=S¨                                                     * 00234500
*              specifies the standard form of the macro.  The "S"     * 00234600
*              form generates code to put the parameters into an      * 00234700
*              in-line parameter list and invoke the desired service. * 00234800
*              Full checking for required macro keys is done along    * 00234900
*              with supplying defaults for omitted optional           * 00235000
*              parameters.                                            * 00235100
*                                                                     * 00235200
*          ÝMF=(L,xmfctrl»,xmfattr!0Dº)¨                              * 00235300
*              specifies the list form of the macro.  The "L" form    * 00235400
*              defines an area to be used for the parameter list.     * 00235500
*              Only the PLISTVER key may be specified on the          * 00235600
*              invocation.  All other macro parameters are flagged as * 00235700
*              errors.  If PLISTVER is not specified, the original    * 00235800
*              parameter list definition is used.                     * 00235900
*                                                                     * 00236000
*            ,xmfctrl                                                 * 00236100
*              is a required input.  It is the name of a storage area * 00236200
*              for the parameter list.                                * 00236300
*                                                                     * 00236400
*            »,xmfattr!0Dº                                            * 00236500
*              is an optional 60 character input string that varies   * 00236600
*              from 1 to 60 characters. Use it to force boundary      * 00236700
*              alignment of the parameter list. Use only 0F or 0D.    * 00236800
*              DEFAULT: 0D which forces the parameter list to a       * 00236900
*              doubleword boundary.                                   * 00237000
*                                                                     * 00237100
*          ÝMF=(E,xmfctrl»,COMPLETEº)¨                                * 00237200
*              specifies the execute form of the macro.  The "E" form * 00237300
*              generates code to put the parameters into the          * 00237400
*              parameter list specified by xmfctrl and provides full  * 00237500
*              syntax checking with default setting.                  * 00237600
*                                                                     * 00237700
*            ,xmfctrl                                                 * 00237800
*              is a required input.  It is the name (RS-type), or     * 00237900
*              address in register (1)-(12), of a storage area for    * 00238000
*              the parameter list.                                    * 00238100
*                                                                     * 00238200
*            »,COMPLETEº                                              * 00238300
*              is an optional keyword input which specifies the       * 00238400
*              degree of macro parameter syntax checking.             * 00238500
*              DEFAULT: COMPLETE                                      * 00238600
*                                                                     * 00238700
*                                                                     * 00238800
*              COMPLETE                                               * 00238900
*                  Checking for required macro keys is done and       * 00239000
*                  defaults are supplied for omitted optional         * 00239100
*                  parameters.                                        * 00239200
*                                                                     * 00239300
*                                                                     * 00239400
*                                                                     * 00239500
*                                                                     * 00239600
*                                                                     * 00239700
*                                                                     * 00239800
*                                                                     * 00239900
*01* RETURN CODES:  None.                                             * 00240000
*                                                                     * 00240100
*                                                                     * 00240200
*01* REASON CODES:  None.                                             * 00240300
*                                                                     * 00240400
*01* MODULE TYPE:  ASSEM MACRO                                        * 00240500
*                                                                     * 00240600
*02*   PROCESSOR:  ASSEM                                              * 00240700
*                                                                     * 00240800
*01* COMPONENT:  PMB01                                                * 00240900
*                                                                     * 00241000
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00241100
*                                                                     * 00241200
*01* MACRO USAGE NOTES:                                               * 00241300
*                                                                     * 00241400
*                                                                     * 00241500
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00241600
*        global macro variable.  Any value other than 'NO' will       * 00241700
*        result in the macro expansion being printed.  The default is * 00241800
*        'YES'.  The following examples illustrate how the ZPRINT     * 00241900
*        variable should be set.                                      * 00242000
*                                                                     * 00242100
*                    GBLC &ZPRINT                                     * 00242200
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00242300
*                                                                     * 00242400
*                                                                     * 00242500
*    2.  All   keys   currently   contained  in  the  IEWBIND2  macro * 00242600
*        correspond  to  version  0.   If you specify PLISTVER, use a * 00242700
*        value of 0 or MAX.                                           * 00242800
*                                                                     * 00242900
*                                                                     * 00243000
*                                                                     * 00243100
*                                                                     * 00243200
*01* CHANGE ACTIVITY:                                                 * 00243300
*                                                                     * 00243400
*   Flag LineItem  FMID    Date   ID    Comment                       * 00243500
*                                                                     * 00243600
*    $L0=PMBINDER JDZ1110 911216 SJPLPCC:  AMG generated macro.       * 00243700
*    $P1=KMM1732  JDZ1110 920213 SJPLPCC:  INTYPE(S!SMDE) added.      * 00243800
*    $P2=KMM1983  JDZ1110 920504 SJPLLDB:  Change GETN for transport  * 00243900
*                                         utility                     * 00244000
*    $P3=KMM3493  JDZ1110 921122 SJPLLDB:  Reason code, assembler     * 00244100
*                                         CREATEW                     * 00244200
*    $P4=OY60825  JDZ1110 930114 SJPLLDB:  TPORT, amode24             * 00244300
*    $P5=OY61831  JDZ1110 930121 SJPLLDB:  Register form, amode24     * 00244400
*    $P6=OY63426  JDZ1110 940504 SJPLLDB:  eptoken                    * 00244500
*    $L1=PM2ITER2 JDZ1110 940321 SJPLLDB:  Generate PM2 parmlist      * 00244600
*    $L2=PM2ITER3 JDZ1110 940812 SJPLLDB:  Add version parm           * 00244700
*    $00=0000000  HDZ11D0 960108 0000000:                             * 00244800
*                                                                     * 00244900
*                                              $L3=PM3ITER1 HDZ11C0   * 00245000
*                                         960108 SJPLSML: PM3 Driver1 * 00245100
*                                         Changes                     * 00245200
*    $00=0000000  HDZ11D0 960325 0000000:                             * 00245300
*                                                                     * 00245400
*                                              $L4=PM3DRVR2 HDZ11C0   * 00245500
*                                         960325 SJPLSML: PM3 Driver2 * 00245600
*                                         Changes                     * 00245700
*    $01=OW32812  HDZ11D0 980423 SJPLELA:  Nulls when no class on     * 00245800
*                                         GETE                        * 00245900
*    $02=OW33442  HDZ11D0 980423 SJPLELA:  AE fix completion for      * 00246000
*                                         OW32812                     * 00246100
*    $03=OW33085  HDZ11D0 980723 SJPLELA:  OE Symlink add Atype to    * 00246200
*                                         ADDA                        * 00246300
*    $04=OW35218  HDZ11D0 980915 SJPLELA:  Check that function is     * 00246400
*                                         ALTERW before setting ATYPE * 00246500
*    $05=OW35596  HDZ11D0 981006 SJPLELA:  GETE class parameter       * 00246600
*                                         checking                    * 00246700
*    $L6=HPLINK   HDZ11F0 981215 SJPLELA:  Offset parameter to IMPORT * 00246800
*                                         call                        * 00246900
*    $06=OW39942  HDZ11D0 990706 SJPLMD:  Make retcode/rsncode opt    * 00247000
*    $L7=XPLINK   HDZ11F0 990924 STLRWT:  Class offset in segment,    * 00247100
*                                         version cleanup             * 00247200
*    $L8=PM4ITER2 HPM7706 000914 STLELA:  Add imports parameter to    * 00247300
*                                         Include API call            * 00247400
*    $P8=K64xxxx  HPM7706 001204 SVLRT:  Extra parm def for IMPORTS,  * 00247500
*                                         restate IMPORTS version,    * 00247600
*                                         more error message cleanup  * 00247700
*    $L9=PM4ITER3 HPM7706 010312 SVLRT:  Reinstate manual update      * 00247800
*                                         requirements                * 00247900
*    $LA=PM4ITER3 HPM7706 010504 SVLRT:  Set up for automatic         * 00248000
*                                         integration processing      * 00248100
*    $LB=DCRA595  HPM7708 011105 SVLNW:  Support CDA, new GETC        * 00248200
*    $LC=DCRA659  HPM7709 030324 PMBNW:  64-bit import support        * 00248300
*    $LD=DCRA891  HPM7730 050310 PMBRT:  Unqualified SETL support     * 00248400
*    $LE=DCRA853  HPM7730 050620 PMBLB:  ENVARS added to STARTD       * 00248500
*    $P9=MG11273  HPM7760 080805 PMBLB:  Add mackv for DCRA891        * 00248600
*    $LA=DC10900  HPM7780 100405 PMBBL:  Release z/OS V1R13 -         * 00248700
*                                         VERSION=7 parmlists         * 00248800
*    $LI=DC10902  HPM7790 120221 PMBFS:  Release z/OS V2R1, Release   * 00248900
*                                         schedule change             * 00249000
*    $LJ=DC07501  HPM7790 120720 PMBST:  Generalized alignment        * 00249100
*    $PB=MG18298  HPM7790 121109 PMBST:  ALIGNT default bdy 4096      * 00249200
*                                         problem fix                 * 00249300
*    $PC=MG14972  HPM77A0 140311 PMBST:  ADDA ATYPE=T supporting      * 00249400
*    $PD=MG15924  HPM77A0 140703 PMBST:  Use INPUT DIR INFO on ADDA   * 00249500
****** END OF SPECIFICATIONS *****************************************/ 00249600
*/********************************************************************* 00249700
         MACRO                                                          00249800
&XLABEL  IEWBIND2 &FUNC=,&WORKMOD=,&ANAME=,&ENAME=,&AMODE=,&ATYPE=,    *00249900
               &DNAME=,&SECTION=,&BDY=,&CLASSL=,&OLDNAME=,&NEWNAME=,   *00250000
               &COUNT=,&MODE=,&CLASS=,&CALLIB=,&PATHNAME=,&DIALOG=,    *00250100
               &INTENT=,&PROTECT=,&RENAMEL=,&AREA=,&CURSOR=,&RELOC=,   *00250200
               &RECTYPE=,&OFFSET=,&SYMBOL=,&TCOUNT=,&NTYPE=,&CULIST=,  *00250300
               &ITYPE=,&DLLNAME=,&INAME=,&INTYPE=,&DDNAME=,&DEPTR=,    *00250400
               &MEMBER=,&DCBPTR=,&EPTOKEN=,&ATTRIB=,&ALIASES=,         *00250500
               &IMPORTS=,&EPLOC=,&IDENTIFY=,&EXTLST=,&LNAME=,&NEWSECT=,*00250600
               &ENDDATA=,&MODLIB=,&SNAME=,&REPLACE=,&LIBOPT=,&OPTION=, *00250700
               &OPTVAL=,&PARMS=,&FILES=,&EXITS=,&OPTIONS=,&ENVARS=,    *00250800
               &ORIGIN=,&REGION=,&RETCODE=,&RSNCODE=,&VERSION=,        *00250900
               &PLISTVER=,&MF=                                          00251000
.*                                                                      00251100
*              MACDATE -03/16/21-<0>                                    00251200
.*                                                                      00251300
.*******************************************************************    00251400
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00251500
.*******************************************************************    00251600
              GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                   00251700
              GBLC  &ZTEST      YES=TEST NO=NO TEST                     00251800
              GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX             00251900
.*                                                                      00252000
              GBLC  &ZIEWBIND2  YES=MACRO USED AT LEAST ONCE            00252100
.*******************************************************************    00252200
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00252300
.*******************************************************************    00252400
              LCLC  &ZMS        ERROR MESSAGE WORK AREA                 00252500
              LCLC  &ZCNDX      SYSNDX CHARACTERS                       00252600
              LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED              00252700
              LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR             00252800
              LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE             00252900
              LCLA  &ZAWRK      USED AS A WORK AREA                     00253000
              LCLA  &ZASIZ      USED FOR SIZE OF VALUE                  00253100
              LCLA  &ZN         NUMERIC WORK VARIABLE                   00253200
              LCLC  &ZC         CHARACTER WORK VARIABLE                 00253300
              LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE             00253400
              LCLA  &ZTLA       VALUE TOO LONG VARIABLE                 00253500
              LCLC  &ZMAC_G     "G" or null                             00253600
&ZMAC_G       SETC  ''                                                  00253700
              LCLC  &ZMAC_LR                                            00253800
&ZMAC_LR      SETC  'LR'                                                00253900
              LCLC  &ZMAC_L                                             00254000
&ZMAC_L       SETC  'L'                                                 00254100
              LCLC  &ZMAC_ST                                            00254200
&ZMAC_ST      SETC  'ST'                                                00254300
              LCLC  &ZMAC_LLGT                                          00254400
&ZMAC_LLGT    SETC  'L'                                                 00254500
              LCLC  &ZMAC_LGR                                           00254600
&ZMAC_LGR     SETC  'LR'                                                00254700
              LCLC  &ZMAC_LG                                            00254800
&ZMAC_LG      SETC  'L'                                                 00254900
              LCLC  &ZMAC_STG                                           00255000
&ZMAC_STG     SETC  'ST'                                                00255100
              LCLA  &ZMACRET    MACRO RETURN CODE                       00255200
&ZMACRET      SETA  0           ASSUME NO ERRORS                        00255300
.*                                                                      00255400
              LCLC  &ZCSYSLIST(255)             NONXKEY, POS ARRAY      00255500
              LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()              00255600
              LCLA  &ZPLLEN     PARAMETER LIST LENGTH                   00255700
              LCLC  &ZENDBASEPL                 End of base PL          00255800
              LCLA  &ZPLWORKA   PARAMETER LIST LENGTH                   00255900
.*******************************************************************    00256000
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00256100
.*******************************************************************    00256200
              LCLA  &ZI         INDEX FOR ARRAY                         00256300
              LCLA  &ZJ         INDEX FOR PARMS                         00256400
              LCLA  &ZK         INDEX FOR PARSE                         00256500
              LCLA  &ZLO        LOW RANGE VALUE                         00256600
              LCLA  &ZHI        HIGH RANGE VALUE                        00256700
              LCLC  &ZW         WORK AREA FOR PARM                      00256800
.********************************************************************   00256900
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00257000
.********************************************************************   00257100
              GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL                 00257200
              GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE          00257300
              GBLA  &SYSALVL    SYSSTATE ARCHLVL                        00257400
              GBLC  &SYSAM64    SYSSTATE AMODE64                        00257500
.*                                                                      00257600
              AIF   (K'&SYSASCE GT 0).ZSYS4     SYS STATE DEFINED       00257700
              AIF   (K'&SYSSPLV GT 0).ZSYS2     SP LEVEL DEFINED        00257800
              SPLEVEL  TEST                                             00257900
.ZSYS2        ANOP  ,                                                   00258000
              AIF   ('&SYSSPLV' EQ '1').ZSYS3   PRE SP 3.1              00258100
              AIF   ('&SYSSPLV' EQ '2').ZSYS3   PRE SP 3.1              00258200
              SYSSTATE TEST                                             00258300
              AGO   .ZSYS4                                              00258400
.ZSYS3        ANOP  ,                                                   00258500
&SYSASCE      SETC  'P'         ASSUME SYSSTATE PRIMARY                 00258600
.ZSYS4        ANOP  ,                                                   00258700
              AIF   ('&SYSAM64' NE 'YES').ZSYSN64                       00258800
&ZMAC_LLGT    SETC 'LLGT'                                               00258900
&ZMAC_LGR     SETC 'LGR'                                                00259000
&ZMAC_LG      SETC 'LG'                                                 00259100
&ZMAC_STG     SETC 'STG'                                                00259200
.ZSYSN64      ANOP  ,                                                   00259300
.*******************************************************************    00259400
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00259500
.*******************************************************************    00259600
              LCLC  &XFUNC      ++ VALUE                                00259700
              LCLC  &XWORKMOD   ++ NAME                                 00259800
              LCLC  &XANAME     ++ NAME                                 00259900
              LCLC  &XENAME     ++ NAME                                 00260000
              LCLC  &XAMODE     ++ NAME                                 00260100
              LCLC  &XATYPE     ++ VALUE                                00260200
              LCLC  &XDNAME     ++ NAME                                 00260300
              LCLC  &XSECTION   ++ NAME                                 00260400
              LCLC  &XBDY       ++ NAME                                 00260500
              LCLC  &XCLASSL    ++ NAME                                 00260600
              LCLC  &XOLDNAME   ++ NAME                                 00260700
              LCLC  &XNEWNAME   ++ NAME                                 00260800
              LCLC  &XCOUNT     ++ NAME                                 00260900
              LCLC  &XMODE      ++ VALUE                                00261000
              LCLC  &XCLASS     ++ NAME                                 00261100
              LCLC  &XPATHLIB   ++ NAME                                 00261200
              LCLC  &XCALLIB    ++ NAME                                 00261300
              LCLC  &XPATHNAME  ++ NAME                                 00261400
              LCLC  &XDIALOG    ++ NAME                                 00261500
              LCLC  &XINTENT    ++ VALUE                                00261600
              LCLC  &XPROTECT   ++ VALUE                                00261700
              LCLC  &XRENAMEL   ++ NAME                                 00261800
              LCLC  &XAREA      ++ NAME                                 00261900
              LCLC  &XCURSOR    ++ NAME                                 00262000
              LCLC  &XRELOC     ++ NAME                                 00262100
              LCLC  &XRECTYPE   ++ NAME                                 00262200
              LCLC  &XOFFSYM    ++ NAME                                 00262300
              LCLC  &XOFFSET    ++ NAME                                 00262400
              LCLC  &XSYMBOL    ++ NAME                                 00262500
              LCLC  &XTCOUNT    ++ NAME                                 00262600
              LCLC  &XNTYPE     ++ VALUE                                00262700
              LCLC  &XCULIST    ++ NAME                                 00262800
              LCLC  &XITYPE     ++ VALUE                                00262900
              LCLC  &XDLLNAME   ++ NAME                                 00263000
              LCLC  &XINAME     ++ NAME                                 00263100
              LCLC  &XOFFSET1   ++ NAME                                 00263200
              LCLC  &XINTYPE    ++ VALUE                                00263300
              LCLC  &XDDNAME    ++ NAME                                 00263400
              LCLC  &XDEPTR     ++ NAME                                 00263500
              LCLC  &XMEMBER    ++ NAME                                 00263600
              LCLC  &XDCBPTR    ++ NAME                                 00263700
              LCLC  &XEPTOKEN   ++ NAME                                 00263800
              LCLC  &XATTRIB    ++ VALUE                                00263900
              LCLC  &XALIASES   ++ VALUE                                00264000
              LCLC  &XIMPORTS   ++ VALUE                                00264100
              LCLC  &XEPLOC     ++ NAME                                 00264200
              LCLC  &XIDENTIFY  ++ VALUE                                00264300
              LCLC  &XEXTLST    ++ NAME                                 00264400
              LCLC  &XLNAME     ++ NAME                                 00264500
              LCLC  &XNEWSECT   ++ VALUE                                00264600
              LCLC  &XENDDATA   ++ VALUE                                00264700
              LCLC  &XMODLIB    ++ NAME                                 00264800
              LCLC  &XSNAME     ++ NAME                                 00264900
              LCLC  &XREPLACE   ++ VALUE                                00265000
              LCLC  &XLIBOPT    ++ VALUE                                00265100
              LCLC  &XOPTLVL    ++ NAME                                 00265200
              LCLC  &XOPTION    ++ NAME                                 00265300
              LCLC  &XOPTVAL    ++ NAME                                 00265400
              LCLC  &XPARMS     ++ NAME                                 00265500
              LCLC  &XFILES     ++ NAME                                 00265600
              LCLC  &XEXITS     ++ NAME                                 00265700
              LCLC  &XOPTIONS   ++ NAME                                 00265800
              LCLC  &XENVARS    ++ NAME                                 00265900
              LCLC  &XORIGIN    ++ NAME                                 00266000
              LCLC  &XREGION    ++ VALUE                                00266100
              LCLC  &XRETCODE   ++ NAME                                 00266200
              LCLC  &XRSNCODE   ++ NAME                                 00266300
              LCLC  &XVERSION   ++ VALUE                                00266400
              LCLA  &XPLISTVER  ++ VALUE                                00266500
              LCLC  &XMF        ++ VALUE                                00266600
              LCLC  &XMFCTRL    ++ NAME                                 00266700
              LCLC  &XMFATTR    ++ VALUE                                00266800
              LCLC  &XMFSCK     ++ VALUE                                00266900
.*******************************************************************    00267000
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00267100
.*******************************************************************    00267200
              LCLC  &ZXFUNC     ++ INPUT VALUE                          00267300
              LCLC  &ZXWORKMOD  ++ INPUT NAME                           00267400
              LCLC  &ZXANAME    ++ INPUT NAME                           00267500
              LCLC  &ZXENAME    ++ INPUT NAME                           00267600
              LCLC  &ZXAMODE    ++ INPUT NAME                           00267700
              LCLC  &ZXATYPE    ++ INPUT VALUE                          00267800
              LCLC  &ZXDNAME    ++ INPUT NAME                           00267900
              LCLC  &ZXSECTION  ++ INPUT NAME                           00268000
              LCLC  &ZXBDY      ++ INPUT NAME                           00268100
              LCLC  &ZXCLASSL   ++ INPUT NAME                           00268200
              LCLC  &ZXOLDNAME  ++ INPUT NAME                           00268300
              LCLC  &ZXNEWNAME  ++ INPUT NAME                           00268400
              LCLC  &ZXCOUNT    ++ OUTPUT NAME                          00268500
              LCLC  &ZXMODE     ++ INPUT VALUE                          00268600
              LCLC  &ZXCLASS    ++ INPUT NAME                           00268700
              LCLC  &ZXPATHLIB  ++ INPUT NAME                           00268800
              LCLC  &ZXCALLIB   ++ INPUT NAME                           00268900
              LCLC  &ZXPATHNAME                 ++ INPUT NAME           00269000
              LCLC  &ZXDIALOG   ++ INPUT NAME                           00269100
              LCLC  &ZXINTENT   ++ INPUT VALUE                          00269200
              LCLC  &ZXPROTECT  ++ INPUT VALUE                          00269300
              LCLC  &ZXRENAMEL  ++ INPUT NAME                           00269400
              LCLC  &ZXAREA     ++ OUTPUT NAME                          00269500
              LCLC  &ZXCURSOR   ++ INOUT NAME                           00269600
              LCLC  &ZXRELOC    ++ INPUT NAME                           00269700
              LCLC  &ZXRECTYPE  ++ INPUT NAME                           00269800
              LCLC  &ZXOFFSYM   ++ INPUT NAME                           00269900
              LCLC  &ZXOFFSET   ++ INPUT NAME                           00270000
              LCLC  &ZXSYMBOL   ++ INPUT NAME                           00270100
              LCLC  &ZXTCOUNT   ++ OUTPUT NAME                          00270200
              LCLC  &ZXNTYPE    ++ INPUT VALUE                          00270300
              LCLC  &ZXCULIST   ++ INPUT NAME                           00270400
              LCLC  &ZXITYPE    ++ INPUT VALUE                          00270500
              LCLC  &ZXDLLNAME  ++ INPUT NAME                           00270600
              LCLC  &ZXINAME    ++ INPUT NAME                           00270700
              LCLC  &ZXOFFSET1  ++ INPUT NAME                           00270800
              LCLC  &ZXINTYPE   ++ INPUT VALUE                          00270900
              LCLC  &ZXDDNAME   ++ INPUT NAME                           00271000
              LCLC  &ZXDEPTR    ++ INPUT NAME                           00271100
              LCLC  &ZXMEMBER   ++ INPUT NAME                           00271200
              LCLC  &ZXDCBPTR   ++ INPUT NAME                           00271300
              LCLC  &ZXEPTOKEN  ++ INPUT NAME                           00271400
              LCLC  &ZXATTRIB   ++ INPUT VALUE                          00271500
              LCLC  &ZXALIASES  ++ INPUT VALUE                          00271600
              LCLC  &ZXIMPORTS  ++ INPUT VALUE                          00271700
              LCLC  &ZXEPLOC    ++ OUTPUT NAME                          00271800
              LCLC  &ZXIDENTIFY                 ++ INPUT VALUE          00271900
              LCLC  &ZXEXTLST   ++ OUTPUT NAME                          00272000
              LCLC  &ZXLNAME    ++ INPUT NAME                           00272100
              LCLC  &ZXNEWSECT  ++ INPUT VALUE                          00272200
              LCLC  &ZXENDDATA  ++ INPUT VALUE                          00272300
              LCLC  &ZXMODLIB   ++ INPUT NAME                           00272400
              LCLC  &ZXSNAME    ++ INPUT NAME                           00272500
              LCLC  &ZXREPLACE  ++ INPUT VALUE                          00272600
              LCLC  &ZXLIBOPT   ++ INPUT VALUE                          00272700
              LCLC  &ZXOPTLVL   ++ INPUT NAME                           00272800
              LCLC  &ZXOPTION   ++ INPUT NAME                           00272900
              LCLC  &ZXOPTVAL   ++ INPUT NAME                           00273000
              LCLC  &ZXPARMS    ++ INPUT NAME                           00273100
              LCLC  &ZXFILES    ++ INPUT NAME                           00273200
              LCLC  &ZXEXITS    ++ INPUT NAME                           00273300
              LCLC  &ZXOPTIONS  ++ INPUT NAME                           00273400
              LCLC  &ZXENVARS   ++ INPUT NAME                           00273500
              LCLC  &ZXORIGIN   ++ INPUT NAME                           00273600
              LCLC  &ZXREGION   ++ INPUT VALUE                          00273700
              LCLC  &ZXRETCODE  ++ OUTPUT NAME                          00273800
              LCLC  &ZXRSNCODE  ++ OUTPUT NAME                          00273900
              LCLC  &ZXVERSION  ++ INPUT VALUE                          00274000
              LCLC  &ZXPLISTVER                 ++ INPUT VALUE          00274100
              LCLC  &ZXMF       ++ INPUT VALUE                          00274200
              LCLC  &ZXMFCTRL   ++ INPUT NAME                           00274300
              LCLC  &ZXMFATTR   ++ INPUT VALUE                          00274400
              LCLC  &ZXMFSCK    ++ INPUT VALUE                          00274500
.********************************************************************   00274600
.***AC.PLV01  PROCESS PLISTVER                                      *   00274700
.********************************************************************   00274800
&XPLISTVER      SETA  0                                                 00274900
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00275000
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00275100
&XPLISTVER      SETA  0                                                 00275200
.ZPLV0          ANOP  ,                                                 00275300
.*                                                                      00275400
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00275500
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00275600
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00275700
.*-------------------------------------------------------------------   00275800
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00275900
&ZMS            SETC  '"PLISTVER='                                      00276000
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00276100
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00276200
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00276300
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00276400
                AGO   .ZPVCK2                                           00276500
.ZPVCK3         ANOP  ,                                                 00276600
.*-------------------------------------------------------------------   00276700
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00276800
&ZMS            SETC  '"PLISTVER='                                      00276900
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00277000
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00277100
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00277200
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00277300
                AGO   .ZPVCKE                                           00277400
.ZPVCK2         ANOP  ,                                                 00277500
.*-------------------------------------------------------------------   00277600
&ZCVAL          SETC  '&PLISTVER(1)'                                    00277700
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00277800
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00277900
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00278000
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00278100
                AIF   (&ZN LE 0).ZPVCK4A   NOT HIGH                     00278200
.ZPVCK6         ANOP  ,                                                 00278300
&ZMS            SETC  '"PLISTVER='                                      00278400
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00278500
&ZMS            SETC  '&ZMS THE RANGE IS "0-0"'                         00278600
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00278700
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00278800
&XPLISTVER      SETA  0                                                 00278900
                AGO   .ZPVCKE                                           00279000
.*-------------------------------------------------------------------   00279100
.ZPVCK4A        ANOP  ,                                                 00279200
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00279300
&ZMS            SETC  'PLISTVER='                                       00279400
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00279500
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00279600
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00279700
                MNOTE 8,' &ZMS IS REQUIRED.'                            00279800
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00279900
                AGO   .ZPVCK5                                           00280000
.ZPVCK4         ANOP  ,                                                 00280100
&XPLISTVER      SETA  &PLISTVER(1)                                      00280200
.ZPVCK5         ANOP  ,                                                 00280300
.ZPVCKE         ANOP  ,                                                 00280400
.********************************************************************   00280500
.***AG.MF01 PROCESS MF MACRO FORMS                                      00280600
.********************************************************************   00280700
              ACTR  10000                                               00280800
.*------------------------------------------------------------------    00280900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00281000
&XMF          SETC  ''          INITIALIZE XVARIABLE                    00281100
.*-------------------------------------------------------------------   00281200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00281300
.ZG472        ANOP  ,                                                   00281400
&ZTLC         SETC 'S'                                                  00281500
              AIF   ('&MF(1)' NE '&ZTLC').ZG473                         00281600
&XMF          SETC  'S'         SET KEYWORD                             00281700
              AIF   (N'&MF LE 1).ZG472A         CK NUM                  00281800
&ZMS          SETC  '"MF='                                              00281900
&ZMS          SETC  '&ZMS.&MF"'                                         00282000
&ZMS          SETC  '&ZMS "MF"'                                         00282100
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00282200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00282300
.ZG472A       ANOP  ,                                                   00282400
.*-------------------------------------------------------------------   00282500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00282600
.ZG473        ANOP  ,                                                   00282700
&ZTLC         SETC 'L'                                                  00282800
              AIF   ('&MF(1)' NE '&ZTLC').ZG480                         00282900
&XMF          SETC  'L'         SET KEYWORD                             00283000
              AIF   (N'&MF LE 3).ZG473A         CK NUM                  00283100
&ZMS          SETC  '"MF='                                              00283200
&ZMS          SETC  '&ZMS.&MF"'                                         00283300
&ZMS          SETC  '&ZMS "MF"'                                         00283400
              MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'                00283500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00283600
.ZG473A       ANOP  ,                                                   00283700
.*-------------------------------------------------------------------   00283800
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00283900
              AIF   (N'&SYSLIST NE 0).ZG473B    POSITIONALS?            00284000
              AIF   ('&FUNC' NE '').ZG473B      KEYS?                   00284100
              AIF   ('&WORKMOD' NE '').ZG473B   KEYS?                   00284200
              AIF   ('&ANAME' NE '').ZG473B     KEYS?                   00284300
              AIF   ('&ENAME' NE '').ZG473B     KEYS?                   00284400
              AIF   ('&AMODE' NE '').ZG473B     KEYS?                   00284500
              AIF   ('&ATYPE' NE '').ZG473B     KEYS?                   00284600
              AIF   ('&DNAME' NE '').ZG473B     KEYS?                   00284700
              AIF   ('&SECTION' NE '').ZG473B   KEYS?                   00284800
              AIF   ('&BDY' NE '').ZG473B       KEYS?                   00284900
              AIF   ('&CLASSL' NE '').ZG473B    KEYS?                   00285000
              AIF   ('&OLDNAME' NE '').ZG473B   KEYS?                   00285100
              AIF   ('&NEWNAME' NE '').ZG473B   KEYS?                   00285200
              AIF   ('&COUNT' NE '').ZG473B     KEYS?                   00285300
              AIF   ('&MODE' NE '').ZG473B      KEYS?                   00285400
              AIF   ('&CLASS' NE '').ZG473B     KEYS?                   00285500
              AIF   ('&CALLIB' NE '').ZG473B    KEYS?                   00285600
              AIF   ('&PATHNAME' NE '').ZG473B  KEYS?                   00285700
              AIF   ('&DIALOG' NE '').ZG473B    KEYS?                   00285800
              AIF   ('&INTENT' NE '').ZG473B    KEYS?                   00285900
              AIF   ('&PROTECT' NE '').ZG473B   KEYS?                   00286000
              AIF   ('&RENAMEL' NE '').ZG473B   KEYS?                   00286100
              AIF   ('&AREA' NE '').ZG473B      KEYS?                   00286200
              AIF   ('&CURSOR' NE '').ZG473B    KEYS?                   00286300
              AIF   ('&RELOC' NE '').ZG473B     KEYS?                   00286400
              AIF   ('&RECTYPE' NE '').ZG473B   KEYS?                   00286500
              AIF   ('&OFFSET' NE '').ZG473B    KEYS?                   00286600
              AIF   ('&SYMBOL' NE '').ZG473B    KEYS?                   00286700
              AIF   ('&TCOUNT' NE '').ZG473B    KEYS?                   00286800
              AIF   ('&NTYPE' NE '').ZG473B     KEYS?                   00286900
              AIF   ('&CULIST' NE '').ZG473B    KEYS?                   00287000
              AIF   ('&ITYPE' NE '').ZG473B     KEYS?                   00287100
              AIF   ('&DLLNAME' NE '').ZG473B   KEYS?                   00287200
              AIF   ('&INAME' NE '').ZG473B     KEYS?                   00287300
              AIF   ('&INTYPE' NE '').ZG473B    KEYS?                   00287400
              AIF   ('&DDNAME' NE '').ZG473B    KEYS?                   00287500
              AIF   ('&DEPTR' NE '').ZG473B     KEYS?                   00287600
              AIF   ('&MEMBER' NE '').ZG473B    KEYS?                   00287700
              AIF   ('&DCBPTR' NE '').ZG473B    KEYS?                   00287800
              AIF   ('&EPTOKEN' NE '').ZG473B   KEYS?                   00287900
              AIF   ('&ATTRIB' NE '').ZG473B    KEYS?                   00288000
              AIF   ('&ALIASES' NE '').ZG473B   KEYS?                   00288100
              AIF   ('&IMPORTS' NE '').ZG473B   KEYS?                   00288200
              AIF   ('&EPLOC' NE '').ZG473B     KEYS?                   00288300
              AIF   ('&IDENTIFY' NE '').ZG473B  KEYS?                   00288400
              AIF   ('&EXTLST' NE '').ZG473B    KEYS?                   00288500
              AIF   ('&LNAME' NE '').ZG473B     KEYS?                   00288600
              AIF   ('&NEWSECT' NE '').ZG473B   KEYS?                   00288700
              AIF   ('&ENDDATA' NE '').ZG473B   KEYS?                   00288800
              AIF   ('&MODLIB' NE '').ZG473B    KEYS?                   00288900
              AIF   ('&SNAME' NE '').ZG473B     KEYS?                   00289000
              AIF   ('&REPLACE' NE '').ZG473B   KEYS?                   00289100
              AIF   ('&LIBOPT' NE '').ZG473B    KEYS?                   00289200
              AIF   ('&OPTION' NE '').ZG473B    KEYS?                   00289300
              AIF   ('&OPTVAL' NE '').ZG473B    KEYS?                   00289400
              AIF   ('&PARMS' NE '').ZG473B     KEYS?                   00289500
              AIF   ('&FILES' NE '').ZG473B     KEYS?                   00289600
              AIF   ('&EXITS' NE '').ZG473B     KEYS?                   00289700
              AIF   ('&OPTIONS' NE '').ZG473B   KEYS?                   00289800
              AIF   ('&ENVARS' NE '').ZG473B    KEYS?                   00289900
              AIF   ('&ORIGIN' NE '').ZG473B    KEYS?                   00290000
              AIF   ('&REGION' NE '').ZG473B    KEYS?                   00290100
              AIF   ('&RETCODE' NE '').ZG473B   KEYS?                   00290200
              AIF   ('&RSNCODE' NE '').ZG473B   KEYS?                   00290300
              AIF   ('&VERSION' NE '').ZG473B   KEYS?                   00290400
              AGO    .ZG473C    INVOCATION OKAY                         00290500
.ZG473B       ANOP  ,                                                   00290600
&ZMS          SETC  'THE "L" FORM OF "MF"'                              00290700
&ZMS          SETC  '&ZMS CAN ONLY HAVE'                                00290800
&ZMS          SETC  '&ZMS THE "PLISTVER" KEY'                           00290900
              MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'              00291000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00291100
.ZG473C       ANOP  ,                                                   00291200
.*-------------------------------------------------------------------   00291300
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00291400
&ZXMFCTRL     SETC  'INPUT'     SET IN/OUTPUT                           00291500
&XMFCTRL      SETC  '&MF(2,1)'  SET XVARIABLE                           00291600
              AIF   (N'&MF(2) GT 1).ZG475B      MULTI                   00291700
&XMFCTRL      SETC  '&MF(2)'    SET XVARIABLE                           00291800
.ZG475B       AIF   (K'&MF(2) GT 0).ZG475C                              00291900
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         00292000
&ZMS          SETC  'WHEN "L" IS SPECIFIED'                             00292100
&ZMS          SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'                 00292200
              MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                        00292300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00292400
.ZG475C       ANOP  ,                                                   00292500
.*-------------------------------------------------------------------   00292600
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00292700
              AIF   (K'&ZXMFCTRL LE 0).ZG475P   NOT I/O                 00292800
              AIF   ('&XMFCTRL'(1,1) NE '(').ZG475P                     00292900
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         00293000
&ZMS          SETC  '"MF='                                              00293100
&ZMS          SETC  '&ZMS.&MF"'                                         00293200
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           00293300
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'                   00293400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00293500
.ZG475P       ANOP  ,                                                   00293600
.*-------------------------------------------------------------------   00293700
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00293800
&ZXMFATTR     SETC  'INPUT'     SET IN/OUTPUT                           00293900
&XMFATTR      SETC  '0D'                                                00294000
              AIF   (K'&MF(3) LE 0).ZG478B      PARM                    00294100
&XMFATTR      SETC  '&MF(3,1)'  SET XVARIABLE                           00294200
              AIF   (N'&MF(3) GT 1).ZG478B      MULTI                   00294300
&XMFATTR      SETC  '&MF(3)'    SET XVARIABLE                           00294400
.ZG478B       ANOP  ,                                                   00294500
.*-------------------------------------------------------------------   00294600
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00294700
              AIF   (K'&ZXMFATTR LE 0).ZG478P   NOT I/O                 00294800
              AIF   ('&XMFATTR'(1,1) NE '(').ZG478P                     00294900
&ZXMFATTR     SETC  ''          RESET IN/OUTPUT                         00295000
&ZMS          SETC  '"MF='                                              00295100
&ZMS          SETC  '&ZMS.&MF"'                                         00295200
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           00295300
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'                   00295400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00295500
.ZG478P       ANOP  ,                                                   00295600
.*-------------------------------------------------------------------   00295700
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00295800
              AIF   (K'&ZXMFATTR LE 0).ZG478S   NOT I/O                 00295900
              AIF   (K'&XMFATTR LE 60).ZG478S   LNG OK                  00296000
&ZXMFATTR     SETC  ''          RESET IN/OUTPUT                         00296100
&ZMS          SETC  '"MF='                                              00296200
&ZMS          SETC  '&ZMS.&MF"'                                         00296300
&ZMS          SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'               00296400
              MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'                  00296500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00296600
.ZG478S       ANOP  ,                                                   00296700
.*-------------------------------------------------------------------   00296800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00296900
.ZG480        ANOP  ,                                                   00297000
&ZTLC         SETC 'E'                                                  00297100
              AIF   ('&MF(1)' NE '&ZTLC').ZG488                         00297200
&XMF          SETC  'E'         SET KEYWORD                             00297300
              AIF   (N'&MF LE 3).ZG480A         CK NUM                  00297400
&ZMS          SETC  '"MF='                                              00297500
&ZMS          SETC  '&ZMS.&MF"'                                         00297600
&ZMS          SETC  '&ZMS "MF"'                                         00297700
              MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'                00297800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00297900
.ZG480A       ANOP  ,                                                   00298000
.*-------------------------------------------------------------------   00298100
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00298200
&ZXMFCTRL     SETC  'INPUT'     SET IN/OUTPUT                           00298300
&XMFCTRL      SETC  '&MF(2,1)'  SET XVARIABLE                           00298400
              AIF   (N'&MF(2) GT 1).ZG482B      MULTI                   00298500
&XMFCTRL      SETC  '&MF(2)'    SET XVARIABLE                           00298600
.ZG482B       AIF   (K'&MF(2) GT 0).ZG482C                              00298700
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         00298800
&ZMS          SETC  'WHEN "E" IS SPECIFIED'                             00298900
&ZMS          SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'                 00299000
              MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                        00299100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00299200
.ZG482C       ANOP  ,                                                   00299300
.*-------------------------------------------------------------------   00299400
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00299500
              AIF   (K'&ZXMFCTRL LE 0).ZG482R   NOT I/O                 00299600
              AIF   ('&XMFCTRL'(1,1) NE '(').ZG482R                     00299700
&ZCGPR        SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                          00299800
              AIF   ('&ZCGPR'(1,1) NE '0').ZG482P                       00299900
              AIF   (K'&ZCGPR GT 2).ZG482Q                              00300000
              AIF   ('&ZCGPR' EQ '0').ZG482Q                            00300100
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00300200
              AIF   (T'&ZCGPR NE 'N').ZG482Q    INVALID REG NAME        00300300
.ZG482P       ANOP  ,                                                   00300400
              AIF   (T'&ZCGPR NE 'N').ZG482R    NON NUMERIC             00300500
              AIF   ('&ZCGPR' LT '1').ZG482Q                            00300600
              AIF   ('&ZCGPR' LE '12').ZG482R                           00300700
.ZG482Q       ANOP  ,                                                   00300800
&ZMS          SETC  '"MF='                                              00300900
&ZMS          SETC  '&ZMS.&MF"'                                         00301000
&ZMS          SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'           00301100
              MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                    00301200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00301300
.ZG482R       ANOP  ,                                                   00301400
.*-------------------------------------------------------------------   00301500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00301600
&XMFSCK       SETC  ''          INITIALIZE XVARIABLE                    00301700
.ZG486A   AIF   ('&MF(3)' NE 'COMPLETE').ZG487A                         00301800
&XMFSCK       SETC  'COMPLETE'  SET KEYWORD                             00301900
.*-------------------------------------------------------------------   00302000
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00302100
.ZG487A       AIF   (K'&XMFSCK GT 0).ZG487C     KEYWORD                 00302200
              AIF   (K'&MF(3) LE 0).ZG487B                              00302300
&ZMS          SETC  '"MF='                                              00302400
&ZMS          SETC  '&ZMS.&MF"'                                         00302500
&ZMS          SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '           00302600
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00302700
&ZMS          SETC  '&ZMS "COMPLETE".'                                  00302800
              MNOTE 8,' &ZMS '                                          00302900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00303000
.ZG487B       ANOP  ,                                                   00303100
&XMFSCK       SETC  'COMPLETE'  SET DEFAULT KEYWORD                     00303200
.ZG487C       ANOP  ,                                                   00303300
&ZXMFSCK      SETC  'INPUT'     SET IN/OUTPUT                           00303400
.*------------------------------------------------------------------    00303500
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00303600
.ZG488        ANOP  ,                                                   00303700
&ZXMF         SETC  'INPUT'     SET IN/OUTPUT                           00303800
              AIF   (K'&XMF GT 0).ZG488E        VALID ARG               00303900
              AIF   (T'&MF EQ 'O').ZG488D       OMITTED                 00304000
&ZASYSLNDX    SETA  0                                                   00304100
.ZG488A       ANOP  ,           POSITIONAL MACRO KEY                    00304200
&ZASYSLNDX    SETA  &ZASYSLNDX+1                                        00304300
              AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG488C                   00304400
&ZTLC         SETC 'MF'                                                 00304500
              AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG488A          00304600
.ZG488B       ANOP  ,                                                   00304700
&ZXMF         SETC  ''          RESET IN/OUTPUT                         00304800
&ZMS          SETC  'THE "MF" KEY'                                      00304900
&ZMS          SETC  '&ZMS MUST CONTAIN ONE'                             00305000
              MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                    00305100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00305200
              AGO   .ZG488E                                             00305300
.ZG488C       ANOP  ,                                                   00305400
&ZXMF         SETC  ''          RESET IN/OUTPUT                         00305500
&ZMS          SETC  '"MF='                                              00305600
&ZMS          SETC  '&ZMS.&MF"'                                         00305700
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           00305800
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00305900
&ZMS          SETC  '&ZMS "S",'                                         00306000
&ZMS          SETC  '&ZMS "L",'                                         00306100
&ZMS          SETC  '&ZMS OR "E".'                                      00306200
              MNOTE 8,' &ZMS '                                          00306300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00306400
              AGO   .ZG488E                                             00306500
.ZG488D       ANOP  ,                                                   00306600
&XMF          SETC  'S'         SET DEFAULT KEYWORD                     00306700
&XMFSCK       SETC  'COMPLETE'  COMPLETE CHECKING                       00306800
.ZG488E       ANOP  ,                                                   00306900
.********************************************************************   00307000
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00307100
.********************************************************************   00307200
              ACTR  10000                                               00307300
.*-------------------------------------------------------------------   00307400
.***AG.MF03 MF=(SLE)                                                    00307500
              AIF   ('&XMF' EQ 'L').ZGMFX                               00307600
.*------------------------------------------------------------------    00307700
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00307800
&XFUNC        SETC  ''          INITIALIZE XVARIABLE                    00307900
.*-------------------------------------------------------------------   00308000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00308100
.ZG3          ANOP  ,                                                   00308200
              AIF   (K'&FUNC(1) LE 0).ZG3A                              00308300
&ZTLC         SETC 'ADDA'                                               00308400
              AIF   ('&FUNC(1)' NE '&ZTLC').ZG26                        00308500
&XFUNC        SETC  'ADDA'      SET KEYWORD                             00308600
              AIF   (N'&FUNC LE 1).ZG3A         CK NUM                  00308700
&ZMS          SETC  '"FUNC='                                            00308800
&ZMS          SETC  '&ZMS.&FUNC"'                                       00308900
&ZMS          SETC  '&ZMS "FUNC"'                                       00309000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00309100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00309200
.ZG3A         ANOP  ,                                                   00309300
.*------------------------------------------------------------------    00309400
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00309500
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             00309600
.ZG3A0        AIF   (K'&SECTION LE 0).ZG3A1     OK                      00309700
&ZCVAL        SETC '&ZCVAL SECTION'             INCORRECT KEY USED      00309800
.ZG3A1        AIF   (K'&BDY LE 0).ZG3A2         OK                      00309900
&ZCVAL        SETC '&ZCVAL BDY'                 INCORRECT KEY USED      00310000
.ZG3A2        AIF   (K'&CLASSL LE 0).ZG3A3      OK                      00310100
&ZCVAL        SETC '&ZCVAL CLASSL'              INCORRECT KEY USED      00310200
.ZG3A3        AIF   (K'&OLDNAME LE 0).ZG3A4     OK                      00310300
&ZCVAL        SETC '&ZCVAL OLDNAME'             INCORRECT KEY USED      00310400
.ZG3A4        AIF   (K'&NEWNAME LE 0).ZG3A5     OK                      00310500
&ZCVAL        SETC '&ZCVAL NEWNAME'             INCORRECT KEY USED      00310600
.ZG3A5        AIF   (K'&COUNT LE 0).ZG3A6       OK                      00310700
&ZCVAL        SETC '&ZCVAL COUNT'               INCORRECT KEY USED      00310800
.ZG3A6        AIF   (K'&MODE LE 0).ZG3A7        OK                      00310900
&ZCVAL        SETC '&ZCVAL MODE'                INCORRECT KEY USED      00311000
.ZG3A7        AIF   (K'&CLASS LE 0).ZG3A8       OK                      00311100
&ZCVAL        SETC '&ZCVAL CLASS'               INCORRECT KEY USED      00311200
.ZG3A8        AIF   (K'&CALLIB LE 0).ZG3A9      OK                      00311300
&ZCVAL        SETC '&ZCVAL CALLIB'              INCORRECT KEY USED      00311400
.ZG3A9        AIF   (K'&PATHNAME LE 0).ZG3A10   OK                      00311500
&ZCVAL        SETC '&ZCVAL PATHNAME'            INCORRECT KEY USED      00311600
.ZG3A10       AIF   (K'&DIALOG LE 0).ZG3A11     OK                      00311700
&ZCVAL        SETC '&ZCVAL DIALOG'              INCORRECT KEY USED      00311800
.ZG3A11       AIF   (K'&INTENT LE 0).ZG3A12     OK                      00311900
&ZCVAL        SETC '&ZCVAL INTENT'              INCORRECT KEY USED      00312000
.ZG3A12       AIF   (K'&PROTECT LE 0).ZG3A13    OK                      00312100
&ZCVAL        SETC '&ZCVAL PROTECT'             INCORRECT KEY USED      00312200
.ZG3A13       AIF   (K'&RENAMEL LE 0).ZG3A14    OK                      00312300
&ZCVAL        SETC '&ZCVAL RENAMEL'             INCORRECT KEY USED      00312400
.ZG3A14       AIF   (K'&AREA LE 0).ZG3A15       OK                      00312500
&ZCVAL        SETC '&ZCVAL AREA'                INCORRECT KEY USED      00312600
.ZG3A15       AIF   (K'&CURSOR LE 0).ZG3A16     OK                      00312700
&ZCVAL        SETC '&ZCVAL CURSOR'              INCORRECT KEY USED      00312800
.ZG3A16       AIF   (K'&RELOC LE 0).ZG3A17      OK                      00312900
&ZCVAL        SETC '&ZCVAL RELOC'               INCORRECT KEY USED      00313000
.ZG3A17       AIF   (K'&RECTYPE LE 0).ZG3A18    OK                      00313100
&ZCVAL        SETC '&ZCVAL RECTYPE'             INCORRECT KEY USED      00313200
.ZG3A18       AIF   (K'&OFFSET LE 0).ZG3A19     OK                      00313300
&ZCVAL        SETC '&ZCVAL OFFSET'              INCORRECT KEY USED      00313400
.ZG3A19       AIF   (K'&SYMBOL LE 0).ZG3A20     OK                      00313500
&ZCVAL        SETC '&ZCVAL SYMBOL'              INCORRECT KEY USED      00313600
.ZG3A20       AIF   (K'&TCOUNT LE 0).ZG3A21     OK                      00313700
&ZCVAL        SETC '&ZCVAL TCOUNT'              INCORRECT KEY USED      00313800
.ZG3A21       AIF   (K'&NTYPE LE 0).ZG3A22      OK                      00313900
&ZCVAL        SETC '&ZCVAL NTYPE'               INCORRECT KEY USED      00314000
.ZG3A22       AIF   (K'&CULIST LE 0).ZG3A23     OK                      00314100
&ZCVAL        SETC '&ZCVAL CULIST'              INCORRECT KEY USED      00314200
.ZG3A23       AIF   (K'&ITYPE LE 0).ZG3A24      OK                      00314300
&ZCVAL        SETC '&ZCVAL ITYPE'               INCORRECT KEY USED      00314400
.ZG3A24       AIF   (K'&DLLNAME LE 0).ZG3A25    OK                      00314500
&ZCVAL        SETC '&ZCVAL DLLNAME'             INCORRECT KEY USED      00314600
.ZG3A25       AIF   (K'&INAME LE 0).ZG3A26      OK                      00314700
&ZCVAL        SETC '&ZCVAL INAME'               INCORRECT KEY USED      00314800
.ZG3A26       AIF   (K'&INTYPE LE 0).ZG3A27     OK                      00314900
&ZCVAL        SETC '&ZCVAL INTYPE'              INCORRECT KEY USED      00315000
.ZG3A27       AIF   (K'&DDNAME LE 0).ZG3A28     OK                      00315100
&ZCVAL        SETC '&ZCVAL DDNAME'              INCORRECT KEY USED      00315200
.ZG3A28       AIF   (K'&DEPTR LE 0).ZG3A29      OK                      00315300
&ZCVAL        SETC '&ZCVAL DEPTR'               INCORRECT KEY USED      00315400
.ZG3A29       AIF   (K'&MEMBER LE 0).ZG3A30     OK                      00315500
&ZCVAL        SETC '&ZCVAL MEMBER'              INCORRECT KEY USED      00315600
.ZG3A30       AIF   (K'&DCBPTR LE 0).ZG3A31     OK                      00315700
&ZCVAL        SETC '&ZCVAL DCBPTR'              INCORRECT KEY USED      00315800
.ZG3A31       AIF   (K'&EPTOKEN LE 0).ZG3A32    OK                      00315900
&ZCVAL        SETC '&ZCVAL EPTOKEN'             INCORRECT KEY USED      00316000
.ZG3A32       AIF   (K'&ATTRIB LE 0).ZG3A33     OK                      00316100
&ZCVAL        SETC '&ZCVAL ATTRIB'              INCORRECT KEY USED      00316200
.ZG3A33       AIF   (K'&ALIASES LE 0).ZG3A34    OK                      00316300
&ZCVAL        SETC '&ZCVAL ALIASES'             INCORRECT KEY USED      00316400
.ZG3A34       AIF   (K'&IMPORTS LE 0).ZG3A35    OK                      00316500
&ZCVAL        SETC '&ZCVAL IMPORTS'             INCORRECT KEY USED      00316600
.ZG3A35       AIF   (K'&EPLOC LE 0).ZG3A36      OK                      00316700
&ZCVAL        SETC '&ZCVAL EPLOC'               INCORRECT KEY USED      00316800
.ZG3A36       AIF   (K'&IDENTIFY LE 0).ZG3A37   OK                      00316900
&ZCVAL        SETC '&ZCVAL IDENTIFY'            INCORRECT KEY USED      00317000
.ZG3A37       AIF   (K'&EXTLST LE 0).ZG3A38     OK                      00317100
&ZCVAL        SETC '&ZCVAL EXTLST'              INCORRECT KEY USED      00317200
.ZG3A38       AIF   (K'&LNAME LE 0).ZG3A39      OK                      00317300
&ZCVAL        SETC '&ZCVAL LNAME'               INCORRECT KEY USED      00317400
.ZG3A39       AIF   (K'&NEWSECT LE 0).ZG3A40    OK                      00317500
&ZCVAL        SETC '&ZCVAL NEWSECT'             INCORRECT KEY USED      00317600
.ZG3A40       AIF   (K'&ENDDATA LE 0).ZG3A41    OK                      00317700
&ZCVAL        SETC '&ZCVAL ENDDATA'             INCORRECT KEY USED      00317800
.ZG3A41       AIF   (K'&MODLIB LE 0).ZG3A42     OK                      00317900
&ZCVAL        SETC '&ZCVAL MODLIB'              INCORRECT KEY USED      00318000
.ZG3A42       AIF   (K'&SNAME LE 0).ZG3A43      OK                      00318100
&ZCVAL        SETC '&ZCVAL SNAME'               INCORRECT KEY USED      00318200
.ZG3A43       AIF   (K'&REPLACE LE 0).ZG3A44    OK                      00318300
&ZCVAL        SETC '&ZCVAL REPLACE'             INCORRECT KEY USED      00318400
.ZG3A44       AIF   (K'&LIBOPT LE 0).ZG3A45     OK                      00318500
&ZCVAL        SETC '&ZCVAL LIBOPT'              INCORRECT KEY USED      00318600
.ZG3A45       AIF   (K'&OPTION LE 0).ZG3A46     OK                      00318700
&ZCVAL        SETC '&ZCVAL OPTION'              INCORRECT KEY USED      00318800
.ZG3A46       AIF   (K'&OPTVAL LE 0).ZG3A47     OK                      00318900
&ZCVAL        SETC '&ZCVAL OPTVAL'              INCORRECT KEY USED      00319000
.ZG3A47       AIF   (K'&PARMS LE 0).ZG3A48      OK                      00319100
&ZCVAL        SETC '&ZCVAL PARMS'               INCORRECT KEY USED      00319200
.ZG3A48       AIF   (K'&FILES LE 0).ZG3A49      OK                      00319300
&ZCVAL        SETC '&ZCVAL FILES'               INCORRECT KEY USED      00319400
.ZG3A49       AIF   (K'&EXITS LE 0).ZG3A50      OK                      00319500
&ZCVAL        SETC '&ZCVAL EXITS'               INCORRECT KEY USED      00319600
.ZG3A50       AIF   (K'&OPTIONS LE 0).ZG3A51    OK                      00319700
&ZCVAL        SETC '&ZCVAL OPTIONS'             INCORRECT KEY USED      00319800
.ZG3A51       AIF   (K'&ENVARS LE 0).ZG3A52     OK                      00319900
&ZCVAL        SETC '&ZCVAL ENVARS'              INCORRECT KEY USED      00320000
.ZG3A52       AIF   (K'&ORIGIN LE 0).ZG3A53     OK                      00320100
&ZCVAL        SETC '&ZCVAL ORIGIN'              INCORRECT KEY USED      00320200
.ZG3A53       AIF   (K'&REGION LE 0).ZG3A54     OK                      00320300
&ZCVAL        SETC '&ZCVAL REGION'              INCORRECT KEY USED      00320400
.ZG3A54       AIF   (K'&ZCVAL LE 0).ZG3A55      OK                      00320500
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               00320600
              AIF  (K'&ZCVAL LE 160).ZG3A55A                            00320700
&ZCVAL        SETC '&ZCVAL'(1,160)                                      00320800
&ZCVAL        SETC '&ZCVAL....'                                         00320900
.ZG3A55A      ANOP                                                      00321000
&ZMS          SETC  '"FUNC'                                             00321100
&ZMS          SETC  '&ZMS.=&FUNC"'                                      00321200
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                00321300
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                00321400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00321500
.ZG3A55       ANOP  ,                                                   00321600
.*----------------------------------------------------------------***   00321700
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00321800
              AIF   (N'&WORKMOD LE 1).ZG5A      CK NUM                  00321900
&ZMS          SETC  '"WORKMOD='                                         00322000
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    00322100
&ZMS          SETC  '&ZMS "WORKMOD"'                                    00322200
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00322300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00322400
.ZG5A         ANOP  ,                                                   00322500
.*-------------------------------------------------------------------   00322600
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00322700
&ZXWORKMOD    SETC  'INPUT'     SET IN/OUTPUT                           00322800
&XWORKMOD     SETC  '&WORKMOD(1)'               SET XVARIABLE           00322900
              AIF   (N'&WORKMOD GT 1).ZG5B      MULTI                   00323000
&XWORKMOD     SETC  '&WORKMOD'  SET XVARIABLE                           00323100
.ZG5B         AIF   (K'&WORKMOD(1) GT 0).ZG5C                           00323200
&ZXWORKMOD    SETC  ''          RESET IN/OUTPUT                         00323300
&ZMS          SETC  ' '                                                 00323400
&ZMS          SETC  '&ZMS "WORKMOD" KEY AND ITS'                        00323500
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00323600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00323700
.ZG5C         ANOP  ,                                                   00323800
.*-------------------------------------------------------------------   00323900
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00324000
              AIF   (K'&ZXWORKMOD LE 0).ZG5R    NOT I/O                 00324100
              AIF   ('&XWORKMOD'(1,1) NE '(').ZG5R                      00324200
&ZCGPR        SETC  '&XWORKMOD'(2,K'&XWORKMOD-2)                        00324300
              AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                         00324400
              AIF   (K'&ZCGPR GT 2).ZG5Q                                00324500
              AIF   ('&ZCGPR' EQ '0').ZG5Q                              00324600
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00324700
              AIF   (T'&ZCGPR NE 'N').ZG5Q      INVALID REG NAME        00324800
.ZG5P         ANOP  ,                                                   00324900
              AIF   (T'&ZCGPR NE 'N').ZG5R      NON NUMERIC             00325000
              AIF   ('&ZCGPR' LT '2').ZG5Q                              00325100
              AIF   ('&ZCGPR' LE '12').ZG5R                             00325200
.ZG5Q         ANOP  ,                                                   00325300
&ZMS          SETC  '"WORKMOD='                                         00325400
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    00325500
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00325600
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00325700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00325800
.ZG5R         ANOP  ,                                                   00325900
.*----------------------------------------------------------------***   00326000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00326100
              AIF   (N'&ANAME LE 1).ZG8A        CK NUM                  00326200
&ZMS          SETC  '"ANAME='                                           00326300
&ZMS          SETC  '&ZMS.&ANAME"'                                      00326400
&ZMS          SETC  '&ZMS "ANAME"'                                      00326500
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00326600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00326700
.ZG8A         ANOP  ,                                                   00326800
.*-------------------------------------------------------------------   00326900
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00327000
&ZXANAME      SETC  'INPUT'     SET IN/OUTPUT                           00327100
&XANAME       SETC  '&ANAME(1)'                 SET XVARIABLE           00327200
              AIF   (N'&ANAME GT 1).ZG8B        MULTI                   00327300
&XANAME       SETC  '&ANAME'    SET XVARIABLE                           00327400
.ZG8B         AIF   (K'&ANAME(1) GT 0).ZG8C                             00327500
&ZXANAME      SETC  ''          RESET IN/OUTPUT                         00327600
&ZMS          SETC  ' '                                                 00327700
&ZMS          SETC  '&ZMS "ANAME" KEY AND ITS'                          00327800
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00327900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00328000
.ZG8C         ANOP  ,                                                   00328100
.*-------------------------------------------------------------------   00328200
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00328300
              AIF   (K'&ZXANAME LE 0).ZG8R      NOT I/O                 00328400
              AIF   ('&XANAME'(1,1) NE '(').ZG8R                        00328500
&ZCGPR        SETC  '&XANAME'(2,K'&XANAME-2)                            00328600
              AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                         00328700
              AIF   (K'&ZCGPR GT 2).ZG8Q                                00328800
              AIF   ('&ZCGPR' EQ '0').ZG8Q                              00328900
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00329000
              AIF   (T'&ZCGPR NE 'N').ZG8Q      INVALID REG NAME        00329100
.ZG8P         ANOP  ,                                                   00329200
              AIF   (T'&ZCGPR NE 'N').ZG8R      NON NUMERIC             00329300
              AIF   ('&ZCGPR' LT '2').ZG8Q                              00329400
              AIF   ('&ZCGPR' LE '12').ZG8R                             00329500
.ZG8Q         ANOP  ,                                                   00329600
&ZMS          SETC  '"ANAME='                                           00329700
&ZMS          SETC  '&ZMS.&ANAME"'                                      00329800
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00329900
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00330000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00330100
.ZG8R         ANOP  ,                                                   00330200
.*----------------------------------------------------------------***   00330300
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00330400
              AIF   (N'&ENAME LE 1).ZG11A       CK NUM                  00330500
&ZMS          SETC  '"ENAME='                                           00330600
&ZMS          SETC  '&ZMS.&ENAME"'                                      00330700
&ZMS          SETC  '&ZMS "ENAME"'                                      00330800
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00330900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00331000
.ZG11A        ANOP  ,                                                   00331100
.*-------------------------------------------------------------------   00331200
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00331300
&ZXENAME      SETC  'INPUT'     SET IN/OUTPUT                           00331400
&XENAME       SETC  '0'                                                 00331500
              AIF   (K'&ENAME(1) LE 0).ZG11B    PARM                    00331600
&XENAME       SETC  '&ENAME(1)'                 SET XVARIABLE           00331700
              AIF   (N'&ENAME GT 1).ZG11B       MULTI                   00331800
&XENAME       SETC  '&ENAME'    SET XVARIABLE                           00331900
.ZG11B        ANOP  ,                                                   00332000
.*-------------------------------------------------------------------   00332100
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00332200
              AIF   (K'&ZXENAME LE 0).ZG11R     NOT I/O                 00332300
         AIF   ('&XENAME' EQ '0').ZG11R                                 00332400
              AIF   ('&XENAME'(1,1) NE '(').ZG11R                       00332500
&ZCGPR        SETC  '&XENAME'(2,K'&XENAME-2)                            00332600
              AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                        00332700
              AIF   (K'&ZCGPR GT 2).ZG11Q                               00332800
              AIF   ('&ZCGPR' EQ '0').ZG11Q                             00332900
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00333000
              AIF   (T'&ZCGPR NE 'N').ZG11Q     INVALID REG NAME        00333100
.ZG11P        ANOP  ,                                                   00333200
              AIF   (T'&ZCGPR NE 'N').ZG11R     NON NUMERIC             00333300
              AIF   ('&ZCGPR' LT '2').ZG11Q                             00333400
              AIF   ('&ZCGPR' LE '12').ZG11R                            00333500
.ZG11Q        ANOP  ,                                                   00333600
&ZMS          SETC  '"ENAME='                                           00333700
&ZMS          SETC  '&ZMS.&ENAME"'                                      00333800
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00333900
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00334000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00334100
.ZG11R        ANOP  ,                                                   00334200
.*----------------------------------------------------------------***   00334300
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00334400
              AIF   (N'&AMODE LE 1).ZG14A       CK NUM                  00334500
&ZMS          SETC  '"AMODE='                                           00334600
&ZMS          SETC  '&ZMS.&AMODE"'                                      00334700
&ZMS          SETC  '&ZMS "AMODE"'                                      00334800
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00334900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00335000
.ZG14A        ANOP  ,                                                   00335100
.*-------------------------------------------------------------------   00335200
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00335300
&ZXAMODE      SETC  'INPUT'     SET IN/OUTPUT                           00335400
&XAMODE       SETC  '0'                                                 00335500
              AIF   (K'&AMODE(1) LE 0).ZG14B    PARM                    00335600
&XAMODE       SETC  '&AMODE(1)'                 SET XVARIABLE           00335700
              AIF   (N'&AMODE GT 1).ZG14B       MULTI                   00335800
&XAMODE       SETC  '&AMODE'    SET XVARIABLE                           00335900
.ZG14B        ANOP  ,                                                   00336000
.*-------------------------------------------------------------------   00336100
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00336200
              AIF   (K'&ZXAMODE LE 0).ZG14R     NOT I/O                 00336300
         AIF   ('&XAMODE' EQ '0').ZG14R                                 00336400
              AIF   ('&XAMODE'(1,1) NE '(').ZG14R                       00336500
&ZCGPR        SETC  '&XAMODE'(2,K'&XAMODE-2)                            00336600
              AIF   ('&ZCGPR'(1,1) NE '0').ZG14P                        00336700
              AIF   (K'&ZCGPR GT 2).ZG14Q                               00336800
              AIF   ('&ZCGPR' EQ '0').ZG14Q                             00336900
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00337000
              AIF   (T'&ZCGPR NE 'N').ZG14Q     INVALID REG NAME        00337100
.ZG14P        ANOP  ,                                                   00337200
              AIF   (T'&ZCGPR NE 'N').ZG14R     NON NUMERIC             00337300
              AIF   ('&ZCGPR' LT '2').ZG14Q                             00337400
              AIF   ('&ZCGPR' LE '12').ZG14R                            00337500
.ZG14Q        ANOP  ,                                                   00337600
&ZMS          SETC  '"AMODE='                                           00337700
&ZMS          SETC  '&ZMS.&AMODE"'                                      00337800
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00337900
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00338000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00338100
.ZG14R        ANOP  ,                                                   00338200
.*------------------------------------------------------------------    00338300
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00338400
&XATYPE       SETC  ''          INITIALIZE XVARIABLE                    00338500
.*-------------------------------------------------------------------   00338600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00338700
.ZG18         ANOP  ,                                                   00338800
              AIF   (K'&ATYPE(1) LE 0).ZG18A                            00338900
&ZTLC         SETC 'A'                                                  00339000
              AIF   ('&ATYPE(1)' NE '&ZTLC').ZG19                       00339100
&XATYPE       SETC  'A'         SET KEYWORD                             00339200
              AIF   (N'&ATYPE LE 1).ZG18A       CK NUM                  00339300
&ZMS          SETC  '"ATYPE='                                           00339400
&ZMS          SETC  '&ZMS.&ATYPE"'                                      00339500
&ZMS          SETC  '&ZMS "ATYPE"'                                      00339600
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00339700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00339800
.ZG18A        ANOP  ,                                                   00339900
.*-------------------------------------------------------------------   00340000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00340100
.ZG19         ANOP  ,                                                   00340200
&ZTLC         SETC 'T'                                                  00340300
              AIF   ('&ATYPE(1)' NE '&ZTLC').ZG20                       00340400
&XATYPE       SETC  'T'         SET KEYWORD                             00340500
              AIF   (N'&ATYPE LE 1).ZG19A       CK NUM                  00340600
&ZMS          SETC  '"ATYPE='                                           00340700
&ZMS          SETC  '&ZMS.&ATYPE"'                                      00340800
&ZMS          SETC  '&ZMS "ATYPE"'                                      00340900
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00341000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00341100
.ZG19A        ANOP  ,                                                   00341200
.*-------------------------------------------------------------------   00341300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00341400
.ZG20         ANOP  ,                                                   00341500
&ZTLC         SETC 'S'                                                  00341600
              AIF   ('&ATYPE(1)' NE '&ZTLC').ZG21                       00341700
&XATYPE       SETC  'S'         SET KEYWORD                             00341800
              AIF   (N'&ATYPE LE 1).ZG20A       CK NUM                  00341900
&ZMS          SETC  '"ATYPE='                                           00342000
&ZMS          SETC  '&ZMS.&ATYPE"'                                      00342100
&ZMS          SETC  '&ZMS "ATYPE"'                                      00342200
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00342300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00342400
.ZG20A        ANOP  ,                                                   00342500
.*-------------------------------------------------------------------   00342600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00342700
.ZG21         ANOP  ,                                                   00342800
&ZTLC         SETC 'P'                                                  00342900
              AIF   ('&ATYPE(1)' NE '&ZTLC').ZG22                       00343000
&XATYPE       SETC  'P'         SET KEYWORD                             00343100
              AIF   (N'&ATYPE LE 1).ZG21A       CK NUM                  00343200
&ZMS          SETC  '"ATYPE='                                           00343300
&ZMS          SETC  '&ZMS.&ATYPE"'                                      00343400
&ZMS          SETC  '&ZMS "ATYPE"'                                      00343500
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00343600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00343700
.ZG21A        ANOP  ,                                                   00343800
.*------------------------------------------------------------------    00343900
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00344000
.ZG22         ANOP  ,                                                   00344100
&ZXATYPE      SETC  'INPUT'     SET IN/OUTPUT                           00344200
              AIF   (K'&XATYPE GT 0).ZG22E      VALID ARG               00344300
              AIF   (T'&ATYPE EQ 'O').ZG22D     OMITTED                 00344400
&ZASYSLNDX    SETA  0                                                   00344500
.ZG22A        ANOP  ,           POSITIONAL MACRO KEY                    00344600
&ZASYSLNDX    SETA  &ZASYSLNDX+1                                        00344700
              AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG22C                    00344800
&ZTLC         SETC 'ATYPE'                                              00344900
              AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG22A           00345000
.ZG22B        ANOP  ,                                                   00345100
&ZXATYPE      SETC  ''          RESET IN/OUTPUT                         00345200
&ZMS          SETC  'THE "ATYPE" KEY'                                   00345300
&ZMS          SETC  '&ZMS MUST CONTAIN ONE'                             00345400
              MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                    00345500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00345600
              AGO   .ZG22E                                              00345700
.ZG22C        ANOP  ,                                                   00345800
&ZXATYPE      SETC  ''          RESET IN/OUTPUT                         00345900
&ZMS          SETC  '"ATYPE='                                           00346000
&ZMS          SETC  '&ZMS.&ATYPE"'                                      00346100
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           00346200
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00346300
&ZMS          SETC  '&ZMS "A",'                                         00346400
&ZMS          SETC  '&ZMS "T",'                                         00346500
&ZMS          SETC  '&ZMS "S",'                                         00346600
&ZMS          SETC  '&ZMS OR "P".'                                      00346700
              MNOTE 8,' &ZMS '                                          00346800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00346900
              AGO   .ZG22E                                              00347000
.ZG22D        ANOP  ,                                                   00347100
&XATYPE       SETC  'A'         SET DEFAULT KEYWORD                     00347200
.ZG22E        ANOP  ,                                                   00347300
.*----------------------------------------------------------------***   00347400
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00347500
              AIF   (N'&DNAME LE 1).ZG24A       CK NUM                  00347600
&ZMS          SETC  '"DNAME='                                           00347700
&ZMS          SETC  '&ZMS.&DNAME"'                                      00347800
&ZMS          SETC  '&ZMS "DNAME"'                                      00347900
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00348000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00348100
.ZG24A        ANOP  ,                                                   00348200
.*-------------------------------------------------------------------   00348300
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00348400
&ZXDNAME      SETC  'INPUT'     SET IN/OUTPUT                           00348500
&XDNAME       SETC  '0'                                                 00348600
              AIF   (K'&DNAME(1) LE 0).ZG24B    PARM                    00348700
&XDNAME       SETC  '&DNAME(1)'                 SET XVARIABLE           00348800
              AIF   (N'&DNAME GT 1).ZG24B       MULTI                   00348900
&XDNAME       SETC  '&DNAME'    SET XVARIABLE                           00349000
.ZG24B        ANOP  ,                                                   00349100
.*-------------------------------------------------------------------   00349200
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00349300
              AIF   (K'&ZXDNAME LE 0).ZG24R     NOT I/O                 00349400
         AIF   ('&XDNAME' EQ '0').ZG24R                                 00349500
              AIF   ('&XDNAME'(1,1) NE '(').ZG24R                       00349600
&ZCGPR        SETC  '&XDNAME'(2,K'&XDNAME-2)                            00349700
              AIF   ('&ZCGPR'(1,1) NE '0').ZG24P                        00349800
              AIF   (K'&ZCGPR GT 2).ZG24Q                               00349900
              AIF   ('&ZCGPR' EQ '0').ZG24Q                             00350000
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00350100
              AIF   (T'&ZCGPR NE 'N').ZG24Q     INVALID REG NAME        00350200
.ZG24P        ANOP  ,                                                   00350300
              AIF   (T'&ZCGPR NE 'N').ZG24R     NON NUMERIC             00350400
              AIF   ('&ZCGPR' LT '2').ZG24Q                             00350500
              AIF   ('&ZCGPR' LE '12').ZG24R                            00350600
.ZG24Q        ANOP  ,                                                   00350700
&ZMS          SETC  '"DNAME='                                           00350800
&ZMS          SETC  '&ZMS.&DNAME"'                                      00350900
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00351000
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00351100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00351200
.ZG24R        ANOP  ,                                                   00351300
.*-------------------------------------------------------------------   00351400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00351500
.ZG26         ANOP  ,                                                   00351600
&ZTLC         SETC 'ALIGNT'                                             00351700
              AIF   ('&FUNC(1)' NE '&ZTLC').ZG39                        00351800
&XFUNC        SETC  'ALIGNT'    SET KEYWORD                             00351900
              AIF   (N'&FUNC LE 1).ZG26A        CK NUM                  00352000
&ZMS          SETC  '"FUNC='                                            00352100
&ZMS          SETC  '&ZMS.&FUNC"'                                       00352200
&ZMS          SETC  '&ZMS "FUNC"'                                       00352300
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00352400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00352500
.ZG26A        ANOP  ,                                                   00352600
.*------------------------------------------------------------------    00352700
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00352800
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             00352900
.ZG26A0       AIF   (K'&ANAME LE 0).ZG26A1      OK                      00353000
&ZCVAL        SETC '&ZCVAL ANAME'               INCORRECT KEY USED      00353100
.ZG26A1       AIF   (K'&ENAME LE 0).ZG26A2      OK                      00353200
&ZCVAL        SETC '&ZCVAL ENAME'               INCORRECT KEY USED      00353300
.ZG26A2       AIF   (K'&AMODE LE 0).ZG26A3      OK                      00353400
&ZCVAL        SETC '&ZCVAL AMODE'               INCORRECT KEY USED      00353500
.ZG26A3       AIF   (K'&ATYPE LE 0).ZG26A4      OK                      00353600
&ZCVAL        SETC '&ZCVAL ATYPE'               INCORRECT KEY USED      00353700
.ZG26A4       AIF   (K'&DNAME LE 0).ZG26A5      OK                      00353800
&ZCVAL        SETC '&ZCVAL DNAME'               INCORRECT KEY USED      00353900
.ZG26A5       AIF   (K'&OLDNAME LE 0).ZG26A6    OK                      00354000
&ZCVAL        SETC '&ZCVAL OLDNAME'             INCORRECT KEY USED      00354100
.ZG26A6       AIF   (K'&NEWNAME LE 0).ZG26A7    OK                      00354200
&ZCVAL        SETC '&ZCVAL NEWNAME'             INCORRECT KEY USED      00354300
.ZG26A7       AIF   (K'&COUNT LE 0).ZG26A8      OK                      00354400
&ZCVAL        SETC '&ZCVAL COUNT'               INCORRECT KEY USED      00354500
.ZG26A8       AIF   (K'&MODE LE 0).ZG26A9       OK                      00354600
&ZCVAL        SETC '&ZCVAL MODE'                INCORRECT KEY USED      00354700
.ZG26A9       AIF   (K'&CLASS LE 0).ZG26A10     OK                      00354800
&ZCVAL        SETC '&ZCVAL CLASS'               INCORRECT KEY USED      00354900
.ZG26A10      AIF   (K'&CALLIB LE 0).ZG26A11    OK                      00355000
&ZCVAL        SETC '&ZCVAL CALLIB'              INCORRECT KEY USED      00355100
.ZG26A11      AIF   (K'&PATHNAME LE 0).ZG26A12  OK                      00355200
&ZCVAL        SETC '&ZCVAL PATHNAME'            INCORRECT KEY USED      00355300
.ZG26A12      AIF   (K'&DIALOG LE 0).ZG26A13    OK                      00355400
&ZCVAL        SETC '&ZCVAL DIALOG'              INCORRECT KEY USED      00355500
.ZG26A13      AIF   (K'&INTENT LE 0).ZG26A14    OK                      00355600
&ZCVAL        SETC '&ZCVAL INTENT'              INCORRECT KEY USED      00355700
.ZG26A14      AIF   (K'&PROTECT LE 0).ZG26A15   OK                      00355800
&ZCVAL        SETC '&ZCVAL PROTECT'             INCORRECT KEY USED      00355900
.ZG26A15      AIF   (K'&RENAMEL LE 0).ZG26A16   OK                      00356000
&ZCVAL        SETC '&ZCVAL RENAMEL'             INCORRECT KEY USED      00356100
.ZG26A16      AIF   (K'&AREA LE 0).ZG26A17      OK                      00356200
&ZCVAL        SETC '&ZCVAL AREA'                INCORRECT KEY USED      00356300
.ZG26A17      AIF   (K'&CURSOR LE 0).ZG26A18    OK                      00356400
&ZCVAL        SETC '&ZCVAL CURSOR'              INCORRECT KEY USED      00356500
.ZG26A18      AIF   (K'&RELOC LE 0).ZG26A19     OK                      00356600
&ZCVAL        SETC '&ZCVAL RELOC'               INCORRECT KEY USED      00356700
.ZG26A19      AIF   (K'&RECTYPE LE 0).ZG26A20   OK                      00356800
&ZCVAL        SETC '&ZCVAL RECTYPE'             INCORRECT KEY USED      00356900
.ZG26A20      AIF   (K'&OFFSET LE 0).ZG26A21    OK                      00357000
&ZCVAL        SETC '&ZCVAL OFFSET'              INCORRECT KEY USED      00357100
.ZG26A21      AIF   (K'&SYMBOL LE 0).ZG26A22    OK                      00357200
&ZCVAL        SETC '&ZCVAL SYMBOL'              INCORRECT KEY USED      00357300
.ZG26A22      AIF   (K'&TCOUNT LE 0).ZG26A23    OK                      00357400
&ZCVAL        SETC '&ZCVAL TCOUNT'              INCORRECT KEY USED      00357500
.ZG26A23      AIF   (K'&NTYPE LE 0).ZG26A24     OK                      00357600
&ZCVAL        SETC '&ZCVAL NTYPE'               INCORRECT KEY USED      00357700
.ZG26A24      AIF   (K'&CULIST LE 0).ZG26A25    OK                      00357800
&ZCVAL        SETC '&ZCVAL CULIST'              INCORRECT KEY USED      00357900
.ZG26A25      AIF   (K'&ITYPE LE 0).ZG26A26     OK                      00358000
&ZCVAL        SETC '&ZCVAL ITYPE'               INCORRECT KEY USED      00358100
.ZG26A26      AIF   (K'&DLLNAME LE 0).ZG26A27   OK                      00358200
&ZCVAL        SETC '&ZCVAL DLLNAME'             INCORRECT KEY USED      00358300
.ZG26A27      AIF   (K'&INAME LE 0).ZG26A28     OK                      00358400
&ZCVAL        SETC '&ZCVAL INAME'               INCORRECT KEY USED      00358500
.ZG26A28      AIF   (K'&INTYPE LE 0).ZG26A29    OK                      00358600
&ZCVAL        SETC '&ZCVAL INTYPE'              INCORRECT KEY USED      00358700
.ZG26A29      AIF   (K'&DDNAME LE 0).ZG26A30    OK                      00358800
&ZCVAL        SETC '&ZCVAL DDNAME'              INCORRECT KEY USED      00358900
.ZG26A30      AIF   (K'&DEPTR LE 0).ZG26A31     OK                      00359000
&ZCVAL        SETC '&ZCVAL DEPTR'               INCORRECT KEY USED      00359100
.ZG26A31      AIF   (K'&MEMBER LE 0).ZG26A32    OK                      00359200
&ZCVAL        SETC '&ZCVAL MEMBER'              INCORRECT KEY USED      00359300
.ZG26A32      AIF   (K'&DCBPTR LE 0).ZG26A33    OK                      00359400
&ZCVAL        SETC '&ZCVAL DCBPTR'              INCORRECT KEY USED      00359500
.ZG26A33      AIF   (K'&EPTOKEN LE 0).ZG26A34   OK                      00359600
&ZCVAL        SETC '&ZCVAL EPTOKEN'             INCORRECT KEY USED      00359700
.ZG26A34      AIF   (K'&ATTRIB LE 0).ZG26A35    OK                      00359800
&ZCVAL        SETC '&ZCVAL ATTRIB'              INCORRECT KEY USED      00359900
.ZG26A35      AIF   (K'&ALIASES LE 0).ZG26A36   OK                      00360000
&ZCVAL        SETC '&ZCVAL ALIASES'             INCORRECT KEY USED      00360100
.ZG26A36      AIF   (K'&IMPORTS LE 0).ZG26A37   OK                      00360200
&ZCVAL        SETC '&ZCVAL IMPORTS'             INCORRECT KEY USED      00360300
.ZG26A37      AIF   (K'&EPLOC LE 0).ZG26A38     OK                      00360400
&ZCVAL        SETC '&ZCVAL EPLOC'               INCORRECT KEY USED      00360500
.ZG26A38      AIF   (K'&IDENTIFY LE 0).ZG26A39  OK                      00360600
&ZCVAL        SETC '&ZCVAL IDENTIFY'            INCORRECT KEY USED      00360700
.ZG26A39      AIF   (K'&EXTLST LE 0).ZG26A40    OK                      00360800
&ZCVAL        SETC '&ZCVAL EXTLST'              INCORRECT KEY USED      00360900
.ZG26A40      AIF   (K'&LNAME LE 0).ZG26A41     OK                      00361000
&ZCVAL        SETC '&ZCVAL LNAME'               INCORRECT KEY USED      00361100
.ZG26A41      AIF   (K'&NEWSECT LE 0).ZG26A42   OK                      00361200
&ZCVAL        SETC '&ZCVAL NEWSECT'             INCORRECT KEY USED      00361300
.ZG26A42      AIF   (K'&ENDDATA LE 0).ZG26A43   OK                      00361400
&ZCVAL        SETC '&ZCVAL ENDDATA'             INCORRECT KEY USED      00361500
.ZG26A43      AIF   (K'&MODLIB LE 0).ZG26A44    OK                      00361600
&ZCVAL        SETC '&ZCVAL MODLIB'              INCORRECT KEY USED      00361700
.ZG26A44      AIF   (K'&SNAME LE 0).ZG26A45     OK                      00361800
&ZCVAL        SETC '&ZCVAL SNAME'               INCORRECT KEY USED      00361900
.ZG26A45      AIF   (K'&REPLACE LE 0).ZG26A46   OK                      00362000
&ZCVAL        SETC '&ZCVAL REPLACE'             INCORRECT KEY USED      00362100
.ZG26A46      AIF   (K'&LIBOPT LE 0).ZG26A47    OK                      00362200
&ZCVAL        SETC '&ZCVAL LIBOPT'              INCORRECT KEY USED      00362300
.ZG26A47      AIF   (K'&OPTION LE 0).ZG26A48    OK                      00362400
&ZCVAL        SETC '&ZCVAL OPTION'              INCORRECT KEY USED      00362500
.ZG26A48      AIF   (K'&OPTVAL LE 0).ZG26A49    OK                      00362600
&ZCVAL        SETC '&ZCVAL OPTVAL'              INCORRECT KEY USED      00362700
.ZG26A49      AIF   (K'&PARMS LE 0).ZG26A50     OK                      00362800
&ZCVAL        SETC '&ZCVAL PARMS'               INCORRECT KEY USED      00362900
.ZG26A50      AIF   (K'&FILES LE 0).ZG26A51     OK                      00363000
&ZCVAL        SETC '&ZCVAL FILES'               INCORRECT KEY USED      00363100
.ZG26A51      AIF   (K'&EXITS LE 0).ZG26A52     OK                      00363200
&ZCVAL        SETC '&ZCVAL EXITS'               INCORRECT KEY USED      00363300
.ZG26A52      AIF   (K'&OPTIONS LE 0).ZG26A53   OK                      00363400
&ZCVAL        SETC '&ZCVAL OPTIONS'             INCORRECT KEY USED      00363500
.ZG26A53      AIF   (K'&ENVARS LE 0).ZG26A54    OK                      00363600
&ZCVAL        SETC '&ZCVAL ENVARS'              INCORRECT KEY USED      00363700
.ZG26A54      AIF   (K'&ORIGIN LE 0).ZG26A55    OK                      00363800
&ZCVAL        SETC '&ZCVAL ORIGIN'              INCORRECT KEY USED      00363900
.ZG26A55      AIF   (K'&REGION LE 0).ZG26A56    OK                      00364000
&ZCVAL        SETC '&ZCVAL REGION'              INCORRECT KEY USED      00364100
.ZG26A56      AIF   (K'&ZCVAL LE 0).ZG26A57     OK                      00364200
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               00364300
              AIF  (K'&ZCVAL LE 160).ZG26A57A                           00364400
&ZCVAL        SETC '&ZCVAL'(1,160)                                      00364500
&ZCVAL        SETC '&ZCVAL....'                                         00364600
.ZG26A57A     ANOP                                                      00364700
&ZMS          SETC  '"FUNC'                                             00364800
&ZMS          SETC  '&ZMS.=&FUNC"'                                      00364900
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                00365000
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                00365100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00365200
.ZG26A57      ANOP  ,                                                   00365300
.*----------------------------------------------------------------***   00365400
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00365500
              AIF   (N'&WORKMOD LE 1).ZG28A     CK NUM                  00365600
&ZMS          SETC  '"WORKMOD='                                         00365700
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    00365800
&ZMS          SETC  '&ZMS "WORKMOD"'                                    00365900
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00366000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00366100
.ZG28A        ANOP  ,                                                   00366200
.*-------------------------------------------------------------------   00366300
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00366400
&ZXWORKMOD    SETC  'INPUT'     SET IN/OUTPUT                           00366500
&XWORKMOD     SETC  '&WORKMOD(1)'               SET XVARIABLE           00366600
              AIF   (N'&WORKMOD GT 1).ZG28B     MULTI                   00366700
&XWORKMOD     SETC  '&WORKMOD'  SET XVARIABLE                           00366800
.ZG28B        AIF   (K'&WORKMOD(1) GT 0).ZG28C                          00366900
&ZXWORKMOD    SETC  ''          RESET IN/OUTPUT                         00367000
&ZMS          SETC  ' '                                                 00367100
&ZMS          SETC  '&ZMS "WORKMOD" KEY AND ITS'                        00367200
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00367300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00367400
.ZG28C        ANOP  ,                                                   00367500
.*-------------------------------------------------------------------   00367600
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00367700
              AIF   (K'&ZXWORKMOD LE 0).ZG28R   NOT I/O                 00367800
              AIF   ('&XWORKMOD'(1,1) NE '(').ZG28R                     00367900
&ZCGPR        SETC  '&XWORKMOD'(2,K'&XWORKMOD-2)                        00368000
              AIF   ('&ZCGPR'(1,1) NE '0').ZG28P                        00368100
              AIF   (K'&ZCGPR GT 2).ZG28Q                               00368200
              AIF   ('&ZCGPR' EQ '0').ZG28Q                             00368300
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00368400
              AIF   (T'&ZCGPR NE 'N').ZG28Q     INVALID REG NAME        00368500
.ZG28P        ANOP  ,                                                   00368600
              AIF   (T'&ZCGPR NE 'N').ZG28R     NON NUMERIC             00368700
              AIF   ('&ZCGPR' LT '2').ZG28Q                             00368800
              AIF   ('&ZCGPR' LE '12').ZG28R                            00368900
.ZG28Q        ANOP  ,                                                   00369000
&ZMS          SETC  '"WORKMOD='                                         00369100
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    00369200
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00369300
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00369400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00369500
.ZG28R        ANOP  ,                                                   00369600
.*----------------------------------------------------------------***   00369700
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00369800
              AIF   (N'&SECTION LE 1).ZG31A     CK NUM                  00369900
&ZMS          SETC  '"SECTION='                                         00370000
&ZMS          SETC  '&ZMS.&SECTION"'                                    00370100
&ZMS          SETC  '&ZMS "SECTION"'                                    00370200
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00370300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00370400
.ZG31A        ANOP  ,                                                   00370500
.*-------------------------------------------------------------------   00370600
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00370700
&ZXSECTION    SETC  'INPUT'     SET IN/OUTPUT                           00370800
&XSECTION     SETC  '&SECTION(1)'               SET XVARIABLE           00370900
              AIF   (N'&SECTION GT 1).ZG31B     MULTI                   00371000
&XSECTION     SETC  '&SECTION'  SET XVARIABLE                           00371100
.ZG31B        AIF   (K'&SECTION(1) GT 0).ZG31C                          00371200
&ZXSECTION    SETC  ''          RESET IN/OUTPUT                         00371300
&ZMS          SETC  ' '                                                 00371400
&ZMS          SETC  '&ZMS "SECTION" KEY AND ITS'                        00371500
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00371600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00371700
.ZG31C        ANOP  ,                                                   00371800
.*-------------------------------------------------------------------   00371900
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00372000
              AIF   (K'&ZXSECTION LE 0).ZG31R   NOT I/O                 00372100
              AIF   ('&XSECTION'(1,1) NE '(').ZG31R                     00372200
&ZCGPR        SETC  '&XSECTION'(2,K'&XSECTION-2)                        00372300
              AIF   ('&ZCGPR'(1,1) NE '0').ZG31P                        00372400
              AIF   (K'&ZCGPR GT 2).ZG31Q                               00372500
              AIF   ('&ZCGPR' EQ '0').ZG31Q                             00372600
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00372700
              AIF   (T'&ZCGPR NE 'N').ZG31Q     INVALID REG NAME        00372800
.ZG31P        ANOP  ,                                                   00372900
              AIF   (T'&ZCGPR NE 'N').ZG31R     NON NUMERIC             00373000
              AIF   ('&ZCGPR' LT '2').ZG31Q                             00373100
              AIF   ('&ZCGPR' LE '12').ZG31R                            00373200
.ZG31Q        ANOP  ,                                                   00373300
&ZMS          SETC  '"SECTION='                                         00373400
&ZMS          SETC  '&ZMS.&SECTION"'                                    00373500
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00373600
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00373700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00373800
.ZG31R        ANOP  ,                                                   00373900
.*----------------------------------------------------------------***   00374000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00374100
              AIF   (N'&BDY LE 1).ZG34A         CK NUM                  00374200
&ZMS          SETC  '"BDY='                                             00374300
&ZMS          SETC  '&ZMS.&BDY"'                                        00374400
&ZMS          SETC  '&ZMS "BDY"'                                        00374500
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00374600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00374700
.ZG34A        ANOP  ,                                                   00374800
.*-------------------------------------------------------------------   00374900
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00375000
&ZXBDY        SETC  'INPUT'     SET IN/OUTPUT                           00375100
&XBDY         SETC  '4096'                                              00375200
              AIF   (K'&BDY(1) LE 0).ZG34B      PARM                    00375300
&XBDY         SETC  '&BDY(1)'   SET XVARIABLE                           00375400
              AIF   (N'&BDY GT 1).ZG34B         MULTI                   00375500
&XBDY         SETC  '&BDY'      SET XVARIABLE                           00375600
.ZG34B        ANOP  ,                                                   00375700
.*-------------------------------------------------------------------   00375800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00375900
              AIF   (K'&ZXBDY LE 0).ZG34R       NOT I/O                 00376000
              AIF   ('&XBDY'(1,1) NE '(').ZG34R                         00376100
&ZCGPR        SETC  '&XBDY'(2,K'&XBDY-2)                                00376200
              AIF   ('&ZCGPR'(1,1) NE '0').ZG34P                        00376300
              AIF   (K'&ZCGPR GT 2).ZG34Q                               00376400
              AIF   ('&ZCGPR' EQ '0').ZG34Q                             00376500
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00376600
              AIF   (T'&ZCGPR NE 'N').ZG34Q     INVALID REG NAME        00376700
.ZG34P        ANOP  ,                                                   00376800
              AIF   (T'&ZCGPR NE 'N').ZG34R     NON NUMERIC             00376900
              AIF   ('&ZCGPR' LT '2').ZG34Q                             00377000
              AIF   ('&ZCGPR' LE '12').ZG34R                            00377100
.ZG34Q        ANOP  ,                                                   00377200
&ZMS          SETC  '"BDY='                                             00377300
&ZMS          SETC  '&ZMS.&BDY"'                                        00377400
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00377500
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00377600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00377700
.ZG34R        ANOP  ,                                                   00377800
.*----------------------------------------------------------------***   00377900
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00378000
              AIF   (N'&CLASSL LE 1).ZG37A      CK NUM                  00378100
&ZMS          SETC  '"CLASSL='                                          00378200
&ZMS          SETC  '&ZMS.&CLASSL"'                                     00378300
&ZMS          SETC  '&ZMS "CLASSL"'                                     00378400
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00378500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00378600
.ZG37A        ANOP  ,                                                   00378700
.*-------------------------------------------------------------------   00378800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00378900
&ZXCLASSL     SETC  'INPUT'     SET IN/OUTPUT                           00379000
&XCLASSL      SETC  '0'                                                 00379100
              AIF   (K'&CLASSL(1) LE 0).ZG37B   PARM                    00379200
&XCLASSL      SETC  '&CLASSL(1)'                SET XVARIABLE           00379300
              AIF   (N'&CLASSL GT 1).ZG37B      MULTI                   00379400
&XCLASSL      SETC  '&CLASSL'   SET XVARIABLE                           00379500
.ZG37B        ANOP  ,                                                   00379600
.*-------------------------------------------------------------------   00379700
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00379800
              AIF   (K'&ZXCLASSL LE 0).ZG37R    NOT I/O                 00379900
         AIF   ('&XCLASSL' EQ '0').ZG37R                                00380000
              AIF   ('&XCLASSL'(1,1) NE '(').ZG37R                      00380100
&ZCGPR        SETC  '&XCLASSL'(2,K'&XCLASSL-2)                          00380200
              AIF   ('&ZCGPR'(1,1) NE '0').ZG37P                        00380300
              AIF   (K'&ZCGPR GT 2).ZG37Q                               00380400
              AIF   ('&ZCGPR' EQ '0').ZG37Q                             00380500
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00380600
              AIF   (T'&ZCGPR NE 'N').ZG37Q     INVALID REG NAME        00380700
.ZG37P        ANOP  ,                                                   00380800
              AIF   (T'&ZCGPR NE 'N').ZG37R     NON NUMERIC             00380900
              AIF   ('&ZCGPR' LT '2').ZG37Q                             00381000
              AIF   ('&ZCGPR' LE '12').ZG37R                            00381100
.ZG37Q        ANOP  ,                                                   00381200
&ZMS          SETC  '"CLASSL='                                          00381300
&ZMS          SETC  '&ZMS.&CLASSL"'                                     00381400
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00381500
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00381600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00381700
.ZG37R        ANOP  ,                                                   00381800
.*-------------------------------------------------------------------   00381900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00382000
.ZG39         ANOP  ,                                                   00382100
&ZTLC         SETC 'ALTERW'                                             00382200
              AIF   ('&FUNC(1)' NE '&ZTLC').ZG70                        00382300
&XFUNC        SETC  'ALTERW'    SET KEYWORD                             00382400
              AIF   (N'&FUNC LE 1).ZG39A        CK NUM                  00382500
&ZMS          SETC  '"FUNC='                                            00382600
&ZMS          SETC  '&ZMS.&FUNC"'                                       00382700
&ZMS          SETC  '&ZMS "FUNC"'                                       00382800
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00382900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00383000
.ZG39A        ANOP  ,                                                   00383100
.*------------------------------------------------------------------    00383200
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00383300
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             00383400
.ZG39A0       AIF   (K'&ANAME LE 0).ZG39A1      OK                      00383500
&ZCVAL        SETC '&ZCVAL ANAME'               INCORRECT KEY USED      00383600
.ZG39A1       AIF   (K'&ENAME LE 0).ZG39A2      OK                      00383700
&ZCVAL        SETC '&ZCVAL ENAME'               INCORRECT KEY USED      00383800
.ZG39A2       AIF   (K'&AMODE LE 0).ZG39A3      OK                      00383900
&ZCVAL        SETC '&ZCVAL AMODE'               INCORRECT KEY USED      00384000
.ZG39A3       AIF   (K'&DNAME LE 0).ZG39A4      OK                      00384100
&ZCVAL        SETC '&ZCVAL DNAME'               INCORRECT KEY USED      00384200
.ZG39A4       AIF   (K'&SECTION LE 0).ZG39A5    OK                      00384300
&ZCVAL        SETC '&ZCVAL SECTION'             INCORRECT KEY USED      00384400
.ZG39A5       AIF   (K'&BDY LE 0).ZG39A6        OK                      00384500
&ZCVAL        SETC '&ZCVAL BDY'                 INCORRECT KEY USED      00384600
.ZG39A6       AIF   (K'&CLASSL LE 0).ZG39A7     OK                      00384700
&ZCVAL        SETC '&ZCVAL CLASSL'              INCORRECT KEY USED      00384800
.ZG39A7       AIF   (K'&CALLIB LE 0).ZG39A8     OK                      00384900
&ZCVAL        SETC '&ZCVAL CALLIB'              INCORRECT KEY USED      00385000
.ZG39A8       AIF   (K'&PATHNAME LE 0).ZG39A9   OK                      00385100
&ZCVAL        SETC '&ZCVAL PATHNAME'            INCORRECT KEY USED      00385200
.ZG39A9       AIF   (K'&DIALOG LE 0).ZG39A10    OK                      00385300
&ZCVAL        SETC '&ZCVAL DIALOG'              INCORRECT KEY USED      00385400
.ZG39A10      AIF   (K'&INTENT LE 0).ZG39A11    OK                      00385500
&ZCVAL        SETC '&ZCVAL INTENT'              INCORRECT KEY USED      00385600
.ZG39A11      AIF   (K'&PROTECT LE 0).ZG39A12   OK                      00385700
&ZCVAL        SETC '&ZCVAL PROTECT'             INCORRECT KEY USED      00385800
.ZG39A12      AIF   (K'&RENAMEL LE 0).ZG39A13   OK                      00385900
&ZCVAL        SETC '&ZCVAL RENAMEL'             INCORRECT KEY USED      00386000
.ZG39A13      AIF   (K'&AREA LE 0).ZG39A14      OK                      00386100
&ZCVAL        SETC '&ZCVAL AREA'                INCORRECT KEY USED      00386200
.ZG39A14      AIF   (K'&CURSOR LE 0).ZG39A15    OK                      00386300
&ZCVAL        SETC '&ZCVAL CURSOR'              INCORRECT KEY USED      00386400
.ZG39A15      AIF   (K'&RELOC LE 0).ZG39A16     OK                      00386500
&ZCVAL        SETC '&ZCVAL RELOC'               INCORRECT KEY USED      00386600
.ZG39A16      AIF   (K'&RECTYPE LE 0).ZG39A17   OK                      00386700
&ZCVAL        SETC '&ZCVAL RECTYPE'             INCORRECT KEY USED      00386800
.ZG39A17      AIF   (K'&OFFSET LE 0).ZG39A18    OK                      00386900
&ZCVAL        SETC '&ZCVAL OFFSET'              INCORRECT KEY USED      00387000
.ZG39A18      AIF   (K'&SYMBOL LE 0).ZG39A19    OK                      00387100
&ZCVAL        SETC '&ZCVAL SYMBOL'              INCORRECT KEY USED      00387200
.ZG39A19      AIF   (K'&TCOUNT LE 0).ZG39A20    OK                      00387300
&ZCVAL        SETC '&ZCVAL TCOUNT'              INCORRECT KEY USED      00387400
.ZG39A20      AIF   (K'&NTYPE LE 0).ZG39A21     OK                      00387500
&ZCVAL        SETC '&ZCVAL NTYPE'               INCORRECT KEY USED      00387600
.ZG39A21      AIF   (K'&CULIST LE 0).ZG39A22    OK                      00387700
&ZCVAL        SETC '&ZCVAL CULIST'              INCORRECT KEY USED      00387800
.ZG39A22      AIF   (K'&ITYPE LE 0).ZG39A23     OK                      00387900
&ZCVAL        SETC '&ZCVAL ITYPE'               INCORRECT KEY USED      00388000
.ZG39A23      AIF   (K'&DLLNAME LE 0).ZG39A24   OK                      00388100
&ZCVAL        SETC '&ZCVAL DLLNAME'             INCORRECT KEY USED      00388200
.ZG39A24      AIF   (K'&INAME LE 0).ZG39A25     OK                      00388300
&ZCVAL        SETC '&ZCVAL INAME'               INCORRECT KEY USED      00388400
.ZG39A25      AIF   (K'&INTYPE LE 0).ZG39A26    OK                      00388500
&ZCVAL        SETC '&ZCVAL INTYPE'              INCORRECT KEY USED      00388600
.ZG39A26      AIF   (K'&DDNAME LE 0).ZG39A27    OK                      00388700
&ZCVAL        SETC '&ZCVAL DDNAME'              INCORRECT KEY USED      00388800
.ZG39A27      AIF   (K'&DEPTR LE 0).ZG39A28     OK                      00388900
&ZCVAL        SETC '&ZCVAL DEPTR'               INCORRECT KEY USED      00389000
.ZG39A28      AIF   (K'&MEMBER LE 0).ZG39A29    OK                      00389100
&ZCVAL        SETC '&ZCVAL MEMBER'              INCORRECT KEY USED      00389200
.ZG39A29      AIF   (K'&DCBPTR LE 0).ZG39A30    OK                      00389300
&ZCVAL        SETC '&ZCVAL DCBPTR'              INCORRECT KEY USED      00389400
.ZG39A30      AIF   (K'&EPTOKEN LE 0).ZG39A31   OK                      00389500
&ZCVAL        SETC '&ZCVAL EPTOKEN'             INCORRECT KEY USED      00389600
.ZG39A31      AIF   (K'&ATTRIB LE 0).ZG39A32    OK                      00389700
&ZCVAL        SETC '&ZCVAL ATTRIB'              INCORRECT KEY USED      00389800
.ZG39A32      AIF   (K'&ALIASES LE 0).ZG39A33   OK                      00389900
&ZCVAL        SETC '&ZCVAL ALIASES'             INCORRECT KEY USED      00390000
.ZG39A33      AIF   (K'&IMPORTS LE 0).ZG39A34   OK                      00390100
&ZCVAL        SETC '&ZCVAL IMPORTS'             INCORRECT KEY USED      00390200
.ZG39A34      AIF   (K'&EPLOC LE 0).ZG39A35     OK                      00390300
&ZCVAL        SETC '&ZCVAL EPLOC'               INCORRECT KEY USED      00390400
.ZG39A35      AIF   (K'&IDENTIFY LE 0).ZG39A36  OK                      00390500
&ZCVAL        SETC '&ZCVAL IDENTIFY'            INCORRECT KEY USED      00390600
.ZG39A36      AIF   (K'&EXTLST LE 0).ZG39A37    OK                      00390700
&ZCVAL        SETC '&ZCVAL EXTLST'              INCORRECT KEY USED      00390800
.ZG39A37      AIF   (K'&LNAME LE 0).ZG39A38     OK                      00390900
&ZCVAL        SETC '&ZCVAL LNAME'               INCORRECT KEY USED      00391000
.ZG39A38      AIF   (K'&NEWSECT LE 0).ZG39A39   OK                      00391100
&ZCVAL        SETC '&ZCVAL NEWSECT'             INCORRECT KEY USED      00391200
.ZG39A39      AIF   (K'&ENDDATA LE 0).ZG39A40   OK                      00391300
&ZCVAL        SETC '&ZCVAL ENDDATA'             INCORRECT KEY USED      00391400
.ZG39A40      AIF   (K'&MODLIB LE 0).ZG39A41    OK                      00391500
&ZCVAL        SETC '&ZCVAL MODLIB'              INCORRECT KEY USED      00391600
.ZG39A41      AIF   (K'&SNAME LE 0).ZG39A42     OK                      00391700
&ZCVAL        SETC '&ZCVAL SNAME'               INCORRECT KEY USED      00391800
.ZG39A42      AIF   (K'&REPLACE LE 0).ZG39A43   OK                      00391900
&ZCVAL        SETC '&ZCVAL REPLACE'             INCORRECT KEY USED      00392000
.ZG39A43      AIF   (K'&LIBOPT LE 0).ZG39A44    OK                      00392100
&ZCVAL        SETC '&ZCVAL LIBOPT'              INCORRECT KEY USED      00392200
.ZG39A44      AIF   (K'&OPTION LE 0).ZG39A45    OK                      00392300
&ZCVAL        SETC '&ZCVAL OPTION'              INCORRECT KEY USED      00392400
.ZG39A45      AIF   (K'&OPTVAL LE 0).ZG39A46    OK                      00392500
&ZCVAL        SETC '&ZCVAL OPTVAL'              INCORRECT KEY USED      00392600
.ZG39A46      AIF   (K'&PARMS LE 0).ZG39A47     OK                      00392700
&ZCVAL        SETC '&ZCVAL PARMS'               INCORRECT KEY USED      00392800
.ZG39A47      AIF   (K'&FILES LE 0).ZG39A48     OK                      00392900
&ZCVAL        SETC '&ZCVAL FILES'               INCORRECT KEY USED      00393000
.ZG39A48      AIF   (K'&EXITS LE 0).ZG39A49     OK                      00393100
&ZCVAL        SETC '&ZCVAL EXITS'               INCORRECT KEY USED      00393200
.ZG39A49      AIF   (K'&OPTIONS LE 0).ZG39A50   OK                      00393300
&ZCVAL        SETC '&ZCVAL OPTIONS'             INCORRECT KEY USED      00393400
.ZG39A50      AIF   (K'&ENVARS LE 0).ZG39A51    OK                      00393500
&ZCVAL        SETC '&ZCVAL ENVARS'              INCORRECT KEY USED      00393600
.ZG39A51      AIF   (K'&ORIGIN LE 0).ZG39A52    OK                      00393700
&ZCVAL        SETC '&ZCVAL ORIGIN'              INCORRECT KEY USED      00393800
.ZG39A52      AIF   (K'&REGION LE 0).ZG39A53    OK                      00393900
&ZCVAL        SETC '&ZCVAL REGION'              INCORRECT KEY USED      00394000
.ZG39A53      AIF   (K'&ZCVAL LE 0).ZG39A54     OK                      00394100
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               00394200
              AIF  (K'&ZCVAL LE 160).ZG39A54A                           00394300
&ZCVAL        SETC '&ZCVAL'(1,160)                                      00394400
&ZCVAL        SETC '&ZCVAL....'                                         00394500
.ZG39A54A     ANOP                                                      00394600
&ZMS          SETC  '"FUNC'                                             00394700
&ZMS          SETC  '&ZMS.=&FUNC"'                                      00394800
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                00394900
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                00395000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00395100
.ZG39A54      ANOP  ,                                                   00395200
.*----------------------------------------------------------------***   00395300
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00395400
              AIF   (N'&WORKMOD LE 1).ZG41A     CK NUM                  00395500
&ZMS          SETC  '"WORKMOD='                                         00395600
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    00395700
&ZMS          SETC  '&ZMS "WORKMOD"'                                    00395800
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00395900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00396000
.ZG41A        ANOP  ,                                                   00396100
.*-------------------------------------------------------------------   00396200
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00396300
&ZXWORKMOD    SETC  'INPUT'     SET IN/OUTPUT                           00396400
&XWORKMOD     SETC  '&WORKMOD(1)'               SET XVARIABLE           00396500
              AIF   (N'&WORKMOD GT 1).ZG41B     MULTI                   00396600
&XWORKMOD     SETC  '&WORKMOD'  SET XVARIABLE                           00396700
.ZG41B        AIF   (K'&WORKMOD(1) GT 0).ZG41C                          00396800
&ZXWORKMOD    SETC  ''          RESET IN/OUTPUT                         00396900
&ZMS          SETC  ' '                                                 00397000
&ZMS          SETC  '&ZMS "WORKMOD" KEY AND ITS'                        00397100
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00397200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00397300
.ZG41C        ANOP  ,                                                   00397400
.*-------------------------------------------------------------------   00397500
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00397600
              AIF   (K'&ZXWORKMOD LE 0).ZG41R   NOT I/O                 00397700
              AIF   ('&XWORKMOD'(1,1) NE '(').ZG41R                     00397800
&ZCGPR        SETC  '&XWORKMOD'(2,K'&XWORKMOD-2)                        00397900
              AIF   ('&ZCGPR'(1,1) NE '0').ZG41P                        00398000
              AIF   (K'&ZCGPR GT 2).ZG41Q                               00398100
              AIF   ('&ZCGPR' EQ '0').ZG41Q                             00398200
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00398300
              AIF   (T'&ZCGPR NE 'N').ZG41Q     INVALID REG NAME        00398400
.ZG41P        ANOP  ,                                                   00398500
              AIF   (T'&ZCGPR NE 'N').ZG41R     NON NUMERIC             00398600
              AIF   ('&ZCGPR' LT '2').ZG41Q                             00398700
              AIF   ('&ZCGPR' LE '12').ZG41R                            00398800
.ZG41Q        ANOP  ,                                                   00398900
&ZMS          SETC  '"WORKMOD='                                         00399000
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    00399100
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00399200
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00399300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00399400
.ZG41R        ANOP  ,                                                   00399500
.*----------------------------------------------------------------***   00399600
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00399700
              AIF   (N'&OLDNAME LE 1).ZG44A     CK NUM                  00399800
&ZMS          SETC  '"OLDNAME='                                         00399900
&ZMS          SETC  '&ZMS.&OLDNAME"'                                    00400000
&ZMS          SETC  '&ZMS "OLDNAME"'                                    00400100
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00400200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00400300
.ZG44A        ANOP  ,                                                   00400400
.*-------------------------------------------------------------------   00400500
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00400600
&ZXOLDNAME    SETC  'INPUT'     SET IN/OUTPUT                           00400700
&XOLDNAME     SETC  '&OLDNAME(1)'               SET XVARIABLE           00400800
              AIF   (N'&OLDNAME GT 1).ZG44B     MULTI                   00400900
&XOLDNAME     SETC  '&OLDNAME'  SET XVARIABLE                           00401000
.ZG44B        AIF   (K'&OLDNAME(1) GT 0).ZG44C                          00401100
&ZXOLDNAME    SETC  ''          RESET IN/OUTPUT                         00401200
&ZMS          SETC  ' '                                                 00401300
&ZMS          SETC  '&ZMS "OLDNAME" KEY AND ITS'                        00401400
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00401500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00401600
.ZG44C        ANOP  ,                                                   00401700
.*-------------------------------------------------------------------   00401800
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00401900
              AIF   (K'&ZXOLDNAME LE 0).ZG44R   NOT I/O                 00402000
              AIF   ('&XOLDNAME'(1,1) NE '(').ZG44R                     00402100
&ZCGPR        SETC  '&XOLDNAME'(2,K'&XOLDNAME-2)                        00402200
              AIF   ('&ZCGPR'(1,1) NE '0').ZG44P                        00402300
              AIF   (K'&ZCGPR GT 2).ZG44Q                               00402400
              AIF   ('&ZCGPR' EQ '0').ZG44Q                             00402500
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00402600
              AIF   (T'&ZCGPR NE 'N').ZG44Q     INVALID REG NAME        00402700
.ZG44P        ANOP  ,                                                   00402800
              AIF   (T'&ZCGPR NE 'N').ZG44R     NON NUMERIC             00402900
              AIF   ('&ZCGPR' LT '2').ZG44Q                             00403000
              AIF   ('&ZCGPR' LE '12').ZG44R                            00403100
.ZG44Q        ANOP  ,                                                   00403200
&ZMS          SETC  '"OLDNAME='                                         00403300
&ZMS          SETC  '&ZMS.&OLDNAME"'                                    00403400
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00403500
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00403600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00403700
.ZG44R        ANOP  ,                                                   00403800
.*------------------------------------------------------------------    00403900
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00404000
&XATYPE       SETC  ''          INITIALIZE XVARIABLE                    00404100
.*-------------------------------------------------------------------   00404200
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00404300
.ZG48         ANOP  ,                                                   00404400
              AIF   (K'&ATYPE(1) LE 0).ZG48A                            00404500
&ZTLC         SETC 'C'                                                  00404600
              AIF   ('&ATYPE(1)' NE '&ZTLC').ZG52                       00404700
&XATYPE       SETC  'C'         SET KEYWORD                             00404800
              AIF   (N'&ATYPE LE 1).ZG48A       CK NUM                  00404900
&ZMS          SETC  '"ATYPE='                                           00405000
&ZMS          SETC  '&ZMS.&ATYPE"'                                      00405100
&ZMS          SETC  '&ZMS "ATYPE"'                                      00405200
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00405300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00405400
.ZG48A        ANOP  ,                                                   00405500
.*------------------------------------------------------------------    00405600
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00405700
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             00405800
.ZG48A0       AIF   (K'&COUNT LE 0).ZG48A1      OK                      00405900
&ZCVAL        SETC '&ZCVAL COUNT'               INCORRECT KEY USED      00406000
.ZG48A1       AIF   (K'&ZCVAL LE 0).ZG48A2      OK                      00406100
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               00406200
&ZMS          SETC  '"ATYPE'                                            00406300
&ZMS          SETC  '&ZMS.=&ATYPE"'                                     00406400
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                00406500
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                00406600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00406700
.ZG48A2       ANOP  ,                                                   00406800
.*----------------------------------------------------------------***   00406900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00407000
              AIF   (N'&NEWNAME LE 1).ZG50A     CK NUM                  00407100
&ZMS          SETC  '"NEWNAME='                                         00407200
&ZMS          SETC  '&ZMS.&NEWNAME"'                                    00407300
&ZMS          SETC  '&ZMS "NEWNAME"'                                    00407400
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00407500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00407600
.ZG50A        ANOP  ,                                                   00407700
.*-------------------------------------------------------------------   00407800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00407900
&ZXNEWNAME    SETC  'INPUT'     SET IN/OUTPUT                           00408000
&XNEWNAME     SETC  '&NEWNAME(1)'               SET XVARIABLE           00408100
              AIF   (N'&NEWNAME GT 1).ZG50B     MULTI                   00408200
&XNEWNAME     SETC  '&NEWNAME'  SET XVARIABLE                           00408300
.ZG50B        AIF   (K'&NEWNAME(1) GT 0).ZG50C                          00408400
&ZXNEWNAME    SETC  ''          RESET IN/OUTPUT                         00408500
&ZMS          SETC  ' '                                                 00408600
&ZMS          SETC  '&ZMS "NEWNAME" KEY AND ITS'                        00408700
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00408800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00408900
.ZG50C        ANOP  ,                                                   00409000
.*-------------------------------------------------------------------   00409100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00409200
              AIF   (K'&ZXNEWNAME LE 0).ZG50R   NOT I/O                 00409300
              AIF   ('&XNEWNAME'(1,1) NE '(').ZG50R                     00409400
&ZCGPR        SETC  '&XNEWNAME'(2,K'&XNEWNAME-2)                        00409500
              AIF   ('&ZCGPR'(1,1) NE '0').ZG50P                        00409600
              AIF   (K'&ZCGPR GT 2).ZG50Q                               00409700
              AIF   ('&ZCGPR' EQ '0').ZG50Q                             00409800
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00409900
              AIF   (T'&ZCGPR NE 'N').ZG50Q     INVALID REG NAME        00410000
.ZG50P        ANOP  ,                                                   00410100
              AIF   (T'&ZCGPR NE 'N').ZG50R     NON NUMERIC             00410200
              AIF   ('&ZCGPR' LT '2').ZG50Q                             00410300
              AIF   ('&ZCGPR' LE '12').ZG50R                            00410400
.ZG50Q        ANOP  ,                                                   00410500
&ZMS          SETC  '"NEWNAME='                                         00410600
&ZMS          SETC  '&ZMS.&NEWNAME"'                                    00410700
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00410800
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00410900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00411000
.ZG50R        ANOP  ,                                                   00411100
.*-------------------------------------------------------------------   00411200
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00411300
.ZG52         ANOP  ,                                                   00411400
&ZTLC         SETC 'R'                                                  00411500
              AIF   ('&ATYPE(1)' NE '&ZTLC').ZG56                       00411600
&XATYPE       SETC  'R'         SET KEYWORD                             00411700
              AIF   (N'&ATYPE LE 1).ZG52A       CK NUM                  00411800
&ZMS          SETC  '"ATYPE='                                           00411900
&ZMS          SETC  '&ZMS.&ATYPE"'                                      00412000
&ZMS          SETC  '&ZMS "ATYPE"'                                      00412100
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00412200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00412300
.ZG52A        ANOP  ,                                                   00412400
.*------------------------------------------------------------------    00412500
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00412600
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             00412700
.ZG52A0       AIF   (K'&COUNT LE 0).ZG52A1      OK                      00412800
&ZCVAL        SETC '&ZCVAL COUNT'               INCORRECT KEY USED      00412900
.ZG52A1       AIF   (K'&ZCVAL LE 0).ZG52A2      OK                      00413000
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               00413100
&ZMS          SETC  '"ATYPE'                                            00413200
&ZMS          SETC  '&ZMS.=&ATYPE"'                                     00413300
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                00413400
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                00413500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00413600
.ZG52A2       ANOP  ,                                                   00413700
.*----------------------------------------------------------------***   00413800
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00413900
              AIF   (N'&NEWNAME LE 1).ZG54A     CK NUM                  00414000
&ZMS          SETC  '"NEWNAME='                                         00414100
&ZMS          SETC  '&ZMS.&NEWNAME"'                                    00414200
&ZMS          SETC  '&ZMS "NEWNAME"'                                    00414300
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00414400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00414500
.ZG54A        ANOP  ,                                                   00414600
.*-------------------------------------------------------------------   00414700
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00414800
&ZXNEWNAME    SETC  'INPUT'     SET IN/OUTPUT                           00414900
&XNEWNAME     SETC  '&NEWNAME(1)'               SET XVARIABLE           00415000
              AIF   (N'&NEWNAME GT 1).ZG54B     MULTI                   00415100
&XNEWNAME     SETC  '&NEWNAME'  SET XVARIABLE                           00415200
.ZG54B        AIF   (K'&NEWNAME(1) GT 0).ZG54C                          00415300
&ZXNEWNAME    SETC  ''          RESET IN/OUTPUT                         00415400
&ZMS          SETC  ' '                                                 00415500
&ZMS          SETC  '&ZMS "NEWNAME" KEY AND ITS'                        00415600
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00415700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00415800
.ZG54C        ANOP  ,                                                   00415900
.*-------------------------------------------------------------------   00416000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00416100
              AIF   (K'&ZXNEWNAME LE 0).ZG54R   NOT I/O                 00416200
              AIF   ('&XNEWNAME'(1,1) NE '(').ZG54R                     00416300
&ZCGPR        SETC  '&XNEWNAME'(2,K'&XNEWNAME-2)                        00416400
              AIF   ('&ZCGPR'(1,1) NE '0').ZG54P                        00416500
              AIF   (K'&ZCGPR GT 2).ZG54Q                               00416600
              AIF   ('&ZCGPR' EQ '0').ZG54Q                             00416700
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00416800
              AIF   (T'&ZCGPR NE 'N').ZG54Q     INVALID REG NAME        00416900
.ZG54P        ANOP  ,                                                   00417000
              AIF   (T'&ZCGPR NE 'N').ZG54R     NON NUMERIC             00417100
              AIF   ('&ZCGPR' LT '2').ZG54Q                             00417200
              AIF   ('&ZCGPR' LE '12').ZG54R                            00417300
.ZG54Q        ANOP  ,                                                   00417400
&ZMS          SETC  '"NEWNAME='                                         00417500
&ZMS          SETC  '&ZMS.&NEWNAME"'                                    00417600
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00417700
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00417800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00417900
.ZG54R        ANOP  ,                                                   00418000
.*-------------------------------------------------------------------   00418100
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00418200
.ZG56         ANOP  ,                                                   00418300
&ZTLC         SETC 'D'                                                  00418400
              AIF   ('&ATYPE(1)' NE '&ZTLC').ZG57                       00418500
&XATYPE       SETC  'D'         SET KEYWORD                             00418600
              AIF   (N'&ATYPE LE 1).ZG56A       CK NUM                  00418700
&ZMS          SETC  '"ATYPE='                                           00418800
&ZMS          SETC  '&ZMS.&ATYPE"'                                      00418900
&ZMS          SETC  '&ZMS "ATYPE"'                                      00419000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00419100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00419200
.ZG56A        ANOP  ,                                                   00419300
.*------------------------------------------------------------------    00419400
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00419500
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             00419600
.ZG56A0       AIF   (K'&NEWNAME LE 0).ZG56A1    OK                      00419700
&ZCVAL        SETC '&ZCVAL NEWNAME'             INCORRECT KEY USED      00419800
.ZG56A1       AIF   (K'&COUNT LE 0).ZG56A2      OK                      00419900
&ZCVAL        SETC '&ZCVAL COUNT'               INCORRECT KEY USED      00420000
.ZG56A2       AIF   (K'&ZCVAL LE 0).ZG56A3      OK                      00420100
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               00420200
&ZMS          SETC  '"ATYPE'                                            00420300
&ZMS          SETC  '&ZMS.=&ATYPE"'                                     00420400
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                00420500
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                00420600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00420700
.ZG56A3       ANOP  ,                                                   00420800
.*-------------------------------------------------------------------   00420900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00421000
.ZG57         ANOP  ,                                                   00421100
&ZTLC         SETC 'E'                                                  00421200
              AIF   ('&ATYPE(1)' NE '&ZTLC').ZG61                       00421300
&XATYPE       SETC  'E'         SET KEYWORD                             00421400
              AIF   (N'&ATYPE LE 1).ZG57A       CK NUM                  00421500
&ZMS          SETC  '"ATYPE='                                           00421600
&ZMS          SETC  '&ZMS.&ATYPE"'                                      00421700
&ZMS          SETC  '&ZMS "ATYPE"'                                      00421800
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00421900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00422000
.ZG57A        ANOP  ,                                                   00422100
.*------------------------------------------------------------------    00422200
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00422300
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             00422400
.ZG57A0       AIF   (K'&NEWNAME LE 0).ZG57A1    OK                      00422500
&ZCVAL        SETC '&ZCVAL NEWNAME'             INCORRECT KEY USED      00422600
.ZG57A1       AIF   (K'&ZCVAL LE 0).ZG57A2      OK                      00422700
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               00422800
&ZMS          SETC  '"ATYPE'                                            00422900
&ZMS          SETC  '&ZMS.=&ATYPE"'                                     00423000
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                00423100
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                00423200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00423300
.ZG57A2       ANOP  ,                                                   00423400
.*----------------------------------------------------------------***   00423500
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00423600
              AIF   (N'&COUNT LE 1).ZG59A       CK NUM                  00423700
&ZMS          SETC  '"COUNT='                                           00423800
&ZMS          SETC  '&ZMS.&COUNT"'                                      00423900
&ZMS          SETC  '&ZMS "COUNT"'                                      00424000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00424100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00424200
.ZG59A        ANOP  ,                                                   00424300
.*-------------------------------------------------------------------   00424400
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00424500
&ZXCOUNT      SETC  'OUTPUT'    SET IN/OUTPUT                           00424600
&XCOUNT       SETC  '&COUNT(1)'                 SET XVARIABLE           00424700
              AIF   (N'&COUNT GT 1).ZG59B       MULTI                   00424800
&XCOUNT       SETC  '&COUNT'    SET XVARIABLE                           00424900
.ZG59B        AIF   (K'&COUNT(1) GT 0).ZG59C                            00425000
&ZXCOUNT      SETC  ''          RESET IN/OUTPUT                         00425100
&ZMS          SETC  ' '                                                 00425200
&ZMS          SETC  '&ZMS "COUNT" KEY AND ITS'                          00425300
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00425400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00425500
.ZG59C        ANOP  ,                                                   00425600
.*-------------------------------------------------------------------   00425700
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00425800
              AIF   (K'&ZXCOUNT LE 0).ZG59R     NOT I/O                 00425900
              AIF   ('&XCOUNT'(1,1) NE '(').ZG59R                       00426000
&ZCGPR        SETC  '&XCOUNT'(2,K'&XCOUNT-2)                            00426100
              AIF   ('&ZCGPR'(1,1) NE '0').ZG59P                        00426200
              AIF   (K'&ZCGPR GT 2).ZG59Q                               00426300
              AIF   ('&ZCGPR' EQ '0').ZG59Q                             00426400
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00426500
              AIF   (T'&ZCGPR NE 'N').ZG59Q     INVALID REG NAME        00426600
.ZG59P        ANOP  ,                                                   00426700
              AIF   (T'&ZCGPR NE 'N').ZG59R     NON NUMERIC             00426800
              AIF   ('&ZCGPR' LT '2').ZG59Q                             00426900
              AIF   ('&ZCGPR' LE '12').ZG59R                            00427000
.ZG59Q        ANOP  ,                                                   00427100
&ZMS          SETC  '"COUNT='                                           00427200
&ZMS          SETC  '&ZMS.&COUNT"'                                      00427300
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00427400
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00427500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00427600
.ZG59R        ANOP  ,                                                   00427700
.*------------------------------------------------------------------    00427800
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00427900
.ZG61         ANOP  ,                                                   00428000
&ZXATYPE      SETC  'INPUT'     SET IN/OUTPUT                           00428100
              AIF   (K'&XATYPE GT 0).ZG61E      VALID ARG               00428200
              AIF   (T'&ATYPE EQ 'O').ZG61D     OMITTED                 00428300
&ZASYSLNDX    SETA  0                                                   00428400
.ZG61A        ANOP  ,           POSITIONAL MACRO KEY                    00428500
&ZASYSLNDX    SETA  &ZASYSLNDX+1                                        00428600
              AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG61C                    00428700
&ZTLC         SETC 'ATYPE'                                              00428800
              AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG61A           00428900
.ZG61B        ANOP  ,                                                   00429000
&ZXATYPE      SETC  ''          RESET IN/OUTPUT                         00429100
&ZMS          SETC  'THE "ATYPE" KEY'                                   00429200
&ZMS          SETC  '&ZMS MUST CONTAIN ONE'                             00429300
              MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                    00429400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00429500
              AGO   .ZG61E                                              00429600
.ZG61C        ANOP  ,                                                   00429700
&ZXATYPE      SETC  ''          RESET IN/OUTPUT                         00429800
&ZMS          SETC  '"ATYPE='                                           00429900
&ZMS          SETC  '&ZMS.&ATYPE"'                                      00430000
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           00430100
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00430200
&ZMS          SETC  '&ZMS "C",'                                         00430300
&ZMS          SETC  '&ZMS "R",'                                         00430400
&ZMS          SETC  '&ZMS "D",'                                         00430500
&ZMS          SETC  '&ZMS OR "E".'                                      00430600
              MNOTE 8,' &ZMS '                                          00430700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00430800
              AGO   .ZG61E                                              00430900
.ZG61D        ANOP  ,                                                   00431000
&XATYPE       SETC  'C'         SET DEFAULT KEYWORD                     00431100
.ZG61E        ANOP  ,                                                   00431200
.*------------------------------------------------------------------    00431300
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00431400
              AIF   (K'&ATYPE(1) GT 0).ZG61F    PARM                    00431500
&XATYPE       SETC  ''          ENSURE NULL KEYWORD                     00431600
&ZXATYPE      SETC  ''          RESET IN/OUTPUT                         00431700
&ZMS          SETC  'THE'                                               00431800
&ZMS          SETC  '&ZMS "ATYPE" KEY AND ITS'                          00431900
&ZMS          SETC  '&ZMS ARGUMENT ARE REQUIRED.'                       00432000
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00432100
&ZMS          SETC  '&ZMS "C",'                                         00432200
&ZMS          SETC  '&ZMS "R",'                                         00432300
&ZMS          SETC  '&ZMS "D",'                                         00432400
&ZMS          SETC  '&ZMS OR "E".'                                      00432500
              MNOTE 8,' &ZMS '                                          00432600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00432700
.ZG61F        ANOP  ,                                                   00432800
.*----------------------------------------------------------------***   00432900
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00433000
              AIF   (N'&MODE LE 1).ZG63A        CK NUM                  00433100
&ZMS          SETC  '"MODE='                                            00433200
&ZMS          SETC  '&ZMS.&MODE"'                                       00433300
&ZMS          SETC  '&ZMS "MODE"'                                       00433400
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00433500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00433600
.ZG63A        ANOP  ,                                                   00433700
.*-------------------------------------------------------------------   00433800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00433900
&XMODE        SETC  ''          INITIALIZE XVARIABLE                    00434000
.ZG64A   AIF   ('&MODE(1)' NE 'N').ZG65A                                00434100
&XMODE        SETC  'N'         SET KEYWORD                             00434200
.*-------------------------------------------------------------------   00434300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00434400
.ZG65A   AIF   ('&MODE(1)' NE 'I').ZG66A                                00434500
&XMODE        SETC  'I'         SET KEYWORD                             00434600
.*-------------------------------------------------------------------   00434700
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00434800
.ZG66A        AIF   (K'&XMODE GT 0).ZG66C       KEYWORD                 00434900
              AIF   (K'&MODE(1) LE 0).ZG66B                             00435000
&ZMS          SETC  '"MODE='                                            00435100
&ZMS          SETC  '&ZMS.&MODE"'                                       00435200
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           00435300
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00435400
&ZMS          SETC  '&ZMS "N"'                                          00435500
&ZMS          SETC  '&ZMS OR "I".'                                      00435600
              MNOTE 8,' &ZMS '                                          00435700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00435800
.ZG66B        ANOP  ,                                                   00435900
&XMODE        SETC  'N'         SET DEFAULT KEYWORD                     00436000
.ZG66C        ANOP  ,                                                   00436100
&ZXMODE       SETC  'INPUT'     SET IN/OUTPUT                           00436200
.*----------------------------------------------------------------***   00436300
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00436400
              AIF   (N'&CLASS LE 1).ZG68A       CK NUM                  00436500
&ZMS          SETC  '"CLASS='                                           00436600
&ZMS          SETC  '&ZMS.&CLASS"'                                      00436700
&ZMS          SETC  '&ZMS "CLASS"'                                      00436800
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00436900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00437000
.ZG68A        ANOP  ,                                                   00437100
.*-------------------------------------------------------------------   00437200
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00437300
&ZXCLASS      SETC  'INPUT'     SET IN/OUTPUT                           00437400
&XCLASS       SETC  '0'                                                 00437500
              AIF   (K'&CLASS(1) LE 0).ZG68B    PARM                    00437600
&XCLASS       SETC  '&CLASS(1)'                 SET XVARIABLE           00437700
              AIF   (N'&CLASS GT 1).ZG68B       MULTI                   00437800
&XCLASS       SETC  '&CLASS'    SET XVARIABLE                           00437900
.ZG68B        ANOP  ,                                                   00438000
.*-------------------------------------------------------------------   00438100
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00438200
              AIF   (K'&ZXCLASS LE 0).ZG68R     NOT I/O                 00438300
         AIF   ('&XCLASS' EQ '0').ZG68R                                 00438400
              AIF   ('&XCLASS'(1,1) NE '(').ZG68R                       00438500
&ZCGPR        SETC  '&XCLASS'(2,K'&XCLASS-2)                            00438600
              AIF   ('&ZCGPR'(1,1) NE '0').ZG68P                        00438700
              AIF   (K'&ZCGPR GT 2).ZG68Q                               00438800
              AIF   ('&ZCGPR' EQ '0').ZG68Q                             00438900
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00439000
              AIF   (T'&ZCGPR NE 'N').ZG68Q     INVALID REG NAME        00439100
.ZG68P        ANOP  ,                                                   00439200
              AIF   (T'&ZCGPR NE 'N').ZG68R     NON NUMERIC             00439300
              AIF   ('&ZCGPR' LT '2').ZG68Q                             00439400
              AIF   ('&ZCGPR' LE '12').ZG68R                            00439500
.ZG68Q        ANOP  ,                                                   00439600
&ZMS          SETC  '"CLASS='                                           00439700
&ZMS          SETC  '&ZMS.&CLASS"'                                      00439800
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00439900
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00440000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00440100
.ZG68R        ANOP  ,                                                   00440200
.*-------------------------------------------------------------------   00440300
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00440400
.ZG70         ANOP  ,                                                   00440500
&ZTLC         SETC 'AUTOC'                                              00440600
              AIF   ('&FUNC(1)' NE '&ZTLC').ZG78                        00440700
&XFUNC        SETC  'AUTOC'     SET KEYWORD                             00440800
              AIF   (N'&FUNC LE 1).ZG70A        CK NUM                  00440900
&ZMS          SETC  '"FUNC='                                            00441000
&ZMS          SETC  '&ZMS.&FUNC"'                                       00441100
&ZMS          SETC  '&ZMS "FUNC"'                                       00441200
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00441300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00441400
.ZG70A        ANOP  ,                                                   00441500
.*------------------------------------------------------------------    00441600
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00441700
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             00441800
.ZG70A0       AIF   (K'&ANAME LE 0).ZG70A1      OK                      00441900
&ZCVAL        SETC '&ZCVAL ANAME'               INCORRECT KEY USED      00442000
.ZG70A1       AIF   (K'&ENAME LE 0).ZG70A2      OK                      00442100
&ZCVAL        SETC '&ZCVAL ENAME'               INCORRECT KEY USED      00442200
.ZG70A2       AIF   (K'&AMODE LE 0).ZG70A3      OK                      00442300
&ZCVAL        SETC '&ZCVAL AMODE'               INCORRECT KEY USED      00442400
.ZG70A3       AIF   (K'&ATYPE LE 0).ZG70A4      OK                      00442500
&ZCVAL        SETC '&ZCVAL ATYPE'               INCORRECT KEY USED      00442600
.ZG70A4       AIF   (K'&DNAME LE 0).ZG70A5      OK                      00442700
&ZCVAL        SETC '&ZCVAL DNAME'               INCORRECT KEY USED      00442800
.ZG70A5       AIF   (K'&SECTION LE 0).ZG70A6    OK                      00442900
&ZCVAL        SETC '&ZCVAL SECTION'             INCORRECT KEY USED      00443000
.ZG70A6       AIF   (K'&BDY LE 0).ZG70A7        OK                      00443100
&ZCVAL        SETC '&ZCVAL BDY'                 INCORRECT KEY USED      00443200
.ZG70A7       AIF   (K'&CLASSL LE 0).ZG70A8     OK                      00443300
&ZCVAL        SETC '&ZCVAL CLASSL'              INCORRECT KEY USED      00443400
.ZG70A8       AIF   (K'&OLDNAME LE 0).ZG70A9    OK                      00443500
&ZCVAL        SETC '&ZCVAL OLDNAME'             INCORRECT KEY USED      00443600
.ZG70A9       AIF   (K'&NEWNAME LE 0).ZG70A10   OK                      00443700
&ZCVAL        SETC '&ZCVAL NEWNAME'             INCORRECT KEY USED      00443800
.ZG70A10      AIF   (K'&COUNT LE 0).ZG70A11     OK                      00443900
&ZCVAL        SETC '&ZCVAL COUNT'               INCORRECT KEY USED      00444000
.ZG70A11      AIF   (K'&MODE LE 0).ZG70A12      OK                      00444100
&ZCVAL        SETC '&ZCVAL MODE'                INCORRECT KEY USED      00444200
.ZG70A12      AIF   (K'&CLASS LE 0).ZG70A13     OK                      00444300
&ZCVAL        SETC '&ZCVAL CLASS'               INCORRECT KEY USED      00444400
.ZG70A13      AIF   (K'&DIALOG LE 0).ZG70A14    OK                      00444500
&ZCVAL        SETC '&ZCVAL DIALOG'              INCORRECT KEY USED      00444600
.ZG70A14      AIF   (K'&INTENT LE 0).ZG70A15    OK                      00444700
&ZCVAL        SETC '&ZCVAL INTENT'              INCORRECT KEY USED      00444800
.ZG70A15      AIF   (K'&PROTECT LE 0).ZG70A16   OK                      00444900
&ZCVAL        SETC '&ZCVAL PROTECT'             INCORRECT KEY USED      00445000
.ZG70A16      AIF   (K'&RENAMEL LE 0).ZG70A17   OK                      00445100
&ZCVAL        SETC '&ZCVAL RENAMEL'             INCORRECT KEY USED      00445200
.ZG70A17      AIF   (K'&AREA LE 0).ZG70A18      OK                      00445300
&ZCVAL        SETC '&ZCVAL AREA'                INCORRECT KEY USED      00445400
.ZG70A18      AIF   (K'&CURSOR LE 0).ZG70A19    OK                      00445500
&ZCVAL        SETC '&ZCVAL CURSOR'              INCORRECT KEY USED      00445600
.ZG70A19      AIF   (K'&RELOC LE 0).ZG70A20     OK                      00445700
&ZCVAL        SETC '&ZCVAL RELOC'               INCORRECT KEY USED      00445800
.ZG70A20      AIF   (K'&RECTYPE LE 0).ZG70A21   OK                      00445900
&ZCVAL        SETC '&ZCVAL RECTYPE'             INCORRECT KEY USED      00446000
.ZG70A21      AIF   (K'&OFFSET LE 0).ZG70A22    OK                      00446100
&ZCVAL        SETC '&ZCVAL OFFSET'              INCORRECT KEY USED      00446200
.ZG70A22      AIF   (K'&SYMBOL LE 0).ZG70A23    OK                      00446300
&ZCVAL        SETC '&ZCVAL SYMBOL'              INCORRECT KEY USED      00446400
.ZG70A23      AIF   (K'&TCOUNT LE 0).ZG70A24    OK                      00446500
&ZCVAL        SETC '&ZCVAL TCOUNT'              INCORRECT KEY USED      00446600
.ZG70A24      AIF   (K'&NTYPE LE 0).ZG70A25     OK                      00446700
&ZCVAL        SETC '&ZCVAL NTYPE'               INCORRECT KEY USED      00446800
.ZG70A25      AIF   (K'&CULIST LE 0).ZG70A26    OK                      00446900
&ZCVAL        SETC '&ZCVAL CULIST'              INCORRECT KEY USED      00447000
.ZG70A26      AIF   (K'&ITYPE LE 0).ZG70A27     OK                      00447100
&ZCVAL        SETC '&ZCVAL ITYPE'               INCORRECT KEY USED      00447200
.ZG70A27      AIF   (K'&DLLNAME LE 0).ZG70A28   OK                      00447300
&ZCVAL        SETC '&ZCVAL DLLNAME'             INCORRECT KEY USED      00447400
.ZG70A28      AIF   (K'&INAME LE 0).ZG70A29     OK                      00447500
&ZCVAL        SETC '&ZCVAL INAME'               INCORRECT KEY USED      00447600
.ZG70A29      AIF   (K'&INTYPE LE 0).ZG70A30    OK                      00447700
&ZCVAL        SETC '&ZCVAL INTYPE'              INCORRECT KEY USED      00447800
.ZG70A30      AIF   (K'&DDNAME LE 0).ZG70A31    OK                      00447900
&ZCVAL        SETC '&ZCVAL DDNAME'              INCORRECT KEY USED      00448000
.ZG70A31      AIF   (K'&DEPTR LE 0).ZG70A32     OK                      00448100
&ZCVAL        SETC '&ZCVAL DEPTR'               INCORRECT KEY USED      00448200
.ZG70A32      AIF   (K'&MEMBER LE 0).ZG70A33    OK                      00448300
&ZCVAL        SETC '&ZCVAL MEMBER'              INCORRECT KEY USED      00448400
.ZG70A33      AIF   (K'&DCBPTR LE 0).ZG70A34    OK                      00448500
&ZCVAL        SETC '&ZCVAL DCBPTR'              INCORRECT KEY USED      00448600
.ZG70A34      AIF   (K'&EPTOKEN LE 0).ZG70A35   OK                      00448700
&ZCVAL        SETC '&ZCVAL EPTOKEN'             INCORRECT KEY USED      00448800
.ZG70A35      AIF   (K'&ATTRIB LE 0).ZG70A36    OK                      00448900
&ZCVAL        SETC '&ZCVAL ATTRIB'              INCORRECT KEY USED      00449000
.ZG70A36      AIF   (K'&ALIASES LE 0).ZG70A37   OK                      00449100
&ZCVAL        SETC '&ZCVAL ALIASES'             INCORRECT KEY USED      00449200
.ZG70A37      AIF   (K'&IMPORTS LE 0).ZG70A38   OK                      00449300
&ZCVAL        SETC '&ZCVAL IMPORTS'             INCORRECT KEY USED      00449400
.ZG70A38      AIF   (K'&EPLOC LE 0).ZG70A39     OK                      00449500
&ZCVAL        SETC '&ZCVAL EPLOC'               INCORRECT KEY USED      00449600
.ZG70A39      AIF   (K'&IDENTIFY LE 0).ZG70A40  OK                      00449700
&ZCVAL        SETC '&ZCVAL IDENTIFY'            INCORRECT KEY USED      00449800
.ZG70A40      AIF   (K'&EXTLST LE 0).ZG70A41    OK                      00449900
&ZCVAL        SETC '&ZCVAL EXTLST'              INCORRECT KEY USED      00450000
.ZG70A41      AIF   (K'&LNAME LE 0).ZG70A42     OK                      00450100
&ZCVAL        SETC '&ZCVAL LNAME'               INCORRECT KEY USED      00450200
.ZG70A42      AIF   (K'&NEWSECT LE 0).ZG70A43   OK                      00450300
&ZCVAL        SETC '&ZCVAL NEWSECT'             INCORRECT KEY USED      00450400
.ZG70A43      AIF   (K'&ENDDATA LE 0).ZG70A44   OK                      00450500
&ZCVAL        SETC '&ZCVAL ENDDATA'             INCORRECT KEY USED      00450600
.ZG70A44      AIF   (K'&MODLIB LE 0).ZG70A45    OK                      00450700
&ZCVAL        SETC '&ZCVAL MODLIB'              INCORRECT KEY USED      00450800
.ZG70A45      AIF   (K'&SNAME LE 0).ZG70A46     OK                      00450900
&ZCVAL        SETC '&ZCVAL SNAME'               INCORRECT KEY USED      00451000
.ZG70A46      AIF   (K'&REPLACE LE 0).ZG70A47   OK                      00451100
&ZCVAL        SETC '&ZCVAL REPLACE'             INCORRECT KEY USED      00451200
.ZG70A47      AIF   (K'&LIBOPT LE 0).ZG70A48    OK                      00451300
&ZCVAL        SETC '&ZCVAL LIBOPT'              INCORRECT KEY USED      00451400
.ZG70A48      AIF   (K'&OPTION LE 0).ZG70A49    OK                      00451500
&ZCVAL        SETC '&ZCVAL OPTION'              INCORRECT KEY USED      00451600
.ZG70A49      AIF   (K'&OPTVAL LE 0).ZG70A50    OK                      00451700
&ZCVAL        SETC '&ZCVAL OPTVAL'              INCORRECT KEY USED      00451800
.ZG70A50      AIF   (K'&PARMS LE 0).ZG70A51     OK                      00451900
&ZCVAL        SETC '&ZCVAL PARMS'               INCORRECT KEY USED      00452000
.ZG70A51      AIF   (K'&FILES LE 0).ZG70A52     OK                      00452100
&ZCVAL        SETC '&ZCVAL FILES'               INCORRECT KEY USED      00452200
.ZG70A52      AIF   (K'&EXITS LE 0).ZG70A53     OK                      00452300
&ZCVAL        SETC '&ZCVAL EXITS'               INCORRECT KEY USED      00452400
.ZG70A53      AIF   (K'&OPTIONS LE 0).ZG70A54   OK                      00452500
&ZCVAL        SETC '&ZCVAL OPTIONS'             INCORRECT KEY USED      00452600
.ZG70A54      AIF   (K'&ENVARS LE 0).ZG70A55    OK                      00452700
&ZCVAL        SETC '&ZCVAL ENVARS'              INCORRECT KEY USED      00452800
.ZG70A55      AIF   (K'&ORIGIN LE 0).ZG70A56    OK                      00452900
&ZCVAL        SETC '&ZCVAL ORIGIN'              INCORRECT KEY USED      00453000
.ZG70A56      AIF   (K'&REGION LE 0).ZG70A57    OK                      00453100
&ZCVAL        SETC '&ZCVAL REGION'              INCORRECT KEY USED      00453200
.ZG70A57      AIF   (K'&ZCVAL LE 0).ZG70A58     OK                      00453300
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               00453400
              AIF  (K'&ZCVAL LE 160).ZG70A58A                           00453500
&ZCVAL        SETC '&ZCVAL'(1,160)                                      00453600
&ZCVAL        SETC '&ZCVAL....'                                         00453700
.ZG70A58A     ANOP                                                      00453800
&ZMS          SETC  '"FUNC'                                             00453900
&ZMS          SETC  '&ZMS.=&FUNC"'                                      00454000
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                00454100
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                00454200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00454300
.ZG70A58      ANOP  ,                                                   00454400
.*----------------------------------------------------------------***   00454500
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00454600
              AIF   (N'&WORKMOD LE 1).ZG72A     CK NUM                  00454700
&ZMS          SETC  '"WORKMOD='                                         00454800
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    00454900
&ZMS          SETC  '&ZMS "WORKMOD"'                                    00455000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00455100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00455200
.ZG72A        ANOP  ,                                                   00455300
.*-------------------------------------------------------------------   00455400
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00455500
&ZXWORKMOD    SETC  'INPUT'     SET IN/OUTPUT                           00455600
&XWORKMOD     SETC  '&WORKMOD(1)'               SET XVARIABLE           00455700
              AIF   (N'&WORKMOD GT 1).ZG72B     MULTI                   00455800
&XWORKMOD     SETC  '&WORKMOD'  SET XVARIABLE                           00455900
.ZG72B        AIF   (K'&WORKMOD(1) GT 0).ZG72C                          00456000
&ZXWORKMOD    SETC  ''          RESET IN/OUTPUT                         00456100
&ZMS          SETC  ' '                                                 00456200
&ZMS          SETC  '&ZMS "WORKMOD" KEY AND ITS'                        00456300
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00456400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00456500
.ZG72C        ANOP  ,                                                   00456600
.*-------------------------------------------------------------------   00456700
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00456800
              AIF   (K'&ZXWORKMOD LE 0).ZG72R   NOT I/O                 00456900
              AIF   ('&XWORKMOD'(1,1) NE '(').ZG72R                     00457000
&ZCGPR        SETC  '&XWORKMOD'(2,K'&XWORKMOD-2)                        00457100
              AIF   ('&ZCGPR'(1,1) NE '0').ZG72P                        00457200
              AIF   (K'&ZCGPR GT 2).ZG72Q                               00457300
              AIF   ('&ZCGPR' EQ '0').ZG72Q                             00457400
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00457500
              AIF   (T'&ZCGPR NE 'N').ZG72Q     INVALID REG NAME        00457600
.ZG72P        ANOP  ,                                                   00457700
              AIF   (T'&ZCGPR NE 'N').ZG72R     NON NUMERIC             00457800
              AIF   ('&ZCGPR' LT '2').ZG72Q                             00457900
              AIF   ('&ZCGPR' LE '12').ZG72R                            00458000
.ZG72Q        ANOP  ,                                                   00458100
&ZMS          SETC  '"WORKMOD='                                         00458200
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    00458300
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00458400
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00458500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00458600
.ZG72R        ANOP  ,                                                   00458700
.*----------------------------------------------------------------***   00458800
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00458900
&XPATHLIB     SETC  ''          INITIALIZE XVARIABLE                    00459000
              AIF   (K'&CALLIB LE 0).ZG75C                              00459100
&ZXPATHLIB    SETC  'INPUT'     SET IN/OUTPUT                           00459200
&XPATHLIB     SETC  'CALLIB'    SET XVARIABLE                           00459300
&ZXCALLIB     SETC  'INPUT'     SET IN/OUTPUT                           00459400
&XCALLIB      SETC  '&CALLIB(1)'                SET XVARIABLE PARM      00459500
              AIF   (N'&CALLIB GT 1).ZG75A                              00459600
&XCALLIB      SETC  '&CALLIB'   SET XVARIABLE PARM                      00459700
.ZG75A        AIF   (N'&CALLIB LE 1).ZG75B      CK NUM                  00459800
&ZMS          SETC  '"CALLIB='                                          00459900
&ZMS          SETC  '&ZMS.&CALLIB"'                                     00460000
&ZMS          SETC  '&ZMS "CALLIB"'                                     00460100
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00460200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00460300
.ZG75B        AIF   (K'&XCALLIB GT 0).ZG75C     ONE PARM                00460400
&ZXPATHLIB    SETC  ''          RESET IN/OUTPUT                         00460500
&ZXCALLIB     SETC  ''          RESET IN/OUTPUT                         00460600
&ZMS          SETC  ' '                                                 00460700
&ZMS          SETC  '&ZMS "CALLIB" KEY AND ITS'                         00460800
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00460900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00461000
.ZG75C        ANOP  ,                                                   00461100
.*----------------------------------------------------------------***   00461200
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00461300
              AIF   (K'&PATHNAME LE 0).ZG76D    NO ME KEY               00461400
              AIF   (N'&PATHNAME LE 1).ZG76A    CK NUM                  00461500
&ZMS          SETC  '"PATHNAME='                                        00461600
&ZMS          SETC  '&ZMS.&PATHNAME"'                                   00461700
&ZMS          SETC  '&ZMS "PATHNAME"'                                   00461800
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00461900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00462000
.ZG76A        AIF   (K'&XPATHLIB LE 0).ZG76B                            00462100
&ZMS          SETC  '"PATHNAME'                                         00462200
&ZMS          SETC  '&ZMS.=&PATHNAME"'                                  00462300
&ZMS          SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'               00462400
&ZMS          SETC  '&ZMS "&XPATHLIB"'                                  00462500
              MNOTE 8,' &ZMS KEY.'                                      00462600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00462700
              AGO   .ZG76D                                              00462800
.*                                                                      00462900
.ZG76B        ANOP  ,                                                   00463000
&ZXPATHLIB    SETC  'INPUT'     SET IN/OUTPUT                           00463100
&XPATHLIB     SETC  'PATHNAME'  SET XVARIABLE                           00463200
&ZXPATHNAME   SETC  'INPUT'     SET IN/OUTPUT                           00463300
&XPATHNAME    SETC  '&PATHNAME(1)'              SET XVARIABLE PARM      00463400
              AIF   (N'&PATHNAME GT 1).ZG76C                            00463500
&XPATHNAME    SETC  '&PATHNAME'                 SET XVARIABLE PARM      00463600
.ZG76C        AIF   (K'&XPATHNAME GT 0).ZG76D   ONE PARM                00463700
&ZXPATHLIB    SETC  ''          RESET IN/OUTPUT                         00463800
&ZXPATHNAME   SETC  ''          RESET IN/OUTPUT                         00463900
&ZMS          SETC  ' '                                                 00464000
&ZMS          SETC  '&ZMS "PATHNAME" KEY AND ITS'                       00464100
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00464200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00464300
.ZG76D        ANOP  ,                                                   00464400
.*------------------------------------------------------------------    00464500
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           00464600
              AIF   (K'&XPATHLIB GT 0).ZG77B                            00464700
&ZXPATHLIB    SETC  ''          RESET IN/OUTPUT                         00464800
&ZXCALLIB     SETC  ''          RESET IN/OUTPUT                         00464900
&XPATHLIB     SETC  ''          ENSURE NULL                             00465000
&XCALLIB      SETC  ''          ENSURE NULL                             00465100
&ZMS          SETC  'ONE OF THE FOLLOWING'                              00465200
&ZMS          SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'                 00465300
&ZMS          SETC  '&ZMS REQUIRED:'                                    00465400
&ZMS          SETC  '&ZMS "CALLIB"'             VALID ME KEY            00465500
&ZMS          SETC  '&ZMS OR "PATHNAME".'       VALID ME KEY            00465600
              MNOTE 8,' &ZMS '                                          00465700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00465800
.ZG77B        ANOP  ,                                                   00465900
.*-------------------------------------------------------------------   00466000
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00466100
.ZG75ZY  AIF    ('&XPATHLIB' NE 'CALLIB').ZG76ZY                        00466200
.*-------------------------------------------------------------------   00466300
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00466400
              AIF   (K'&ZXCALLIB LE 0).ZG75R    NOT I/O                 00466500
              AIF   ('&XCALLIB'(1,1) NE '(').ZG75R                      00466600
&ZCGPR        SETC  '&XCALLIB'(2,K'&XCALLIB-2)                          00466700
              AIF   ('&ZCGPR'(1,1) NE '0').ZG75P                        00466800
              AIF   (K'&ZCGPR GT 2).ZG75Q                               00466900
              AIF   ('&ZCGPR' EQ '0').ZG75Q                             00467000
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00467100
              AIF   (T'&ZCGPR NE 'N').ZG75Q     INVALID REG NAME        00467200
.ZG75P        ANOP  ,                                                   00467300
              AIF   (T'&ZCGPR NE 'N').ZG75R     NON NUMERIC             00467400
              AIF   ('&ZCGPR' LT '2').ZG75Q                             00467500
              AIF   ('&ZCGPR' LE '12').ZG75R                            00467600
.ZG75Q        ANOP  ,                                                   00467700
&ZMS          SETC  '"CALLIB='                                          00467800
&ZMS          SETC  '&ZMS.&CALLIB"'                                     00467900
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00468000
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00468100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00468200
.ZG75R        ANOP  ,                                                   00468300
.*-------------------------------------------------------------------   00468400
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00468500
.ZG76ZY  AIF    ('&XPATHLIB' NE 'PATHNAME').ZG77ZY                      00468600
.*-------------------------------------------------------------------   00468700
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00468800
              AIF   (K'&ZXPATHNAME LE 0).ZG76R  NOT I/O                 00468900
              AIF   ('&XPATHNAME'(1,1) NE '(').ZG76R                    00469000
&ZCGPR        SETC  '&XPATHNAME'(2,K'&XPATHNAME-2)                      00469100
              AIF   ('&ZCGPR'(1,1) NE '0').ZG76P                        00469200
              AIF   (K'&ZCGPR GT 2).ZG76Q                               00469300
              AIF   ('&ZCGPR' EQ '0').ZG76Q                             00469400
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00469500
              AIF   (T'&ZCGPR NE 'N').ZG76Q     INVALID REG NAME        00469600
.ZG76P        ANOP  ,                                                   00469700
              AIF   (T'&ZCGPR NE 'N').ZG76R     NON NUMERIC             00469800
              AIF   ('&ZCGPR' LT '2').ZG76Q                             00469900
              AIF   ('&ZCGPR' LE '12').ZG76R                            00470000
.ZG76Q        ANOP  ,                                                   00470100
&ZMS          SETC  '"PATHNAME='                                        00470200
&ZMS          SETC  '&ZMS.&PATHNAME"'                                   00470300
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00470400
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00470500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00470600
.ZG76R        ANOP  ,                                                   00470700
.*-------------------------------------------------------------------   00470800
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            00470900
.ZG77ZY       ANOP ,            END MUTUALLY EXCLUSIVE KEYS             00471000
.*-------------------------------------------------------------------   00471100
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00471200
.ZG78         ANOP  ,                                                   00471300
&ZTLC         SETC 'BINDW'                                              00471400
              AIF   ('&FUNC(1)' NE '&ZTLC').ZG85                        00471500
&XFUNC        SETC  'BINDW'     SET KEYWORD                             00471600
              AIF   (N'&FUNC LE 1).ZG78A        CK NUM                  00471700
&ZMS          SETC  '"FUNC='                                            00471800
&ZMS          SETC  '&ZMS.&FUNC"'                                       00471900
&ZMS          SETC  '&ZMS "FUNC"'                                       00472000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00472100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00472200
.ZG78A        ANOP  ,                                                   00472300
.*------------------------------------------------------------------    00472400
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00472500
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             00472600
.ZG78A0       AIF   (K'&ANAME LE 0).ZG78A1      OK                      00472700
&ZCVAL        SETC '&ZCVAL ANAME'               INCORRECT KEY USED      00472800
.ZG78A1       AIF   (K'&ENAME LE 0).ZG78A2      OK                      00472900
&ZCVAL        SETC '&ZCVAL ENAME'               INCORRECT KEY USED      00473000
.ZG78A2       AIF   (K'&AMODE LE 0).ZG78A3      OK                      00473100
&ZCVAL        SETC '&ZCVAL AMODE'               INCORRECT KEY USED      00473200
.ZG78A3       AIF   (K'&ATYPE LE 0).ZG78A4      OK                      00473300
&ZCVAL        SETC '&ZCVAL ATYPE'               INCORRECT KEY USED      00473400
.ZG78A4       AIF   (K'&DNAME LE 0).ZG78A5      OK                      00473500
&ZCVAL        SETC '&ZCVAL DNAME'               INCORRECT KEY USED      00473600
.ZG78A5       AIF   (K'&SECTION LE 0).ZG78A6    OK                      00473700
&ZCVAL        SETC '&ZCVAL SECTION'             INCORRECT KEY USED      00473800
.ZG78A6       AIF   (K'&BDY LE 0).ZG78A7        OK                      00473900
&ZCVAL        SETC '&ZCVAL BDY'                 INCORRECT KEY USED      00474000
.ZG78A7       AIF   (K'&CLASSL LE 0).ZG78A8     OK                      00474100
&ZCVAL        SETC '&ZCVAL CLASSL'              INCORRECT KEY USED      00474200
.ZG78A8       AIF   (K'&OLDNAME LE 0).ZG78A9    OK                      00474300
&ZCVAL        SETC '&ZCVAL OLDNAME'             INCORRECT KEY USED      00474400
.ZG78A9       AIF   (K'&NEWNAME LE 0).ZG78A10   OK                      00474500
&ZCVAL        SETC '&ZCVAL NEWNAME'             INCORRECT KEY USED      00474600
.ZG78A10      AIF   (K'&COUNT LE 0).ZG78A11     OK                      00474700
&ZCVAL        SETC '&ZCVAL COUNT'               INCORRECT KEY USED      00474800
.ZG78A11      AIF   (K'&MODE LE 0).ZG78A12      OK                      00474900
&ZCVAL        SETC '&ZCVAL MODE'                INCORRECT KEY USED      00475000
.ZG78A12      AIF   (K'&CLASS LE 0).ZG78A13     OK                      00475100
&ZCVAL        SETC '&ZCVAL CLASS'               INCORRECT KEY USED      00475200
.ZG78A13      AIF   (K'&PATHNAME LE 0).ZG78A14  OK                      00475300
&ZCVAL        SETC '&ZCVAL PATHNAME'            INCORRECT KEY USED      00475400
.ZG78A14      AIF   (K'&DIALOG LE 0).ZG78A15    OK                      00475500
&ZCVAL        SETC '&ZCVAL DIALOG'              INCORRECT KEY USED      00475600
.ZG78A15      AIF   (K'&INTENT LE 0).ZG78A16    OK                      00475700
&ZCVAL        SETC '&ZCVAL INTENT'              INCORRECT KEY USED      00475800
.ZG78A16      AIF   (K'&PROTECT LE 0).ZG78A17   OK                      00475900
&ZCVAL        SETC '&ZCVAL PROTECT'             INCORRECT KEY USED      00476000
.ZG78A17      AIF   (K'&RENAMEL LE 0).ZG78A18   OK                      00476100
&ZCVAL        SETC '&ZCVAL RENAMEL'             INCORRECT KEY USED      00476200
.ZG78A18      AIF   (K'&AREA LE 0).ZG78A19      OK                      00476300
&ZCVAL        SETC '&ZCVAL AREA'                INCORRECT KEY USED      00476400
.ZG78A19      AIF   (K'&CURSOR LE 0).ZG78A20    OK                      00476500
&ZCVAL        SETC '&ZCVAL CURSOR'              INCORRECT KEY USED      00476600
.ZG78A20      AIF   (K'&RELOC LE 0).ZG78A21     OK                      00476700
&ZCVAL        SETC '&ZCVAL RELOC'               INCORRECT KEY USED      00476800
.ZG78A21      AIF   (K'&RECTYPE LE 0).ZG78A22   OK                      00476900
&ZCVAL        SETC '&ZCVAL RECTYPE'             INCORRECT KEY USED      00477000
.ZG78A22      AIF   (K'&OFFSET LE 0).ZG78A23    OK                      00477100
&ZCVAL        SETC '&ZCVAL OFFSET'              INCORRECT KEY USED      00477200
.ZG78A23      AIF   (K'&SYMBOL LE 0).ZG78A24    OK                      00477300
&ZCVAL        SETC '&ZCVAL SYMBOL'              INCORRECT KEY USED      00477400
.ZG78A24      AIF   (K'&TCOUNT LE 0).ZG78A25    OK                      00477500
&ZCVAL        SETC '&ZCVAL TCOUNT'              INCORRECT KEY USED      00477600
.ZG78A25      AIF   (K'&NTYPE LE 0).ZG78A26     OK                      00477700
&ZCVAL        SETC '&ZCVAL NTYPE'               INCORRECT KEY USED      00477800
.ZG78A26      AIF   (K'&CULIST LE 0).ZG78A27    OK                      00477900
&ZCVAL        SETC '&ZCVAL CULIST'              INCORRECT KEY USED      00478000
.ZG78A27      AIF   (K'&ITYPE LE 0).ZG78A28     OK                      00478100
&ZCVAL        SETC '&ZCVAL ITYPE'               INCORRECT KEY USED      00478200
.ZG78A28      AIF   (K'&DLLNAME LE 0).ZG78A29   OK                      00478300
&ZCVAL        SETC '&ZCVAL DLLNAME'             INCORRECT KEY USED      00478400
.ZG78A29      AIF   (K'&INAME LE 0).ZG78A30     OK                      00478500
&ZCVAL        SETC '&ZCVAL INAME'               INCORRECT KEY USED      00478600
.ZG78A30      AIF   (K'&INTYPE LE 0).ZG78A31    OK                      00478700
&ZCVAL        SETC '&ZCVAL INTYPE'              INCORRECT KEY USED      00478800
.ZG78A31      AIF   (K'&DDNAME LE 0).ZG78A32    OK                      00478900
&ZCVAL        SETC '&ZCVAL DDNAME'              INCORRECT KEY USED      00479000
.ZG78A32      AIF   (K'&DEPTR LE 0).ZG78A33     OK                      00479100
&ZCVAL        SETC '&ZCVAL DEPTR'               INCORRECT KEY USED      00479200
.ZG78A33      AIF   (K'&MEMBER LE 0).ZG78A34    OK                      00479300
&ZCVAL        SETC '&ZCVAL MEMBER'              INCORRECT KEY USED      00479400
.ZG78A34      AIF   (K'&DCBPTR LE 0).ZG78A35    OK                      00479500
&ZCVAL        SETC '&ZCVAL DCBPTR'              INCORRECT KEY USED      00479600
.ZG78A35      AIF   (K'&EPTOKEN LE 0).ZG78A36   OK                      00479700
&ZCVAL        SETC '&ZCVAL EPTOKEN'             INCORRECT KEY USED      00479800
.ZG78A36      AIF   (K'&ATTRIB LE 0).ZG78A37    OK                      00479900
&ZCVAL        SETC '&ZCVAL ATTRIB'              INCORRECT KEY USED      00480000
.ZG78A37      AIF   (K'&ALIASES LE 0).ZG78A38   OK                      00480100
&ZCVAL        SETC '&ZCVAL ALIASES'             INCORRECT KEY USED      00480200
.ZG78A38      AIF   (K'&IMPORTS LE 0).ZG78A39   OK                      00480300
&ZCVAL        SETC '&ZCVAL IMPORTS'             INCORRECT KEY USED      00480400
.ZG78A39      AIF   (K'&EPLOC LE 0).ZG78A40     OK                      00480500
&ZCVAL        SETC '&ZCVAL EPLOC'               INCORRECT KEY USED      00480600
.ZG78A40      AIF   (K'&IDENTIFY LE 0).ZG78A41  OK                      00480700
&ZCVAL        SETC '&ZCVAL IDENTIFY'            INCORRECT KEY USED      00480800
.ZG78A41      AIF   (K'&EXTLST LE 0).ZG78A42    OK                      00480900
&ZCVAL        SETC '&ZCVAL EXTLST'              INCORRECT KEY USED      00481000
.ZG78A42      AIF   (K'&LNAME LE 0).ZG78A43     OK                      00481100
&ZCVAL        SETC '&ZCVAL LNAME'               INCORRECT KEY USED      00481200
.ZG78A43      AIF   (K'&NEWSECT LE 0).ZG78A44   OK                      00481300
&ZCVAL        SETC '&ZCVAL NEWSECT'             INCORRECT KEY USED      00481400
.ZG78A44      AIF   (K'&ENDDATA LE 0).ZG78A45   OK                      00481500
&ZCVAL        SETC '&ZCVAL ENDDATA'             INCORRECT KEY USED      00481600
.ZG78A45      AIF   (K'&MODLIB LE 0).ZG78A46    OK                      00481700
&ZCVAL        SETC '&ZCVAL MODLIB'              INCORRECT KEY USED      00481800
.ZG78A46      AIF   (K'&SNAME LE 0).ZG78A47     OK                      00481900
&ZCVAL        SETC '&ZCVAL SNAME'               INCORRECT KEY USED      00482000
.ZG78A47      AIF   (K'&REPLACE LE 0).ZG78A48   OK                      00482100
&ZCVAL        SETC '&ZCVAL REPLACE'             INCORRECT KEY USED      00482200
.ZG78A48      AIF   (K'&LIBOPT LE 0).ZG78A49    OK                      00482300
&ZCVAL        SETC '&ZCVAL LIBOPT'              INCORRECT KEY USED      00482400
.ZG78A49      AIF   (K'&OPTION LE 0).ZG78A50    OK                      00482500
&ZCVAL        SETC '&ZCVAL OPTION'              INCORRECT KEY USED      00482600
.ZG78A50      AIF   (K'&OPTVAL LE 0).ZG78A51    OK                      00482700
&ZCVAL        SETC '&ZCVAL OPTVAL'              INCORRECT KEY USED      00482800
.ZG78A51      AIF   (K'&PARMS LE 0).ZG78A52     OK                      00482900
&ZCVAL        SETC '&ZCVAL PARMS'               INCORRECT KEY USED      00483000
.ZG78A52      AIF   (K'&FILES LE 0).ZG78A53     OK                      00483100
&ZCVAL        SETC '&ZCVAL FILES'               INCORRECT KEY USED      00483200
.ZG78A53      AIF   (K'&EXITS LE 0).ZG78A54     OK                      00483300
&ZCVAL        SETC '&ZCVAL EXITS'               INCORRECT KEY USED      00483400
.ZG78A54      AIF   (K'&OPTIONS LE 0).ZG78A55   OK                      00483500
&ZCVAL        SETC '&ZCVAL OPTIONS'             INCORRECT KEY USED      00483600
.ZG78A55      AIF   (K'&ENVARS LE 0).ZG78A56    OK                      00483700
&ZCVAL        SETC '&ZCVAL ENVARS'              INCORRECT KEY USED      00483800
.ZG78A56      AIF   (K'&ORIGIN LE 0).ZG78A57    OK                      00483900
&ZCVAL        SETC '&ZCVAL ORIGIN'              INCORRECT KEY USED      00484000
.ZG78A57      AIF   (K'&REGION LE 0).ZG78A58    OK                      00484100
&ZCVAL        SETC '&ZCVAL REGION'              INCORRECT KEY USED      00484200
.ZG78A58      AIF   (K'&ZCVAL LE 0).ZG78A59     OK                      00484300
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               00484400
              AIF  (K'&ZCVAL LE 160).ZG78A59A                           00484500
&ZCVAL        SETC '&ZCVAL'(1,160)                                      00484600
&ZCVAL        SETC '&ZCVAL....'                                         00484700
.ZG78A59A     ANOP                                                      00484800
&ZMS          SETC  '"FUNC'                                             00484900
&ZMS          SETC  '&ZMS.=&FUNC"'                                      00485000
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                00485100
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                00485200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00485300
.ZG78A59      ANOP  ,                                                   00485400
.*----------------------------------------------------------------***   00485500
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00485600
              AIF   (N'&WORKMOD LE 1).ZG80A     CK NUM                  00485700
&ZMS          SETC  '"WORKMOD='                                         00485800
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    00485900
&ZMS          SETC  '&ZMS "WORKMOD"'                                    00486000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00486100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00486200
.ZG80A        ANOP  ,                                                   00486300
.*-------------------------------------------------------------------   00486400
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00486500
&ZXWORKMOD    SETC  'INPUT'     SET IN/OUTPUT                           00486600
&XWORKMOD     SETC  '&WORKMOD(1)'               SET XVARIABLE           00486700
              AIF   (N'&WORKMOD GT 1).ZG80B     MULTI                   00486800
&XWORKMOD     SETC  '&WORKMOD'  SET XVARIABLE                           00486900
.ZG80B        AIF   (K'&WORKMOD(1) GT 0).ZG80C                          00487000
&ZXWORKMOD    SETC  ''          RESET IN/OUTPUT                         00487100
&ZMS          SETC  ' '                                                 00487200
&ZMS          SETC  '&ZMS "WORKMOD" KEY AND ITS'                        00487300
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00487400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00487500
.ZG80C        ANOP  ,                                                   00487600
.*-------------------------------------------------------------------   00487700
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00487800
              AIF   (K'&ZXWORKMOD LE 0).ZG80R   NOT I/O                 00487900
              AIF   ('&XWORKMOD'(1,1) NE '(').ZG80R                     00488000
&ZCGPR        SETC  '&XWORKMOD'(2,K'&XWORKMOD-2)                        00488100
              AIF   ('&ZCGPR'(1,1) NE '0').ZG80P                        00488200
              AIF   (K'&ZCGPR GT 2).ZG80Q                               00488300
              AIF   ('&ZCGPR' EQ '0').ZG80Q                             00488400
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00488500
              AIF   (T'&ZCGPR NE 'N').ZG80Q     INVALID REG NAME        00488600
.ZG80P        ANOP  ,                                                   00488700
              AIF   (T'&ZCGPR NE 'N').ZG80R     NON NUMERIC             00488800
              AIF   ('&ZCGPR' LT '2').ZG80Q                             00488900
              AIF   ('&ZCGPR' LE '12').ZG80R                            00489000
.ZG80Q        ANOP  ,                                                   00489100
&ZMS          SETC  '"WORKMOD='                                         00489200
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    00489300
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00489400
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00489500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00489600
.ZG80R        ANOP  ,                                                   00489700
.*----------------------------------------------------------------***   00489800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00489900
              AIF   (N'&CALLIB LE 1).ZG83A      CK NUM                  00490000
&ZMS          SETC  '"CALLIB='                                          00490100
&ZMS          SETC  '&ZMS.&CALLIB"'                                     00490200
&ZMS          SETC  '&ZMS "CALLIB"'                                     00490300
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00490400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00490500
.ZG83A        ANOP  ,                                                   00490600
.*-------------------------------------------------------------------   00490700
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00490800
&ZXCALLIB     SETC  'INPUT'     SET IN/OUTPUT                           00490900
&XCALLIB      SETC  '0'                                                 00491000
              AIF   (K'&CALLIB(1) LE 0).ZG83B   PARM                    00491100
&XCALLIB      SETC  '&CALLIB(1)'                SET XVARIABLE           00491200
              AIF   (N'&CALLIB GT 1).ZG83B      MULTI                   00491300
&XCALLIB      SETC  '&CALLIB'   SET XVARIABLE                           00491400
.ZG83B        ANOP  ,                                                   00491500
.*-------------------------------------------------------------------   00491600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00491700
              AIF   (K'&ZXCALLIB LE 0).ZG83R    NOT I/O                 00491800
         AIF   ('&XCALLIB' EQ '0').ZG83R                                00491900
              AIF   ('&XCALLIB'(1,1) NE '(').ZG83R                      00492000
&ZCGPR        SETC  '&XCALLIB'(2,K'&XCALLIB-2)                          00492100
              AIF   ('&ZCGPR'(1,1) NE '0').ZG83P                        00492200
              AIF   (K'&ZCGPR GT 2).ZG83Q                               00492300
              AIF   ('&ZCGPR' EQ '0').ZG83Q                             00492400
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00492500
              AIF   (T'&ZCGPR NE 'N').ZG83Q     INVALID REG NAME        00492600
.ZG83P        ANOP  ,                                                   00492700
              AIF   (T'&ZCGPR NE 'N').ZG83R     NON NUMERIC             00492800
              AIF   ('&ZCGPR' LT '2').ZG83Q                             00492900
              AIF   ('&ZCGPR' LE '12').ZG83R                            00493000
.ZG83Q        ANOP  ,                                                   00493100
&ZMS          SETC  '"CALLIB='                                          00493200
&ZMS          SETC  '&ZMS.&CALLIB"'                                     00493300
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00493400
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00493500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00493600
.ZG83R        ANOP  ,                                                   00493700
.*-------------------------------------------------------------------   00493800
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00493900
.ZG85         ANOP  ,                                                   00494000
&ZTLC         SETC 'CREATEW'                                            00494100
              AIF   ('&FUNC(1)' NE '&ZTLC').ZG97                        00494200
&XFUNC        SETC  'CREATEW'   SET KEYWORD                             00494300
              AIF   (N'&FUNC LE 1).ZG85A        CK NUM                  00494400
&ZMS          SETC  '"FUNC='                                            00494500
&ZMS          SETC  '&ZMS.&FUNC"'                                       00494600
&ZMS          SETC  '&ZMS "FUNC"'                                       00494700
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00494800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00494900
.ZG85A        ANOP  ,                                                   00495000
.*------------------------------------------------------------------    00495100
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00495200
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             00495300
.ZG85A0       AIF   (K'&ANAME LE 0).ZG85A1      OK                      00495400
&ZCVAL        SETC '&ZCVAL ANAME'               INCORRECT KEY USED      00495500
.ZG85A1       AIF   (K'&ENAME LE 0).ZG85A2      OK                      00495600
&ZCVAL        SETC '&ZCVAL ENAME'               INCORRECT KEY USED      00495700
.ZG85A2       AIF   (K'&AMODE LE 0).ZG85A3      OK                      00495800
&ZCVAL        SETC '&ZCVAL AMODE'               INCORRECT KEY USED      00495900
.ZG85A3       AIF   (K'&ATYPE LE 0).ZG85A4      OK                      00496000
&ZCVAL        SETC '&ZCVAL ATYPE'               INCORRECT KEY USED      00496100
.ZG85A4       AIF   (K'&DNAME LE 0).ZG85A5      OK                      00496200
&ZCVAL        SETC '&ZCVAL DNAME'               INCORRECT KEY USED      00496300
.ZG85A5       AIF   (K'&SECTION LE 0).ZG85A6    OK                      00496400
&ZCVAL        SETC '&ZCVAL SECTION'             INCORRECT KEY USED      00496500
.ZG85A6       AIF   (K'&BDY LE 0).ZG85A7        OK                      00496600
&ZCVAL        SETC '&ZCVAL BDY'                 INCORRECT KEY USED      00496700
.ZG85A7       AIF   (K'&CLASSL LE 0).ZG85A8     OK                      00496800
&ZCVAL        SETC '&ZCVAL CLASSL'              INCORRECT KEY USED      00496900
.ZG85A8       AIF   (K'&OLDNAME LE 0).ZG85A9    OK                      00497000
&ZCVAL        SETC '&ZCVAL OLDNAME'             INCORRECT KEY USED      00497100
.ZG85A9       AIF   (K'&NEWNAME LE 0).ZG85A10   OK                      00497200
&ZCVAL        SETC '&ZCVAL NEWNAME'             INCORRECT KEY USED      00497300
.ZG85A10      AIF   (K'&COUNT LE 0).ZG85A11     OK                      00497400
&ZCVAL        SETC '&ZCVAL COUNT'               INCORRECT KEY USED      00497500
.ZG85A11      AIF   (K'&MODE LE 0).ZG85A12      OK                      00497600
&ZCVAL        SETC '&ZCVAL MODE'                INCORRECT KEY USED      00497700
.ZG85A12      AIF   (K'&CLASS LE 0).ZG85A13     OK                      00497800
&ZCVAL        SETC '&ZCVAL CLASS'               INCORRECT KEY USED      00497900
.ZG85A13      AIF   (K'&CALLIB LE 0).ZG85A14    OK                      00498000
&ZCVAL        SETC '&ZCVAL CALLIB'              INCORRECT KEY USED      00498100
.ZG85A14      AIF   (K'&PATHNAME LE 0).ZG85A15  OK                      00498200
&ZCVAL        SETC '&ZCVAL PATHNAME'            INCORRECT KEY USED      00498300
.ZG85A15      AIF   (K'&PROTECT LE 0).ZG85A16   OK                      00498400
&ZCVAL        SETC '&ZCVAL PROTECT'             INCORRECT KEY USED      00498500
.ZG85A16      AIF   (K'&RENAMEL LE 0).ZG85A17   OK                      00498600
&ZCVAL        SETC '&ZCVAL RENAMEL'             INCORRECT KEY USED      00498700
.ZG85A17      AIF   (K'&AREA LE 0).ZG85A18      OK                      00498800
&ZCVAL        SETC '&ZCVAL AREA'                INCORRECT KEY USED      00498900
.ZG85A18      AIF   (K'&CURSOR LE 0).ZG85A19    OK                      00499000
&ZCVAL        SETC '&ZCVAL CURSOR'              INCORRECT KEY USED      00499100
.ZG85A19      AIF   (K'&RELOC LE 0).ZG85A20     OK                      00499200
&ZCVAL        SETC '&ZCVAL RELOC'               INCORRECT KEY USED      00499300
.ZG85A20      AIF   (K'&RECTYPE LE 0).ZG85A21   OK                      00499400
&ZCVAL        SETC '&ZCVAL RECTYPE'             INCORRECT KEY USED      00499500
.ZG85A21      AIF   (K'&OFFSET LE 0).ZG85A22    OK                      00499600
&ZCVAL        SETC '&ZCVAL OFFSET'              INCORRECT KEY USED      00499700
.ZG85A22      AIF   (K'&SYMBOL LE 0).ZG85A23    OK                      00499800
&ZCVAL        SETC '&ZCVAL SYMBOL'              INCORRECT KEY USED      00499900
.ZG85A23      AIF   (K'&TCOUNT LE 0).ZG85A24    OK                      00500000
&ZCVAL        SETC '&ZCVAL TCOUNT'              INCORRECT KEY USED      00500100
.ZG85A24      AIF   (K'&NTYPE LE 0).ZG85A25     OK                      00500200
&ZCVAL        SETC '&ZCVAL NTYPE'               INCORRECT KEY USED      00500300
.ZG85A25      AIF   (K'&CULIST LE 0).ZG85A26    OK                      00500400
&ZCVAL        SETC '&ZCVAL CULIST'              INCORRECT KEY USED      00500500
.ZG85A26      AIF   (K'&ITYPE LE 0).ZG85A27     OK                      00500600
&ZCVAL        SETC '&ZCVAL ITYPE'               INCORRECT KEY USED      00500700
.ZG85A27      AIF   (K'&DLLNAME LE 0).ZG85A28   OK                      00500800
&ZCVAL        SETC '&ZCVAL DLLNAME'             INCORRECT KEY USED      00500900
.ZG85A28      AIF   (K'&INAME LE 0).ZG85A29     OK                      00501000
&ZCVAL        SETC '&ZCVAL INAME'               INCORRECT KEY USED      00501100
.ZG85A29      AIF   (K'&INTYPE LE 0).ZG85A30    OK                      00501200
&ZCVAL        SETC '&ZCVAL INTYPE'              INCORRECT KEY USED      00501300
.ZG85A30      AIF   (K'&DDNAME LE 0).ZG85A31    OK                      00501400
&ZCVAL        SETC '&ZCVAL DDNAME'              INCORRECT KEY USED      00501500
.ZG85A31      AIF   (K'&DEPTR LE 0).ZG85A32     OK                      00501600
&ZCVAL        SETC '&ZCVAL DEPTR'               INCORRECT KEY USED      00501700
.ZG85A32      AIF   (K'&MEMBER LE 0).ZG85A33    OK                      00501800
&ZCVAL        SETC '&ZCVAL MEMBER'              INCORRECT KEY USED      00501900
.ZG85A33      AIF   (K'&DCBPTR LE 0).ZG85A34    OK                      00502000
&ZCVAL        SETC '&ZCVAL DCBPTR'              INCORRECT KEY USED      00502100
.ZG85A34      AIF   (K'&EPTOKEN LE 0).ZG85A35   OK                      00502200
&ZCVAL        SETC '&ZCVAL EPTOKEN'             INCORRECT KEY USED      00502300
.ZG85A35      AIF   (K'&ATTRIB LE 0).ZG85A36    OK                      00502400
&ZCVAL        SETC '&ZCVAL ATTRIB'              INCORRECT KEY USED      00502500
.ZG85A36      AIF   (K'&ALIASES LE 0).ZG85A37   OK                      00502600
&ZCVAL        SETC '&ZCVAL ALIASES'             INCORRECT KEY USED      00502700
.ZG85A37      AIF   (K'&IMPORTS LE 0).ZG85A38   OK                      00502800
&ZCVAL        SETC '&ZCVAL IMPORTS'             INCORRECT KEY USED      00502900
.ZG85A38      AIF   (K'&EPLOC LE 0).ZG85A39     OK                      00503000
&ZCVAL        SETC '&ZCVAL EPLOC'               INCORRECT KEY USED      00503100
.ZG85A39      AIF   (K'&IDENTIFY LE 0).ZG85A40  OK                      00503200
&ZCVAL        SETC '&ZCVAL IDENTIFY'            INCORRECT KEY USED      00503300
.ZG85A40      AIF   (K'&EXTLST LE 0).ZG85A41    OK                      00503400
&ZCVAL        SETC '&ZCVAL EXTLST'              INCORRECT KEY USED      00503500
.ZG85A41      AIF   (K'&LNAME LE 0).ZG85A42     OK                      00503600
&ZCVAL        SETC '&ZCVAL LNAME'               INCORRECT KEY USED      00503700
.ZG85A42      AIF   (K'&NEWSECT LE 0).ZG85A43   OK                      00503800
&ZCVAL        SETC '&ZCVAL NEWSECT'             INCORRECT KEY USED      00503900
.ZG85A43      AIF   (K'&ENDDATA LE 0).ZG85A44   OK                      00504000
&ZCVAL        SETC '&ZCVAL ENDDATA'             INCORRECT KEY USED      00504100
.ZG85A44      AIF   (K'&MODLIB LE 0).ZG85A45    OK                      00504200
&ZCVAL        SETC '&ZCVAL MODLIB'              INCORRECT KEY USED      00504300
.ZG85A45      AIF   (K'&SNAME LE 0).ZG85A46     OK                      00504400
&ZCVAL        SETC '&ZCVAL SNAME'               INCORRECT KEY USED      00504500
.ZG85A46      AIF   (K'&REPLACE LE 0).ZG85A47   OK                      00504600
&ZCVAL        SETC '&ZCVAL REPLACE'             INCORRECT KEY USED      00504700
.ZG85A47      AIF   (K'&LIBOPT LE 0).ZG85A48    OK                      00504800
&ZCVAL        SETC '&ZCVAL LIBOPT'              INCORRECT KEY USED      00504900
.ZG85A48      AIF   (K'&OPTION LE 0).ZG85A49    OK                      00505000
&ZCVAL        SETC '&ZCVAL OPTION'              INCORRECT KEY USED      00505100
.ZG85A49      AIF   (K'&OPTVAL LE 0).ZG85A50    OK                      00505200
&ZCVAL        SETC '&ZCVAL OPTVAL'              INCORRECT KEY USED      00505300
.ZG85A50      AIF   (K'&PARMS LE 0).ZG85A51     OK                      00505400
&ZCVAL        SETC '&ZCVAL PARMS'               INCORRECT KEY USED      00505500
.ZG85A51      AIF   (K'&FILES LE 0).ZG85A52     OK                      00505600
&ZCVAL        SETC '&ZCVAL FILES'               INCORRECT KEY USED      00505700
.ZG85A52      AIF   (K'&EXITS LE 0).ZG85A53     OK                      00505800
&ZCVAL        SETC '&ZCVAL EXITS'               INCORRECT KEY USED      00505900
.ZG85A53      AIF   (K'&OPTIONS LE 0).ZG85A54   OK                      00506000
&ZCVAL        SETC '&ZCVAL OPTIONS'             INCORRECT KEY USED      00506100
.ZG85A54      AIF   (K'&ENVARS LE 0).ZG85A55    OK                      00506200
&ZCVAL        SETC '&ZCVAL ENVARS'              INCORRECT KEY USED      00506300
.ZG85A55      AIF   (K'&ORIGIN LE 0).ZG85A56    OK                      00506400
&ZCVAL        SETC '&ZCVAL ORIGIN'              INCORRECT KEY USED      00506500
.ZG85A56      AIF   (K'&REGION LE 0).ZG85A57    OK                      00506600
&ZCVAL        SETC '&ZCVAL REGION'              INCORRECT KEY USED      00506700
.ZG85A57      AIF   (K'&ZCVAL LE 0).ZG85A58     OK                      00506800
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               00506900
              AIF  (K'&ZCVAL LE 160).ZG85A58A                           00507000
&ZCVAL        SETC '&ZCVAL'(1,160)                                      00507100
&ZCVAL        SETC '&ZCVAL....'                                         00507200
.ZG85A58A     ANOP                                                      00507300
&ZMS          SETC  '"FUNC'                                             00507400
&ZMS          SETC  '&ZMS.=&FUNC"'                                      00507500
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                00507600
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                00507700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00507800
.ZG85A58      ANOP  ,                                                   00507900
.*----------------------------------------------------------------***   00508000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00508100
              AIF   (N'&DIALOG LE 1).ZG87A      CK NUM                  00508200
&ZMS          SETC  '"DIALOG='                                          00508300
&ZMS          SETC  '&ZMS.&DIALOG"'                                     00508400
&ZMS          SETC  '&ZMS "DIALOG"'                                     00508500
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00508600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00508700
.ZG87A        ANOP  ,                                                   00508800
.*-------------------------------------------------------------------   00508900
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00509000
&ZXDIALOG     SETC  'INPUT'     SET IN/OUTPUT                           00509100
&XDIALOG      SETC  '&DIALOG(1)'                SET XVARIABLE           00509200
              AIF   (N'&DIALOG GT 1).ZG87B      MULTI                   00509300
&XDIALOG      SETC  '&DIALOG'   SET XVARIABLE                           00509400
.ZG87B        AIF   (K'&DIALOG(1) GT 0).ZG87C                           00509500
&ZXDIALOG     SETC  ''          RESET IN/OUTPUT                         00509600
&ZMS          SETC  ' '                                                 00509700
&ZMS          SETC  '&ZMS "DIALOG" KEY AND ITS'                         00509800
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00509900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00510000
.ZG87C        ANOP  ,                                                   00510100
.*-------------------------------------------------------------------   00510200
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00510300
              AIF   (K'&ZXDIALOG LE 0).ZG87R    NOT I/O                 00510400
              AIF   ('&XDIALOG'(1,1) NE '(').ZG87R                      00510500
&ZCGPR        SETC  '&XDIALOG'(2,K'&XDIALOG-2)                          00510600
              AIF   ('&ZCGPR'(1,1) NE '0').ZG87P                        00510700
              AIF   (K'&ZCGPR GT 2).ZG87Q                               00510800
              AIF   ('&ZCGPR' EQ '0').ZG87Q                             00510900
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00511000
              AIF   (T'&ZCGPR NE 'N').ZG87Q     INVALID REG NAME        00511100
.ZG87P        ANOP  ,                                                   00511200
              AIF   (T'&ZCGPR NE 'N').ZG87R     NON NUMERIC             00511300
              AIF   ('&ZCGPR' LT '2').ZG87Q                             00511400
              AIF   ('&ZCGPR' LE '12').ZG87R                            00511500
.ZG87Q        ANOP  ,                                                   00511600
&ZMS          SETC  '"DIALOG='                                          00511700
&ZMS          SETC  '&ZMS.&DIALOG"'                                     00511800
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00511900
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00512000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00512100
.ZG87R        ANOP  ,                                                   00512200
.*----------------------------------------------------------------***   00512300
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00512400
              AIF   (N'&WORKMOD LE 1).ZG90A     CK NUM                  00512500
&ZMS          SETC  '"WORKMOD='                                         00512600
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    00512700
&ZMS          SETC  '&ZMS "WORKMOD"'                                    00512800
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00512900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00513000
.ZG90A        ANOP  ,                                                   00513100
.*-------------------------------------------------------------------   00513200
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00513300
&ZXWORKMOD    SETC  'OUTPUT'    SET IN/OUTPUT                           00513400
&XWORKMOD     SETC  '&WORKMOD(1)'               SET XVARIABLE           00513500
              AIF   (N'&WORKMOD GT 1).ZG90B     MULTI                   00513600
&XWORKMOD     SETC  '&WORKMOD'  SET XVARIABLE                           00513700
.ZG90B        AIF   (K'&WORKMOD(1) GT 0).ZG90C                          00513800
&ZXWORKMOD    SETC  ''          RESET IN/OUTPUT                         00513900
&ZMS          SETC  ' '                                                 00514000
&ZMS          SETC  '&ZMS "WORKMOD" KEY AND ITS'                        00514100
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00514200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00514300
.ZG90C        ANOP  ,                                                   00514400
.*-------------------------------------------------------------------   00514500
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00514600
              AIF   (K'&ZXWORKMOD LE 0).ZG90R   NOT I/O                 00514700
              AIF   ('&XWORKMOD'(1,1) NE '(').ZG90R                     00514800
&ZCGPR        SETC  '&XWORKMOD'(2,K'&XWORKMOD-2)                        00514900
              AIF   ('&ZCGPR'(1,1) NE '0').ZG90P                        00515000
              AIF   (K'&ZCGPR GT 2).ZG90Q                               00515100
              AIF   ('&ZCGPR' EQ '0').ZG90Q                             00515200
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00515300
              AIF   (T'&ZCGPR NE 'N').ZG90Q     INVALID REG NAME        00515400
.ZG90P        ANOP  ,                                                   00515500
              AIF   (T'&ZCGPR NE 'N').ZG90R     NON NUMERIC             00515600
              AIF   ('&ZCGPR' LT '2').ZG90Q                             00515700
              AIF   ('&ZCGPR' LE '12').ZG90R                            00515800
.ZG90Q        ANOP  ,                                                   00515900
&ZMS          SETC  '"WORKMOD='                                         00516000
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    00516100
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00516200
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00516300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00516400
.ZG90R        ANOP  ,                                                   00516500
.*----------------------------------------------------------------***   00516600
.***AG.KKWRD01 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             00516700
              AIF   (N'&INTENT LE 1).ZG93A      CK NUM                  00516800
&ZMS          SETC  '"INTENT='                                          00516900
&ZMS          SETC  '&ZMS.&INTENT"'                                     00517000
&ZMS          SETC  '&ZMS "INTENT"'                                     00517100
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00517200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00517300
.ZG93A        ANOP  ,                                                   00517400
.*-------------------------------------------------------------------   00517500
.***AG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             00517600
&XINTENT      SETC  ''          INITIALIZE XVARIABLE                    00517700
.ZG94A   AIF   ('&INTENT(1)' NE 'B').ZG95A                              00517800
&XINTENT      SETC  'B'         SET KEYWORD                             00517900
.*-------------------------------------------------------------------   00518000
.***AG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             00518100
.ZG95A   AIF   ('&INTENT(1)' NE 'A').ZG96A                              00518200
&XINTENT      SETC  'A'         SET KEYWORD                             00518300
.*-------------------------------------------------------------------   00518400
.***AG.KKWRD03 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             00518500
.ZG96A        AIF   (K'&XINTENT GT 0).ZG96C     KEYWORD                 00518600
              AIF   (K'&INTENT(1) LE 0).ZG96B                           00518700
&ZMS          SETC  '"INTENT='                                          00518800
&ZMS          SETC  '&ZMS.&INTENT"'                                     00518900
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           00519000
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00519100
&ZMS          SETC  '&ZMS "B"'                                          00519200
&ZMS          SETC  '&ZMS OR "A".'                                      00519300
              MNOTE 8,' &ZMS '                                          00519400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00519500
.ZG96B        ANOP  ,                                                   00519600
&XINTENT      SETC  'B'         SET DEFAULT KEYWORD                     00519700
.ZG96C        ANOP  ,                                                   00519800
&ZXINTENT     SETC  'INPUT'     SET IN/OUTPUT                           00519900
.*-------------------------------------------------------------------   00520000
.***AG.KKWRD04 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             00520100
              AIF   (K'&INTENT(1) GT 0).ZG96D   VALID                   00520200
&ZXINTENT     SETC  ''          RESET IN/OUTPUT                         00520300
&ZMS          SETC  'THE'                                               00520400
&ZMS          SETC  '&ZMS "INTENT" KEY AND ITS'                         00520500
&ZMS          SETC  '&ZMS ARGUMENT ARE REQUIRED.'                       00520600
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00520700
&ZMS          SETC  '&ZMS "B"'                                          00520800
&ZMS          SETC  '&ZMS OR "A".'                                      00520900
              MNOTE 8,' &ZMS '                                          00521000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00521100
.ZG96D        ANOP  ,                                                   00521200
.*-------------------------------------------------------------------   00521300
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00521400
.ZG97         ANOP  ,                                                   00521500
&ZTLC         SETC 'DELETEW'                                            00521600
              AIF   ('&FUNC(1)' NE '&ZTLC').ZG106                       00521700
&XFUNC        SETC  'DELETEW'   SET KEYWORD                             00521800
              AIF   (N'&FUNC LE 1).ZG97A        CK NUM                  00521900
&ZMS          SETC  '"FUNC='                                            00522000
&ZMS          SETC  '&ZMS.&FUNC"'                                       00522100
&ZMS          SETC  '&ZMS "FUNC"'                                       00522200
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00522300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00522400
.ZG97A        ANOP  ,                                                   00522500
.*------------------------------------------------------------------    00522600
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00522700
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             00522800
.ZG97A0       AIF   (K'&ANAME LE 0).ZG97A1      OK                      00522900
&ZCVAL        SETC '&ZCVAL ANAME'               INCORRECT KEY USED      00523000
.ZG97A1       AIF   (K'&ENAME LE 0).ZG97A2      OK                      00523100
&ZCVAL        SETC '&ZCVAL ENAME'               INCORRECT KEY USED      00523200
.ZG97A2       AIF   (K'&AMODE LE 0).ZG97A3      OK                      00523300
&ZCVAL        SETC '&ZCVAL AMODE'               INCORRECT KEY USED      00523400
.ZG97A3       AIF   (K'&ATYPE LE 0).ZG97A4      OK                      00523500
&ZCVAL        SETC '&ZCVAL ATYPE'               INCORRECT KEY USED      00523600
.ZG97A4       AIF   (K'&DNAME LE 0).ZG97A5      OK                      00523700
&ZCVAL        SETC '&ZCVAL DNAME'               INCORRECT KEY USED      00523800
.ZG97A5       AIF   (K'&SECTION LE 0).ZG97A6    OK                      00523900
&ZCVAL        SETC '&ZCVAL SECTION'             INCORRECT KEY USED      00524000
.ZG97A6       AIF   (K'&BDY LE 0).ZG97A7        OK                      00524100
&ZCVAL        SETC '&ZCVAL BDY'                 INCORRECT KEY USED      00524200
.ZG97A7       AIF   (K'&CLASSL LE 0).ZG97A8     OK                      00524300
&ZCVAL        SETC '&ZCVAL CLASSL'              INCORRECT KEY USED      00524400
.ZG97A8       AIF   (K'&OLDNAME LE 0).ZG97A9    OK                      00524500
&ZCVAL        SETC '&ZCVAL OLDNAME'             INCORRECT KEY USED      00524600
.ZG97A9       AIF   (K'&NEWNAME LE 0).ZG97A10   OK                      00524700
&ZCVAL        SETC '&ZCVAL NEWNAME'             INCORRECT KEY USED      00524800
.ZG97A10      AIF   (K'&COUNT LE 0).ZG97A11     OK                      00524900
&ZCVAL        SETC '&ZCVAL COUNT'               INCORRECT KEY USED      00525000
.ZG97A11      AIF   (K'&MODE LE 0).ZG97A12      OK                      00525100
&ZCVAL        SETC '&ZCVAL MODE'                INCORRECT KEY USED      00525200
.ZG97A12      AIF   (K'&CLASS LE 0).ZG97A13     OK                      00525300
&ZCVAL        SETC '&ZCVAL CLASS'               INCORRECT KEY USED      00525400
.ZG97A13      AIF   (K'&CALLIB LE 0).ZG97A14    OK                      00525500
&ZCVAL        SETC '&ZCVAL CALLIB'              INCORRECT KEY USED      00525600
.ZG97A14      AIF   (K'&PATHNAME LE 0).ZG97A15  OK                      00525700
&ZCVAL        SETC '&ZCVAL PATHNAME'            INCORRECT KEY USED      00525800
.ZG97A15      AIF   (K'&DIALOG LE 0).ZG97A16    OK                      00525900
&ZCVAL        SETC '&ZCVAL DIALOG'              INCORRECT KEY USED      00526000
.ZG97A16      AIF   (K'&INTENT LE 0).ZG97A17    OK                      00526100
&ZCVAL        SETC '&ZCVAL INTENT'              INCORRECT KEY USED      00526200
.ZG97A17      AIF   (K'&RENAMEL LE 0).ZG97A18   OK                      00526300
&ZCVAL        SETC '&ZCVAL RENAMEL'             INCORRECT KEY USED      00526400
.ZG97A18      AIF   (K'&AREA LE 0).ZG97A19      OK                      00526500
&ZCVAL        SETC '&ZCVAL AREA'                INCORRECT KEY USED      00526600
.ZG97A19      AIF   (K'&CURSOR LE 0).ZG97A20    OK                      00526700
&ZCVAL        SETC '&ZCVAL CURSOR'              INCORRECT KEY USED      00526800
.ZG97A20      AIF   (K'&RELOC LE 0).ZG97A21     OK                      00526900
&ZCVAL        SETC '&ZCVAL RELOC'               INCORRECT KEY USED      00527000
.ZG97A21      AIF   (K'&RECTYPE LE 0).ZG97A22   OK                      00527100
&ZCVAL        SETC '&ZCVAL RECTYPE'             INCORRECT KEY USED      00527200
.ZG97A22      AIF   (K'&OFFSET LE 0).ZG97A23    OK                      00527300
&ZCVAL        SETC '&ZCVAL OFFSET'              INCORRECT KEY USED      00527400
.ZG97A23      AIF   (K'&SYMBOL LE 0).ZG97A24    OK                      00527500
&ZCVAL        SETC '&ZCVAL SYMBOL'              INCORRECT KEY USED      00527600
.ZG97A24      AIF   (K'&TCOUNT LE 0).ZG97A25    OK                      00527700
&ZCVAL        SETC '&ZCVAL TCOUNT'              INCORRECT KEY USED      00527800
.ZG97A25      AIF   (K'&NTYPE LE 0).ZG97A26     OK                      00527900
&ZCVAL        SETC '&ZCVAL NTYPE'               INCORRECT KEY USED      00528000
.ZG97A26      AIF   (K'&CULIST LE 0).ZG97A27    OK                      00528100
&ZCVAL        SETC '&ZCVAL CULIST'              INCORRECT KEY USED      00528200
.ZG97A27      AIF   (K'&ITYPE LE 0).ZG97A28     OK                      00528300
&ZCVAL        SETC '&ZCVAL ITYPE'               INCORRECT KEY USED      00528400
.ZG97A28      AIF   (K'&DLLNAME LE 0).ZG97A29   OK                      00528500
&ZCVAL        SETC '&ZCVAL DLLNAME'             INCORRECT KEY USED      00528600
.ZG97A29      AIF   (K'&INAME LE 0).ZG97A30     OK                      00528700
&ZCVAL        SETC '&ZCVAL INAME'               INCORRECT KEY USED      00528800
.ZG97A30      AIF   (K'&INTYPE LE 0).ZG97A31    OK                      00528900
&ZCVAL        SETC '&ZCVAL INTYPE'              INCORRECT KEY USED      00529000
.ZG97A31      AIF   (K'&DDNAME LE 0).ZG97A32    OK                      00529100
&ZCVAL        SETC '&ZCVAL DDNAME'              INCORRECT KEY USED      00529200
.ZG97A32      AIF   (K'&DEPTR LE 0).ZG97A33     OK                      00529300
&ZCVAL        SETC '&ZCVAL DEPTR'               INCORRECT KEY USED      00529400
.ZG97A33      AIF   (K'&MEMBER LE 0).ZG97A34    OK                      00529500
&ZCVAL        SETC '&ZCVAL MEMBER'              INCORRECT KEY USED      00529600
.ZG97A34      AIF   (K'&DCBPTR LE 0).ZG97A35    OK                      00529700
&ZCVAL        SETC '&ZCVAL DCBPTR'              INCORRECT KEY USED      00529800
.ZG97A35      AIF   (K'&EPTOKEN LE 0).ZG97A36   OK                      00529900
&ZCVAL        SETC '&ZCVAL EPTOKEN'             INCORRECT KEY USED      00530000
.ZG97A36      AIF   (K'&ATTRIB LE 0).ZG97A37    OK                      00530100
&ZCVAL        SETC '&ZCVAL ATTRIB'              INCORRECT KEY USED      00530200
.ZG97A37      AIF   (K'&ALIASES LE 0).ZG97A38   OK                      00530300
&ZCVAL        SETC '&ZCVAL ALIASES'             INCORRECT KEY USED      00530400
.ZG97A38      AIF   (K'&IMPORTS LE 0).ZG97A39   OK                      00530500
&ZCVAL        SETC '&ZCVAL IMPORTS'             INCORRECT KEY USED      00530600
.ZG97A39      AIF   (K'&EPLOC LE 0).ZG97A40     OK                      00530700
&ZCVAL        SETC '&ZCVAL EPLOC'               INCORRECT KEY USED      00530800
.ZG97A40      AIF   (K'&IDENTIFY LE 0).ZG97A41  OK                      00530900
&ZCVAL        SETC '&ZCVAL IDENTIFY'            INCORRECT KEY USED      00531000
.ZG97A41      AIF   (K'&EXTLST LE 0).ZG97A42    OK                      00531100
&ZCVAL        SETC '&ZCVAL EXTLST'              INCORRECT KEY USED      00531200
.ZG97A42      AIF   (K'&LNAME LE 0).ZG97A43     OK                      00531300
&ZCVAL        SETC '&ZCVAL LNAME'               INCORRECT KEY USED      00531400
.ZG97A43      AIF   (K'&NEWSECT LE 0).ZG97A44   OK                      00531500
&ZCVAL        SETC '&ZCVAL NEWSECT'             INCORRECT KEY USED      00531600
.ZG97A44      AIF   (K'&ENDDATA LE 0).ZG97A45   OK                      00531700
&ZCVAL        SETC '&ZCVAL ENDDATA'             INCORRECT KEY USED      00531800
.ZG97A45      AIF   (K'&MODLIB LE 0).ZG97A46    OK                      00531900
&ZCVAL        SETC '&ZCVAL MODLIB'              INCORRECT KEY USED      00532000
.ZG97A46      AIF   (K'&SNAME LE 0).ZG97A47     OK                      00532100
&ZCVAL        SETC '&ZCVAL SNAME'               INCORRECT KEY USED      00532200
.ZG97A47      AIF   (K'&REPLACE LE 0).ZG97A48   OK                      00532300
&ZCVAL        SETC '&ZCVAL REPLACE'             INCORRECT KEY USED      00532400
.ZG97A48      AIF   (K'&LIBOPT LE 0).ZG97A49    OK                      00532500
&ZCVAL        SETC '&ZCVAL LIBOPT'              INCORRECT KEY USED      00532600
.ZG97A49      AIF   (K'&OPTION LE 0).ZG97A50    OK                      00532700
&ZCVAL        SETC '&ZCVAL OPTION'              INCORRECT KEY USED      00532800
.ZG97A50      AIF   (K'&OPTVAL LE 0).ZG97A51    OK                      00532900
&ZCVAL        SETC '&ZCVAL OPTVAL'              INCORRECT KEY USED      00533000
.ZG97A51      AIF   (K'&PARMS LE 0).ZG97A52     OK                      00533100
&ZCVAL        SETC '&ZCVAL PARMS'               INCORRECT KEY USED      00533200
.ZG97A52      AIF   (K'&FILES LE 0).ZG97A53     OK                      00533300
&ZCVAL        SETC '&ZCVAL FILES'               INCORRECT KEY USED      00533400
.ZG97A53      AIF   (K'&EXITS LE 0).ZG97A54     OK                      00533500
&ZCVAL        SETC '&ZCVAL EXITS'               INCORRECT KEY USED      00533600
.ZG97A54      AIF   (K'&OPTIONS LE 0).ZG97A55   OK                      00533700
&ZCVAL        SETC '&ZCVAL OPTIONS'             INCORRECT KEY USED      00533800
.ZG97A55      AIF   (K'&ENVARS LE 0).ZG97A56    OK                      00533900
&ZCVAL        SETC '&ZCVAL ENVARS'              INCORRECT KEY USED      00534000
.ZG97A56      AIF   (K'&ORIGIN LE 0).ZG97A57    OK                      00534100
&ZCVAL        SETC '&ZCVAL ORIGIN'              INCORRECT KEY USED      00534200
.ZG97A57      AIF   (K'&REGION LE 0).ZG97A58    OK                      00534300
&ZCVAL        SETC '&ZCVAL REGION'              INCORRECT KEY USED      00534400
.ZG97A58      AIF   (K'&ZCVAL LE 0).ZG97A59     OK                      00534500
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               00534600
              AIF  (K'&ZCVAL LE 160).ZG97A59A                           00534700
&ZCVAL        SETC '&ZCVAL'(1,160)                                      00534800
&ZCVAL        SETC '&ZCVAL....'                                         00534900
.ZG97A59A     ANOP                                                      00535000
&ZMS          SETC  '"FUNC'                                             00535100
&ZMS          SETC  '&ZMS.=&FUNC"'                                      00535200
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                00535300
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                00535400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00535500
.ZG97A59      ANOP  ,                                                   00535600
.*----------------------------------------------------------------***   00535700
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00535800
              AIF   (N'&WORKMOD LE 1).ZG99A     CK NUM                  00535900
&ZMS          SETC  '"WORKMOD='                                         00536000
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    00536100
&ZMS          SETC  '&ZMS "WORKMOD"'                                    00536200
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00536300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00536400
.ZG99A        ANOP  ,                                                   00536500
.*-------------------------------------------------------------------   00536600
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00536700
&ZXWORKMOD    SETC  'INPUT'     SET IN/OUTPUT                           00536800
&XWORKMOD     SETC  '&WORKMOD(1)'               SET XVARIABLE           00536900
              AIF   (N'&WORKMOD GT 1).ZG99B     MULTI                   00537000
&XWORKMOD     SETC  '&WORKMOD'  SET XVARIABLE                           00537100
.ZG99B        AIF   (K'&WORKMOD(1) GT 0).ZG99C                          00537200
&ZXWORKMOD    SETC  ''          RESET IN/OUTPUT                         00537300
&ZMS          SETC  ' '                                                 00537400
&ZMS          SETC  '&ZMS "WORKMOD" KEY AND ITS'                        00537500
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00537600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00537700
.ZG99C        ANOP  ,                                                   00537800
.*-------------------------------------------------------------------   00537900
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00538000
              AIF   (K'&ZXWORKMOD LE 0).ZG99R   NOT I/O                 00538100
              AIF   ('&XWORKMOD'(1,1) NE '(').ZG99R                     00538200
&ZCGPR        SETC  '&XWORKMOD'(2,K'&XWORKMOD-2)                        00538300
              AIF   ('&ZCGPR'(1,1) NE '0').ZG99P                        00538400
              AIF   (K'&ZCGPR GT 2).ZG99Q                               00538500
              AIF   ('&ZCGPR' EQ '0').ZG99Q                             00538600
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00538700
              AIF   (T'&ZCGPR NE 'N').ZG99Q     INVALID REG NAME        00538800
.ZG99P        ANOP  ,                                                   00538900
              AIF   (T'&ZCGPR NE 'N').ZG99R     NON NUMERIC             00539000
              AIF   ('&ZCGPR' LT '2').ZG99Q                             00539100
              AIF   ('&ZCGPR' LE '12').ZG99R                            00539200
.ZG99Q        ANOP  ,                                                   00539300
&ZMS          SETC  '"WORKMOD='                                         00539400
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    00539500
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00539600
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00539700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00539800
.ZG99R        ANOP  ,                                                   00539900
.*----------------------------------------------------------------***   00540000
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00540100
              AIF   (N'&PROTECT LE 1).ZG102A    CK NUM                  00540200
&ZMS          SETC  '"PROTECT='                                         00540300
&ZMS          SETC  '&ZMS.&PROTECT"'                                    00540400
&ZMS          SETC  '&ZMS "PROTECT"'                                    00540500
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00540600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00540700
.ZG102A       ANOP  ,                                                   00540800
.*-------------------------------------------------------------------   00540900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00541000
&XPROTECT     SETC  ''          INITIALIZE XVARIABLE                    00541100
.ZG103A   AIF   ('&PROTECT(1)' NE 'Y').ZG104A                           00541200
&XPROTECT     SETC  'Y'         SET KEYWORD                             00541300
.*-------------------------------------------------------------------   00541400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00541500
.ZG104A   AIF   ('&PROTECT(1)' NE 'N').ZG105A                           00541600
&XPROTECT     SETC  'N'         SET KEYWORD                             00541700
.*-------------------------------------------------------------------   00541800
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00541900
.ZG105A       AIF   (K'&XPROTECT GT 0).ZG105C   KEYWORD                 00542000
              AIF   (K'&PROTECT(1) LE 0).ZG105B                         00542100
&ZMS          SETC  '"PROTECT='                                         00542200
&ZMS          SETC  '&ZMS.&PROTECT"'                                    00542300
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           00542400
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00542500
&ZMS          SETC  '&ZMS "Y"'                                          00542600
&ZMS          SETC  '&ZMS OR "N".'                                      00542700
              MNOTE 8,' &ZMS '                                          00542800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00542900
.ZG105B       ANOP  ,                                                   00543000
&XPROTECT     SETC  'Y'         SET DEFAULT KEYWORD                     00543100
.ZG105C       ANOP  ,                                                   00543200
&ZXPROTECT    SETC  'INPUT'     SET IN/OUTPUT                           00543300
.*-------------------------------------------------------------------   00543400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00543500
.ZG106        ANOP  ,                                                   00543600
&ZTLC         SETC 'DLLR'                                               00543700
              AIF   ('&FUNC(1)' NE '&ZTLC').ZG113                       00543800
&XFUNC        SETC  'DLLR'      SET KEYWORD                             00543900
              AIF   (N'&FUNC LE 1).ZG106A       CK NUM                  00544000
&ZMS          SETC  '"FUNC='                                            00544100
&ZMS          SETC  '&ZMS.&FUNC"'                                       00544200
&ZMS          SETC  '&ZMS "FUNC"'                                       00544300
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00544400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00544500
.ZG106A       ANOP  ,                                                   00544600
.*------------------------------------------------------------------    00544700
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00544800
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             00544900
.ZG106A0      AIF   (K'&ANAME LE 0).ZG106A1     OK                      00545000
&ZCVAL        SETC '&ZCVAL ANAME'               INCORRECT KEY USED      00545100
.ZG106A1      AIF   (K'&ENAME LE 0).ZG106A2     OK                      00545200
&ZCVAL        SETC '&ZCVAL ENAME'               INCORRECT KEY USED      00545300
.ZG106A2      AIF   (K'&AMODE LE 0).ZG106A3     OK                      00545400
&ZCVAL        SETC '&ZCVAL AMODE'               INCORRECT KEY USED      00545500
.ZG106A3      AIF   (K'&ATYPE LE 0).ZG106A4     OK                      00545600
&ZCVAL        SETC '&ZCVAL ATYPE'               INCORRECT KEY USED      00545700
.ZG106A4      AIF   (K'&DNAME LE 0).ZG106A5     OK                      00545800
&ZCVAL        SETC '&ZCVAL DNAME'               INCORRECT KEY USED      00545900
.ZG106A5      AIF   (K'&SECTION LE 0).ZG106A6   OK                      00546000
&ZCVAL        SETC '&ZCVAL SECTION'             INCORRECT KEY USED      00546100
.ZG106A6      AIF   (K'&BDY LE 0).ZG106A7       OK                      00546200
&ZCVAL        SETC '&ZCVAL BDY'                 INCORRECT KEY USED      00546300
.ZG106A7      AIF   (K'&CLASSL LE 0).ZG106A8    OK                      00546400
&ZCVAL        SETC '&ZCVAL CLASSL'              INCORRECT KEY USED      00546500
.ZG106A8      AIF   (K'&OLDNAME LE 0).ZG106A9   OK                      00546600
&ZCVAL        SETC '&ZCVAL OLDNAME'             INCORRECT KEY USED      00546700
.ZG106A9      AIF   (K'&NEWNAME LE 0).ZG106A10  OK                      00546800
&ZCVAL        SETC '&ZCVAL NEWNAME'             INCORRECT KEY USED      00546900
.ZG106A10     AIF   (K'&COUNT LE 0).ZG106A11    OK                      00547000
&ZCVAL        SETC '&ZCVAL COUNT'               INCORRECT KEY USED      00547100
.ZG106A11     AIF   (K'&MODE LE 0).ZG106A12     OK                      00547200
&ZCVAL        SETC '&ZCVAL MODE'                INCORRECT KEY USED      00547300
.ZG106A12     AIF   (K'&CLASS LE 0).ZG106A13    OK                      00547400
&ZCVAL        SETC '&ZCVAL CLASS'               INCORRECT KEY USED      00547500
.ZG106A13     AIF   (K'&CALLIB LE 0).ZG106A14   OK                      00547600
&ZCVAL        SETC '&ZCVAL CALLIB'              INCORRECT KEY USED      00547700
.ZG106A14     AIF   (K'&PATHNAME LE 0).ZG106A15  OK                     00547800
&ZCVAL        SETC '&ZCVAL PATHNAME'            INCORRECT KEY USED      00547900
.ZG106A15     AIF   (K'&DIALOG LE 0).ZG106A16   OK                      00548000
&ZCVAL        SETC '&ZCVAL DIALOG'              INCORRECT KEY USED      00548100
.ZG106A16     AIF   (K'&INTENT LE 0).ZG106A17   OK                      00548200
&ZCVAL        SETC '&ZCVAL INTENT'              INCORRECT KEY USED      00548300
.ZG106A17     AIF   (K'&PROTECT LE 0).ZG106A18  OK                      00548400
&ZCVAL        SETC '&ZCVAL PROTECT'             INCORRECT KEY USED      00548500
.ZG106A18     AIF   (K'&AREA LE 0).ZG106A19     OK                      00548600
&ZCVAL        SETC '&ZCVAL AREA'                INCORRECT KEY USED      00548700
.ZG106A19     AIF   (K'&CURSOR LE 0).ZG106A20   OK                      00548800
&ZCVAL        SETC '&ZCVAL CURSOR'              INCORRECT KEY USED      00548900
.ZG106A20     AIF   (K'&RELOC LE 0).ZG106A21    OK                      00549000
&ZCVAL        SETC '&ZCVAL RELOC'               INCORRECT KEY USED      00549100
.ZG106A21     AIF   (K'&RECTYPE LE 0).ZG106A22  OK                      00549200
&ZCVAL        SETC '&ZCVAL RECTYPE'             INCORRECT KEY USED      00549300
.ZG106A22     AIF   (K'&OFFSET LE 0).ZG106A23   OK                      00549400
&ZCVAL        SETC '&ZCVAL OFFSET'              INCORRECT KEY USED      00549500
.ZG106A23     AIF   (K'&SYMBOL LE 0).ZG106A24   OK                      00549600
&ZCVAL        SETC '&ZCVAL SYMBOL'              INCORRECT KEY USED      00549700
.ZG106A24     AIF   (K'&TCOUNT LE 0).ZG106A25   OK                      00549800
&ZCVAL        SETC '&ZCVAL TCOUNT'              INCORRECT KEY USED      00549900
.ZG106A25     AIF   (K'&NTYPE LE 0).ZG106A26    OK                      00550000
&ZCVAL        SETC '&ZCVAL NTYPE'               INCORRECT KEY USED      00550100
.ZG106A26     AIF   (K'&CULIST LE 0).ZG106A27   OK                      00550200
&ZCVAL        SETC '&ZCVAL CULIST'              INCORRECT KEY USED      00550300
.ZG106A27     AIF   (K'&ITYPE LE 0).ZG106A28    OK                      00550400
&ZCVAL        SETC '&ZCVAL ITYPE'               INCORRECT KEY USED      00550500
.ZG106A28     AIF   (K'&DLLNAME LE 0).ZG106A29  OK                      00550600
&ZCVAL        SETC '&ZCVAL DLLNAME'             INCORRECT KEY USED      00550700
.ZG106A29     AIF   (K'&INAME LE 0).ZG106A30    OK                      00550800
&ZCVAL        SETC '&ZCVAL INAME'               INCORRECT KEY USED      00550900
.ZG106A30     AIF   (K'&INTYPE LE 0).ZG106A31   OK                      00551000
&ZCVAL        SETC '&ZCVAL INTYPE'              INCORRECT KEY USED      00551100
.ZG106A31     AIF   (K'&DDNAME LE 0).ZG106A32   OK                      00551200
&ZCVAL        SETC '&ZCVAL DDNAME'              INCORRECT KEY USED      00551300
.ZG106A32     AIF   (K'&DEPTR LE 0).ZG106A33    OK                      00551400
&ZCVAL        SETC '&ZCVAL DEPTR'               INCORRECT KEY USED      00551500
.ZG106A33     AIF   (K'&MEMBER LE 0).ZG106A34   OK                      00551600
&ZCVAL        SETC '&ZCVAL MEMBER'              INCORRECT KEY USED      00551700
.ZG106A34     AIF   (K'&DCBPTR LE 0).ZG106A35   OK                      00551800
&ZCVAL        SETC '&ZCVAL DCBPTR'              INCORRECT KEY USED      00551900
.ZG106A35     AIF   (K'&EPTOKEN LE 0).ZG106A36  OK                      00552000
&ZCVAL        SETC '&ZCVAL EPTOKEN'             INCORRECT KEY USED      00552100
.ZG106A36     AIF   (K'&ATTRIB LE 0).ZG106A37   OK                      00552200
&ZCVAL        SETC '&ZCVAL ATTRIB'              INCORRECT KEY USED      00552300
.ZG106A37     AIF   (K'&ALIASES LE 0).ZG106A38  OK                      00552400
&ZCVAL        SETC '&ZCVAL ALIASES'             INCORRECT KEY USED      00552500
.ZG106A38     AIF   (K'&IMPORTS LE 0).ZG106A39  OK                      00552600
&ZCVAL        SETC '&ZCVAL IMPORTS'             INCORRECT KEY USED      00552700
.ZG106A39     AIF   (K'&EPLOC LE 0).ZG106A40    OK                      00552800
&ZCVAL        SETC '&ZCVAL EPLOC'               INCORRECT KEY USED      00552900
.ZG106A40     AIF   (K'&IDENTIFY LE 0).ZG106A41  OK                     00553000
&ZCVAL        SETC '&ZCVAL IDENTIFY'            INCORRECT KEY USED      00553100
.ZG106A41     AIF   (K'&EXTLST LE 0).ZG106A42   OK                      00553200
&ZCVAL        SETC '&ZCVAL EXTLST'              INCORRECT KEY USED      00553300
.ZG106A42     AIF   (K'&LNAME LE 0).ZG106A43    OK                      00553400
&ZCVAL        SETC '&ZCVAL LNAME'               INCORRECT KEY USED      00553500
.ZG106A43     AIF   (K'&NEWSECT LE 0).ZG106A44  OK                      00553600
&ZCVAL        SETC '&ZCVAL NEWSECT'             INCORRECT KEY USED      00553700
.ZG106A44     AIF   (K'&ENDDATA LE 0).ZG106A45  OK                      00553800
&ZCVAL        SETC '&ZCVAL ENDDATA'             INCORRECT KEY USED      00553900
.ZG106A45     AIF   (K'&MODLIB LE 0).ZG106A46   OK                      00554000
&ZCVAL        SETC '&ZCVAL MODLIB'              INCORRECT KEY USED      00554100
.ZG106A46     AIF   (K'&SNAME LE 0).ZG106A47    OK                      00554200
&ZCVAL        SETC '&ZCVAL SNAME'               INCORRECT KEY USED      00554300
.ZG106A47     AIF   (K'&REPLACE LE 0).ZG106A48  OK                      00554400
&ZCVAL        SETC '&ZCVAL REPLACE'             INCORRECT KEY USED      00554500
.ZG106A48     AIF   (K'&LIBOPT LE 0).ZG106A49   OK                      00554600
&ZCVAL        SETC '&ZCVAL LIBOPT'              INCORRECT KEY USED      00554700
.ZG106A49     AIF   (K'&OPTION LE 0).ZG106A50   OK                      00554800
&ZCVAL        SETC '&ZCVAL OPTION'              INCORRECT KEY USED      00554900
.ZG106A50     AIF   (K'&OPTVAL LE 0).ZG106A51   OK                      00555000
&ZCVAL        SETC '&ZCVAL OPTVAL'              INCORRECT KEY USED      00555100
.ZG106A51     AIF   (K'&PARMS LE 0).ZG106A52    OK                      00555200
&ZCVAL        SETC '&ZCVAL PARMS'               INCORRECT KEY USED      00555300
.ZG106A52     AIF   (K'&FILES LE 0).ZG106A53    OK                      00555400
&ZCVAL        SETC '&ZCVAL FILES'               INCORRECT KEY USED      00555500
.ZG106A53     AIF   (K'&EXITS LE 0).ZG106A54    OK                      00555600
&ZCVAL        SETC '&ZCVAL EXITS'               INCORRECT KEY USED      00555700
.ZG106A54     AIF   (K'&OPTIONS LE 0).ZG106A55  OK                      00555800
&ZCVAL        SETC '&ZCVAL OPTIONS'             INCORRECT KEY USED      00555900
.ZG106A55     AIF   (K'&ENVARS LE 0).ZG106A56   OK                      00556000
&ZCVAL        SETC '&ZCVAL ENVARS'              INCORRECT KEY USED      00556100
.ZG106A56     AIF   (K'&ORIGIN LE 0).ZG106A57   OK                      00556200
&ZCVAL        SETC '&ZCVAL ORIGIN'              INCORRECT KEY USED      00556300
.ZG106A57     AIF   (K'&REGION LE 0).ZG106A58   OK                      00556400
&ZCVAL        SETC '&ZCVAL REGION'              INCORRECT KEY USED      00556500
.ZG106A58     AIF   (K'&ZCVAL LE 0).ZG106A59    OK                      00556600
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               00556700
              AIF  (K'&ZCVAL LE 160).ZG106A59A                          00556800
&ZCVAL        SETC '&ZCVAL'(1,160)                                      00556900
&ZCVAL        SETC '&ZCVAL....'                                         00557000
.ZG106A59A    ANOP                                                      00557100
&ZMS          SETC  '"FUNC'                                             00557200
&ZMS          SETC  '&ZMS.=&FUNC"'                                      00557300
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                00557400
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                00557500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00557600
.ZG106A59     ANOP  ,                                                   00557700
.*----------------------------------------------------------------***   00557800
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00557900
              AIF   (N'&WORKMOD LE 1).ZG108A    CK NUM                  00558000
&ZMS          SETC  '"WORKMOD='                                         00558100
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    00558200
&ZMS          SETC  '&ZMS "WORKMOD"'                                    00558300
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00558400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00558500
.ZG108A       ANOP  ,                                                   00558600
.*-------------------------------------------------------------------   00558700
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00558800
&ZXWORKMOD    SETC  'INPUT'     SET IN/OUTPUT                           00558900
&XWORKMOD     SETC  '&WORKMOD(1)'               SET XVARIABLE           00559000
              AIF   (N'&WORKMOD GT 1).ZG108B    MULTI                   00559100
&XWORKMOD     SETC  '&WORKMOD'  SET XVARIABLE                           00559200
.ZG108B       AIF   (K'&WORKMOD(1) GT 0).ZG108C                         00559300
&ZXWORKMOD    SETC  ''          RESET IN/OUTPUT                         00559400
&ZMS          SETC  ' '                                                 00559500
&ZMS          SETC  '&ZMS "WORKMOD" KEY AND ITS'                        00559600
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00559700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00559800
.ZG108C       ANOP  ,                                                   00559900
.*-------------------------------------------------------------------   00560000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00560100
              AIF   (K'&ZXWORKMOD LE 0).ZG108R  NOT I/O                 00560200
              AIF   ('&XWORKMOD'(1,1) NE '(').ZG108R                    00560300
&ZCGPR        SETC  '&XWORKMOD'(2,K'&XWORKMOD-2)                        00560400
              AIF   ('&ZCGPR'(1,1) NE '0').ZG108P                       00560500
              AIF   (K'&ZCGPR GT 2).ZG108Q                              00560600
              AIF   ('&ZCGPR' EQ '0').ZG108Q                            00560700
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00560800
              AIF   (T'&ZCGPR NE 'N').ZG108Q    INVALID REG NAME        00560900
.ZG108P       ANOP  ,                                                   00561000
              AIF   (T'&ZCGPR NE 'N').ZG108R    NON NUMERIC             00561100
              AIF   ('&ZCGPR' LT '2').ZG108Q                            00561200
              AIF   ('&ZCGPR' LE '12').ZG108R                           00561300
.ZG108Q       ANOP  ,                                                   00561400
&ZMS          SETC  '"WORKMOD='                                         00561500
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    00561600
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00561700
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00561800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00561900
.ZG108R       ANOP  ,                                                   00562000
.*----------------------------------------------------------------***   00562100
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00562200
              AIF   (N'&RENAMEL LE 1).ZG111A    CK NUM                  00562300
&ZMS          SETC  '"RENAMEL='                                         00562400
&ZMS          SETC  '&ZMS.&RENAMEL"'                                    00562500
&ZMS          SETC  '&ZMS "RENAMEL"'                                    00562600
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00562700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00562800
.ZG111A       ANOP  ,                                                   00562900
.*-------------------------------------------------------------------   00563000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00563100
&ZXRENAMEL    SETC  'INPUT'     SET IN/OUTPUT                           00563200
&XRENAMEL     SETC  '&RENAMEL(1)'               SET XVARIABLE           00563300
              AIF   (N'&RENAMEL GT 1).ZG111B    MULTI                   00563400
&XRENAMEL     SETC  '&RENAMEL'  SET XVARIABLE                           00563500
.ZG111B       AIF   (K'&RENAMEL(1) GT 0).ZG111C                         00563600
&ZXRENAMEL    SETC  ''          RESET IN/OUTPUT                         00563700
&ZMS          SETC  ' '                                                 00563800
&ZMS          SETC  '&ZMS "RENAMEL" KEY AND ITS'                        00563900
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00564000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00564100
.ZG111C       ANOP  ,                                                   00564200
.*-------------------------------------------------------------------   00564300
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00564400
              AIF   (K'&ZXRENAMEL LE 0).ZG111R  NOT I/O                 00564500
              AIF   ('&XRENAMEL'(1,1) NE '(').ZG111R                    00564600
&ZCGPR        SETC  '&XRENAMEL'(2,K'&XRENAMEL-2)                        00564700
              AIF   ('&ZCGPR'(1,1) NE '0').ZG111P                       00564800
              AIF   (K'&ZCGPR GT 2).ZG111Q                              00564900
              AIF   ('&ZCGPR' EQ '0').ZG111Q                            00565000
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00565100
              AIF   (T'&ZCGPR NE 'N').ZG111Q    INVALID REG NAME        00565200
.ZG111P       ANOP  ,                                                   00565300
              AIF   (T'&ZCGPR NE 'N').ZG111R    NON NUMERIC             00565400
              AIF   ('&ZCGPR' LT '2').ZG111Q                            00565500
              AIF   ('&ZCGPR' LE '12').ZG111R                           00565600
.ZG111Q       ANOP  ,                                                   00565700
&ZMS          SETC  '"RENAMEL='                                         00565800
&ZMS          SETC  '&ZMS.&RENAMEL"'                                    00565900
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00566000
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00566100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00566200
.ZG111R       ANOP  ,                                                   00566300
.*-------------------------------------------------------------------   00566400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00566500
.ZG113        ANOP  ,                                                   00566600
&ZTLC         SETC 'ENDD'                                               00566700
              AIF   ('&FUNC(1)' NE '&ZTLC').ZG122                       00566800
&XFUNC        SETC  'ENDD'      SET KEYWORD                             00566900
              AIF   (N'&FUNC LE 1).ZG113A       CK NUM                  00567000
&ZMS          SETC  '"FUNC='                                            00567100
&ZMS          SETC  '&ZMS.&FUNC"'                                       00567200
&ZMS          SETC  '&ZMS "FUNC"'                                       00567300
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00567400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00567500
.ZG113A       ANOP  ,                                                   00567600
.*------------------------------------------------------------------    00567700
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00567800
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             00567900
.ZG113A0      AIF   (K'&WORKMOD LE 0).ZG113A1   OK                      00568000
&ZCVAL        SETC '&ZCVAL WORKMOD'             INCORRECT KEY USED      00568100
.ZG113A1      AIF   (K'&ANAME LE 0).ZG113A2     OK                      00568200
&ZCVAL        SETC '&ZCVAL ANAME'               INCORRECT KEY USED      00568300
.ZG113A2      AIF   (K'&ENAME LE 0).ZG113A3     OK                      00568400
&ZCVAL        SETC '&ZCVAL ENAME'               INCORRECT KEY USED      00568500
.ZG113A3      AIF   (K'&AMODE LE 0).ZG113A4     OK                      00568600
&ZCVAL        SETC '&ZCVAL AMODE'               INCORRECT KEY USED      00568700
.ZG113A4      AIF   (K'&ATYPE LE 0).ZG113A5     OK                      00568800
&ZCVAL        SETC '&ZCVAL ATYPE'               INCORRECT KEY USED      00568900
.ZG113A5      AIF   (K'&DNAME LE 0).ZG113A6     OK                      00569000
&ZCVAL        SETC '&ZCVAL DNAME'               INCORRECT KEY USED      00569100
.ZG113A6      AIF   (K'&SECTION LE 0).ZG113A7   OK                      00569200
&ZCVAL        SETC '&ZCVAL SECTION'             INCORRECT KEY USED      00569300
.ZG113A7      AIF   (K'&BDY LE 0).ZG113A8       OK                      00569400
&ZCVAL        SETC '&ZCVAL BDY'                 INCORRECT KEY USED      00569500
.ZG113A8      AIF   (K'&CLASSL LE 0).ZG113A9    OK                      00569600
&ZCVAL        SETC '&ZCVAL CLASSL'              INCORRECT KEY USED      00569700
.ZG113A9      AIF   (K'&OLDNAME LE 0).ZG113A10  OK                      00569800
&ZCVAL        SETC '&ZCVAL OLDNAME'             INCORRECT KEY USED      00569900
.ZG113A10     AIF   (K'&NEWNAME LE 0).ZG113A11  OK                      00570000
&ZCVAL        SETC '&ZCVAL NEWNAME'             INCORRECT KEY USED      00570100
.ZG113A11     AIF   (K'&COUNT LE 0).ZG113A12    OK                      00570200
&ZCVAL        SETC '&ZCVAL COUNT'               INCORRECT KEY USED      00570300
.ZG113A12     AIF   (K'&MODE LE 0).ZG113A13     OK                      00570400
&ZCVAL        SETC '&ZCVAL MODE'                INCORRECT KEY USED      00570500
.ZG113A13     AIF   (K'&CLASS LE 0).ZG113A14    OK                      00570600
&ZCVAL        SETC '&ZCVAL CLASS'               INCORRECT KEY USED      00570700
.ZG113A14     AIF   (K'&CALLIB LE 0).ZG113A15   OK                      00570800
&ZCVAL        SETC '&ZCVAL CALLIB'              INCORRECT KEY USED      00570900
.ZG113A15     AIF   (K'&PATHNAME LE 0).ZG113A16  OK                     00571000
&ZCVAL        SETC '&ZCVAL PATHNAME'            INCORRECT KEY USED      00571100
.ZG113A16     AIF   (K'&INTENT LE 0).ZG113A17   OK                      00571200
&ZCVAL        SETC '&ZCVAL INTENT'              INCORRECT KEY USED      00571300
.ZG113A17     AIF   (K'&RENAMEL LE 0).ZG113A18  OK                      00571400
&ZCVAL        SETC '&ZCVAL RENAMEL'             INCORRECT KEY USED      00571500
.ZG113A18     AIF   (K'&AREA LE 0).ZG113A19     OK                      00571600
&ZCVAL        SETC '&ZCVAL AREA'                INCORRECT KEY USED      00571700
.ZG113A19     AIF   (K'&CURSOR LE 0).ZG113A20   OK                      00571800
&ZCVAL        SETC '&ZCVAL CURSOR'              INCORRECT KEY USED      00571900
.ZG113A20     AIF   (K'&RELOC LE 0).ZG113A21    OK                      00572000
&ZCVAL        SETC '&ZCVAL RELOC'               INCORRECT KEY USED      00572100
.ZG113A21     AIF   (K'&RECTYPE LE 0).ZG113A22  OK                      00572200
&ZCVAL        SETC '&ZCVAL RECTYPE'             INCORRECT KEY USED      00572300
.ZG113A22     AIF   (K'&OFFSET LE 0).ZG113A23   OK                      00572400
&ZCVAL        SETC '&ZCVAL OFFSET'              INCORRECT KEY USED      00572500
.ZG113A23     AIF   (K'&SYMBOL LE 0).ZG113A24   OK                      00572600
&ZCVAL        SETC '&ZCVAL SYMBOL'              INCORRECT KEY USED      00572700
.ZG113A24     AIF   (K'&TCOUNT LE 0).ZG113A25   OK                      00572800
&ZCVAL        SETC '&ZCVAL TCOUNT'              INCORRECT KEY USED      00572900
.ZG113A25     AIF   (K'&NTYPE LE 0).ZG113A26    OK                      00573000
&ZCVAL        SETC '&ZCVAL NTYPE'               INCORRECT KEY USED      00573100
.ZG113A26     AIF   (K'&CULIST LE 0).ZG113A27   OK                      00573200
&ZCVAL        SETC '&ZCVAL CULIST'              INCORRECT KEY USED      00573300
.ZG113A27     AIF   (K'&ITYPE LE 0).ZG113A28    OK                      00573400
&ZCVAL        SETC '&ZCVAL ITYPE'               INCORRECT KEY USED      00573500
.ZG113A28     AIF   (K'&DLLNAME LE 0).ZG113A29  OK                      00573600
&ZCVAL        SETC '&ZCVAL DLLNAME'             INCORRECT KEY USED      00573700
.ZG113A29     AIF   (K'&INAME LE 0).ZG113A30    OK                      00573800
&ZCVAL        SETC '&ZCVAL INAME'               INCORRECT KEY USED      00573900
.ZG113A30     AIF   (K'&INTYPE LE 0).ZG113A31   OK                      00574000
&ZCVAL        SETC '&ZCVAL INTYPE'              INCORRECT KEY USED      00574100
.ZG113A31     AIF   (K'&DDNAME LE 0).ZG113A32   OK                      00574200
&ZCVAL        SETC '&ZCVAL DDNAME'              INCORRECT KEY USED      00574300
.ZG113A32     AIF   (K'&DEPTR LE 0).ZG113A33    OK                      00574400
&ZCVAL        SETC '&ZCVAL DEPTR'               INCORRECT KEY USED      00574500
.ZG113A33     AIF   (K'&MEMBER LE 0).ZG113A34   OK                      00574600
&ZCVAL        SETC '&ZCVAL MEMBER'              INCORRECT KEY USED      00574700
.ZG113A34     AIF   (K'&DCBPTR LE 0).ZG113A35   OK                      00574800
&ZCVAL        SETC '&ZCVAL DCBPTR'              INCORRECT KEY USED      00574900
.ZG113A35     AIF   (K'&EPTOKEN LE 0).ZG113A36  OK                      00575000
&ZCVAL        SETC '&ZCVAL EPTOKEN'             INCORRECT KEY USED      00575100
.ZG113A36     AIF   (K'&ATTRIB LE 0).ZG113A37   OK                      00575200
&ZCVAL        SETC '&ZCVAL ATTRIB'              INCORRECT KEY USED      00575300
.ZG113A37     AIF   (K'&ALIASES LE 0).ZG113A38  OK                      00575400
&ZCVAL        SETC '&ZCVAL ALIASES'             INCORRECT KEY USED      00575500
.ZG113A38     AIF   (K'&IMPORTS LE 0).ZG113A39  OK                      00575600
&ZCVAL        SETC '&ZCVAL IMPORTS'             INCORRECT KEY USED      00575700
.ZG113A39     AIF   (K'&EPLOC LE 0).ZG113A40    OK                      00575800
&ZCVAL        SETC '&ZCVAL EPLOC'               INCORRECT KEY USED      00575900
.ZG113A40     AIF   (K'&IDENTIFY LE 0).ZG113A41  OK                     00576000
&ZCVAL        SETC '&ZCVAL IDENTIFY'            INCORRECT KEY USED      00576100
.ZG113A41     AIF   (K'&EXTLST LE 0).ZG113A42   OK                      00576200
&ZCVAL        SETC '&ZCVAL EXTLST'              INCORRECT KEY USED      00576300
.ZG113A42     AIF   (K'&LNAME LE 0).ZG113A43    OK                      00576400
&ZCVAL        SETC '&ZCVAL LNAME'               INCORRECT KEY USED      00576500
.ZG113A43     AIF   (K'&NEWSECT LE 0).ZG113A44  OK                      00576600
&ZCVAL        SETC '&ZCVAL NEWSECT'             INCORRECT KEY USED      00576700
.ZG113A44     AIF   (K'&ENDDATA LE 0).ZG113A45  OK                      00576800
&ZCVAL        SETC '&ZCVAL ENDDATA'             INCORRECT KEY USED      00576900
.ZG113A45     AIF   (K'&MODLIB LE 0).ZG113A46   OK                      00577000
&ZCVAL        SETC '&ZCVAL MODLIB'              INCORRECT KEY USED      00577100
.ZG113A46     AIF   (K'&SNAME LE 0).ZG113A47    OK                      00577200
&ZCVAL        SETC '&ZCVAL SNAME'               INCORRECT KEY USED      00577300
.ZG113A47     AIF   (K'&REPLACE LE 0).ZG113A48  OK                      00577400
&ZCVAL        SETC '&ZCVAL REPLACE'             INCORRECT KEY USED      00577500
.ZG113A48     AIF   (K'&LIBOPT LE 0).ZG113A49   OK                      00577600
&ZCVAL        SETC '&ZCVAL LIBOPT'              INCORRECT KEY USED      00577700
.ZG113A49     AIF   (K'&OPTION LE 0).ZG113A50   OK                      00577800
&ZCVAL        SETC '&ZCVAL OPTION'              INCORRECT KEY USED      00577900
.ZG113A50     AIF   (K'&OPTVAL LE 0).ZG113A51   OK                      00578000
&ZCVAL        SETC '&ZCVAL OPTVAL'              INCORRECT KEY USED      00578100
.ZG113A51     AIF   (K'&PARMS LE 0).ZG113A52    OK                      00578200
&ZCVAL        SETC '&ZCVAL PARMS'               INCORRECT KEY USED      00578300
.ZG113A52     AIF   (K'&FILES LE 0).ZG113A53    OK                      00578400
&ZCVAL        SETC '&ZCVAL FILES'               INCORRECT KEY USED      00578500
.ZG113A53     AIF   (K'&EXITS LE 0).ZG113A54    OK                      00578600
&ZCVAL        SETC '&ZCVAL EXITS'               INCORRECT KEY USED      00578700
.ZG113A54     AIF   (K'&OPTIONS LE 0).ZG113A55  OK                      00578800
&ZCVAL        SETC '&ZCVAL OPTIONS'             INCORRECT KEY USED      00578900
.ZG113A55     AIF   (K'&ENVARS LE 0).ZG113A56   OK                      00579000
&ZCVAL        SETC '&ZCVAL ENVARS'              INCORRECT KEY USED      00579100
.ZG113A56     AIF   (K'&ORIGIN LE 0).ZG113A57   OK                      00579200
&ZCVAL        SETC '&ZCVAL ORIGIN'              INCORRECT KEY USED      00579300
.ZG113A57     AIF   (K'&REGION LE 0).ZG113A58   OK                      00579400
&ZCVAL        SETC '&ZCVAL REGION'              INCORRECT KEY USED      00579500
.ZG113A58     AIF   (K'&ZCVAL LE 0).ZG113A59    OK                      00579600
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               00579700
              AIF  (K'&ZCVAL LE 160).ZG113A59A                          00579800
&ZCVAL        SETC '&ZCVAL'(1,160)                                      00579900
&ZCVAL        SETC '&ZCVAL....'                                         00580000
.ZG113A59A    ANOP                                                      00580100
&ZMS          SETC  '"FUNC'                                             00580200
&ZMS          SETC  '&ZMS.=&FUNC"'                                      00580300
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                00580400
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                00580500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00580600
.ZG113A59     ANOP  ,                                                   00580700
.*----------------------------------------------------------------***   00580800
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00580900
              AIF   (N'&DIALOG LE 1).ZG115A     CK NUM                  00581000
&ZMS          SETC  '"DIALOG='                                          00581100
&ZMS          SETC  '&ZMS.&DIALOG"'                                     00581200
&ZMS          SETC  '&ZMS "DIALOG"'                                     00581300
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00581400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00581500
.ZG115A       ANOP  ,                                                   00581600
.*-------------------------------------------------------------------   00581700
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00581800
&ZXDIALOG     SETC  'INPUT'     SET IN/OUTPUT                           00581900
&XDIALOG      SETC  '&DIALOG(1)'                SET XVARIABLE           00582000
              AIF   (N'&DIALOG GT 1).ZG115B     MULTI                   00582100
&XDIALOG      SETC  '&DIALOG'   SET XVARIABLE                           00582200
.ZG115B       AIF   (K'&DIALOG(1) GT 0).ZG115C                          00582300
&ZXDIALOG     SETC  ''          RESET IN/OUTPUT                         00582400
&ZMS          SETC  ' '                                                 00582500
&ZMS          SETC  '&ZMS "DIALOG" KEY AND ITS'                         00582600
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00582700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00582800
.ZG115C       ANOP  ,                                                   00582900
.*-------------------------------------------------------------------   00583000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00583100
              AIF   (K'&ZXDIALOG LE 0).ZG115R   NOT I/O                 00583200
              AIF   ('&XDIALOG'(1,1) NE '(').ZG115R                     00583300
&ZCGPR        SETC  '&XDIALOG'(2,K'&XDIALOG-2)                          00583400
              AIF   ('&ZCGPR'(1,1) NE '0').ZG115P                       00583500
              AIF   (K'&ZCGPR GT 2).ZG115Q                              00583600
              AIF   ('&ZCGPR' EQ '0').ZG115Q                            00583700
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00583800
              AIF   (T'&ZCGPR NE 'N').ZG115Q    INVALID REG NAME        00583900
.ZG115P       ANOP  ,                                                   00584000
              AIF   (T'&ZCGPR NE 'N').ZG115R    NON NUMERIC             00584100
              AIF   ('&ZCGPR' LT '2').ZG115Q                            00584200
              AIF   ('&ZCGPR' LE '12').ZG115R                           00584300
.ZG115Q       ANOP  ,                                                   00584400
&ZMS          SETC  '"DIALOG='                                          00584500
&ZMS          SETC  '&ZMS.&DIALOG"'                                     00584600
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00584700
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00584800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00584900
.ZG115R       ANOP  ,                                                   00585000
.*----------------------------------------------------------------***   00585100
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00585200
              AIF   (N'&PROTECT LE 1).ZG118A    CK NUM                  00585300
&ZMS          SETC  '"PROTECT='                                         00585400
&ZMS          SETC  '&ZMS.&PROTECT"'                                    00585500
&ZMS          SETC  '&ZMS "PROTECT"'                                    00585600
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00585700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00585800
.ZG118A       ANOP  ,                                                   00585900
.*-------------------------------------------------------------------   00586000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00586100
&XPROTECT     SETC  ''          INITIALIZE XVARIABLE                    00586200
.ZG119A   AIF   ('&PROTECT(1)' NE 'Y').ZG120A                           00586300
&XPROTECT     SETC  'Y'         SET KEYWORD                             00586400
.*-------------------------------------------------------------------   00586500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00586600
.ZG120A   AIF   ('&PROTECT(1)' NE 'N').ZG121A                           00586700
&XPROTECT     SETC  'N'         SET KEYWORD                             00586800
.*-------------------------------------------------------------------   00586900
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00587000
.ZG121A       AIF   (K'&XPROTECT GT 0).ZG121C   KEYWORD                 00587100
              AIF   (K'&PROTECT(1) LE 0).ZG121B                         00587200
&ZMS          SETC  '"PROTECT='                                         00587300
&ZMS          SETC  '&ZMS.&PROTECT"'                                    00587400
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           00587500
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00587600
&ZMS          SETC  '&ZMS "Y"'                                          00587700
&ZMS          SETC  '&ZMS OR "N".'                                      00587800
              MNOTE 8,' &ZMS '                                          00587900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00588000
.ZG121B       ANOP  ,                                                   00588100
&XPROTECT     SETC  'Y'         SET DEFAULT KEYWORD                     00588200
.ZG121C       ANOP  ,                                                   00588300
&ZXPROTECT    SETC  'INPUT'     SET IN/OUTPUT                           00588400
.*-------------------------------------------------------------------   00588500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00588600
.ZG122        ANOP  ,                                                   00588700
&ZTLC         SETC 'GETD'                                               00588800
              AIF   ('&FUNC(1)' NE '&ZTLC').ZG144                       00588900
&XFUNC        SETC  'GETD'      SET KEYWORD                             00589000
              AIF   (N'&FUNC LE 1).ZG122A       CK NUM                  00589100
&ZMS          SETC  '"FUNC='                                            00589200
&ZMS          SETC  '&ZMS.&FUNC"'                                       00589300
&ZMS          SETC  '&ZMS "FUNC"'                                       00589400
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00589500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00589600
.ZG122A       ANOP  ,                                                   00589700
.*------------------------------------------------------------------    00589800
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00589900
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             00590000
.ZG122A0      AIF   (K'&ANAME LE 0).ZG122A1     OK                      00590100
&ZCVAL        SETC '&ZCVAL ANAME'               INCORRECT KEY USED      00590200
.ZG122A1      AIF   (K'&ENAME LE 0).ZG122A2     OK                      00590300
&ZCVAL        SETC '&ZCVAL ENAME'               INCORRECT KEY USED      00590400
.ZG122A2      AIF   (K'&AMODE LE 0).ZG122A3     OK                      00590500
&ZCVAL        SETC '&ZCVAL AMODE'               INCORRECT KEY USED      00590600
.ZG122A3      AIF   (K'&ATYPE LE 0).ZG122A4     OK                      00590700
&ZCVAL        SETC '&ZCVAL ATYPE'               INCORRECT KEY USED      00590800
.ZG122A4      AIF   (K'&DNAME LE 0).ZG122A5     OK                      00590900
&ZCVAL        SETC '&ZCVAL DNAME'               INCORRECT KEY USED      00591000
.ZG122A5      AIF   (K'&BDY LE 0).ZG122A6       OK                      00591100
&ZCVAL        SETC '&ZCVAL BDY'                 INCORRECT KEY USED      00591200
.ZG122A6      AIF   (K'&CLASSL LE 0).ZG122A7    OK                      00591300
&ZCVAL        SETC '&ZCVAL CLASSL'              INCORRECT KEY USED      00591400
.ZG122A7      AIF   (K'&OLDNAME LE 0).ZG122A8   OK                      00591500
&ZCVAL        SETC '&ZCVAL OLDNAME'             INCORRECT KEY USED      00591600
.ZG122A8      AIF   (K'&NEWNAME LE 0).ZG122A9   OK                      00591700
&ZCVAL        SETC '&ZCVAL NEWNAME'             INCORRECT KEY USED      00591800
.ZG122A9      AIF   (K'&MODE LE 0).ZG122A10     OK                      00591900
&ZCVAL        SETC '&ZCVAL MODE'                INCORRECT KEY USED      00592000
.ZG122A10     AIF   (K'&CALLIB LE 0).ZG122A11   OK                      00592100
&ZCVAL        SETC '&ZCVAL CALLIB'              INCORRECT KEY USED      00592200
.ZG122A11     AIF   (K'&PATHNAME LE 0).ZG122A12  OK                     00592300
&ZCVAL        SETC '&ZCVAL PATHNAME'            INCORRECT KEY USED      00592400
.ZG122A12     AIF   (K'&DIALOG LE 0).ZG122A13   OK                      00592500
&ZCVAL        SETC '&ZCVAL DIALOG'              INCORRECT KEY USED      00592600
.ZG122A13     AIF   (K'&INTENT LE 0).ZG122A14   OK                      00592700
&ZCVAL        SETC '&ZCVAL INTENT'              INCORRECT KEY USED      00592800
.ZG122A14     AIF   (K'&PROTECT LE 0).ZG122A15  OK                      00592900
&ZCVAL        SETC '&ZCVAL PROTECT'             INCORRECT KEY USED      00593000
.ZG122A15     AIF   (K'&RENAMEL LE 0).ZG122A16  OK                      00593100
&ZCVAL        SETC '&ZCVAL RENAMEL'             INCORRECT KEY USED      00593200
.ZG122A16     AIF   (K'&RECTYPE LE 0).ZG122A17  OK                      00593300
&ZCVAL        SETC '&ZCVAL RECTYPE'             INCORRECT KEY USED      00593400
.ZG122A17     AIF   (K'&OFFSET LE 0).ZG122A18   OK                      00593500
&ZCVAL        SETC '&ZCVAL OFFSET'              INCORRECT KEY USED      00593600
.ZG122A18     AIF   (K'&SYMBOL LE 0).ZG122A19   OK                      00593700
&ZCVAL        SETC '&ZCVAL SYMBOL'              INCORRECT KEY USED      00593800
.ZG122A19     AIF   (K'&TCOUNT LE 0).ZG122A20   OK                      00593900
&ZCVAL        SETC '&ZCVAL TCOUNT'              INCORRECT KEY USED      00594000
.ZG122A20     AIF   (K'&NTYPE LE 0).ZG122A21    OK                      00594100
&ZCVAL        SETC '&ZCVAL NTYPE'               INCORRECT KEY USED      00594200
.ZG122A21     AIF   (K'&CULIST LE 0).ZG122A22   OK                      00594300
&ZCVAL        SETC '&ZCVAL CULIST'              INCORRECT KEY USED      00594400
.ZG122A22     AIF   (K'&ITYPE LE 0).ZG122A23    OK                      00594500
&ZCVAL        SETC '&ZCVAL ITYPE'               INCORRECT KEY USED      00594600
.ZG122A23     AIF   (K'&DLLNAME LE 0).ZG122A24  OK                      00594700
&ZCVAL        SETC '&ZCVAL DLLNAME'             INCORRECT KEY USED      00594800
.ZG122A24     AIF   (K'&INAME LE 0).ZG122A25    OK                      00594900
&ZCVAL        SETC '&ZCVAL INAME'               INCORRECT KEY USED      00595000
.ZG122A25     AIF   (K'&INTYPE LE 0).ZG122A26   OK                      00595100
&ZCVAL        SETC '&ZCVAL INTYPE'              INCORRECT KEY USED      00595200
.ZG122A26     AIF   (K'&DDNAME LE 0).ZG122A27   OK                      00595300
&ZCVAL        SETC '&ZCVAL DDNAME'              INCORRECT KEY USED      00595400
.ZG122A27     AIF   (K'&DEPTR LE 0).ZG122A28    OK                      00595500
&ZCVAL        SETC '&ZCVAL DEPTR'               INCORRECT KEY USED      00595600
.ZG122A28     AIF   (K'&MEMBER LE 0).ZG122A29   OK                      00595700
&ZCVAL        SETC '&ZCVAL MEMBER'              INCORRECT KEY USED      00595800
.ZG122A29     AIF   (K'&DCBPTR LE 0).ZG122A30   OK                      00595900
&ZCVAL        SETC '&ZCVAL DCBPTR'              INCORRECT KEY USED      00596000
.ZG122A30     AIF   (K'&EPTOKEN LE 0).ZG122A31  OK                      00596100
&ZCVAL        SETC '&ZCVAL EPTOKEN'             INCORRECT KEY USED      00596200
.ZG122A31     AIF   (K'&ATTRIB LE 0).ZG122A32   OK                      00596300
&ZCVAL        SETC '&ZCVAL ATTRIB'              INCORRECT KEY USED      00596400
.ZG122A32     AIF   (K'&ALIASES LE 0).ZG122A33  OK                      00596500
&ZCVAL        SETC '&ZCVAL ALIASES'             INCORRECT KEY USED      00596600
.ZG122A33     AIF   (K'&IMPORTS LE 0).ZG122A34  OK                      00596700
&ZCVAL        SETC '&ZCVAL IMPORTS'             INCORRECT KEY USED      00596800
.ZG122A34     AIF   (K'&EPLOC LE 0).ZG122A35    OK                      00596900
&ZCVAL        SETC '&ZCVAL EPLOC'               INCORRECT KEY USED      00597000
.ZG122A35     AIF   (K'&IDENTIFY LE 0).ZG122A36  OK                     00597100
&ZCVAL        SETC '&ZCVAL IDENTIFY'            INCORRECT KEY USED      00597200
.ZG122A36     AIF   (K'&EXTLST LE 0).ZG122A37   OK                      00597300
&ZCVAL        SETC '&ZCVAL EXTLST'              INCORRECT KEY USED      00597400
.ZG122A37     AIF   (K'&LNAME LE 0).ZG122A38    OK                      00597500
&ZCVAL        SETC '&ZCVAL LNAME'               INCORRECT KEY USED      00597600
.ZG122A38     AIF   (K'&NEWSECT LE 0).ZG122A39  OK                      00597700
&ZCVAL        SETC '&ZCVAL NEWSECT'             INCORRECT KEY USED      00597800
.ZG122A39     AIF   (K'&ENDDATA LE 0).ZG122A40  OK                      00597900
&ZCVAL        SETC '&ZCVAL ENDDATA'             INCORRECT KEY USED      00598000
.ZG122A40     AIF   (K'&MODLIB LE 0).ZG122A41   OK                      00598100
&ZCVAL        SETC '&ZCVAL MODLIB'              INCORRECT KEY USED      00598200
.ZG122A41     AIF   (K'&SNAME LE 0).ZG122A42    OK                      00598300
&ZCVAL        SETC '&ZCVAL SNAME'               INCORRECT KEY USED      00598400
.ZG122A42     AIF   (K'&REPLACE LE 0).ZG122A43  OK                      00598500
&ZCVAL        SETC '&ZCVAL REPLACE'             INCORRECT KEY USED      00598600
.ZG122A43     AIF   (K'&LIBOPT LE 0).ZG122A44   OK                      00598700
&ZCVAL        SETC '&ZCVAL LIBOPT'              INCORRECT KEY USED      00598800
.ZG122A44     AIF   (K'&OPTION LE 0).ZG122A45   OK                      00598900
&ZCVAL        SETC '&ZCVAL OPTION'              INCORRECT KEY USED      00599000
.ZG122A45     AIF   (K'&OPTVAL LE 0).ZG122A46   OK                      00599100
&ZCVAL        SETC '&ZCVAL OPTVAL'              INCORRECT KEY USED      00599200
.ZG122A46     AIF   (K'&PARMS LE 0).ZG122A47    OK                      00599300
&ZCVAL        SETC '&ZCVAL PARMS'               INCORRECT KEY USED      00599400
.ZG122A47     AIF   (K'&FILES LE 0).ZG122A48    OK                      00599500
&ZCVAL        SETC '&ZCVAL FILES'               INCORRECT KEY USED      00599600
.ZG122A48     AIF   (K'&EXITS LE 0).ZG122A49    OK                      00599700
&ZCVAL        SETC '&ZCVAL EXITS'               INCORRECT KEY USED      00599800
.ZG122A49     AIF   (K'&OPTIONS LE 0).ZG122A50  OK                      00599900
&ZCVAL        SETC '&ZCVAL OPTIONS'             INCORRECT KEY USED      00600000
.ZG122A50     AIF   (K'&ENVARS LE 0).ZG122A51   OK                      00600100
&ZCVAL        SETC '&ZCVAL ENVARS'              INCORRECT KEY USED      00600200
.ZG122A51     AIF   (K'&ORIGIN LE 0).ZG122A52   OK                      00600300
&ZCVAL        SETC '&ZCVAL ORIGIN'              INCORRECT KEY USED      00600400
.ZG122A52     AIF   (K'&REGION LE 0).ZG122A53   OK                      00600500
&ZCVAL        SETC '&ZCVAL REGION'              INCORRECT KEY USED      00600600
.ZG122A53     AIF   (K'&ZCVAL LE 0).ZG122A54    OK                      00600700
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               00600800
              AIF  (K'&ZCVAL LE 160).ZG122A54A                          00600900
&ZCVAL        SETC '&ZCVAL'(1,160)                                      00601000
&ZCVAL        SETC '&ZCVAL....'                                         00601100
.ZG122A54A    ANOP                                                      00601200
&ZMS          SETC  '"FUNC'                                             00601300
&ZMS          SETC  '&ZMS.=&FUNC"'                                      00601400
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                00601500
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                00601600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00601700
.ZG122A54     ANOP  ,                                                   00601800
.*----------------------------------------------------------------***   00601900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00602000
              AIF   (N'&WORKMOD LE 1).ZG124A    CK NUM                  00602100
&ZMS          SETC  '"WORKMOD='                                         00602200
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    00602300
&ZMS          SETC  '&ZMS "WORKMOD"'                                    00602400
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00602500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00602600
.ZG124A       ANOP  ,                                                   00602700
.*-------------------------------------------------------------------   00602800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00602900
&ZXWORKMOD    SETC  'INPUT'     SET IN/OUTPUT                           00603000
&XWORKMOD     SETC  '&WORKMOD(1)'               SET XVARIABLE           00603100
              AIF   (N'&WORKMOD GT 1).ZG124B    MULTI                   00603200
&XWORKMOD     SETC  '&WORKMOD'  SET XVARIABLE                           00603300
.ZG124B       AIF   (K'&WORKMOD(1) GT 0).ZG124C                         00603400
&ZXWORKMOD    SETC  ''          RESET IN/OUTPUT                         00603500
&ZMS          SETC  ' '                                                 00603600
&ZMS          SETC  '&ZMS "WORKMOD" KEY AND ITS'                        00603700
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00603800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00603900
.ZG124C       ANOP  ,                                                   00604000
.*-------------------------------------------------------------------   00604100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00604200
              AIF   (K'&ZXWORKMOD LE 0).ZG124R  NOT I/O                 00604300
              AIF   ('&XWORKMOD'(1,1) NE '(').ZG124R                    00604400
&ZCGPR        SETC  '&XWORKMOD'(2,K'&XWORKMOD-2)                        00604500
              AIF   ('&ZCGPR'(1,1) NE '0').ZG124P                       00604600
              AIF   (K'&ZCGPR GT 2).ZG124Q                              00604700
              AIF   ('&ZCGPR' EQ '0').ZG124Q                            00604800
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00604900
              AIF   (T'&ZCGPR NE 'N').ZG124Q    INVALID REG NAME        00605000
.ZG124P       ANOP  ,                                                   00605100
              AIF   (T'&ZCGPR NE 'N').ZG124R    NON NUMERIC             00605200
              AIF   ('&ZCGPR' LT '2').ZG124Q                            00605300
              AIF   ('&ZCGPR' LE '12').ZG124R                           00605400
.ZG124Q       ANOP  ,                                                   00605500
&ZMS          SETC  '"WORKMOD='                                         00605600
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    00605700
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00605800
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00605900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00606000
.ZG124R       ANOP  ,                                                   00606100
.*----------------------------------------------------------------***   00606200
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00606300
              AIF   (N'&CLASS LE 1).ZG127A      CK NUM                  00606400
&ZMS          SETC  '"CLASS='                                           00606500
&ZMS          SETC  '&ZMS.&CLASS"'                                      00606600
&ZMS          SETC  '&ZMS "CLASS"'                                      00606700
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00606800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00606900
.ZG127A       ANOP  ,                                                   00607000
.*-------------------------------------------------------------------   00607100
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00607200
&ZXCLASS      SETC  'INPUT'     SET IN/OUTPUT                           00607300
&XCLASS       SETC  '&CLASS(1)'                 SET XVARIABLE           00607400
              AIF   (N'&CLASS GT 1).ZG127B      MULTI                   00607500
&XCLASS       SETC  '&CLASS'    SET XVARIABLE                           00607600
.ZG127B       AIF   (K'&CLASS(1) GT 0).ZG127C                           00607700
&ZXCLASS      SETC  ''          RESET IN/OUTPUT                         00607800
&ZMS          SETC  ' '                                                 00607900
&ZMS          SETC  '&ZMS "CLASS" KEY AND ITS'                          00608000
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00608100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00608200
.ZG127C       ANOP  ,                                                   00608300
.*-------------------------------------------------------------------   00608400
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00608500
              AIF   (K'&ZXCLASS LE 0).ZG127R    NOT I/O                 00608600
              AIF   ('&XCLASS'(1,1) NE '(').ZG127R                      00608700
&ZCGPR        SETC  '&XCLASS'(2,K'&XCLASS-2)                            00608800
              AIF   ('&ZCGPR'(1,1) NE '0').ZG127P                       00608900
              AIF   (K'&ZCGPR GT 2).ZG127Q                              00609000
              AIF   ('&ZCGPR' EQ '0').ZG127Q                            00609100
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00609200
              AIF   (T'&ZCGPR NE 'N').ZG127Q    INVALID REG NAME        00609300
.ZG127P       ANOP  ,                                                   00609400
              AIF   (T'&ZCGPR NE 'N').ZG127R    NON NUMERIC             00609500
              AIF   ('&ZCGPR' LT '2').ZG127Q                            00609600
              AIF   ('&ZCGPR' LE '12').ZG127R                           00609700
.ZG127Q       ANOP  ,                                                   00609800
&ZMS          SETC  '"CLASS='                                           00609900
&ZMS          SETC  '&ZMS.&CLASS"'                                      00610000
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00610100
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00610200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00610300
.ZG127R       ANOP  ,                                                   00610400
.*----------------------------------------------------------------***   00610500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00610600
              AIF   (N'&SECTION LE 1).ZG130A    CK NUM                  00610700
&ZMS          SETC  '"SECTION='                                         00610800
&ZMS          SETC  '&ZMS.&SECTION"'                                    00610900
&ZMS          SETC  '&ZMS "SECTION"'                                    00611000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00611100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00611200
.ZG130A       ANOP  ,                                                   00611300
.*-------------------------------------------------------------------   00611400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00611500
&ZXSECTION    SETC  'INPUT'     SET IN/OUTPUT                           00611600
&XSECTION     SETC  '0'                                                 00611700
              AIF   (K'&SECTION(1) LE 0).ZG130B  PARM                   00611800
&XSECTION     SETC  '&SECTION(1)'               SET XVARIABLE           00611900
              AIF   (N'&SECTION GT 1).ZG130B    MULTI                   00612000
&XSECTION     SETC  '&SECTION'  SET XVARIABLE                           00612100
.ZG130B       ANOP  ,                                                   00612200
.*-------------------------------------------------------------------   00612300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00612400
              AIF   (K'&ZXSECTION LE 0).ZG130R  NOT I/O                 00612500
         AIF   ('&XSECTION' EQ '0').ZG130R                              00612600
              AIF   ('&XSECTION'(1,1) NE '(').ZG130R                    00612700
&ZCGPR        SETC  '&XSECTION'(2,K'&XSECTION-2)                        00612800
              AIF   ('&ZCGPR'(1,1) NE '0').ZG130P                       00612900
              AIF   (K'&ZCGPR GT 2).ZG130Q                              00613000
              AIF   ('&ZCGPR' EQ '0').ZG130Q                            00613100
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00613200
              AIF   (T'&ZCGPR NE 'N').ZG130Q    INVALID REG NAME        00613300
.ZG130P       ANOP  ,                                                   00613400
              AIF   (T'&ZCGPR NE 'N').ZG130R    NON NUMERIC             00613500
              AIF   ('&ZCGPR' LT '2').ZG130Q                            00613600
              AIF   ('&ZCGPR' LE '12').ZG130R                           00613700
.ZG130Q       ANOP  ,                                                   00613800
&ZMS          SETC  '"SECTION='                                         00613900
&ZMS          SETC  '&ZMS.&SECTION"'                                    00614000
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00614100
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00614200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00614300
.ZG130R       ANOP  ,                                                   00614400
.*----------------------------------------------------------------***   00614500
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00614600
              AIF   (N'&AREA LE 1).ZG133A       CK NUM                  00614700
&ZMS          SETC  '"AREA='                                            00614800
&ZMS          SETC  '&ZMS.&AREA"'                                       00614900
&ZMS          SETC  '&ZMS "AREA"'                                       00615000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00615100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00615200
.ZG133A       ANOP  ,                                                   00615300
.*-------------------------------------------------------------------   00615400
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00615500
&ZXAREA       SETC  'OUTPUT'    SET IN/OUTPUT                           00615600
&XAREA        SETC  '&AREA(1)'  SET XVARIABLE                           00615700
              AIF   (N'&AREA GT 1).ZG133B       MULTI                   00615800
&XAREA        SETC  '&AREA'     SET XVARIABLE                           00615900
.ZG133B       AIF   (K'&AREA(1) GT 0).ZG133C                            00616000
&ZXAREA       SETC  ''          RESET IN/OUTPUT                         00616100
&ZMS          SETC  ' '                                                 00616200
&ZMS          SETC  '&ZMS "AREA" KEY AND ITS'                           00616300
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00616400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00616500
.ZG133C       ANOP  ,                                                   00616600
.*-------------------------------------------------------------------   00616700
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00616800
              AIF   (K'&ZXAREA LE 0).ZG133R     NOT I/O                 00616900
              AIF   ('&XAREA'(1,1) NE '(').ZG133R                       00617000
&ZCGPR        SETC  '&XAREA'(2,K'&XAREA-2)                              00617100
              AIF   ('&ZCGPR'(1,1) NE '0').ZG133P                       00617200
              AIF   (K'&ZCGPR GT 2).ZG133Q                              00617300
              AIF   ('&ZCGPR' EQ '0').ZG133Q                            00617400
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00617500
              AIF   (T'&ZCGPR NE 'N').ZG133Q    INVALID REG NAME        00617600
.ZG133P       ANOP  ,                                                   00617700
              AIF   (T'&ZCGPR NE 'N').ZG133R    NON NUMERIC             00617800
              AIF   ('&ZCGPR' LT '2').ZG133Q                            00617900
              AIF   ('&ZCGPR' LE '12').ZG133R                           00618000
.ZG133Q       ANOP  ,                                                   00618100
&ZMS          SETC  '"AREA='                                            00618200
&ZMS          SETC  '&ZMS.&AREA"'                                       00618300
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00618400
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00618500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00618600
.ZG133R       ANOP  ,                                                   00618700
.*----------------------------------------------------------------***   00618800
.***AG.KXVAR05 NAME, RQD INOUT, KEYS -XVARIABLE KEY                     00618900
              AIF   (N'&CURSOR LE 1).ZG136A     CK NUM                  00619000
&ZMS          SETC  '"CURSOR='                                          00619100
&ZMS          SETC  '&ZMS.&CURSOR"'                                     00619200
&ZMS          SETC  '&ZMS "CURSOR"'                                     00619300
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00619400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00619500
.ZG136A       ANOP  ,                                                   00619600
.*-------------------------------------------------------------------   00619700
.***AG.KXVAR06 NAME, RQD INOUT, KEYS -XVARIABLE                         00619800
&ZXCURSOR     SETC  'INOUT'     SET IN/OUTPUT                           00619900
&XCURSOR      SETC  '&CURSOR(1)'                SET XVARIABLE           00620000
              AIF   (N'&CURSOR GT 1).ZG136B     MULTI                   00620100
&XCURSOR      SETC  '&CURSOR'   SET XVARIABLE                           00620200
.ZG136B       AIF   (K'&CURSOR(1) GT 0).ZG136C                          00620300
&ZXCURSOR     SETC  ''          RESET IN/OUTPUT                         00620400
&ZMS          SETC  ' '                                                 00620500
&ZMS          SETC  '&ZMS "CURSOR" KEY AND ITS'                         00620600
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00620700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00620800
.ZG136C       ANOP  ,                                                   00620900
.*-------------------------------------------------------------------   00621000
.***AG.KCK02 NAME, RQD INOUT, KEYS -GPR OUT OF RANGE                    00621100
              AIF   (K'&ZXCURSOR LE 0).ZG136R   NOT I/O                 00621200
              AIF   ('&XCURSOR'(1,1) NE '(').ZG136R                     00621300
&ZCGPR        SETC  '&XCURSOR'(2,K'&XCURSOR-2)                          00621400
              AIF   ('&ZCGPR'(1,1) NE '0').ZG136P                       00621500
              AIF   (K'&ZCGPR GT 2).ZG136Q                              00621600
              AIF   ('&ZCGPR' EQ '0').ZG136Q                            00621700
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00621800
              AIF   (T'&ZCGPR NE 'N').ZG136Q    INVALID REG NAME        00621900
.ZG136P       ANOP  ,                                                   00622000
              AIF   (T'&ZCGPR NE 'N').ZG136R    NON NUMERIC             00622100
              AIF   ('&ZCGPR' LT '2').ZG136Q                            00622200
              AIF   ('&ZCGPR' LE '12').ZG136R                           00622300
.ZG136Q       ANOP  ,                                                   00622400
&ZMS          SETC  '"CURSOR='                                          00622500
&ZMS          SETC  '&ZMS.&CURSOR"'                                     00622600
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00622700
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00622800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00622900
.ZG136R       ANOP  ,                                                   00623000
.*----------------------------------------------------------------***   00623100
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00623200
              AIF   (N'&COUNT LE 1).ZG139A      CK NUM                  00623300
&ZMS          SETC  '"COUNT='                                           00623400
&ZMS          SETC  '&ZMS.&COUNT"'                                      00623500
&ZMS          SETC  '&ZMS "COUNT"'                                      00623600
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00623700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00623800
.ZG139A       ANOP  ,                                                   00623900
.*-------------------------------------------------------------------   00624000
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00624100
&ZXCOUNT      SETC  'OUTPUT'    SET IN/OUTPUT                           00624200
&XCOUNT       SETC  '&COUNT(1)'                 SET XVARIABLE           00624300
              AIF   (N'&COUNT GT 1).ZG139B      MULTI                   00624400
&XCOUNT       SETC  '&COUNT'    SET XVARIABLE                           00624500
.ZG139B       AIF   (K'&COUNT(1) GT 0).ZG139C                           00624600
&ZXCOUNT      SETC  ''          RESET IN/OUTPUT                         00624700
&ZMS          SETC  ' '                                                 00624800
&ZMS          SETC  '&ZMS "COUNT" KEY AND ITS'                          00624900
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00625000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00625100
.ZG139C       ANOP  ,                                                   00625200
.*-------------------------------------------------------------------   00625300
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00625400
              AIF   (K'&ZXCOUNT LE 0).ZG139R    NOT I/O                 00625500
              AIF   ('&XCOUNT'(1,1) NE '(').ZG139R                      00625600
&ZCGPR        SETC  '&XCOUNT'(2,K'&XCOUNT-2)                            00625700
              AIF   ('&ZCGPR'(1,1) NE '0').ZG139P                       00625800
              AIF   (K'&ZCGPR GT 2).ZG139Q                              00625900
              AIF   ('&ZCGPR' EQ '0').ZG139Q                            00626000
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00626100
              AIF   (T'&ZCGPR NE 'N').ZG139Q    INVALID REG NAME        00626200
.ZG139P       ANOP  ,                                                   00626300
              AIF   (T'&ZCGPR NE 'N').ZG139R    NON NUMERIC             00626400
              AIF   ('&ZCGPR' LT '2').ZG139Q                            00626500
              AIF   ('&ZCGPR' LE '12').ZG139R                           00626600
.ZG139Q       ANOP  ,                                                   00626700
&ZMS          SETC  '"COUNT='                                           00626800
&ZMS          SETC  '&ZMS.&COUNT"'                                      00626900
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00627000
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00627100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00627200
.ZG139R       ANOP  ,                                                   00627300
.*----------------------------------------------------------------***   00627400
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00627500
              AIF   (N'&RELOC LE 1).ZG142A      CK NUM                  00627600
&ZMS          SETC  '"RELOC='                                           00627700
&ZMS          SETC  '&ZMS.&RELOC"'                                      00627800
&ZMS          SETC  '&ZMS "RELOC"'                                      00627900
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00628000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00628100
.ZG142A       ANOP  ,                                                   00628200
.*-------------------------------------------------------------------   00628300
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00628400
&ZXRELOC      SETC  'INPUT'     SET IN/OUTPUT                           00628500
&XRELOC       SETC  '0'                                                 00628600
              AIF   (K'&RELOC(1) LE 0).ZG142B   PARM                    00628700
&XRELOC       SETC  '&RELOC(1)'                 SET XVARIABLE           00628800
              AIF   (N'&RELOC GT 1).ZG142B      MULTI                   00628900
&XRELOC       SETC  '&RELOC'    SET XVARIABLE                           00629000
.ZG142B       ANOP  ,                                                   00629100
.*-------------------------------------------------------------------   00629200
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00629300
              AIF   (K'&ZXRELOC LE 0).ZG142R    NOT I/O                 00629400
         AIF   ('&XRELOC' EQ '0').ZG142R                                00629500
              AIF   ('&XRELOC'(1,1) NE '(').ZG142R                      00629600
&ZCGPR        SETC  '&XRELOC'(2,K'&XRELOC-2)                            00629700
              AIF   ('&ZCGPR'(1,1) NE '0').ZG142P                       00629800
              AIF   (K'&ZCGPR GT 2).ZG142Q                              00629900
              AIF   ('&ZCGPR' EQ '0').ZG142Q                            00630000
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00630100
              AIF   (T'&ZCGPR NE 'N').ZG142Q    INVALID REG NAME        00630200
.ZG142P       ANOP  ,                                                   00630300
              AIF   (T'&ZCGPR NE 'N').ZG142R    NON NUMERIC             00630400
              AIF   ('&ZCGPR' LT '2').ZG142Q                            00630500
              AIF   ('&ZCGPR' LE '12').ZG142R                           00630600
.ZG142Q       ANOP  ,                                                   00630700
&ZMS          SETC  '"RELOC='                                           00630800
&ZMS          SETC  '&ZMS.&RELOC"'                                      00630900
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00631000
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00631100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00631200
.ZG142R       ANOP  ,                                                   00631300
.*-------------------------------------------------------------------   00631400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00631500
.ZG144        ANOP  ,                                                   00631600
&ZTLC         SETC 'GETE'                                               00631700
              AIF   ('&FUNC(1)' NE '&ZTLC').ZG170                       00631800
&XFUNC        SETC  'GETE'      SET KEYWORD                             00631900
              AIF   (N'&FUNC LE 1).ZG144A       CK NUM                  00632000
&ZMS          SETC  '"FUNC='                                            00632100
&ZMS          SETC  '&ZMS.&FUNC"'                                       00632200
&ZMS          SETC  '&ZMS "FUNC"'                                       00632300
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00632400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00632500
.ZG144A       ANOP  ,                                                   00632600
.*------------------------------------------------------------------    00632700
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00632800
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             00632900
.ZG144A0      AIF   (K'&ANAME LE 0).ZG144A1     OK                      00633000
&ZCVAL        SETC '&ZCVAL ANAME'               INCORRECT KEY USED      00633100
.ZG144A1      AIF   (K'&ENAME LE 0).ZG144A2     OK                      00633200
&ZCVAL        SETC '&ZCVAL ENAME'               INCORRECT KEY USED      00633300
.ZG144A2      AIF   (K'&AMODE LE 0).ZG144A3     OK                      00633400
&ZCVAL        SETC '&ZCVAL AMODE'               INCORRECT KEY USED      00633500
.ZG144A3      AIF   (K'&ATYPE LE 0).ZG144A4     OK                      00633600
&ZCVAL        SETC '&ZCVAL ATYPE'               INCORRECT KEY USED      00633700
.ZG144A4      AIF   (K'&DNAME LE 0).ZG144A5     OK                      00633800
&ZCVAL        SETC '&ZCVAL DNAME'               INCORRECT KEY USED      00633900
.ZG144A5      AIF   (K'&BDY LE 0).ZG144A6       OK                      00634000
&ZCVAL        SETC '&ZCVAL BDY'                 INCORRECT KEY USED      00634100
.ZG144A6      AIF   (K'&CLASSL LE 0).ZG144A7    OK                      00634200
&ZCVAL        SETC '&ZCVAL CLASSL'              INCORRECT KEY USED      00634300
.ZG144A7      AIF   (K'&OLDNAME LE 0).ZG144A8   OK                      00634400
&ZCVAL        SETC '&ZCVAL OLDNAME'             INCORRECT KEY USED      00634500
.ZG144A8      AIF   (K'&NEWNAME LE 0).ZG144A9   OK                      00634600
&ZCVAL        SETC '&ZCVAL NEWNAME'             INCORRECT KEY USED      00634700
.ZG144A9      AIF   (K'&MODE LE 0).ZG144A10     OK                      00634800
&ZCVAL        SETC '&ZCVAL MODE'                INCORRECT KEY USED      00634900
.ZG144A10     AIF   (K'&CALLIB LE 0).ZG144A11   OK                      00635000
&ZCVAL        SETC '&ZCVAL CALLIB'              INCORRECT KEY USED      00635100
.ZG144A11     AIF   (K'&PATHNAME LE 0).ZG144A12  OK                     00635200
&ZCVAL        SETC '&ZCVAL PATHNAME'            INCORRECT KEY USED      00635300
.ZG144A12     AIF   (K'&DIALOG LE 0).ZG144A13   OK                      00635400
&ZCVAL        SETC '&ZCVAL DIALOG'              INCORRECT KEY USED      00635500
.ZG144A13     AIF   (K'&INTENT LE 0).ZG144A14   OK                      00635600
&ZCVAL        SETC '&ZCVAL INTENT'              INCORRECT KEY USED      00635700
.ZG144A14     AIF   (K'&PROTECT LE 0).ZG144A15  OK                      00635800
&ZCVAL        SETC '&ZCVAL PROTECT'             INCORRECT KEY USED      00635900
.ZG144A15     AIF   (K'&RENAMEL LE 0).ZG144A16  OK                      00636000
&ZCVAL        SETC '&ZCVAL RENAMEL'             INCORRECT KEY USED      00636100
.ZG144A16     AIF   (K'&RELOC LE 0).ZG144A17    OK                      00636200
&ZCVAL        SETC '&ZCVAL RELOC'               INCORRECT KEY USED      00636300
.ZG144A17     AIF   (K'&TCOUNT LE 0).ZG144A18   OK                      00636400
&ZCVAL        SETC '&ZCVAL TCOUNT'              INCORRECT KEY USED      00636500
.ZG144A18     AIF   (K'&NTYPE LE 0).ZG144A19    OK                      00636600
&ZCVAL        SETC '&ZCVAL NTYPE'               INCORRECT KEY USED      00636700
.ZG144A19     AIF   (K'&CULIST LE 0).ZG144A20   OK                      00636800
&ZCVAL        SETC '&ZCVAL CULIST'              INCORRECT KEY USED      00636900
.ZG144A20     AIF   (K'&ITYPE LE 0).ZG144A21    OK                      00637000
&ZCVAL        SETC '&ZCVAL ITYPE'               INCORRECT KEY USED      00637100
.ZG144A21     AIF   (K'&DLLNAME LE 0).ZG144A22  OK                      00637200
&ZCVAL        SETC '&ZCVAL DLLNAME'             INCORRECT KEY USED      00637300
.ZG144A22     AIF   (K'&INAME LE 0).ZG144A23    OK                      00637400
&ZCVAL        SETC '&ZCVAL INAME'               INCORRECT KEY USED      00637500
.ZG144A23     AIF   (K'&INTYPE LE 0).ZG144A24   OK                      00637600
&ZCVAL        SETC '&ZCVAL INTYPE'              INCORRECT KEY USED      00637700
.ZG144A24     AIF   (K'&DDNAME LE 0).ZG144A25   OK                      00637800
&ZCVAL        SETC '&ZCVAL DDNAME'              INCORRECT KEY USED      00637900
.ZG144A25     AIF   (K'&DEPTR LE 0).ZG144A26    OK                      00638000
&ZCVAL        SETC '&ZCVAL DEPTR'               INCORRECT KEY USED      00638100
.ZG144A26     AIF   (K'&MEMBER LE 0).ZG144A27   OK                      00638200
&ZCVAL        SETC '&ZCVAL MEMBER'              INCORRECT KEY USED      00638300
.ZG144A27     AIF   (K'&DCBPTR LE 0).ZG144A28   OK                      00638400
&ZCVAL        SETC '&ZCVAL DCBPTR'              INCORRECT KEY USED      00638500
.ZG144A28     AIF   (K'&EPTOKEN LE 0).ZG144A29  OK                      00638600
&ZCVAL        SETC '&ZCVAL EPTOKEN'             INCORRECT KEY USED      00638700
.ZG144A29     AIF   (K'&ATTRIB LE 0).ZG144A30   OK                      00638800
&ZCVAL        SETC '&ZCVAL ATTRIB'              INCORRECT KEY USED      00638900
.ZG144A30     AIF   (K'&ALIASES LE 0).ZG144A31  OK                      00639000
&ZCVAL        SETC '&ZCVAL ALIASES'             INCORRECT KEY USED      00639100
.ZG144A31     AIF   (K'&IMPORTS LE 0).ZG144A32  OK                      00639200
&ZCVAL        SETC '&ZCVAL IMPORTS'             INCORRECT KEY USED      00639300
.ZG144A32     AIF   (K'&EPLOC LE 0).ZG144A33    OK                      00639400
&ZCVAL        SETC '&ZCVAL EPLOC'               INCORRECT KEY USED      00639500
.ZG144A33     AIF   (K'&IDENTIFY LE 0).ZG144A34  OK                     00639600
&ZCVAL        SETC '&ZCVAL IDENTIFY'            INCORRECT KEY USED      00639700
.ZG144A34     AIF   (K'&EXTLST LE 0).ZG144A35   OK                      00639800
&ZCVAL        SETC '&ZCVAL EXTLST'              INCORRECT KEY USED      00639900
.ZG144A35     AIF   (K'&LNAME LE 0).ZG144A36    OK                      00640000
&ZCVAL        SETC '&ZCVAL LNAME'               INCORRECT KEY USED      00640100
.ZG144A36     AIF   (K'&NEWSECT LE 0).ZG144A37  OK                      00640200
&ZCVAL        SETC '&ZCVAL NEWSECT'             INCORRECT KEY USED      00640300
.ZG144A37     AIF   (K'&ENDDATA LE 0).ZG144A38  OK                      00640400
&ZCVAL        SETC '&ZCVAL ENDDATA'             INCORRECT KEY USED      00640500
.ZG144A38     AIF   (K'&MODLIB LE 0).ZG144A39   OK                      00640600
&ZCVAL        SETC '&ZCVAL MODLIB'              INCORRECT KEY USED      00640700
.ZG144A39     AIF   (K'&SNAME LE 0).ZG144A40    OK                      00640800
&ZCVAL        SETC '&ZCVAL SNAME'               INCORRECT KEY USED      00640900
.ZG144A40     AIF   (K'&REPLACE LE 0).ZG144A41  OK                      00641000
&ZCVAL        SETC '&ZCVAL REPLACE'             INCORRECT KEY USED      00641100
.ZG144A41     AIF   (K'&LIBOPT LE 0).ZG144A42   OK                      00641200
&ZCVAL        SETC '&ZCVAL LIBOPT'              INCORRECT KEY USED      00641300
.ZG144A42     AIF   (K'&OPTION LE 0).ZG144A43   OK                      00641400
&ZCVAL        SETC '&ZCVAL OPTION'              INCORRECT KEY USED      00641500
.ZG144A43     AIF   (K'&OPTVAL LE 0).ZG144A44   OK                      00641600
&ZCVAL        SETC '&ZCVAL OPTVAL'              INCORRECT KEY USED      00641700
.ZG144A44     AIF   (K'&PARMS LE 0).ZG144A45    OK                      00641800
&ZCVAL        SETC '&ZCVAL PARMS'               INCORRECT KEY USED      00641900
.ZG144A45     AIF   (K'&FILES LE 0).ZG144A46    OK                      00642000
&ZCVAL        SETC '&ZCVAL FILES'               INCORRECT KEY USED      00642100
.ZG144A46     AIF   (K'&EXITS LE 0).ZG144A47    OK                      00642200
&ZCVAL        SETC '&ZCVAL EXITS'               INCORRECT KEY USED      00642300
.ZG144A47     AIF   (K'&OPTIONS LE 0).ZG144A48  OK                      00642400
&ZCVAL        SETC '&ZCVAL OPTIONS'             INCORRECT KEY USED      00642500
.ZG144A48     AIF   (K'&ENVARS LE 0).ZG144A49   OK                      00642600
&ZCVAL        SETC '&ZCVAL ENVARS'              INCORRECT KEY USED      00642700
.ZG144A49     AIF   (K'&ORIGIN LE 0).ZG144A50   OK                      00642800
&ZCVAL        SETC '&ZCVAL ORIGIN'              INCORRECT KEY USED      00642900
.ZG144A50     AIF   (K'&REGION LE 0).ZG144A51   OK                      00643000
&ZCVAL        SETC '&ZCVAL REGION'              INCORRECT KEY USED      00643100
.ZG144A51     AIF   (K'&ZCVAL LE 0).ZG144A52    OK                      00643200
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               00643300
              AIF  (K'&ZCVAL LE 160).ZG144A52A                          00643400
&ZCVAL        SETC '&ZCVAL'(1,160)                                      00643500
&ZCVAL        SETC '&ZCVAL....'                                         00643600
.ZG144A52A    ANOP                                                      00643700
&ZMS          SETC  '"FUNC'                                             00643800
&ZMS          SETC  '&ZMS.=&FUNC"'                                      00643900
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                00644000
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                00644100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00644200
.ZG144A52     ANOP  ,                                                   00644300
.*----------------------------------------------------------------***   00644400
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00644500
              AIF   (N'&WORKMOD LE 1).ZG146A    CK NUM                  00644600
&ZMS          SETC  '"WORKMOD='                                         00644700
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    00644800
&ZMS          SETC  '&ZMS "WORKMOD"'                                    00644900
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00645000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00645100
.ZG146A       ANOP  ,                                                   00645200
.*-------------------------------------------------------------------   00645300
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00645400
&ZXWORKMOD    SETC  'INPUT'     SET IN/OUTPUT                           00645500
&XWORKMOD     SETC  '&WORKMOD(1)'               SET XVARIABLE           00645600
              AIF   (N'&WORKMOD GT 1).ZG146B    MULTI                   00645700
&XWORKMOD     SETC  '&WORKMOD'  SET XVARIABLE                           00645800
.ZG146B       AIF   (K'&WORKMOD(1) GT 0).ZG146C                         00645900
&ZXWORKMOD    SETC  ''          RESET IN/OUTPUT                         00646000
&ZMS          SETC  ' '                                                 00646100
&ZMS          SETC  '&ZMS "WORKMOD" KEY AND ITS'                        00646200
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00646300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00646400
.ZG146C       ANOP  ,                                                   00646500
.*-------------------------------------------------------------------   00646600
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00646700
              AIF   (K'&ZXWORKMOD LE 0).ZG146R  NOT I/O                 00646800
              AIF   ('&XWORKMOD'(1,1) NE '(').ZG146R                    00646900
&ZCGPR        SETC  '&XWORKMOD'(2,K'&XWORKMOD-2)                        00647000
              AIF   ('&ZCGPR'(1,1) NE '0').ZG146P                       00647100
              AIF   (K'&ZCGPR GT 2).ZG146Q                              00647200
              AIF   ('&ZCGPR' EQ '0').ZG146Q                            00647300
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00647400
              AIF   (T'&ZCGPR NE 'N').ZG146Q    INVALID REG NAME        00647500
.ZG146P       ANOP  ,                                                   00647600
              AIF   (T'&ZCGPR NE 'N').ZG146R    NON NUMERIC             00647700
              AIF   ('&ZCGPR' LT '2').ZG146Q                            00647800
              AIF   ('&ZCGPR' LE '12').ZG146R                           00647900
.ZG146Q       ANOP  ,                                                   00648000
&ZMS          SETC  '"WORKMOD='                                         00648100
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    00648200
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00648300
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00648400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00648500
.ZG146R       ANOP  ,                                                   00648600
.*----------------------------------------------------------------***   00648700
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00648800
              AIF   (N'&SECTION LE 1).ZG149A    CK NUM                  00648900
&ZMS          SETC  '"SECTION='                                         00649000
&ZMS          SETC  '&ZMS.&SECTION"'                                    00649100
&ZMS          SETC  '&ZMS "SECTION"'                                    00649200
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00649300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00649400
.ZG149A       ANOP  ,                                                   00649500
.*-------------------------------------------------------------------   00649600
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00649700
&ZXSECTION    SETC  'INPUT'     SET IN/OUTPUT                           00649800
&XSECTION     SETC  '0'                                                 00649900
              AIF   (K'&SECTION(1) LE 0).ZG149B  PARM                   00650000
&XSECTION     SETC  '&SECTION(1)'               SET XVARIABLE           00650100
              AIF   (N'&SECTION GT 1).ZG149B    MULTI                   00650200
&XSECTION     SETC  '&SECTION'  SET XVARIABLE                           00650300
.ZG149B       ANOP  ,                                                   00650400
.*-------------------------------------------------------------------   00650500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00650600
              AIF   (K'&ZXSECTION LE 0).ZG149R  NOT I/O                 00650700
         AIF   ('&XSECTION' EQ '0').ZG149R                              00650800
              AIF   ('&XSECTION'(1,1) NE '(').ZG149R                    00650900
&ZCGPR        SETC  '&XSECTION'(2,K'&XSECTION-2)                        00651000
              AIF   ('&ZCGPR'(1,1) NE '0').ZG149P                       00651100
              AIF   (K'&ZCGPR GT 2).ZG149Q                              00651200
              AIF   ('&ZCGPR' EQ '0').ZG149Q                            00651300
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00651400
              AIF   (T'&ZCGPR NE 'N').ZG149Q    INVALID REG NAME        00651500
.ZG149P       ANOP  ,                                                   00651600
              AIF   (T'&ZCGPR NE 'N').ZG149R    NON NUMERIC             00651700
              AIF   ('&ZCGPR' LT '2').ZG149Q                            00651800
              AIF   ('&ZCGPR' LE '12').ZG149R                           00651900
.ZG149Q       ANOP  ,                                                   00652000
&ZMS          SETC  '"SECTION='                                         00652100
&ZMS          SETC  '&ZMS.&SECTION"'                                    00652200
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00652300
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00652400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00652500
.ZG149R       ANOP  ,                                                   00652600
.*----------------------------------------------------------------***   00652700
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00652800
              AIF   (N'&RECTYPE LE 1).ZG152A    CK NUM                  00652900
&ZMS          SETC  '"RECTYPE='                                         00653000
&ZMS          SETC  '&ZMS.&RECTYPE"'                                    00653100
&ZMS          SETC  '&ZMS "RECTYPE"'                                    00653200
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00653300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00653400
.ZG152A       ANOP  ,                                                   00653500
.*-------------------------------------------------------------------   00653600
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00653700
&ZXRECTYPE    SETC  'INPUT'     SET IN/OUTPUT                           00653800
&XRECTYPE     SETC  '0'                                                 00653900
              AIF   (K'&RECTYPE(1) LE 0).ZG152B  PARM                   00654000
&XRECTYPE     SETC  '&RECTYPE(1)'               SET XVARIABLE           00654100
              AIF   (N'&RECTYPE GT 1).ZG152B    MULTI                   00654200
&XRECTYPE     SETC  '&RECTYPE'  SET XVARIABLE                           00654300
.ZG152B       ANOP  ,                                                   00654400
.*-------------------------------------------------------------------   00654500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00654600
              AIF   (K'&ZXRECTYPE LE 0).ZG152R  NOT I/O                 00654700
         AIF   ('&XRECTYPE' EQ '0').ZG152R                              00654800
              AIF   ('&XRECTYPE'(1,1) NE '(').ZG152R                    00654900
&ZCGPR        SETC  '&XRECTYPE'(2,K'&XRECTYPE-2)                        00655000
              AIF   ('&ZCGPR'(1,1) NE '0').ZG152P                       00655100
              AIF   (K'&ZCGPR GT 2).ZG152Q                              00655200
              AIF   ('&ZCGPR' EQ '0').ZG152Q                            00655300
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00655400
              AIF   (T'&ZCGPR NE 'N').ZG152Q    INVALID REG NAME        00655500
.ZG152P       ANOP  ,                                                   00655600
              AIF   (T'&ZCGPR NE 'N').ZG152R    NON NUMERIC             00655700
              AIF   ('&ZCGPR' LT '2').ZG152Q                            00655800
              AIF   ('&ZCGPR' LE '12').ZG152R                           00655900
.ZG152Q       ANOP  ,                                                   00656000
&ZMS          SETC  '"RECTYPE='                                         00656100
&ZMS          SETC  '&ZMS.&RECTYPE"'                                    00656200
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00656300
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00656400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00656500
.ZG152R       ANOP  ,                                                   00656600
.*----------------------------------------------------------------***   00656700
.***AG.KMEKY01 NAME, OPT INPUT, ME KEYS -XVARIABLE                      00656800
&XOFFSYM      SETC  ''          INITIALIZE XVARIABLE                    00656900
              AIF   (K'&OFFSET LE 0).ZG155C                             00657000
&ZXOFFSYM     SETC  'INPUT'     SET IN/OUTPUT                           00657100
&XOFFSYM      SETC  'OFFSET'    SET XVARIABLE                           00657200
&ZXOFFSET     SETC  'INPUT'     SET IN/OUTPUT                           00657300
&XOFFSET      SETC  '&OFFSET(1)'                SET XVARIABLE PARM      00657400
              AIF   (N'&OFFSET GT 1).ZG155A                             00657500
&XOFFSET      SETC  '&OFFSET'   SET XVARIABLE PARM                      00657600
.ZG155A       AIF   (N'&OFFSET LE 1).ZG155B     CK NUM                  00657700
&ZMS          SETC  '"OFFSET='                                          00657800
&ZMS          SETC  '&ZMS.&OFFSET"'                                     00657900
&ZMS          SETC  '&ZMS "OFFSET"'                                     00658000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00658100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00658200
.ZG155B       AIF   (K'&XOFFSET GT 0).ZG155C    ONE PARM                00658300
&ZXOFFSYM     SETC  ''          RESET IN/OUTPUT                         00658400
&ZXOFFSET     SETC  ''          RESET IN/OUTPUT                         00658500
&ZMS          SETC  'WHEN "GETE" IS SPECIFIED'                          00658600
&ZMS          SETC  '&ZMS , "OFFSET" KEY AND ITS'                       00658700
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00658800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00658900
.ZG155C       ANOP  ,                                                   00659000
.*----------------------------------------------------------------***   00659100
.***AG.KMEKY02 NAME, OPT INPUT, ME KEYS -XVARIABLE                      00659200
              AIF   (K'&SYMBOL LE 0).ZG156D     NO ME KEY               00659300
              AIF   (N'&SYMBOL LE 1).ZG156A     CK NUM                  00659400
&ZMS          SETC  '"SYMBOL='                                          00659500
&ZMS          SETC  '&ZMS.&SYMBOL"'                                     00659600
&ZMS          SETC  '&ZMS "SYMBOL"'                                     00659700
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00659800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00659900
.ZG156A       AIF   (K'&XOFFSYM LE 0).ZG156B                            00660000
&ZMS          SETC  '"SYMBOL'                                           00660100
&ZMS          SETC  '&ZMS.=&SYMBOL"'                                    00660200
&ZMS          SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'               00660300
&ZMS          SETC  '&ZMS "&XOFFSYM"'                                   00660400
              MNOTE 8,' &ZMS KEY.'                                      00660500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00660600
              AGO   .ZG156D                                             00660700
.*                                                                      00660800
.ZG156B       ANOP  ,                                                   00660900
&ZXOFFSYM     SETC  'INPUT'     SET IN/OUTPUT                           00661000
&XOFFSYM      SETC  'SYMBOL'    SET XVARIABLE                           00661100
&ZXSYMBOL     SETC  'INPUT'     SET IN/OUTPUT                           00661200
&XSYMBOL      SETC  '&SYMBOL(1)'                SET XVARIABLE PARM      00661300
              AIF   (N'&SYMBOL GT 1).ZG156C                             00661400
&XSYMBOL      SETC  '&SYMBOL'   SET XVARIABLE PARM                      00661500
.ZG156C       AIF   (K'&XSYMBOL GT 0).ZG156D    ONE PARM                00661600
&ZXOFFSYM     SETC  ''          RESET IN/OUTPUT                         00661700
&ZXSYMBOL     SETC  ''          RESET IN/OUTPUT                         00661800
&ZMS          SETC  'WHEN "GETE" IS SPECIFIED'                          00661900
&ZMS          SETC  '&ZMS , "SYMBOL" KEY AND ITS'                       00662000
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00662100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00662200
.ZG156D       ANOP  ,                                                   00662300
.*------------------------------------------------------------------    00662400
.***AG.KMEKY07 NAME, OPT INPUT, ME KEYS -CHECK IF KEY ENTERED           00662500
              AIF   (K'&XOFFSYM GT 0).ZG157B                            00662600
&ZXOFFSYM     SETC  'INPUT'     SET IN/OUTPUT                           00662700
&XOFFSYM      SETC  'OFFSET'    SET DEFAULT                             00662800
&ZXOFFSET     SETC  'INPUT'     SET IN/OUTPUT                           00662900
&XOFFSET      SETC  '-1'        SET DEFAULT PARM                        00663000
.ZG157B       ANOP  ,                                                   00663100
.*-------------------------------------------------------------------   00663200
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 00663300
              AIF   (K'&ZXSYMBOL LE 0).ZG157R   NOT I/O                 00663400
              AIF   ('&XSYMBOL'(1,1) NE '(').ZG157R                     00663500
&ZCGPR        SETC  '&XSYMBOL'(2,K'&XSYMBOL-2)                          00663600
              AIF   ('&ZCGPR'(1,1) NE '0').ZG157P                       00663700
              AIF   (K'&ZCGPR GT 2).ZG157Q                              00663800
              AIF   ('&ZCGPR' EQ '0').ZG157Q                            00663900
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00664000
              AIF   (T'&ZCGPR NE 'N').ZG157Q    INVALID REG NAME        00664100
.ZG157P       ANOP  ,                                                   00664200
              AIF   (T'&ZCGPR NE 'N').ZG157R    NON NUMERIC             00664300
              AIF   ('&ZCGPR' LT '2').ZG157Q                            00664400
              AIF   ('&ZCGPR' LE '12').ZG157R                           00664500
.ZG157Q       ANOP  ,                                                   00664600
&ZMS          SETC  '"SYMBOL='                                          00664700
&ZMS          SETC  '&ZMS.&SYMBOL"'                                     00664800
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00664900
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00665000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00665100
.ZG157R       ANOP  ,                                                   00665200
.*-------------------------------------------------------------------   00665300
.***AG.KMEKY13 NAME, OPT INPUT, ME KEYS -PROCESS DEPENDENCIES           00665400
.ZG155ZY  AIF    ('&XOFFSYM' NE 'OFFSET').ZG156ZY                       00665500
.*-------------------------------------------------------------------   00665600
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 00665700
              AIF   (K'&ZXOFFSET LE 0).ZG155R   NOT I/O                 00665800
              AIF   ('&XOFFSET'(1,1) NE '(').ZG155R                     00665900
&ZCGPR        SETC  '&XOFFSET'(2,K'&XOFFSET-2)                          00666000
              AIF   ('&ZCGPR'(1,1) NE '0').ZG155P                       00666100
              AIF   (K'&ZCGPR GT 2).ZG155Q                              00666200
              AIF   ('&ZCGPR' EQ '0').ZG155Q                            00666300
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00666400
              AIF   (T'&ZCGPR NE 'N').ZG155Q    INVALID REG NAME        00666500
.ZG155P       ANOP  ,                                                   00666600
              AIF   (T'&ZCGPR NE 'N').ZG155R    NON NUMERIC             00666700
              AIF   ('&ZCGPR' LT '2').ZG155Q                            00666800
              AIF   ('&ZCGPR' LE '12').ZG155R                           00666900
.ZG155Q       ANOP  ,                                                   00667000
&ZMS          SETC  '"OFFSET='                                          00667100
&ZMS          SETC  '&ZMS.&OFFSET"'                                     00667200
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00667300
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00667400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00667500
.ZG155R       ANOP  ,                                                   00667600
.*-------------------------------------------------------------------   00667700
.***AG.KMEKY13 NAME, OPT INPUT, ME KEYS -PROCESS DEPENDENCIES           00667800
.ZG156ZY  AIF    ('&XOFFSYM' NE 'SYMBOL').ZG157ZY                       00667900
.*-------------------------------------------------------------------   00668000
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 00668100
              AIF   (K'&ZXSYMBOL LE 0).ZG156R   NOT I/O                 00668200
              AIF   ('&XSYMBOL'(1,1) NE '(').ZG156R                     00668300
&ZCGPR        SETC  '&XSYMBOL'(2,K'&XSYMBOL-2)                          00668400
              AIF   ('&ZCGPR'(1,1) NE '0').ZG156P                       00668500
              AIF   (K'&ZCGPR GT 2).ZG156Q                              00668600
              AIF   ('&ZCGPR' EQ '0').ZG156Q                            00668700
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00668800
              AIF   (T'&ZCGPR NE 'N').ZG156Q    INVALID REG NAME        00668900
.ZG156P       ANOP  ,                                                   00669000
              AIF   (T'&ZCGPR NE 'N').ZG156R    NON NUMERIC             00669100
              AIF   ('&ZCGPR' LT '2').ZG156Q                            00669200
              AIF   ('&ZCGPR' LE '12').ZG156R                           00669300
.ZG156Q       ANOP  ,                                                   00669400
&ZMS          SETC  '"SYMBOL='                                          00669500
&ZMS          SETC  '&ZMS.&SYMBOL"'                                     00669600
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00669700
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00669800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00669900
.ZG156R       ANOP  ,                                                   00670000
.*-------------------------------------------------------------------   00670100
.***AG.KMEKY15 NAME, OPT INPUT, ME KEYS -END                            00670200
.ZG157ZY      ANOP ,            END MUTUALLY EXCLUSIVE KEYS             00670300
.*----------------------------------------------------------------***   00670400
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00670500
              AIF   (N'&AREA LE 1).ZG159A       CK NUM                  00670600
&ZMS          SETC  '"AREA='                                            00670700
&ZMS          SETC  '&ZMS.&AREA"'                                       00670800
&ZMS          SETC  '&ZMS "AREA"'                                       00670900
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00671000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00671100
.ZG159A       ANOP  ,                                                   00671200
.*-------------------------------------------------------------------   00671300
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00671400
&ZXAREA       SETC  'OUTPUT'    SET IN/OUTPUT                           00671500
&XAREA        SETC  '&AREA(1)'  SET XVARIABLE                           00671600
              AIF   (N'&AREA GT 1).ZG159B       MULTI                   00671700
&XAREA        SETC  '&AREA'     SET XVARIABLE                           00671800
.ZG159B       AIF   (K'&AREA(1) GT 0).ZG159C                            00671900
&ZXAREA       SETC  ''          RESET IN/OUTPUT                         00672000
&ZMS          SETC  ' '                                                 00672100
&ZMS          SETC  '&ZMS "AREA" KEY AND ITS'                           00672200
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00672300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00672400
.ZG159C       ANOP  ,                                                   00672500
.*-------------------------------------------------------------------   00672600
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00672700
              AIF   (K'&ZXAREA LE 0).ZG159R     NOT I/O                 00672800
              AIF   ('&XAREA'(1,1) NE '(').ZG159R                       00672900
&ZCGPR        SETC  '&XAREA'(2,K'&XAREA-2)                              00673000
              AIF   ('&ZCGPR'(1,1) NE '0').ZG159P                       00673100
              AIF   (K'&ZCGPR GT 2).ZG159Q                              00673200
              AIF   ('&ZCGPR' EQ '0').ZG159Q                            00673300
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00673400
              AIF   (T'&ZCGPR NE 'N').ZG159Q    INVALID REG NAME        00673500
.ZG159P       ANOP  ,                                                   00673600
              AIF   (T'&ZCGPR NE 'N').ZG159R    NON NUMERIC             00673700
              AIF   ('&ZCGPR' LT '2').ZG159Q                            00673800
              AIF   ('&ZCGPR' LE '12').ZG159R                           00673900
.ZG159Q       ANOP  ,                                                   00674000
&ZMS          SETC  '"AREA='                                            00674100
&ZMS          SETC  '&ZMS.&AREA"'                                       00674200
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00674300
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00674400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00674500
.ZG159R       ANOP  ,                                                   00674600
.*----------------------------------------------------------------***   00674700
.***AG.KXVAR05 NAME, RQD INOUT, KEYS -XVARIABLE KEY                     00674800
              AIF   (N'&CURSOR LE 1).ZG162A     CK NUM                  00674900
&ZMS          SETC  '"CURSOR='                                          00675000
&ZMS          SETC  '&ZMS.&CURSOR"'                                     00675100
&ZMS          SETC  '&ZMS "CURSOR"'                                     00675200
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00675300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00675400
.ZG162A       ANOP  ,                                                   00675500
.*-------------------------------------------------------------------   00675600
.***AG.KXVAR06 NAME, RQD INOUT, KEYS -XVARIABLE                         00675700
&ZXCURSOR     SETC  'INOUT'     SET IN/OUTPUT                           00675800
&XCURSOR      SETC  '&CURSOR(1)'                SET XVARIABLE           00675900
              AIF   (N'&CURSOR GT 1).ZG162B     MULTI                   00676000
&XCURSOR      SETC  '&CURSOR'   SET XVARIABLE                           00676100
.ZG162B       AIF   (K'&CURSOR(1) GT 0).ZG162C                          00676200
&ZXCURSOR     SETC  ''          RESET IN/OUTPUT                         00676300
&ZMS          SETC  ' '                                                 00676400
&ZMS          SETC  '&ZMS "CURSOR" KEY AND ITS'                         00676500
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00676600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00676700
.ZG162C       ANOP  ,                                                   00676800
.*-------------------------------------------------------------------   00676900
.***AG.KCK02 NAME, RQD INOUT, KEYS -GPR OUT OF RANGE                    00677000
              AIF   (K'&ZXCURSOR LE 0).ZG162R   NOT I/O                 00677100
              AIF   ('&XCURSOR'(1,1) NE '(').ZG162R                     00677200
&ZCGPR        SETC  '&XCURSOR'(2,K'&XCURSOR-2)                          00677300
              AIF   ('&ZCGPR'(1,1) NE '0').ZG162P                       00677400
              AIF   (K'&ZCGPR GT 2).ZG162Q                              00677500
              AIF   ('&ZCGPR' EQ '0').ZG162Q                            00677600
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00677700
              AIF   (T'&ZCGPR NE 'N').ZG162Q    INVALID REG NAME        00677800
.ZG162P       ANOP  ,                                                   00677900
              AIF   (T'&ZCGPR NE 'N').ZG162R    NON NUMERIC             00678000
              AIF   ('&ZCGPR' LT '2').ZG162Q                            00678100
              AIF   ('&ZCGPR' LE '12').ZG162R                           00678200
.ZG162Q       ANOP  ,                                                   00678300
&ZMS          SETC  '"CURSOR='                                          00678400
&ZMS          SETC  '&ZMS.&CURSOR"'                                     00678500
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00678600
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00678700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00678800
.ZG162R       ANOP  ,                                                   00678900
.*----------------------------------------------------------------***   00679000
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00679100
              AIF   (N'&COUNT LE 1).ZG165A      CK NUM                  00679200
&ZMS          SETC  '"COUNT='                                           00679300
&ZMS          SETC  '&ZMS.&COUNT"'                                      00679400
&ZMS          SETC  '&ZMS "COUNT"'                                      00679500
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00679600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00679700
.ZG165A       ANOP  ,                                                   00679800
.*-------------------------------------------------------------------   00679900
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00680000
&ZXCOUNT      SETC  'OUTPUT'    SET IN/OUTPUT                           00680100
&XCOUNT       SETC  '&COUNT(1)'                 SET XVARIABLE           00680200
              AIF   (N'&COUNT GT 1).ZG165B      MULTI                   00680300
&XCOUNT       SETC  '&COUNT'    SET XVARIABLE                           00680400
.ZG165B       AIF   (K'&COUNT(1) GT 0).ZG165C                           00680500
&ZXCOUNT      SETC  ''          RESET IN/OUTPUT                         00680600
&ZMS          SETC  ' '                                                 00680700
&ZMS          SETC  '&ZMS "COUNT" KEY AND ITS'                          00680800
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00680900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00681000
.ZG165C       ANOP  ,                                                   00681100
.*-------------------------------------------------------------------   00681200
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00681300
              AIF   (K'&ZXCOUNT LE 0).ZG165R    NOT I/O                 00681400
              AIF   ('&XCOUNT'(1,1) NE '(').ZG165R                      00681500
&ZCGPR        SETC  '&XCOUNT'(2,K'&XCOUNT-2)                            00681600
              AIF   ('&ZCGPR'(1,1) NE '0').ZG165P                       00681700
              AIF   (K'&ZCGPR GT 2).ZG165Q                              00681800
              AIF   ('&ZCGPR' EQ '0').ZG165Q                            00681900
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00682000
              AIF   (T'&ZCGPR NE 'N').ZG165Q    INVALID REG NAME        00682100
.ZG165P       ANOP  ,                                                   00682200
              AIF   (T'&ZCGPR NE 'N').ZG165R    NON NUMERIC             00682300
              AIF   ('&ZCGPR' LT '2').ZG165Q                            00682400
              AIF   ('&ZCGPR' LE '12').ZG165R                           00682500
.ZG165Q       ANOP  ,                                                   00682600
&ZMS          SETC  '"COUNT='                                           00682700
&ZMS          SETC  '&ZMS.&COUNT"'                                      00682800
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00682900
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00683000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00683100
.ZG165R       ANOP  ,                                                   00683200
.*----------------------------------------------------------------***   00683300
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00683400
              AIF   (N'&CLASS LE 1).ZG168A      CK NUM                  00683500
&ZMS          SETC  '"CLASS='                                           00683600
&ZMS          SETC  '&ZMS.&CLASS"'                                      00683700
&ZMS          SETC  '&ZMS "CLASS"'                                      00683800
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00683900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00684000
.ZG168A       ANOP  ,                                                   00684100
.*-------------------------------------------------------------------   00684200
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00684300
&ZXCLASS      SETC  'INPUT'     SET IN/OUTPUT                           00684400
&XCLASS       SETC  '0'                                                 00684500
              AIF   (K'&CLASS(1) LE 0).ZG168B   PARM                    00684600
&XCLASS       SETC  '&CLASS(1)'                 SET XVARIABLE           00684700
              AIF   (N'&CLASS GT 1).ZG168B      MULTI                   00684800
&XCLASS       SETC  '&CLASS'    SET XVARIABLE                           00684900
.ZG168B       ANOP  ,                                                   00685000
.*-------------------------------------------------------------------   00685100
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00685200
              AIF   (K'&ZXCLASS LE 0).ZG168R    NOT I/O                 00685300
         AIF   ('&XCLASS' EQ '0').ZG168R                                00685400
              AIF   ('&XCLASS'(1,1) NE '(').ZG168R                      00685500
&ZCGPR        SETC  '&XCLASS'(2,K'&XCLASS-2)                            00685600
              AIF   ('&ZCGPR'(1,1) NE '0').ZG168P                       00685700
              AIF   (K'&ZCGPR GT 2).ZG168Q                              00685800
              AIF   ('&ZCGPR' EQ '0').ZG168Q                            00685900
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00686000
              AIF   (T'&ZCGPR NE 'N').ZG168Q    INVALID REG NAME        00686100
.ZG168P       ANOP  ,                                                   00686200
              AIF   (T'&ZCGPR NE 'N').ZG168R    NON NUMERIC             00686300
              AIF   ('&ZCGPR' LT '2').ZG168Q                            00686400
              AIF   ('&ZCGPR' LE '12').ZG168R                           00686500
.ZG168Q       ANOP  ,                                                   00686600
&ZMS          SETC  '"CLASS='                                           00686700
&ZMS          SETC  '&ZMS.&CLASS"'                                      00686800
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00686900
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00687000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00687100
.ZG168R       ANOP  ,                                                   00687200
.*-------------------------------------------------------------------   00687300
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00687400
.ZG170        ANOP  ,                                                   00687500
&ZTLC         SETC 'GETN'                                               00687600
              AIF   ('&FUNC(1)' NE '&ZTLC').ZG191                       00687700
&XFUNC        SETC  'GETN'      SET KEYWORD                             00687800
              AIF   (N'&FUNC LE 1).ZG170A       CK NUM                  00687900
&ZMS          SETC  '"FUNC='                                            00688000
&ZMS          SETC  '&ZMS.&FUNC"'                                       00688100
&ZMS          SETC  '&ZMS "FUNC"'                                       00688200
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00688300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00688400
.ZG170A       ANOP  ,                                                   00688500
.*------------------------------------------------------------------    00688600
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00688700
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             00688800
.ZG170A0      AIF   (K'&ANAME LE 0).ZG170A1     OK                      00688900
&ZCVAL        SETC '&ZCVAL ANAME'               INCORRECT KEY USED      00689000
.ZG170A1      AIF   (K'&ENAME LE 0).ZG170A2     OK                      00689100
&ZCVAL        SETC '&ZCVAL ENAME'               INCORRECT KEY USED      00689200
.ZG170A2      AIF   (K'&AMODE LE 0).ZG170A3     OK                      00689300
&ZCVAL        SETC '&ZCVAL AMODE'               INCORRECT KEY USED      00689400
.ZG170A3      AIF   (K'&ATYPE LE 0).ZG170A4     OK                      00689500
&ZCVAL        SETC '&ZCVAL ATYPE'               INCORRECT KEY USED      00689600
.ZG170A4      AIF   (K'&DNAME LE 0).ZG170A5     OK                      00689700
&ZCVAL        SETC '&ZCVAL DNAME'               INCORRECT KEY USED      00689800
.ZG170A5      AIF   (K'&SECTION LE 0).ZG170A6   OK                      00689900
&ZCVAL        SETC '&ZCVAL SECTION'             INCORRECT KEY USED      00690000
.ZG170A6      AIF   (K'&BDY LE 0).ZG170A7       OK                      00690100
&ZCVAL        SETC '&ZCVAL BDY'                 INCORRECT KEY USED      00690200
.ZG170A7      AIF   (K'&CLASSL LE 0).ZG170A8    OK                      00690300
&ZCVAL        SETC '&ZCVAL CLASSL'              INCORRECT KEY USED      00690400
.ZG170A8      AIF   (K'&OLDNAME LE 0).ZG170A9   OK                      00690500
&ZCVAL        SETC '&ZCVAL OLDNAME'             INCORRECT KEY USED      00690600
.ZG170A9      AIF   (K'&NEWNAME LE 0).ZG170A10  OK                      00690700
&ZCVAL        SETC '&ZCVAL NEWNAME'             INCORRECT KEY USED      00690800
.ZG170A10     AIF   (K'&MODE LE 0).ZG170A11     OK                      00690900
&ZCVAL        SETC '&ZCVAL MODE'                INCORRECT KEY USED      00691000
.ZG170A11     AIF   (K'&CLASS LE 0).ZG170A12    OK                      00691100
&ZCVAL        SETC '&ZCVAL CLASS'               INCORRECT KEY USED      00691200
.ZG170A12     AIF   (K'&CALLIB LE 0).ZG170A13   OK                      00691300
&ZCVAL        SETC '&ZCVAL CALLIB'              INCORRECT KEY USED      00691400
.ZG170A13     AIF   (K'&PATHNAME LE 0).ZG170A14  OK                     00691500
&ZCVAL        SETC '&ZCVAL PATHNAME'            INCORRECT KEY USED      00691600
.ZG170A14     AIF   (K'&DIALOG LE 0).ZG170A15   OK                      00691700
&ZCVAL        SETC '&ZCVAL DIALOG'              INCORRECT KEY USED      00691800
.ZG170A15     AIF   (K'&INTENT LE 0).ZG170A16   OK                      00691900
&ZCVAL        SETC '&ZCVAL INTENT'              INCORRECT KEY USED      00692000
.ZG170A16     AIF   (K'&PROTECT LE 0).ZG170A17  OK                      00692100
&ZCVAL        SETC '&ZCVAL PROTECT'             INCORRECT KEY USED      00692200
.ZG170A17     AIF   (K'&RENAMEL LE 0).ZG170A18  OK                      00692300
&ZCVAL        SETC '&ZCVAL RENAMEL'             INCORRECT KEY USED      00692400
.ZG170A18     AIF   (K'&RELOC LE 0).ZG170A19    OK                      00692500
&ZCVAL        SETC '&ZCVAL RELOC'               INCORRECT KEY USED      00692600
.ZG170A19     AIF   (K'&RECTYPE LE 0).ZG170A20  OK                      00692700
&ZCVAL        SETC '&ZCVAL RECTYPE'             INCORRECT KEY USED      00692800
.ZG170A20     AIF   (K'&OFFSET LE 0).ZG170A21   OK                      00692900
&ZCVAL        SETC '&ZCVAL OFFSET'              INCORRECT KEY USED      00693000
.ZG170A21     AIF   (K'&SYMBOL LE 0).ZG170A22   OK                      00693100
&ZCVAL        SETC '&ZCVAL SYMBOL'              INCORRECT KEY USED      00693200
.ZG170A22     AIF   (K'&CULIST LE 0).ZG170A23   OK                      00693300
&ZCVAL        SETC '&ZCVAL CULIST'              INCORRECT KEY USED      00693400
.ZG170A23     AIF   (K'&ITYPE LE 0).ZG170A24    OK                      00693500
&ZCVAL        SETC '&ZCVAL ITYPE'               INCORRECT KEY USED      00693600
.ZG170A24     AIF   (K'&DLLNAME LE 0).ZG170A25  OK                      00693700
&ZCVAL        SETC '&ZCVAL DLLNAME'             INCORRECT KEY USED      00693800
.ZG170A25     AIF   (K'&INAME LE 0).ZG170A26    OK                      00693900
&ZCVAL        SETC '&ZCVAL INAME'               INCORRECT KEY USED      00694000
.ZG170A26     AIF   (K'&INTYPE LE 0).ZG170A27   OK                      00694100
&ZCVAL        SETC '&ZCVAL INTYPE'              INCORRECT KEY USED      00694200
.ZG170A27     AIF   (K'&DDNAME LE 0).ZG170A28   OK                      00694300
&ZCVAL        SETC '&ZCVAL DDNAME'              INCORRECT KEY USED      00694400
.ZG170A28     AIF   (K'&DEPTR LE 0).ZG170A29    OK                      00694500
&ZCVAL        SETC '&ZCVAL DEPTR'               INCORRECT KEY USED      00694600
.ZG170A29     AIF   (K'&MEMBER LE 0).ZG170A30   OK                      00694700
&ZCVAL        SETC '&ZCVAL MEMBER'              INCORRECT KEY USED      00694800
.ZG170A30     AIF   (K'&DCBPTR LE 0).ZG170A31   OK                      00694900
&ZCVAL        SETC '&ZCVAL DCBPTR'              INCORRECT KEY USED      00695000
.ZG170A31     AIF   (K'&EPTOKEN LE 0).ZG170A32  OK                      00695100
&ZCVAL        SETC '&ZCVAL EPTOKEN'             INCORRECT KEY USED      00695200
.ZG170A32     AIF   (K'&ATTRIB LE 0).ZG170A33   OK                      00695300
&ZCVAL        SETC '&ZCVAL ATTRIB'              INCORRECT KEY USED      00695400
.ZG170A33     AIF   (K'&ALIASES LE 0).ZG170A34  OK                      00695500
&ZCVAL        SETC '&ZCVAL ALIASES'             INCORRECT KEY USED      00695600
.ZG170A34     AIF   (K'&IMPORTS LE 0).ZG170A35  OK                      00695700
&ZCVAL        SETC '&ZCVAL IMPORTS'             INCORRECT KEY USED      00695800
.ZG170A35     AIF   (K'&EPLOC LE 0).ZG170A36    OK                      00695900
&ZCVAL        SETC '&ZCVAL EPLOC'               INCORRECT KEY USED      00696000
.ZG170A36     AIF   (K'&IDENTIFY LE 0).ZG170A37  OK                     00696100
&ZCVAL        SETC '&ZCVAL IDENTIFY'            INCORRECT KEY USED      00696200
.ZG170A37     AIF   (K'&EXTLST LE 0).ZG170A38   OK                      00696300
&ZCVAL        SETC '&ZCVAL EXTLST'              INCORRECT KEY USED      00696400
.ZG170A38     AIF   (K'&LNAME LE 0).ZG170A39    OK                      00696500
&ZCVAL        SETC '&ZCVAL LNAME'               INCORRECT KEY USED      00696600
.ZG170A39     AIF   (K'&NEWSECT LE 0).ZG170A40  OK                      00696700
&ZCVAL        SETC '&ZCVAL NEWSECT'             INCORRECT KEY USED      00696800
.ZG170A40     AIF   (K'&ENDDATA LE 0).ZG170A41  OK                      00696900
&ZCVAL        SETC '&ZCVAL ENDDATA'             INCORRECT KEY USED      00697000
.ZG170A41     AIF   (K'&MODLIB LE 0).ZG170A42   OK                      00697100
&ZCVAL        SETC '&ZCVAL MODLIB'              INCORRECT KEY USED      00697200
.ZG170A42     AIF   (K'&SNAME LE 0).ZG170A43    OK                      00697300
&ZCVAL        SETC '&ZCVAL SNAME'               INCORRECT KEY USED      00697400
.ZG170A43     AIF   (K'&REPLACE LE 0).ZG170A44  OK                      00697500
&ZCVAL        SETC '&ZCVAL REPLACE'             INCORRECT KEY USED      00697600
.ZG170A44     AIF   (K'&LIBOPT LE 0).ZG170A45   OK                      00697700
&ZCVAL        SETC '&ZCVAL LIBOPT'              INCORRECT KEY USED      00697800
.ZG170A45     AIF   (K'&OPTION LE 0).ZG170A46   OK                      00697900
&ZCVAL        SETC '&ZCVAL OPTION'              INCORRECT KEY USED      00698000
.ZG170A46     AIF   (K'&OPTVAL LE 0).ZG170A47   OK                      00698100
&ZCVAL        SETC '&ZCVAL OPTVAL'              INCORRECT KEY USED      00698200
.ZG170A47     AIF   (K'&PARMS LE 0).ZG170A48    OK                      00698300
&ZCVAL        SETC '&ZCVAL PARMS'               INCORRECT KEY USED      00698400
.ZG170A48     AIF   (K'&FILES LE 0).ZG170A49    OK                      00698500
&ZCVAL        SETC '&ZCVAL FILES'               INCORRECT KEY USED      00698600
.ZG170A49     AIF   (K'&EXITS LE 0).ZG170A50    OK                      00698700
&ZCVAL        SETC '&ZCVAL EXITS'               INCORRECT KEY USED      00698800
.ZG170A50     AIF   (K'&OPTIONS LE 0).ZG170A51  OK                      00698900
&ZCVAL        SETC '&ZCVAL OPTIONS'             INCORRECT KEY USED      00699000
.ZG170A51     AIF   (K'&ENVARS LE 0).ZG170A52   OK                      00699100
&ZCVAL        SETC '&ZCVAL ENVARS'              INCORRECT KEY USED      00699200
.ZG170A52     AIF   (K'&ORIGIN LE 0).ZG170A53   OK                      00699300
&ZCVAL        SETC '&ZCVAL ORIGIN'              INCORRECT KEY USED      00699400
.ZG170A53     AIF   (K'&REGION LE 0).ZG170A54   OK                      00699500
&ZCVAL        SETC '&ZCVAL REGION'              INCORRECT KEY USED      00699600
.ZG170A54     AIF   (K'&ZCVAL LE 0).ZG170A55    OK                      00699700
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               00699800
              AIF  (K'&ZCVAL LE 160).ZG170A55A                          00699900
&ZCVAL        SETC '&ZCVAL'(1,160)                                      00700000
&ZCVAL        SETC '&ZCVAL....'                                         00700100
.ZG170A55A    ANOP                                                      00700200
&ZMS          SETC  '"FUNC'                                             00700300
&ZMS          SETC  '&ZMS.=&FUNC"'                                      00700400
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                00700500
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                00700600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00700700
.ZG170A55     ANOP  ,                                                   00700800
.*----------------------------------------------------------------***   00700900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00701000
              AIF   (N'&WORKMOD LE 1).ZG172A    CK NUM                  00701100
&ZMS          SETC  '"WORKMOD='                                         00701200
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    00701300
&ZMS          SETC  '&ZMS "WORKMOD"'                                    00701400
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00701500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00701600
.ZG172A       ANOP  ,                                                   00701700
.*-------------------------------------------------------------------   00701800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00701900
&ZXWORKMOD    SETC  'INPUT'     SET IN/OUTPUT                           00702000
&XWORKMOD     SETC  '&WORKMOD(1)'               SET XVARIABLE           00702100
              AIF   (N'&WORKMOD GT 1).ZG172B    MULTI                   00702200
&XWORKMOD     SETC  '&WORKMOD'  SET XVARIABLE                           00702300
.ZG172B       AIF   (K'&WORKMOD(1) GT 0).ZG172C                         00702400
&ZXWORKMOD    SETC  ''          RESET IN/OUTPUT                         00702500
&ZMS          SETC  ' '                                                 00702600
&ZMS          SETC  '&ZMS "WORKMOD" KEY AND ITS'                        00702700
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00702800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00702900
.ZG172C       ANOP  ,                                                   00703000
.*-------------------------------------------------------------------   00703100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00703200
              AIF   (K'&ZXWORKMOD LE 0).ZG172R  NOT I/O                 00703300
              AIF   ('&XWORKMOD'(1,1) NE '(').ZG172R                    00703400
&ZCGPR        SETC  '&XWORKMOD'(2,K'&XWORKMOD-2)                        00703500
              AIF   ('&ZCGPR'(1,1) NE '0').ZG172P                       00703600
              AIF   (K'&ZCGPR GT 2).ZG172Q                              00703700
              AIF   ('&ZCGPR' EQ '0').ZG172Q                            00703800
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00703900
              AIF   (T'&ZCGPR NE 'N').ZG172Q    INVALID REG NAME        00704000
.ZG172P       ANOP  ,                                                   00704100
              AIF   (T'&ZCGPR NE 'N').ZG172R    NON NUMERIC             00704200
              AIF   ('&ZCGPR' LT '2').ZG172Q                            00704300
              AIF   ('&ZCGPR' LE '12').ZG172R                           00704400
.ZG172Q       ANOP  ,                                                   00704500
&ZMS          SETC  '"WORKMOD='                                         00704600
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    00704700
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00704800
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00704900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00705000
.ZG172R       ANOP  ,                                                   00705100
.*----------------------------------------------------------------***   00705200
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00705300
              AIF   (N'&AREA LE 1).ZG175A       CK NUM                  00705400
&ZMS          SETC  '"AREA='                                            00705500
&ZMS          SETC  '&ZMS.&AREA"'                                       00705600
&ZMS          SETC  '&ZMS "AREA"'                                       00705700
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00705800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00705900
.ZG175A       ANOP  ,                                                   00706000
.*-------------------------------------------------------------------   00706100
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00706200
              AIF   (K'&AREA(1) LE 0).ZG175C    NO PARM                 00706300
&ZXAREA       SETC  'OUTPUT'    SET OUTPUT                              00706400
&XAREA        SETC  '&AREA(1)'  SET XVARIABLE                           00706500
              AIF   (N'&AREA GT 1).ZG175C                               00706600
&XAREA        SETC  '&AREA'     SET XVARIABLE                           00706700
.ZG175C       ANOP  ,                                                   00706800
.*-------------------------------------------------------------------   00706900
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00707000
              AIF   (K'&ZXAREA LE 0).ZG175R     NOT I/O                 00707100
              AIF   ('&XAREA'(1,1) NE '(').ZG175R                       00707200
&ZCGPR        SETC  '&XAREA'(2,K'&XAREA-2)                              00707300
              AIF   ('&ZCGPR'(1,1) NE '0').ZG175P                       00707400
              AIF   (K'&ZCGPR GT 2).ZG175Q                              00707500
              AIF   ('&ZCGPR' EQ '0').ZG175Q                            00707600
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00707700
              AIF   (T'&ZCGPR NE 'N').ZG175Q    INVALID REG NAME        00707800
.ZG175P       ANOP  ,                                                   00707900
              AIF   (T'&ZCGPR NE 'N').ZG175R    NON NUMERIC             00708000
              AIF   ('&ZCGPR' LT '2').ZG175Q                            00708100
              AIF   ('&ZCGPR' LE '12').ZG175R                           00708200
.ZG175Q       ANOP  ,                                                   00708300
&ZMS          SETC  '"AREA='                                            00708400
&ZMS          SETC  '&ZMS.&AREA"'                                       00708500
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00708600
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00708700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00708800
.ZG175R       ANOP  ,                                                   00708900
.*----------------------------------------------------------------***   00709000
.***AG.KXVAR05 NAME, RQD INOUT, KEYS -XVARIABLE KEY                     00709100
              AIF   (N'&CURSOR LE 1).ZG178A     CK NUM                  00709200
&ZMS          SETC  '"CURSOR='                                          00709300
&ZMS          SETC  '&ZMS.&CURSOR"'                                     00709400
&ZMS          SETC  '&ZMS "CURSOR"'                                     00709500
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00709600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00709700
.ZG178A       ANOP  ,                                                   00709800
.*-------------------------------------------------------------------   00709900
.***AG.KXVAR06 NAME, RQD INOUT, KEYS -XVARIABLE                         00710000
&ZXCURSOR     SETC  'INOUT'     SET IN/OUTPUT                           00710100
&XCURSOR      SETC  '&CURSOR(1)'                SET XVARIABLE           00710200
              AIF   (N'&CURSOR GT 1).ZG178B     MULTI                   00710300
&XCURSOR      SETC  '&CURSOR'   SET XVARIABLE                           00710400
.ZG178B       AIF   (K'&CURSOR(1) GT 0).ZG178C                          00710500
&ZXCURSOR     SETC  ''          RESET IN/OUTPUT                         00710600
&ZMS          SETC  ' '                                                 00710700
&ZMS          SETC  '&ZMS "CURSOR" KEY AND ITS'                         00710800
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00710900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00711000
.ZG178C       ANOP  ,                                                   00711100
.*-------------------------------------------------------------------   00711200
.***AG.KCK02 NAME, RQD INOUT, KEYS -GPR OUT OF RANGE                    00711300
              AIF   (K'&ZXCURSOR LE 0).ZG178R   NOT I/O                 00711400
              AIF   ('&XCURSOR'(1,1) NE '(').ZG178R                     00711500
&ZCGPR        SETC  '&XCURSOR'(2,K'&XCURSOR-2)                          00711600
              AIF   ('&ZCGPR'(1,1) NE '0').ZG178P                       00711700
              AIF   (K'&ZCGPR GT 2).ZG178Q                              00711800
              AIF   ('&ZCGPR' EQ '0').ZG178Q                            00711900
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00712000
              AIF   (T'&ZCGPR NE 'N').ZG178Q    INVALID REG NAME        00712100
.ZG178P       ANOP  ,                                                   00712200
              AIF   (T'&ZCGPR NE 'N').ZG178R    NON NUMERIC             00712300
              AIF   ('&ZCGPR' LT '2').ZG178Q                            00712400
              AIF   ('&ZCGPR' LE '12').ZG178R                           00712500
.ZG178Q       ANOP  ,                                                   00712600
&ZMS          SETC  '"CURSOR='                                          00712700
&ZMS          SETC  '&ZMS.&CURSOR"'                                     00712800
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00712900
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00713000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00713100
.ZG178R       ANOP  ,                                                   00713200
.*----------------------------------------------------------------***   00713300
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00713400
              AIF   (N'&COUNT LE 1).ZG181A      CK NUM                  00713500
&ZMS          SETC  '"COUNT='                                           00713600
&ZMS          SETC  '&ZMS.&COUNT"'                                      00713700
&ZMS          SETC  '&ZMS "COUNT"'                                      00713800
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00713900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00714000
.ZG181A       ANOP  ,                                                   00714100
.*-------------------------------------------------------------------   00714200
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00714300
&ZXCOUNT      SETC  'OUTPUT'    SET IN/OUTPUT                           00714400
&XCOUNT       SETC  '&COUNT(1)'                 SET XVARIABLE           00714500
              AIF   (N'&COUNT GT 1).ZG181B      MULTI                   00714600
&XCOUNT       SETC  '&COUNT'    SET XVARIABLE                           00714700
.ZG181B       AIF   (K'&COUNT(1) GT 0).ZG181C                           00714800
&ZXCOUNT      SETC  ''          RESET IN/OUTPUT                         00714900
&ZMS          SETC  ' '                                                 00715000
&ZMS          SETC  '&ZMS "COUNT" KEY AND ITS'                          00715100
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00715200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00715300
.ZG181C       ANOP  ,                                                   00715400
.*-------------------------------------------------------------------   00715500
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00715600
              AIF   (K'&ZXCOUNT LE 0).ZG181R    NOT I/O                 00715700
              AIF   ('&XCOUNT'(1,1) NE '(').ZG181R                      00715800
&ZCGPR        SETC  '&XCOUNT'(2,K'&XCOUNT-2)                            00715900
              AIF   ('&ZCGPR'(1,1) NE '0').ZG181P                       00716000
              AIF   (K'&ZCGPR GT 2).ZG181Q                              00716100
              AIF   ('&ZCGPR' EQ '0').ZG181Q                            00716200
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00716300
              AIF   (T'&ZCGPR NE 'N').ZG181Q    INVALID REG NAME        00716400
.ZG181P       ANOP  ,                                                   00716500
              AIF   (T'&ZCGPR NE 'N').ZG181R    NON NUMERIC             00716600
              AIF   ('&ZCGPR' LT '2').ZG181Q                            00716700
              AIF   ('&ZCGPR' LE '12').ZG181R                           00716800
.ZG181Q       ANOP  ,                                                   00716900
&ZMS          SETC  '"COUNT='                                           00717000
&ZMS          SETC  '&ZMS.&COUNT"'                                      00717100
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00717200
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00717300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00717400
.ZG181R       ANOP  ,                                                   00717500
.*----------------------------------------------------------------***   00717600
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00717700
              AIF   (N'&TCOUNT LE 1).ZG184A     CK NUM                  00717800
&ZMS          SETC  '"TCOUNT='                                          00717900
&ZMS          SETC  '&ZMS.&TCOUNT"'                                     00718000
&ZMS          SETC  '&ZMS "TCOUNT"'                                     00718100
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00718200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00718300
.ZG184A       ANOP  ,                                                   00718400
.*-------------------------------------------------------------------   00718500
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00718600
&ZXTCOUNT     SETC  'OUTPUT'    SET IN/OUTPUT                           00718700
&XTCOUNT      SETC  '&TCOUNT(1)'                SET XVARIABLE           00718800
              AIF   (N'&TCOUNT GT 1).ZG184B     MULTI                   00718900
&XTCOUNT      SETC  '&TCOUNT'   SET XVARIABLE                           00719000
.ZG184B       AIF   (K'&TCOUNT(1) GT 0).ZG184C                          00719100
&ZXTCOUNT     SETC  ''          RESET IN/OUTPUT                         00719200
&ZMS          SETC  ' '                                                 00719300
&ZMS          SETC  '&ZMS "TCOUNT" KEY AND ITS'                         00719400
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00719500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00719600
.ZG184C       ANOP  ,                                                   00719700
.*-------------------------------------------------------------------   00719800
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00719900
              AIF   (K'&ZXTCOUNT LE 0).ZG184R   NOT I/O                 00720000
              AIF   ('&XTCOUNT'(1,1) NE '(').ZG184R                     00720100
&ZCGPR        SETC  '&XTCOUNT'(2,K'&XTCOUNT-2)                          00720200
              AIF   ('&ZCGPR'(1,1) NE '0').ZG184P                       00720300
              AIF   (K'&ZCGPR GT 2).ZG184Q                              00720400
              AIF   ('&ZCGPR' EQ '0').ZG184Q                            00720500
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00720600
              AIF   (T'&ZCGPR NE 'N').ZG184Q    INVALID REG NAME        00720700
.ZG184P       ANOP  ,                                                   00720800
              AIF   (T'&ZCGPR NE 'N').ZG184R    NON NUMERIC             00720900
              AIF   ('&ZCGPR' LT '2').ZG184Q                            00721000
              AIF   ('&ZCGPR' LE '12').ZG184R                           00721100
.ZG184Q       ANOP  ,                                                   00721200
&ZMS          SETC  '"TCOUNT='                                          00721300
&ZMS          SETC  '&ZMS.&TCOUNT"'                                     00721400
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00721500
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00721600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00721700
.ZG184R       ANOP  ,                                                   00721800
.*----------------------------------------------------------------***   00721900
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00722000
              AIF   (N'&NTYPE LE 1).ZG187A      CK NUM                  00722100
&ZMS          SETC  '"NTYPE='                                           00722200
&ZMS          SETC  '&ZMS.&NTYPE"'                                      00722300
&ZMS          SETC  '&ZMS "NTYPE"'                                      00722400
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00722500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00722600
.ZG187A       ANOP  ,                                                   00722700
.*-------------------------------------------------------------------   00722800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00722900
&XNTYPE       SETC  ''          INITIALIZE XVARIABLE                    00723000
.ZG188A   AIF   ('&NTYPE(1)' NE 'S').ZG189A                             00723100
&XNTYPE       SETC  'S'         SET KEYWORD                             00723200
.*-------------------------------------------------------------------   00723300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00723400
.ZG189A   AIF   ('&NTYPE(1)' NE 'C').ZG190A                             00723500
&XNTYPE       SETC  'C'         SET KEYWORD                             00723600
.*-------------------------------------------------------------------   00723700
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00723800
.ZG190A       AIF   (K'&XNTYPE GT 0).ZG190C     KEYWORD                 00723900
              AIF   (K'&NTYPE(1) LE 0).ZG190B                           00724000
&ZMS          SETC  '"NTYPE='                                           00724100
&ZMS          SETC  '&ZMS.&NTYPE"'                                      00724200
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           00724300
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00724400
&ZMS          SETC  '&ZMS "S"'                                          00724500
&ZMS          SETC  '&ZMS OR "C".'                                      00724600
              MNOTE 8,' &ZMS '                                          00724700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00724800
.ZG190B       ANOP  ,                                                   00724900
&XNTYPE       SETC  'S'         SET DEFAULT KEYWORD                     00725000
.ZG190C       ANOP  ,                                                   00725100
&ZXNTYPE      SETC  'INPUT'     SET IN/OUTPUT                           00725200
.*-------------------------------------------------------------------   00725300
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00725400
.ZG191        ANOP  ,                                                   00725500
&ZTLC         SETC 'GETC'                                               00725600
              AIF   ('&FUNC(1)' NE '&ZTLC').ZG207                       00725700
&XFUNC        SETC  'GETC'      SET KEYWORD                             00725800
              AIF   (N'&FUNC LE 1).ZG191A       CK NUM                  00725900
&ZMS          SETC  '"FUNC='                                            00726000
&ZMS          SETC  '&ZMS.&FUNC"'                                       00726100
&ZMS          SETC  '&ZMS "FUNC"'                                       00726200
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00726300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00726400
.ZG191A       ANOP  ,                                                   00726500
.*------------------------------------------------------------------    00726600
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00726700
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             00726800
.ZG191A0      AIF   (K'&ANAME LE 0).ZG191A1     OK                      00726900
&ZCVAL        SETC '&ZCVAL ANAME'               INCORRECT KEY USED      00727000
.ZG191A1      AIF   (K'&ENAME LE 0).ZG191A2     OK                      00727100
&ZCVAL        SETC '&ZCVAL ENAME'               INCORRECT KEY USED      00727200
.ZG191A2      AIF   (K'&AMODE LE 0).ZG191A3     OK                      00727300
&ZCVAL        SETC '&ZCVAL AMODE'               INCORRECT KEY USED      00727400
.ZG191A3      AIF   (K'&ATYPE LE 0).ZG191A4     OK                      00727500
&ZCVAL        SETC '&ZCVAL ATYPE'               INCORRECT KEY USED      00727600
.ZG191A4      AIF   (K'&DNAME LE 0).ZG191A5     OK                      00727700
&ZCVAL        SETC '&ZCVAL DNAME'               INCORRECT KEY USED      00727800
.ZG191A5      AIF   (K'&SECTION LE 0).ZG191A6   OK                      00727900
&ZCVAL        SETC '&ZCVAL SECTION'             INCORRECT KEY USED      00728000
.ZG191A6      AIF   (K'&BDY LE 0).ZG191A7       OK                      00728100
&ZCVAL        SETC '&ZCVAL BDY'                 INCORRECT KEY USED      00728200
.ZG191A7      AIF   (K'&CLASSL LE 0).ZG191A8    OK                      00728300
&ZCVAL        SETC '&ZCVAL CLASSL'              INCORRECT KEY USED      00728400
.ZG191A8      AIF   (K'&OLDNAME LE 0).ZG191A9   OK                      00728500
&ZCVAL        SETC '&ZCVAL OLDNAME'             INCORRECT KEY USED      00728600
.ZG191A9      AIF   (K'&NEWNAME LE 0).ZG191A10  OK                      00728700
&ZCVAL        SETC '&ZCVAL NEWNAME'             INCORRECT KEY USED      00728800
.ZG191A10     AIF   (K'&MODE LE 0).ZG191A11     OK                      00728900
&ZCVAL        SETC '&ZCVAL MODE'                INCORRECT KEY USED      00729000
.ZG191A11     AIF   (K'&CLASS LE 0).ZG191A12    OK                      00729100
&ZCVAL        SETC '&ZCVAL CLASS'               INCORRECT KEY USED      00729200
.ZG191A12     AIF   (K'&CALLIB LE 0).ZG191A13   OK                      00729300
&ZCVAL        SETC '&ZCVAL CALLIB'              INCORRECT KEY USED      00729400
.ZG191A13     AIF   (K'&PATHNAME LE 0).ZG191A14  OK                     00729500
&ZCVAL        SETC '&ZCVAL PATHNAME'            INCORRECT KEY USED      00729600
.ZG191A14     AIF   (K'&DIALOG LE 0).ZG191A15   OK                      00729700
&ZCVAL        SETC '&ZCVAL DIALOG'              INCORRECT KEY USED      00729800
.ZG191A15     AIF   (K'&INTENT LE 0).ZG191A16   OK                      00729900
&ZCVAL        SETC '&ZCVAL INTENT'              INCORRECT KEY USED      00730000
.ZG191A16     AIF   (K'&PROTECT LE 0).ZG191A17  OK                      00730100
&ZCVAL        SETC '&ZCVAL PROTECT'             INCORRECT KEY USED      00730200
.ZG191A17     AIF   (K'&RENAMEL LE 0).ZG191A18  OK                      00730300
&ZCVAL        SETC '&ZCVAL RENAMEL'             INCORRECT KEY USED      00730400
.ZG191A18     AIF   (K'&RELOC LE 0).ZG191A19    OK                      00730500
&ZCVAL        SETC '&ZCVAL RELOC'               INCORRECT KEY USED      00730600
.ZG191A19     AIF   (K'&RECTYPE LE 0).ZG191A20  OK                      00730700
&ZCVAL        SETC '&ZCVAL RECTYPE'             INCORRECT KEY USED      00730800
.ZG191A20     AIF   (K'&OFFSET LE 0).ZG191A21   OK                      00730900
&ZCVAL        SETC '&ZCVAL OFFSET'              INCORRECT KEY USED      00731000
.ZG191A21     AIF   (K'&SYMBOL LE 0).ZG191A22   OK                      00731100
&ZCVAL        SETC '&ZCVAL SYMBOL'              INCORRECT KEY USED      00731200
.ZG191A22     AIF   (K'&TCOUNT LE 0).ZG191A23   OK                      00731300
&ZCVAL        SETC '&ZCVAL TCOUNT'              INCORRECT KEY USED      00731400
.ZG191A23     AIF   (K'&NTYPE LE 0).ZG191A24    OK                      00731500
&ZCVAL        SETC '&ZCVAL NTYPE'               INCORRECT KEY USED      00731600
.ZG191A24     AIF   (K'&ITYPE LE 0).ZG191A25    OK                      00731700
&ZCVAL        SETC '&ZCVAL ITYPE'               INCORRECT KEY USED      00731800
.ZG191A25     AIF   (K'&DLLNAME LE 0).ZG191A26  OK                      00731900
&ZCVAL        SETC '&ZCVAL DLLNAME'             INCORRECT KEY USED      00732000
.ZG191A26     AIF   (K'&INAME LE 0).ZG191A27    OK                      00732100
&ZCVAL        SETC '&ZCVAL INAME'               INCORRECT KEY USED      00732200
.ZG191A27     AIF   (K'&INTYPE LE 0).ZG191A28   OK                      00732300
&ZCVAL        SETC '&ZCVAL INTYPE'              INCORRECT KEY USED      00732400
.ZG191A28     AIF   (K'&DDNAME LE 0).ZG191A29   OK                      00732500
&ZCVAL        SETC '&ZCVAL DDNAME'              INCORRECT KEY USED      00732600
.ZG191A29     AIF   (K'&DEPTR LE 0).ZG191A30    OK                      00732700
&ZCVAL        SETC '&ZCVAL DEPTR'               INCORRECT KEY USED      00732800
.ZG191A30     AIF   (K'&MEMBER LE 0).ZG191A31   OK                      00732900
&ZCVAL        SETC '&ZCVAL MEMBER'              INCORRECT KEY USED      00733000
.ZG191A31     AIF   (K'&DCBPTR LE 0).ZG191A32   OK                      00733100
&ZCVAL        SETC '&ZCVAL DCBPTR'              INCORRECT KEY USED      00733200
.ZG191A32     AIF   (K'&EPTOKEN LE 0).ZG191A33  OK                      00733300
&ZCVAL        SETC '&ZCVAL EPTOKEN'             INCORRECT KEY USED      00733400
.ZG191A33     AIF   (K'&ATTRIB LE 0).ZG191A34   OK                      00733500
&ZCVAL        SETC '&ZCVAL ATTRIB'              INCORRECT KEY USED      00733600
.ZG191A34     AIF   (K'&ALIASES LE 0).ZG191A35  OK                      00733700
&ZCVAL        SETC '&ZCVAL ALIASES'             INCORRECT KEY USED      00733800
.ZG191A35     AIF   (K'&IMPORTS LE 0).ZG191A36  OK                      00733900
&ZCVAL        SETC '&ZCVAL IMPORTS'             INCORRECT KEY USED      00734000
.ZG191A36     AIF   (K'&EPLOC LE 0).ZG191A37    OK                      00734100
&ZCVAL        SETC '&ZCVAL EPLOC'               INCORRECT KEY USED      00734200
.ZG191A37     AIF   (K'&IDENTIFY LE 0).ZG191A38  OK                     00734300
&ZCVAL        SETC '&ZCVAL IDENTIFY'            INCORRECT KEY USED      00734400
.ZG191A38     AIF   (K'&EXTLST LE 0).ZG191A39   OK                      00734500
&ZCVAL        SETC '&ZCVAL EXTLST'              INCORRECT KEY USED      00734600
.ZG191A39     AIF   (K'&LNAME LE 0).ZG191A40    OK                      00734700
&ZCVAL        SETC '&ZCVAL LNAME'               INCORRECT KEY USED      00734800
.ZG191A40     AIF   (K'&NEWSECT LE 0).ZG191A41  OK                      00734900
&ZCVAL        SETC '&ZCVAL NEWSECT'             INCORRECT KEY USED      00735000
.ZG191A41     AIF   (K'&ENDDATA LE 0).ZG191A42  OK                      00735100
&ZCVAL        SETC '&ZCVAL ENDDATA'             INCORRECT KEY USED      00735200
.ZG191A42     AIF   (K'&MODLIB LE 0).ZG191A43   OK                      00735300
&ZCVAL        SETC '&ZCVAL MODLIB'              INCORRECT KEY USED      00735400
.ZG191A43     AIF   (K'&SNAME LE 0).ZG191A44    OK                      00735500
&ZCVAL        SETC '&ZCVAL SNAME'               INCORRECT KEY USED      00735600
.ZG191A44     AIF   (K'&REPLACE LE 0).ZG191A45  OK                      00735700
&ZCVAL        SETC '&ZCVAL REPLACE'             INCORRECT KEY USED      00735800
.ZG191A45     AIF   (K'&LIBOPT LE 0).ZG191A46   OK                      00735900
&ZCVAL        SETC '&ZCVAL LIBOPT'              INCORRECT KEY USED      00736000
.ZG191A46     AIF   (K'&OPTION LE 0).ZG191A47   OK                      00736100
&ZCVAL        SETC '&ZCVAL OPTION'              INCORRECT KEY USED      00736200
.ZG191A47     AIF   (K'&OPTVAL LE 0).ZG191A48   OK                      00736300
&ZCVAL        SETC '&ZCVAL OPTVAL'              INCORRECT KEY USED      00736400
.ZG191A48     AIF   (K'&PARMS LE 0).ZG191A49    OK                      00736500
&ZCVAL        SETC '&ZCVAL PARMS'               INCORRECT KEY USED      00736600
.ZG191A49     AIF   (K'&FILES LE 0).ZG191A50    OK                      00736700
&ZCVAL        SETC '&ZCVAL FILES'               INCORRECT KEY USED      00736800
.ZG191A50     AIF   (K'&EXITS LE 0).ZG191A51    OK                      00736900
&ZCVAL        SETC '&ZCVAL EXITS'               INCORRECT KEY USED      00737000
.ZG191A51     AIF   (K'&OPTIONS LE 0).ZG191A52  OK                      00737100
&ZCVAL        SETC '&ZCVAL OPTIONS'             INCORRECT KEY USED      00737200
.ZG191A52     AIF   (K'&ENVARS LE 0).ZG191A53   OK                      00737300
&ZCVAL        SETC '&ZCVAL ENVARS'              INCORRECT KEY USED      00737400
.ZG191A53     AIF   (K'&ORIGIN LE 0).ZG191A54   OK                      00737500
&ZCVAL        SETC '&ZCVAL ORIGIN'              INCORRECT KEY USED      00737600
.ZG191A54     AIF   (K'&REGION LE 0).ZG191A55   OK                      00737700
&ZCVAL        SETC '&ZCVAL REGION'              INCORRECT KEY USED      00737800
.ZG191A55     AIF   (K'&ZCVAL LE 0).ZG191A56    OK                      00737900
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               00738000
              AIF  (K'&ZCVAL LE 160).ZG191A56A                          00738100
&ZCVAL        SETC '&ZCVAL'(1,160)                                      00738200
&ZCVAL        SETC '&ZCVAL....'                                         00738300
.ZG191A56A    ANOP                                                      00738400
&ZMS          SETC  '"FUNC'                                             00738500
&ZMS          SETC  '&ZMS.=&FUNC"'                                      00738600
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                00738700
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                00738800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00738900
.ZG191A56     ANOP  ,                                                   00739000
.*----------------------------------------------------------------***   00739100
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00739200
              AIF   (N'&WORKMOD LE 1).ZG193A    CK NUM                  00739300
&ZMS          SETC  '"WORKMOD='                                         00739400
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    00739500
&ZMS          SETC  '&ZMS "WORKMOD"'                                    00739600
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00739700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00739800
.ZG193A       ANOP  ,                                                   00739900
.*-------------------------------------------------------------------   00740000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00740100
&ZXWORKMOD    SETC  'INPUT'     SET IN/OUTPUT                           00740200
&XWORKMOD     SETC  '&WORKMOD(1)'               SET XVARIABLE           00740300
              AIF   (N'&WORKMOD GT 1).ZG193B    MULTI                   00740400
&XWORKMOD     SETC  '&WORKMOD'  SET XVARIABLE                           00740500
.ZG193B       AIF   (K'&WORKMOD(1) GT 0).ZG193C                         00740600
&ZXWORKMOD    SETC  ''          RESET IN/OUTPUT                         00740700
&ZMS          SETC  ' '                                                 00740800
&ZMS          SETC  '&ZMS "WORKMOD" KEY AND ITS'                        00740900
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00741000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00741100
.ZG193C       ANOP  ,                                                   00741200
.*-------------------------------------------------------------------   00741300
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00741400
              AIF   (K'&ZXWORKMOD LE 0).ZG193R  NOT I/O                 00741500
              AIF   ('&XWORKMOD'(1,1) NE '(').ZG193R                    00741600
&ZCGPR        SETC  '&XWORKMOD'(2,K'&XWORKMOD-2)                        00741700
              AIF   ('&ZCGPR'(1,1) NE '0').ZG193P                       00741800
              AIF   (K'&ZCGPR GT 2).ZG193Q                              00741900
              AIF   ('&ZCGPR' EQ '0').ZG193Q                            00742000
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00742100
              AIF   (T'&ZCGPR NE 'N').ZG193Q    INVALID REG NAME        00742200
.ZG193P       ANOP  ,                                                   00742300
              AIF   (T'&ZCGPR NE 'N').ZG193R    NON NUMERIC             00742400
              AIF   ('&ZCGPR' LT '2').ZG193Q                            00742500
              AIF   ('&ZCGPR' LE '12').ZG193R                           00742600
.ZG193Q       ANOP  ,                                                   00742700
&ZMS          SETC  '"WORKMOD='                                         00742800
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    00742900
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00743000
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00743100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00743200
.ZG193R       ANOP  ,                                                   00743300
.*----------------------------------------------------------------***   00743400
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00743500
              AIF   (N'&CULIST LE 1).ZG196A     CK NUM                  00743600
&ZMS          SETC  '"CULIST='                                          00743700
&ZMS          SETC  '&ZMS.&CULIST"'                                     00743800
&ZMS          SETC  '&ZMS "CULIST"'                                     00743900
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00744000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00744100
.ZG196A       ANOP  ,                                                   00744200
.*-------------------------------------------------------------------   00744300
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00744400
&ZXCULIST     SETC  'INPUT'     SET IN/OUTPUT                           00744500
&XCULIST      SETC  '0'                                                 00744600
              AIF   (K'&CULIST(1) LE 0).ZG196B  PARM                    00744700
&XCULIST      SETC  '&CULIST(1)'                SET XVARIABLE           00744800
              AIF   (N'&CULIST GT 1).ZG196B     MULTI                   00744900
&XCULIST      SETC  '&CULIST'   SET XVARIABLE                           00745000
.ZG196B       ANOP  ,                                                   00745100
.*-------------------------------------------------------------------   00745200
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00745300
              AIF   (K'&ZXCULIST LE 0).ZG196R   NOT I/O                 00745400
              AIF   ('&XCULIST'(1,1) NE '(').ZG196R                     00745500
&ZCGPR        SETC  '&XCULIST'(2,K'&XCULIST-2)                          00745600
              AIF   ('&ZCGPR'(1,1) NE '0').ZG196P                       00745700
              AIF   (K'&ZCGPR GT 2).ZG196Q                              00745800
              AIF   ('&ZCGPR' EQ '0').ZG196Q                            00745900
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00746000
              AIF   (T'&ZCGPR NE 'N').ZG196Q    INVALID REG NAME        00746100
.ZG196P       ANOP  ,                                                   00746200
              AIF   (T'&ZCGPR NE 'N').ZG196R    NON NUMERIC             00746300
              AIF   ('&ZCGPR' LT '2').ZG196Q                            00746400
              AIF   ('&ZCGPR' LE '12').ZG196R                           00746500
.ZG196Q       ANOP  ,                                                   00746600
&ZMS          SETC  '"CULIST='                                          00746700
&ZMS          SETC  '&ZMS.&CULIST"'                                     00746800
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00746900
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00747000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00747100
.ZG196R       ANOP  ,                                                   00747200
.*----------------------------------------------------------------***   00747300
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00747400
              AIF   (N'&AREA LE 1).ZG199A       CK NUM                  00747500
&ZMS          SETC  '"AREA='                                            00747600
&ZMS          SETC  '&ZMS.&AREA"'                                       00747700
&ZMS          SETC  '&ZMS "AREA"'                                       00747800
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00747900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00748000
.ZG199A       ANOP  ,                                                   00748100
.*-------------------------------------------------------------------   00748200
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00748300
&ZXAREA       SETC  'OUTPUT'    SET IN/OUTPUT                           00748400
&XAREA        SETC  '&AREA(1)'  SET XVARIABLE                           00748500
              AIF   (N'&AREA GT 1).ZG199B       MULTI                   00748600
&XAREA        SETC  '&AREA'     SET XVARIABLE                           00748700
.ZG199B       AIF   (K'&AREA(1) GT 0).ZG199C                            00748800
&ZXAREA       SETC  ''          RESET IN/OUTPUT                         00748900
&ZMS          SETC  ' '                                                 00749000
&ZMS          SETC  '&ZMS "AREA" KEY AND ITS'                           00749100
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00749200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00749300
.ZG199C       ANOP  ,                                                   00749400
.*-------------------------------------------------------------------   00749500
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00749600
              AIF   (K'&ZXAREA LE 0).ZG199R     NOT I/O                 00749700
              AIF   ('&XAREA'(1,1) NE '(').ZG199R                       00749800
&ZCGPR        SETC  '&XAREA'(2,K'&XAREA-2)                              00749900
              AIF   ('&ZCGPR'(1,1) NE '0').ZG199P                       00750000
              AIF   (K'&ZCGPR GT 2).ZG199Q                              00750100
              AIF   ('&ZCGPR' EQ '0').ZG199Q                            00750200
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00750300
              AIF   (T'&ZCGPR NE 'N').ZG199Q    INVALID REG NAME        00750400
.ZG199P       ANOP  ,                                                   00750500
              AIF   (T'&ZCGPR NE 'N').ZG199R    NON NUMERIC             00750600
              AIF   ('&ZCGPR' LT '2').ZG199Q                            00750700
              AIF   ('&ZCGPR' LE '12').ZG199R                           00750800
.ZG199Q       ANOP  ,                                                   00750900
&ZMS          SETC  '"AREA='                                            00751000
&ZMS          SETC  '&ZMS.&AREA"'                                       00751100
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00751200
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00751300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00751400
.ZG199R       ANOP  ,                                                   00751500
.*----------------------------------------------------------------***   00751600
.***AG.KXVAR05 NAME, RQD INOUT, KEYS -XVARIABLE KEY                     00751700
              AIF   (N'&CURSOR LE 1).ZG202A     CK NUM                  00751800
&ZMS          SETC  '"CURSOR='                                          00751900
&ZMS          SETC  '&ZMS.&CURSOR"'                                     00752000
&ZMS          SETC  '&ZMS "CURSOR"'                                     00752100
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00752200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00752300
.ZG202A       ANOP  ,                                                   00752400
.*-------------------------------------------------------------------   00752500
.***AG.KXVAR06 NAME, RQD INOUT, KEYS -XVARIABLE                         00752600
&ZXCURSOR     SETC  'INOUT'     SET IN/OUTPUT                           00752700
&XCURSOR      SETC  '&CURSOR(1)'                SET XVARIABLE           00752800
              AIF   (N'&CURSOR GT 1).ZG202B     MULTI                   00752900
&XCURSOR      SETC  '&CURSOR'   SET XVARIABLE                           00753000
.ZG202B       AIF   (K'&CURSOR(1) GT 0).ZG202C                          00753100
&ZXCURSOR     SETC  ''          RESET IN/OUTPUT                         00753200
&ZMS          SETC  ' '                                                 00753300
&ZMS          SETC  '&ZMS "CURSOR" KEY AND ITS'                         00753400
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00753500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00753600
.ZG202C       ANOP  ,                                                   00753700
.*-------------------------------------------------------------------   00753800
.***AG.KCK02 NAME, RQD INOUT, KEYS -GPR OUT OF RANGE                    00753900
              AIF   (K'&ZXCURSOR LE 0).ZG202R   NOT I/O                 00754000
              AIF   ('&XCURSOR'(1,1) NE '(').ZG202R                     00754100
&ZCGPR        SETC  '&XCURSOR'(2,K'&XCURSOR-2)                          00754200
              AIF   ('&ZCGPR'(1,1) NE '0').ZG202P                       00754300
              AIF   (K'&ZCGPR GT 2).ZG202Q                              00754400
              AIF   ('&ZCGPR' EQ '0').ZG202Q                            00754500
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00754600
              AIF   (T'&ZCGPR NE 'N').ZG202Q    INVALID REG NAME        00754700
.ZG202P       ANOP  ,                                                   00754800
              AIF   (T'&ZCGPR NE 'N').ZG202R    NON NUMERIC             00754900
              AIF   ('&ZCGPR' LT '2').ZG202Q                            00755000
              AIF   ('&ZCGPR' LE '12').ZG202R                           00755100
.ZG202Q       ANOP  ,                                                   00755200
&ZMS          SETC  '"CURSOR='                                          00755300
&ZMS          SETC  '&ZMS.&CURSOR"'                                     00755400
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00755500
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00755600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00755700
.ZG202R       ANOP  ,                                                   00755800
.*----------------------------------------------------------------***   00755900
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00756000
              AIF   (N'&COUNT LE 1).ZG205A      CK NUM                  00756100
&ZMS          SETC  '"COUNT='                                           00756200
&ZMS          SETC  '&ZMS.&COUNT"'                                      00756300
&ZMS          SETC  '&ZMS "COUNT"'                                      00756400
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00756500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00756600
.ZG205A       ANOP  ,                                                   00756700
.*-------------------------------------------------------------------   00756800
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00756900
&ZXCOUNT      SETC  'OUTPUT'    SET IN/OUTPUT                           00757000
&XCOUNT       SETC  '&COUNT(1)'                 SET XVARIABLE           00757100
              AIF   (N'&COUNT GT 1).ZG205B      MULTI                   00757200
&XCOUNT       SETC  '&COUNT'    SET XVARIABLE                           00757300
.ZG205B       AIF   (K'&COUNT(1) GT 0).ZG205C                           00757400
&ZXCOUNT      SETC  ''          RESET IN/OUTPUT                         00757500
&ZMS          SETC  ' '                                                 00757600
&ZMS          SETC  '&ZMS "COUNT" KEY AND ITS'                          00757700
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00757800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00757900
.ZG205C       ANOP  ,                                                   00758000
.*-------------------------------------------------------------------   00758100
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00758200
              AIF   (K'&ZXCOUNT LE 0).ZG205R    NOT I/O                 00758300
              AIF   ('&XCOUNT'(1,1) NE '(').ZG205R                      00758400
&ZCGPR        SETC  '&XCOUNT'(2,K'&XCOUNT-2)                            00758500
              AIF   ('&ZCGPR'(1,1) NE '0').ZG205P                       00758600
              AIF   (K'&ZCGPR GT 2).ZG205Q                              00758700
              AIF   ('&ZCGPR' EQ '0').ZG205Q                            00758800
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00758900
              AIF   (T'&ZCGPR NE 'N').ZG205Q    INVALID REG NAME        00759000
.ZG205P       ANOP  ,                                                   00759100
              AIF   (T'&ZCGPR NE 'N').ZG205R    NON NUMERIC             00759200
              AIF   ('&ZCGPR' LT '2').ZG205Q                            00759300
              AIF   ('&ZCGPR' LE '12').ZG205R                           00759400
.ZG205Q       ANOP  ,                                                   00759500
&ZMS          SETC  '"COUNT='                                           00759600
&ZMS          SETC  '&ZMS.&COUNT"'                                      00759700
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00759800
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00759900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00760000
.ZG205R       ANOP  ,                                                   00760100
.*-------------------------------------------------------------------   00760200
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00760300
.ZG207        ANOP  ,                                                   00760400
&ZTLC         SETC 'IMPORT'                                             00760500
              AIF   ('&FUNC(1)' NE '&ZTLC').ZG227                       00760600
&XFUNC        SETC  'IMPORT'    SET KEYWORD                             00760700
              AIF   (N'&FUNC LE 1).ZG207A       CK NUM                  00760800
&ZMS          SETC  '"FUNC='                                            00760900
&ZMS          SETC  '&ZMS.&FUNC"'                                       00761000
&ZMS          SETC  '&ZMS "FUNC"'                                       00761100
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00761200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00761300
.ZG207A       ANOP  ,                                                   00761400
.*------------------------------------------------------------------    00761500
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00761600
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             00761700
.ZG207A0      AIF   (K'&ANAME LE 0).ZG207A1     OK                      00761800
&ZCVAL        SETC '&ZCVAL ANAME'               INCORRECT KEY USED      00761900
.ZG207A1      AIF   (K'&ENAME LE 0).ZG207A2     OK                      00762000
&ZCVAL        SETC '&ZCVAL ENAME'               INCORRECT KEY USED      00762100
.ZG207A2      AIF   (K'&AMODE LE 0).ZG207A3     OK                      00762200
&ZCVAL        SETC '&ZCVAL AMODE'               INCORRECT KEY USED      00762300
.ZG207A3      AIF   (K'&ATYPE LE 0).ZG207A4     OK                      00762400
&ZCVAL        SETC '&ZCVAL ATYPE'               INCORRECT KEY USED      00762500
.ZG207A4      AIF   (K'&DNAME LE 0).ZG207A5     OK                      00762600
&ZCVAL        SETC '&ZCVAL DNAME'               INCORRECT KEY USED      00762700
.ZG207A5      AIF   (K'&SECTION LE 0).ZG207A6   OK                      00762800
&ZCVAL        SETC '&ZCVAL SECTION'             INCORRECT KEY USED      00762900
.ZG207A6      AIF   (K'&BDY LE 0).ZG207A7       OK                      00763000
&ZCVAL        SETC '&ZCVAL BDY'                 INCORRECT KEY USED      00763100
.ZG207A7      AIF   (K'&CLASSL LE 0).ZG207A8    OK                      00763200
&ZCVAL        SETC '&ZCVAL CLASSL'              INCORRECT KEY USED      00763300
.ZG207A8      AIF   (K'&OLDNAME LE 0).ZG207A9   OK                      00763400
&ZCVAL        SETC '&ZCVAL OLDNAME'             INCORRECT KEY USED      00763500
.ZG207A9      AIF   (K'&NEWNAME LE 0).ZG207A10  OK                      00763600
&ZCVAL        SETC '&ZCVAL NEWNAME'             INCORRECT KEY USED      00763700
.ZG207A10     AIF   (K'&COUNT LE 0).ZG207A11    OK                      00763800
&ZCVAL        SETC '&ZCVAL COUNT'               INCORRECT KEY USED      00763900
.ZG207A11     AIF   (K'&MODE LE 0).ZG207A12     OK                      00764000
&ZCVAL        SETC '&ZCVAL MODE'                INCORRECT KEY USED      00764100
.ZG207A12     AIF   (K'&CLASS LE 0).ZG207A13    OK                      00764200
&ZCVAL        SETC '&ZCVAL CLASS'               INCORRECT KEY USED      00764300
.ZG207A13     AIF   (K'&CALLIB LE 0).ZG207A14   OK                      00764400
&ZCVAL        SETC '&ZCVAL CALLIB'              INCORRECT KEY USED      00764500
.ZG207A14     AIF   (K'&PATHNAME LE 0).ZG207A15  OK                     00764600
&ZCVAL        SETC '&ZCVAL PATHNAME'            INCORRECT KEY USED      00764700
.ZG207A15     AIF   (K'&DIALOG LE 0).ZG207A16   OK                      00764800
&ZCVAL        SETC '&ZCVAL DIALOG'              INCORRECT KEY USED      00764900
.ZG207A16     AIF   (K'&INTENT LE 0).ZG207A17   OK                      00765000
&ZCVAL        SETC '&ZCVAL INTENT'              INCORRECT KEY USED      00765100
.ZG207A17     AIF   (K'&PROTECT LE 0).ZG207A18  OK                      00765200
&ZCVAL        SETC '&ZCVAL PROTECT'             INCORRECT KEY USED      00765300
.ZG207A18     AIF   (K'&RENAMEL LE 0).ZG207A19  OK                      00765400
&ZCVAL        SETC '&ZCVAL RENAMEL'             INCORRECT KEY USED      00765500
.ZG207A19     AIF   (K'&AREA LE 0).ZG207A20     OK                      00765600
&ZCVAL        SETC '&ZCVAL AREA'                INCORRECT KEY USED      00765700
.ZG207A20     AIF   (K'&CURSOR LE 0).ZG207A21   OK                      00765800
&ZCVAL        SETC '&ZCVAL CURSOR'              INCORRECT KEY USED      00765900
.ZG207A21     AIF   (K'&RELOC LE 0).ZG207A22    OK                      00766000
&ZCVAL        SETC '&ZCVAL RELOC'               INCORRECT KEY USED      00766100
.ZG207A22     AIF   (K'&RECTYPE LE 0).ZG207A23  OK                      00766200
&ZCVAL        SETC '&ZCVAL RECTYPE'             INCORRECT KEY USED      00766300
.ZG207A23     AIF   (K'&SYMBOL LE 0).ZG207A24   OK                      00766400
&ZCVAL        SETC '&ZCVAL SYMBOL'              INCORRECT KEY USED      00766500
.ZG207A24     AIF   (K'&TCOUNT LE 0).ZG207A25   OK                      00766600
&ZCVAL        SETC '&ZCVAL TCOUNT'              INCORRECT KEY USED      00766700
.ZG207A25     AIF   (K'&NTYPE LE 0).ZG207A26    OK                      00766800
&ZCVAL        SETC '&ZCVAL NTYPE'               INCORRECT KEY USED      00766900
.ZG207A26     AIF   (K'&CULIST LE 0).ZG207A27   OK                      00767000
&ZCVAL        SETC '&ZCVAL CULIST'              INCORRECT KEY USED      00767100
.ZG207A27     AIF   (K'&INTYPE LE 0).ZG207A28   OK                      00767200
&ZCVAL        SETC '&ZCVAL INTYPE'              INCORRECT KEY USED      00767300
.ZG207A28     AIF   (K'&DDNAME LE 0).ZG207A29   OK                      00767400
&ZCVAL        SETC '&ZCVAL DDNAME'              INCORRECT KEY USED      00767500
.ZG207A29     AIF   (K'&DEPTR LE 0).ZG207A30    OK                      00767600
&ZCVAL        SETC '&ZCVAL DEPTR'               INCORRECT KEY USED      00767700
.ZG207A30     AIF   (K'&MEMBER LE 0).ZG207A31   OK                      00767800
&ZCVAL        SETC '&ZCVAL MEMBER'              INCORRECT KEY USED      00767900
.ZG207A31     AIF   (K'&DCBPTR LE 0).ZG207A32   OK                      00768000
&ZCVAL        SETC '&ZCVAL DCBPTR'              INCORRECT KEY USED      00768100
.ZG207A32     AIF   (K'&EPTOKEN LE 0).ZG207A33  OK                      00768200
&ZCVAL        SETC '&ZCVAL EPTOKEN'             INCORRECT KEY USED      00768300
.ZG207A33     AIF   (K'&ATTRIB LE 0).ZG207A34   OK                      00768400
&ZCVAL        SETC '&ZCVAL ATTRIB'              INCORRECT KEY USED      00768500
.ZG207A34     AIF   (K'&ALIASES LE 0).ZG207A35  OK                      00768600
&ZCVAL        SETC '&ZCVAL ALIASES'             INCORRECT KEY USED      00768700
.ZG207A35     AIF   (K'&IMPORTS LE 0).ZG207A36  OK                      00768800
&ZCVAL        SETC '&ZCVAL IMPORTS'             INCORRECT KEY USED      00768900
.ZG207A36     AIF   (K'&EPLOC LE 0).ZG207A37    OK                      00769000
&ZCVAL        SETC '&ZCVAL EPLOC'               INCORRECT KEY USED      00769100
.ZG207A37     AIF   (K'&IDENTIFY LE 0).ZG207A38  OK                     00769200
&ZCVAL        SETC '&ZCVAL IDENTIFY'            INCORRECT KEY USED      00769300
.ZG207A38     AIF   (K'&EXTLST LE 0).ZG207A39   OK                      00769400
&ZCVAL        SETC '&ZCVAL EXTLST'              INCORRECT KEY USED      00769500
.ZG207A39     AIF   (K'&LNAME LE 0).ZG207A40    OK                      00769600
&ZCVAL        SETC '&ZCVAL LNAME'               INCORRECT KEY USED      00769700
.ZG207A40     AIF   (K'&NEWSECT LE 0).ZG207A41  OK                      00769800
&ZCVAL        SETC '&ZCVAL NEWSECT'             INCORRECT KEY USED      00769900
.ZG207A41     AIF   (K'&ENDDATA LE 0).ZG207A42  OK                      00770000
&ZCVAL        SETC '&ZCVAL ENDDATA'             INCORRECT KEY USED      00770100
.ZG207A42     AIF   (K'&MODLIB LE 0).ZG207A43   OK                      00770200
&ZCVAL        SETC '&ZCVAL MODLIB'              INCORRECT KEY USED      00770300
.ZG207A43     AIF   (K'&SNAME LE 0).ZG207A44    OK                      00770400
&ZCVAL        SETC '&ZCVAL SNAME'               INCORRECT KEY USED      00770500
.ZG207A44     AIF   (K'&REPLACE LE 0).ZG207A45  OK                      00770600
&ZCVAL        SETC '&ZCVAL REPLACE'             INCORRECT KEY USED      00770700
.ZG207A45     AIF   (K'&LIBOPT LE 0).ZG207A46   OK                      00770800
&ZCVAL        SETC '&ZCVAL LIBOPT'              INCORRECT KEY USED      00770900
.ZG207A46     AIF   (K'&OPTION LE 0).ZG207A47   OK                      00771000
&ZCVAL        SETC '&ZCVAL OPTION'              INCORRECT KEY USED      00771100
.ZG207A47     AIF   (K'&OPTVAL LE 0).ZG207A48   OK                      00771200
&ZCVAL        SETC '&ZCVAL OPTVAL'              INCORRECT KEY USED      00771300
.ZG207A48     AIF   (K'&PARMS LE 0).ZG207A49    OK                      00771400
&ZCVAL        SETC '&ZCVAL PARMS'               INCORRECT KEY USED      00771500
.ZG207A49     AIF   (K'&FILES LE 0).ZG207A50    OK                      00771600
&ZCVAL        SETC '&ZCVAL FILES'               INCORRECT KEY USED      00771700
.ZG207A50     AIF   (K'&EXITS LE 0).ZG207A51    OK                      00771800
&ZCVAL        SETC '&ZCVAL EXITS'               INCORRECT KEY USED      00771900
.ZG207A51     AIF   (K'&OPTIONS LE 0).ZG207A52  OK                      00772000
&ZCVAL        SETC '&ZCVAL OPTIONS'             INCORRECT KEY USED      00772100
.ZG207A52     AIF   (K'&ENVARS LE 0).ZG207A53   OK                      00772200
&ZCVAL        SETC '&ZCVAL ENVARS'              INCORRECT KEY USED      00772300
.ZG207A53     AIF   (K'&ORIGIN LE 0).ZG207A54   OK                      00772400
&ZCVAL        SETC '&ZCVAL ORIGIN'              INCORRECT KEY USED      00772500
.ZG207A54     AIF   (K'&REGION LE 0).ZG207A55   OK                      00772600
&ZCVAL        SETC '&ZCVAL REGION'              INCORRECT KEY USED      00772700
.ZG207A55     AIF   (K'&ZCVAL LE 0).ZG207A56    OK                      00772800
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               00772900
              AIF  (K'&ZCVAL LE 160).ZG207A56A                          00773000
&ZCVAL        SETC '&ZCVAL'(1,160)                                      00773100
&ZCVAL        SETC '&ZCVAL....'                                         00773200
.ZG207A56A    ANOP                                                      00773300
&ZMS          SETC  '"FUNC'                                             00773400
&ZMS          SETC  '&ZMS.=&FUNC"'                                      00773500
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                00773600
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                00773700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00773800
.ZG207A56     ANOP  ,                                                   00773900
.*----------------------------------------------------------------***   00774000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00774100
              AIF   (N'&WORKMOD LE 1).ZG209A    CK NUM                  00774200
&ZMS          SETC  '"WORKMOD='                                         00774300
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    00774400
&ZMS          SETC  '&ZMS "WORKMOD"'                                    00774500
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00774600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00774700
.ZG209A       ANOP  ,                                                   00774800
.*-------------------------------------------------------------------   00774900
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00775000
&ZXWORKMOD    SETC  'INPUT'     SET IN/OUTPUT                           00775100
&XWORKMOD     SETC  '&WORKMOD(1)'               SET XVARIABLE           00775200
              AIF   (N'&WORKMOD GT 1).ZG209B    MULTI                   00775300
&XWORKMOD     SETC  '&WORKMOD'  SET XVARIABLE                           00775400
.ZG209B       AIF   (K'&WORKMOD(1) GT 0).ZG209C                         00775500
&ZXWORKMOD    SETC  ''          RESET IN/OUTPUT                         00775600
&ZMS          SETC  ' '                                                 00775700
&ZMS          SETC  '&ZMS "WORKMOD" KEY AND ITS'                        00775800
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00775900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00776000
.ZG209C       ANOP  ,                                                   00776100
.*-------------------------------------------------------------------   00776200
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00776300
              AIF   (K'&ZXWORKMOD LE 0).ZG209R  NOT I/O                 00776400
              AIF   ('&XWORKMOD'(1,1) NE '(').ZG209R                    00776500
&ZCGPR        SETC  '&XWORKMOD'(2,K'&XWORKMOD-2)                        00776600
              AIF   ('&ZCGPR'(1,1) NE '0').ZG209P                       00776700
              AIF   (K'&ZCGPR GT 2).ZG209Q                              00776800
              AIF   ('&ZCGPR' EQ '0').ZG209Q                            00776900
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00777000
              AIF   (T'&ZCGPR NE 'N').ZG209Q    INVALID REG NAME        00777100
.ZG209P       ANOP  ,                                                   00777200
              AIF   (T'&ZCGPR NE 'N').ZG209R    NON NUMERIC             00777300
              AIF   ('&ZCGPR' LT '2').ZG209Q                            00777400
              AIF   ('&ZCGPR' LE '12').ZG209R                           00777500
.ZG209Q       ANOP  ,                                                   00777600
&ZMS          SETC  '"WORKMOD='                                         00777700
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    00777800
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00777900
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00778000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00778100
.ZG209R       ANOP  ,                                                   00778200
.*------------------------------------------------------------------    00778300
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00778400
&XITYPE       SETC  ''          INITIALIZE XVARIABLE                    00778500
.*-------------------------------------------------------------------   00778600
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00778700
.ZG213        ANOP  ,                                                   00778800
              AIF   (K'&ITYPE(1) LE 0).ZG213A                           00778900
&ZTLC         SETC 'C'                                                  00779000
              AIF   ('&ITYPE(1)' NE '&ZTLC').ZG214                      00779100
&XITYPE       SETC  'C'         SET KEYWORD                             00779200
              AIF   (N'&ITYPE LE 1).ZG213A      CK NUM                  00779300
&ZMS          SETC  '"ITYPE='                                           00779400
&ZMS          SETC  '&ZMS.&ITYPE"'                                      00779500
&ZMS          SETC  '&ZMS "ITYPE"'                                      00779600
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00779700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00779800
.ZG213A       ANOP  ,                                                   00779900
.*-------------------------------------------------------------------   00780000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00780100
.ZG214        ANOP  ,                                                   00780200
&ZTLC         SETC 'D'                                                  00780300
              AIF   ('&ITYPE(1)' NE '&ZTLC').ZG215                      00780400
&XITYPE       SETC  'D'         SET KEYWORD                             00780500
              AIF   (N'&ITYPE LE 1).ZG214A      CK NUM                  00780600
&ZMS          SETC  '"ITYPE='                                           00780700
&ZMS          SETC  '&ZMS.&ITYPE"'                                      00780800
&ZMS          SETC  '&ZMS "ITYPE"'                                      00780900
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00781000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00781100
.ZG214A       ANOP  ,                                                   00781200
.*-------------------------------------------------------------------   00781300
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00781400
.ZG215        ANOP  ,                                                   00781500
&ZTLC         SETC 'E'                                                  00781600
              AIF   ('&ITYPE(1)' NE '&ZTLC').ZG216                      00781700
&XITYPE       SETC  'E'         SET KEYWORD                             00781800
              AIF   (N'&ITYPE LE 1).ZG215A      CK NUM                  00781900
&ZMS          SETC  '"ITYPE='                                           00782000
&ZMS          SETC  '&ZMS.&ITYPE"'                                      00782100
&ZMS          SETC  '&ZMS "ITYPE"'                                      00782200
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00782300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00782400
.ZG215A       ANOP  ,                                                   00782500
.*-------------------------------------------------------------------   00782600
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00782700
.ZG216        ANOP  ,                                                   00782800
&ZTLC         SETC 'F'                                                  00782900
              AIF   ('&ITYPE(1)' NE '&ZTLC').ZG217                      00783000
&XITYPE       SETC  'F'         SET KEYWORD                             00783100
              AIF   (N'&ITYPE LE 1).ZG216A      CK NUM                  00783200
&ZMS          SETC  '"ITYPE='                                           00783300
&ZMS          SETC  '&ZMS.&ITYPE"'                                      00783400
&ZMS          SETC  '&ZMS "ITYPE"'                                      00783500
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00783600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00783700
.ZG216A       ANOP  ,                                                   00783800
.*------------------------------------------------------------------    00783900
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00784000
.ZG217        ANOP  ,                                                   00784100
&ZXITYPE      SETC  'INPUT'     SET IN/OUTPUT                           00784200
              AIF   (K'&XITYPE GT 0).ZG217E     VALID ARG               00784300
              AIF   (T'&ITYPE EQ 'O').ZG217D    OMITTED                 00784400
&ZASYSLNDX    SETA  0                                                   00784500
.ZG217A       ANOP  ,           POSITIONAL MACRO KEY                    00784600
&ZASYSLNDX    SETA  &ZASYSLNDX+1                                        00784700
              AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG217C                   00784800
&ZTLC         SETC 'ITYPE'                                              00784900
              AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG217A          00785000
.ZG217B       ANOP  ,                                                   00785100
&ZXITYPE      SETC  ''          RESET IN/OUTPUT                         00785200
&ZMS          SETC  'THE "ITYPE" KEY'                                   00785300
&ZMS          SETC  '&ZMS MUST CONTAIN ONE'                             00785400
              MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                    00785500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00785600
              AGO   .ZG217E                                             00785700
.ZG217C       ANOP  ,                                                   00785800
&ZXITYPE      SETC  ''          RESET IN/OUTPUT                         00785900
&ZMS          SETC  '"ITYPE='                                           00786000
&ZMS          SETC  '&ZMS.&ITYPE"'                                      00786100
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           00786200
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00786300
&ZMS          SETC  '&ZMS "C",'                                         00786400
&ZMS          SETC  '&ZMS "D",'                                         00786500
&ZMS          SETC  '&ZMS "E",'                                         00786600
&ZMS          SETC  '&ZMS OR "F".'                                      00786700
              MNOTE 8,' &ZMS '                                          00786800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00786900
              AGO   .ZG217E                                             00787000
.ZG217D       ANOP  ,                                                   00787100
&XITYPE       SETC  'C'         SET DEFAULT KEYWORD                     00787200
.ZG217E       ANOP  ,                                                   00787300
.*------------------------------------------------------------------    00787400
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00787500
              AIF   (K'&ITYPE(1) GT 0).ZG217F   PARM                    00787600
&XITYPE       SETC  ''          ENSURE NULL KEYWORD                     00787700
&ZXITYPE      SETC  ''          RESET IN/OUTPUT                         00787800
&ZMS          SETC  'THE'                                               00787900
&ZMS          SETC  '&ZMS "ITYPE" KEY AND ITS'                          00788000
&ZMS          SETC  '&ZMS ARGUMENT ARE REQUIRED.'                       00788100
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00788200
&ZMS          SETC  '&ZMS "C",'                                         00788300
&ZMS          SETC  '&ZMS "D",'                                         00788400
&ZMS          SETC  '&ZMS "E",'                                         00788500
&ZMS          SETC  '&ZMS OR "F".'                                      00788600
              MNOTE 8,' &ZMS '                                          00788700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00788800
.ZG217F       ANOP  ,                                                   00788900
.*----------------------------------------------------------------***   00789000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00789100
              AIF   (N'&DLLNAME LE 1).ZG219A    CK NUM                  00789200
&ZMS          SETC  '"DLLNAME='                                         00789300
&ZMS          SETC  '&ZMS.&DLLNAME"'                                    00789400
&ZMS          SETC  '&ZMS "DLLNAME"'                                    00789500
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00789600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00789700
.ZG219A       ANOP  ,                                                   00789800
.*-------------------------------------------------------------------   00789900
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00790000
&ZXDLLNAME    SETC  'INPUT'     SET IN/OUTPUT                           00790100
&XDLLNAME     SETC  '&DLLNAME(1)'               SET XVARIABLE           00790200
              AIF   (N'&DLLNAME GT 1).ZG219B    MULTI                   00790300
&XDLLNAME     SETC  '&DLLNAME'  SET XVARIABLE                           00790400
.ZG219B       AIF   (K'&DLLNAME(1) GT 0).ZG219C                         00790500
&ZXDLLNAME    SETC  ''          RESET IN/OUTPUT                         00790600
&ZMS          SETC  ' '                                                 00790700
&ZMS          SETC  '&ZMS "DLLNAME" KEY AND ITS'                        00790800
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00790900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00791000
.ZG219C       ANOP  ,                                                   00791100
.*-------------------------------------------------------------------   00791200
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00791300
              AIF   (K'&ZXDLLNAME LE 0).ZG219R  NOT I/O                 00791400
              AIF   ('&XDLLNAME'(1,1) NE '(').ZG219R                    00791500
&ZCGPR        SETC  '&XDLLNAME'(2,K'&XDLLNAME-2)                        00791600
              AIF   ('&ZCGPR'(1,1) NE '0').ZG219P                       00791700
              AIF   (K'&ZCGPR GT 2).ZG219Q                              00791800
              AIF   ('&ZCGPR' EQ '0').ZG219Q                            00791900
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00792000
              AIF   (T'&ZCGPR NE 'N').ZG219Q    INVALID REG NAME        00792100
.ZG219P       ANOP  ,                                                   00792200
              AIF   (T'&ZCGPR NE 'N').ZG219R    NON NUMERIC             00792300
              AIF   ('&ZCGPR' LT '2').ZG219Q                            00792400
              AIF   ('&ZCGPR' LE '12').ZG219R                           00792500
.ZG219Q       ANOP  ,                                                   00792600
&ZMS          SETC  '"DLLNAME='                                         00792700
&ZMS          SETC  '&ZMS.&DLLNAME"'                                    00792800
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00792900
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00793000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00793100
.ZG219R       ANOP  ,                                                   00793200
.*----------------------------------------------------------------***   00793300
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00793400
              AIF   (N'&INAME LE 1).ZG222A      CK NUM                  00793500
&ZMS          SETC  '"INAME='                                           00793600
&ZMS          SETC  '&ZMS.&INAME"'                                      00793700
&ZMS          SETC  '&ZMS "INAME"'                                      00793800
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00793900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00794000
.ZG222A       ANOP  ,                                                   00794100
.*-------------------------------------------------------------------   00794200
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00794300
&ZXINAME      SETC  'INPUT'     SET IN/OUTPUT                           00794400
&XINAME       SETC  '&INAME(1)'                 SET XVARIABLE           00794500
              AIF   (N'&INAME GT 1).ZG222B      MULTI                   00794600
&XINAME       SETC  '&INAME'    SET XVARIABLE                           00794700
.ZG222B       AIF   (K'&INAME(1) GT 0).ZG222C                           00794800
&ZXINAME      SETC  ''          RESET IN/OUTPUT                         00794900
&ZMS          SETC  ' '                                                 00795000
&ZMS          SETC  '&ZMS "INAME" KEY AND ITS'                          00795100
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00795200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00795300
.ZG222C       ANOP  ,                                                   00795400
.*-------------------------------------------------------------------   00795500
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00795600
              AIF   (K'&ZXINAME LE 0).ZG222R    NOT I/O                 00795700
              AIF   ('&XINAME'(1,1) NE '(').ZG222R                      00795800
&ZCGPR        SETC  '&XINAME'(2,K'&XINAME-2)                            00795900
              AIF   ('&ZCGPR'(1,1) NE '0').ZG222P                       00796000
              AIF   (K'&ZCGPR GT 2).ZG222Q                              00796100
              AIF   ('&ZCGPR' EQ '0').ZG222Q                            00796200
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00796300
              AIF   (T'&ZCGPR NE 'N').ZG222Q    INVALID REG NAME        00796400
.ZG222P       ANOP  ,                                                   00796500
              AIF   (T'&ZCGPR NE 'N').ZG222R    NON NUMERIC             00796600
              AIF   ('&ZCGPR' LT '2').ZG222Q                            00796700
              AIF   ('&ZCGPR' LE '12').ZG222R                           00796800
.ZG222Q       ANOP  ,                                                   00796900
&ZMS          SETC  '"INAME='                                           00797000
&ZMS          SETC  '&ZMS.&INAME"'                                      00797100
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00797200
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00797300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00797400
.ZG222R       ANOP  ,                                                   00797500
.*----------------------------------------------------------------***   00797600
.***AG.KMEKY01 NAME, OPT INPUT, ME KEYS -XVARIABLE                      00797700
&XOFFSET1     SETC  ''          INITIALIZE XVARIABLE                    00797800
              AIF   (K'&OFFSET LE 0).ZG225C                             00797900
&ZXOFFSET1    SETC  'INPUT'     SET IN/OUTPUT                           00798000
&XOFFSET1     SETC  'OFFSET'    SET XVARIABLE                           00798100
&ZXOFFSET     SETC  'INPUT'     SET IN/OUTPUT                           00798200
&XOFFSET      SETC  '&OFFSET(1)'                SET XVARIABLE PARM      00798300
              AIF   (N'&OFFSET GT 1).ZG225A                             00798400
&XOFFSET      SETC  '&OFFSET'   SET XVARIABLE PARM                      00798500
.ZG225A       AIF   (N'&OFFSET LE 1).ZG225B     CK NUM                  00798600
&ZMS          SETC  '"OFFSET='                                          00798700
&ZMS          SETC  '&ZMS.&OFFSET"'                                     00798800
&ZMS          SETC  '&ZMS "OFFSET"'                                     00798900
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00799000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00799100
.ZG225B       AIF   (K'&XOFFSET GT 0).ZG225C    ONE PARM                00799200
&ZXOFFSET1    SETC  ''          RESET IN/OUTPUT                         00799300
&ZXOFFSET     SETC  ''          RESET IN/OUTPUT                         00799400
&ZMS          SETC  'WHEN "IMPORT" IS SPECIFIED'                        00799500
&ZMS          SETC  '&ZMS , "OFFSET" KEY AND ITS'                       00799600
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00799700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00799800
.ZG225C       ANOP  ,                                                   00799900
.*------------------------------------------------------------------    00800000
.***AG.KMEKY07 NAME, OPT INPUT, ME KEYS -CHECK IF KEY ENTERED           00800100
              AIF   (K'&XOFFSET1 GT 0).ZG226B                           00800200
&ZXOFFSET1    SETC  'INPUT'     SET IN/OUTPUT                           00800300
&XOFFSET1     SETC  'OFFSET'    SET DEFAULT                             00800400
&ZXOFFSET     SETC  'INPUT'     SET IN/OUTPUT                           00800500
&XOFFSET      SETC  '0'         SET DEFAULT PARM                        00800600
.ZG226B       ANOP  ,                                                   00800700
.*-------------------------------------------------------------------   00800800
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 00800900
              AIF   (K'&ZXOFFSET LE 0).ZG226R   NOT I/O                 00801000
              AIF   ('&XOFFSET'(1,1) NE '(').ZG226R                     00801100
&ZCGPR        SETC  '&XOFFSET'(2,K'&XOFFSET-2)                          00801200
              AIF   ('&ZCGPR'(1,1) NE '0').ZG226P                       00801300
              AIF   (K'&ZCGPR GT 2).ZG226Q                              00801400
              AIF   ('&ZCGPR' EQ '0').ZG226Q                            00801500
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00801600
              AIF   (T'&ZCGPR NE 'N').ZG226Q    INVALID REG NAME        00801700
.ZG226P       ANOP  ,                                                   00801800
              AIF   (T'&ZCGPR NE 'N').ZG226R    NON NUMERIC             00801900
              AIF   ('&ZCGPR' LT '2').ZG226Q                            00802000
              AIF   ('&ZCGPR' LE '12').ZG226R                           00802100
.ZG226Q       ANOP  ,                                                   00802200
&ZMS          SETC  '"OFFSET='                                          00802300
&ZMS          SETC  '&ZMS.&OFFSET"'                                     00802400
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00802500
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00802600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00802700
.ZG226R       ANOP  ,                                                   00802800
.*-------------------------------------------------------------------   00802900
.***AG.KMEKY13 NAME, OPT INPUT, ME KEYS -PROCESS DEPENDENCIES           00803000
.ZG225ZY  AIF    ('&XOFFSET1' NE 'OFFSET').ZG226ZY                      00803100
.*-------------------------------------------------------------------   00803200
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 00803300
              AIF   (K'&ZXOFFSET LE 0).ZG225R   NOT I/O                 00803400
              AIF   ('&XOFFSET'(1,1) NE '(').ZG225R                     00803500
&ZCGPR        SETC  '&XOFFSET'(2,K'&XOFFSET-2)                          00803600
              AIF   ('&ZCGPR'(1,1) NE '0').ZG225P                       00803700
              AIF   (K'&ZCGPR GT 2).ZG225Q                              00803800
              AIF   ('&ZCGPR' EQ '0').ZG225Q                            00803900
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00804000
              AIF   (T'&ZCGPR NE 'N').ZG225Q    INVALID REG NAME        00804100
.ZG225P       ANOP  ,                                                   00804200
              AIF   (T'&ZCGPR NE 'N').ZG225R    NON NUMERIC             00804300
              AIF   ('&ZCGPR' LT '2').ZG225Q                            00804400
              AIF   ('&ZCGPR' LE '12').ZG225R                           00804500
.ZG225Q       ANOP  ,                                                   00804600
&ZMS          SETC  '"OFFSET='                                          00804700
&ZMS          SETC  '&ZMS.&OFFSET"'                                     00804800
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00804900
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00805000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00805100
.ZG225R       ANOP  ,                                                   00805200
.*-------------------------------------------------------------------   00805300
.***AG.KMEKY15 NAME, OPT INPUT, ME KEYS -END                            00805400
.ZG226ZY      ANOP ,            END MUTUALLY EXCLUSIVE KEYS             00805500
.*-------------------------------------------------------------------   00805600
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00805700
.ZG227        ANOP  ,                                                   00805800
&ZTLC         SETC 'INCLUDE'                                            00805900
              AIF   ('&FUNC(1)' NE '&ZTLC').ZG283                       00806000
&XFUNC        SETC  'INCLUDE'   SET KEYWORD                             00806100
              AIF   (N'&FUNC LE 1).ZG227A       CK NUM                  00806200
&ZMS          SETC  '"FUNC='                                            00806300
&ZMS          SETC  '&ZMS.&FUNC"'                                       00806400
&ZMS          SETC  '&ZMS "FUNC"'                                       00806500
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00806600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00806700
.ZG227A       ANOP  ,                                                   00806800
.*------------------------------------------------------------------    00806900
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00807000
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             00807100
.ZG227A0      AIF   (K'&ANAME LE 0).ZG227A1     OK                      00807200
&ZCVAL        SETC '&ZCVAL ANAME'               INCORRECT KEY USED      00807300
.ZG227A1      AIF   (K'&ENAME LE 0).ZG227A2     OK                      00807400
&ZCVAL        SETC '&ZCVAL ENAME'               INCORRECT KEY USED      00807500
.ZG227A2      AIF   (K'&AMODE LE 0).ZG227A3     OK                      00807600
&ZCVAL        SETC '&ZCVAL AMODE'               INCORRECT KEY USED      00807700
.ZG227A3      AIF   (K'&ATYPE LE 0).ZG227A4     OK                      00807800
&ZCVAL        SETC '&ZCVAL ATYPE'               INCORRECT KEY USED      00807900
.ZG227A4      AIF   (K'&DNAME LE 0).ZG227A5     OK                      00808000
&ZCVAL        SETC '&ZCVAL DNAME'               INCORRECT KEY USED      00808100
.ZG227A5      AIF   (K'&SECTION LE 0).ZG227A6   OK                      00808200
&ZCVAL        SETC '&ZCVAL SECTION'             INCORRECT KEY USED      00808300
.ZG227A6      AIF   (K'&BDY LE 0).ZG227A7       OK                      00808400
&ZCVAL        SETC '&ZCVAL BDY'                 INCORRECT KEY USED      00808500
.ZG227A7      AIF   (K'&CLASSL LE 0).ZG227A8    OK                      00808600
&ZCVAL        SETC '&ZCVAL CLASSL'              INCORRECT KEY USED      00808700
.ZG227A8      AIF   (K'&OLDNAME LE 0).ZG227A9   OK                      00808800
&ZCVAL        SETC '&ZCVAL OLDNAME'             INCORRECT KEY USED      00808900
.ZG227A9      AIF   (K'&NEWNAME LE 0).ZG227A10  OK                      00809000
&ZCVAL        SETC '&ZCVAL NEWNAME'             INCORRECT KEY USED      00809100
.ZG227A10     AIF   (K'&COUNT LE 0).ZG227A11    OK                      00809200
&ZCVAL        SETC '&ZCVAL COUNT'               INCORRECT KEY USED      00809300
.ZG227A11     AIF   (K'&MODE LE 0).ZG227A12     OK                      00809400
&ZCVAL        SETC '&ZCVAL MODE'                INCORRECT KEY USED      00809500
.ZG227A12     AIF   (K'&CLASS LE 0).ZG227A13    OK                      00809600
&ZCVAL        SETC '&ZCVAL CLASS'               INCORRECT KEY USED      00809700
.ZG227A13     AIF   (K'&CALLIB LE 0).ZG227A14   OK                      00809800
&ZCVAL        SETC '&ZCVAL CALLIB'              INCORRECT KEY USED      00809900
.ZG227A14     AIF   (K'&DIALOG LE 0).ZG227A15   OK                      00810000
&ZCVAL        SETC '&ZCVAL DIALOG'              INCORRECT KEY USED      00810100
.ZG227A15     AIF   (K'&INTENT LE 0).ZG227A16   OK                      00810200
&ZCVAL        SETC '&ZCVAL INTENT'              INCORRECT KEY USED      00810300
.ZG227A16     AIF   (K'&PROTECT LE 0).ZG227A17  OK                      00810400
&ZCVAL        SETC '&ZCVAL PROTECT'             INCORRECT KEY USED      00810500
.ZG227A17     AIF   (K'&RENAMEL LE 0).ZG227A18  OK                      00810600
&ZCVAL        SETC '&ZCVAL RENAMEL'             INCORRECT KEY USED      00810700
.ZG227A18     AIF   (K'&AREA LE 0).ZG227A19     OK                      00810800
&ZCVAL        SETC '&ZCVAL AREA'                INCORRECT KEY USED      00810900
.ZG227A19     AIF   (K'&CURSOR LE 0).ZG227A20   OK                      00811000
&ZCVAL        SETC '&ZCVAL CURSOR'              INCORRECT KEY USED      00811100
.ZG227A20     AIF   (K'&RELOC LE 0).ZG227A21    OK                      00811200
&ZCVAL        SETC '&ZCVAL RELOC'               INCORRECT KEY USED      00811300
.ZG227A21     AIF   (K'&RECTYPE LE 0).ZG227A22  OK                      00811400
&ZCVAL        SETC '&ZCVAL RECTYPE'             INCORRECT KEY USED      00811500
.ZG227A22     AIF   (K'&OFFSET LE 0).ZG227A23   OK                      00811600
&ZCVAL        SETC '&ZCVAL OFFSET'              INCORRECT KEY USED      00811700
.ZG227A23     AIF   (K'&SYMBOL LE 0).ZG227A24   OK                      00811800
&ZCVAL        SETC '&ZCVAL SYMBOL'              INCORRECT KEY USED      00811900
.ZG227A24     AIF   (K'&TCOUNT LE 0).ZG227A25   OK                      00812000
&ZCVAL        SETC '&ZCVAL TCOUNT'              INCORRECT KEY USED      00812100
.ZG227A25     AIF   (K'&NTYPE LE 0).ZG227A26    OK                      00812200
&ZCVAL        SETC '&ZCVAL NTYPE'               INCORRECT KEY USED      00812300
.ZG227A26     AIF   (K'&CULIST LE 0).ZG227A27   OK                      00812400
&ZCVAL        SETC '&ZCVAL CULIST'              INCORRECT KEY USED      00812500
.ZG227A27     AIF   (K'&ITYPE LE 0).ZG227A28    OK                      00812600
&ZCVAL        SETC '&ZCVAL ITYPE'               INCORRECT KEY USED      00812700
.ZG227A28     AIF   (K'&DLLNAME LE 0).ZG227A29  OK                      00812800
&ZCVAL        SETC '&ZCVAL DLLNAME'             INCORRECT KEY USED      00812900
.ZG227A29     AIF   (K'&INAME LE 0).ZG227A30    OK                      00813000
&ZCVAL        SETC '&ZCVAL INAME'               INCORRECT KEY USED      00813100
.ZG227A30     AIF   (K'&EPLOC LE 0).ZG227A31    OK                      00813200
&ZCVAL        SETC '&ZCVAL EPLOC'               INCORRECT KEY USED      00813300
.ZG227A31     AIF   (K'&IDENTIFY LE 0).ZG227A32  OK                     00813400
&ZCVAL        SETC '&ZCVAL IDENTIFY'            INCORRECT KEY USED      00813500
.ZG227A32     AIF   (K'&EXTLST LE 0).ZG227A33   OK                      00813600
&ZCVAL        SETC '&ZCVAL EXTLST'              INCORRECT KEY USED      00813700
.ZG227A33     AIF   (K'&LNAME LE 0).ZG227A34    OK                      00813800
&ZCVAL        SETC '&ZCVAL LNAME'               INCORRECT KEY USED      00813900
.ZG227A34     AIF   (K'&NEWSECT LE 0).ZG227A35  OK                      00814000
&ZCVAL        SETC '&ZCVAL NEWSECT'             INCORRECT KEY USED      00814100
.ZG227A35     AIF   (K'&ENDDATA LE 0).ZG227A36  OK                      00814200
&ZCVAL        SETC '&ZCVAL ENDDATA'             INCORRECT KEY USED      00814300
.ZG227A36     AIF   (K'&MODLIB LE 0).ZG227A37   OK                      00814400
&ZCVAL        SETC '&ZCVAL MODLIB'              INCORRECT KEY USED      00814500
.ZG227A37     AIF   (K'&SNAME LE 0).ZG227A38    OK                      00814600
&ZCVAL        SETC '&ZCVAL SNAME'               INCORRECT KEY USED      00814700
.ZG227A38     AIF   (K'&REPLACE LE 0).ZG227A39  OK                      00814800
&ZCVAL        SETC '&ZCVAL REPLACE'             INCORRECT KEY USED      00814900
.ZG227A39     AIF   (K'&LIBOPT LE 0).ZG227A40   OK                      00815000
&ZCVAL        SETC '&ZCVAL LIBOPT'              INCORRECT KEY USED      00815100
.ZG227A40     AIF   (K'&OPTION LE 0).ZG227A41   OK                      00815200
&ZCVAL        SETC '&ZCVAL OPTION'              INCORRECT KEY USED      00815300
.ZG227A41     AIF   (K'&OPTVAL LE 0).ZG227A42   OK                      00815400
&ZCVAL        SETC '&ZCVAL OPTVAL'              INCORRECT KEY USED      00815500
.ZG227A42     AIF   (K'&PARMS LE 0).ZG227A43    OK                      00815600
&ZCVAL        SETC '&ZCVAL PARMS'               INCORRECT KEY USED      00815700
.ZG227A43     AIF   (K'&FILES LE 0).ZG227A44    OK                      00815800
&ZCVAL        SETC '&ZCVAL FILES'               INCORRECT KEY USED      00815900
.ZG227A44     AIF   (K'&EXITS LE 0).ZG227A45    OK                      00816000
&ZCVAL        SETC '&ZCVAL EXITS'               INCORRECT KEY USED      00816100
.ZG227A45     AIF   (K'&OPTIONS LE 0).ZG227A46  OK                      00816200
&ZCVAL        SETC '&ZCVAL OPTIONS'             INCORRECT KEY USED      00816300
.ZG227A46     AIF   (K'&ENVARS LE 0).ZG227A47   OK                      00816400
&ZCVAL        SETC '&ZCVAL ENVARS'              INCORRECT KEY USED      00816500
.ZG227A47     AIF   (K'&ORIGIN LE 0).ZG227A48   OK                      00816600
&ZCVAL        SETC '&ZCVAL ORIGIN'              INCORRECT KEY USED      00816700
.ZG227A48     AIF   (K'&REGION LE 0).ZG227A49   OK                      00816800
&ZCVAL        SETC '&ZCVAL REGION'              INCORRECT KEY USED      00816900
.ZG227A49     AIF   (K'&ZCVAL LE 0).ZG227A50    OK                      00817000
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               00817100
              AIF  (K'&ZCVAL LE 160).ZG227A50A                          00817200
&ZCVAL        SETC '&ZCVAL'(1,160)                                      00817300
&ZCVAL        SETC '&ZCVAL....'                                         00817400
.ZG227A50A    ANOP                                                      00817500
&ZMS          SETC  '"FUNC'                                             00817600
&ZMS          SETC  '&ZMS.=&FUNC"'                                      00817700
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                00817800
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                00817900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00818000
.ZG227A50     ANOP  ,                                                   00818100
.*----------------------------------------------------------------***   00818200
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00818300
              AIF   (N'&WORKMOD LE 1).ZG229A    CK NUM                  00818400
&ZMS          SETC  '"WORKMOD='                                         00818500
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    00818600
&ZMS          SETC  '&ZMS "WORKMOD"'                                    00818700
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00818800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00818900
.ZG229A       ANOP  ,                                                   00819000
.*-------------------------------------------------------------------   00819100
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00819200
&ZXWORKMOD    SETC  'INPUT'     SET IN/OUTPUT                           00819300
&XWORKMOD     SETC  '&WORKMOD(1)'               SET XVARIABLE           00819400
              AIF   (N'&WORKMOD GT 1).ZG229B    MULTI                   00819500
&XWORKMOD     SETC  '&WORKMOD'  SET XVARIABLE                           00819600
.ZG229B       AIF   (K'&WORKMOD(1) GT 0).ZG229C                         00819700
&ZXWORKMOD    SETC  ''          RESET IN/OUTPUT                         00819800
&ZMS          SETC  ' '                                                 00819900
&ZMS          SETC  '&ZMS "WORKMOD" KEY AND ITS'                        00820000
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00820100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00820200
.ZG229C       ANOP  ,                                                   00820300
.*-------------------------------------------------------------------   00820400
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00820500
              AIF   (K'&ZXWORKMOD LE 0).ZG229R  NOT I/O                 00820600
              AIF   ('&XWORKMOD'(1,1) NE '(').ZG229R                    00820700
&ZCGPR        SETC  '&XWORKMOD'(2,K'&XWORKMOD-2)                        00820800
              AIF   ('&ZCGPR'(1,1) NE '0').ZG229P                       00820900
              AIF   (K'&ZCGPR GT 2).ZG229Q                              00821000
              AIF   ('&ZCGPR' EQ '0').ZG229Q                            00821100
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00821200
              AIF   (T'&ZCGPR NE 'N').ZG229Q    INVALID REG NAME        00821300
.ZG229P       ANOP  ,                                                   00821400
              AIF   (T'&ZCGPR NE 'N').ZG229R    NON NUMERIC             00821500
              AIF   ('&ZCGPR' LT '2').ZG229Q                            00821600
              AIF   ('&ZCGPR' LE '12').ZG229R                           00821700
.ZG229Q       ANOP  ,                                                   00821800
&ZMS          SETC  '"WORKMOD='                                         00821900
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    00822000
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00822100
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00822200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00822300
.ZG229R       ANOP  ,                                                   00822400
.*------------------------------------------------------------------    00822500
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00822600
&XINTYPE      SETC  ''          INITIALIZE XVARIABLE                    00822700
.*-------------------------------------------------------------------   00822800
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00822900
.ZG233        ANOP  ,                                                   00823000
              AIF   (K'&INTYPE(1) LE 0).ZG233A                          00823100
&ZTLC         SETC 'D'                                                  00823200
              AIF   ('&INTYPE(1)' NE '&ZTLC').ZG240                     00823300
&XINTYPE      SETC  'D'         SET KEYWORD                             00823400
              AIF   (N'&INTYPE LE 1).ZG233A     CK NUM                  00823500
&ZMS          SETC  '"INTYPE='                                          00823600
&ZMS          SETC  '&ZMS.&INTYPE"'                                     00823700
&ZMS          SETC  '&ZMS "INTYPE"'                                     00823800
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00823900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00824000
.ZG233A       ANOP  ,                                                   00824100
.*------------------------------------------------------------------    00824200
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00824300
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             00824400
.ZG233A0      AIF   (K'&MEMBER LE 0).ZG233A1    OK                      00824500
&ZCVAL        SETC '&ZCVAL MEMBER'              INCORRECT KEY USED      00824600
.ZG233A1      AIF   (K'&PATHNAME LE 0).ZG233A2  OK                      00824700
&ZCVAL        SETC '&ZCVAL PATHNAME'            INCORRECT KEY USED      00824800
.ZG233A2      AIF   (K'&DCBPTR LE 0).ZG233A3    OK                      00824900
&ZCVAL        SETC '&ZCVAL DCBPTR'              INCORRECT KEY USED      00825000
.ZG233A3      AIF   (K'&EPTOKEN LE 0).ZG233A4   OK                      00825100
&ZCVAL        SETC '&ZCVAL EPTOKEN'             INCORRECT KEY USED      00825200
.ZG233A4      AIF   (K'&ZCVAL LE 0).ZG233A5     OK                      00825300
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               00825400
&ZMS          SETC  '"INTYPE'                                           00825500
&ZMS          SETC  '&ZMS.=&INTYPE"'                                    00825600
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                00825700
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                00825800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00825900
.ZG233A5      ANOP  ,                                                   00826000
.*----------------------------------------------------------------***   00826100
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00826200
&XPATHLIB     SETC  ''          INITIALIZE XVARIABLE                    00826300
              AIF   (K'&DDNAME LE 0).ZG235C                             00826400
&ZXPATHLIB    SETC  'INPUT'     SET IN/OUTPUT                           00826500
&XPATHLIB     SETC  'DDNAME'    SET XVARIABLE                           00826600
&ZXDDNAME     SETC  'INPUT'     SET IN/OUTPUT                           00826700
&XDDNAME      SETC  '&DDNAME(1)'                SET XVARIABLE PARM      00826800
              AIF   (N'&DDNAME GT 1).ZG235A                             00826900
&XDDNAME      SETC  '&DDNAME'   SET XVARIABLE PARM                      00827000
.ZG235A       AIF   (N'&DDNAME LE 1).ZG235B     CK NUM                  00827100
&ZMS          SETC  '"DDNAME='                                          00827200
&ZMS          SETC  '&ZMS.&DDNAME"'                                     00827300
&ZMS          SETC  '&ZMS "DDNAME"'                                     00827400
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00827500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00827600
.ZG235B       AIF   (K'&XDDNAME GT 0).ZG235C    ONE PARM                00827700
&ZXPATHLIB    SETC  ''          RESET IN/OUTPUT                         00827800
&ZXDDNAME     SETC  ''          RESET IN/OUTPUT                         00827900
&ZMS          SETC  ' '                                                 00828000
&ZMS          SETC  '&ZMS "DDNAME" KEY AND ITS'                         00828100
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00828200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00828300
.ZG235C       ANOP  ,                                                   00828400
.*------------------------------------------------------------------    00828500
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           00828600
              AIF   (K'&XPATHLIB GT 0).ZG236B                           00828700
&ZXPATHLIB    SETC  ''          RESET IN/OUTPUT                         00828800
&ZXDDNAME     SETC  ''          RESET IN/OUTPUT                         00828900
&XPATHLIB     SETC  ''          ENSURE NULL                             00829000
&XDDNAME      SETC  ''          ENSURE NULL                             00829100
&ZMS          SETC  'ONE OF THE FOLLOWING'                              00829200
&ZMS          SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'                 00829300
&ZMS          SETC  '&ZMS REQUIRED:'                                    00829400
&ZMS          SETC  '&ZMS "DDNAME".'            VALID ME KEY            00829500
              MNOTE 8,' &ZMS '                                          00829600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00829700
.ZG236B       ANOP  ,                                                   00829800
.*-------------------------------------------------------------------   00829900
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00830000
.ZG235ZY  AIF    ('&XPATHLIB' NE 'DDNAME').ZG236ZY                      00830100
.*-------------------------------------------------------------------   00830200
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00830300
              AIF   (K'&ZXDDNAME LE 0).ZG235R   NOT I/O                 00830400
              AIF   ('&XDDNAME'(1,1) NE '(').ZG235R                     00830500
&ZCGPR        SETC  '&XDDNAME'(2,K'&XDDNAME-2)                          00830600
              AIF   ('&ZCGPR'(1,1) NE '0').ZG235P                       00830700
              AIF   (K'&ZCGPR GT 2).ZG235Q                              00830800
              AIF   ('&ZCGPR' EQ '0').ZG235Q                            00830900
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00831000
              AIF   (T'&ZCGPR NE 'N').ZG235Q    INVALID REG NAME        00831100
.ZG235P       ANOP  ,                                                   00831200
              AIF   (T'&ZCGPR NE 'N').ZG235R    NON NUMERIC             00831300
              AIF   ('&ZCGPR' LT '2').ZG235Q                            00831400
              AIF   ('&ZCGPR' LE '12').ZG235R                           00831500
.ZG235Q       ANOP  ,                                                   00831600
&ZMS          SETC  '"DDNAME='                                          00831700
&ZMS          SETC  '&ZMS.&DDNAME"'                                     00831800
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00831900
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00832000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00832100
.ZG235R       ANOP  ,                                                   00832200
.*-------------------------------------------------------------------   00832300
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            00832400
.ZG236ZY      ANOP ,            END MUTUALLY EXCLUSIVE KEYS             00832500
.*----------------------------------------------------------------***   00832600
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00832700
              AIF   (N'&DEPTR LE 1).ZG238A      CK NUM                  00832800
&ZMS          SETC  '"DEPTR='                                           00832900
&ZMS          SETC  '&ZMS.&DEPTR"'                                      00833000
&ZMS          SETC  '&ZMS "DEPTR"'                                      00833100
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00833200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00833300
.ZG238A       ANOP  ,                                                   00833400
.*-------------------------------------------------------------------   00833500
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00833600
&ZXDEPTR      SETC  'INPUT'     SET IN/OUTPUT                           00833700
&XDEPTR       SETC  '&DEPTR(1)'                 SET XVARIABLE           00833800
              AIF   (N'&DEPTR GT 1).ZG238B      MULTI                   00833900
&XDEPTR       SETC  '&DEPTR'    SET XVARIABLE                           00834000
.ZG238B       AIF   (K'&DEPTR(1) GT 0).ZG238C                           00834100
&ZXDEPTR      SETC  ''          RESET IN/OUTPUT                         00834200
&ZMS          SETC  ' '                                                 00834300
&ZMS          SETC  '&ZMS "DEPTR" KEY AND ITS'                          00834400
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00834500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00834600
.ZG238C       ANOP  ,                                                   00834700
.*-------------------------------------------------------------------   00834800
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00834900
              AIF   (K'&ZXDEPTR LE 0).ZG238R    NOT I/O                 00835000
              AIF   ('&XDEPTR'(1,1) NE '(').ZG238R                      00835100
&ZCGPR        SETC  '&XDEPTR'(2,K'&XDEPTR-2)                            00835200
              AIF   ('&ZCGPR'(1,1) NE '0').ZG238P                       00835300
              AIF   (K'&ZCGPR GT 2).ZG238Q                              00835400
              AIF   ('&ZCGPR' EQ '0').ZG238Q                            00835500
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00835600
              AIF   (T'&ZCGPR NE 'N').ZG238Q    INVALID REG NAME        00835700
.ZG238P       ANOP  ,                                                   00835800
              AIF   (T'&ZCGPR NE 'N').ZG238R    NON NUMERIC             00835900
              AIF   ('&ZCGPR' LT '2').ZG238Q                            00836000
              AIF   ('&ZCGPR' LE '12').ZG238R                           00836100
.ZG238Q       ANOP  ,                                                   00836200
&ZMS          SETC  '"DEPTR='                                           00836300
&ZMS          SETC  '&ZMS.&DEPTR"'                                      00836400
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00836500
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00836600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00836700
.ZG238R       ANOP  ,                                                   00836800
.*-------------------------------------------------------------------   00836900
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00837000
.ZG240        ANOP  ,                                                   00837100
&ZTLC         SETC 'N'                                                  00837200
              AIF   ('&INTYPE(1)' NE '&ZTLC').ZG248                     00837300
&XINTYPE      SETC  'N'         SET KEYWORD                             00837400
              AIF   (N'&INTYPE LE 1).ZG240A     CK NUM                  00837500
&ZMS          SETC  '"INTYPE='                                          00837600
&ZMS          SETC  '&ZMS.&INTYPE"'                                     00837700
&ZMS          SETC  '&ZMS "INTYPE"'                                     00837800
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00837900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00838000
.ZG240A       ANOP  ,                                                   00838100
.*------------------------------------------------------------------    00838200
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00838300
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             00838400
.ZG240A0      AIF   (K'&DEPTR LE 0).ZG240A1     OK                      00838500
&ZCVAL        SETC '&ZCVAL DEPTR'               INCORRECT KEY USED      00838600
.ZG240A1      AIF   (K'&DCBPTR LE 0).ZG240A2    OK                      00838700
&ZCVAL        SETC '&ZCVAL DCBPTR'              INCORRECT KEY USED      00838800
.ZG240A2      AIF   (K'&EPTOKEN LE 0).ZG240A3   OK                      00838900
&ZCVAL        SETC '&ZCVAL EPTOKEN'             INCORRECT KEY USED      00839000
.ZG240A3      AIF   (K'&ZCVAL LE 0).ZG240A4     OK                      00839100
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               00839200
&ZMS          SETC  '"INTYPE'                                           00839300
&ZMS          SETC  '&ZMS.=&INTYPE"'                                    00839400
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                00839500
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                00839600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00839700
.ZG240A4      ANOP  ,                                                   00839800
.*----------------------------------------------------------------***   00839900
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00840000
&XPATHLIB     SETC  ''          INITIALIZE XVARIABLE                    00840100
              AIF   (K'&DDNAME LE 0).ZG242C                             00840200
&ZXPATHLIB    SETC  'INPUT'     SET IN/OUTPUT                           00840300
&XPATHLIB     SETC  'DDNAME'    SET XVARIABLE                           00840400
&ZXDDNAME     SETC  'INPUT'     SET IN/OUTPUT                           00840500
&XDDNAME      SETC  '&DDNAME(1)'                SET XVARIABLE PARM      00840600
              AIF   (N'&DDNAME GT 1).ZG242A                             00840700
&XDDNAME      SETC  '&DDNAME'   SET XVARIABLE PARM                      00840800
.ZG242A       AIF   (N'&DDNAME LE 1).ZG242B     CK NUM                  00840900
&ZMS          SETC  '"DDNAME='                                          00841000
&ZMS          SETC  '&ZMS.&DDNAME"'                                     00841100
&ZMS          SETC  '&ZMS "DDNAME"'                                     00841200
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00841300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00841400
.ZG242B       AIF   (K'&XDDNAME GT 0).ZG242C    ONE PARM                00841500
&ZXPATHLIB    SETC  ''          RESET IN/OUTPUT                         00841600
&ZXDDNAME     SETC  ''          RESET IN/OUTPUT                         00841700
&ZMS          SETC  ' '                                                 00841800
&ZMS          SETC  '&ZMS "DDNAME" KEY AND ITS'                         00841900
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00842000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00842100
.ZG242C       ANOP  ,                                                   00842200
.*----------------------------------------------------------------***   00842300
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00842400
              AIF   (K'&PATHNAME LE 0).ZG246D   NO ME KEY               00842500
              AIF   (N'&PATHNAME LE 1).ZG246A   CK NUM                  00842600
&ZMS          SETC  '"PATHNAME='                                        00842700
&ZMS          SETC  '&ZMS.&PATHNAME"'                                   00842800
&ZMS          SETC  '&ZMS "PATHNAME"'                                   00842900
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00843000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00843100
.ZG246A       AIF   (K'&XPATHLIB LE 0).ZG246B                           00843200
&ZMS          SETC  '"PATHNAME'                                         00843300
&ZMS          SETC  '&ZMS.=&PATHNAME"'                                  00843400
&ZMS          SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'               00843500
&ZMS          SETC  '&ZMS "&XPATHLIB"'                                  00843600
              MNOTE 8,' &ZMS KEY.'                                      00843700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00843800
              AGO   .ZG246D                                             00843900
.*                                                                      00844000
.ZG246B       ANOP  ,                                                   00844100
&ZXPATHLIB    SETC  'INPUT'     SET IN/OUTPUT                           00844200
&XPATHLIB     SETC  'PATHNAME'  SET XVARIABLE                           00844300
&ZXPATHNAME   SETC  'INPUT'     SET IN/OUTPUT                           00844400
&XPATHNAME    SETC  '&PATHNAME(1)'              SET XVARIABLE PARM      00844500
              AIF   (N'&PATHNAME GT 1).ZG246C                           00844600
&XPATHNAME    SETC  '&PATHNAME'                 SET XVARIABLE PARM      00844700
.ZG246C       AIF   (K'&XPATHNAME GT 0).ZG246D  ONE PARM                00844800
&ZXPATHLIB    SETC  ''          RESET IN/OUTPUT                         00844900
&ZXPATHNAME   SETC  ''          RESET IN/OUTPUT                         00845000
&ZMS          SETC  ' '                                                 00845100
&ZMS          SETC  '&ZMS "PATHNAME" KEY AND ITS'                       00845200
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00845300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00845400
.ZG246D       ANOP  ,                                                   00845500
.*------------------------------------------------------------------    00845600
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           00845700
              AIF   (K'&XPATHLIB GT 0).ZG247B                           00845800
&ZXPATHLIB    SETC  ''          RESET IN/OUTPUT                         00845900
&ZXDDNAME     SETC  ''          RESET IN/OUTPUT                         00846000
&XPATHLIB     SETC  ''          ENSURE NULL                             00846100
&XDDNAME      SETC  ''          ENSURE NULL                             00846200
&ZMS          SETC  'ONE OF THE FOLLOWING'                              00846300
&ZMS          SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'                 00846400
&ZMS          SETC  '&ZMS REQUIRED:'                                    00846500
&ZMS          SETC  '&ZMS "DDNAME"'             VALID ME KEY            00846600
&ZMS          SETC  '&ZMS OR "PATHNAME".'       VALID ME KEY            00846700
              MNOTE 8,' &ZMS '                                          00846800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00846900
.ZG247B       ANOP  ,                                                   00847000
.*-------------------------------------------------------------------   00847100
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00847200
.ZG242ZY  AIF    ('&XPATHLIB' NE 'DDNAME').ZG246ZY                      00847300
.*-------------------------------------------------------------------   00847400
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00847500
              AIF   (K'&ZXDDNAME LE 0).ZG242R   NOT I/O                 00847600
              AIF   ('&XDDNAME'(1,1) NE '(').ZG242R                     00847700
&ZCGPR        SETC  '&XDDNAME'(2,K'&XDDNAME-2)                          00847800
              AIF   ('&ZCGPR'(1,1) NE '0').ZG242P                       00847900
              AIF   (K'&ZCGPR GT 2).ZG242Q                              00848000
              AIF   ('&ZCGPR' EQ '0').ZG242Q                            00848100
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00848200
              AIF   (T'&ZCGPR NE 'N').ZG242Q    INVALID REG NAME        00848300
.ZG242P       ANOP  ,                                                   00848400
              AIF   (T'&ZCGPR NE 'N').ZG242R    NON NUMERIC             00848500
              AIF   ('&ZCGPR' LT '2').ZG242Q                            00848600
              AIF   ('&ZCGPR' LE '12').ZG242R                           00848700
.ZG242Q       ANOP  ,                                                   00848800
&ZMS          SETC  '"DDNAME='                                          00848900
&ZMS          SETC  '&ZMS.&DDNAME"'                                     00849000
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00849100
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00849200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00849300
.ZG242R       ANOP  ,                                                   00849400
.*----------------------------------------------------------------***   00849500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00849600
              AIF   (N'&MEMBER LE 1).ZG244A     CK NUM                  00849700
&ZMS          SETC  '"MEMBER='                                          00849800
&ZMS          SETC  '&ZMS.&MEMBER"'                                     00849900
&ZMS          SETC  '&ZMS "MEMBER"'                                     00850000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00850100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00850200
.ZG244A       ANOP  ,                                                   00850300
.*-------------------------------------------------------------------   00850400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00850500
&ZXMEMBER     SETC  'INPUT'     SET IN/OUTPUT                           00850600
&XMEMBER      SETC  '0'                                                 00850700
              AIF   (K'&MEMBER(1) LE 0).ZG244B  PARM                    00850800
&XMEMBER      SETC  '&MEMBER(1)'                SET XVARIABLE           00850900
              AIF   (N'&MEMBER GT 1).ZG244B     MULTI                   00851000
&XMEMBER      SETC  '&MEMBER'   SET XVARIABLE                           00851100
.ZG244B       ANOP  ,                                                   00851200
.*-------------------------------------------------------------------   00851300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00851400
              AIF   (K'&ZXMEMBER LE 0).ZG244R   NOT I/O                 00851500
         AIF   ('&XMEMBER' EQ '0').ZG244R                               00851600
              AIF   ('&XMEMBER'(1,1) NE '(').ZG244R                     00851700
&ZCGPR        SETC  '&XMEMBER'(2,K'&XMEMBER-2)                          00851800
              AIF   ('&ZCGPR'(1,1) NE '0').ZG244P                       00851900
              AIF   (K'&ZCGPR GT 2).ZG244Q                              00852000
              AIF   ('&ZCGPR' EQ '0').ZG244Q                            00852100
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00852200
              AIF   (T'&ZCGPR NE 'N').ZG244Q    INVALID REG NAME        00852300
.ZG244P       ANOP  ,                                                   00852400
              AIF   (T'&ZCGPR NE 'N').ZG244R    NON NUMERIC             00852500
              AIF   ('&ZCGPR' LT '2').ZG244Q                            00852600
              AIF   ('&ZCGPR' LE '12').ZG244R                           00852700
.ZG244Q       ANOP  ,                                                   00852800
&ZMS          SETC  '"MEMBER='                                          00852900
&ZMS          SETC  '&ZMS.&MEMBER"'                                     00853000
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00853100
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00853200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00853300
.ZG244R       ANOP  ,                                                   00853400
.*-------------------------------------------------------------------   00853500
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00853600
.ZG246ZY  AIF    ('&XPATHLIB' NE 'PATHNAME').ZG247ZY                    00853700
.*-------------------------------------------------------------------   00853800
.***AG.KMEKY14 NAME, RQD INPUT, ME KEYS -DISALLOWED KEYS                00853900
&ZCVAL        SETC ''           ERROR KEY FIELD                         00854000
.ZG246I0      AIF   (K'&MEMBER LE 0).ZG246I1                            00854100
&ZCVAL        SETC '&ZCVAL MEMBER'              DISALLOWED KEY          00854200
.ZG246I1      AIF   (K'&ZCVAL LE 0).ZG246J      KEY                     00854300
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               00854400
&ZMS          SETC  '"PATHNAME'                                         00854500
&ZMS          SETC  '&ZMS.=&PATHNAME"'                                  00854600
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                00854700
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                00854800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00854900
.ZG246J       ANOP  ,                                                   00855000
.*-------------------------------------------------------------------   00855100
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00855200
              AIF   (K'&ZXPATHNAME LE 0).ZG246R  NOT I/O                00855300
              AIF   ('&XPATHNAME'(1,1) NE '(').ZG246R                   00855400
&ZCGPR        SETC  '&XPATHNAME'(2,K'&XPATHNAME-2)                      00855500
              AIF   ('&ZCGPR'(1,1) NE '0').ZG246P                       00855600
              AIF   (K'&ZCGPR GT 2).ZG246Q                              00855700
              AIF   ('&ZCGPR' EQ '0').ZG246Q                            00855800
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00855900
              AIF   (T'&ZCGPR NE 'N').ZG246Q    INVALID REG NAME        00856000
.ZG246P       ANOP  ,                                                   00856100
              AIF   (T'&ZCGPR NE 'N').ZG246R    NON NUMERIC             00856200
              AIF   ('&ZCGPR' LT '2').ZG246Q                            00856300
              AIF   ('&ZCGPR' LE '12').ZG246R                           00856400
.ZG246Q       ANOP  ,                                                   00856500
&ZMS          SETC  '"PATHNAME='                                        00856600
&ZMS          SETC  '&ZMS.&PATHNAME"'                                   00856700
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00856800
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00856900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00857000
.ZG246R       ANOP  ,                                                   00857100
.*-------------------------------------------------------------------   00857200
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            00857300
.ZG247ZY      ANOP ,            END MUTUALLY EXCLUSIVE KEYS             00857400
.*-------------------------------------------------------------------   00857500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00857600
.ZG248        ANOP  ,                                                   00857700
&ZTLC         SETC 'P'                                                  00857800
              AIF   ('&INTYPE(1)' NE '&ZTLC').ZG255                     00857900
&XINTYPE      SETC  'P'         SET KEYWORD                             00858000
              AIF   (N'&INTYPE LE 1).ZG248A     CK NUM                  00858100
&ZMS          SETC  '"INTYPE='                                          00858200
&ZMS          SETC  '&ZMS.&INTYPE"'                                     00858300
&ZMS          SETC  '&ZMS "INTYPE"'                                     00858400
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00858500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00858600
.ZG248A       ANOP  ,                                                   00858700
.*------------------------------------------------------------------    00858800
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00858900
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             00859000
.ZG248A0      AIF   (K'&DDNAME LE 0).ZG248A1    OK                      00859100
&ZCVAL        SETC '&ZCVAL DDNAME'              INCORRECT KEY USED      00859200
.ZG248A1      AIF   (K'&MEMBER LE 0).ZG248A2    OK                      00859300
&ZCVAL        SETC '&ZCVAL MEMBER'              INCORRECT KEY USED      00859400
.ZG248A2      AIF   (K'&PATHNAME LE 0).ZG248A3  OK                      00859500
&ZCVAL        SETC '&ZCVAL PATHNAME'            INCORRECT KEY USED      00859600
.ZG248A3      AIF   (K'&EPTOKEN LE 0).ZG248A4   OK                      00859700
&ZCVAL        SETC '&ZCVAL EPTOKEN'             INCORRECT KEY USED      00859800
.ZG248A4      AIF   (K'&ZCVAL LE 0).ZG248A5     OK                      00859900
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               00860000
&ZMS          SETC  '"INTYPE'                                           00860100
&ZMS          SETC  '&ZMS.=&INTYPE"'                                    00860200
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                00860300
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                00860400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00860500
.ZG248A5      ANOP  ,                                                   00860600
.*----------------------------------------------------------------***   00860700
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00860800
              AIF   (N'&DCBPTR LE 1).ZG250A     CK NUM                  00860900
&ZMS          SETC  '"DCBPTR='                                          00861000
&ZMS          SETC  '&ZMS.&DCBPTR"'                                     00861100
&ZMS          SETC  '&ZMS "DCBPTR"'                                     00861200
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00861300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00861400
.ZG250A       ANOP  ,                                                   00861500
.*-------------------------------------------------------------------   00861600
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00861700
&ZXDCBPTR     SETC  'INPUT'     SET IN/OUTPUT                           00861800
&XDCBPTR      SETC  '&DCBPTR(1)'                SET XVARIABLE           00861900
              AIF   (N'&DCBPTR GT 1).ZG250B     MULTI                   00862000
&XDCBPTR      SETC  '&DCBPTR'   SET XVARIABLE                           00862100
.ZG250B       AIF   (K'&DCBPTR(1) GT 0).ZG250C                          00862200
&ZXDCBPTR     SETC  ''          RESET IN/OUTPUT                         00862300
&ZMS          SETC  ' '                                                 00862400
&ZMS          SETC  '&ZMS "DCBPTR" KEY AND ITS'                         00862500
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00862600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00862700
.ZG250C       ANOP  ,                                                   00862800
.*-------------------------------------------------------------------   00862900
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00863000
              AIF   (K'&ZXDCBPTR LE 0).ZG250R   NOT I/O                 00863100
              AIF   ('&XDCBPTR'(1,1) NE '(').ZG250R                     00863200
&ZCGPR        SETC  '&XDCBPTR'(2,K'&XDCBPTR-2)                          00863300
              AIF   ('&ZCGPR'(1,1) NE '0').ZG250P                       00863400
              AIF   (K'&ZCGPR GT 2).ZG250Q                              00863500
              AIF   ('&ZCGPR' EQ '0').ZG250Q                            00863600
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00863700
              AIF   (T'&ZCGPR NE 'N').ZG250Q    INVALID REG NAME        00863800
.ZG250P       ANOP  ,                                                   00863900
              AIF   (T'&ZCGPR NE 'N').ZG250R    NON NUMERIC             00864000
              AIF   ('&ZCGPR' LT '2').ZG250Q                            00864100
              AIF   ('&ZCGPR' LE '12').ZG250R                           00864200
.ZG250Q       ANOP  ,                                                   00864300
&ZMS          SETC  '"DCBPTR='                                          00864400
&ZMS          SETC  '&ZMS.&DCBPTR"'                                     00864500
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00864600
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00864700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00864800
.ZG250R       ANOP  ,                                                   00864900
.*----------------------------------------------------------------***   00865000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00865100
              AIF   (N'&DEPTR LE 1).ZG253A      CK NUM                  00865200
&ZMS          SETC  '"DEPTR='                                           00865300
&ZMS          SETC  '&ZMS.&DEPTR"'                                      00865400
&ZMS          SETC  '&ZMS "DEPTR"'                                      00865500
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00865600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00865700
.ZG253A       ANOP  ,                                                   00865800
.*-------------------------------------------------------------------   00865900
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00866000
&ZXDEPTR      SETC  'INPUT'     SET IN/OUTPUT                           00866100
&XDEPTR       SETC  '&DEPTR(1)'                 SET XVARIABLE           00866200
              AIF   (N'&DEPTR GT 1).ZG253B      MULTI                   00866300
&XDEPTR       SETC  '&DEPTR'    SET XVARIABLE                           00866400
.ZG253B       AIF   (K'&DEPTR(1) GT 0).ZG253C                           00866500
&ZXDEPTR      SETC  ''          RESET IN/OUTPUT                         00866600
&ZMS          SETC  ' '                                                 00866700
&ZMS          SETC  '&ZMS "DEPTR" KEY AND ITS'                          00866800
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00866900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00867000
.ZG253C       ANOP  ,                                                   00867100
.*-------------------------------------------------------------------   00867200
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00867300
              AIF   (K'&ZXDEPTR LE 0).ZG253R    NOT I/O                 00867400
              AIF   ('&XDEPTR'(1,1) NE '(').ZG253R                      00867500
&ZCGPR        SETC  '&XDEPTR'(2,K'&XDEPTR-2)                            00867600
              AIF   ('&ZCGPR'(1,1) NE '0').ZG253P                       00867700
              AIF   (K'&ZCGPR GT 2).ZG253Q                              00867800
              AIF   ('&ZCGPR' EQ '0').ZG253Q                            00867900
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00868000
              AIF   (T'&ZCGPR NE 'N').ZG253Q    INVALID REG NAME        00868100
.ZG253P       ANOP  ,                                                   00868200
              AIF   (T'&ZCGPR NE 'N').ZG253R    NON NUMERIC             00868300
              AIF   ('&ZCGPR' LT '2').ZG253Q                            00868400
              AIF   ('&ZCGPR' LE '12').ZG253R                           00868500
.ZG253Q       ANOP  ,                                                   00868600
&ZMS          SETC  '"DEPTR='                                           00868700
&ZMS          SETC  '&ZMS.&DEPTR"'                                      00868800
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00868900
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00869000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00869100
.ZG253R       ANOP  ,                                                   00869200
.*-------------------------------------------------------------------   00869300
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00869400
.ZG255        ANOP  ,                                                   00869500
&ZTLC         SETC 'S'                                                  00869600
              AIF   ('&INTYPE(1)' NE '&ZTLC').ZG262                     00869700
&XINTYPE      SETC  'S'         SET KEYWORD                             00869800
              AIF   (N'&INTYPE LE 1).ZG255A     CK NUM                  00869900
&ZMS          SETC  '"INTYPE='                                          00870000
&ZMS          SETC  '&ZMS.&INTYPE"'                                     00870100
&ZMS          SETC  '&ZMS "INTYPE"'                                     00870200
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00870300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00870400
.ZG255A       ANOP  ,                                                   00870500
.*------------------------------------------------------------------    00870600
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00870700
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             00870800
.ZG255A0      AIF   (K'&MEMBER LE 0).ZG255A1    OK                      00870900
&ZCVAL        SETC '&ZCVAL MEMBER'              INCORRECT KEY USED      00871000
.ZG255A1      AIF   (K'&PATHNAME LE 0).ZG255A2  OK                      00871100
&ZCVAL        SETC '&ZCVAL PATHNAME'            INCORRECT KEY USED      00871200
.ZG255A2      AIF   (K'&DCBPTR LE 0).ZG255A3    OK                      00871300
&ZCVAL        SETC '&ZCVAL DCBPTR'              INCORRECT KEY USED      00871400
.ZG255A3      AIF   (K'&EPTOKEN LE 0).ZG255A4   OK                      00871500
&ZCVAL        SETC '&ZCVAL EPTOKEN'             INCORRECT KEY USED      00871600
.ZG255A4      AIF   (K'&ZCVAL LE 0).ZG255A5     OK                      00871700
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               00871800
&ZMS          SETC  '"INTYPE'                                           00871900
&ZMS          SETC  '&ZMS.=&INTYPE"'                                    00872000
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                00872100
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                00872200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00872300
.ZG255A5      ANOP  ,                                                   00872400
.*----------------------------------------------------------------***   00872500
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00872600
&XPATHLIB     SETC  ''          INITIALIZE XVARIABLE                    00872700
              AIF   (K'&DDNAME LE 0).ZG257C                             00872800
&ZXPATHLIB    SETC  'INPUT'     SET IN/OUTPUT                           00872900
&XPATHLIB     SETC  'DDNAME'    SET XVARIABLE                           00873000
&ZXDDNAME     SETC  'INPUT'     SET IN/OUTPUT                           00873100
&XDDNAME      SETC  '&DDNAME(1)'                SET XVARIABLE PARM      00873200
              AIF   (N'&DDNAME GT 1).ZG257A                             00873300
&XDDNAME      SETC  '&DDNAME'   SET XVARIABLE PARM                      00873400
.ZG257A       AIF   (N'&DDNAME LE 1).ZG257B     CK NUM                  00873500
&ZMS          SETC  '"DDNAME='                                          00873600
&ZMS          SETC  '&ZMS.&DDNAME"'                                     00873700
&ZMS          SETC  '&ZMS "DDNAME"'                                     00873800
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00873900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00874000
.ZG257B       AIF   (K'&XDDNAME GT 0).ZG257C    ONE PARM                00874100
&ZXPATHLIB    SETC  ''          RESET IN/OUTPUT                         00874200
&ZXDDNAME     SETC  ''          RESET IN/OUTPUT                         00874300
&ZMS          SETC  ' '                                                 00874400
&ZMS          SETC  '&ZMS "DDNAME" KEY AND ITS'                         00874500
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00874600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00874700
.ZG257C       ANOP  ,                                                   00874800
.*------------------------------------------------------------------    00874900
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           00875000
              AIF   (K'&XPATHLIB GT 0).ZG258B                           00875100
&ZXPATHLIB    SETC  ''          RESET IN/OUTPUT                         00875200
&ZXDDNAME     SETC  ''          RESET IN/OUTPUT                         00875300
&XPATHLIB     SETC  ''          ENSURE NULL                             00875400
&XDDNAME      SETC  ''          ENSURE NULL                             00875500
&ZMS          SETC  'ONE OF THE FOLLOWING'                              00875600
&ZMS          SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'                 00875700
&ZMS          SETC  '&ZMS REQUIRED:'                                    00875800
&ZMS          SETC  '&ZMS "DDNAME".'            VALID ME KEY            00875900
              MNOTE 8,' &ZMS '                                          00876000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00876100
.ZG258B       ANOP  ,                                                   00876200
.*-------------------------------------------------------------------   00876300
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00876400
.ZG257ZY  AIF    ('&XPATHLIB' NE 'DDNAME').ZG258ZY                      00876500
.*-------------------------------------------------------------------   00876600
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00876700
              AIF   (K'&ZXDDNAME LE 0).ZG257R   NOT I/O                 00876800
              AIF   ('&XDDNAME'(1,1) NE '(').ZG257R                     00876900
&ZCGPR        SETC  '&XDDNAME'(2,K'&XDDNAME-2)                          00877000
              AIF   ('&ZCGPR'(1,1) NE '0').ZG257P                       00877100
              AIF   (K'&ZCGPR GT 2).ZG257Q                              00877200
              AIF   ('&ZCGPR' EQ '0').ZG257Q                            00877300
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00877400
              AIF   (T'&ZCGPR NE 'N').ZG257Q    INVALID REG NAME        00877500
.ZG257P       ANOP  ,                                                   00877600
              AIF   (T'&ZCGPR NE 'N').ZG257R    NON NUMERIC             00877700
              AIF   ('&ZCGPR' LT '2').ZG257Q                            00877800
              AIF   ('&ZCGPR' LE '12').ZG257R                           00877900
.ZG257Q       ANOP  ,                                                   00878000
&ZMS          SETC  '"DDNAME='                                          00878100
&ZMS          SETC  '&ZMS.&DDNAME"'                                     00878200
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00878300
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00878400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00878500
.ZG257R       ANOP  ,                                                   00878600
.*-------------------------------------------------------------------   00878700
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            00878800
.ZG258ZY      ANOP ,            END MUTUALLY EXCLUSIVE KEYS             00878900
.*----------------------------------------------------------------***   00879000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00879100
              AIF   (N'&DEPTR LE 1).ZG260A      CK NUM                  00879200
&ZMS          SETC  '"DEPTR='                                           00879300
&ZMS          SETC  '&ZMS.&DEPTR"'                                      00879400
&ZMS          SETC  '&ZMS "DEPTR"'                                      00879500
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00879600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00879700
.ZG260A       ANOP  ,                                                   00879800
.*-------------------------------------------------------------------   00879900
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00880000
&ZXDEPTR      SETC  'INPUT'     SET IN/OUTPUT                           00880100
&XDEPTR       SETC  '&DEPTR(1)'                 SET XVARIABLE           00880200
              AIF   (N'&DEPTR GT 1).ZG260B      MULTI                   00880300
&XDEPTR       SETC  '&DEPTR'    SET XVARIABLE                           00880400
.ZG260B       AIF   (K'&DEPTR(1) GT 0).ZG260C                           00880500
&ZXDEPTR      SETC  ''          RESET IN/OUTPUT                         00880600
&ZMS          SETC  ' '                                                 00880700
&ZMS          SETC  '&ZMS "DEPTR" KEY AND ITS'                          00880800
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00880900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00881000
.ZG260C       ANOP  ,                                                   00881100
.*-------------------------------------------------------------------   00881200
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00881300
              AIF   (K'&ZXDEPTR LE 0).ZG260R    NOT I/O                 00881400
              AIF   ('&XDEPTR'(1,1) NE '(').ZG260R                      00881500
&ZCGPR        SETC  '&XDEPTR'(2,K'&XDEPTR-2)                            00881600
              AIF   ('&ZCGPR'(1,1) NE '0').ZG260P                       00881700
              AIF   (K'&ZCGPR GT 2).ZG260Q                              00881800
              AIF   ('&ZCGPR' EQ '0').ZG260Q                            00881900
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00882000
              AIF   (T'&ZCGPR NE 'N').ZG260Q    INVALID REG NAME        00882100
.ZG260P       ANOP  ,                                                   00882200
              AIF   (T'&ZCGPR NE 'N').ZG260R    NON NUMERIC             00882300
              AIF   ('&ZCGPR' LT '2').ZG260Q                            00882400
              AIF   ('&ZCGPR' LE '12').ZG260R                           00882500
.ZG260Q       ANOP  ,                                                   00882600
&ZMS          SETC  '"DEPTR='                                           00882700
&ZMS          SETC  '&ZMS.&DEPTR"'                                      00882800
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00882900
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00883000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00883100
.ZG260R       ANOP  ,                                                   00883200
.*-------------------------------------------------------------------   00883300
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00883400
.ZG262        ANOP  ,                                                   00883500
&ZTLC         SETC 'T'                                                  00883600
              AIF   ('&INTYPE(1)' NE '&ZTLC').ZG266                     00883700
&XINTYPE      SETC  'T'         SET KEYWORD                             00883800
              AIF   (N'&INTYPE LE 1).ZG262A     CK NUM                  00883900
&ZMS          SETC  '"INTYPE='                                          00884000
&ZMS          SETC  '&ZMS.&INTYPE"'                                     00884100
&ZMS          SETC  '&ZMS "INTYPE"'                                     00884200
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00884300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00884400
.ZG262A       ANOP  ,                                                   00884500
.*------------------------------------------------------------------    00884600
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00884700
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             00884800
.ZG262A0      AIF   (K'&DDNAME LE 0).ZG262A1    OK                      00884900
&ZCVAL        SETC '&ZCVAL DDNAME'              INCORRECT KEY USED      00885000
.ZG262A1      AIF   (K'&DEPTR LE 0).ZG262A2     OK                      00885100
&ZCVAL        SETC '&ZCVAL DEPTR'               INCORRECT KEY USED      00885200
.ZG262A2      AIF   (K'&MEMBER LE 0).ZG262A3    OK                      00885300
&ZCVAL        SETC '&ZCVAL MEMBER'              INCORRECT KEY USED      00885400
.ZG262A3      AIF   (K'&PATHNAME LE 0).ZG262A4  OK                      00885500
&ZCVAL        SETC '&ZCVAL PATHNAME'            INCORRECT KEY USED      00885600
.ZG262A4      AIF   (K'&DCBPTR LE 0).ZG262A5    OK                      00885700
&ZCVAL        SETC '&ZCVAL DCBPTR'              INCORRECT KEY USED      00885800
.ZG262A5      AIF   (K'&ZCVAL LE 0).ZG262A6     OK                      00885900
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               00886000
&ZMS          SETC  '"INTYPE'                                           00886100
&ZMS          SETC  '&ZMS.=&INTYPE"'                                    00886200
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                00886300
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                00886400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00886500
.ZG262A6      ANOP  ,                                                   00886600
.*----------------------------------------------------------------***   00886700
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00886800
              AIF   (N'&EPTOKEN LE 1).ZG264A    CK NUM                  00886900
&ZMS          SETC  '"EPTOKEN='                                         00887000
&ZMS          SETC  '&ZMS.&EPTOKEN"'                                    00887100
&ZMS          SETC  '&ZMS "EPTOKEN"'                                    00887200
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00887300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00887400
.ZG264A       ANOP  ,                                                   00887500
.*-------------------------------------------------------------------   00887600
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00887700
&ZXEPTOKEN    SETC  'INPUT'     SET IN/OUTPUT                           00887800
&XEPTOKEN     SETC  '&EPTOKEN(1)'               SET XVARIABLE           00887900
              AIF   (N'&EPTOKEN GT 1).ZG264B    MULTI                   00888000
&XEPTOKEN     SETC  '&EPTOKEN'  SET XVARIABLE                           00888100
.ZG264B       AIF   (K'&EPTOKEN(1) GT 0).ZG264C                         00888200
&ZXEPTOKEN    SETC  ''          RESET IN/OUTPUT                         00888300
&ZMS          SETC  ' '                                                 00888400
&ZMS          SETC  '&ZMS "EPTOKEN" KEY AND ITS'                        00888500
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00888600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00888700
.ZG264C       ANOP  ,                                                   00888800
.*-------------------------------------------------------------------   00888900
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00889000
              AIF   (K'&ZXEPTOKEN LE 0).ZG264R  NOT I/O                 00889100
              AIF   ('&XEPTOKEN'(1,1) NE '(').ZG264R                    00889200
&ZCGPR        SETC  '&XEPTOKEN'(2,K'&XEPTOKEN-2)                        00889300
              AIF   ('&ZCGPR'(1,1) NE '0').ZG264P                       00889400
              AIF   (K'&ZCGPR GT 2).ZG264Q                              00889500
              AIF   ('&ZCGPR' EQ '0').ZG264Q                            00889600
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00889700
              AIF   (T'&ZCGPR NE 'N').ZG264Q    INVALID REG NAME        00889800
.ZG264P       ANOP  ,                                                   00889900
              AIF   (T'&ZCGPR NE 'N').ZG264R    NON NUMERIC             00890000
              AIF   ('&ZCGPR' LT '2').ZG264Q                            00890100
              AIF   ('&ZCGPR' LE '12').ZG264R                           00890200
.ZG264Q       ANOP  ,                                                   00890300
&ZMS          SETC  '"EPTOKEN='                                         00890400
&ZMS          SETC  '&ZMS.&EPTOKEN"'                                    00890500
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00890600
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00890700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00890800
.ZG264R       ANOP  ,                                                   00890900
.*------------------------------------------------------------------    00891000
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00891100
.ZG266        ANOP  ,                                                   00891200
&ZXINTYPE     SETC  'INPUT'     SET IN/OUTPUT                           00891300
              AIF   (K'&XINTYPE GT 0).ZG266E    VALID ARG               00891400
              AIF   (T'&INTYPE EQ 'O').ZG266D   OMITTED                 00891500
&ZASYSLNDX    SETA  0                                                   00891600
.ZG266A       ANOP  ,           POSITIONAL MACRO KEY                    00891700
&ZASYSLNDX    SETA  &ZASYSLNDX+1                                        00891800
              AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG266C                   00891900
&ZTLC         SETC 'INTYPE'                                             00892000
              AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG266A          00892100
.ZG266B       ANOP  ,                                                   00892200
&ZXINTYPE     SETC  ''          RESET IN/OUTPUT                         00892300
&ZMS          SETC  'THE "INTYPE" KEY'                                  00892400
&ZMS          SETC  '&ZMS MUST CONTAIN ONE'                             00892500
              MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                    00892600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00892700
              AGO   .ZG266E                                             00892800
.ZG266C       ANOP  ,                                                   00892900
&ZXINTYPE     SETC  ''          RESET IN/OUTPUT                         00893000
&ZMS          SETC  '"INTYPE='                                          00893100
&ZMS          SETC  '&ZMS.&INTYPE"'                                     00893200
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           00893300
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00893400
&ZMS          SETC  '&ZMS "D",'                                         00893500
&ZMS          SETC  '&ZMS "N",'                                         00893600
&ZMS          SETC  '&ZMS "P",'                                         00893700
&ZMS          SETC  '&ZMS "S",'                                         00893800
&ZMS          SETC  '&ZMS OR "T".'                                      00893900
              MNOTE 8,' &ZMS '                                          00894000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00894100
              AGO   .ZG266E                                             00894200
.ZG266D       ANOP  ,                                                   00894300
&XINTYPE      SETC  'D'         SET DEFAULT KEYWORD                     00894400
.ZG266E       ANOP  ,                                                   00894500
.*------------------------------------------------------------------    00894600
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00894700
              AIF   (K'&INTYPE(1) GT 0).ZG266F  PARM                    00894800
&XINTYPE      SETC  ''          ENSURE NULL KEYWORD                     00894900
&ZXINTYPE     SETC  ''          RESET IN/OUTPUT                         00895000
&ZMS          SETC  'THE'                                               00895100
&ZMS          SETC  '&ZMS "INTYPE" KEY AND ITS'                         00895200
&ZMS          SETC  '&ZMS ARGUMENT ARE REQUIRED.'                       00895300
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00895400
&ZMS          SETC  '&ZMS "D",'                                         00895500
&ZMS          SETC  '&ZMS "N",'                                         00895600
&ZMS          SETC  '&ZMS "P",'                                         00895700
&ZMS          SETC  '&ZMS "S",'                                         00895800
&ZMS          SETC  '&ZMS OR "T".'                                      00895900
              MNOTE 8,' &ZMS '                                          00896000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00896100
.ZG266F       ANOP  ,                                                   00896200
.*----------------------------------------------------------------***   00896300
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00896400
              AIF   (N'&ATTRIB LE 1).ZG268A     CK NUM                  00896500
&ZMS          SETC  '"ATTRIB='                                          00896600
&ZMS          SETC  '&ZMS.&ATTRIB"'                                     00896700
&ZMS          SETC  '&ZMS "ATTRIB"'                                     00896800
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00896900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00897000
.ZG268A       ANOP  ,                                                   00897100
.*-------------------------------------------------------------------   00897200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00897300
&XATTRIB      SETC  ''          INITIALIZE XVARIABLE                    00897400
.ZG269A   AIF   ('&ATTRIB(1)' NE 'N').ZG270A                            00897500
&XATTRIB      SETC  'N'         SET KEYWORD                             00897600
.*-------------------------------------------------------------------   00897700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00897800
.ZG270A   AIF   ('&ATTRIB(1)' NE 'Y').ZG271A                            00897900
&XATTRIB      SETC  'Y'         SET KEYWORD                             00898000
.*-------------------------------------------------------------------   00898100
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00898200
.ZG271A       AIF   (K'&XATTRIB GT 0).ZG271C    KEYWORD                 00898300
              AIF   (K'&ATTRIB(1) LE 0).ZG271B                          00898400
&ZMS          SETC  '"ATTRIB='                                          00898500
&ZMS          SETC  '&ZMS.&ATTRIB"'                                     00898600
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           00898700
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00898800
&ZMS          SETC  '&ZMS "N"'                                          00898900
&ZMS          SETC  '&ZMS OR "Y".'                                      00899000
              MNOTE 8,' &ZMS '                                          00899100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00899200
.ZG271B       ANOP  ,                                                   00899300
&XATTRIB      SETC  'N'         SET DEFAULT KEYWORD                     00899400
.ZG271C       ANOP  ,                                                   00899500
&ZXATTRIB     SETC  'INPUT'     SET IN/OUTPUT                           00899600
.*----------------------------------------------------------------***   00899700
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00899800
              AIF   (N'&ALIASES LE 1).ZG273A    CK NUM                  00899900
&ZMS          SETC  '"ALIASES='                                         00900000
&ZMS          SETC  '&ZMS.&ALIASES"'                                    00900100
&ZMS          SETC  '&ZMS "ALIASES"'                                    00900200
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00900300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00900400
.ZG273A       ANOP  ,                                                   00900500
.*-------------------------------------------------------------------   00900600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00900700
&XALIASES     SETC  ''          INITIALIZE XVARIABLE                    00900800
.ZG274A   AIF   ('&ALIASES(1)' NE 'N').ZG275A                           00900900
&XALIASES     SETC  'N'         SET KEYWORD                             00901000
.*-------------------------------------------------------------------   00901100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00901200
.ZG275A   AIF   ('&ALIASES(1)' NE 'Y').ZG276A                           00901300
&XALIASES     SETC  'Y'         SET KEYWORD                             00901400
.*-------------------------------------------------------------------   00901500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00901600
.ZG276A   AIF   ('&ALIASES(1)' NE 'K').ZG277A                           00901700
&XALIASES     SETC  'K'         SET KEYWORD                             00901800
.*-------------------------------------------------------------------   00901900
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00902000
.ZG277A       AIF   (K'&XALIASES GT 0).ZG277C   KEYWORD                 00902100
              AIF   (K'&ALIASES(1) LE 0).ZG277B                         00902200
&ZMS          SETC  '"ALIASES='                                         00902300
&ZMS          SETC  '&ZMS.&ALIASES"'                                    00902400
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           00902500
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00902600
&ZMS          SETC  '&ZMS "N",'                                         00902700
&ZMS          SETC  '&ZMS "Y",'                                         00902800
&ZMS          SETC  '&ZMS OR "K".'                                      00902900
              MNOTE 8,' &ZMS '                                          00903000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00903100
.ZG277B       ANOP  ,                                                   00903200
&XALIASES     SETC  'N'         SET DEFAULT KEYWORD                     00903300
.ZG277C       ANOP  ,                                                   00903400
&ZXALIASES    SETC  'INPUT'     SET IN/OUTPUT                           00903500
.*----------------------------------------------------------------***   00903600
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00903700
              AIF   (N'&IMPORTS LE 1).ZG279A    CK NUM                  00903800
&ZMS          SETC  '"IMPORTS='                                         00903900
&ZMS          SETC  '&ZMS.&IMPORTS"'                                    00904000
&ZMS          SETC  '&ZMS "IMPORTS"'                                    00904100
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00904200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00904300
.ZG279A       ANOP  ,                                                   00904400
.*-------------------------------------------------------------------   00904500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00904600
&XIMPORTS     SETC  ''          INITIALIZE XVARIABLE                    00904700
.ZG280A   AIF   ('&IMPORTS(1)' NE 'Y').ZG281A                           00904800
&XIMPORTS     SETC  'Y'         SET KEYWORD                             00904900
.*-------------------------------------------------------------------   00905000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00905100
.ZG281A   AIF   ('&IMPORTS(1)' NE 'N').ZG282A                           00905200
&XIMPORTS     SETC  'N'         SET KEYWORD                             00905300
.*-------------------------------------------------------------------   00905400
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00905500
.ZG282A       AIF   (K'&XIMPORTS GT 0).ZG282C   KEYWORD                 00905600
              AIF   (K'&IMPORTS(1) LE 0).ZG282B                         00905700
&ZMS          SETC  '"IMPORTS='                                         00905800
&ZMS          SETC  '&ZMS.&IMPORTS"'                                    00905900
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           00906000
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00906100
&ZMS          SETC  '&ZMS "Y"'                                          00906200
&ZMS          SETC  '&ZMS OR "N".'                                      00906300
              MNOTE 8,' &ZMS '                                          00906400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00906500
.ZG282B       ANOP  ,                                                   00906600
&XIMPORTS     SETC  'Y'         SET DEFAULT KEYWORD                     00906700
.ZG282C       ANOP  ,                                                   00906800
&ZXIMPORTS    SETC  'INPUT'     SET IN/OUTPUT                           00906900
.*-------------------------------------------------------------------   00907000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00907100
.ZG283        ANOP  ,                                                   00907200
&ZTLC         SETC 'INSERTS'                                            00907300
              AIF   ('&FUNC(1)' NE '&ZTLC').ZG290                       00907400
&XFUNC        SETC  'INSERTS'   SET KEYWORD                             00907500
              AIF   (N'&FUNC LE 1).ZG283A       CK NUM                  00907600
&ZMS          SETC  '"FUNC='                                            00907700
&ZMS          SETC  '&ZMS.&FUNC"'                                       00907800
&ZMS          SETC  '&ZMS "FUNC"'                                       00907900
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00908000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00908100
.ZG283A       ANOP  ,                                                   00908200
.*------------------------------------------------------------------    00908300
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00908400
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             00908500
.ZG283A0      AIF   (K'&ANAME LE 0).ZG283A1     OK                      00908600
&ZCVAL        SETC '&ZCVAL ANAME'               INCORRECT KEY USED      00908700
.ZG283A1      AIF   (K'&ENAME LE 0).ZG283A2     OK                      00908800
&ZCVAL        SETC '&ZCVAL ENAME'               INCORRECT KEY USED      00908900
.ZG283A2      AIF   (K'&AMODE LE 0).ZG283A3     OK                      00909000
&ZCVAL        SETC '&ZCVAL AMODE'               INCORRECT KEY USED      00909100
.ZG283A3      AIF   (K'&ATYPE LE 0).ZG283A4     OK                      00909200
&ZCVAL        SETC '&ZCVAL ATYPE'               INCORRECT KEY USED      00909300
.ZG283A4      AIF   (K'&DNAME LE 0).ZG283A5     OK                      00909400
&ZCVAL        SETC '&ZCVAL DNAME'               INCORRECT KEY USED      00909500
.ZG283A5      AIF   (K'&BDY LE 0).ZG283A6       OK                      00909600
&ZCVAL        SETC '&ZCVAL BDY'                 INCORRECT KEY USED      00909700
.ZG283A6      AIF   (K'&CLASSL LE 0).ZG283A7    OK                      00909800
&ZCVAL        SETC '&ZCVAL CLASSL'              INCORRECT KEY USED      00909900
.ZG283A7      AIF   (K'&OLDNAME LE 0).ZG283A8   OK                      00910000
&ZCVAL        SETC '&ZCVAL OLDNAME'             INCORRECT KEY USED      00910100
.ZG283A8      AIF   (K'&NEWNAME LE 0).ZG283A9   OK                      00910200
&ZCVAL        SETC '&ZCVAL NEWNAME'             INCORRECT KEY USED      00910300
.ZG283A9      AIF   (K'&COUNT LE 0).ZG283A10    OK                      00910400
&ZCVAL        SETC '&ZCVAL COUNT'               INCORRECT KEY USED      00910500
.ZG283A10     AIF   (K'&MODE LE 0).ZG283A11     OK                      00910600
&ZCVAL        SETC '&ZCVAL MODE'                INCORRECT KEY USED      00910700
.ZG283A11     AIF   (K'&CLASS LE 0).ZG283A12    OK                      00910800
&ZCVAL        SETC '&ZCVAL CLASS'               INCORRECT KEY USED      00910900
.ZG283A12     AIF   (K'&CALLIB LE 0).ZG283A13   OK                      00911000
&ZCVAL        SETC '&ZCVAL CALLIB'              INCORRECT KEY USED      00911100
.ZG283A13     AIF   (K'&PATHNAME LE 0).ZG283A14  OK                     00911200
&ZCVAL        SETC '&ZCVAL PATHNAME'            INCORRECT KEY USED      00911300
.ZG283A14     AIF   (K'&DIALOG LE 0).ZG283A15   OK                      00911400
&ZCVAL        SETC '&ZCVAL DIALOG'              INCORRECT KEY USED      00911500
.ZG283A15     AIF   (K'&INTENT LE 0).ZG283A16   OK                      00911600
&ZCVAL        SETC '&ZCVAL INTENT'              INCORRECT KEY USED      00911700
.ZG283A16     AIF   (K'&PROTECT LE 0).ZG283A17  OK                      00911800
&ZCVAL        SETC '&ZCVAL PROTECT'             INCORRECT KEY USED      00911900
.ZG283A17     AIF   (K'&RENAMEL LE 0).ZG283A18  OK                      00912000
&ZCVAL        SETC '&ZCVAL RENAMEL'             INCORRECT KEY USED      00912100
.ZG283A18     AIF   (K'&AREA LE 0).ZG283A19     OK                      00912200
&ZCVAL        SETC '&ZCVAL AREA'                INCORRECT KEY USED      00912300
.ZG283A19     AIF   (K'&CURSOR LE 0).ZG283A20   OK                      00912400
&ZCVAL        SETC '&ZCVAL CURSOR'              INCORRECT KEY USED      00912500
.ZG283A20     AIF   (K'&RELOC LE 0).ZG283A21    OK                      00912600
&ZCVAL        SETC '&ZCVAL RELOC'               INCORRECT KEY USED      00912700
.ZG283A21     AIF   (K'&RECTYPE LE 0).ZG283A22  OK                      00912800
&ZCVAL        SETC '&ZCVAL RECTYPE'             INCORRECT KEY USED      00912900
.ZG283A22     AIF   (K'&OFFSET LE 0).ZG283A23   OK                      00913000
&ZCVAL        SETC '&ZCVAL OFFSET'              INCORRECT KEY USED      00913100
.ZG283A23     AIF   (K'&SYMBOL LE 0).ZG283A24   OK                      00913200
&ZCVAL        SETC '&ZCVAL SYMBOL'              INCORRECT KEY USED      00913300
.ZG283A24     AIF   (K'&TCOUNT LE 0).ZG283A25   OK                      00913400
&ZCVAL        SETC '&ZCVAL TCOUNT'              INCORRECT KEY USED      00913500
.ZG283A25     AIF   (K'&NTYPE LE 0).ZG283A26    OK                      00913600
&ZCVAL        SETC '&ZCVAL NTYPE'               INCORRECT KEY USED      00913700
.ZG283A26     AIF   (K'&CULIST LE 0).ZG283A27   OK                      00913800
&ZCVAL        SETC '&ZCVAL CULIST'              INCORRECT KEY USED      00913900
.ZG283A27     AIF   (K'&ITYPE LE 0).ZG283A28    OK                      00914000
&ZCVAL        SETC '&ZCVAL ITYPE'               INCORRECT KEY USED      00914100
.ZG283A28     AIF   (K'&DLLNAME LE 0).ZG283A29  OK                      00914200
&ZCVAL        SETC '&ZCVAL DLLNAME'             INCORRECT KEY USED      00914300
.ZG283A29     AIF   (K'&INAME LE 0).ZG283A30    OK                      00914400
&ZCVAL        SETC '&ZCVAL INAME'               INCORRECT KEY USED      00914500
.ZG283A30     AIF   (K'&INTYPE LE 0).ZG283A31   OK                      00914600
&ZCVAL        SETC '&ZCVAL INTYPE'              INCORRECT KEY USED      00914700
.ZG283A31     AIF   (K'&DDNAME LE 0).ZG283A32   OK                      00914800
&ZCVAL        SETC '&ZCVAL DDNAME'              INCORRECT KEY USED      00914900
.ZG283A32     AIF   (K'&DEPTR LE 0).ZG283A33    OK                      00915000
&ZCVAL        SETC '&ZCVAL DEPTR'               INCORRECT KEY USED      00915100
.ZG283A33     AIF   (K'&MEMBER LE 0).ZG283A34   OK                      00915200
&ZCVAL        SETC '&ZCVAL MEMBER'              INCORRECT KEY USED      00915300
.ZG283A34     AIF   (K'&DCBPTR LE 0).ZG283A35   OK                      00915400
&ZCVAL        SETC '&ZCVAL DCBPTR'              INCORRECT KEY USED      00915500
.ZG283A35     AIF   (K'&EPTOKEN LE 0).ZG283A36  OK                      00915600
&ZCVAL        SETC '&ZCVAL EPTOKEN'             INCORRECT KEY USED      00915700
.ZG283A36     AIF   (K'&ATTRIB LE 0).ZG283A37   OK                      00915800
&ZCVAL        SETC '&ZCVAL ATTRIB'              INCORRECT KEY USED      00915900
.ZG283A37     AIF   (K'&ALIASES LE 0).ZG283A38  OK                      00916000
&ZCVAL        SETC '&ZCVAL ALIASES'             INCORRECT KEY USED      00916100
.ZG283A38     AIF   (K'&IMPORTS LE 0).ZG283A39  OK                      00916200
&ZCVAL        SETC '&ZCVAL IMPORTS'             INCORRECT KEY USED      00916300
.ZG283A39     AIF   (K'&EPLOC LE 0).ZG283A40    OK                      00916400
&ZCVAL        SETC '&ZCVAL EPLOC'               INCORRECT KEY USED      00916500
.ZG283A40     AIF   (K'&IDENTIFY LE 0).ZG283A41  OK                     00916600
&ZCVAL        SETC '&ZCVAL IDENTIFY'            INCORRECT KEY USED      00916700
.ZG283A41     AIF   (K'&EXTLST LE 0).ZG283A42   OK                      00916800
&ZCVAL        SETC '&ZCVAL EXTLST'              INCORRECT KEY USED      00916900
.ZG283A42     AIF   (K'&LNAME LE 0).ZG283A43    OK                      00917000
&ZCVAL        SETC '&ZCVAL LNAME'               INCORRECT KEY USED      00917100
.ZG283A43     AIF   (K'&NEWSECT LE 0).ZG283A44  OK                      00917200
&ZCVAL        SETC '&ZCVAL NEWSECT'             INCORRECT KEY USED      00917300
.ZG283A44     AIF   (K'&ENDDATA LE 0).ZG283A45  OK                      00917400
&ZCVAL        SETC '&ZCVAL ENDDATA'             INCORRECT KEY USED      00917500
.ZG283A45     AIF   (K'&MODLIB LE 0).ZG283A46   OK                      00917600
&ZCVAL        SETC '&ZCVAL MODLIB'              INCORRECT KEY USED      00917700
.ZG283A46     AIF   (K'&SNAME LE 0).ZG283A47    OK                      00917800
&ZCVAL        SETC '&ZCVAL SNAME'               INCORRECT KEY USED      00917900
.ZG283A47     AIF   (K'&REPLACE LE 0).ZG283A48  OK                      00918000
&ZCVAL        SETC '&ZCVAL REPLACE'             INCORRECT KEY USED      00918100
.ZG283A48     AIF   (K'&LIBOPT LE 0).ZG283A49   OK                      00918200
&ZCVAL        SETC '&ZCVAL LIBOPT'              INCORRECT KEY USED      00918300
.ZG283A49     AIF   (K'&OPTION LE 0).ZG283A50   OK                      00918400
&ZCVAL        SETC '&ZCVAL OPTION'              INCORRECT KEY USED      00918500
.ZG283A50     AIF   (K'&OPTVAL LE 0).ZG283A51   OK                      00918600
&ZCVAL        SETC '&ZCVAL OPTVAL'              INCORRECT KEY USED      00918700
.ZG283A51     AIF   (K'&PARMS LE 0).ZG283A52    OK                      00918800
&ZCVAL        SETC '&ZCVAL PARMS'               INCORRECT KEY USED      00918900
.ZG283A52     AIF   (K'&FILES LE 0).ZG283A53    OK                      00919000
&ZCVAL        SETC '&ZCVAL FILES'               INCORRECT KEY USED      00919100
.ZG283A53     AIF   (K'&EXITS LE 0).ZG283A54    OK                      00919200
&ZCVAL        SETC '&ZCVAL EXITS'               INCORRECT KEY USED      00919300
.ZG283A54     AIF   (K'&OPTIONS LE 0).ZG283A55  OK                      00919400
&ZCVAL        SETC '&ZCVAL OPTIONS'             INCORRECT KEY USED      00919500
.ZG283A55     AIF   (K'&ENVARS LE 0).ZG283A56   OK                      00919600
&ZCVAL        SETC '&ZCVAL ENVARS'              INCORRECT KEY USED      00919700
.ZG283A56     AIF   (K'&ORIGIN LE 0).ZG283A57   OK                      00919800
&ZCVAL        SETC '&ZCVAL ORIGIN'              INCORRECT KEY USED      00919900
.ZG283A57     AIF   (K'&REGION LE 0).ZG283A58   OK                      00920000
&ZCVAL        SETC '&ZCVAL REGION'              INCORRECT KEY USED      00920100
.ZG283A58     AIF   (K'&ZCVAL LE 0).ZG283A59    OK                      00920200
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               00920300
              AIF  (K'&ZCVAL LE 160).ZG283A59A                          00920400
&ZCVAL        SETC '&ZCVAL'(1,160)                                      00920500
&ZCVAL        SETC '&ZCVAL....'                                         00920600
.ZG283A59A    ANOP                                                      00920700
&ZMS          SETC  '"FUNC'                                             00920800
&ZMS          SETC  '&ZMS.=&FUNC"'                                      00920900
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                00921000
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                00921100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00921200
.ZG283A59     ANOP  ,                                                   00921300
.*----------------------------------------------------------------***   00921400
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00921500
              AIF   (N'&WORKMOD LE 1).ZG285A    CK NUM                  00921600
&ZMS          SETC  '"WORKMOD='                                         00921700
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    00921800
&ZMS          SETC  '&ZMS "WORKMOD"'                                    00921900
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00922000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00922100
.ZG285A       ANOP  ,                                                   00922200
.*-------------------------------------------------------------------   00922300
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00922400
&ZXWORKMOD    SETC  'INPUT'     SET IN/OUTPUT                           00922500
&XWORKMOD     SETC  '&WORKMOD(1)'               SET XVARIABLE           00922600
              AIF   (N'&WORKMOD GT 1).ZG285B    MULTI                   00922700
&XWORKMOD     SETC  '&WORKMOD'  SET XVARIABLE                           00922800
.ZG285B       AIF   (K'&WORKMOD(1) GT 0).ZG285C                         00922900
&ZXWORKMOD    SETC  ''          RESET IN/OUTPUT                         00923000
&ZMS          SETC  ' '                                                 00923100
&ZMS          SETC  '&ZMS "WORKMOD" KEY AND ITS'                        00923200
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00923300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00923400
.ZG285C       ANOP  ,                                                   00923500
.*-------------------------------------------------------------------   00923600
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00923700
              AIF   (K'&ZXWORKMOD LE 0).ZG285R  NOT I/O                 00923800
              AIF   ('&XWORKMOD'(1,1) NE '(').ZG285R                    00923900
&ZCGPR        SETC  '&XWORKMOD'(2,K'&XWORKMOD-2)                        00924000
              AIF   ('&ZCGPR'(1,1) NE '0').ZG285P                       00924100
              AIF   (K'&ZCGPR GT 2).ZG285Q                              00924200
              AIF   ('&ZCGPR' EQ '0').ZG285Q                            00924300
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00924400
              AIF   (T'&ZCGPR NE 'N').ZG285Q    INVALID REG NAME        00924500
.ZG285P       ANOP  ,                                                   00924600
              AIF   (T'&ZCGPR NE 'N').ZG285R    NON NUMERIC             00924700
              AIF   ('&ZCGPR' LT '2').ZG285Q                            00924800
              AIF   ('&ZCGPR' LE '12').ZG285R                           00924900
.ZG285Q       ANOP  ,                                                   00925000
&ZMS          SETC  '"WORKMOD='                                         00925100
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    00925200
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00925300
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00925400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00925500
.ZG285R       ANOP  ,                                                   00925600
.*----------------------------------------------------------------***   00925700
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00925800
              AIF   (N'&SECTION LE 1).ZG288A    CK NUM                  00925900
&ZMS          SETC  '"SECTION='                                         00926000
&ZMS          SETC  '&ZMS.&SECTION"'                                    00926100
&ZMS          SETC  '&ZMS "SECTION"'                                    00926200
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00926300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00926400
.ZG288A       ANOP  ,                                                   00926500
.*-------------------------------------------------------------------   00926600
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00926700
&ZXSECTION    SETC  'INPUT'     SET IN/OUTPUT                           00926800
&XSECTION     SETC  '&SECTION(1)'               SET XVARIABLE           00926900
              AIF   (N'&SECTION GT 1).ZG288B    MULTI                   00927000
&XSECTION     SETC  '&SECTION'  SET XVARIABLE                           00927100
.ZG288B       AIF   (K'&SECTION(1) GT 0).ZG288C                         00927200
&ZXSECTION    SETC  ''          RESET IN/OUTPUT                         00927300
&ZMS          SETC  ' '                                                 00927400
&ZMS          SETC  '&ZMS "SECTION" KEY AND ITS'                        00927500
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00927600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00927700
.ZG288C       ANOP  ,                                                   00927800
.*-------------------------------------------------------------------   00927900
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00928000
              AIF   (K'&ZXSECTION LE 0).ZG288R  NOT I/O                 00928100
              AIF   ('&XSECTION'(1,1) NE '(').ZG288R                    00928200
&ZCGPR        SETC  '&XSECTION'(2,K'&XSECTION-2)                        00928300
              AIF   ('&ZCGPR'(1,1) NE '0').ZG288P                       00928400
              AIF   (K'&ZCGPR GT 2).ZG288Q                              00928500
              AIF   ('&ZCGPR' EQ '0').ZG288Q                            00928600
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00928700
              AIF   (T'&ZCGPR NE 'N').ZG288Q    INVALID REG NAME        00928800
.ZG288P       ANOP  ,                                                   00928900
              AIF   (T'&ZCGPR NE 'N').ZG288R    NON NUMERIC             00929000
              AIF   ('&ZCGPR' LT '2').ZG288Q                            00929100
              AIF   ('&ZCGPR' LE '12').ZG288R                           00929200
.ZG288Q       ANOP  ,                                                   00929300
&ZMS          SETC  '"SECTION='                                         00929400
&ZMS          SETC  '&ZMS.&SECTION"'                                    00929500
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00929600
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00929700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00929800
.ZG288R       ANOP  ,                                                   00929900
.*-------------------------------------------------------------------   00930000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00930100
.ZG290        ANOP  ,                                                   00930200
&ZTLC         SETC 'LOADW'                                              00930300
              AIF   ('&FUNC(1)' NE '&ZTLC').ZG311                       00930400
&XFUNC        SETC  'LOADW'     SET KEYWORD                             00930500
              AIF   (N'&FUNC LE 1).ZG290A       CK NUM                  00930600
&ZMS          SETC  '"FUNC='                                            00930700
&ZMS          SETC  '&ZMS.&FUNC"'                                       00930800
&ZMS          SETC  '&ZMS "FUNC"'                                       00930900
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00931000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00931100
.ZG290A       ANOP  ,                                                   00931200
.*------------------------------------------------------------------    00931300
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00931400
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             00931500
.ZG290A0      AIF   (K'&ANAME LE 0).ZG290A1     OK                      00931600
&ZCVAL        SETC '&ZCVAL ANAME'               INCORRECT KEY USED      00931700
.ZG290A1      AIF   (K'&ENAME LE 0).ZG290A2     OK                      00931800
&ZCVAL        SETC '&ZCVAL ENAME'               INCORRECT KEY USED      00931900
.ZG290A2      AIF   (K'&AMODE LE 0).ZG290A3     OK                      00932000
&ZCVAL        SETC '&ZCVAL AMODE'               INCORRECT KEY USED      00932100
.ZG290A3      AIF   (K'&ATYPE LE 0).ZG290A4     OK                      00932200
&ZCVAL        SETC '&ZCVAL ATYPE'               INCORRECT KEY USED      00932300
.ZG290A4      AIF   (K'&DNAME LE 0).ZG290A5     OK                      00932400
&ZCVAL        SETC '&ZCVAL DNAME'               INCORRECT KEY USED      00932500
.ZG290A5      AIF   (K'&SECTION LE 0).ZG290A6   OK                      00932600
&ZCVAL        SETC '&ZCVAL SECTION'             INCORRECT KEY USED      00932700
.ZG290A6      AIF   (K'&BDY LE 0).ZG290A7       OK                      00932800
&ZCVAL        SETC '&ZCVAL BDY'                 INCORRECT KEY USED      00932900
.ZG290A7      AIF   (K'&CLASSL LE 0).ZG290A8    OK                      00933000
&ZCVAL        SETC '&ZCVAL CLASSL'              INCORRECT KEY USED      00933100
.ZG290A8      AIF   (K'&OLDNAME LE 0).ZG290A9   OK                      00933200
&ZCVAL        SETC '&ZCVAL OLDNAME'             INCORRECT KEY USED      00933300
.ZG290A9      AIF   (K'&NEWNAME LE 0).ZG290A10  OK                      00933400
&ZCVAL        SETC '&ZCVAL NEWNAME'             INCORRECT KEY USED      00933500
.ZG290A10     AIF   (K'&COUNT LE 0).ZG290A11    OK                      00933600
&ZCVAL        SETC '&ZCVAL COUNT'               INCORRECT KEY USED      00933700
.ZG290A11     AIF   (K'&MODE LE 0).ZG290A12     OK                      00933800
&ZCVAL        SETC '&ZCVAL MODE'                INCORRECT KEY USED      00933900
.ZG290A12     AIF   (K'&CLASS LE 0).ZG290A13    OK                      00934000
&ZCVAL        SETC '&ZCVAL CLASS'               INCORRECT KEY USED      00934100
.ZG290A13     AIF   (K'&CALLIB LE 0).ZG290A14   OK                      00934200
&ZCVAL        SETC '&ZCVAL CALLIB'              INCORRECT KEY USED      00934300
.ZG290A14     AIF   (K'&PATHNAME LE 0).ZG290A15  OK                     00934400
&ZCVAL        SETC '&ZCVAL PATHNAME'            INCORRECT KEY USED      00934500
.ZG290A15     AIF   (K'&DIALOG LE 0).ZG290A16   OK                      00934600
&ZCVAL        SETC '&ZCVAL DIALOG'              INCORRECT KEY USED      00934700
.ZG290A16     AIF   (K'&INTENT LE 0).ZG290A17   OK                      00934800
&ZCVAL        SETC '&ZCVAL INTENT'              INCORRECT KEY USED      00934900
.ZG290A17     AIF   (K'&PROTECT LE 0).ZG290A18  OK                      00935000
&ZCVAL        SETC '&ZCVAL PROTECT'             INCORRECT KEY USED      00935100
.ZG290A18     AIF   (K'&RENAMEL LE 0).ZG290A19  OK                      00935200
&ZCVAL        SETC '&ZCVAL RENAMEL'             INCORRECT KEY USED      00935300
.ZG290A19     AIF   (K'&AREA LE 0).ZG290A20     OK                      00935400
&ZCVAL        SETC '&ZCVAL AREA'                INCORRECT KEY USED      00935500
.ZG290A20     AIF   (K'&CURSOR LE 0).ZG290A21   OK                      00935600
&ZCVAL        SETC '&ZCVAL CURSOR'              INCORRECT KEY USED      00935700
.ZG290A21     AIF   (K'&RELOC LE 0).ZG290A22    OK                      00935800
&ZCVAL        SETC '&ZCVAL RELOC'               INCORRECT KEY USED      00935900
.ZG290A22     AIF   (K'&RECTYPE LE 0).ZG290A23  OK                      00936000
&ZCVAL        SETC '&ZCVAL RECTYPE'             INCORRECT KEY USED      00936100
.ZG290A23     AIF   (K'&OFFSET LE 0).ZG290A24   OK                      00936200
&ZCVAL        SETC '&ZCVAL OFFSET'              INCORRECT KEY USED      00936300
.ZG290A24     AIF   (K'&SYMBOL LE 0).ZG290A25   OK                      00936400
&ZCVAL        SETC '&ZCVAL SYMBOL'              INCORRECT KEY USED      00936500
.ZG290A25     AIF   (K'&TCOUNT LE 0).ZG290A26   OK                      00936600
&ZCVAL        SETC '&ZCVAL TCOUNT'              INCORRECT KEY USED      00936700
.ZG290A26     AIF   (K'&NTYPE LE 0).ZG290A27    OK                      00936800
&ZCVAL        SETC '&ZCVAL NTYPE'               INCORRECT KEY USED      00936900
.ZG290A27     AIF   (K'&CULIST LE 0).ZG290A28   OK                      00937000
&ZCVAL        SETC '&ZCVAL CULIST'              INCORRECT KEY USED      00937100
.ZG290A28     AIF   (K'&ITYPE LE 0).ZG290A29    OK                      00937200
&ZCVAL        SETC '&ZCVAL ITYPE'               INCORRECT KEY USED      00937300
.ZG290A29     AIF   (K'&DLLNAME LE 0).ZG290A30  OK                      00937400
&ZCVAL        SETC '&ZCVAL DLLNAME'             INCORRECT KEY USED      00937500
.ZG290A30     AIF   (K'&INAME LE 0).ZG290A31    OK                      00937600
&ZCVAL        SETC '&ZCVAL INAME'               INCORRECT KEY USED      00937700
.ZG290A31     AIF   (K'&INTYPE LE 0).ZG290A32   OK                      00937800
&ZCVAL        SETC '&ZCVAL INTYPE'              INCORRECT KEY USED      00937900
.ZG290A32     AIF   (K'&DDNAME LE 0).ZG290A33   OK                      00938000
&ZCVAL        SETC '&ZCVAL DDNAME'              INCORRECT KEY USED      00938100
.ZG290A33     AIF   (K'&DEPTR LE 0).ZG290A34    OK                      00938200
&ZCVAL        SETC '&ZCVAL DEPTR'               INCORRECT KEY USED      00938300
.ZG290A34     AIF   (K'&MEMBER LE 0).ZG290A35   OK                      00938400
&ZCVAL        SETC '&ZCVAL MEMBER'              INCORRECT KEY USED      00938500
.ZG290A35     AIF   (K'&DCBPTR LE 0).ZG290A36   OK                      00938600
&ZCVAL        SETC '&ZCVAL DCBPTR'              INCORRECT KEY USED      00938700
.ZG290A36     AIF   (K'&EPTOKEN LE 0).ZG290A37  OK                      00938800
&ZCVAL        SETC '&ZCVAL EPTOKEN'             INCORRECT KEY USED      00938900
.ZG290A37     AIF   (K'&ATTRIB LE 0).ZG290A38   OK                      00939000
&ZCVAL        SETC '&ZCVAL ATTRIB'              INCORRECT KEY USED      00939100
.ZG290A38     AIF   (K'&ALIASES LE 0).ZG290A39  OK                      00939200
&ZCVAL        SETC '&ZCVAL ALIASES'             INCORRECT KEY USED      00939300
.ZG290A39     AIF   (K'&IMPORTS LE 0).ZG290A40  OK                      00939400
&ZCVAL        SETC '&ZCVAL IMPORTS'             INCORRECT KEY USED      00939500
.ZG290A40     AIF   (K'&NEWSECT LE 0).ZG290A41  OK                      00939600
&ZCVAL        SETC '&ZCVAL NEWSECT'             INCORRECT KEY USED      00939700
.ZG290A41     AIF   (K'&ENDDATA LE 0).ZG290A42  OK                      00939800
&ZCVAL        SETC '&ZCVAL ENDDATA'             INCORRECT KEY USED      00939900
.ZG290A42     AIF   (K'&MODLIB LE 0).ZG290A43   OK                      00940000
&ZCVAL        SETC '&ZCVAL MODLIB'              INCORRECT KEY USED      00940100
.ZG290A43     AIF   (K'&SNAME LE 0).ZG290A44    OK                      00940200
&ZCVAL        SETC '&ZCVAL SNAME'               INCORRECT KEY USED      00940300
.ZG290A44     AIF   (K'&REPLACE LE 0).ZG290A45  OK                      00940400
&ZCVAL        SETC '&ZCVAL REPLACE'             INCORRECT KEY USED      00940500
.ZG290A45     AIF   (K'&LIBOPT LE 0).ZG290A46   OK                      00940600
&ZCVAL        SETC '&ZCVAL LIBOPT'              INCORRECT KEY USED      00940700
.ZG290A46     AIF   (K'&OPTION LE 0).ZG290A47   OK                      00940800
&ZCVAL        SETC '&ZCVAL OPTION'              INCORRECT KEY USED      00940900
.ZG290A47     AIF   (K'&OPTVAL LE 0).ZG290A48   OK                      00941000
&ZCVAL        SETC '&ZCVAL OPTVAL'              INCORRECT KEY USED      00941100
.ZG290A48     AIF   (K'&PARMS LE 0).ZG290A49    OK                      00941200
&ZCVAL        SETC '&ZCVAL PARMS'               INCORRECT KEY USED      00941300
.ZG290A49     AIF   (K'&FILES LE 0).ZG290A50    OK                      00941400
&ZCVAL        SETC '&ZCVAL FILES'               INCORRECT KEY USED      00941500
.ZG290A50     AIF   (K'&EXITS LE 0).ZG290A51    OK                      00941600
&ZCVAL        SETC '&ZCVAL EXITS'               INCORRECT KEY USED      00941700
.ZG290A51     AIF   (K'&OPTIONS LE 0).ZG290A52  OK                      00941800
&ZCVAL        SETC '&ZCVAL OPTIONS'             INCORRECT KEY USED      00941900
.ZG290A52     AIF   (K'&ENVARS LE 0).ZG290A53   OK                      00942000
&ZCVAL        SETC '&ZCVAL ENVARS'              INCORRECT KEY USED      00942100
.ZG290A53     AIF   (K'&ORIGIN LE 0).ZG290A54   OK                      00942200
&ZCVAL        SETC '&ZCVAL ORIGIN'              INCORRECT KEY USED      00942300
.ZG290A54     AIF   (K'&REGION LE 0).ZG290A55   OK                      00942400
&ZCVAL        SETC '&ZCVAL REGION'              INCORRECT KEY USED      00942500
.ZG290A55     AIF   (K'&ZCVAL LE 0).ZG290A56    OK                      00942600
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               00942700
              AIF  (K'&ZCVAL LE 160).ZG290A56A                          00942800
&ZCVAL        SETC '&ZCVAL'(1,160)                                      00942900
&ZCVAL        SETC '&ZCVAL....'                                         00943000
.ZG290A56A    ANOP                                                      00943100
&ZMS          SETC  '"FUNC'                                             00943200
&ZMS          SETC  '&ZMS.=&FUNC"'                                      00943300
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                00943400
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                00943500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00943600
.ZG290A56     ANOP  ,                                                   00943700
.*----------------------------------------------------------------***   00943800
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00943900
              AIF   (N'&WORKMOD LE 1).ZG292A    CK NUM                  00944000
&ZMS          SETC  '"WORKMOD='                                         00944100
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    00944200
&ZMS          SETC  '&ZMS "WORKMOD"'                                    00944300
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00944400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00944500
.ZG292A       ANOP  ,                                                   00944600
.*-------------------------------------------------------------------   00944700
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00944800
&ZXWORKMOD    SETC  'INPUT'     SET IN/OUTPUT                           00944900
&XWORKMOD     SETC  '&WORKMOD(1)'               SET XVARIABLE           00945000
              AIF   (N'&WORKMOD GT 1).ZG292B    MULTI                   00945100
&XWORKMOD     SETC  '&WORKMOD'  SET XVARIABLE                           00945200
.ZG292B       AIF   (K'&WORKMOD(1) GT 0).ZG292C                         00945300
&ZXWORKMOD    SETC  ''          RESET IN/OUTPUT                         00945400
&ZMS          SETC  ' '                                                 00945500
&ZMS          SETC  '&ZMS "WORKMOD" KEY AND ITS'                        00945600
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00945700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00945800
.ZG292C       ANOP  ,                                                   00945900
.*-------------------------------------------------------------------   00946000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00946100
              AIF   (K'&ZXWORKMOD LE 0).ZG292R  NOT I/O                 00946200
              AIF   ('&XWORKMOD'(1,1) NE '(').ZG292R                    00946300
&ZCGPR        SETC  '&XWORKMOD'(2,K'&XWORKMOD-2)                        00946400
              AIF   ('&ZCGPR'(1,1) NE '0').ZG292P                       00946500
              AIF   (K'&ZCGPR GT 2).ZG292Q                              00946600
              AIF   ('&ZCGPR' EQ '0').ZG292Q                            00946700
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00946800
              AIF   (T'&ZCGPR NE 'N').ZG292Q    INVALID REG NAME        00946900
.ZG292P       ANOP  ,                                                   00947000
              AIF   (T'&ZCGPR NE 'N').ZG292R    NON NUMERIC             00947100
              AIF   ('&ZCGPR' LT '2').ZG292Q                            00947200
              AIF   ('&ZCGPR' LE '12').ZG292R                           00947300
.ZG292Q       ANOP  ,                                                   00947400
&ZMS          SETC  '"WORKMOD='                                         00947500
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    00947600
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00947700
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00947800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00947900
.ZG292R       ANOP  ,                                                   00948000
.*----------------------------------------------------------------***   00948100
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00948200
              AIF   (N'&EPLOC LE 1).ZG295A      CK NUM                  00948300
&ZMS          SETC  '"EPLOC='                                           00948400
&ZMS          SETC  '&ZMS.&EPLOC"'                                      00948500
&ZMS          SETC  '&ZMS "EPLOC"'                                      00948600
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00948700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00948800
.ZG295A       ANOP  ,                                                   00948900
.*-------------------------------------------------------------------   00949000
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00949100
&ZXEPLOC      SETC  'OUTPUT'    SET IN/OUTPUT                           00949200
&XEPLOC       SETC  '&EPLOC(1)'                 SET XVARIABLE           00949300
              AIF   (N'&EPLOC GT 1).ZG295B      MULTI                   00949400
&XEPLOC       SETC  '&EPLOC'    SET XVARIABLE                           00949500
.ZG295B       AIF   (K'&EPLOC(1) GT 0).ZG295C                           00949600
&ZXEPLOC      SETC  ''          RESET IN/OUTPUT                         00949700
&ZMS          SETC  ' '                                                 00949800
&ZMS          SETC  '&ZMS "EPLOC" KEY AND ITS'                          00949900
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00950000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00950100
.ZG295C       ANOP  ,                                                   00950200
.*-------------------------------------------------------------------   00950300
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00950400
              AIF   (K'&ZXEPLOC LE 0).ZG295R    NOT I/O                 00950500
              AIF   ('&XEPLOC'(1,1) NE '(').ZG295R                      00950600
&ZCGPR        SETC  '&XEPLOC'(2,K'&XEPLOC-2)                            00950700
              AIF   ('&ZCGPR'(1,1) NE '0').ZG295P                       00950800
              AIF   (K'&ZCGPR GT 2).ZG295Q                              00950900
              AIF   ('&ZCGPR' EQ '0').ZG295Q                            00951000
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00951100
              AIF   (T'&ZCGPR NE 'N').ZG295Q    INVALID REG NAME        00951200
.ZG295P       ANOP  ,                                                   00951300
              AIF   (T'&ZCGPR NE 'N').ZG295R    NON NUMERIC             00951400
              AIF   ('&ZCGPR' LT '2').ZG295Q                            00951500
              AIF   ('&ZCGPR' LE '12').ZG295R                           00951600
.ZG295Q       ANOP  ,                                                   00951700
&ZMS          SETC  '"EPLOC='                                           00951800
&ZMS          SETC  '&ZMS.&EPLOC"'                                      00951900
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00952000
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00952100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00952200
.ZG295R       ANOP  ,                                                   00952300
.*------------------------------------------------------------------    00952400
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00952500
&XIDENTIFY    SETC  ''          INITIALIZE XVARIABLE                    00952600
.*-------------------------------------------------------------------   00952700
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00952800
.ZG299        ANOP  ,                                                   00952900
              AIF   (K'&IDENTIFY(1) LE 0).ZG299A                        00953000
&ZTLC         SETC 'N'                                                  00953100
              AIF   ('&IDENTIFY(1)' NE '&ZTLC').ZG303                   00953200
&XIDENTIFY    SETC  'N'         SET KEYWORD                             00953300
              AIF   (N'&IDENTIFY LE 1).ZG299A   CK NUM                  00953400
&ZMS          SETC  '"IDENTIFY='                                        00953500
&ZMS          SETC  '&ZMS.&IDENTIFY"'                                   00953600
&ZMS          SETC  '&ZMS "IDENTIFY"'                                   00953700
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00953800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00953900
.ZG299A       ANOP  ,                                                   00954000
.*------------------------------------------------------------------    00954100
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00954200
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             00954300
.ZG299A0      AIF   (K'&LNAME LE 0).ZG299A1     OK                      00954400
&ZCVAL        SETC '&ZCVAL LNAME'               INCORRECT KEY USED      00954500
.ZG299A1      AIF   (K'&ZCVAL LE 0).ZG299A2     OK                      00954600
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               00954700
&ZMS          SETC  '"IDENTIFY'                                         00954800
&ZMS          SETC  '&ZMS.=&IDENTIFY"'                                  00954900
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                00955000
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                00955100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00955200
.ZG299A2      ANOP  ,                                                   00955300
.*----------------------------------------------------------------***   00955400
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00955500
              AIF   (N'&EXTLST LE 1).ZG301A     CK NUM                  00955600
&ZMS          SETC  '"EXTLST='                                          00955700
&ZMS          SETC  '&ZMS.&EXTLST"'                                     00955800
&ZMS          SETC  '&ZMS "EXTLST"'                                     00955900
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00956000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00956100
.ZG301A       ANOP  ,                                                   00956200
.*-------------------------------------------------------------------   00956300
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00956400
&ZXEXTLST     SETC  'OUTPUT'    SET IN/OUTPUT                           00956500
&XEXTLST      SETC  '&EXTLST(1)'                SET XVARIABLE           00956600
              AIF   (N'&EXTLST GT 1).ZG301B     MULTI                   00956700
&XEXTLST      SETC  '&EXTLST'   SET XVARIABLE                           00956800
.ZG301B       AIF   (K'&EXTLST(1) GT 0).ZG301C                          00956900
&ZXEXTLST     SETC  ''          RESET IN/OUTPUT                         00957000
&ZMS          SETC  ' '                                                 00957100
&ZMS          SETC  '&ZMS "EXTLST" KEY AND ITS'                         00957200
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00957300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00957400
.ZG301C       ANOP  ,                                                   00957500
.*-------------------------------------------------------------------   00957600
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00957700
              AIF   (K'&ZXEXTLST LE 0).ZG301R   NOT I/O                 00957800
              AIF   ('&XEXTLST'(1,1) NE '(').ZG301R                     00957900
&ZCGPR        SETC  '&XEXTLST'(2,K'&XEXTLST-2)                          00958000
              AIF   ('&ZCGPR'(1,1) NE '0').ZG301P                       00958100
              AIF   (K'&ZCGPR GT 2).ZG301Q                              00958200
              AIF   ('&ZCGPR' EQ '0').ZG301Q                            00958300
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00958400
              AIF   (T'&ZCGPR NE 'N').ZG301Q    INVALID REG NAME        00958500
.ZG301P       ANOP  ,                                                   00958600
              AIF   (T'&ZCGPR NE 'N').ZG301R    NON NUMERIC             00958700
              AIF   ('&ZCGPR' LT '2').ZG301Q                            00958800
              AIF   ('&ZCGPR' LE '12').ZG301R                           00958900
.ZG301Q       ANOP  ,                                                   00959000
&ZMS          SETC  '"EXTLST='                                          00959100
&ZMS          SETC  '&ZMS.&EXTLST"'                                     00959200
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00959300
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00959400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00959500
.ZG301R       ANOP  ,                                                   00959600
.*-------------------------------------------------------------------   00959700
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00959800
.ZG303        ANOP  ,                                                   00959900
&ZTLC         SETC 'Y'                                                  00960000
              AIF   ('&IDENTIFY(1)' NE '&ZTLC').ZG310                   00960100
&XIDENTIFY    SETC  'Y'         SET KEYWORD                             00960200
              AIF   (N'&IDENTIFY LE 1).ZG303A   CK NUM                  00960300
&ZMS          SETC  '"IDENTIFY='                                        00960400
&ZMS          SETC  '&ZMS.&IDENTIFY"'                                   00960500
&ZMS          SETC  '&ZMS "IDENTIFY"'                                   00960600
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00960700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00960800
.ZG303A       ANOP  ,                                                   00960900
.*----------------------------------------------------------------***   00961000
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00961100
              AIF   (N'&EXTLST LE 1).ZG305A     CK NUM                  00961200
&ZMS          SETC  '"EXTLST='                                          00961300
&ZMS          SETC  '&ZMS.&EXTLST"'                                     00961400
&ZMS          SETC  '&ZMS "EXTLST"'                                     00961500
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00961600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00961700
.ZG305A       ANOP  ,                                                   00961800
.*-------------------------------------------------------------------   00961900
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00962000
              AIF   (K'&EXTLST(1) LE 0).ZG305C  NO PARM                 00962100
&ZXEXTLST     SETC  'OUTPUT'    SET OUTPUT                              00962200
&XEXTLST      SETC  '&EXTLST(1)'                SET XVARIABLE           00962300
              AIF   (N'&EXTLST GT 1).ZG305C                             00962400
&XEXTLST      SETC  '&EXTLST'   SET XVARIABLE                           00962500
.ZG305C       ANOP  ,                                                   00962600
.*-------------------------------------------------------------------   00962700
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00962800
              AIF   (K'&ZXEXTLST LE 0).ZG305R   NOT I/O                 00962900
              AIF   ('&XEXTLST'(1,1) NE '(').ZG305R                     00963000
&ZCGPR        SETC  '&XEXTLST'(2,K'&XEXTLST-2)                          00963100
              AIF   ('&ZCGPR'(1,1) NE '0').ZG305P                       00963200
              AIF   (K'&ZCGPR GT 2).ZG305Q                              00963300
              AIF   ('&ZCGPR' EQ '0').ZG305Q                            00963400
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00963500
              AIF   (T'&ZCGPR NE 'N').ZG305Q    INVALID REG NAME        00963600
.ZG305P       ANOP  ,                                                   00963700
              AIF   (T'&ZCGPR NE 'N').ZG305R    NON NUMERIC             00963800
              AIF   ('&ZCGPR' LT '2').ZG305Q                            00963900
              AIF   ('&ZCGPR' LE '12').ZG305R                           00964000
.ZG305Q       ANOP  ,                                                   00964100
&ZMS          SETC  '"EXTLST='                                          00964200
&ZMS          SETC  '&ZMS.&EXTLST"'                                     00964300
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00964400
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00964500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00964600
.ZG305R       ANOP  ,                                                   00964700
.*----------------------------------------------------------------***   00964800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00964900
              AIF   (N'&LNAME LE 1).ZG308A      CK NUM                  00965000
&ZMS          SETC  '"LNAME='                                           00965100
&ZMS          SETC  '&ZMS.&LNAME"'                                      00965200
&ZMS          SETC  '&ZMS "LNAME"'                                      00965300
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00965400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00965500
.ZG308A       ANOP  ,                                                   00965600
.*-------------------------------------------------------------------   00965700
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00965800
&ZXLNAME      SETC  'INPUT'     SET IN/OUTPUT                           00965900
&XLNAME       SETC  '0'                                                 00966000
              AIF   (K'&LNAME(1) LE 0).ZG308B   PARM                    00966100
&XLNAME       SETC  '&LNAME(1)'                 SET XVARIABLE           00966200
              AIF   (N'&LNAME GT 1).ZG308B      MULTI                   00966300
&XLNAME       SETC  '&LNAME'    SET XVARIABLE                           00966400
.ZG308B       ANOP  ,                                                   00966500
.*-------------------------------------------------------------------   00966600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00966700
              AIF   (K'&ZXLNAME LE 0).ZG308R    NOT I/O                 00966800
         AIF   ('&XLNAME' EQ '0').ZG308R                                00966900
              AIF   ('&XLNAME'(1,1) NE '(').ZG308R                      00967000
&ZCGPR        SETC  '&XLNAME'(2,K'&XLNAME-2)                            00967100
              AIF   ('&ZCGPR'(1,1) NE '0').ZG308P                       00967200
              AIF   (K'&ZCGPR GT 2).ZG308Q                              00967300
              AIF   ('&ZCGPR' EQ '0').ZG308Q                            00967400
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00967500
              AIF   (T'&ZCGPR NE 'N').ZG308Q    INVALID REG NAME        00967600
.ZG308P       ANOP  ,                                                   00967700
              AIF   (T'&ZCGPR NE 'N').ZG308R    NON NUMERIC             00967800
              AIF   ('&ZCGPR' LT '2').ZG308Q                            00967900
              AIF   ('&ZCGPR' LE '12').ZG308R                           00968000
.ZG308Q       ANOP  ,                                                   00968100
&ZMS          SETC  '"LNAME='                                           00968200
&ZMS          SETC  '&ZMS.&LNAME"'                                      00968300
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00968400
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00968500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00968600
.ZG308R       ANOP  ,                                                   00968700
.*------------------------------------------------------------------    00968800
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00968900
.ZG310        ANOP  ,                                                   00969000
&ZXIDENTIFY   SETC  'INPUT'     SET IN/OUTPUT                           00969100
              AIF   (K'&XIDENTIFY GT 0).ZG310E  VALID ARG               00969200
              AIF   (T'&IDENTIFY EQ 'O').ZG310D  OMITTED                00969300
&ZASYSLNDX    SETA  0                                                   00969400
.ZG310A       ANOP  ,           POSITIONAL MACRO KEY                    00969500
&ZASYSLNDX    SETA  &ZASYSLNDX+1                                        00969600
              AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG310C                   00969700
&ZTLC         SETC 'IDENTIFY'                                           00969800
              AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG310A          00969900
.ZG310B       ANOP  ,                                                   00970000
&ZXIDENTIFY   SETC  ''          RESET IN/OUTPUT                         00970100
&ZMS          SETC  'THE "IDENTIFY" KEY'                                00970200
&ZMS          SETC  '&ZMS MUST CONTAIN ONE'                             00970300
              MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                    00970400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00970500
              AGO   .ZG310E                                             00970600
.ZG310C       ANOP  ,                                                   00970700
&ZXIDENTIFY   SETC  ''          RESET IN/OUTPUT                         00970800
&ZMS          SETC  '"IDENTIFY='                                        00970900
&ZMS          SETC  '&ZMS.&IDENTIFY"'                                   00971000
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           00971100
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00971200
&ZMS          SETC  '&ZMS "N"'                                          00971300
&ZMS          SETC  '&ZMS OR "Y".'                                      00971400
              MNOTE 8,' &ZMS '                                          00971500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00971600
              AGO   .ZG310E                                             00971700
.ZG310D       ANOP  ,                                                   00971800
&XIDENTIFY    SETC  'N'         SET DEFAULT KEYWORD                     00971900
.ZG310E       ANOP  ,                                                   00972000
.*------------------------------------------------------------------    00972100
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00972200
              AIF   (K'&IDENTIFY(1) GT 0).ZG310F  PARM                  00972300
&XIDENTIFY    SETC  ''          ENSURE NULL KEYWORD                     00972400
&ZXIDENTIFY   SETC  ''          RESET IN/OUTPUT                         00972500
&ZMS          SETC  'THE'                                               00972600
&ZMS          SETC  '&ZMS "IDENTIFY" KEY AND ITS'                       00972700
&ZMS          SETC  '&ZMS ARGUMENT ARE REQUIRED.'                       00972800
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00972900
&ZMS          SETC  '&ZMS "N"'                                          00973000
&ZMS          SETC  '&ZMS OR "Y".'                                      00973100
              MNOTE 8,' &ZMS '                                          00973200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00973300
.ZG310F       ANOP  ,                                                   00973400
.*-------------------------------------------------------------------   00973500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00973600
.ZG311        ANOP  ,                                                   00973700
&ZTLC         SETC 'ORDERS'                                             00973800
              AIF   ('&FUNC(1)' NE '&ZTLC').ZG318                       00973900
&XFUNC        SETC  'ORDERS'    SET KEYWORD                             00974000
              AIF   (N'&FUNC LE 1).ZG311A       CK NUM                  00974100
&ZMS          SETC  '"FUNC='                                            00974200
&ZMS          SETC  '&ZMS.&FUNC"'                                       00974300
&ZMS          SETC  '&ZMS "FUNC"'                                       00974400
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00974500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00974600
.ZG311A       ANOP  ,                                                   00974700
.*------------------------------------------------------------------    00974800
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00974900
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             00975000
.ZG311A0      AIF   (K'&ANAME LE 0).ZG311A1     OK                      00975100
&ZCVAL        SETC '&ZCVAL ANAME'               INCORRECT KEY USED      00975200
.ZG311A1      AIF   (K'&ENAME LE 0).ZG311A2     OK                      00975300
&ZCVAL        SETC '&ZCVAL ENAME'               INCORRECT KEY USED      00975400
.ZG311A2      AIF   (K'&AMODE LE 0).ZG311A3     OK                      00975500
&ZCVAL        SETC '&ZCVAL AMODE'               INCORRECT KEY USED      00975600
.ZG311A3      AIF   (K'&ATYPE LE 0).ZG311A4     OK                      00975700
&ZCVAL        SETC '&ZCVAL ATYPE'               INCORRECT KEY USED      00975800
.ZG311A4      AIF   (K'&DNAME LE 0).ZG311A5     OK                      00975900
&ZCVAL        SETC '&ZCVAL DNAME'               INCORRECT KEY USED      00976000
.ZG311A5      AIF   (K'&BDY LE 0).ZG311A6       OK                      00976100
&ZCVAL        SETC '&ZCVAL BDY'                 INCORRECT KEY USED      00976200
.ZG311A6      AIF   (K'&CLASSL LE 0).ZG311A7    OK                      00976300
&ZCVAL        SETC '&ZCVAL CLASSL'              INCORRECT KEY USED      00976400
.ZG311A7      AIF   (K'&OLDNAME LE 0).ZG311A8   OK                      00976500
&ZCVAL        SETC '&ZCVAL OLDNAME'             INCORRECT KEY USED      00976600
.ZG311A8      AIF   (K'&NEWNAME LE 0).ZG311A9   OK                      00976700
&ZCVAL        SETC '&ZCVAL NEWNAME'             INCORRECT KEY USED      00976800
.ZG311A9      AIF   (K'&COUNT LE 0).ZG311A10    OK                      00976900
&ZCVAL        SETC '&ZCVAL COUNT'               INCORRECT KEY USED      00977000
.ZG311A10     AIF   (K'&MODE LE 0).ZG311A11     OK                      00977100
&ZCVAL        SETC '&ZCVAL MODE'                INCORRECT KEY USED      00977200
.ZG311A11     AIF   (K'&CLASS LE 0).ZG311A12    OK                      00977300
&ZCVAL        SETC '&ZCVAL CLASS'               INCORRECT KEY USED      00977400
.ZG311A12     AIF   (K'&CALLIB LE 0).ZG311A13   OK                      00977500
&ZCVAL        SETC '&ZCVAL CALLIB'              INCORRECT KEY USED      00977600
.ZG311A13     AIF   (K'&PATHNAME LE 0).ZG311A14  OK                     00977700
&ZCVAL        SETC '&ZCVAL PATHNAME'            INCORRECT KEY USED      00977800
.ZG311A14     AIF   (K'&DIALOG LE 0).ZG311A15   OK                      00977900
&ZCVAL        SETC '&ZCVAL DIALOG'              INCORRECT KEY USED      00978000
.ZG311A15     AIF   (K'&INTENT LE 0).ZG311A16   OK                      00978100
&ZCVAL        SETC '&ZCVAL INTENT'              INCORRECT KEY USED      00978200
.ZG311A16     AIF   (K'&PROTECT LE 0).ZG311A17  OK                      00978300
&ZCVAL        SETC '&ZCVAL PROTECT'             INCORRECT KEY USED      00978400
.ZG311A17     AIF   (K'&RENAMEL LE 0).ZG311A18  OK                      00978500
&ZCVAL        SETC '&ZCVAL RENAMEL'             INCORRECT KEY USED      00978600
.ZG311A18     AIF   (K'&AREA LE 0).ZG311A19     OK                      00978700
&ZCVAL        SETC '&ZCVAL AREA'                INCORRECT KEY USED      00978800
.ZG311A19     AIF   (K'&CURSOR LE 0).ZG311A20   OK                      00978900
&ZCVAL        SETC '&ZCVAL CURSOR'              INCORRECT KEY USED      00979000
.ZG311A20     AIF   (K'&RELOC LE 0).ZG311A21    OK                      00979100
&ZCVAL        SETC '&ZCVAL RELOC'               INCORRECT KEY USED      00979200
.ZG311A21     AIF   (K'&RECTYPE LE 0).ZG311A22  OK                      00979300
&ZCVAL        SETC '&ZCVAL RECTYPE'             INCORRECT KEY USED      00979400
.ZG311A22     AIF   (K'&OFFSET LE 0).ZG311A23   OK                      00979500
&ZCVAL        SETC '&ZCVAL OFFSET'              INCORRECT KEY USED      00979600
.ZG311A23     AIF   (K'&SYMBOL LE 0).ZG311A24   OK                      00979700
&ZCVAL        SETC '&ZCVAL SYMBOL'              INCORRECT KEY USED      00979800
.ZG311A24     AIF   (K'&TCOUNT LE 0).ZG311A25   OK                      00979900
&ZCVAL        SETC '&ZCVAL TCOUNT'              INCORRECT KEY USED      00980000
.ZG311A25     AIF   (K'&NTYPE LE 0).ZG311A26    OK                      00980100
&ZCVAL        SETC '&ZCVAL NTYPE'               INCORRECT KEY USED      00980200
.ZG311A26     AIF   (K'&CULIST LE 0).ZG311A27   OK                      00980300
&ZCVAL        SETC '&ZCVAL CULIST'              INCORRECT KEY USED      00980400
.ZG311A27     AIF   (K'&ITYPE LE 0).ZG311A28    OK                      00980500
&ZCVAL        SETC '&ZCVAL ITYPE'               INCORRECT KEY USED      00980600
.ZG311A28     AIF   (K'&DLLNAME LE 0).ZG311A29  OK                      00980700
&ZCVAL        SETC '&ZCVAL DLLNAME'             INCORRECT KEY USED      00980800
.ZG311A29     AIF   (K'&INAME LE 0).ZG311A30    OK                      00980900
&ZCVAL        SETC '&ZCVAL INAME'               INCORRECT KEY USED      00981000
.ZG311A30     AIF   (K'&INTYPE LE 0).ZG311A31   OK                      00981100
&ZCVAL        SETC '&ZCVAL INTYPE'              INCORRECT KEY USED      00981200
.ZG311A31     AIF   (K'&DDNAME LE 0).ZG311A32   OK                      00981300
&ZCVAL        SETC '&ZCVAL DDNAME'              INCORRECT KEY USED      00981400
.ZG311A32     AIF   (K'&DEPTR LE 0).ZG311A33    OK                      00981500
&ZCVAL        SETC '&ZCVAL DEPTR'               INCORRECT KEY USED      00981600
.ZG311A33     AIF   (K'&MEMBER LE 0).ZG311A34   OK                      00981700
&ZCVAL        SETC '&ZCVAL MEMBER'              INCORRECT KEY USED      00981800
.ZG311A34     AIF   (K'&DCBPTR LE 0).ZG311A35   OK                      00981900
&ZCVAL        SETC '&ZCVAL DCBPTR'              INCORRECT KEY USED      00982000
.ZG311A35     AIF   (K'&EPTOKEN LE 0).ZG311A36  OK                      00982100
&ZCVAL        SETC '&ZCVAL EPTOKEN'             INCORRECT KEY USED      00982200
.ZG311A36     AIF   (K'&ATTRIB LE 0).ZG311A37   OK                      00982300
&ZCVAL        SETC '&ZCVAL ATTRIB'              INCORRECT KEY USED      00982400
.ZG311A37     AIF   (K'&ALIASES LE 0).ZG311A38  OK                      00982500
&ZCVAL        SETC '&ZCVAL ALIASES'             INCORRECT KEY USED      00982600
.ZG311A38     AIF   (K'&IMPORTS LE 0).ZG311A39  OK                      00982700
&ZCVAL        SETC '&ZCVAL IMPORTS'             INCORRECT KEY USED      00982800
.ZG311A39     AIF   (K'&EPLOC LE 0).ZG311A40    OK                      00982900
&ZCVAL        SETC '&ZCVAL EPLOC'               INCORRECT KEY USED      00983000
.ZG311A40     AIF   (K'&IDENTIFY LE 0).ZG311A41  OK                     00983100
&ZCVAL        SETC '&ZCVAL IDENTIFY'            INCORRECT KEY USED      00983200
.ZG311A41     AIF   (K'&EXTLST LE 0).ZG311A42   OK                      00983300
&ZCVAL        SETC '&ZCVAL EXTLST'              INCORRECT KEY USED      00983400
.ZG311A42     AIF   (K'&LNAME LE 0).ZG311A43    OK                      00983500
&ZCVAL        SETC '&ZCVAL LNAME'               INCORRECT KEY USED      00983600
.ZG311A43     AIF   (K'&NEWSECT LE 0).ZG311A44  OK                      00983700
&ZCVAL        SETC '&ZCVAL NEWSECT'             INCORRECT KEY USED      00983800
.ZG311A44     AIF   (K'&ENDDATA LE 0).ZG311A45  OK                      00983900
&ZCVAL        SETC '&ZCVAL ENDDATA'             INCORRECT KEY USED      00984000
.ZG311A45     AIF   (K'&MODLIB LE 0).ZG311A46   OK                      00984100
&ZCVAL        SETC '&ZCVAL MODLIB'              INCORRECT KEY USED      00984200
.ZG311A46     AIF   (K'&SNAME LE 0).ZG311A47    OK                      00984300
&ZCVAL        SETC '&ZCVAL SNAME'               INCORRECT KEY USED      00984400
.ZG311A47     AIF   (K'&REPLACE LE 0).ZG311A48  OK                      00984500
&ZCVAL        SETC '&ZCVAL REPLACE'             INCORRECT KEY USED      00984600
.ZG311A48     AIF   (K'&LIBOPT LE 0).ZG311A49   OK                      00984700
&ZCVAL        SETC '&ZCVAL LIBOPT'              INCORRECT KEY USED      00984800
.ZG311A49     AIF   (K'&OPTION LE 0).ZG311A50   OK                      00984900
&ZCVAL        SETC '&ZCVAL OPTION'              INCORRECT KEY USED      00985000
.ZG311A50     AIF   (K'&OPTVAL LE 0).ZG311A51   OK                      00985100
&ZCVAL        SETC '&ZCVAL OPTVAL'              INCORRECT KEY USED      00985200
.ZG311A51     AIF   (K'&PARMS LE 0).ZG311A52    OK                      00985300
&ZCVAL        SETC '&ZCVAL PARMS'               INCORRECT KEY USED      00985400
.ZG311A52     AIF   (K'&FILES LE 0).ZG311A53    OK                      00985500
&ZCVAL        SETC '&ZCVAL FILES'               INCORRECT KEY USED      00985600
.ZG311A53     AIF   (K'&EXITS LE 0).ZG311A54    OK                      00985700
&ZCVAL        SETC '&ZCVAL EXITS'               INCORRECT KEY USED      00985800
.ZG311A54     AIF   (K'&OPTIONS LE 0).ZG311A55  OK                      00985900
&ZCVAL        SETC '&ZCVAL OPTIONS'             INCORRECT KEY USED      00986000
.ZG311A55     AIF   (K'&ENVARS LE 0).ZG311A56   OK                      00986100
&ZCVAL        SETC '&ZCVAL ENVARS'              INCORRECT KEY USED      00986200
.ZG311A56     AIF   (K'&ORIGIN LE 0).ZG311A57   OK                      00986300
&ZCVAL        SETC '&ZCVAL ORIGIN'              INCORRECT KEY USED      00986400
.ZG311A57     AIF   (K'&REGION LE 0).ZG311A58   OK                      00986500
&ZCVAL        SETC '&ZCVAL REGION'              INCORRECT KEY USED      00986600
.ZG311A58     AIF   (K'&ZCVAL LE 0).ZG311A59    OK                      00986700
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               00986800
              AIF  (K'&ZCVAL LE 160).ZG311A59A                          00986900
&ZCVAL        SETC '&ZCVAL'(1,160)                                      00987000
&ZCVAL        SETC '&ZCVAL....'                                         00987100
.ZG311A59A    ANOP                                                      00987200
&ZMS          SETC  '"FUNC'                                             00987300
&ZMS          SETC  '&ZMS.=&FUNC"'                                      00987400
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                00987500
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                00987600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00987700
.ZG311A59     ANOP  ,                                                   00987800
.*----------------------------------------------------------------***   00987900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00988000
              AIF   (N'&WORKMOD LE 1).ZG313A    CK NUM                  00988100
&ZMS          SETC  '"WORKMOD='                                         00988200
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    00988300
&ZMS          SETC  '&ZMS "WORKMOD"'                                    00988400
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00988500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00988600
.ZG313A       ANOP  ,                                                   00988700
.*-------------------------------------------------------------------   00988800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00988900
&ZXWORKMOD    SETC  'INPUT'     SET IN/OUTPUT                           00989000
&XWORKMOD     SETC  '&WORKMOD(1)'               SET XVARIABLE           00989100
              AIF   (N'&WORKMOD GT 1).ZG313B    MULTI                   00989200
&XWORKMOD     SETC  '&WORKMOD'  SET XVARIABLE                           00989300
.ZG313B       AIF   (K'&WORKMOD(1) GT 0).ZG313C                         00989400
&ZXWORKMOD    SETC  ''          RESET IN/OUTPUT                         00989500
&ZMS          SETC  ' '                                                 00989600
&ZMS          SETC  '&ZMS "WORKMOD" KEY AND ITS'                        00989700
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00989800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00989900
.ZG313C       ANOP  ,                                                   00990000
.*-------------------------------------------------------------------   00990100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00990200
              AIF   (K'&ZXWORKMOD LE 0).ZG313R  NOT I/O                 00990300
              AIF   ('&XWORKMOD'(1,1) NE '(').ZG313R                    00990400
&ZCGPR        SETC  '&XWORKMOD'(2,K'&XWORKMOD-2)                        00990500
              AIF   ('&ZCGPR'(1,1) NE '0').ZG313P                       00990600
              AIF   (K'&ZCGPR GT 2).ZG313Q                              00990700
              AIF   ('&ZCGPR' EQ '0').ZG313Q                            00990800
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00990900
              AIF   (T'&ZCGPR NE 'N').ZG313Q    INVALID REG NAME        00991000
.ZG313P       ANOP  ,                                                   00991100
              AIF   (T'&ZCGPR NE 'N').ZG313R    NON NUMERIC             00991200
              AIF   ('&ZCGPR' LT '2').ZG313Q                            00991300
              AIF   ('&ZCGPR' LE '12').ZG313R                           00991400
.ZG313Q       ANOP  ,                                                   00991500
&ZMS          SETC  '"WORKMOD='                                         00991600
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    00991700
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00991800
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00991900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00992000
.ZG313R       ANOP  ,                                                   00992100
.*----------------------------------------------------------------***   00992200
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00992300
              AIF   (N'&SECTION LE 1).ZG316A    CK NUM                  00992400
&ZMS          SETC  '"SECTION='                                         00992500
&ZMS          SETC  '&ZMS.&SECTION"'                                    00992600
&ZMS          SETC  '&ZMS "SECTION"'                                    00992700
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00992800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00992900
.ZG316A       ANOP  ,                                                   00993000
.*-------------------------------------------------------------------   00993100
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00993200
&ZXSECTION    SETC  'INPUT'     SET IN/OUTPUT                           00993300
&XSECTION     SETC  '&SECTION(1)'               SET XVARIABLE           00993400
              AIF   (N'&SECTION GT 1).ZG316B    MULTI                   00993500
&XSECTION     SETC  '&SECTION'  SET XVARIABLE                           00993600
.ZG316B       AIF   (K'&SECTION(1) GT 0).ZG316C                         00993700
&ZXSECTION    SETC  ''          RESET IN/OUTPUT                         00993800
&ZMS          SETC  ' '                                                 00993900
&ZMS          SETC  '&ZMS "SECTION" KEY AND ITS'                        00994000
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00994100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00994200
.ZG316C       ANOP  ,                                                   00994300
.*-------------------------------------------------------------------   00994400
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00994500
              AIF   (K'&ZXSECTION LE 0).ZG316R  NOT I/O                 00994600
              AIF   ('&XSECTION'(1,1) NE '(').ZG316R                    00994700
&ZCGPR        SETC  '&XSECTION'(2,K'&XSECTION-2)                        00994800
              AIF   ('&ZCGPR'(1,1) NE '0').ZG316P                       00994900
              AIF   (K'&ZCGPR GT 2).ZG316Q                              00995000
              AIF   ('&ZCGPR' EQ '0').ZG316Q                            00995100
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00995200
              AIF   (T'&ZCGPR NE 'N').ZG316Q    INVALID REG NAME        00995300
.ZG316P       ANOP  ,                                                   00995400
              AIF   (T'&ZCGPR NE 'N').ZG316R    NON NUMERIC             00995500
              AIF   ('&ZCGPR' LT '2').ZG316Q                            00995600
              AIF   ('&ZCGPR' LE '12').ZG316R                           00995700
.ZG316Q       ANOP  ,                                                   00995800
&ZMS          SETC  '"SECTION='                                         00995900
&ZMS          SETC  '&ZMS.&SECTION"'                                    00996000
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00996100
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00996200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00996300
.ZG316R       ANOP  ,                                                   00996400
.*-------------------------------------------------------------------   00996500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00996600
.ZG318        ANOP  ,                                                   00996700
&ZTLC         SETC 'PUTD'                                               00996800
              AIF   ('&FUNC(1)' NE '&ZTLC').ZG347                       00996900
&XFUNC        SETC  'PUTD'      SET KEYWORD                             00997000
              AIF   (N'&FUNC LE 1).ZG318A       CK NUM                  00997100
&ZMS          SETC  '"FUNC='                                            00997200
&ZMS          SETC  '&ZMS.&FUNC"'                                       00997300
&ZMS          SETC  '&ZMS "FUNC"'                                       00997400
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00997500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00997600
.ZG318A       ANOP  ,                                                   00997700
.*------------------------------------------------------------------    00997800
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00997900
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             00998000
.ZG318A0      AIF   (K'&ANAME LE 0).ZG318A1     OK                      00998100
&ZCVAL        SETC '&ZCVAL ANAME'               INCORRECT KEY USED      00998200
.ZG318A1      AIF   (K'&ENAME LE 0).ZG318A2     OK                      00998300
&ZCVAL        SETC '&ZCVAL ENAME'               INCORRECT KEY USED      00998400
.ZG318A2      AIF   (K'&AMODE LE 0).ZG318A3     OK                      00998500
&ZCVAL        SETC '&ZCVAL AMODE'               INCORRECT KEY USED      00998600
.ZG318A3      AIF   (K'&ATYPE LE 0).ZG318A4     OK                      00998700
&ZCVAL        SETC '&ZCVAL ATYPE'               INCORRECT KEY USED      00998800
.ZG318A4      AIF   (K'&DNAME LE 0).ZG318A5     OK                      00998900
&ZCVAL        SETC '&ZCVAL DNAME'               INCORRECT KEY USED      00999000
.ZG318A5      AIF   (K'&BDY LE 0).ZG318A6       OK                      00999100
&ZCVAL        SETC '&ZCVAL BDY'                 INCORRECT KEY USED      00999200
.ZG318A6      AIF   (K'&CLASSL LE 0).ZG318A7    OK                      00999300
&ZCVAL        SETC '&ZCVAL CLASSL'              INCORRECT KEY USED      00999400
.ZG318A7      AIF   (K'&OLDNAME LE 0).ZG318A8   OK                      00999500
&ZCVAL        SETC '&ZCVAL OLDNAME'             INCORRECT KEY USED      00999600
.ZG318A8      AIF   (K'&NEWNAME LE 0).ZG318A9   OK                      00999700
&ZCVAL        SETC '&ZCVAL NEWNAME'             INCORRECT KEY USED      00999800
.ZG318A9      AIF   (K'&MODE LE 0).ZG318A10     OK                      00999900
&ZCVAL        SETC '&ZCVAL MODE'                INCORRECT KEY USED      01000000
.ZG318A10     AIF   (K'&CALLIB LE 0).ZG318A11   OK                      01000100
&ZCVAL        SETC '&ZCVAL CALLIB'              INCORRECT KEY USED      01000200
.ZG318A11     AIF   (K'&PATHNAME LE 0).ZG318A12  OK                     01000300
&ZCVAL        SETC '&ZCVAL PATHNAME'            INCORRECT KEY USED      01000400
.ZG318A12     AIF   (K'&DIALOG LE 0).ZG318A13   OK                      01000500
&ZCVAL        SETC '&ZCVAL DIALOG'              INCORRECT KEY USED      01000600
.ZG318A13     AIF   (K'&INTENT LE 0).ZG318A14   OK                      01000700
&ZCVAL        SETC '&ZCVAL INTENT'              INCORRECT KEY USED      01000800
.ZG318A14     AIF   (K'&PROTECT LE 0).ZG318A15  OK                      01000900
&ZCVAL        SETC '&ZCVAL PROTECT'             INCORRECT KEY USED      01001000
.ZG318A15     AIF   (K'&RENAMEL LE 0).ZG318A16  OK                      01001100
&ZCVAL        SETC '&ZCVAL RENAMEL'             INCORRECT KEY USED      01001200
.ZG318A16     AIF   (K'&RELOC LE 0).ZG318A17    OK                      01001300
&ZCVAL        SETC '&ZCVAL RELOC'               INCORRECT KEY USED      01001400
.ZG318A17     AIF   (K'&RECTYPE LE 0).ZG318A18  OK                      01001500
&ZCVAL        SETC '&ZCVAL RECTYPE'             INCORRECT KEY USED      01001600
.ZG318A18     AIF   (K'&OFFSET LE 0).ZG318A19   OK                      01001700
&ZCVAL        SETC '&ZCVAL OFFSET'              INCORRECT KEY USED      01001800
.ZG318A19     AIF   (K'&SYMBOL LE 0).ZG318A20   OK                      01001900
&ZCVAL        SETC '&ZCVAL SYMBOL'              INCORRECT KEY USED      01002000
.ZG318A20     AIF   (K'&TCOUNT LE 0).ZG318A21   OK                      01002100
&ZCVAL        SETC '&ZCVAL TCOUNT'              INCORRECT KEY USED      01002200
.ZG318A21     AIF   (K'&NTYPE LE 0).ZG318A22    OK                      01002300
&ZCVAL        SETC '&ZCVAL NTYPE'               INCORRECT KEY USED      01002400
.ZG318A22     AIF   (K'&CULIST LE 0).ZG318A23   OK                      01002500
&ZCVAL        SETC '&ZCVAL CULIST'              INCORRECT KEY USED      01002600
.ZG318A23     AIF   (K'&ITYPE LE 0).ZG318A24    OK                      01002700
&ZCVAL        SETC '&ZCVAL ITYPE'               INCORRECT KEY USED      01002800
.ZG318A24     AIF   (K'&DLLNAME LE 0).ZG318A25  OK                      01002900
&ZCVAL        SETC '&ZCVAL DLLNAME'             INCORRECT KEY USED      01003000
.ZG318A25     AIF   (K'&INAME LE 0).ZG318A26    OK                      01003100
&ZCVAL        SETC '&ZCVAL INAME'               INCORRECT KEY USED      01003200
.ZG318A26     AIF   (K'&INTYPE LE 0).ZG318A27   OK                      01003300
&ZCVAL        SETC '&ZCVAL INTYPE'              INCORRECT KEY USED      01003400
.ZG318A27     AIF   (K'&DDNAME LE 0).ZG318A28   OK                      01003500
&ZCVAL        SETC '&ZCVAL DDNAME'              INCORRECT KEY USED      01003600
.ZG318A28     AIF   (K'&DEPTR LE 0).ZG318A29    OK                      01003700
&ZCVAL        SETC '&ZCVAL DEPTR'               INCORRECT KEY USED      01003800
.ZG318A29     AIF   (K'&MEMBER LE 0).ZG318A30   OK                      01003900
&ZCVAL        SETC '&ZCVAL MEMBER'              INCORRECT KEY USED      01004000
.ZG318A30     AIF   (K'&DCBPTR LE 0).ZG318A31   OK                      01004100
&ZCVAL        SETC '&ZCVAL DCBPTR'              INCORRECT KEY USED      01004200
.ZG318A31     AIF   (K'&EPTOKEN LE 0).ZG318A32  OK                      01004300
&ZCVAL        SETC '&ZCVAL EPTOKEN'             INCORRECT KEY USED      01004400
.ZG318A32     AIF   (K'&ATTRIB LE 0).ZG318A33   OK                      01004500
&ZCVAL        SETC '&ZCVAL ATTRIB'              INCORRECT KEY USED      01004600
.ZG318A33     AIF   (K'&ALIASES LE 0).ZG318A34  OK                      01004700
&ZCVAL        SETC '&ZCVAL ALIASES'             INCORRECT KEY USED      01004800
.ZG318A34     AIF   (K'&IMPORTS LE 0).ZG318A35  OK                      01004900
&ZCVAL        SETC '&ZCVAL IMPORTS'             INCORRECT KEY USED      01005000
.ZG318A35     AIF   (K'&EPLOC LE 0).ZG318A36    OK                      01005100
&ZCVAL        SETC '&ZCVAL EPLOC'               INCORRECT KEY USED      01005200
.ZG318A36     AIF   (K'&IDENTIFY LE 0).ZG318A37  OK                     01005300
&ZCVAL        SETC '&ZCVAL IDENTIFY'            INCORRECT KEY USED      01005400
.ZG318A37     AIF   (K'&EXTLST LE 0).ZG318A38   OK                      01005500
&ZCVAL        SETC '&ZCVAL EXTLST'              INCORRECT KEY USED      01005600
.ZG318A38     AIF   (K'&LNAME LE 0).ZG318A39    OK                      01005700
&ZCVAL        SETC '&ZCVAL LNAME'               INCORRECT KEY USED      01005800
.ZG318A39     AIF   (K'&MODLIB LE 0).ZG318A40   OK                      01005900
&ZCVAL        SETC '&ZCVAL MODLIB'              INCORRECT KEY USED      01006000
.ZG318A40     AIF   (K'&SNAME LE 0).ZG318A41    OK                      01006100
&ZCVAL        SETC '&ZCVAL SNAME'               INCORRECT KEY USED      01006200
.ZG318A41     AIF   (K'&REPLACE LE 0).ZG318A42  OK                      01006300
&ZCVAL        SETC '&ZCVAL REPLACE'             INCORRECT KEY USED      01006400
.ZG318A42     AIF   (K'&LIBOPT LE 0).ZG318A43   OK                      01006500
&ZCVAL        SETC '&ZCVAL LIBOPT'              INCORRECT KEY USED      01006600
.ZG318A43     AIF   (K'&OPTION LE 0).ZG318A44   OK                      01006700
&ZCVAL        SETC '&ZCVAL OPTION'              INCORRECT KEY USED      01006800
.ZG318A44     AIF   (K'&OPTVAL LE 0).ZG318A45   OK                      01006900
&ZCVAL        SETC '&ZCVAL OPTVAL'              INCORRECT KEY USED      01007000
.ZG318A45     AIF   (K'&PARMS LE 0).ZG318A46    OK                      01007100
&ZCVAL        SETC '&ZCVAL PARMS'               INCORRECT KEY USED      01007200
.ZG318A46     AIF   (K'&FILES LE 0).ZG318A47    OK                      01007300
&ZCVAL        SETC '&ZCVAL FILES'               INCORRECT KEY USED      01007400
.ZG318A47     AIF   (K'&EXITS LE 0).ZG318A48    OK                      01007500
&ZCVAL        SETC '&ZCVAL EXITS'               INCORRECT KEY USED      01007600
.ZG318A48     AIF   (K'&OPTIONS LE 0).ZG318A49  OK                      01007700
&ZCVAL        SETC '&ZCVAL OPTIONS'             INCORRECT KEY USED      01007800
.ZG318A49     AIF   (K'&ENVARS LE 0).ZG318A50   OK                      01007900
&ZCVAL        SETC '&ZCVAL ENVARS'              INCORRECT KEY USED      01008000
.ZG318A50     AIF   (K'&ORIGIN LE 0).ZG318A51   OK                      01008100
&ZCVAL        SETC '&ZCVAL ORIGIN'              INCORRECT KEY USED      01008200
.ZG318A51     AIF   (K'&REGION LE 0).ZG318A52   OK                      01008300
&ZCVAL        SETC '&ZCVAL REGION'              INCORRECT KEY USED      01008400
.ZG318A52     AIF   (K'&ZCVAL LE 0).ZG318A53    OK                      01008500
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               01008600
              AIF  (K'&ZCVAL LE 160).ZG318A53A                          01008700
&ZCVAL        SETC '&ZCVAL'(1,160)                                      01008800
&ZCVAL        SETC '&ZCVAL....'                                         01008900
.ZG318A53A    ANOP                                                      01009000
&ZMS          SETC  '"FUNC'                                             01009100
&ZMS          SETC  '&ZMS.=&FUNC"'                                      01009200
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                01009300
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                01009400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01009500
.ZG318A53     ANOP  ,                                                   01009600
.*----------------------------------------------------------------***   01009700
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01009800
              AIF   (N'&WORKMOD LE 1).ZG320A    CK NUM                  01009900
&ZMS          SETC  '"WORKMOD='                                         01010000
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    01010100
&ZMS          SETC  '&ZMS "WORKMOD"'                                    01010200
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01010300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01010400
.ZG320A       ANOP  ,                                                   01010500
.*-------------------------------------------------------------------   01010600
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01010700
&ZXWORKMOD    SETC  'INPUT'     SET IN/OUTPUT                           01010800
&XWORKMOD     SETC  '&WORKMOD(1)'               SET XVARIABLE           01010900
              AIF   (N'&WORKMOD GT 1).ZG320B    MULTI                   01011000
&XWORKMOD     SETC  '&WORKMOD'  SET XVARIABLE                           01011100
.ZG320B       AIF   (K'&WORKMOD(1) GT 0).ZG320C                         01011200
&ZXWORKMOD    SETC  ''          RESET IN/OUTPUT                         01011300
&ZMS          SETC  ' '                                                 01011400
&ZMS          SETC  '&ZMS "WORKMOD" KEY AND ITS'                        01011500
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    01011600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01011700
.ZG320C       ANOP  ,                                                   01011800
.*-------------------------------------------------------------------   01011900
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01012000
              AIF   (K'&ZXWORKMOD LE 0).ZG320R  NOT I/O                 01012100
              AIF   ('&XWORKMOD'(1,1) NE '(').ZG320R                    01012200
&ZCGPR        SETC  '&XWORKMOD'(2,K'&XWORKMOD-2)                        01012300
              AIF   ('&ZCGPR'(1,1) NE '0').ZG320P                       01012400
              AIF   (K'&ZCGPR GT 2).ZG320Q                              01012500
              AIF   ('&ZCGPR' EQ '0').ZG320Q                            01012600
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       01012700
              AIF   (T'&ZCGPR NE 'N').ZG320Q    INVALID REG NAME        01012800
.ZG320P       ANOP  ,                                                   01012900
              AIF   (T'&ZCGPR NE 'N').ZG320R    NON NUMERIC             01013000
              AIF   ('&ZCGPR' LT '2').ZG320Q                            01013100
              AIF   ('&ZCGPR' LE '12').ZG320R                           01013200
.ZG320Q       ANOP  ,                                                   01013300
&ZMS          SETC  '"WORKMOD='                                         01013400
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    01013500
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           01013600
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    01013700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01013800
.ZG320R       ANOP  ,                                                   01013900
.*----------------------------------------------------------------***   01014000
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01014100
              AIF   (N'&CLASS LE 1).ZG323A      CK NUM                  01014200
&ZMS          SETC  '"CLASS='                                           01014300
&ZMS          SETC  '&ZMS.&CLASS"'                                      01014400
&ZMS          SETC  '&ZMS "CLASS"'                                      01014500
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01014600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01014700
.ZG323A       ANOP  ,                                                   01014800
.*-------------------------------------------------------------------   01014900
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01015000
&ZXCLASS      SETC  'INPUT'     SET IN/OUTPUT                           01015100
&XCLASS       SETC  '&CLASS(1)'                 SET XVARIABLE           01015200
              AIF   (N'&CLASS GT 1).ZG323B      MULTI                   01015300
&XCLASS       SETC  '&CLASS'    SET XVARIABLE                           01015400
.ZG323B       AIF   (K'&CLASS(1) GT 0).ZG323C                           01015500
&ZXCLASS      SETC  ''          RESET IN/OUTPUT                         01015600
&ZMS          SETC  ' '                                                 01015700
&ZMS          SETC  '&ZMS "CLASS" KEY AND ITS'                          01015800
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    01015900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01016000
.ZG323C       ANOP  ,                                                   01016100
.*-------------------------------------------------------------------   01016200
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01016300
              AIF   (K'&ZXCLASS LE 0).ZG323R    NOT I/O                 01016400
              AIF   ('&XCLASS'(1,1) NE '(').ZG323R                      01016500
&ZCGPR        SETC  '&XCLASS'(2,K'&XCLASS-2)                            01016600
              AIF   ('&ZCGPR'(1,1) NE '0').ZG323P                       01016700
              AIF   (K'&ZCGPR GT 2).ZG323Q                              01016800
              AIF   ('&ZCGPR' EQ '0').ZG323Q                            01016900
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       01017000
              AIF   (T'&ZCGPR NE 'N').ZG323Q    INVALID REG NAME        01017100
.ZG323P       ANOP  ,                                                   01017200
              AIF   (T'&ZCGPR NE 'N').ZG323R    NON NUMERIC             01017300
              AIF   ('&ZCGPR' LT '2').ZG323Q                            01017400
              AIF   ('&ZCGPR' LE '12').ZG323R                           01017500
.ZG323Q       ANOP  ,                                                   01017600
&ZMS          SETC  '"CLASS='                                           01017700
&ZMS          SETC  '&ZMS.&CLASS"'                                      01017800
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           01017900
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    01018000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01018100
.ZG323R       ANOP  ,                                                   01018200
.*----------------------------------------------------------------***   01018300
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01018400
              AIF   (N'&SECTION LE 1).ZG326A    CK NUM                  01018500
&ZMS          SETC  '"SECTION='                                         01018600
&ZMS          SETC  '&ZMS.&SECTION"'                                    01018700
&ZMS          SETC  '&ZMS "SECTION"'                                    01018800
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01018900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01019000
.ZG326A       ANOP  ,                                                   01019100
.*-------------------------------------------------------------------   01019200
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01019300
&ZXSECTION    SETC  'INPUT'     SET IN/OUTPUT                           01019400
&XSECTION     SETC  '0'                                                 01019500
              AIF   (K'&SECTION(1) LE 0).ZG326B  PARM                   01019600
&XSECTION     SETC  '&SECTION(1)'               SET XVARIABLE           01019700
              AIF   (N'&SECTION GT 1).ZG326B    MULTI                   01019800
&XSECTION     SETC  '&SECTION'  SET XVARIABLE                           01019900
.ZG326B       ANOP  ,                                                   01020000
.*-------------------------------------------------------------------   01020100
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01020200
              AIF   (K'&ZXSECTION LE 0).ZG326R  NOT I/O                 01020300
         AIF   ('&XSECTION' EQ '0').ZG326R                              01020400
              AIF   ('&XSECTION'(1,1) NE '(').ZG326R                    01020500
&ZCGPR        SETC  '&XSECTION'(2,K'&XSECTION-2)                        01020600
              AIF   ('&ZCGPR'(1,1) NE '0').ZG326P                       01020700
              AIF   (K'&ZCGPR GT 2).ZG326Q                              01020800
              AIF   ('&ZCGPR' EQ '0').ZG326Q                            01020900
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       01021000
              AIF   (T'&ZCGPR NE 'N').ZG326Q    INVALID REG NAME        01021100
.ZG326P       ANOP  ,                                                   01021200
              AIF   (T'&ZCGPR NE 'N').ZG326R    NON NUMERIC             01021300
              AIF   ('&ZCGPR' LT '2').ZG326Q                            01021400
              AIF   ('&ZCGPR' LE '12').ZG326R                           01021500
.ZG326Q       ANOP  ,                                                   01021600
&ZMS          SETC  '"SECTION='                                         01021700
&ZMS          SETC  '&ZMS.&SECTION"'                                    01021800
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           01021900
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    01022000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01022100
.ZG326R       ANOP  ,                                                   01022200
.*----------------------------------------------------------------***   01022300
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01022400
              AIF   (N'&AREA LE 1).ZG329A       CK NUM                  01022500
&ZMS          SETC  '"AREA='                                            01022600
&ZMS          SETC  '&ZMS.&AREA"'                                       01022700
&ZMS          SETC  '&ZMS "AREA"'                                       01022800
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01022900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01023000
.ZG329A       ANOP  ,                                                   01023100
.*-------------------------------------------------------------------   01023200
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01023300
&ZXAREA       SETC  'INPUT'     SET IN/OUTPUT                           01023400
&XAREA        SETC  '0'                                                 01023500
              AIF   (K'&AREA(1) LE 0).ZG329B    PARM                    01023600
&XAREA        SETC  '&AREA(1)'  SET XVARIABLE                           01023700
              AIF   (N'&AREA GT 1).ZG329B       MULTI                   01023800
&XAREA        SETC  '&AREA'     SET XVARIABLE                           01023900
.ZG329B       ANOP  ,                                                   01024000
.*-------------------------------------------------------------------   01024100
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01024200
              AIF   (K'&ZXAREA LE 0).ZG329R     NOT I/O                 01024300
         AIF   ('&XAREA' EQ '0').ZG329R                                 01024400
              AIF   ('&XAREA'(1,1) NE '(').ZG329R                       01024500
&ZCGPR        SETC  '&XAREA'(2,K'&XAREA-2)                              01024600
              AIF   ('&ZCGPR'(1,1) NE '0').ZG329P                       01024700
              AIF   (K'&ZCGPR GT 2).ZG329Q                              01024800
              AIF   ('&ZCGPR' EQ '0').ZG329Q                            01024900
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       01025000
              AIF   (T'&ZCGPR NE 'N').ZG329Q    INVALID REG NAME        01025100
.ZG329P       ANOP  ,                                                   01025200
              AIF   (T'&ZCGPR NE 'N').ZG329R    NON NUMERIC             01025300
              AIF   ('&ZCGPR' LT '2').ZG329Q                            01025400
              AIF   ('&ZCGPR' LE '12').ZG329R                           01025500
.ZG329Q       ANOP  ,                                                   01025600
&ZMS          SETC  '"AREA='                                            01025700
&ZMS          SETC  '&ZMS.&AREA"'                                       01025800
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           01025900
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    01026000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01026100
.ZG329R       ANOP  ,                                                   01026200
.*----------------------------------------------------------------***   01026300
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 01026400
              AIF   (N'&COUNT LE 1).ZG331A      CK NUM                  01026500
&ZMS          SETC  '"COUNT='                                           01026600
&ZMS          SETC  '&ZMS.&COUNT"'                                      01026700
&ZMS          SETC  '&ZMS "COUNT"'                                      01026800
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01026900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01027000
.ZG331A       ANOP  ,                                                   01027100
.*-------------------------------------------------------------------   01027200
.***AG.KXVAR09 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     01027300
&ZXCOUNT      SETC  'INPUT'     SET IN/OUTPUT                           01027400
&XCOUNT       SETC  '&COUNT(1)'                 SET XVARIABLE           01027500
              AIF   (N'&COUNT GT 1).ZG331B      MULTI                   01027600
&XCOUNT       SETC  '&COUNT'    SET XVARIABLE                           01027700
.ZG331B       AIF   (K'&AREA(1) GT 0).ZG331C    KEY                     01027800
              AIF   (K'&COUNT(1) LE 0).ZG331D   PARM                    01027900
&ZMS          SETC  '"COUNT'                                            01028000
&ZMS          SETC  '&ZMS.=&COUNT"'                                     01028100
&ZMS          SETC  '&ZMS CAN ONLY BE SPECIFIED IF'                     01028200
&ZMS          SETC  '&ZMS '                                             01028300
&ZMS          SETC  '&ZMS "AREA"'                                       01028400
              MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                        01028500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01028600
              AGO   .ZG331E                                             01028700
.*                                                                      01028800
.ZG331C       AIF   (K'&COUNT(1) GT 0).ZG331E   PARM                    01028900
&ZXCOUNT      SETC  ''          RESET IN/OUTPUT                         01029000
&ZMS          SETC  'WHEN "AREA" IS SPECIFIED'                          01029100
&ZMS          SETC  '&ZMS , "COUNT" KEY AND ITS'                        01029200
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    01029300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01029400
.ZG331D       ANOP  ,                                                   01029500
&XCOUNT       SETC  '0'         SET DEFAULT                             01029600
.ZG331E       ANOP  ,                                                   01029700
.*-------------------------------------------------------------------   01029800
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                01029900
              AIF   (K'&ZXCOUNT LE 0).ZG331R    NOT I/O                 01030000
              AIF   ('&XCOUNT'(1,1) NE '(').ZG331R                      01030100
&ZCGPR        SETC  '&XCOUNT'(2,K'&XCOUNT-2)                            01030200
              AIF   ('&ZCGPR'(1,1) NE '0').ZG331P                       01030300
              AIF   (K'&ZCGPR GT 2).ZG331Q                              01030400
              AIF   ('&ZCGPR' EQ '0').ZG331Q                            01030500
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       01030600
              AIF   (T'&ZCGPR NE 'N').ZG331Q    INVALID REG NAME        01030700
.ZG331P       ANOP  ,                                                   01030800
              AIF   (T'&ZCGPR NE 'N').ZG331R    NON NUMERIC             01030900
              AIF   ('&ZCGPR' LT '2').ZG331Q                            01031000
              AIF   ('&ZCGPR' LE '12').ZG331R                           01031100
.ZG331Q       ANOP  ,                                                   01031200
&ZMS          SETC  '"COUNT='                                           01031300
&ZMS          SETC  '&ZMS.&COUNT"'                                      01031400
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           01031500
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    01031600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01031700
.ZG331R       ANOP  ,                                                   01031800
.*----------------------------------------------------------------***   01031900
.***AG.KXVAR05 NAME, OPT INOUT, KEYS -XVARIABLE KEY                     01032000
              AIF   (N'&CURSOR LE 1).ZG335A     CK NUM                  01032100
&ZMS          SETC  '"CURSOR='                                          01032200
&ZMS          SETC  '&ZMS.&CURSOR"'                                     01032300
&ZMS          SETC  '&ZMS "CURSOR"'                                     01032400
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01032500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01032600
.ZG335A       ANOP  ,                                                   01032700
.*-------------------------------------------------------------------   01032800
.***AG.KXVAR13 NAME, OPT INOUT, KEYS -XVARIABLE                         01032900
&ZXCURSOR     SETC  'INOUT'     SET IN/OUTPUT                           01033000
&XCURSOR      SETC  '-1'                                                01033100
              AIF   (K'&CURSOR(1) LE 0).ZG335B  PARM                    01033200
&XCURSOR      SETC  '&CURSOR(1)'                SET XVARIABLE           01033300
              AIF   (N'&CURSOR GT 1).ZG335B     MULTI                   01033400
&XCURSOR      SETC  '&CURSOR'   SET XVARIABLE                           01033500
.ZG335B       ANOP  ,                                                   01033600
.*-------------------------------------------------------------------   01033700
.***AG.KCK02 NAME, OPT INOUT, KEYS -GPR OUT OF RANGE                    01033800
              AIF   (K'&ZXCURSOR LE 0).ZG335R   NOT I/O                 01033900
              AIF   ('&XCURSOR'(1,1) NE '(').ZG335R                     01034000
&ZCGPR        SETC  '&XCURSOR'(2,K'&XCURSOR-2)                          01034100
              AIF   ('&ZCGPR'(1,1) NE '0').ZG335P                       01034200
              AIF   (K'&ZCGPR GT 2).ZG335Q                              01034300
              AIF   ('&ZCGPR' EQ '0').ZG335Q                            01034400
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       01034500
              AIF   (T'&ZCGPR NE 'N').ZG335Q    INVALID REG NAME        01034600
.ZG335P       ANOP  ,                                                   01034700
              AIF   (T'&ZCGPR NE 'N').ZG335R    NON NUMERIC             01034800
              AIF   ('&ZCGPR' LT '2').ZG335Q                            01034900
              AIF   ('&ZCGPR' LE '12').ZG335R                           01035000
.ZG335Q       ANOP  ,                                                   01035100
&ZMS          SETC  '"CURSOR='                                          01035200
&ZMS          SETC  '&ZMS.&CURSOR"'                                     01035300
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           01035400
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    01035500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01035600
.ZG335R       ANOP  ,                                                   01035700
.*----------------------------------------------------------------***   01035800
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01035900
              AIF   (N'&NEWSECT LE 1).ZG338A    CK NUM                  01036000
&ZMS          SETC  '"NEWSECT='                                         01036100
&ZMS          SETC  '&ZMS.&NEWSECT"'                                    01036200
&ZMS          SETC  '&ZMS "NEWSECT"'                                    01036300
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01036400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01036500
.ZG338A       ANOP  ,                                                   01036600
.*-------------------------------------------------------------------   01036700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01036800
&XNEWSECT     SETC  ''          INITIALIZE XVARIABLE                    01036900
.ZG339A   AIF   ('&NEWSECT(1)' NE 'N').ZG340A                           01037000
&XNEWSECT     SETC  'N'         SET KEYWORD                             01037100
.*-------------------------------------------------------------------   01037200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01037300
.ZG340A   AIF   ('&NEWSECT(1)' NE 'Y').ZG341A                           01037400
&XNEWSECT     SETC  'Y'         SET KEYWORD                             01037500
.*-------------------------------------------------------------------   01037600
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01037700
.ZG341A       AIF   (K'&XNEWSECT GT 0).ZG341C   KEYWORD                 01037800
              AIF   (K'&NEWSECT(1) LE 0).ZG341B                         01037900
&ZMS          SETC  '"NEWSECT='                                         01038000
&ZMS          SETC  '&ZMS.&NEWSECT"'                                    01038100
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           01038200
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 01038300
&ZMS          SETC  '&ZMS "N"'                                          01038400
&ZMS          SETC  '&ZMS OR "Y".'                                      01038500
              MNOTE 8,' &ZMS '                                          01038600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01038700
.ZG341B       ANOP  ,                                                   01038800
&XNEWSECT     SETC  'N'         SET DEFAULT KEYWORD                     01038900
.ZG341C       ANOP  ,                                                   01039000
&ZXNEWSECT    SETC  'INPUT'     SET IN/OUTPUT                           01039100
.*----------------------------------------------------------------***   01039200
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01039300
              AIF   (N'&ENDDATA LE 1).ZG343A    CK NUM                  01039400
&ZMS          SETC  '"ENDDATA='                                         01039500
&ZMS          SETC  '&ZMS.&ENDDATA"'                                    01039600
&ZMS          SETC  '&ZMS "ENDDATA"'                                    01039700
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01039800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01039900
.ZG343A       ANOP  ,                                                   01040000
.*-------------------------------------------------------------------   01040100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01040200
&XENDDATA     SETC  ''          INITIALIZE XVARIABLE                    01040300
.ZG344A   AIF   ('&ENDDATA(1)' NE 'N').ZG345A                           01040400
&XENDDATA     SETC  'N'         SET KEYWORD                             01040500
.*-------------------------------------------------------------------   01040600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01040700
.ZG345A   AIF   ('&ENDDATA(1)' NE 'Y').ZG346A                           01040800
&XENDDATA     SETC  'Y'         SET KEYWORD                             01040900
.*-------------------------------------------------------------------   01041000
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01041100
.ZG346A       AIF   (K'&XENDDATA GT 0).ZG346C   KEYWORD                 01041200
              AIF   (K'&ENDDATA(1) LE 0).ZG346B                         01041300
&ZMS          SETC  '"ENDDATA='                                         01041400
&ZMS          SETC  '&ZMS.&ENDDATA"'                                    01041500
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           01041600
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 01041700
&ZMS          SETC  '&ZMS "N"'                                          01041800
&ZMS          SETC  '&ZMS OR "Y".'                                      01041900
              MNOTE 8,' &ZMS '                                          01042000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01042100
.ZG346B       ANOP  ,                                                   01042200
&XENDDATA     SETC  'N'         SET DEFAULT KEYWORD                     01042300
.ZG346C       ANOP  ,                                                   01042400
&ZXENDDATA    SETC  'INPUT'     SET IN/OUTPUT                           01042500
.*-------------------------------------------------------------------   01042600
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01042700
.ZG347        ANOP  ,                                                   01042800
&ZTLC         SETC 'RENAME'                                             01042900
              AIF   ('&FUNC(1)' NE '&ZTLC').ZG357                       01043000
&XFUNC        SETC  'RENAME'    SET KEYWORD                             01043100
              AIF   (N'&FUNC LE 1).ZG347A       CK NUM                  01043200
&ZMS          SETC  '"FUNC='                                            01043300
&ZMS          SETC  '&ZMS.&FUNC"'                                       01043400
&ZMS          SETC  '&ZMS "FUNC"'                                       01043500
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01043600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01043700
.ZG347A       ANOP  ,                                                   01043800
.*------------------------------------------------------------------    01043900
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01044000
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             01044100
.ZG347A0      AIF   (K'&ANAME LE 0).ZG347A1     OK                      01044200
&ZCVAL        SETC '&ZCVAL ANAME'               INCORRECT KEY USED      01044300
.ZG347A1      AIF   (K'&ENAME LE 0).ZG347A2     OK                      01044400
&ZCVAL        SETC '&ZCVAL ENAME'               INCORRECT KEY USED      01044500
.ZG347A2      AIF   (K'&AMODE LE 0).ZG347A3     OK                      01044600
&ZCVAL        SETC '&ZCVAL AMODE'               INCORRECT KEY USED      01044700
.ZG347A3      AIF   (K'&ATYPE LE 0).ZG347A4     OK                      01044800
&ZCVAL        SETC '&ZCVAL ATYPE'               INCORRECT KEY USED      01044900
.ZG347A4      AIF   (K'&DNAME LE 0).ZG347A5     OK                      01045000
&ZCVAL        SETC '&ZCVAL DNAME'               INCORRECT KEY USED      01045100
.ZG347A5      AIF   (K'&SECTION LE 0).ZG347A6   OK                      01045200
&ZCVAL        SETC '&ZCVAL SECTION'             INCORRECT KEY USED      01045300
.ZG347A6      AIF   (K'&BDY LE 0).ZG347A7       OK                      01045400
&ZCVAL        SETC '&ZCVAL BDY'                 INCORRECT KEY USED      01045500
.ZG347A7      AIF   (K'&CLASSL LE 0).ZG347A8    OK                      01045600
&ZCVAL        SETC '&ZCVAL CLASSL'              INCORRECT KEY USED      01045700
.ZG347A8      AIF   (K'&COUNT LE 0).ZG347A9     OK                      01045800
&ZCVAL        SETC '&ZCVAL COUNT'               INCORRECT KEY USED      01045900
.ZG347A9      AIF   (K'&MODE LE 0).ZG347A10     OK                      01046000
&ZCVAL        SETC '&ZCVAL MODE'                INCORRECT KEY USED      01046100
.ZG347A10     AIF   (K'&CLASS LE 0).ZG347A11    OK                      01046200
&ZCVAL        SETC '&ZCVAL CLASS'               INCORRECT KEY USED      01046300
.ZG347A11     AIF   (K'&CALLIB LE 0).ZG347A12   OK                      01046400
&ZCVAL        SETC '&ZCVAL CALLIB'              INCORRECT KEY USED      01046500
.ZG347A12     AIF   (K'&PATHNAME LE 0).ZG347A13  OK                     01046600
&ZCVAL        SETC '&ZCVAL PATHNAME'            INCORRECT KEY USED      01046700
.ZG347A13     AIF   (K'&DIALOG LE 0).ZG347A14   OK                      01046800
&ZCVAL        SETC '&ZCVAL DIALOG'              INCORRECT KEY USED      01046900
.ZG347A14     AIF   (K'&INTENT LE 0).ZG347A15   OK                      01047000
&ZCVAL        SETC '&ZCVAL INTENT'              INCORRECT KEY USED      01047100
.ZG347A15     AIF   (K'&PROTECT LE 0).ZG347A16  OK                      01047200
&ZCVAL        SETC '&ZCVAL PROTECT'             INCORRECT KEY USED      01047300
.ZG347A16     AIF   (K'&RENAMEL LE 0).ZG347A17  OK                      01047400
&ZCVAL        SETC '&ZCVAL RENAMEL'             INCORRECT KEY USED      01047500
.ZG347A17     AIF   (K'&AREA LE 0).ZG347A18     OK                      01047600
&ZCVAL        SETC '&ZCVAL AREA'                INCORRECT KEY USED      01047700
.ZG347A18     AIF   (K'&CURSOR LE 0).ZG347A19   OK                      01047800
&ZCVAL        SETC '&ZCVAL CURSOR'              INCORRECT KEY USED      01047900
.ZG347A19     AIF   (K'&RELOC LE 0).ZG347A20    OK                      01048000
&ZCVAL        SETC '&ZCVAL RELOC'               INCORRECT KEY USED      01048100
.ZG347A20     AIF   (K'&RECTYPE LE 0).ZG347A21  OK                      01048200
&ZCVAL        SETC '&ZCVAL RECTYPE'             INCORRECT KEY USED      01048300
.ZG347A21     AIF   (K'&OFFSET LE 0).ZG347A22   OK                      01048400
&ZCVAL        SETC '&ZCVAL OFFSET'              INCORRECT KEY USED      01048500
.ZG347A22     AIF   (K'&SYMBOL LE 0).ZG347A23   OK                      01048600
&ZCVAL        SETC '&ZCVAL SYMBOL'              INCORRECT KEY USED      01048700
.ZG347A23     AIF   (K'&TCOUNT LE 0).ZG347A24   OK                      01048800
&ZCVAL        SETC '&ZCVAL TCOUNT'              INCORRECT KEY USED      01048900
.ZG347A24     AIF   (K'&NTYPE LE 0).ZG347A25    OK                      01049000
&ZCVAL        SETC '&ZCVAL NTYPE'               INCORRECT KEY USED      01049100
.ZG347A25     AIF   (K'&CULIST LE 0).ZG347A26   OK                      01049200
&ZCVAL        SETC '&ZCVAL CULIST'              INCORRECT KEY USED      01049300
.ZG347A26     AIF   (K'&ITYPE LE 0).ZG347A27    OK                      01049400
&ZCVAL        SETC '&ZCVAL ITYPE'               INCORRECT KEY USED      01049500
.ZG347A27     AIF   (K'&DLLNAME LE 0).ZG347A28  OK                      01049600
&ZCVAL        SETC '&ZCVAL DLLNAME'             INCORRECT KEY USED      01049700
.ZG347A28     AIF   (K'&INAME LE 0).ZG347A29    OK                      01049800
&ZCVAL        SETC '&ZCVAL INAME'               INCORRECT KEY USED      01049900
.ZG347A29     AIF   (K'&INTYPE LE 0).ZG347A30   OK                      01050000
&ZCVAL        SETC '&ZCVAL INTYPE'              INCORRECT KEY USED      01050100
.ZG347A30     AIF   (K'&DDNAME LE 0).ZG347A31   OK                      01050200
&ZCVAL        SETC '&ZCVAL DDNAME'              INCORRECT KEY USED      01050300
.ZG347A31     AIF   (K'&DEPTR LE 0).ZG347A32    OK                      01050400
&ZCVAL        SETC '&ZCVAL DEPTR'               INCORRECT KEY USED      01050500
.ZG347A32     AIF   (K'&MEMBER LE 0).ZG347A33   OK                      01050600
&ZCVAL        SETC '&ZCVAL MEMBER'              INCORRECT KEY USED      01050700
.ZG347A33     AIF   (K'&DCBPTR LE 0).ZG347A34   OK                      01050800
&ZCVAL        SETC '&ZCVAL DCBPTR'              INCORRECT KEY USED      01050900
.ZG347A34     AIF   (K'&EPTOKEN LE 0).ZG347A35  OK                      01051000
&ZCVAL        SETC '&ZCVAL EPTOKEN'             INCORRECT KEY USED      01051100
.ZG347A35     AIF   (K'&ATTRIB LE 0).ZG347A36   OK                      01051200
&ZCVAL        SETC '&ZCVAL ATTRIB'              INCORRECT KEY USED      01051300
.ZG347A36     AIF   (K'&ALIASES LE 0).ZG347A37  OK                      01051400
&ZCVAL        SETC '&ZCVAL ALIASES'             INCORRECT KEY USED      01051500
.ZG347A37     AIF   (K'&IMPORTS LE 0).ZG347A38  OK                      01051600
&ZCVAL        SETC '&ZCVAL IMPORTS'             INCORRECT KEY USED      01051700
.ZG347A38     AIF   (K'&EPLOC LE 0).ZG347A39    OK                      01051800
&ZCVAL        SETC '&ZCVAL EPLOC'               INCORRECT KEY USED      01051900
.ZG347A39     AIF   (K'&IDENTIFY LE 0).ZG347A40  OK                     01052000
&ZCVAL        SETC '&ZCVAL IDENTIFY'            INCORRECT KEY USED      01052100
.ZG347A40     AIF   (K'&EXTLST LE 0).ZG347A41   OK                      01052200
&ZCVAL        SETC '&ZCVAL EXTLST'              INCORRECT KEY USED      01052300
.ZG347A41     AIF   (K'&LNAME LE 0).ZG347A42    OK                      01052400
&ZCVAL        SETC '&ZCVAL LNAME'               INCORRECT KEY USED      01052500
.ZG347A42     AIF   (K'&NEWSECT LE 0).ZG347A43  OK                      01052600
&ZCVAL        SETC '&ZCVAL NEWSECT'             INCORRECT KEY USED      01052700
.ZG347A43     AIF   (K'&ENDDATA LE 0).ZG347A44  OK                      01052800
&ZCVAL        SETC '&ZCVAL ENDDATA'             INCORRECT KEY USED      01052900
.ZG347A44     AIF   (K'&MODLIB LE 0).ZG347A45   OK                      01053000
&ZCVAL        SETC '&ZCVAL MODLIB'              INCORRECT KEY USED      01053100
.ZG347A45     AIF   (K'&SNAME LE 0).ZG347A46    OK                      01053200
&ZCVAL        SETC '&ZCVAL SNAME'               INCORRECT KEY USED      01053300
.ZG347A46     AIF   (K'&REPLACE LE 0).ZG347A47  OK                      01053400
&ZCVAL        SETC '&ZCVAL REPLACE'             INCORRECT KEY USED      01053500
.ZG347A47     AIF   (K'&LIBOPT LE 0).ZG347A48   OK                      01053600
&ZCVAL        SETC '&ZCVAL LIBOPT'              INCORRECT KEY USED      01053700
.ZG347A48     AIF   (K'&OPTION LE 0).ZG347A49   OK                      01053800
&ZCVAL        SETC '&ZCVAL OPTION'              INCORRECT KEY USED      01053900
.ZG347A49     AIF   (K'&OPTVAL LE 0).ZG347A50   OK                      01054000
&ZCVAL        SETC '&ZCVAL OPTVAL'              INCORRECT KEY USED      01054100
.ZG347A50     AIF   (K'&PARMS LE 0).ZG347A51    OK                      01054200
&ZCVAL        SETC '&ZCVAL PARMS'               INCORRECT KEY USED      01054300
.ZG347A51     AIF   (K'&FILES LE 0).ZG347A52    OK                      01054400
&ZCVAL        SETC '&ZCVAL FILES'               INCORRECT KEY USED      01054500
.ZG347A52     AIF   (K'&EXITS LE 0).ZG347A53    OK                      01054600
&ZCVAL        SETC '&ZCVAL EXITS'               INCORRECT KEY USED      01054700
.ZG347A53     AIF   (K'&OPTIONS LE 0).ZG347A54  OK                      01054800
&ZCVAL        SETC '&ZCVAL OPTIONS'             INCORRECT KEY USED      01054900
.ZG347A54     AIF   (K'&ENVARS LE 0).ZG347A55   OK                      01055000
&ZCVAL        SETC '&ZCVAL ENVARS'              INCORRECT KEY USED      01055100
.ZG347A55     AIF   (K'&ORIGIN LE 0).ZG347A56   OK                      01055200
&ZCVAL        SETC '&ZCVAL ORIGIN'              INCORRECT KEY USED      01055300
.ZG347A56     AIF   (K'&REGION LE 0).ZG347A57   OK                      01055400
&ZCVAL        SETC '&ZCVAL REGION'              INCORRECT KEY USED      01055500
.ZG347A57     AIF   (K'&ZCVAL LE 0).ZG347A58    OK                      01055600
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               01055700
              AIF  (K'&ZCVAL LE 160).ZG347A58A                          01055800
&ZCVAL        SETC '&ZCVAL'(1,160)                                      01055900
&ZCVAL        SETC '&ZCVAL....'                                         01056000
.ZG347A58A    ANOP                                                      01056100
&ZMS          SETC  '"FUNC'                                             01056200
&ZMS          SETC  '&ZMS.=&FUNC"'                                      01056300
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                01056400
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                01056500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01056600
.ZG347A58     ANOP  ,                                                   01056700
.*----------------------------------------------------------------***   01056800
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01056900
              AIF   (N'&WORKMOD LE 1).ZG349A    CK NUM                  01057000
&ZMS          SETC  '"WORKMOD='                                         01057100
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    01057200
&ZMS          SETC  '&ZMS "WORKMOD"'                                    01057300
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01057400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01057500
.ZG349A       ANOP  ,                                                   01057600
.*-------------------------------------------------------------------   01057700
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01057800
&ZXWORKMOD    SETC  'INPUT'     SET IN/OUTPUT                           01057900
&XWORKMOD     SETC  '&WORKMOD(1)'               SET XVARIABLE           01058000
              AIF   (N'&WORKMOD GT 1).ZG349B    MULTI                   01058100
&XWORKMOD     SETC  '&WORKMOD'  SET XVARIABLE                           01058200
.ZG349B       AIF   (K'&WORKMOD(1) GT 0).ZG349C                         01058300
&ZXWORKMOD    SETC  ''          RESET IN/OUTPUT                         01058400
&ZMS          SETC  ' '                                                 01058500
&ZMS          SETC  '&ZMS "WORKMOD" KEY AND ITS'                        01058600
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    01058700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01058800
.ZG349C       ANOP  ,                                                   01058900
.*-------------------------------------------------------------------   01059000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01059100
              AIF   (K'&ZXWORKMOD LE 0).ZG349R  NOT I/O                 01059200
              AIF   ('&XWORKMOD'(1,1) NE '(').ZG349R                    01059300
&ZCGPR        SETC  '&XWORKMOD'(2,K'&XWORKMOD-2)                        01059400
              AIF   ('&ZCGPR'(1,1) NE '0').ZG349P                       01059500
              AIF   (K'&ZCGPR GT 2).ZG349Q                              01059600
              AIF   ('&ZCGPR' EQ '0').ZG349Q                            01059700
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       01059800
              AIF   (T'&ZCGPR NE 'N').ZG349Q    INVALID REG NAME        01059900
.ZG349P       ANOP  ,                                                   01060000
              AIF   (T'&ZCGPR NE 'N').ZG349R    NON NUMERIC             01060100
              AIF   ('&ZCGPR' LT '2').ZG349Q                            01060200
              AIF   ('&ZCGPR' LE '12').ZG349R                           01060300
.ZG349Q       ANOP  ,                                                   01060400
&ZMS          SETC  '"WORKMOD='                                         01060500
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    01060600
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           01060700
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    01060800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01060900
.ZG349R       ANOP  ,                                                   01061000
.*----------------------------------------------------------------***   01061100
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01061200
              AIF   (N'&OLDNAME LE 1).ZG352A    CK NUM                  01061300
&ZMS          SETC  '"OLDNAME='                                         01061400
&ZMS          SETC  '&ZMS.&OLDNAME"'                                    01061500
&ZMS          SETC  '&ZMS "OLDNAME"'                                    01061600
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01061700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01061800
.ZG352A       ANOP  ,                                                   01061900
.*-------------------------------------------------------------------   01062000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01062100
&ZXOLDNAME    SETC  'INPUT'     SET IN/OUTPUT                           01062200
&XOLDNAME     SETC  '&OLDNAME(1)'               SET XVARIABLE           01062300
              AIF   (N'&OLDNAME GT 1).ZG352B    MULTI                   01062400
&XOLDNAME     SETC  '&OLDNAME'  SET XVARIABLE                           01062500
.ZG352B       AIF   (K'&OLDNAME(1) GT 0).ZG352C                         01062600
&ZXOLDNAME    SETC  ''          RESET IN/OUTPUT                         01062700
&ZMS          SETC  ' '                                                 01062800
&ZMS          SETC  '&ZMS "OLDNAME" KEY AND ITS'                        01062900
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    01063000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01063100
.ZG352C       ANOP  ,                                                   01063200
.*-------------------------------------------------------------------   01063300
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01063400
              AIF   (K'&ZXOLDNAME LE 0).ZG352R  NOT I/O                 01063500
              AIF   ('&XOLDNAME'(1,1) NE '(').ZG352R                    01063600
&ZCGPR        SETC  '&XOLDNAME'(2,K'&XOLDNAME-2)                        01063700
              AIF   ('&ZCGPR'(1,1) NE '0').ZG352P                       01063800
              AIF   (K'&ZCGPR GT 2).ZG352Q                              01063900
              AIF   ('&ZCGPR' EQ '0').ZG352Q                            01064000
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       01064100
              AIF   (T'&ZCGPR NE 'N').ZG352Q    INVALID REG NAME        01064200
.ZG352P       ANOP  ,                                                   01064300
              AIF   (T'&ZCGPR NE 'N').ZG352R    NON NUMERIC             01064400
              AIF   ('&ZCGPR' LT '2').ZG352Q                            01064500
              AIF   ('&ZCGPR' LE '12').ZG352R                           01064600
.ZG352Q       ANOP  ,                                                   01064700
&ZMS          SETC  '"OLDNAME='                                         01064800
&ZMS          SETC  '&ZMS.&OLDNAME"'                                    01064900
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           01065000
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    01065100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01065200
.ZG352R       ANOP  ,                                                   01065300
.*----------------------------------------------------------------***   01065400
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01065500
              AIF   (N'&NEWNAME LE 1).ZG355A    CK NUM                  01065600
&ZMS          SETC  '"NEWNAME='                                         01065700
&ZMS          SETC  '&ZMS.&NEWNAME"'                                    01065800
&ZMS          SETC  '&ZMS "NEWNAME"'                                    01065900
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01066000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01066100
.ZG355A       ANOP  ,                                                   01066200
.*-------------------------------------------------------------------   01066300
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01066400
&ZXNEWNAME    SETC  'INPUT'     SET IN/OUTPUT                           01066500
&XNEWNAME     SETC  '&NEWNAME(1)'               SET XVARIABLE           01066600
              AIF   (N'&NEWNAME GT 1).ZG355B    MULTI                   01066700
&XNEWNAME     SETC  '&NEWNAME'  SET XVARIABLE                           01066800
.ZG355B       AIF   (K'&NEWNAME(1) GT 0).ZG355C                         01066900
&ZXNEWNAME    SETC  ''          RESET IN/OUTPUT                         01067000
&ZMS          SETC  ' '                                                 01067100
&ZMS          SETC  '&ZMS "NEWNAME" KEY AND ITS'                        01067200
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    01067300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01067400
.ZG355C       ANOP  ,                                                   01067500
.*-------------------------------------------------------------------   01067600
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01067700
              AIF   (K'&ZXNEWNAME LE 0).ZG355R  NOT I/O                 01067800
              AIF   ('&XNEWNAME'(1,1) NE '(').ZG355R                    01067900
&ZCGPR        SETC  '&XNEWNAME'(2,K'&XNEWNAME-2)                        01068000
              AIF   ('&ZCGPR'(1,1) NE '0').ZG355P                       01068100
              AIF   (K'&ZCGPR GT 2).ZG355Q                              01068200
              AIF   ('&ZCGPR' EQ '0').ZG355Q                            01068300
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       01068400
              AIF   (T'&ZCGPR NE 'N').ZG355Q    INVALID REG NAME        01068500
.ZG355P       ANOP  ,                                                   01068600
              AIF   (T'&ZCGPR NE 'N').ZG355R    NON NUMERIC             01068700
              AIF   ('&ZCGPR' LT '2').ZG355Q                            01068800
              AIF   ('&ZCGPR' LE '12').ZG355R                           01068900
.ZG355Q       ANOP  ,                                                   01069000
&ZMS          SETC  '"NEWNAME='                                         01069100
&ZMS          SETC  '&ZMS.&NEWNAME"'                                    01069200
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           01069300
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    01069400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01069500
.ZG355R       ANOP  ,                                                   01069600
.*-------------------------------------------------------------------   01069700
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01069800
.ZG357        ANOP  ,                                                   01069900
&ZTLC         SETC 'RESETW'                                             01070000
              AIF   ('&FUNC(1)' NE '&ZTLC').ZG371                       01070100
&XFUNC        SETC  'RESETW'    SET KEYWORD                             01070200
              AIF   (N'&FUNC LE 1).ZG357A       CK NUM                  01070300
&ZMS          SETC  '"FUNC='                                            01070400
&ZMS          SETC  '&ZMS.&FUNC"'                                       01070500
&ZMS          SETC  '&ZMS "FUNC"'                                       01070600
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01070700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01070800
.ZG357A       ANOP  ,                                                   01070900
.*------------------------------------------------------------------    01071000
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01071100
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             01071200
.ZG357A0      AIF   (K'&ANAME LE 0).ZG357A1     OK                      01071300
&ZCVAL        SETC '&ZCVAL ANAME'               INCORRECT KEY USED      01071400
.ZG357A1      AIF   (K'&ENAME LE 0).ZG357A2     OK                      01071500
&ZCVAL        SETC '&ZCVAL ENAME'               INCORRECT KEY USED      01071600
.ZG357A2      AIF   (K'&AMODE LE 0).ZG357A3     OK                      01071700
&ZCVAL        SETC '&ZCVAL AMODE'               INCORRECT KEY USED      01071800
.ZG357A3      AIF   (K'&ATYPE LE 0).ZG357A4     OK                      01071900
&ZCVAL        SETC '&ZCVAL ATYPE'               INCORRECT KEY USED      01072000
.ZG357A4      AIF   (K'&DNAME LE 0).ZG357A5     OK                      01072100
&ZCVAL        SETC '&ZCVAL DNAME'               INCORRECT KEY USED      01072200
.ZG357A5      AIF   (K'&SECTION LE 0).ZG357A6   OK                      01072300
&ZCVAL        SETC '&ZCVAL SECTION'             INCORRECT KEY USED      01072400
.ZG357A6      AIF   (K'&BDY LE 0).ZG357A7       OK                      01072500
&ZCVAL        SETC '&ZCVAL BDY'                 INCORRECT KEY USED      01072600
.ZG357A7      AIF   (K'&CLASSL LE 0).ZG357A8    OK                      01072700
&ZCVAL        SETC '&ZCVAL CLASSL'              INCORRECT KEY USED      01072800
.ZG357A8      AIF   (K'&OLDNAME LE 0).ZG357A9   OK                      01072900
&ZCVAL        SETC '&ZCVAL OLDNAME'             INCORRECT KEY USED      01073000
.ZG357A9      AIF   (K'&NEWNAME LE 0).ZG357A10  OK                      01073100
&ZCVAL        SETC '&ZCVAL NEWNAME'             INCORRECT KEY USED      01073200
.ZG357A10     AIF   (K'&COUNT LE 0).ZG357A11    OK                      01073300
&ZCVAL        SETC '&ZCVAL COUNT'               INCORRECT KEY USED      01073400
.ZG357A11     AIF   (K'&MODE LE 0).ZG357A12     OK                      01073500
&ZCVAL        SETC '&ZCVAL MODE'                INCORRECT KEY USED      01073600
.ZG357A12     AIF   (K'&CLASS LE 0).ZG357A13    OK                      01073700
&ZCVAL        SETC '&ZCVAL CLASS'               INCORRECT KEY USED      01073800
.ZG357A13     AIF   (K'&CALLIB LE 0).ZG357A14   OK                      01073900
&ZCVAL        SETC '&ZCVAL CALLIB'              INCORRECT KEY USED      01074000
.ZG357A14     AIF   (K'&PATHNAME LE 0).ZG357A15  OK                     01074100
&ZCVAL        SETC '&ZCVAL PATHNAME'            INCORRECT KEY USED      01074200
.ZG357A15     AIF   (K'&DIALOG LE 0).ZG357A16   OK                      01074300
&ZCVAL        SETC '&ZCVAL DIALOG'              INCORRECT KEY USED      01074400
.ZG357A16     AIF   (K'&RENAMEL LE 0).ZG357A17  OK                      01074500
&ZCVAL        SETC '&ZCVAL RENAMEL'             INCORRECT KEY USED      01074600
.ZG357A17     AIF   (K'&AREA LE 0).ZG357A18     OK                      01074700
&ZCVAL        SETC '&ZCVAL AREA'                INCORRECT KEY USED      01074800
.ZG357A18     AIF   (K'&CURSOR LE 0).ZG357A19   OK                      01074900
&ZCVAL        SETC '&ZCVAL CURSOR'              INCORRECT KEY USED      01075000
.ZG357A19     AIF   (K'&RELOC LE 0).ZG357A20    OK                      01075100
&ZCVAL        SETC '&ZCVAL RELOC'               INCORRECT KEY USED      01075200
.ZG357A20     AIF   (K'&RECTYPE LE 0).ZG357A21  OK                      01075300
&ZCVAL        SETC '&ZCVAL RECTYPE'             INCORRECT KEY USED      01075400
.ZG357A21     AIF   (K'&OFFSET LE 0).ZG357A22   OK                      01075500
&ZCVAL        SETC '&ZCVAL OFFSET'              INCORRECT KEY USED      01075600
.ZG357A22     AIF   (K'&SYMBOL LE 0).ZG357A23   OK                      01075700
&ZCVAL        SETC '&ZCVAL SYMBOL'              INCORRECT KEY USED      01075800
.ZG357A23     AIF   (K'&TCOUNT LE 0).ZG357A24   OK                      01075900
&ZCVAL        SETC '&ZCVAL TCOUNT'              INCORRECT KEY USED      01076000
.ZG357A24     AIF   (K'&NTYPE LE 0).ZG357A25    OK                      01076100
&ZCVAL        SETC '&ZCVAL NTYPE'               INCORRECT KEY USED      01076200
.ZG357A25     AIF   (K'&CULIST LE 0).ZG357A26   OK                      01076300
&ZCVAL        SETC '&ZCVAL CULIST'              INCORRECT KEY USED      01076400
.ZG357A26     AIF   (K'&ITYPE LE 0).ZG357A27    OK                      01076500
&ZCVAL        SETC '&ZCVAL ITYPE'               INCORRECT KEY USED      01076600
.ZG357A27     AIF   (K'&DLLNAME LE 0).ZG357A28  OK                      01076700
&ZCVAL        SETC '&ZCVAL DLLNAME'             INCORRECT KEY USED      01076800
.ZG357A28     AIF   (K'&INAME LE 0).ZG357A29    OK                      01076900
&ZCVAL        SETC '&ZCVAL INAME'               INCORRECT KEY USED      01077000
.ZG357A29     AIF   (K'&INTYPE LE 0).ZG357A30   OK                      01077100
&ZCVAL        SETC '&ZCVAL INTYPE'              INCORRECT KEY USED      01077200
.ZG357A30     AIF   (K'&DDNAME LE 0).ZG357A31   OK                      01077300
&ZCVAL        SETC '&ZCVAL DDNAME'              INCORRECT KEY USED      01077400
.ZG357A31     AIF   (K'&DEPTR LE 0).ZG357A32    OK                      01077500
&ZCVAL        SETC '&ZCVAL DEPTR'               INCORRECT KEY USED      01077600
.ZG357A32     AIF   (K'&MEMBER LE 0).ZG357A33   OK                      01077700
&ZCVAL        SETC '&ZCVAL MEMBER'              INCORRECT KEY USED      01077800
.ZG357A33     AIF   (K'&DCBPTR LE 0).ZG357A34   OK                      01077900
&ZCVAL        SETC '&ZCVAL DCBPTR'              INCORRECT KEY USED      01078000
.ZG357A34     AIF   (K'&EPTOKEN LE 0).ZG357A35  OK                      01078100
&ZCVAL        SETC '&ZCVAL EPTOKEN'             INCORRECT KEY USED      01078200
.ZG357A35     AIF   (K'&ATTRIB LE 0).ZG357A36   OK                      01078300
&ZCVAL        SETC '&ZCVAL ATTRIB'              INCORRECT KEY USED      01078400
.ZG357A36     AIF   (K'&ALIASES LE 0).ZG357A37  OK                      01078500
&ZCVAL        SETC '&ZCVAL ALIASES'             INCORRECT KEY USED      01078600
.ZG357A37     AIF   (K'&IMPORTS LE 0).ZG357A38  OK                      01078700
&ZCVAL        SETC '&ZCVAL IMPORTS'             INCORRECT KEY USED      01078800
.ZG357A38     AIF   (K'&EPLOC LE 0).ZG357A39    OK                      01078900
&ZCVAL        SETC '&ZCVAL EPLOC'               INCORRECT KEY USED      01079000
.ZG357A39     AIF   (K'&IDENTIFY LE 0).ZG357A40  OK                     01079100
&ZCVAL        SETC '&ZCVAL IDENTIFY'            INCORRECT KEY USED      01079200
.ZG357A40     AIF   (K'&EXTLST LE 0).ZG357A41   OK                      01079300
&ZCVAL        SETC '&ZCVAL EXTLST'              INCORRECT KEY USED      01079400
.ZG357A41     AIF   (K'&LNAME LE 0).ZG357A42    OK                      01079500
&ZCVAL        SETC '&ZCVAL LNAME'               INCORRECT KEY USED      01079600
.ZG357A42     AIF   (K'&NEWSECT LE 0).ZG357A43  OK                      01079700
&ZCVAL        SETC '&ZCVAL NEWSECT'             INCORRECT KEY USED      01079800
.ZG357A43     AIF   (K'&ENDDATA LE 0).ZG357A44  OK                      01079900
&ZCVAL        SETC '&ZCVAL ENDDATA'             INCORRECT KEY USED      01080000
.ZG357A44     AIF   (K'&MODLIB LE 0).ZG357A45   OK                      01080100
&ZCVAL        SETC '&ZCVAL MODLIB'              INCORRECT KEY USED      01080200
.ZG357A45     AIF   (K'&SNAME LE 0).ZG357A46    OK                      01080300
&ZCVAL        SETC '&ZCVAL SNAME'               INCORRECT KEY USED      01080400
.ZG357A46     AIF   (K'&REPLACE LE 0).ZG357A47  OK                      01080500
&ZCVAL        SETC '&ZCVAL REPLACE'             INCORRECT KEY USED      01080600
.ZG357A47     AIF   (K'&LIBOPT LE 0).ZG357A48   OK                      01080700
&ZCVAL        SETC '&ZCVAL LIBOPT'              INCORRECT KEY USED      01080800
.ZG357A48     AIF   (K'&OPTION LE 0).ZG357A49   OK                      01080900
&ZCVAL        SETC '&ZCVAL OPTION'              INCORRECT KEY USED      01081000
.ZG357A49     AIF   (K'&OPTVAL LE 0).ZG357A50   OK                      01081100
&ZCVAL        SETC '&ZCVAL OPTVAL'              INCORRECT KEY USED      01081200
.ZG357A50     AIF   (K'&PARMS LE 0).ZG357A51    OK                      01081300
&ZCVAL        SETC '&ZCVAL PARMS'               INCORRECT KEY USED      01081400
.ZG357A51     AIF   (K'&FILES LE 0).ZG357A52    OK                      01081500
&ZCVAL        SETC '&ZCVAL FILES'               INCORRECT KEY USED      01081600
.ZG357A52     AIF   (K'&EXITS LE 0).ZG357A53    OK                      01081700
&ZCVAL        SETC '&ZCVAL EXITS'               INCORRECT KEY USED      01081800
.ZG357A53     AIF   (K'&OPTIONS LE 0).ZG357A54  OK                      01081900
&ZCVAL        SETC '&ZCVAL OPTIONS'             INCORRECT KEY USED      01082000
.ZG357A54     AIF   (K'&ENVARS LE 0).ZG357A55   OK                      01082100
&ZCVAL        SETC '&ZCVAL ENVARS'              INCORRECT KEY USED      01082200
.ZG357A55     AIF   (K'&ORIGIN LE 0).ZG357A56   OK                      01082300
&ZCVAL        SETC '&ZCVAL ORIGIN'              INCORRECT KEY USED      01082400
.ZG357A56     AIF   (K'&REGION LE 0).ZG357A57   OK                      01082500
&ZCVAL        SETC '&ZCVAL REGION'              INCORRECT KEY USED      01082600
.ZG357A57     AIF   (K'&ZCVAL LE 0).ZG357A58    OK                      01082700
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               01082800
              AIF  (K'&ZCVAL LE 160).ZG357A58A                          01082900
&ZCVAL        SETC '&ZCVAL'(1,160)                                      01083000
&ZCVAL        SETC '&ZCVAL....'                                         01083100
.ZG357A58A    ANOP                                                      01083200
&ZMS          SETC  '"FUNC'                                             01083300
&ZMS          SETC  '&ZMS.=&FUNC"'                                      01083400
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                01083500
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                01083600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01083700
.ZG357A58     ANOP  ,                                                   01083800
.*----------------------------------------------------------------***   01083900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01084000
              AIF   (N'&WORKMOD LE 1).ZG359A    CK NUM                  01084100
&ZMS          SETC  '"WORKMOD='                                         01084200
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    01084300
&ZMS          SETC  '&ZMS "WORKMOD"'                                    01084400
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01084500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01084600
.ZG359A       ANOP  ,                                                   01084700
.*-------------------------------------------------------------------   01084800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01084900
&ZXWORKMOD    SETC  'INPUT'     SET IN/OUTPUT                           01085000
&XWORKMOD     SETC  '&WORKMOD(1)'               SET XVARIABLE           01085100
              AIF   (N'&WORKMOD GT 1).ZG359B    MULTI                   01085200
&XWORKMOD     SETC  '&WORKMOD'  SET XVARIABLE                           01085300
.ZG359B       AIF   (K'&WORKMOD(1) GT 0).ZG359C                         01085400
&ZXWORKMOD    SETC  ''          RESET IN/OUTPUT                         01085500
&ZMS          SETC  ' '                                                 01085600
&ZMS          SETC  '&ZMS "WORKMOD" KEY AND ITS'                        01085700
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    01085800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01085900
.ZG359C       ANOP  ,                                                   01086000
.*-------------------------------------------------------------------   01086100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01086200
              AIF   (K'&ZXWORKMOD LE 0).ZG359R  NOT I/O                 01086300
              AIF   ('&XWORKMOD'(1,1) NE '(').ZG359R                    01086400
&ZCGPR        SETC  '&XWORKMOD'(2,K'&XWORKMOD-2)                        01086500
              AIF   ('&ZCGPR'(1,1) NE '0').ZG359P                       01086600
              AIF   (K'&ZCGPR GT 2).ZG359Q                              01086700
              AIF   ('&ZCGPR' EQ '0').ZG359Q                            01086800
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       01086900
              AIF   (T'&ZCGPR NE 'N').ZG359Q    INVALID REG NAME        01087000
.ZG359P       ANOP  ,                                                   01087100
              AIF   (T'&ZCGPR NE 'N').ZG359R    NON NUMERIC             01087200
              AIF   ('&ZCGPR' LT '2').ZG359Q                            01087300
              AIF   ('&ZCGPR' LE '12').ZG359R                           01087400
.ZG359Q       ANOP  ,                                                   01087500
&ZMS          SETC  '"WORKMOD='                                         01087600
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    01087700
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           01087800
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    01087900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01088000
.ZG359R       ANOP  ,                                                   01088100
.*----------------------------------------------------------------***   01088200
.***AG.KKWRD01 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             01088300
              AIF   (N'&INTENT LE 1).ZG362A     CK NUM                  01088400
&ZMS          SETC  '"INTENT='                                          01088500
&ZMS          SETC  '&ZMS.&INTENT"'                                     01088600
&ZMS          SETC  '&ZMS "INTENT"'                                     01088700
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01088800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01088900
.ZG362A       ANOP  ,                                                   01089000
.*-------------------------------------------------------------------   01089100
.***AG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             01089200
&XINTENT      SETC  ''          INITIALIZE XVARIABLE                    01089300
.ZG363A   AIF   ('&INTENT(1)' NE 'B').ZG364A                            01089400
&XINTENT      SETC  'B'         SET KEYWORD                             01089500
.*-------------------------------------------------------------------   01089600
.***AG.KKWRD02 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             01089700
.ZG364A   AIF   ('&INTENT(1)' NE 'A').ZG365A                            01089800
&XINTENT      SETC  'A'         SET KEYWORD                             01089900
.*-------------------------------------------------------------------   01090000
.***AG.KKWRD03 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             01090100
.ZG365A       AIF   (K'&XINTENT GT 0).ZG365C    KEYWORD                 01090200
              AIF   (K'&INTENT(1) LE 0).ZG365B                          01090300
&ZMS          SETC  '"INTENT='                                          01090400
&ZMS          SETC  '&ZMS.&INTENT"'                                     01090500
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           01090600
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 01090700
&ZMS          SETC  '&ZMS "B"'                                          01090800
&ZMS          SETC  '&ZMS OR "A".'                                      01090900
              MNOTE 8,' &ZMS '                                          01091000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01091100
.ZG365B       ANOP  ,                                                   01091200
&XINTENT      SETC  'B'         SET DEFAULT KEYWORD                     01091300
.ZG365C       ANOP  ,                                                   01091400
&ZXINTENT     SETC  'INPUT'     SET IN/OUTPUT                           01091500
.*-------------------------------------------------------------------   01091600
.***AG.KKWRD04 VALUE, RQD INPUT, ME KEYWORD -SINGLE KEYWORD             01091700
              AIF   (K'&INTENT(1) GT 0).ZG365D  VALID                   01091800
&ZXINTENT     SETC  ''          RESET IN/OUTPUT                         01091900
&ZMS          SETC  'THE'                                               01092000
&ZMS          SETC  '&ZMS "INTENT" KEY AND ITS'                         01092100
&ZMS          SETC  '&ZMS ARGUMENT ARE REQUIRED.'                       01092200
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 01092300
&ZMS          SETC  '&ZMS "B"'                                          01092400
&ZMS          SETC  '&ZMS OR "A".'                                      01092500
              MNOTE 8,' &ZMS '                                          01092600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01092700
.ZG365D       ANOP  ,                                                   01092800
.*----------------------------------------------------------------***   01092900
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01093000
              AIF   (N'&PROTECT LE 1).ZG367A    CK NUM                  01093100
&ZMS          SETC  '"PROTECT='                                         01093200
&ZMS          SETC  '&ZMS.&PROTECT"'                                    01093300
&ZMS          SETC  '&ZMS "PROTECT"'                                    01093400
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01093500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01093600
.ZG367A       ANOP  ,                                                   01093700
.*-------------------------------------------------------------------   01093800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01093900
&XPROTECT     SETC  ''          INITIALIZE XVARIABLE                    01094000
.ZG368A   AIF   ('&PROTECT(1)' NE 'Y').ZG369A                           01094100
&XPROTECT     SETC  'Y'         SET KEYWORD                             01094200
.*-------------------------------------------------------------------   01094300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01094400
.ZG369A   AIF   ('&PROTECT(1)' NE 'N').ZG370A                           01094500
&XPROTECT     SETC  'N'         SET KEYWORD                             01094600
.*-------------------------------------------------------------------   01094700
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01094800
.ZG370A       AIF   (K'&XPROTECT GT 0).ZG370C   KEYWORD                 01094900
              AIF   (K'&PROTECT(1) LE 0).ZG370B                         01095000
&ZMS          SETC  '"PROTECT='                                         01095100
&ZMS          SETC  '&ZMS.&PROTECT"'                                    01095200
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           01095300
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 01095400
&ZMS          SETC  '&ZMS "Y"'                                          01095500
&ZMS          SETC  '&ZMS OR "N".'                                      01095600
              MNOTE 8,' &ZMS '                                          01095700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01095800
.ZG370B       ANOP  ,                                                   01095900
&XPROTECT     SETC  'Y'         SET DEFAULT KEYWORD                     01096000
.ZG370C       ANOP  ,                                                   01096100
&ZXPROTECT    SETC  'INPUT'     SET IN/OUTPUT                           01096200
.*-------------------------------------------------------------------   01096300
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01096400
.ZG371        ANOP  ,                                                   01096500
&ZTLC         SETC 'SAVEW'                                              01096600
              AIF   ('&FUNC(1)' NE '&ZTLC').ZG386                       01096700
&XFUNC        SETC  'SAVEW'     SET KEYWORD                             01096800
              AIF   (N'&FUNC LE 1).ZG371A       CK NUM                  01096900
&ZMS          SETC  '"FUNC='                                            01097000
&ZMS          SETC  '&ZMS.&FUNC"'                                       01097100
&ZMS          SETC  '&ZMS "FUNC"'                                       01097200
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01097300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01097400
.ZG371A       ANOP  ,                                                   01097500
.*------------------------------------------------------------------    01097600
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01097700
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             01097800
.ZG371A0      AIF   (K'&ANAME LE 0).ZG371A1     OK                      01097900
&ZCVAL        SETC '&ZCVAL ANAME'               INCORRECT KEY USED      01098000
.ZG371A1      AIF   (K'&ENAME LE 0).ZG371A2     OK                      01098100
&ZCVAL        SETC '&ZCVAL ENAME'               INCORRECT KEY USED      01098200
.ZG371A2      AIF   (K'&AMODE LE 0).ZG371A3     OK                      01098300
&ZCVAL        SETC '&ZCVAL AMODE'               INCORRECT KEY USED      01098400
.ZG371A3      AIF   (K'&ATYPE LE 0).ZG371A4     OK                      01098500
&ZCVAL        SETC '&ZCVAL ATYPE'               INCORRECT KEY USED      01098600
.ZG371A4      AIF   (K'&DNAME LE 0).ZG371A5     OK                      01098700
&ZCVAL        SETC '&ZCVAL DNAME'               INCORRECT KEY USED      01098800
.ZG371A5      AIF   (K'&SECTION LE 0).ZG371A6   OK                      01098900
&ZCVAL        SETC '&ZCVAL SECTION'             INCORRECT KEY USED      01099000
.ZG371A6      AIF   (K'&BDY LE 0).ZG371A7       OK                      01099100
&ZCVAL        SETC '&ZCVAL BDY'                 INCORRECT KEY USED      01099200
.ZG371A7      AIF   (K'&CLASSL LE 0).ZG371A8    OK                      01099300
&ZCVAL        SETC '&ZCVAL CLASSL'              INCORRECT KEY USED      01099400
.ZG371A8      AIF   (K'&OLDNAME LE 0).ZG371A9   OK                      01099500
&ZCVAL        SETC '&ZCVAL OLDNAME'             INCORRECT KEY USED      01099600
.ZG371A9      AIF   (K'&NEWNAME LE 0).ZG371A10  OK                      01099700
&ZCVAL        SETC '&ZCVAL NEWNAME'             INCORRECT KEY USED      01099800
.ZG371A10     AIF   (K'&COUNT LE 0).ZG371A11    OK                      01099900
&ZCVAL        SETC '&ZCVAL COUNT'               INCORRECT KEY USED      01100000
.ZG371A11     AIF   (K'&MODE LE 0).ZG371A12     OK                      01100100
&ZCVAL        SETC '&ZCVAL MODE'                INCORRECT KEY USED      01100200
.ZG371A12     AIF   (K'&CLASS LE 0).ZG371A13    OK                      01100300
&ZCVAL        SETC '&ZCVAL CLASS'               INCORRECT KEY USED      01100400
.ZG371A13     AIF   (K'&CALLIB LE 0).ZG371A14   OK                      01100500
&ZCVAL        SETC '&ZCVAL CALLIB'              INCORRECT KEY USED      01100600
.ZG371A14     AIF   (K'&PATHNAME LE 0).ZG371A15  OK                     01100700
&ZCVAL        SETC '&ZCVAL PATHNAME'            INCORRECT KEY USED      01100800
.ZG371A15     AIF   (K'&DIALOG LE 0).ZG371A16   OK                      01100900
&ZCVAL        SETC '&ZCVAL DIALOG'              INCORRECT KEY USED      01101000
.ZG371A16     AIF   (K'&INTENT LE 0).ZG371A17   OK                      01101100
&ZCVAL        SETC '&ZCVAL INTENT'              INCORRECT KEY USED      01101200
.ZG371A17     AIF   (K'&PROTECT LE 0).ZG371A18  OK                      01101300
&ZCVAL        SETC '&ZCVAL PROTECT'             INCORRECT KEY USED      01101400
.ZG371A18     AIF   (K'&RENAMEL LE 0).ZG371A19  OK                      01101500
&ZCVAL        SETC '&ZCVAL RENAMEL'             INCORRECT KEY USED      01101600
.ZG371A19     AIF   (K'&AREA LE 0).ZG371A20     OK                      01101700
&ZCVAL        SETC '&ZCVAL AREA'                INCORRECT KEY USED      01101800
.ZG371A20     AIF   (K'&CURSOR LE 0).ZG371A21   OK                      01101900
&ZCVAL        SETC '&ZCVAL CURSOR'              INCORRECT KEY USED      01102000
.ZG371A21     AIF   (K'&RELOC LE 0).ZG371A22    OK                      01102100
&ZCVAL        SETC '&ZCVAL RELOC'               INCORRECT KEY USED      01102200
.ZG371A22     AIF   (K'&RECTYPE LE 0).ZG371A23  OK                      01102300
&ZCVAL        SETC '&ZCVAL RECTYPE'             INCORRECT KEY USED      01102400
.ZG371A23     AIF   (K'&OFFSET LE 0).ZG371A24   OK                      01102500
&ZCVAL        SETC '&ZCVAL OFFSET'              INCORRECT KEY USED      01102600
.ZG371A24     AIF   (K'&SYMBOL LE 0).ZG371A25   OK                      01102700
&ZCVAL        SETC '&ZCVAL SYMBOL'              INCORRECT KEY USED      01102800
.ZG371A25     AIF   (K'&TCOUNT LE 0).ZG371A26   OK                      01102900
&ZCVAL        SETC '&ZCVAL TCOUNT'              INCORRECT KEY USED      01103000
.ZG371A26     AIF   (K'&NTYPE LE 0).ZG371A27    OK                      01103100
&ZCVAL        SETC '&ZCVAL NTYPE'               INCORRECT KEY USED      01103200
.ZG371A27     AIF   (K'&CULIST LE 0).ZG371A28   OK                      01103300
&ZCVAL        SETC '&ZCVAL CULIST'              INCORRECT KEY USED      01103400
.ZG371A28     AIF   (K'&ITYPE LE 0).ZG371A29    OK                      01103500
&ZCVAL        SETC '&ZCVAL ITYPE'               INCORRECT KEY USED      01103600
.ZG371A29     AIF   (K'&DLLNAME LE 0).ZG371A30  OK                      01103700
&ZCVAL        SETC '&ZCVAL DLLNAME'             INCORRECT KEY USED      01103800
.ZG371A30     AIF   (K'&INAME LE 0).ZG371A31    OK                      01103900
&ZCVAL        SETC '&ZCVAL INAME'               INCORRECT KEY USED      01104000
.ZG371A31     AIF   (K'&INTYPE LE 0).ZG371A32   OK                      01104100
&ZCVAL        SETC '&ZCVAL INTYPE'              INCORRECT KEY USED      01104200
.ZG371A32     AIF   (K'&DDNAME LE 0).ZG371A33   OK                      01104300
&ZCVAL        SETC '&ZCVAL DDNAME'              INCORRECT KEY USED      01104400
.ZG371A33     AIF   (K'&DEPTR LE 0).ZG371A34    OK                      01104500
&ZCVAL        SETC '&ZCVAL DEPTR'               INCORRECT KEY USED      01104600
.ZG371A34     AIF   (K'&MEMBER LE 0).ZG371A35   OK                      01104700
&ZCVAL        SETC '&ZCVAL MEMBER'              INCORRECT KEY USED      01104800
.ZG371A35     AIF   (K'&DCBPTR LE 0).ZG371A36   OK                      01104900
&ZCVAL        SETC '&ZCVAL DCBPTR'              INCORRECT KEY USED      01105000
.ZG371A36     AIF   (K'&EPTOKEN LE 0).ZG371A37  OK                      01105100
&ZCVAL        SETC '&ZCVAL EPTOKEN'             INCORRECT KEY USED      01105200
.ZG371A37     AIF   (K'&ATTRIB LE 0).ZG371A38   OK                      01105300
&ZCVAL        SETC '&ZCVAL ATTRIB'              INCORRECT KEY USED      01105400
.ZG371A38     AIF   (K'&ALIASES LE 0).ZG371A39  OK                      01105500
&ZCVAL        SETC '&ZCVAL ALIASES'             INCORRECT KEY USED      01105600
.ZG371A39     AIF   (K'&IMPORTS LE 0).ZG371A40  OK                      01105700
&ZCVAL        SETC '&ZCVAL IMPORTS'             INCORRECT KEY USED      01105800
.ZG371A40     AIF   (K'&EPLOC LE 0).ZG371A41    OK                      01105900
&ZCVAL        SETC '&ZCVAL EPLOC'               INCORRECT KEY USED      01106000
.ZG371A41     AIF   (K'&IDENTIFY LE 0).ZG371A42  OK                     01106100
&ZCVAL        SETC '&ZCVAL IDENTIFY'            INCORRECT KEY USED      01106200
.ZG371A42     AIF   (K'&EXTLST LE 0).ZG371A43   OK                      01106300
&ZCVAL        SETC '&ZCVAL EXTLST'              INCORRECT KEY USED      01106400
.ZG371A43     AIF   (K'&LNAME LE 0).ZG371A44    OK                      01106500
&ZCVAL        SETC '&ZCVAL LNAME'               INCORRECT KEY USED      01106600
.ZG371A44     AIF   (K'&NEWSECT LE 0).ZG371A45  OK                      01106700
&ZCVAL        SETC '&ZCVAL NEWSECT'             INCORRECT KEY USED      01106800
.ZG371A45     AIF   (K'&ENDDATA LE 0).ZG371A46  OK                      01106900
&ZCVAL        SETC '&ZCVAL ENDDATA'             INCORRECT KEY USED      01107000
.ZG371A46     AIF   (K'&LIBOPT LE 0).ZG371A47   OK                      01107100
&ZCVAL        SETC '&ZCVAL LIBOPT'              INCORRECT KEY USED      01107200
.ZG371A47     AIF   (K'&OPTION LE 0).ZG371A48   OK                      01107300
&ZCVAL        SETC '&ZCVAL OPTION'              INCORRECT KEY USED      01107400
.ZG371A48     AIF   (K'&OPTVAL LE 0).ZG371A49   OK                      01107500
&ZCVAL        SETC '&ZCVAL OPTVAL'              INCORRECT KEY USED      01107600
.ZG371A49     AIF   (K'&PARMS LE 0).ZG371A50    OK                      01107700
&ZCVAL        SETC '&ZCVAL PARMS'               INCORRECT KEY USED      01107800
.ZG371A50     AIF   (K'&FILES LE 0).ZG371A51    OK                      01107900
&ZCVAL        SETC '&ZCVAL FILES'               INCORRECT KEY USED      01108000
.ZG371A51     AIF   (K'&EXITS LE 0).ZG371A52    OK                      01108100
&ZCVAL        SETC '&ZCVAL EXITS'               INCORRECT KEY USED      01108200
.ZG371A52     AIF   (K'&OPTIONS LE 0).ZG371A53  OK                      01108300
&ZCVAL        SETC '&ZCVAL OPTIONS'             INCORRECT KEY USED      01108400
.ZG371A53     AIF   (K'&ENVARS LE 0).ZG371A54   OK                      01108500
&ZCVAL        SETC '&ZCVAL ENVARS'              INCORRECT KEY USED      01108600
.ZG371A54     AIF   (K'&ORIGIN LE 0).ZG371A55   OK                      01108700
&ZCVAL        SETC '&ZCVAL ORIGIN'              INCORRECT KEY USED      01108800
.ZG371A55     AIF   (K'&REGION LE 0).ZG371A56   OK                      01108900
&ZCVAL        SETC '&ZCVAL REGION'              INCORRECT KEY USED      01109000
.ZG371A56     AIF   (K'&ZCVAL LE 0).ZG371A57    OK                      01109100
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               01109200
              AIF  (K'&ZCVAL LE 160).ZG371A57A                          01109300
&ZCVAL        SETC '&ZCVAL'(1,160)                                      01109400
&ZCVAL        SETC '&ZCVAL....'                                         01109500
.ZG371A57A    ANOP                                                      01109600
&ZMS          SETC  '"FUNC'                                             01109700
&ZMS          SETC  '&ZMS.=&FUNC"'                                      01109800
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                01109900
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                01110000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01110100
.ZG371A57     ANOP  ,                                                   01110200
.*----------------------------------------------------------------***   01110300
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01110400
              AIF   (N'&WORKMOD LE 1).ZG373A    CK NUM                  01110500
&ZMS          SETC  '"WORKMOD='                                         01110600
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    01110700
&ZMS          SETC  '&ZMS "WORKMOD"'                                    01110800
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01110900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01111000
.ZG373A       ANOP  ,                                                   01111100
.*-------------------------------------------------------------------   01111200
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01111300
&ZXWORKMOD    SETC  'INPUT'     SET IN/OUTPUT                           01111400
&XWORKMOD     SETC  '&WORKMOD(1)'               SET XVARIABLE           01111500
              AIF   (N'&WORKMOD GT 1).ZG373B    MULTI                   01111600
&XWORKMOD     SETC  '&WORKMOD'  SET XVARIABLE                           01111700
.ZG373B       AIF   (K'&WORKMOD(1) GT 0).ZG373C                         01111800
&ZXWORKMOD    SETC  ''          RESET IN/OUTPUT                         01111900
&ZMS          SETC  ' '                                                 01112000
&ZMS          SETC  '&ZMS "WORKMOD" KEY AND ITS'                        01112100
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    01112200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01112300
.ZG373C       ANOP  ,                                                   01112400
.*-------------------------------------------------------------------   01112500
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01112600
              AIF   (K'&ZXWORKMOD LE 0).ZG373R  NOT I/O                 01112700
              AIF   ('&XWORKMOD'(1,1) NE '(').ZG373R                    01112800
&ZCGPR        SETC  '&XWORKMOD'(2,K'&XWORKMOD-2)                        01112900
              AIF   ('&ZCGPR'(1,1) NE '0').ZG373P                       01113000
              AIF   (K'&ZCGPR GT 2).ZG373Q                              01113100
              AIF   ('&ZCGPR' EQ '0').ZG373Q                            01113200
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       01113300
              AIF   (T'&ZCGPR NE 'N').ZG373Q    INVALID REG NAME        01113400
.ZG373P       ANOP  ,                                                   01113500
              AIF   (T'&ZCGPR NE 'N').ZG373R    NON NUMERIC             01113600
              AIF   ('&ZCGPR' LT '2').ZG373Q                            01113700
              AIF   ('&ZCGPR' LE '12').ZG373R                           01113800
.ZG373Q       ANOP  ,                                                   01113900
&ZMS          SETC  '"WORKMOD='                                         01114000
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    01114100
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           01114200
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    01114300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01114400
.ZG373R       ANOP  ,                                                   01114500
.*----------------------------------------------------------------***   01114600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01114700
              AIF   (N'&MODLIB LE 1).ZG376A     CK NUM                  01114800
&ZMS          SETC  '"MODLIB='                                          01114900
&ZMS          SETC  '&ZMS.&MODLIB"'                                     01115000
&ZMS          SETC  '&ZMS "MODLIB"'                                     01115100
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01115200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01115300
.ZG376A       ANOP  ,                                                   01115400
.*-------------------------------------------------------------------   01115500
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01115600
&ZXMODLIB     SETC  'INPUT'     SET IN/OUTPUT                           01115700
&XMODLIB      SETC  '0'                                                 01115800
              AIF   (K'&MODLIB(1) LE 0).ZG376B  PARM                    01115900
&XMODLIB      SETC  '&MODLIB(1)'                SET XVARIABLE           01116000
              AIF   (N'&MODLIB GT 1).ZG376B     MULTI                   01116100
&XMODLIB      SETC  '&MODLIB'   SET XVARIABLE                           01116200
.ZG376B       ANOP  ,                                                   01116300
.*-------------------------------------------------------------------   01116400
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01116500
              AIF   (K'&ZXMODLIB LE 0).ZG376R   NOT I/O                 01116600
         AIF   ('&XMODLIB' EQ '0').ZG376R                               01116700
              AIF   ('&XMODLIB'(1,1) NE '(').ZG376R                     01116800
&ZCGPR        SETC  '&XMODLIB'(2,K'&XMODLIB-2)                          01116900
              AIF   ('&ZCGPR'(1,1) NE '0').ZG376P                       01117000
              AIF   (K'&ZCGPR GT 2).ZG376Q                              01117100
              AIF   ('&ZCGPR' EQ '0').ZG376Q                            01117200
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       01117300
              AIF   (T'&ZCGPR NE 'N').ZG376Q    INVALID REG NAME        01117400
.ZG376P       ANOP  ,                                                   01117500
              AIF   (T'&ZCGPR NE 'N').ZG376R    NON NUMERIC             01117600
              AIF   ('&ZCGPR' LT '2').ZG376Q                            01117700
              AIF   ('&ZCGPR' LE '12').ZG376R                           01117800
.ZG376Q       ANOP  ,                                                   01117900
&ZMS          SETC  '"MODLIB='                                          01118000
&ZMS          SETC  '&ZMS.&MODLIB"'                                     01118100
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           01118200
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    01118300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01118400
.ZG376R       ANOP  ,                                                   01118500
.*----------------------------------------------------------------***   01118600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01118700
              AIF   (N'&SNAME LE 1).ZG379A      CK NUM                  01118800
&ZMS          SETC  '"SNAME='                                           01118900
&ZMS          SETC  '&ZMS.&SNAME"'                                      01119000
&ZMS          SETC  '&ZMS "SNAME"'                                      01119100
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01119200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01119300
.ZG379A       ANOP  ,                                                   01119400
.*-------------------------------------------------------------------   01119500
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01119600
&ZXSNAME      SETC  'INPUT'     SET IN/OUTPUT                           01119700
&XSNAME       SETC  '0'                                                 01119800
              AIF   (K'&SNAME(1) LE 0).ZG379B   PARM                    01119900
&XSNAME       SETC  '&SNAME(1)'                 SET XVARIABLE           01120000
              AIF   (N'&SNAME GT 1).ZG379B      MULTI                   01120100
&XSNAME       SETC  '&SNAME'    SET XVARIABLE                           01120200
.ZG379B       ANOP  ,                                                   01120300
.*-------------------------------------------------------------------   01120400
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01120500
              AIF   (K'&ZXSNAME LE 0).ZG379R    NOT I/O                 01120600
         AIF   ('&XSNAME' EQ '0').ZG379R                                01120700
              AIF   ('&XSNAME'(1,1) NE '(').ZG379R                      01120800
&ZCGPR        SETC  '&XSNAME'(2,K'&XSNAME-2)                            01120900
              AIF   ('&ZCGPR'(1,1) NE '0').ZG379P                       01121000
              AIF   (K'&ZCGPR GT 2).ZG379Q                              01121100
              AIF   ('&ZCGPR' EQ '0').ZG379Q                            01121200
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       01121300
              AIF   (T'&ZCGPR NE 'N').ZG379Q    INVALID REG NAME        01121400
.ZG379P       ANOP  ,                                                   01121500
              AIF   (T'&ZCGPR NE 'N').ZG379R    NON NUMERIC             01121600
              AIF   ('&ZCGPR' LT '2').ZG379Q                            01121700
              AIF   ('&ZCGPR' LE '12').ZG379R                           01121800
.ZG379Q       ANOP  ,                                                   01121900
&ZMS          SETC  '"SNAME='                                           01122000
&ZMS          SETC  '&ZMS.&SNAME"'                                      01122100
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           01122200
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    01122300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01122400
.ZG379R       ANOP  ,                                                   01122500
.*----------------------------------------------------------------***   01122600
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01122700
              AIF   (N'&REPLACE LE 1).ZG382A    CK NUM                  01122800
&ZMS          SETC  '"REPLACE='                                         01122900
&ZMS          SETC  '&ZMS.&REPLACE"'                                    01123000
&ZMS          SETC  '&ZMS "REPLACE"'                                    01123100
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01123200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01123300
.ZG382A       ANOP  ,                                                   01123400
.*-------------------------------------------------------------------   01123500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01123600
&XREPLACE     SETC  ''          INITIALIZE XVARIABLE                    01123700
.ZG383A   AIF   ('&REPLACE(1)' NE 'N').ZG384A                           01123800
&XREPLACE     SETC  'N'         SET KEYWORD                             01123900
.*-------------------------------------------------------------------   01124000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01124100
.ZG384A   AIF   ('&REPLACE(1)' NE 'Y').ZG385A                           01124200
&XREPLACE     SETC  'Y'         SET KEYWORD                             01124300
.*-------------------------------------------------------------------   01124400
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01124500
.ZG385A       AIF   (K'&XREPLACE GT 0).ZG385C   KEYWORD                 01124600
              AIF   (K'&REPLACE(1) LE 0).ZG385B                         01124700
&ZMS          SETC  '"REPLACE='                                         01124800
&ZMS          SETC  '&ZMS.&REPLACE"'                                    01124900
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           01125000
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 01125100
&ZMS          SETC  '&ZMS "N"'                                          01125200
&ZMS          SETC  '&ZMS OR "Y".'                                      01125300
              MNOTE 8,' &ZMS '                                          01125400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01125500
.ZG385B       ANOP  ,                                                   01125600
&XREPLACE     SETC  'N'         SET DEFAULT KEYWORD                     01125700
.ZG385C       ANOP  ,                                                   01125800
&ZXREPLACE    SETC  'INPUT'     SET IN/OUTPUT                           01125900
.*-------------------------------------------------------------------   01126000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01126100
.ZG386        ANOP  ,                                                   01126200
&ZTLC         SETC 'SETL'                                               01126300
              AIF   ('&FUNC(1)' NE '&ZTLC').ZG403                       01126400
&XFUNC        SETC  'SETL'      SET KEYWORD                             01126500
              AIF   (N'&FUNC LE 1).ZG386A       CK NUM                  01126600
&ZMS          SETC  '"FUNC='                                            01126700
&ZMS          SETC  '&ZMS.&FUNC"'                                       01126800
&ZMS          SETC  '&ZMS "FUNC"'                                       01126900
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01127000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01127100
.ZG386A       ANOP  ,                                                   01127200
.*------------------------------------------------------------------    01127300
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01127400
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             01127500
.ZG386A0      AIF   (K'&ANAME LE 0).ZG386A1     OK                      01127600
&ZCVAL        SETC '&ZCVAL ANAME'               INCORRECT KEY USED      01127700
.ZG386A1      AIF   (K'&ENAME LE 0).ZG386A2     OK                      01127800
&ZCVAL        SETC '&ZCVAL ENAME'               INCORRECT KEY USED      01127900
.ZG386A2      AIF   (K'&AMODE LE 0).ZG386A3     OK                      01128000
&ZCVAL        SETC '&ZCVAL AMODE'               INCORRECT KEY USED      01128100
.ZG386A3      AIF   (K'&ATYPE LE 0).ZG386A4     OK                      01128200
&ZCVAL        SETC '&ZCVAL ATYPE'               INCORRECT KEY USED      01128300
.ZG386A4      AIF   (K'&DNAME LE 0).ZG386A5     OK                      01128400
&ZCVAL        SETC '&ZCVAL DNAME'               INCORRECT KEY USED      01128500
.ZG386A5      AIF   (K'&SECTION LE 0).ZG386A6   OK                      01128600
&ZCVAL        SETC '&ZCVAL SECTION'             INCORRECT KEY USED      01128700
.ZG386A6      AIF   (K'&BDY LE 0).ZG386A7       OK                      01128800
&ZCVAL        SETC '&ZCVAL BDY'                 INCORRECT KEY USED      01128900
.ZG386A7      AIF   (K'&CLASSL LE 0).ZG386A8    OK                      01129000
&ZCVAL        SETC '&ZCVAL CLASSL'              INCORRECT KEY USED      01129100
.ZG386A8      AIF   (K'&OLDNAME LE 0).ZG386A9   OK                      01129200
&ZCVAL        SETC '&ZCVAL OLDNAME'             INCORRECT KEY USED      01129300
.ZG386A9      AIF   (K'&NEWNAME LE 0).ZG386A10  OK                      01129400
&ZCVAL        SETC '&ZCVAL NEWNAME'             INCORRECT KEY USED      01129500
.ZG386A10     AIF   (K'&COUNT LE 0).ZG386A11    OK                      01129600
&ZCVAL        SETC '&ZCVAL COUNT'               INCORRECT KEY USED      01129700
.ZG386A11     AIF   (K'&MODE LE 0).ZG386A12     OK                      01129800
&ZCVAL        SETC '&ZCVAL MODE'                INCORRECT KEY USED      01129900
.ZG386A12     AIF   (K'&CLASS LE 0).ZG386A13    OK                      01130000
&ZCVAL        SETC '&ZCVAL CLASS'               INCORRECT KEY USED      01130100
.ZG386A13     AIF   (K'&DIALOG LE 0).ZG386A14   OK                      01130200
&ZCVAL        SETC '&ZCVAL DIALOG'              INCORRECT KEY USED      01130300
.ZG386A14     AIF   (K'&INTENT LE 0).ZG386A15   OK                      01130400
&ZCVAL        SETC '&ZCVAL INTENT'              INCORRECT KEY USED      01130500
.ZG386A15     AIF   (K'&PROTECT LE 0).ZG386A16  OK                      01130600
&ZCVAL        SETC '&ZCVAL PROTECT'             INCORRECT KEY USED      01130700
.ZG386A16     AIF   (K'&RENAMEL LE 0).ZG386A17  OK                      01130800
&ZCVAL        SETC '&ZCVAL RENAMEL'             INCORRECT KEY USED      01130900
.ZG386A17     AIF   (K'&AREA LE 0).ZG386A18     OK                      01131000
&ZCVAL        SETC '&ZCVAL AREA'                INCORRECT KEY USED      01131100
.ZG386A18     AIF   (K'&CURSOR LE 0).ZG386A19   OK                      01131200
&ZCVAL        SETC '&ZCVAL CURSOR'              INCORRECT KEY USED      01131300
.ZG386A19     AIF   (K'&RELOC LE 0).ZG386A20    OK                      01131400
&ZCVAL        SETC '&ZCVAL RELOC'               INCORRECT KEY USED      01131500
.ZG386A20     AIF   (K'&RECTYPE LE 0).ZG386A21  OK                      01131600
&ZCVAL        SETC '&ZCVAL RECTYPE'             INCORRECT KEY USED      01131700
.ZG386A21     AIF   (K'&OFFSET LE 0).ZG386A22   OK                      01131800
&ZCVAL        SETC '&ZCVAL OFFSET'              INCORRECT KEY USED      01131900
.ZG386A22     AIF   (K'&TCOUNT LE 0).ZG386A23   OK                      01132000
&ZCVAL        SETC '&ZCVAL TCOUNT'              INCORRECT KEY USED      01132100
.ZG386A23     AIF   (K'&NTYPE LE 0).ZG386A24    OK                      01132200
&ZCVAL        SETC '&ZCVAL NTYPE'               INCORRECT KEY USED      01132300
.ZG386A24     AIF   (K'&CULIST LE 0).ZG386A25   OK                      01132400
&ZCVAL        SETC '&ZCVAL CULIST'              INCORRECT KEY USED      01132500
.ZG386A25     AIF   (K'&ITYPE LE 0).ZG386A26    OK                      01132600
&ZCVAL        SETC '&ZCVAL ITYPE'               INCORRECT KEY USED      01132700
.ZG386A26     AIF   (K'&DLLNAME LE 0).ZG386A27  OK                      01132800
&ZCVAL        SETC '&ZCVAL DLLNAME'             INCORRECT KEY USED      01132900
.ZG386A27     AIF   (K'&INAME LE 0).ZG386A28    OK                      01133000
&ZCVAL        SETC '&ZCVAL INAME'               INCORRECT KEY USED      01133100
.ZG386A28     AIF   (K'&INTYPE LE 0).ZG386A29   OK                      01133200
&ZCVAL        SETC '&ZCVAL INTYPE'              INCORRECT KEY USED      01133300
.ZG386A29     AIF   (K'&DDNAME LE 0).ZG386A30   OK                      01133400
&ZCVAL        SETC '&ZCVAL DDNAME'              INCORRECT KEY USED      01133500
.ZG386A30     AIF   (K'&DEPTR LE 0).ZG386A31    OK                      01133600
&ZCVAL        SETC '&ZCVAL DEPTR'               INCORRECT KEY USED      01133700
.ZG386A31     AIF   (K'&MEMBER LE 0).ZG386A32   OK                      01133800
&ZCVAL        SETC '&ZCVAL MEMBER'              INCORRECT KEY USED      01133900
.ZG386A32     AIF   (K'&DCBPTR LE 0).ZG386A33   OK                      01134000
&ZCVAL        SETC '&ZCVAL DCBPTR'              INCORRECT KEY USED      01134100
.ZG386A33     AIF   (K'&EPTOKEN LE 0).ZG386A34  OK                      01134200
&ZCVAL        SETC '&ZCVAL EPTOKEN'             INCORRECT KEY USED      01134300
.ZG386A34     AIF   (K'&ATTRIB LE 0).ZG386A35   OK                      01134400
&ZCVAL        SETC '&ZCVAL ATTRIB'              INCORRECT KEY USED      01134500
.ZG386A35     AIF   (K'&ALIASES LE 0).ZG386A36  OK                      01134600
&ZCVAL        SETC '&ZCVAL ALIASES'             INCORRECT KEY USED      01134700
.ZG386A36     AIF   (K'&IMPORTS LE 0).ZG386A37  OK                      01134800
&ZCVAL        SETC '&ZCVAL IMPORTS'             INCORRECT KEY USED      01134900
.ZG386A37     AIF   (K'&EPLOC LE 0).ZG386A38    OK                      01135000
&ZCVAL        SETC '&ZCVAL EPLOC'               INCORRECT KEY USED      01135100
.ZG386A38     AIF   (K'&IDENTIFY LE 0).ZG386A39  OK                     01135200
&ZCVAL        SETC '&ZCVAL IDENTIFY'            INCORRECT KEY USED      01135300
.ZG386A39     AIF   (K'&EXTLST LE 0).ZG386A40   OK                      01135400
&ZCVAL        SETC '&ZCVAL EXTLST'              INCORRECT KEY USED      01135500
.ZG386A40     AIF   (K'&LNAME LE 0).ZG386A41    OK                      01135600
&ZCVAL        SETC '&ZCVAL LNAME'               INCORRECT KEY USED      01135700
.ZG386A41     AIF   (K'&NEWSECT LE 0).ZG386A42  OK                      01135800
&ZCVAL        SETC '&ZCVAL NEWSECT'             INCORRECT KEY USED      01135900
.ZG386A42     AIF   (K'&ENDDATA LE 0).ZG386A43  OK                      01136000
&ZCVAL        SETC '&ZCVAL ENDDATA'             INCORRECT KEY USED      01136100
.ZG386A43     AIF   (K'&MODLIB LE 0).ZG386A44   OK                      01136200
&ZCVAL        SETC '&ZCVAL MODLIB'              INCORRECT KEY USED      01136300
.ZG386A44     AIF   (K'&SNAME LE 0).ZG386A45    OK                      01136400
&ZCVAL        SETC '&ZCVAL SNAME'               INCORRECT KEY USED      01136500
.ZG386A45     AIF   (K'&REPLACE LE 0).ZG386A46  OK                      01136600
&ZCVAL        SETC '&ZCVAL REPLACE'             INCORRECT KEY USED      01136700
.ZG386A46     AIF   (K'&OPTION LE 0).ZG386A47   OK                      01136800
&ZCVAL        SETC '&ZCVAL OPTION'              INCORRECT KEY USED      01136900
.ZG386A47     AIF   (K'&OPTVAL LE 0).ZG386A48   OK                      01137000
&ZCVAL        SETC '&ZCVAL OPTVAL'              INCORRECT KEY USED      01137100
.ZG386A48     AIF   (K'&PARMS LE 0).ZG386A49    OK                      01137200
&ZCVAL        SETC '&ZCVAL PARMS'               INCORRECT KEY USED      01137300
.ZG386A49     AIF   (K'&FILES LE 0).ZG386A50    OK                      01137400
&ZCVAL        SETC '&ZCVAL FILES'               INCORRECT KEY USED      01137500
.ZG386A50     AIF   (K'&EXITS LE 0).ZG386A51    OK                      01137600
&ZCVAL        SETC '&ZCVAL EXITS'               INCORRECT KEY USED      01137700
.ZG386A51     AIF   (K'&OPTIONS LE 0).ZG386A52  OK                      01137800
&ZCVAL        SETC '&ZCVAL OPTIONS'             INCORRECT KEY USED      01137900
.ZG386A52     AIF   (K'&ENVARS LE 0).ZG386A53   OK                      01138000
&ZCVAL        SETC '&ZCVAL ENVARS'              INCORRECT KEY USED      01138100
.ZG386A53     AIF   (K'&ORIGIN LE 0).ZG386A54   OK                      01138200
&ZCVAL        SETC '&ZCVAL ORIGIN'              INCORRECT KEY USED      01138300
.ZG386A54     AIF   (K'&REGION LE 0).ZG386A55   OK                      01138400
&ZCVAL        SETC '&ZCVAL REGION'              INCORRECT KEY USED      01138500
.ZG386A55     AIF   (K'&ZCVAL LE 0).ZG386A56    OK                      01138600
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               01138700
              AIF  (K'&ZCVAL LE 160).ZG386A56A                          01138800
&ZCVAL        SETC '&ZCVAL'(1,160)                                      01138900
&ZCVAL        SETC '&ZCVAL....'                                         01139000
.ZG386A56A    ANOP                                                      01139100
&ZMS          SETC  '"FUNC'                                             01139200
&ZMS          SETC  '&ZMS.=&FUNC"'                                      01139300
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                01139400
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                01139500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01139600
.ZG386A56     ANOP  ,                                                   01139700
.*----------------------------------------------------------------***   01139800
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01139900
              AIF   (N'&WORKMOD LE 1).ZG388A    CK NUM                  01140000
&ZMS          SETC  '"WORKMOD='                                         01140100
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    01140200
&ZMS          SETC  '&ZMS "WORKMOD"'                                    01140300
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01140400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01140500
.ZG388A       ANOP  ,                                                   01140600
.*-------------------------------------------------------------------   01140700
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01140800
&ZXWORKMOD    SETC  'INPUT'     SET IN/OUTPUT                           01140900
&XWORKMOD     SETC  '&WORKMOD(1)'               SET XVARIABLE           01141000
              AIF   (N'&WORKMOD GT 1).ZG388B    MULTI                   01141100
&XWORKMOD     SETC  '&WORKMOD'  SET XVARIABLE                           01141200
.ZG388B       AIF   (K'&WORKMOD(1) GT 0).ZG388C                         01141300
&ZXWORKMOD    SETC  ''          RESET IN/OUTPUT                         01141400
&ZMS          SETC  ' '                                                 01141500
&ZMS          SETC  '&ZMS "WORKMOD" KEY AND ITS'                        01141600
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    01141700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01141800
.ZG388C       ANOP  ,                                                   01141900
.*-------------------------------------------------------------------   01142000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01142100
              AIF   (K'&ZXWORKMOD LE 0).ZG388R  NOT I/O                 01142200
              AIF   ('&XWORKMOD'(1,1) NE '(').ZG388R                    01142300
&ZCGPR        SETC  '&XWORKMOD'(2,K'&XWORKMOD-2)                        01142400
              AIF   ('&ZCGPR'(1,1) NE '0').ZG388P                       01142500
              AIF   (K'&ZCGPR GT 2).ZG388Q                              01142600
              AIF   ('&ZCGPR' EQ '0').ZG388Q                            01142700
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       01142800
              AIF   (T'&ZCGPR NE 'N').ZG388Q    INVALID REG NAME        01142900
.ZG388P       ANOP  ,                                                   01143000
              AIF   (T'&ZCGPR NE 'N').ZG388R    NON NUMERIC             01143100
              AIF   ('&ZCGPR' LT '2').ZG388Q                            01143200
              AIF   ('&ZCGPR' LE '12').ZG388R                           01143300
.ZG388Q       ANOP  ,                                                   01143400
&ZMS          SETC  '"WORKMOD='                                         01143500
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    01143600
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           01143700
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    01143800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01143900
.ZG388R       ANOP  ,                                                   01144000
.*----------------------------------------------------------------***   01144100
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01144200
              AIF   (N'&SYMBOL LE 1).ZG391A     CK NUM                  01144300
&ZMS          SETC  '"SYMBOL='                                          01144400
&ZMS          SETC  '&ZMS.&SYMBOL"'                                     01144500
&ZMS          SETC  '&ZMS "SYMBOL"'                                     01144600
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01144700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01144800
.ZG391A       ANOP  ,                                                   01144900
.*-------------------------------------------------------------------   01145000
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01145100
&ZXSYMBOL     SETC  'INPUT'     SET IN/OUTPUT                           01145200
&XSYMBOL      SETC  '0'                                                 01145300
              AIF   (K'&SYMBOL(1) LE 0).ZG391B  PARM                    01145400
&XSYMBOL      SETC  '&SYMBOL(1)'                SET XVARIABLE           01145500
              AIF   (N'&SYMBOL GT 1).ZG391B     MULTI                   01145600
&XSYMBOL      SETC  '&SYMBOL'   SET XVARIABLE                           01145700
.ZG391B       ANOP  ,                                                   01145800
.*-------------------------------------------------------------------   01145900
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01146000
              AIF   (K'&ZXSYMBOL LE 0).ZG391R   NOT I/O                 01146100
         AIF   ('&XSYMBOL' EQ '0').ZG391R                               01146200
              AIF   ('&XSYMBOL'(1,1) NE '(').ZG391R                     01146300
&ZCGPR        SETC  '&XSYMBOL'(2,K'&XSYMBOL-2)                          01146400
              AIF   ('&ZCGPR'(1,1) NE '0').ZG391P                       01146500
              AIF   (K'&ZCGPR GT 2).ZG391Q                              01146600
              AIF   ('&ZCGPR' EQ '0').ZG391Q                            01146700
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       01146800
              AIF   (T'&ZCGPR NE 'N').ZG391Q    INVALID REG NAME        01146900
.ZG391P       ANOP  ,                                                   01147000
              AIF   (T'&ZCGPR NE 'N').ZG391R    NON NUMERIC             01147100
              AIF   ('&ZCGPR' LT '2').ZG391Q                            01147200
              AIF   ('&ZCGPR' LE '12').ZG391R                           01147300
.ZG391Q       ANOP  ,                                                   01147400
&ZMS          SETC  '"SYMBOL='                                          01147500
&ZMS          SETC  '&ZMS.&SYMBOL"'                                     01147600
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           01147700
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    01147800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01147900
.ZG391R       ANOP  ,                                                   01148000
.*----------------------------------------------------------------***   01148100
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01148200
              AIF   (N'&LIBOPT LE 1).ZG394A     CK NUM                  01148300
&ZMS          SETC  '"LIBOPT='                                          01148400
&ZMS          SETC  '&ZMS.&LIBOPT"'                                     01148500
&ZMS          SETC  '&ZMS "LIBOPT"'                                     01148600
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01148700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01148800
.ZG394A       ANOP  ,                                                   01148900
.*-------------------------------------------------------------------   01149000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01149100
&XLIBOPT      SETC  ''          INITIALIZE XVARIABLE                    01149200
.ZG395A   AIF   ('&LIBOPT(1)' NE 'C').ZG396A                            01149300
&XLIBOPT      SETC  'C'         SET KEYWORD                             01149400
.*-------------------------------------------------------------------   01149500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01149600
.ZG396A   AIF   ('&LIBOPT(1)' NE 'N').ZG397A                            01149700
&XLIBOPT      SETC  'N'         SET KEYWORD                             01149800
.*-------------------------------------------------------------------   01149900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01150000
.ZG397A   AIF   ('&LIBOPT(1)' NE 'E').ZG398A                            01150100
&XLIBOPT      SETC  'E'         SET KEYWORD                             01150200
.*-------------------------------------------------------------------   01150300
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01150400
.ZG398A       AIF   (K'&XLIBOPT GT 0).ZG398C    KEYWORD                 01150500
              AIF   (K'&LIBOPT(1) LE 0).ZG398B                          01150600
&ZMS          SETC  '"LIBOPT='                                          01150700
&ZMS          SETC  '&ZMS.&LIBOPT"'                                     01150800
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           01150900
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 01151000
&ZMS          SETC  '&ZMS "C",'                                         01151100
&ZMS          SETC  '&ZMS "N",'                                         01151200
&ZMS          SETC  '&ZMS OR "E".'                                      01151300
              MNOTE 8,' &ZMS '                                          01151400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01151500
.ZG398B       ANOP  ,                                                   01151600
&XLIBOPT      SETC  'C'         SET DEFAULT KEYWORD                     01151700
.ZG398C       ANOP  ,                                                   01151800
&ZXLIBOPT     SETC  'INPUT'     SET IN/OUTPUT                           01151900
.*----------------------------------------------------------------***   01152000
.***AG.KMEKY01 NAME, OPT INPUT, ME KEYS -XVARIABLE                      01152100
&XPATHLIB     SETC  ''          INITIALIZE XVARIABLE                    01152200
              AIF   (K'&CALLIB LE 0).ZG400C                             01152300
&ZXPATHLIB    SETC  'INPUT'     SET IN/OUTPUT                           01152400
&XPATHLIB     SETC  'CALLIB'    SET XVARIABLE                           01152500
&ZXCALLIB     SETC  'INPUT'     SET IN/OUTPUT                           01152600
&XCALLIB      SETC  '&CALLIB(1)'                SET XVARIABLE PARM      01152700
              AIF   (N'&CALLIB GT 1).ZG400A                             01152800
&XCALLIB      SETC  '&CALLIB'   SET XVARIABLE PARM                      01152900
.ZG400A       AIF   (N'&CALLIB LE 1).ZG400B     CK NUM                  01153000
&ZMS          SETC  '"CALLIB='                                          01153100
&ZMS          SETC  '&ZMS.&CALLIB"'                                     01153200
&ZMS          SETC  '&ZMS "CALLIB"'                                     01153300
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01153400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01153500
.ZG400B       AIF   (K'&XCALLIB GT 0).ZG400C    ONE PARM                01153600
&ZXPATHLIB    SETC  ''          RESET IN/OUTPUT                         01153700
&ZXCALLIB     SETC  ''          RESET IN/OUTPUT                         01153800
&ZMS          SETC  'WHEN "SETL" IS SPECIFIED'                          01153900
&ZMS          SETC  '&ZMS , "CALLIB" KEY AND ITS'                       01154000
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    01154100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01154200
.ZG400C       ANOP  ,                                                   01154300
.*----------------------------------------------------------------***   01154400
.***AG.KMEKY02 NAME, OPT INPUT, ME KEYS -XVARIABLE                      01154500
              AIF   (K'&PATHNAME LE 0).ZG401D   NO ME KEY               01154600
              AIF   (N'&PATHNAME LE 1).ZG401A   CK NUM                  01154700
&ZMS          SETC  '"PATHNAME='                                        01154800
&ZMS          SETC  '&ZMS.&PATHNAME"'                                   01154900
&ZMS          SETC  '&ZMS "PATHNAME"'                                   01155000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01155100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01155200
.ZG401A       AIF   (K'&XPATHLIB LE 0).ZG401B                           01155300
&ZMS          SETC  '"PATHNAME'                                         01155400
&ZMS          SETC  '&ZMS.=&PATHNAME"'                                  01155500
&ZMS          SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'               01155600
&ZMS          SETC  '&ZMS "&XPATHLIB"'                                  01155700
              MNOTE 8,' &ZMS KEY.'                                      01155800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01155900
              AGO   .ZG401D                                             01156000
.*                                                                      01156100
.ZG401B       ANOP  ,                                                   01156200
&ZXPATHLIB    SETC  'INPUT'     SET IN/OUTPUT                           01156300
&XPATHLIB     SETC  'PATHNAME'  SET XVARIABLE                           01156400
&ZXPATHNAME   SETC  'INPUT'     SET IN/OUTPUT                           01156500
&XPATHNAME    SETC  '&PATHNAME(1)'              SET XVARIABLE PARM      01156600
              AIF   (N'&PATHNAME GT 1).ZG401C                           01156700
&XPATHNAME    SETC  '&PATHNAME'                 SET XVARIABLE PARM      01156800
.ZG401C       AIF   (K'&XPATHNAME GT 0).ZG401D  ONE PARM                01156900
&ZXPATHLIB    SETC  ''          RESET IN/OUTPUT                         01157000
&ZXPATHNAME   SETC  ''          RESET IN/OUTPUT                         01157100
&ZMS          SETC  'WHEN "SETL" IS SPECIFIED'                          01157200
&ZMS          SETC  '&ZMS , "PATHNAME" KEY AND ITS'                     01157300
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    01157400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01157500
.ZG401D       ANOP  ,                                                   01157600
.*------------------------------------------------------------------    01157700
.***AG.KMEKY07 NAME, OPT INPUT, ME KEYS -CHECK IF KEY ENTERED           01157800
              AIF   (K'&XPATHLIB GT 0).ZG402B                           01157900
&ZXPATHLIB    SETC  'INPUT'     SET IN/OUTPUT                           01158000
&XPATHLIB     SETC  'CALLIB'    SET DEFAULT                             01158100
&ZXCALLIB     SETC  'INPUT'     SET IN/OUTPUT                           01158200
&XCALLIB      SETC  '0'         SET DEFAULT PARM                        01158300
.ZG402B       ANOP  ,                                                   01158400
.*-------------------------------------------------------------------   01158500
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 01158600
              AIF   (K'&ZXPATHNAME LE 0).ZG402R  NOT I/O                01158700
              AIF   ('&XPATHNAME'(1,1) NE '(').ZG402R                   01158800
&ZCGPR        SETC  '&XPATHNAME'(2,K'&XPATHNAME-2)                      01158900
              AIF   ('&ZCGPR'(1,1) NE '0').ZG402P                       01159000
              AIF   (K'&ZCGPR GT 2).ZG402Q                              01159100
              AIF   ('&ZCGPR' EQ '0').ZG402Q                            01159200
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       01159300
              AIF   (T'&ZCGPR NE 'N').ZG402Q    INVALID REG NAME        01159400
.ZG402P       ANOP  ,                                                   01159500
              AIF   (T'&ZCGPR NE 'N').ZG402R    NON NUMERIC             01159600
              AIF   ('&ZCGPR' LT '2').ZG402Q                            01159700
              AIF   ('&ZCGPR' LE '12').ZG402R                           01159800
.ZG402Q       ANOP  ,                                                   01159900
&ZMS          SETC  '"PATHNAME='                                        01160000
&ZMS          SETC  '&ZMS.&PATHNAME"'                                   01160100
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           01160200
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    01160300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01160400
.ZG402R       ANOP  ,                                                   01160500
.*-------------------------------------------------------------------   01160600
.***AG.KMEKY13 NAME, OPT INPUT, ME KEYS -PROCESS DEPENDENCIES           01160700
.ZG400ZY  AIF    ('&XPATHLIB' NE 'CALLIB').ZG401ZY                      01160800
.*-------------------------------------------------------------------   01160900
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 01161000
              AIF   (K'&ZXCALLIB LE 0).ZG400R   NOT I/O                 01161100
              AIF   ('&XCALLIB'(1,1) NE '(').ZG400R                     01161200
&ZCGPR        SETC  '&XCALLIB'(2,K'&XCALLIB-2)                          01161300
              AIF   ('&ZCGPR'(1,1) NE '0').ZG400P                       01161400
              AIF   (K'&ZCGPR GT 2).ZG400Q                              01161500
              AIF   ('&ZCGPR' EQ '0').ZG400Q                            01161600
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       01161700
              AIF   (T'&ZCGPR NE 'N').ZG400Q    INVALID REG NAME        01161800
.ZG400P       ANOP  ,                                                   01161900
              AIF   (T'&ZCGPR NE 'N').ZG400R    NON NUMERIC             01162000
              AIF   ('&ZCGPR' LT '2').ZG400Q                            01162100
              AIF   ('&ZCGPR' LE '12').ZG400R                           01162200
.ZG400Q       ANOP  ,                                                   01162300
&ZMS          SETC  '"CALLIB='                                          01162400
&ZMS          SETC  '&ZMS.&CALLIB"'                                     01162500
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           01162600
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    01162700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01162800
.ZG400R       ANOP  ,                                                   01162900
.*-------------------------------------------------------------------   01163000
.***AG.KMEKY13 NAME, OPT INPUT, ME KEYS -PROCESS DEPENDENCIES           01163100
.ZG401ZY  AIF    ('&XPATHLIB' NE 'PATHNAME').ZG402ZY                    01163200
.*-------------------------------------------------------------------   01163300
.***AG.KCK02 NAME, OPT INPUT, ME KEYS -GPR OUT OF RANGE                 01163400
              AIF   (K'&ZXPATHNAME LE 0).ZG401R  NOT I/O                01163500
              AIF   ('&XPATHNAME'(1,1) NE '(').ZG401R                   01163600
&ZCGPR        SETC  '&XPATHNAME'(2,K'&XPATHNAME-2)                      01163700
              AIF   ('&ZCGPR'(1,1) NE '0').ZG401P                       01163800
              AIF   (K'&ZCGPR GT 2).ZG401Q                              01163900
              AIF   ('&ZCGPR' EQ '0').ZG401Q                            01164000
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       01164100
              AIF   (T'&ZCGPR NE 'N').ZG401Q    INVALID REG NAME        01164200
.ZG401P       ANOP  ,                                                   01164300
              AIF   (T'&ZCGPR NE 'N').ZG401R    NON NUMERIC             01164400
              AIF   ('&ZCGPR' LT '2').ZG401Q                            01164500
              AIF   ('&ZCGPR' LE '12').ZG401R                           01164600
.ZG401Q       ANOP  ,                                                   01164700
&ZMS          SETC  '"PATHNAME='                                        01164800
&ZMS          SETC  '&ZMS.&PATHNAME"'                                   01164900
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           01165000
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    01165100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01165200
.ZG401R       ANOP  ,                                                   01165300
.*-------------------------------------------------------------------   01165400
.***AG.KMEKY15 NAME, OPT INPUT, ME KEYS -END                            01165500
.ZG402ZY      ANOP ,            END MUTUALLY EXCLUSIVE KEYS             01165600
.*-------------------------------------------------------------------   01165700
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01165800
.ZG403        ANOP  ,                                                   01165900
&ZTLC         SETC 'SETO'                                               01166000
              AIF   ('&FUNC(1)' NE '&ZTLC').ZG417                       01166100
&XFUNC        SETC  'SETO'      SET KEYWORD                             01166200
              AIF   (N'&FUNC LE 1).ZG403A       CK NUM                  01166300
&ZMS          SETC  '"FUNC='                                            01166400
&ZMS          SETC  '&ZMS.&FUNC"'                                       01166500
&ZMS          SETC  '&ZMS "FUNC"'                                       01166600
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01166700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01166800
.ZG403A       ANOP  ,                                                   01166900
.*------------------------------------------------------------------    01167000
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01167100
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             01167200
.ZG403A0      AIF   (K'&ANAME LE 0).ZG403A1     OK                      01167300
&ZCVAL        SETC '&ZCVAL ANAME'               INCORRECT KEY USED      01167400
.ZG403A1      AIF   (K'&ENAME LE 0).ZG403A2     OK                      01167500
&ZCVAL        SETC '&ZCVAL ENAME'               INCORRECT KEY USED      01167600
.ZG403A2      AIF   (K'&AMODE LE 0).ZG403A3     OK                      01167700
&ZCVAL        SETC '&ZCVAL AMODE'               INCORRECT KEY USED      01167800
.ZG403A3      AIF   (K'&ATYPE LE 0).ZG403A4     OK                      01167900
&ZCVAL        SETC '&ZCVAL ATYPE'               INCORRECT KEY USED      01168000
.ZG403A4      AIF   (K'&DNAME LE 0).ZG403A5     OK                      01168100
&ZCVAL        SETC '&ZCVAL DNAME'               INCORRECT KEY USED      01168200
.ZG403A5      AIF   (K'&SECTION LE 0).ZG403A6   OK                      01168300
&ZCVAL        SETC '&ZCVAL SECTION'             INCORRECT KEY USED      01168400
.ZG403A6      AIF   (K'&BDY LE 0).ZG403A7       OK                      01168500
&ZCVAL        SETC '&ZCVAL BDY'                 INCORRECT KEY USED      01168600
.ZG403A7      AIF   (K'&CLASSL LE 0).ZG403A8    OK                      01168700
&ZCVAL        SETC '&ZCVAL CLASSL'              INCORRECT KEY USED      01168800
.ZG403A8      AIF   (K'&OLDNAME LE 0).ZG403A9   OK                      01168900
&ZCVAL        SETC '&ZCVAL OLDNAME'             INCORRECT KEY USED      01169000
.ZG403A9      AIF   (K'&NEWNAME LE 0).ZG403A10  OK                      01169100
&ZCVAL        SETC '&ZCVAL NEWNAME'             INCORRECT KEY USED      01169200
.ZG403A10     AIF   (K'&COUNT LE 0).ZG403A11    OK                      01169300
&ZCVAL        SETC '&ZCVAL COUNT'               INCORRECT KEY USED      01169400
.ZG403A11     AIF   (K'&MODE LE 0).ZG403A12     OK                      01169500
&ZCVAL        SETC '&ZCVAL MODE'                INCORRECT KEY USED      01169600
.ZG403A12     AIF   (K'&CLASS LE 0).ZG403A13    OK                      01169700
&ZCVAL        SETC '&ZCVAL CLASS'               INCORRECT KEY USED      01169800
.ZG403A13     AIF   (K'&CALLIB LE 0).ZG403A14   OK                      01169900
&ZCVAL        SETC '&ZCVAL CALLIB'              INCORRECT KEY USED      01170000
.ZG403A14     AIF   (K'&PATHNAME LE 0).ZG403A15  OK                     01170100
&ZCVAL        SETC '&ZCVAL PATHNAME'            INCORRECT KEY USED      01170200
.ZG403A15     AIF   (K'&INTENT LE 0).ZG403A16   OK                      01170300
&ZCVAL        SETC '&ZCVAL INTENT'              INCORRECT KEY USED      01170400
.ZG403A16     AIF   (K'&PROTECT LE 0).ZG403A17  OK                      01170500
&ZCVAL        SETC '&ZCVAL PROTECT'             INCORRECT KEY USED      01170600
.ZG403A17     AIF   (K'&RENAMEL LE 0).ZG403A18  OK                      01170700
&ZCVAL        SETC '&ZCVAL RENAMEL'             INCORRECT KEY USED      01170800
.ZG403A18     AIF   (K'&AREA LE 0).ZG403A19     OK                      01170900
&ZCVAL        SETC '&ZCVAL AREA'                INCORRECT KEY USED      01171000
.ZG403A19     AIF   (K'&CURSOR LE 0).ZG403A20   OK                      01171100
&ZCVAL        SETC '&ZCVAL CURSOR'              INCORRECT KEY USED      01171200
.ZG403A20     AIF   (K'&RELOC LE 0).ZG403A21    OK                      01171300
&ZCVAL        SETC '&ZCVAL RELOC'               INCORRECT KEY USED      01171400
.ZG403A21     AIF   (K'&RECTYPE LE 0).ZG403A22  OK                      01171500
&ZCVAL        SETC '&ZCVAL RECTYPE'             INCORRECT KEY USED      01171600
.ZG403A22     AIF   (K'&OFFSET LE 0).ZG403A23   OK                      01171700
&ZCVAL        SETC '&ZCVAL OFFSET'              INCORRECT KEY USED      01171800
.ZG403A23     AIF   (K'&SYMBOL LE 0).ZG403A24   OK                      01171900
&ZCVAL        SETC '&ZCVAL SYMBOL'              INCORRECT KEY USED      01172000
.ZG403A24     AIF   (K'&TCOUNT LE 0).ZG403A25   OK                      01172100
&ZCVAL        SETC '&ZCVAL TCOUNT'              INCORRECT KEY USED      01172200
.ZG403A25     AIF   (K'&NTYPE LE 0).ZG403A26    OK                      01172300
&ZCVAL        SETC '&ZCVAL NTYPE'               INCORRECT KEY USED      01172400
.ZG403A26     AIF   (K'&CULIST LE 0).ZG403A27   OK                      01172500
&ZCVAL        SETC '&ZCVAL CULIST'              INCORRECT KEY USED      01172600
.ZG403A27     AIF   (K'&ITYPE LE 0).ZG403A28    OK                      01172700
&ZCVAL        SETC '&ZCVAL ITYPE'               INCORRECT KEY USED      01172800
.ZG403A28     AIF   (K'&DLLNAME LE 0).ZG403A29  OK                      01172900
&ZCVAL        SETC '&ZCVAL DLLNAME'             INCORRECT KEY USED      01173000
.ZG403A29     AIF   (K'&INAME LE 0).ZG403A30    OK                      01173100
&ZCVAL        SETC '&ZCVAL INAME'               INCORRECT KEY USED      01173200
.ZG403A30     AIF   (K'&INTYPE LE 0).ZG403A31   OK                      01173300
&ZCVAL        SETC '&ZCVAL INTYPE'              INCORRECT KEY USED      01173400
.ZG403A31     AIF   (K'&DDNAME LE 0).ZG403A32   OK                      01173500
&ZCVAL        SETC '&ZCVAL DDNAME'              INCORRECT KEY USED      01173600
.ZG403A32     AIF   (K'&DEPTR LE 0).ZG403A33    OK                      01173700
&ZCVAL        SETC '&ZCVAL DEPTR'               INCORRECT KEY USED      01173800
.ZG403A33     AIF   (K'&MEMBER LE 0).ZG403A34   OK                      01173900
&ZCVAL        SETC '&ZCVAL MEMBER'              INCORRECT KEY USED      01174000
.ZG403A34     AIF   (K'&DCBPTR LE 0).ZG403A35   OK                      01174100
&ZCVAL        SETC '&ZCVAL DCBPTR'              INCORRECT KEY USED      01174200
.ZG403A35     AIF   (K'&EPTOKEN LE 0).ZG403A36  OK                      01174300
&ZCVAL        SETC '&ZCVAL EPTOKEN'             INCORRECT KEY USED      01174400
.ZG403A36     AIF   (K'&ATTRIB LE 0).ZG403A37   OK                      01174500
&ZCVAL        SETC '&ZCVAL ATTRIB'              INCORRECT KEY USED      01174600
.ZG403A37     AIF   (K'&ALIASES LE 0).ZG403A38  OK                      01174700
&ZCVAL        SETC '&ZCVAL ALIASES'             INCORRECT KEY USED      01174800
.ZG403A38     AIF   (K'&IMPORTS LE 0).ZG403A39  OK                      01174900
&ZCVAL        SETC '&ZCVAL IMPORTS'             INCORRECT KEY USED      01175000
.ZG403A39     AIF   (K'&EPLOC LE 0).ZG403A40    OK                      01175100
&ZCVAL        SETC '&ZCVAL EPLOC'               INCORRECT KEY USED      01175200
.ZG403A40     AIF   (K'&IDENTIFY LE 0).ZG403A41  OK                     01175300
&ZCVAL        SETC '&ZCVAL IDENTIFY'            INCORRECT KEY USED      01175400
.ZG403A41     AIF   (K'&EXTLST LE 0).ZG403A42   OK                      01175500
&ZCVAL        SETC '&ZCVAL EXTLST'              INCORRECT KEY USED      01175600
.ZG403A42     AIF   (K'&LNAME LE 0).ZG403A43    OK                      01175700
&ZCVAL        SETC '&ZCVAL LNAME'               INCORRECT KEY USED      01175800
.ZG403A43     AIF   (K'&NEWSECT LE 0).ZG403A44  OK                      01175900
&ZCVAL        SETC '&ZCVAL NEWSECT'             INCORRECT KEY USED      01176000
.ZG403A44     AIF   (K'&ENDDATA LE 0).ZG403A45  OK                      01176100
&ZCVAL        SETC '&ZCVAL ENDDATA'             INCORRECT KEY USED      01176200
.ZG403A45     AIF   (K'&MODLIB LE 0).ZG403A46   OK                      01176300
&ZCVAL        SETC '&ZCVAL MODLIB'              INCORRECT KEY USED      01176400
.ZG403A46     AIF   (K'&SNAME LE 0).ZG403A47    OK                      01176500
&ZCVAL        SETC '&ZCVAL SNAME'               INCORRECT KEY USED      01176600
.ZG403A47     AIF   (K'&REPLACE LE 0).ZG403A48  OK                      01176700
&ZCVAL        SETC '&ZCVAL REPLACE'             INCORRECT KEY USED      01176800
.ZG403A48     AIF   (K'&LIBOPT LE 0).ZG403A49   OK                      01176900
&ZCVAL        SETC '&ZCVAL LIBOPT'              INCORRECT KEY USED      01177000
.ZG403A49     AIF   (K'&FILES LE 0).ZG403A50    OK                      01177100
&ZCVAL        SETC '&ZCVAL FILES'               INCORRECT KEY USED      01177200
.ZG403A50     AIF   (K'&EXITS LE 0).ZG403A51    OK                      01177300
&ZCVAL        SETC '&ZCVAL EXITS'               INCORRECT KEY USED      01177400
.ZG403A51     AIF   (K'&OPTIONS LE 0).ZG403A52  OK                      01177500
&ZCVAL        SETC '&ZCVAL OPTIONS'             INCORRECT KEY USED      01177600
.ZG403A52     AIF   (K'&ENVARS LE 0).ZG403A53   OK                      01177700
&ZCVAL        SETC '&ZCVAL ENVARS'              INCORRECT KEY USED      01177800
.ZG403A53     AIF   (K'&ORIGIN LE 0).ZG403A54   OK                      01177900
&ZCVAL        SETC '&ZCVAL ORIGIN'              INCORRECT KEY USED      01178000
.ZG403A54     AIF   (K'&REGION LE 0).ZG403A55   OK                      01178100
&ZCVAL        SETC '&ZCVAL REGION'              INCORRECT KEY USED      01178200
.ZG403A55     AIF   (K'&ZCVAL LE 0).ZG403A56    OK                      01178300
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               01178400
              AIF  (K'&ZCVAL LE 160).ZG403A56A                          01178500
&ZCVAL        SETC '&ZCVAL'(1,160)                                      01178600
&ZCVAL        SETC '&ZCVAL....'                                         01178700
.ZG403A56A    ANOP                                                      01178800
&ZMS          SETC  '"FUNC'                                             01178900
&ZMS          SETC  '&ZMS.=&FUNC"'                                      01179000
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                01179100
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                01179200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01179300
.ZG403A56     ANOP  ,                                                   01179400
.*----------------------------------------------------------------***   01179500
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      01179600
&XOPTLVL      SETC  ''          INITIALIZE XVARIABLE                    01179700
              AIF   (K'&DIALOG LE 0).ZG405C                             01179800
&ZXOPTLVL     SETC  'INPUT'     SET IN/OUTPUT                           01179900
&XOPTLVL      SETC  'DIALOG'    SET XVARIABLE                           01180000
&ZXDIALOG     SETC  'INPUT'     SET IN/OUTPUT                           01180100
&XDIALOG      SETC  '&DIALOG(1)'                SET XVARIABLE PARM      01180200
              AIF   (N'&DIALOG GT 1).ZG405A                             01180300
&XDIALOG      SETC  '&DIALOG'   SET XVARIABLE PARM                      01180400
.ZG405A       AIF   (N'&DIALOG LE 1).ZG405B     CK NUM                  01180500
&ZMS          SETC  '"DIALOG='                                          01180600
&ZMS          SETC  '&ZMS.&DIALOG"'                                     01180700
&ZMS          SETC  '&ZMS "DIALOG"'                                     01180800
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01180900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01181000
.ZG405B       AIF   (K'&XDIALOG GT 0).ZG405C    ONE PARM                01181100
&ZXOPTLVL     SETC  ''          RESET IN/OUTPUT                         01181200
&ZXDIALOG     SETC  ''          RESET IN/OUTPUT                         01181300
&ZMS          SETC  ' '                                                 01181400
&ZMS          SETC  '&ZMS "DIALOG" KEY AND ITS'                         01181500
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    01181600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01181700
.ZG405C       ANOP  ,                                                   01181800
.*----------------------------------------------------------------***   01181900
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      01182000
              AIF   (K'&WORKMOD LE 0).ZG406D    NO ME KEY               01182100
              AIF   (N'&WORKMOD LE 1).ZG406A    CK NUM                  01182200
&ZMS          SETC  '"WORKMOD='                                         01182300
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    01182400
&ZMS          SETC  '&ZMS "WORKMOD"'                                    01182500
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01182600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01182700
.ZG406A       AIF   (K'&XOPTLVL LE 0).ZG406B                            01182800
&ZMS          SETC  '"WORKMOD'                                          01182900
&ZMS          SETC  '&ZMS.=&WORKMOD"'                                   01183000
&ZMS          SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'               01183100
&ZMS          SETC  '&ZMS "&XOPTLVL"'                                   01183200
              MNOTE 8,' &ZMS KEY.'                                      01183300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01183400
              AGO   .ZG406D                                             01183500
.*                                                                      01183600
.ZG406B       ANOP  ,                                                   01183700
&ZXOPTLVL     SETC  'INPUT'     SET IN/OUTPUT                           01183800
&XOPTLVL      SETC  'WORKMOD'   SET XVARIABLE                           01183900
&ZXWORKMOD    SETC  'INPUT'     SET IN/OUTPUT                           01184000
&XWORKMOD     SETC  '&WORKMOD(1)'               SET XVARIABLE PARM      01184100
              AIF   (N'&WORKMOD GT 1).ZG406C                            01184200
&XWORKMOD     SETC  '&WORKMOD'  SET XVARIABLE PARM                      01184300
.ZG406C       AIF   (K'&XWORKMOD GT 0).ZG406D   ONE PARM                01184400
&ZXOPTLVL     SETC  ''          RESET IN/OUTPUT                         01184500
&ZXWORKMOD    SETC  ''          RESET IN/OUTPUT                         01184600
&ZMS          SETC  ' '                                                 01184700
&ZMS          SETC  '&ZMS "WORKMOD" KEY AND ITS'                        01184800
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    01184900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01185000
.ZG406D       ANOP  ,                                                   01185100
.*------------------------------------------------------------------    01185200
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           01185300
              AIF   (K'&XOPTLVL GT 0).ZG407B                            01185400
&ZXOPTLVL     SETC  ''          RESET IN/OUTPUT                         01185500
&ZXDIALOG     SETC  ''          RESET IN/OUTPUT                         01185600
&XOPTLVL      SETC  ''          ENSURE NULL                             01185700
&XDIALOG      SETC  ''          ENSURE NULL                             01185800
&ZMS          SETC  'ONE OF THE FOLLOWING'                              01185900
&ZMS          SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'                 01186000
&ZMS          SETC  '&ZMS REQUIRED:'                                    01186100
&ZMS          SETC  '&ZMS "DIALOG"'             VALID ME KEY            01186200
&ZMS          SETC  '&ZMS OR "WORKMOD".'        VALID ME KEY            01186300
              MNOTE 8,' &ZMS '                                          01186400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01186500
.ZG407B       ANOP  ,                                                   01186600
.*-------------------------------------------------------------------   01186700
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           01186800
.ZG405ZY  AIF    ('&XOPTLVL' NE 'DIALOG').ZG406ZY                       01186900
.*-------------------------------------------------------------------   01187000
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 01187100
              AIF   (K'&ZXDIALOG LE 0).ZG405R   NOT I/O                 01187200
              AIF   ('&XDIALOG'(1,1) NE '(').ZG405R                     01187300
&ZCGPR        SETC  '&XDIALOG'(2,K'&XDIALOG-2)                          01187400
              AIF   ('&ZCGPR'(1,1) NE '0').ZG405P                       01187500
              AIF   (K'&ZCGPR GT 2).ZG405Q                              01187600
              AIF   ('&ZCGPR' EQ '0').ZG405Q                            01187700
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       01187800
              AIF   (T'&ZCGPR NE 'N').ZG405Q    INVALID REG NAME        01187900
.ZG405P       ANOP  ,                                                   01188000
              AIF   (T'&ZCGPR NE 'N').ZG405R    NON NUMERIC             01188100
              AIF   ('&ZCGPR' LT '2').ZG405Q                            01188200
              AIF   ('&ZCGPR' LE '12').ZG405R                           01188300
.ZG405Q       ANOP  ,                                                   01188400
&ZMS          SETC  '"DIALOG='                                          01188500
&ZMS          SETC  '&ZMS.&DIALOG"'                                     01188600
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           01188700
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    01188800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01188900
.ZG405R       ANOP  ,                                                   01189000
.*-------------------------------------------------------------------   01189100
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           01189200
.ZG406ZY  AIF    ('&XOPTLVL' NE 'WORKMOD').ZG407ZY                      01189300
.*-------------------------------------------------------------------   01189400
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 01189500
              AIF   (K'&ZXWORKMOD LE 0).ZG406R  NOT I/O                 01189600
              AIF   ('&XWORKMOD'(1,1) NE '(').ZG406R                    01189700
&ZCGPR        SETC  '&XWORKMOD'(2,K'&XWORKMOD-2)                        01189800
              AIF   ('&ZCGPR'(1,1) NE '0').ZG406P                       01189900
              AIF   (K'&ZCGPR GT 2).ZG406Q                              01190000
              AIF   ('&ZCGPR' EQ '0').ZG406Q                            01190100
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       01190200
              AIF   (T'&ZCGPR NE 'N').ZG406Q    INVALID REG NAME        01190300
.ZG406P       ANOP  ,                                                   01190400
              AIF   (T'&ZCGPR NE 'N').ZG406R    NON NUMERIC             01190500
              AIF   ('&ZCGPR' LT '2').ZG406Q                            01190600
              AIF   ('&ZCGPR' LE '12').ZG406R                           01190700
.ZG406Q       ANOP  ,                                                   01190800
&ZMS          SETC  '"WORKMOD='                                         01190900
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    01191000
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           01191100
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    01191200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01191300
.ZG406R       ANOP  ,                                                   01191400
.*-------------------------------------------------------------------   01191500
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            01191600
.ZG407ZY      ANOP ,            END MUTUALLY EXCLUSIVE KEYS             01191700
.*----------------------------------------------------------------***   01191800
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01191900
              AIF   (N'&OPTION LE 1).ZG409A     CK NUM                  01192000
&ZMS          SETC  '"OPTION='                                          01192100
&ZMS          SETC  '&ZMS.&OPTION"'                                     01192200
&ZMS          SETC  '&ZMS "OPTION"'                                     01192300
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01192400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01192500
.ZG409A       ANOP  ,                                                   01192600
.*-------------------------------------------------------------------   01192700
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01192800
&ZXOPTION     SETC  'INPUT'     SET IN/OUTPUT                           01192900
&XOPTION      SETC  '&OPTION(1)'                SET XVARIABLE           01193000
              AIF   (N'&OPTION GT 1).ZG409B     MULTI                   01193100
&XOPTION      SETC  '&OPTION'   SET XVARIABLE                           01193200
.ZG409B       AIF   (K'&OPTION(1) GT 0).ZG409C                          01193300
&ZXOPTION     SETC  ''          RESET IN/OUTPUT                         01193400
&ZMS          SETC  ' '                                                 01193500
&ZMS          SETC  '&ZMS "OPTION" KEY AND ITS'                         01193600
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    01193700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01193800
.ZG409C       ANOP  ,                                                   01193900
.*-------------------------------------------------------------------   01194000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01194100
              AIF   (K'&ZXOPTION LE 0).ZG409R   NOT I/O                 01194200
              AIF   ('&XOPTION'(1,1) NE '(').ZG409R                     01194300
&ZCGPR        SETC  '&XOPTION'(2,K'&XOPTION-2)                          01194400
              AIF   ('&ZCGPR'(1,1) NE '0').ZG409P                       01194500
              AIF   (K'&ZCGPR GT 2).ZG409Q                              01194600
              AIF   ('&ZCGPR' EQ '0').ZG409Q                            01194700
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       01194800
              AIF   (T'&ZCGPR NE 'N').ZG409Q    INVALID REG NAME        01194900
.ZG409P       ANOP  ,                                                   01195000
              AIF   (T'&ZCGPR NE 'N').ZG409R    NON NUMERIC             01195100
              AIF   ('&ZCGPR' LT '2').ZG409Q                            01195200
              AIF   ('&ZCGPR' LE '12').ZG409R                           01195300
.ZG409Q       ANOP  ,                                                   01195400
&ZMS          SETC  '"OPTION='                                          01195500
&ZMS          SETC  '&ZMS.&OPTION"'                                     01195600
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           01195700
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    01195800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01195900
.ZG409R       ANOP  ,                                                   01196000
.*----------------------------------------------------------------***   01196100
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01196200
              AIF   (N'&OPTVAL LE 1).ZG412A     CK NUM                  01196300
&ZMS          SETC  '"OPTVAL='                                          01196400
&ZMS          SETC  '&ZMS.&OPTVAL"'                                     01196500
&ZMS          SETC  '&ZMS "OPTVAL"'                                     01196600
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01196700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01196800
.ZG412A       ANOP  ,                                                   01196900
.*-------------------------------------------------------------------   01197000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01197100
&ZXOPTVAL     SETC  'INPUT'     SET IN/OUTPUT                           01197200
&XOPTVAL      SETC  '&OPTVAL(1)'                SET XVARIABLE           01197300
              AIF   (N'&OPTVAL GT 1).ZG412B     MULTI                   01197400
&XOPTVAL      SETC  '&OPTVAL'   SET XVARIABLE                           01197500
.ZG412B       AIF   (K'&OPTVAL(1) GT 0).ZG412C                          01197600
&ZXOPTVAL     SETC  ''          RESET IN/OUTPUT                         01197700
&ZMS          SETC  ' '                                                 01197800
&ZMS          SETC  '&ZMS "OPTVAL" KEY AND ITS'                         01197900
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    01198000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01198100
.ZG412C       ANOP  ,                                                   01198200
.*-------------------------------------------------------------------   01198300
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01198400
              AIF   (K'&ZXOPTVAL LE 0).ZG412R   NOT I/O                 01198500
              AIF   ('&XOPTVAL'(1,1) NE '(').ZG412R                     01198600
&ZCGPR        SETC  '&XOPTVAL'(2,K'&XOPTVAL-2)                          01198700
              AIF   ('&ZCGPR'(1,1) NE '0').ZG412P                       01198800
              AIF   (K'&ZCGPR GT 2).ZG412Q                              01198900
              AIF   ('&ZCGPR' EQ '0').ZG412Q                            01199000
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       01199100
              AIF   (T'&ZCGPR NE 'N').ZG412Q    INVALID REG NAME        01199200
.ZG412P       ANOP  ,                                                   01199300
              AIF   (T'&ZCGPR NE 'N').ZG412R    NON NUMERIC             01199400
              AIF   ('&ZCGPR' LT '2').ZG412Q                            01199500
              AIF   ('&ZCGPR' LE '12').ZG412R                           01199600
.ZG412Q       ANOP  ,                                                   01199700
&ZMS          SETC  '"OPTVAL='                                          01199800
&ZMS          SETC  '&ZMS.&OPTVAL"'                                     01199900
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           01200000
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    01200100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01200200
.ZG412R       ANOP  ,                                                   01200300
.*----------------------------------------------------------------***   01200400
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01200500
              AIF   (N'&PARMS LE 1).ZG415A      CK NUM                  01200600
&ZMS          SETC  '"PARMS='                                           01200700
&ZMS          SETC  '&ZMS.&PARMS"'                                      01200800
&ZMS          SETC  '&ZMS "PARMS"'                                      01200900
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01201000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01201100
.ZG415A       ANOP  ,                                                   01201200
.*-------------------------------------------------------------------   01201300
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01201400
&ZXPARMS      SETC  'INPUT'     SET IN/OUTPUT                           01201500
&XPARMS       SETC  '0'                                                 01201600
              AIF   (K'&PARMS(1) LE 0).ZG415B   PARM                    01201700
&XPARMS       SETC  '&PARMS(1)'                 SET XVARIABLE           01201800
              AIF   (N'&PARMS GT 1).ZG415B      MULTI                   01201900
&XPARMS       SETC  '&PARMS'    SET XVARIABLE                           01202000
.ZG415B       ANOP  ,                                                   01202100
.*-------------------------------------------------------------------   01202200
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01202300
              AIF   (K'&ZXPARMS LE 0).ZG415R    NOT I/O                 01202400
         AIF   ('&XPARMS' EQ '0').ZG415R                                01202500
              AIF   ('&XPARMS'(1,1) NE '(').ZG415R                      01202600
&ZCGPR        SETC  '&XPARMS'(2,K'&XPARMS-2)                            01202700
              AIF   ('&ZCGPR'(1,1) NE '0').ZG415P                       01202800
              AIF   (K'&ZCGPR GT 2).ZG415Q                              01202900
              AIF   ('&ZCGPR' EQ '0').ZG415Q                            01203000
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       01203100
              AIF   (T'&ZCGPR NE 'N').ZG415Q    INVALID REG NAME        01203200
.ZG415P       ANOP  ,                                                   01203300
              AIF   (T'&ZCGPR NE 'N').ZG415R    NON NUMERIC             01203400
              AIF   ('&ZCGPR' LT '2').ZG415Q                            01203500
              AIF   ('&ZCGPR' LE '12').ZG415R                           01203600
.ZG415Q       ANOP  ,                                                   01203700
&ZMS          SETC  '"PARMS='                                           01203800
&ZMS          SETC  '&ZMS.&PARMS"'                                      01203900
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           01204000
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    01204100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01204200
.ZG415R       ANOP  ,                                                   01204300
.*-------------------------------------------------------------------   01204400
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01204500
.ZG417        ANOP  ,                                                   01204600
&ZTLC         SETC 'STARTD'                                             01204700
              AIF   ('&FUNC(1)' NE '&ZTLC').ZG436                       01204800
&XFUNC        SETC  'STARTD'    SET KEYWORD                             01204900
              AIF   (N'&FUNC LE 1).ZG417A       CK NUM                  01205000
&ZMS          SETC  '"FUNC='                                            01205100
&ZMS          SETC  '&ZMS.&FUNC"'                                       01205200
&ZMS          SETC  '&ZMS "FUNC"'                                       01205300
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01205400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01205500
.ZG417A       ANOP  ,                                                   01205600
.*------------------------------------------------------------------    01205700
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01205800
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             01205900
.ZG417A0      AIF   (K'&WORKMOD LE 0).ZG417A1   OK                      01206000
&ZCVAL        SETC '&ZCVAL WORKMOD'             INCORRECT KEY USED      01206100
.ZG417A1      AIF   (K'&ANAME LE 0).ZG417A2     OK                      01206200
&ZCVAL        SETC '&ZCVAL ANAME'               INCORRECT KEY USED      01206300
.ZG417A2      AIF   (K'&ENAME LE 0).ZG417A3     OK                      01206400
&ZCVAL        SETC '&ZCVAL ENAME'               INCORRECT KEY USED      01206500
.ZG417A3      AIF   (K'&AMODE LE 0).ZG417A4     OK                      01206600
&ZCVAL        SETC '&ZCVAL AMODE'               INCORRECT KEY USED      01206700
.ZG417A4      AIF   (K'&ATYPE LE 0).ZG417A5     OK                      01206800
&ZCVAL        SETC '&ZCVAL ATYPE'               INCORRECT KEY USED      01206900
.ZG417A5      AIF   (K'&DNAME LE 0).ZG417A6     OK                      01207000
&ZCVAL        SETC '&ZCVAL DNAME'               INCORRECT KEY USED      01207100
.ZG417A6      AIF   (K'&SECTION LE 0).ZG417A7   OK                      01207200
&ZCVAL        SETC '&ZCVAL SECTION'             INCORRECT KEY USED      01207300
.ZG417A7      AIF   (K'&BDY LE 0).ZG417A8       OK                      01207400
&ZCVAL        SETC '&ZCVAL BDY'                 INCORRECT KEY USED      01207500
.ZG417A8      AIF   (K'&CLASSL LE 0).ZG417A9    OK                      01207600
&ZCVAL        SETC '&ZCVAL CLASSL'              INCORRECT KEY USED      01207700
.ZG417A9      AIF   (K'&OLDNAME LE 0).ZG417A10  OK                      01207800
&ZCVAL        SETC '&ZCVAL OLDNAME'             INCORRECT KEY USED      01207900
.ZG417A10     AIF   (K'&NEWNAME LE 0).ZG417A11  OK                      01208000
&ZCVAL        SETC '&ZCVAL NEWNAME'             INCORRECT KEY USED      01208100
.ZG417A11     AIF   (K'&COUNT LE 0).ZG417A12    OK                      01208200
&ZCVAL        SETC '&ZCVAL COUNT'               INCORRECT KEY USED      01208300
.ZG417A12     AIF   (K'&MODE LE 0).ZG417A13     OK                      01208400
&ZCVAL        SETC '&ZCVAL MODE'                INCORRECT KEY USED      01208500
.ZG417A13     AIF   (K'&CLASS LE 0).ZG417A14    OK                      01208600
&ZCVAL        SETC '&ZCVAL CLASS'               INCORRECT KEY USED      01208700
.ZG417A14     AIF   (K'&CALLIB LE 0).ZG417A15   OK                      01208800
&ZCVAL        SETC '&ZCVAL CALLIB'              INCORRECT KEY USED      01208900
.ZG417A15     AIF   (K'&PATHNAME LE 0).ZG417A16  OK                     01209000
&ZCVAL        SETC '&ZCVAL PATHNAME'            INCORRECT KEY USED      01209100
.ZG417A16     AIF   (K'&INTENT LE 0).ZG417A17   OK                      01209200
&ZCVAL        SETC '&ZCVAL INTENT'              INCORRECT KEY USED      01209300
.ZG417A17     AIF   (K'&PROTECT LE 0).ZG417A18  OK                      01209400
&ZCVAL        SETC '&ZCVAL PROTECT'             INCORRECT KEY USED      01209500
.ZG417A18     AIF   (K'&RENAMEL LE 0).ZG417A19  OK                      01209600
&ZCVAL        SETC '&ZCVAL RENAMEL'             INCORRECT KEY USED      01209700
.ZG417A19     AIF   (K'&AREA LE 0).ZG417A20     OK                      01209800
&ZCVAL        SETC '&ZCVAL AREA'                INCORRECT KEY USED      01209900
.ZG417A20     AIF   (K'&CURSOR LE 0).ZG417A21   OK                      01210000
&ZCVAL        SETC '&ZCVAL CURSOR'              INCORRECT KEY USED      01210100
.ZG417A21     AIF   (K'&RELOC LE 0).ZG417A22    OK                      01210200
&ZCVAL        SETC '&ZCVAL RELOC'               INCORRECT KEY USED      01210300
.ZG417A22     AIF   (K'&RECTYPE LE 0).ZG417A23  OK                      01210400
&ZCVAL        SETC '&ZCVAL RECTYPE'             INCORRECT KEY USED      01210500
.ZG417A23     AIF   (K'&OFFSET LE 0).ZG417A24   OK                      01210600
&ZCVAL        SETC '&ZCVAL OFFSET'              INCORRECT KEY USED      01210700
.ZG417A24     AIF   (K'&SYMBOL LE 0).ZG417A25   OK                      01210800
&ZCVAL        SETC '&ZCVAL SYMBOL'              INCORRECT KEY USED      01210900
.ZG417A25     AIF   (K'&TCOUNT LE 0).ZG417A26   OK                      01211000
&ZCVAL        SETC '&ZCVAL TCOUNT'              INCORRECT KEY USED      01211100
.ZG417A26     AIF   (K'&NTYPE LE 0).ZG417A27    OK                      01211200
&ZCVAL        SETC '&ZCVAL NTYPE'               INCORRECT KEY USED      01211300
.ZG417A27     AIF   (K'&CULIST LE 0).ZG417A28   OK                      01211400
&ZCVAL        SETC '&ZCVAL CULIST'              INCORRECT KEY USED      01211500
.ZG417A28     AIF   (K'&ITYPE LE 0).ZG417A29    OK                      01211600
&ZCVAL        SETC '&ZCVAL ITYPE'               INCORRECT KEY USED      01211700
.ZG417A29     AIF   (K'&DLLNAME LE 0).ZG417A30  OK                      01211800
&ZCVAL        SETC '&ZCVAL DLLNAME'             INCORRECT KEY USED      01211900
.ZG417A30     AIF   (K'&INAME LE 0).ZG417A31    OK                      01212000
&ZCVAL        SETC '&ZCVAL INAME'               INCORRECT KEY USED      01212100
.ZG417A31     AIF   (K'&INTYPE LE 0).ZG417A32   OK                      01212200
&ZCVAL        SETC '&ZCVAL INTYPE'              INCORRECT KEY USED      01212300
.ZG417A32     AIF   (K'&DDNAME LE 0).ZG417A33   OK                      01212400
&ZCVAL        SETC '&ZCVAL DDNAME'              INCORRECT KEY USED      01212500
.ZG417A33     AIF   (K'&DEPTR LE 0).ZG417A34    OK                      01212600
&ZCVAL        SETC '&ZCVAL DEPTR'               INCORRECT KEY USED      01212700
.ZG417A34     AIF   (K'&MEMBER LE 0).ZG417A35   OK                      01212800
&ZCVAL        SETC '&ZCVAL MEMBER'              INCORRECT KEY USED      01212900
.ZG417A35     AIF   (K'&DCBPTR LE 0).ZG417A36   OK                      01213000
&ZCVAL        SETC '&ZCVAL DCBPTR'              INCORRECT KEY USED      01213100
.ZG417A36     AIF   (K'&EPTOKEN LE 0).ZG417A37  OK                      01213200
&ZCVAL        SETC '&ZCVAL EPTOKEN'             INCORRECT KEY USED      01213300
.ZG417A37     AIF   (K'&ATTRIB LE 0).ZG417A38   OK                      01213400
&ZCVAL        SETC '&ZCVAL ATTRIB'              INCORRECT KEY USED      01213500
.ZG417A38     AIF   (K'&ALIASES LE 0).ZG417A39  OK                      01213600
&ZCVAL        SETC '&ZCVAL ALIASES'             INCORRECT KEY USED      01213700
.ZG417A39     AIF   (K'&IMPORTS LE 0).ZG417A40  OK                      01213800
&ZCVAL        SETC '&ZCVAL IMPORTS'             INCORRECT KEY USED      01213900
.ZG417A40     AIF   (K'&EPLOC LE 0).ZG417A41    OK                      01214000
&ZCVAL        SETC '&ZCVAL EPLOC'               INCORRECT KEY USED      01214100
.ZG417A41     AIF   (K'&IDENTIFY LE 0).ZG417A42  OK                     01214200
&ZCVAL        SETC '&ZCVAL IDENTIFY'            INCORRECT KEY USED      01214300
.ZG417A42     AIF   (K'&EXTLST LE 0).ZG417A43   OK                      01214400
&ZCVAL        SETC '&ZCVAL EXTLST'              INCORRECT KEY USED      01214500
.ZG417A43     AIF   (K'&LNAME LE 0).ZG417A44    OK                      01214600
&ZCVAL        SETC '&ZCVAL LNAME'               INCORRECT KEY USED      01214700
.ZG417A44     AIF   (K'&NEWSECT LE 0).ZG417A45  OK                      01214800
&ZCVAL        SETC '&ZCVAL NEWSECT'             INCORRECT KEY USED      01214900
.ZG417A45     AIF   (K'&ENDDATA LE 0).ZG417A46  OK                      01215000
&ZCVAL        SETC '&ZCVAL ENDDATA'             INCORRECT KEY USED      01215100
.ZG417A46     AIF   (K'&MODLIB LE 0).ZG417A47   OK                      01215200
&ZCVAL        SETC '&ZCVAL MODLIB'              INCORRECT KEY USED      01215300
.ZG417A47     AIF   (K'&SNAME LE 0).ZG417A48    OK                      01215400
&ZCVAL        SETC '&ZCVAL SNAME'               INCORRECT KEY USED      01215500
.ZG417A48     AIF   (K'&REPLACE LE 0).ZG417A49  OK                      01215600
&ZCVAL        SETC '&ZCVAL REPLACE'             INCORRECT KEY USED      01215700
.ZG417A49     AIF   (K'&LIBOPT LE 0).ZG417A50   OK                      01215800
&ZCVAL        SETC '&ZCVAL LIBOPT'              INCORRECT KEY USED      01215900
.ZG417A50     AIF   (K'&OPTION LE 0).ZG417A51   OK                      01216000
&ZCVAL        SETC '&ZCVAL OPTION'              INCORRECT KEY USED      01216100
.ZG417A51     AIF   (K'&OPTVAL LE 0).ZG417A52   OK                      01216200
&ZCVAL        SETC '&ZCVAL OPTVAL'              INCORRECT KEY USED      01216300
.ZG417A52     AIF   (K'&ORIGIN LE 0).ZG417A53   OK                      01216400
&ZCVAL        SETC '&ZCVAL ORIGIN'              INCORRECT KEY USED      01216500
.ZG417A53     AIF   (K'&REGION LE 0).ZG417A54   OK                      01216600
&ZCVAL        SETC '&ZCVAL REGION'              INCORRECT KEY USED      01216700
.ZG417A54     AIF   (K'&ZCVAL LE 0).ZG417A55    OK                      01216800
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               01216900
              AIF  (K'&ZCVAL LE 160).ZG417A55A                          01217000
&ZCVAL        SETC '&ZCVAL'(1,160)                                      01217100
&ZCVAL        SETC '&ZCVAL....'                                         01217200
.ZG417A55A    ANOP                                                      01217300
&ZMS          SETC  '"FUNC'                                             01217400
&ZMS          SETC  '&ZMS.=&FUNC"'                                      01217500
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                01217600
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                01217700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01217800
.ZG417A55     ANOP  ,                                                   01217900
.*----------------------------------------------------------------***   01218000
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    01218100
              AIF   (N'&DIALOG LE 1).ZG419A     CK NUM                  01218200
&ZMS          SETC  '"DIALOG='                                          01218300
&ZMS          SETC  '&ZMS.&DIALOG"'                                     01218400
&ZMS          SETC  '&ZMS "DIALOG"'                                     01218500
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01218600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01218700
.ZG419A       ANOP  ,                                                   01218800
.*-------------------------------------------------------------------   01218900
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        01219000
&ZXDIALOG     SETC  'OUTPUT'    SET IN/OUTPUT                           01219100
&XDIALOG      SETC  '&DIALOG(1)'                SET XVARIABLE           01219200
              AIF   (N'&DIALOG GT 1).ZG419B     MULTI                   01219300
&XDIALOG      SETC  '&DIALOG'   SET XVARIABLE                           01219400
.ZG419B       AIF   (K'&DIALOG(1) GT 0).ZG419C                          01219500
&ZXDIALOG     SETC  ''          RESET IN/OUTPUT                         01219600
&ZMS          SETC  ' '                                                 01219700
&ZMS          SETC  '&ZMS "DIALOG" KEY AND ITS'                         01219800
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    01219900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01220000
.ZG419C       ANOP  ,                                                   01220100
.*-------------------------------------------------------------------   01220200
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   01220300
              AIF   (K'&ZXDIALOG LE 0).ZG419R   NOT I/O                 01220400
              AIF   ('&XDIALOG'(1,1) NE '(').ZG419R                     01220500
&ZCGPR        SETC  '&XDIALOG'(2,K'&XDIALOG-2)                          01220600
              AIF   ('&ZCGPR'(1,1) NE '0').ZG419P                       01220700
              AIF   (K'&ZCGPR GT 2).ZG419Q                              01220800
              AIF   ('&ZCGPR' EQ '0').ZG419Q                            01220900
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       01221000
              AIF   (T'&ZCGPR NE 'N').ZG419Q    INVALID REG NAME        01221100
.ZG419P       ANOP  ,                                                   01221200
              AIF   (T'&ZCGPR NE 'N').ZG419R    NON NUMERIC             01221300
              AIF   ('&ZCGPR' LT '2').ZG419Q                            01221400
              AIF   ('&ZCGPR' LE '12').ZG419R                           01221500
.ZG419Q       ANOP  ,                                                   01221600
&ZMS          SETC  '"DIALOG='                                          01221700
&ZMS          SETC  '&ZMS.&DIALOG"'                                     01221800
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           01221900
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    01222000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01222100
.ZG419R       ANOP  ,                                                   01222200
.*----------------------------------------------------------------***   01222300
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01222400
              AIF   (N'&FILES LE 1).ZG422A      CK NUM                  01222500
&ZMS          SETC  '"FILES='                                           01222600
&ZMS          SETC  '&ZMS.&FILES"'                                      01222700
&ZMS          SETC  '&ZMS "FILES"'                                      01222800
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01222900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01223000
.ZG422A       ANOP  ,                                                   01223100
.*-------------------------------------------------------------------   01223200
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01223300
&ZXFILES      SETC  'INPUT'     SET IN/OUTPUT                           01223400
&XFILES       SETC  '0'                                                 01223500
              AIF   (K'&FILES(1) LE 0).ZG422B   PARM                    01223600
&XFILES       SETC  '&FILES(1)'                 SET XVARIABLE           01223700
              AIF   (N'&FILES GT 1).ZG422B      MULTI                   01223800
&XFILES       SETC  '&FILES'    SET XVARIABLE                           01223900
.ZG422B       ANOP  ,                                                   01224000
.*-------------------------------------------------------------------   01224100
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01224200
              AIF   (K'&ZXFILES LE 0).ZG422R    NOT I/O                 01224300
         AIF   ('&XFILES' EQ '0').ZG422R                                01224400
              AIF   ('&XFILES'(1,1) NE '(').ZG422R                      01224500
&ZCGPR        SETC  '&XFILES'(2,K'&XFILES-2)                            01224600
              AIF   ('&ZCGPR'(1,1) NE '0').ZG422P                       01224700
              AIF   (K'&ZCGPR GT 2).ZG422Q                              01224800
              AIF   ('&ZCGPR' EQ '0').ZG422Q                            01224900
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       01225000
              AIF   (T'&ZCGPR NE 'N').ZG422Q    INVALID REG NAME        01225100
.ZG422P       ANOP  ,                                                   01225200
              AIF   (T'&ZCGPR NE 'N').ZG422R    NON NUMERIC             01225300
              AIF   ('&ZCGPR' LT '2').ZG422Q                            01225400
              AIF   ('&ZCGPR' LE '12').ZG422R                           01225500
.ZG422Q       ANOP  ,                                                   01225600
&ZMS          SETC  '"FILES='                                           01225700
&ZMS          SETC  '&ZMS.&FILES"'                                      01225800
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           01225900
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    01226000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01226100
.ZG422R       ANOP  ,                                                   01226200
.*----------------------------------------------------------------***   01226300
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01226400
              AIF   (N'&EXITS LE 1).ZG425A      CK NUM                  01226500
&ZMS          SETC  '"EXITS='                                           01226600
&ZMS          SETC  '&ZMS.&EXITS"'                                      01226700
&ZMS          SETC  '&ZMS "EXITS"'                                      01226800
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01226900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01227000
.ZG425A       ANOP  ,                                                   01227100
.*-------------------------------------------------------------------   01227200
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01227300
&ZXEXITS      SETC  'INPUT'     SET IN/OUTPUT                           01227400
&XEXITS       SETC  '0'                                                 01227500
              AIF   (K'&EXITS(1) LE 0).ZG425B   PARM                    01227600
&XEXITS       SETC  '&EXITS(1)'                 SET XVARIABLE           01227700
              AIF   (N'&EXITS GT 1).ZG425B      MULTI                   01227800
&XEXITS       SETC  '&EXITS'    SET XVARIABLE                           01227900
.ZG425B       ANOP  ,                                                   01228000
.*-------------------------------------------------------------------   01228100
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01228200
              AIF   (K'&ZXEXITS LE 0).ZG425R    NOT I/O                 01228300
         AIF   ('&XEXITS' EQ '0').ZG425R                                01228400
              AIF   ('&XEXITS'(1,1) NE '(').ZG425R                      01228500
&ZCGPR        SETC  '&XEXITS'(2,K'&XEXITS-2)                            01228600
              AIF   ('&ZCGPR'(1,1) NE '0').ZG425P                       01228700
              AIF   (K'&ZCGPR GT 2).ZG425Q                              01228800
              AIF   ('&ZCGPR' EQ '0').ZG425Q                            01228900
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       01229000
              AIF   (T'&ZCGPR NE 'N').ZG425Q    INVALID REG NAME        01229100
.ZG425P       ANOP  ,                                                   01229200
              AIF   (T'&ZCGPR NE 'N').ZG425R    NON NUMERIC             01229300
              AIF   ('&ZCGPR' LT '2').ZG425Q                            01229400
              AIF   ('&ZCGPR' LE '12').ZG425R                           01229500
.ZG425Q       ANOP  ,                                                   01229600
&ZMS          SETC  '"EXITS='                                           01229700
&ZMS          SETC  '&ZMS.&EXITS"'                                      01229800
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           01229900
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    01230000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01230100
.ZG425R       ANOP  ,                                                   01230200
.*----------------------------------------------------------------***   01230300
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01230400
              AIF   (N'&OPTIONS LE 1).ZG428A    CK NUM                  01230500
&ZMS          SETC  '"OPTIONS='                                         01230600
&ZMS          SETC  '&ZMS.&OPTIONS"'                                    01230700
&ZMS          SETC  '&ZMS "OPTIONS"'                                    01230800
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01230900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01231000
.ZG428A       ANOP  ,                                                   01231100
.*-------------------------------------------------------------------   01231200
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01231300
&ZXOPTIONS    SETC  'INPUT'     SET IN/OUTPUT                           01231400
&XOPTIONS     SETC  '0'                                                 01231500
              AIF   (K'&OPTIONS(1) LE 0).ZG428B  PARM                   01231600
&XOPTIONS     SETC  '&OPTIONS(1)'               SET XVARIABLE           01231700
              AIF   (N'&OPTIONS GT 1).ZG428B    MULTI                   01231800
&XOPTIONS     SETC  '&OPTIONS'  SET XVARIABLE                           01231900
.ZG428B       ANOP  ,                                                   01232000
.*-------------------------------------------------------------------   01232100
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01232200
              AIF   (K'&ZXOPTIONS LE 0).ZG428R  NOT I/O                 01232300
         AIF   ('&XOPTIONS' EQ '0').ZG428R                              01232400
              AIF   ('&XOPTIONS'(1,1) NE '(').ZG428R                    01232500
&ZCGPR        SETC  '&XOPTIONS'(2,K'&XOPTIONS-2)                        01232600
              AIF   ('&ZCGPR'(1,1) NE '0').ZG428P                       01232700
              AIF   (K'&ZCGPR GT 2).ZG428Q                              01232800
              AIF   ('&ZCGPR' EQ '0').ZG428Q                            01232900
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       01233000
              AIF   (T'&ZCGPR NE 'N').ZG428Q    INVALID REG NAME        01233100
.ZG428P       ANOP  ,                                                   01233200
              AIF   (T'&ZCGPR NE 'N').ZG428R    NON NUMERIC             01233300
              AIF   ('&ZCGPR' LT '2').ZG428Q                            01233400
              AIF   ('&ZCGPR' LE '12').ZG428R                           01233500
.ZG428Q       ANOP  ,                                                   01233600
&ZMS          SETC  '"OPTIONS='                                         01233700
&ZMS          SETC  '&ZMS.&OPTIONS"'                                    01233800
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           01233900
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    01234000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01234100
.ZG428R       ANOP  ,                                                   01234200
.*----------------------------------------------------------------***   01234300
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01234400
              AIF   (N'&PARMS LE 1).ZG431A      CK NUM                  01234500
&ZMS          SETC  '"PARMS='                                           01234600
&ZMS          SETC  '&ZMS.&PARMS"'                                      01234700
&ZMS          SETC  '&ZMS "PARMS"'                                      01234800
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01234900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01235000
.ZG431A       ANOP  ,                                                   01235100
.*-------------------------------------------------------------------   01235200
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01235300
&ZXPARMS      SETC  'INPUT'     SET IN/OUTPUT                           01235400
&XPARMS       SETC  '0'                                                 01235500
              AIF   (K'&PARMS(1) LE 0).ZG431B   PARM                    01235600
&XPARMS       SETC  '&PARMS(1)'                 SET XVARIABLE           01235700
              AIF   (N'&PARMS GT 1).ZG431B      MULTI                   01235800
&XPARMS       SETC  '&PARMS'    SET XVARIABLE                           01235900
.ZG431B       ANOP  ,                                                   01236000
.*-------------------------------------------------------------------   01236100
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01236200
              AIF   (K'&ZXPARMS LE 0).ZG431R    NOT I/O                 01236300
         AIF   ('&XPARMS' EQ '0').ZG431R                                01236400
              AIF   ('&XPARMS'(1,1) NE '(').ZG431R                      01236500
&ZCGPR        SETC  '&XPARMS'(2,K'&XPARMS-2)                            01236600
              AIF   ('&ZCGPR'(1,1) NE '0').ZG431P                       01236700
              AIF   (K'&ZCGPR GT 2).ZG431Q                              01236800
              AIF   ('&ZCGPR' EQ '0').ZG431Q                            01236900
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       01237000
              AIF   (T'&ZCGPR NE 'N').ZG431Q    INVALID REG NAME        01237100
.ZG431P       ANOP  ,                                                   01237200
              AIF   (T'&ZCGPR NE 'N').ZG431R    NON NUMERIC             01237300
              AIF   ('&ZCGPR' LT '2').ZG431Q                            01237400
              AIF   ('&ZCGPR' LE '12').ZG431R                           01237500
.ZG431Q       ANOP  ,                                                   01237600
&ZMS          SETC  '"PARMS='                                           01237700
&ZMS          SETC  '&ZMS.&PARMS"'                                      01237800
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           01237900
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    01238000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01238100
.ZG431R       ANOP  ,                                                   01238200
.*----------------------------------------------------------------***   01238300
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     01238400
              AIF   (N'&ENVARS LE 1).ZG434A     CK NUM                  01238500
&ZMS          SETC  '"ENVARS='                                          01238600
&ZMS          SETC  '&ZMS.&ENVARS"'                                     01238700
&ZMS          SETC  '&ZMS "ENVARS"'                                     01238800
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01238900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01239000
.ZG434A       ANOP  ,                                                   01239100
.*-------------------------------------------------------------------   01239200
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         01239300
&ZXENVARS     SETC  'INPUT'     SET IN/OUTPUT                           01239400
&XENVARS      SETC  '0'                                                 01239500
              AIF   (K'&ENVARS(1) LE 0).ZG434B  PARM                    01239600
&XENVARS      SETC  '&ENVARS(1)'                SET XVARIABLE           01239700
              AIF   (N'&ENVARS GT 1).ZG434B     MULTI                   01239800
&XENVARS      SETC  '&ENVARS'   SET XVARIABLE                           01239900
.ZG434B       ANOP  ,                                                   01240000
.*-------------------------------------------------------------------   01240100
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    01240200
              AIF   (K'&ZXENVARS LE 0).ZG434R   NOT I/O                 01240300
         AIF   ('&XENVARS' EQ '0').ZG434R                               01240400
              AIF   ('&XENVARS'(1,1) NE '(').ZG434R                     01240500
&ZCGPR        SETC  '&XENVARS'(2,K'&XENVARS-2)                          01240600
              AIF   ('&ZCGPR'(1,1) NE '0').ZG434P                       01240700
              AIF   (K'&ZCGPR GT 2).ZG434Q                              01240800
              AIF   ('&ZCGPR' EQ '0').ZG434Q                            01240900
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       01241000
              AIF   (T'&ZCGPR NE 'N').ZG434Q    INVALID REG NAME        01241100
.ZG434P       ANOP  ,                                                   01241200
              AIF   (T'&ZCGPR NE 'N').ZG434R    NON NUMERIC             01241300
              AIF   ('&ZCGPR' LT '2').ZG434Q                            01241400
              AIF   ('&ZCGPR' LE '12').ZG434R                           01241500
.ZG434Q       ANOP  ,                                                   01241600
&ZMS          SETC  '"ENVARS='                                          01241700
&ZMS          SETC  '&ZMS.&ENVARS"'                                     01241800
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           01241900
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    01242000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01242100
.ZG434R       ANOP  ,                                                   01242200
.*-------------------------------------------------------------------   01242300
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01242400
.ZG436        ANOP  ,                                                   01242500
&ZTLC         SETC 'STARTS'                                             01242600
              AIF   ('&FUNC(1)' NE '&ZTLC').ZG448                       01242700
&XFUNC        SETC  'STARTS'    SET KEYWORD                             01242800
              AIF   (N'&FUNC LE 1).ZG436A       CK NUM                  01242900
&ZMS          SETC  '"FUNC='                                            01243000
&ZMS          SETC  '&ZMS.&FUNC"'                                       01243100
&ZMS          SETC  '&ZMS "FUNC"'                                       01243200
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01243300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01243400
.ZG436A       ANOP  ,                                                   01243500
.*------------------------------------------------------------------    01243600
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01243700
&ZCVAL        SETC ''           CLEAR ERROR KEY ACCUMULATOR             01243800
.ZG436A0      AIF   (K'&ANAME LE 0).ZG436A1     OK                      01243900
&ZCVAL        SETC '&ZCVAL ANAME'               INCORRECT KEY USED      01244000
.ZG436A1      AIF   (K'&ENAME LE 0).ZG436A2     OK                      01244100
&ZCVAL        SETC '&ZCVAL ENAME'               INCORRECT KEY USED      01244200
.ZG436A2      AIF   (K'&AMODE LE 0).ZG436A3     OK                      01244300
&ZCVAL        SETC '&ZCVAL AMODE'               INCORRECT KEY USED      01244400
.ZG436A3      AIF   (K'&ATYPE LE 0).ZG436A4     OK                      01244500
&ZCVAL        SETC '&ZCVAL ATYPE'               INCORRECT KEY USED      01244600
.ZG436A4      AIF   (K'&DNAME LE 0).ZG436A5     OK                      01244700
&ZCVAL        SETC '&ZCVAL DNAME'               INCORRECT KEY USED      01244800
.ZG436A5      AIF   (K'&SECTION LE 0).ZG436A6   OK                      01244900
&ZCVAL        SETC '&ZCVAL SECTION'             INCORRECT KEY USED      01245000
.ZG436A6      AIF   (K'&BDY LE 0).ZG436A7       OK                      01245100
&ZCVAL        SETC '&ZCVAL BDY'                 INCORRECT KEY USED      01245200
.ZG436A7      AIF   (K'&CLASSL LE 0).ZG436A8    OK                      01245300
&ZCVAL        SETC '&ZCVAL CLASSL'              INCORRECT KEY USED      01245400
.ZG436A8      AIF   (K'&OLDNAME LE 0).ZG436A9   OK                      01245500
&ZCVAL        SETC '&ZCVAL OLDNAME'             INCORRECT KEY USED      01245600
.ZG436A9      AIF   (K'&NEWNAME LE 0).ZG436A10  OK                      01245700
&ZCVAL        SETC '&ZCVAL NEWNAME'             INCORRECT KEY USED      01245800
.ZG436A10     AIF   (K'&COUNT LE 0).ZG436A11    OK                      01245900
&ZCVAL        SETC '&ZCVAL COUNT'               INCORRECT KEY USED      01246000
.ZG436A11     AIF   (K'&MODE LE 0).ZG436A12     OK                      01246100
&ZCVAL        SETC '&ZCVAL MODE'                INCORRECT KEY USED      01246200
.ZG436A12     AIF   (K'&CLASS LE 0).ZG436A13    OK                      01246300
&ZCVAL        SETC '&ZCVAL CLASS'               INCORRECT KEY USED      01246400
.ZG436A13     AIF   (K'&CALLIB LE 0).ZG436A14   OK                      01246500
&ZCVAL        SETC '&ZCVAL CALLIB'              INCORRECT KEY USED      01246600
.ZG436A14     AIF   (K'&PATHNAME LE 0).ZG436A15  OK                     01246700
&ZCVAL        SETC '&ZCVAL PATHNAME'            INCORRECT KEY USED      01246800
.ZG436A15     AIF   (K'&DIALOG LE 0).ZG436A16   OK                      01246900
&ZCVAL        SETC '&ZCVAL DIALOG'              INCORRECT KEY USED      01247000
.ZG436A16     AIF   (K'&INTENT LE 0).ZG436A17   OK                      01247100
&ZCVAL        SETC '&ZCVAL INTENT'              INCORRECT KEY USED      01247200
.ZG436A17     AIF   (K'&PROTECT LE 0).ZG436A18  OK                      01247300
&ZCVAL        SETC '&ZCVAL PROTECT'             INCORRECT KEY USED      01247400
.ZG436A18     AIF   (K'&RENAMEL LE 0).ZG436A19  OK                      01247500
&ZCVAL        SETC '&ZCVAL RENAMEL'             INCORRECT KEY USED      01247600
.ZG436A19     AIF   (K'&AREA LE 0).ZG436A20     OK                      01247700
&ZCVAL        SETC '&ZCVAL AREA'                INCORRECT KEY USED      01247800
.ZG436A20     AIF   (K'&CURSOR LE 0).ZG436A21   OK                      01247900
&ZCVAL        SETC '&ZCVAL CURSOR'              INCORRECT KEY USED      01248000
.ZG436A21     AIF   (K'&RELOC LE 0).ZG436A22    OK                      01248100
&ZCVAL        SETC '&ZCVAL RELOC'               INCORRECT KEY USED      01248200
.ZG436A22     AIF   (K'&RECTYPE LE 0).ZG436A23  OK                      01248300
&ZCVAL        SETC '&ZCVAL RECTYPE'             INCORRECT KEY USED      01248400
.ZG436A23     AIF   (K'&OFFSET LE 0).ZG436A24   OK                      01248500
&ZCVAL        SETC '&ZCVAL OFFSET'              INCORRECT KEY USED      01248600
.ZG436A24     AIF   (K'&SYMBOL LE 0).ZG436A25   OK                      01248700
&ZCVAL        SETC '&ZCVAL SYMBOL'              INCORRECT KEY USED      01248800
.ZG436A25     AIF   (K'&TCOUNT LE 0).ZG436A26   OK                      01248900
&ZCVAL        SETC '&ZCVAL TCOUNT'              INCORRECT KEY USED      01249000
.ZG436A26     AIF   (K'&NTYPE LE 0).ZG436A27    OK                      01249100
&ZCVAL        SETC '&ZCVAL NTYPE'               INCORRECT KEY USED      01249200
.ZG436A27     AIF   (K'&CULIST LE 0).ZG436A28   OK                      01249300
&ZCVAL        SETC '&ZCVAL CULIST'              INCORRECT KEY USED      01249400
.ZG436A28     AIF   (K'&ITYPE LE 0).ZG436A29    OK                      01249500
&ZCVAL        SETC '&ZCVAL ITYPE'               INCORRECT KEY USED      01249600
.ZG436A29     AIF   (K'&DLLNAME LE 0).ZG436A30  OK                      01249700
&ZCVAL        SETC '&ZCVAL DLLNAME'             INCORRECT KEY USED      01249800
.ZG436A30     AIF   (K'&INAME LE 0).ZG436A31    OK                      01249900
&ZCVAL        SETC '&ZCVAL INAME'               INCORRECT KEY USED      01250000
.ZG436A31     AIF   (K'&INTYPE LE 0).ZG436A32   OK                      01250100
&ZCVAL        SETC '&ZCVAL INTYPE'              INCORRECT KEY USED      01250200
.ZG436A32     AIF   (K'&DDNAME LE 0).ZG436A33   OK                      01250300
&ZCVAL        SETC '&ZCVAL DDNAME'              INCORRECT KEY USED      01250400
.ZG436A33     AIF   (K'&DEPTR LE 0).ZG436A34    OK                      01250500
&ZCVAL        SETC '&ZCVAL DEPTR'               INCORRECT KEY USED      01250600
.ZG436A34     AIF   (K'&MEMBER LE 0).ZG436A35   OK                      01250700
&ZCVAL        SETC '&ZCVAL MEMBER'              INCORRECT KEY USED      01250800
.ZG436A35     AIF   (K'&DCBPTR LE 0).ZG436A36   OK                      01250900
&ZCVAL        SETC '&ZCVAL DCBPTR'              INCORRECT KEY USED      01251000
.ZG436A36     AIF   (K'&EPTOKEN LE 0).ZG436A37  OK                      01251100
&ZCVAL        SETC '&ZCVAL EPTOKEN'             INCORRECT KEY USED      01251200
.ZG436A37     AIF   (K'&ATTRIB LE 0).ZG436A38   OK                      01251300
&ZCVAL        SETC '&ZCVAL ATTRIB'              INCORRECT KEY USED      01251400
.ZG436A38     AIF   (K'&ALIASES LE 0).ZG436A39  OK                      01251500
&ZCVAL        SETC '&ZCVAL ALIASES'             INCORRECT KEY USED      01251600
.ZG436A39     AIF   (K'&IMPORTS LE 0).ZG436A40  OK                      01251700
&ZCVAL        SETC '&ZCVAL IMPORTS'             INCORRECT KEY USED      01251800
.ZG436A40     AIF   (K'&EPLOC LE 0).ZG436A41    OK                      01251900
&ZCVAL        SETC '&ZCVAL EPLOC'               INCORRECT KEY USED      01252000
.ZG436A41     AIF   (K'&IDENTIFY LE 0).ZG436A42  OK                     01252100
&ZCVAL        SETC '&ZCVAL IDENTIFY'            INCORRECT KEY USED      01252200
.ZG436A42     AIF   (K'&EXTLST LE 0).ZG436A43   OK                      01252300
&ZCVAL        SETC '&ZCVAL EXTLST'              INCORRECT KEY USED      01252400
.ZG436A43     AIF   (K'&LNAME LE 0).ZG436A44    OK                      01252500
&ZCVAL        SETC '&ZCVAL LNAME'               INCORRECT KEY USED      01252600
.ZG436A44     AIF   (K'&NEWSECT LE 0).ZG436A45  OK                      01252700
&ZCVAL        SETC '&ZCVAL NEWSECT'             INCORRECT KEY USED      01252800
.ZG436A45     AIF   (K'&ENDDATA LE 0).ZG436A46  OK                      01252900
&ZCVAL        SETC '&ZCVAL ENDDATA'             INCORRECT KEY USED      01253000
.ZG436A46     AIF   (K'&MODLIB LE 0).ZG436A47   OK                      01253100
&ZCVAL        SETC '&ZCVAL MODLIB'              INCORRECT KEY USED      01253200
.ZG436A47     AIF   (K'&SNAME LE 0).ZG436A48    OK                      01253300
&ZCVAL        SETC '&ZCVAL SNAME'               INCORRECT KEY USED      01253400
.ZG436A48     AIF   (K'&REPLACE LE 0).ZG436A49  OK                      01253500
&ZCVAL        SETC '&ZCVAL REPLACE'             INCORRECT KEY USED      01253600
.ZG436A49     AIF   (K'&LIBOPT LE 0).ZG436A50   OK                      01253700
&ZCVAL        SETC '&ZCVAL LIBOPT'              INCORRECT KEY USED      01253800
.ZG436A50     AIF   (K'&OPTION LE 0).ZG436A51   OK                      01253900
&ZCVAL        SETC '&ZCVAL OPTION'              INCORRECT KEY USED      01254000
.ZG436A51     AIF   (K'&OPTVAL LE 0).ZG436A52   OK                      01254100
&ZCVAL        SETC '&ZCVAL OPTVAL'              INCORRECT KEY USED      01254200
.ZG436A52     AIF   (K'&PARMS LE 0).ZG436A53    OK                      01254300
&ZCVAL        SETC '&ZCVAL PARMS'               INCORRECT KEY USED      01254400
.ZG436A53     AIF   (K'&FILES LE 0).ZG436A54    OK                      01254500
&ZCVAL        SETC '&ZCVAL FILES'               INCORRECT KEY USED      01254600
.ZG436A54     AIF   (K'&EXITS LE 0).ZG436A55    OK                      01254700
&ZCVAL        SETC '&ZCVAL EXITS'               INCORRECT KEY USED      01254800
.ZG436A55     AIF   (K'&OPTIONS LE 0).ZG436A56  OK                      01254900
&ZCVAL        SETC '&ZCVAL OPTIONS'             INCORRECT KEY USED      01255000
.ZG436A56     AIF   (K'&ENVARS LE 0).ZG436A57   OK                      01255100
&ZCVAL        SETC '&ZCVAL ENVARS'              INCORRECT KEY USED      01255200
.ZG436A57     AIF   (K'&ZCVAL LE 0).ZG436A58    OK                      01255300
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)                               01255400
              AIF  (K'&ZCVAL LE 160).ZG436A58A                          01255500
&ZCVAL        SETC '&ZCVAL'(1,160)                                      01255600
&ZCVAL        SETC '&ZCVAL....'                                         01255700
.ZG436A58A    ANOP                                                      01255800
&ZMS          SETC  '"FUNC'                                             01255900
&ZMS          SETC  '&ZMS.=&FUNC"'                                      01256000
&ZMS          SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'                01256100
              MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'                01256200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01256300
.ZG436A58     ANOP  ,                                                   01256400
.*----------------------------------------------------------------***   01256500
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01256600
              AIF   (N'&WORKMOD LE 1).ZG438A    CK NUM                  01256700
&ZMS          SETC  '"WORKMOD='                                         01256800
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    01256900
&ZMS          SETC  '&ZMS "WORKMOD"'                                    01257000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01257100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01257200
.ZG438A       ANOP  ,                                                   01257300
.*-------------------------------------------------------------------   01257400
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01257500
&ZXWORKMOD    SETC  'INPUT'     SET IN/OUTPUT                           01257600
&XWORKMOD     SETC  '&WORKMOD(1)'               SET XVARIABLE           01257700
              AIF   (N'&WORKMOD GT 1).ZG438B    MULTI                   01257800
&XWORKMOD     SETC  '&WORKMOD'  SET XVARIABLE                           01257900
.ZG438B       AIF   (K'&WORKMOD(1) GT 0).ZG438C                         01258000
&ZXWORKMOD    SETC  ''          RESET IN/OUTPUT                         01258100
&ZMS          SETC  ' '                                                 01258200
&ZMS          SETC  '&ZMS "WORKMOD" KEY AND ITS'                        01258300
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    01258400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01258500
.ZG438C       ANOP  ,                                                   01258600
.*-------------------------------------------------------------------   01258700
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01258800
              AIF   (K'&ZXWORKMOD LE 0).ZG438R  NOT I/O                 01258900
              AIF   ('&XWORKMOD'(1,1) NE '(').ZG438R                    01259000
&ZCGPR        SETC  '&XWORKMOD'(2,K'&XWORKMOD-2)                        01259100
              AIF   ('&ZCGPR'(1,1) NE '0').ZG438P                       01259200
              AIF   (K'&ZCGPR GT 2).ZG438Q                              01259300
              AIF   ('&ZCGPR' EQ '0').ZG438Q                            01259400
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       01259500
              AIF   (T'&ZCGPR NE 'N').ZG438Q    INVALID REG NAME        01259600
.ZG438P       ANOP  ,                                                   01259700
              AIF   (T'&ZCGPR NE 'N').ZG438R    NON NUMERIC             01259800
              AIF   ('&ZCGPR' LT '2').ZG438Q                            01259900
              AIF   ('&ZCGPR' LE '12').ZG438R                           01260000
.ZG438Q       ANOP  ,                                                   01260100
&ZMS          SETC  '"WORKMOD='                                         01260200
&ZMS          SETC  '&ZMS.&WORKMOD"'                                    01260300
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           01260400
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    01260500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01260600
.ZG438R       ANOP  ,                                                   01260700
.*----------------------------------------------------------------***   01260800
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     01260900
              AIF   (N'&ORIGIN LE 1).ZG441A     CK NUM                  01261000
&ZMS          SETC  '"ORIGIN='                                          01261100
&ZMS          SETC  '&ZMS.&ORIGIN"'                                     01261200
&ZMS          SETC  '&ZMS "ORIGIN"'                                     01261300
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01261400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01261500
.ZG441A       ANOP  ,                                                   01261600
.*-------------------------------------------------------------------   01261700
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         01261800
&ZXORIGIN     SETC  'INPUT'     SET IN/OUTPUT                           01261900
&XORIGIN      SETC  '&ORIGIN(1)'                SET XVARIABLE           01262000
              AIF   (N'&ORIGIN GT 1).ZG441B     MULTI                   01262100
&XORIGIN      SETC  '&ORIGIN'   SET XVARIABLE                           01262200
.ZG441B       AIF   (K'&ORIGIN(1) GT 0).ZG441C                          01262300
&ZXORIGIN     SETC  ''          RESET IN/OUTPUT                         01262400
&ZMS          SETC  ' '                                                 01262500
&ZMS          SETC  '&ZMS "ORIGIN" KEY AND ITS'                         01262600
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    01262700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01262800
.ZG441C       ANOP  ,                                                   01262900
.*-------------------------------------------------------------------   01263000
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    01263100
              AIF   (K'&ZXORIGIN LE 0).ZG441R   NOT I/O                 01263200
              AIF   ('&XORIGIN'(1,1) NE '(').ZG441R                     01263300
&ZCGPR        SETC  '&XORIGIN'(2,K'&XORIGIN-2)                          01263400
              AIF   ('&ZCGPR'(1,1) NE '0').ZG441P                       01263500
              AIF   (K'&ZCGPR GT 2).ZG441Q                              01263600
              AIF   ('&ZCGPR' EQ '0').ZG441Q                            01263700
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       01263800
              AIF   (T'&ZCGPR NE 'N').ZG441Q    INVALID REG NAME        01263900
.ZG441P       ANOP  ,                                                   01264000
              AIF   (T'&ZCGPR NE 'N').ZG441R    NON NUMERIC             01264100
              AIF   ('&ZCGPR' LT '2').ZG441Q                            01264200
              AIF   ('&ZCGPR' LE '12').ZG441R                           01264300
.ZG441Q       ANOP  ,                                                   01264400
&ZMS          SETC  '"ORIGIN='                                          01264500
&ZMS          SETC  '&ZMS.&ORIGIN"'                                     01264600
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           01264700
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    01264800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01264900
.ZG441R       ANOP  ,                                                   01265000
.*----------------------------------------------------------------***   01265100
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01265200
              AIF   (N'&REGION LE 1).ZG444A     CK NUM                  01265300
&ZMS          SETC  '"REGION='                                          01265400
&ZMS          SETC  '&ZMS.&REGION"'                                     01265500
&ZMS          SETC  '&ZMS "REGION"'                                     01265600
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01265700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01265800
.ZG444A       ANOP  ,                                                   01265900
.*-------------------------------------------------------------------   01266000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01266100
&XREGION      SETC  ''          INITIALIZE XVARIABLE                    01266200
.ZG445A   AIF   ('&REGION(1)' NE 'N').ZG446A                            01266300
&XREGION      SETC  'N'         SET KEYWORD                             01266400
.*-------------------------------------------------------------------   01266500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01266600
.ZG446A   AIF   ('&REGION(1)' NE 'Y').ZG447A                            01266700
&XREGION      SETC  'Y'         SET KEYWORD                             01266800
.*-------------------------------------------------------------------   01266900
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01267000
.ZG447A       AIF   (K'&XREGION GT 0).ZG447C    KEYWORD                 01267100
              AIF   (K'&REGION(1) LE 0).ZG447B                          01267200
&ZMS          SETC  '"REGION='                                          01267300
&ZMS          SETC  '&ZMS.&REGION"'                                     01267400
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           01267500
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 01267600
&ZMS          SETC  '&ZMS "N"'                                          01267700
&ZMS          SETC  '&ZMS OR "Y".'                                      01267800
              MNOTE 8,' &ZMS '                                          01267900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01268000
.ZG447B       ANOP  ,                                                   01268100
&XREGION      SETC  'N'         SET DEFAULT KEYWORD                     01268200
.ZG447C       ANOP  ,                                                   01268300
&ZXREGION     SETC  'INPUT'     SET IN/OUTPUT                           01268400
.*------------------------------------------------------------------    01268500
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01268600
.ZG448        ANOP  ,                                                   01268700
&ZXFUNC       SETC  'INPUT'     SET IN/OUTPUT                           01268800
              AIF   (K'&XFUNC GT 0).ZG448E      VALID ARG               01268900
              AIF   (T'&FUNC EQ 'O').ZG448D     OMITTED                 01269000
&ZASYSLNDX    SETA  0                                                   01269100
.ZG448A       ANOP  ,           POSITIONAL MACRO KEY                    01269200
&ZASYSLNDX    SETA  &ZASYSLNDX+1                                        01269300
              AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG448C                   01269400
&ZTLC         SETC 'FUNC'                                               01269500
              AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG448A          01269600
.ZG448B       ANOP  ,                                                   01269700
&ZXFUNC       SETC  ''          RESET IN/OUTPUT                         01269800
&ZMS          SETC  'THE "FUNC" KEY'                                    01269900
&ZMS          SETC  '&ZMS MUST CONTAIN ONE'                             01270000
              MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                    01270100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01270200
              AGO   .ZG448E                                             01270300
.ZG448C       ANOP  ,                                                   01270400
&ZXFUNC       SETC  ''          RESET IN/OUTPUT                         01270500
&ZMS          SETC  '"FUNC='                                            01270600
&ZMS          SETC  '&ZMS.&FUNC"'                                       01270700
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           01270800
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 01270900
&ZMS          SETC  '&ZMS "ADDA",'                                      01271000
&ZMS          SETC  '&ZMS "ALIGNT",'                                    01271100
&ZMS          SETC  '&ZMS "ALTERW",'                                    01271200
&ZMS          SETC  '&ZMS "AUTOC",'                                     01271300
&ZMS          SETC  '&ZMS "BINDW",'                                     01271400
&ZMS          SETC  '&ZMS "CREATEW",'                                   01271500
&ZMS          SETC  '&ZMS "DELETEW",'                                   01271600
&ZMS          SETC  '&ZMS "DLLR",'                                      01271700
&ZMS          SETC  '&ZMS "ENDD",'                                      01271800
&ZMS          SETC  '&ZMS "GETD",'                                      01271900
&ZMS          SETC  '&ZMS "GETE",'                                      01272000
&ZMS          SETC  '&ZMS "GETN",'                                      01272100
&ZMS          SETC  '&ZMS "GETC",'                                      01272200
&ZMS          SETC  '&ZMS "IMPORT",'                                    01272300
&ZMS          SETC  '&ZMS "INCLUDE",'                                   01272400
&ZMS          SETC  '&ZMS "INSERTS",'                                   01272500
              MNOTE 8,' &ZMS '                                          01272600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01272700
&ZMS          SETC  '(CONTINUED) '                                      01272800
&ZMS          SETC  '&ZMS "LOADW",'                                     01272900
&ZMS          SETC  '&ZMS "ORDERS",'                                    01273000
&ZMS          SETC  '&ZMS "PUTD",'                                      01273100
&ZMS          SETC  '&ZMS "RENAME",'                                    01273200
&ZMS          SETC  '&ZMS "RESETW",'                                    01273300
&ZMS          SETC  '&ZMS "SAVEW",'                                     01273400
&ZMS          SETC  '&ZMS "SETL",'                                      01273500
&ZMS          SETC  '&ZMS "SETO",'                                      01273600
&ZMS          SETC  '&ZMS "STARTD",'                                    01273700
&ZMS          SETC  '&ZMS OR "STARTS".'                                 01273800
              MNOTE 8,' &ZMS '                                          01273900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01274000
              AGO   .ZG448E                                             01274100
.ZG448D       ANOP  ,                                                   01274200
&XFUNC        SETC  'ADDA'      SET DEFAULT KEYWORD                     01274300
.ZG448E       ANOP  ,                                                   01274400
.*------------------------------------------------------------------    01274500
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           01274600
              AIF   (K'&FUNC(1) GT 0).ZG448F    PARM                    01274700
&XFUNC        SETC  ''          ENSURE NULL KEYWORD                     01274800
&ZXFUNC       SETC  ''          RESET IN/OUTPUT                         01274900
&ZMS          SETC  'THE'                                               01275000
&ZMS          SETC  '&ZMS "FUNC" KEY AND ITS'                           01275100
&ZMS          SETC  '&ZMS ARGUMENT ARE REQUIRED.'                       01275200
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 01275300
&ZMS          SETC  '&ZMS "ADDA",'                                      01275400
&ZMS          SETC  '&ZMS "ALIGNT",'                                    01275500
&ZMS          SETC  '&ZMS "ALTERW",'                                    01275600
&ZMS          SETC  '&ZMS "AUTOC",'                                     01275700
&ZMS          SETC  '&ZMS "BINDW",'                                     01275800
&ZMS          SETC  '&ZMS "CREATEW",'                                   01275900
&ZMS          SETC  '&ZMS "DELETEW",'                                   01276000
&ZMS          SETC  '&ZMS "DLLR",'                                      01276100
&ZMS          SETC  '&ZMS "ENDD",'                                      01276200
&ZMS          SETC  '&ZMS "GETD",'                                      01276300
&ZMS          SETC  '&ZMS "GETE",'                                      01276400
&ZMS          SETC  '&ZMS "GETN",'                                      01276500
&ZMS          SETC  '&ZMS "GETC",'                                      01276600
&ZMS          SETC  '&ZMS "IMPORT",'                                    01276700
&ZMS          SETC  '&ZMS "INCLUDE",'                                   01276800
              MNOTE 8,' &ZMS '                                          01276900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01277000
&ZMS          SETC  '(CONTINUED) '                                      01277100
&ZMS          SETC  '&ZMS "INSERTS",'                                   01277200
&ZMS          SETC  '&ZMS "LOADW",'                                     01277300
&ZMS          SETC  '&ZMS "ORDERS",'                                    01277400
&ZMS          SETC  '&ZMS "PUTD",'                                      01277500
&ZMS          SETC  '&ZMS "RENAME",'                                    01277600
&ZMS          SETC  '&ZMS "RESETW",'                                    01277700
&ZMS          SETC  '&ZMS "SAVEW",'                                     01277800
&ZMS          SETC  '&ZMS "SETL",'                                      01277900
&ZMS          SETC  '&ZMS "SETO",'                                      01278000
&ZMS          SETC  '&ZMS "STARTD",'                                    01278100
&ZMS          SETC  '&ZMS OR "STARTS".'                                 01278200
              MNOTE 8,' &ZMS '                                          01278300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01278400
.ZG448F       ANOP  ,                                                   01278500
.*----------------------------------------------------------------***   01278600
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    01278700
              AIF   (N'&RETCODE LE 1).ZG450A    CK NUM                  01278800
&ZMS          SETC  '"RETCODE='                                         01278900
&ZMS          SETC  '&ZMS.&RETCODE"'                                    01279000
&ZMS          SETC  '&ZMS "RETCODE"'                                    01279100
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01279200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01279300
.ZG450A       ANOP  ,                                                   01279400
.*-------------------------------------------------------------------   01279500
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        01279600
              AIF   (K'&RETCODE(1) LE 0).ZG450C  NO PARM                01279700
&ZXRETCODE    SETC  'OUTPUT'    SET OUTPUT                              01279800
&XRETCODE     SETC  '&RETCODE(1)'               SET XVARIABLE           01279900
              AIF   (N'&RETCODE GT 1).ZG450C                            01280000
&XRETCODE     SETC  '&RETCODE'  SET XVARIABLE                           01280100
.ZG450C       ANOP  ,                                                   01280200
.*-------------------------------------------------------------------   01280300
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   01280400
              AIF   (K'&ZXRETCODE LE 0).ZG450R  NOT I/O                 01280500
              AIF   ('&XRETCODE'(1,1) NE '(').ZG450R                    01280600
&ZCGPR        SETC  '&XRETCODE'(2,K'&XRETCODE-2)                        01280700
              AIF   ('&ZCGPR'(1,1) NE '0').ZG450P                       01280800
              AIF   (K'&ZCGPR GT 2).ZG450Q                              01280900
              AIF   ('&ZCGPR' EQ '0').ZG450Q                            01281000
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       01281100
              AIF   (T'&ZCGPR NE 'N').ZG450Q    INVALID REG NAME        01281200
.ZG450P       ANOP  ,                                                   01281300
              AIF   (T'&ZCGPR NE 'N').ZG450R    NON NUMERIC             01281400
              AIF   ('&ZCGPR' LT '2').ZG450Q                            01281500
              AIF   ('&ZCGPR' LE '12').ZG450R                           01281600
.ZG450Q       ANOP  ,                                                   01281700
&ZMS          SETC  '"RETCODE='                                         01281800
&ZMS          SETC  '&ZMS.&RETCODE"'                                    01281900
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           01282000
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    01282100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01282200
.ZG450R       ANOP  ,                                                   01282300
.*----------------------------------------------------------------***   01282400
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    01282500
              AIF   (N'&RSNCODE LE 1).ZG453A    CK NUM                  01282600
&ZMS          SETC  '"RSNCODE='                                         01282700
&ZMS          SETC  '&ZMS.&RSNCODE"'                                    01282800
&ZMS          SETC  '&ZMS "RSNCODE"'                                    01282900
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01283000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01283100
.ZG453A       ANOP  ,                                                   01283200
.*-------------------------------------------------------------------   01283300
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        01283400
              AIF   (K'&RSNCODE(1) LE 0).ZG453C  NO PARM                01283500
&ZXRSNCODE    SETC  'OUTPUT'    SET OUTPUT                              01283600
&XRSNCODE     SETC  '&RSNCODE(1)'               SET XVARIABLE           01283700
              AIF   (N'&RSNCODE GT 1).ZG453C                            01283800
&XRSNCODE     SETC  '&RSNCODE'  SET XVARIABLE                           01283900
.ZG453C       ANOP  ,                                                   01284000
.*-------------------------------------------------------------------   01284100
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   01284200
              AIF   (K'&ZXRSNCODE LE 0).ZG453R  NOT I/O                 01284300
              AIF   ('&XRSNCODE'(1,1) NE '(').ZG453R                    01284400
&ZCGPR        SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                        01284500
              AIF   ('&ZCGPR'(1,1) NE '0').ZG453P                       01284600
              AIF   (K'&ZCGPR GT 2).ZG453Q                              01284700
              AIF   ('&ZCGPR' EQ '0').ZG453Q                            01284800
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       01284900
              AIF   (T'&ZCGPR NE 'N').ZG453Q    INVALID REG NAME        01285000
.ZG453P       ANOP  ,                                                   01285100
              AIF   (T'&ZCGPR NE 'N').ZG453R    NON NUMERIC             01285200
              AIF   ('&ZCGPR' LT '2').ZG453Q                            01285300
              AIF   ('&ZCGPR' LE '12').ZG453R                           01285400
.ZG453Q       ANOP  ,                                                   01285500
&ZMS          SETC  '"RSNCODE='                                         01285600
&ZMS          SETC  '&ZMS.&RSNCODE"'                                    01285700
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           01285800
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    01285900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01286000
.ZG453R       ANOP  ,                                                   01286100
.*----------------------------------------------------------------***   01286200
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01286300
              AIF   (N'&VERSION LE 1).ZG456A    CK NUM                  01286400
&ZMS          SETC  '"VERSION='                                         01286500
&ZMS          SETC  '&ZMS.&VERSION"'                                    01286600
&ZMS          SETC  '&ZMS "VERSION"'                                    01286700
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 01286800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01286900
.ZG456A       ANOP  ,                                                   01287000
.*-------------------------------------------------------------------   01287100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01287200
&XVERSION     SETC  ''          INITIALIZE XVARIABLE                    01287300
.ZG457A   AIF   ('&VERSION(1)' NE '1').ZG458A                           01287400
&XVERSION     SETC  '1'         SET KEYWORD                             01287500
.*-------------------------------------------------------------------   01287600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01287700
.ZG458A   AIF   ('&VERSION(1)' NE '2').ZG459A                           01287800
&XVERSION     SETC  '2'         SET KEYWORD                             01287900
.*-------------------------------------------------------------------   01288000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01288100
.ZG459A   AIF   ('&VERSION(1)' NE '3').ZG460A                           01288200
&XVERSION     SETC  '3'         SET KEYWORD                             01288300
.*-------------------------------------------------------------------   01288400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01288500
.ZG460A   AIF   ('&VERSION(1)' NE '4').ZG461A                           01288600
&XVERSION     SETC  '4'         SET KEYWORD                             01288700
.*-------------------------------------------------------------------   01288800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01288900
.ZG461A   AIF   ('&VERSION(1)' NE '5').ZG462A                           01289000
&XVERSION     SETC  '5'         SET KEYWORD                             01289100
.*-------------------------------------------------------------------   01289200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01289300
.ZG462A   AIF   ('&VERSION(1)' NE '6').ZG463A                           01289400
&XVERSION     SETC  '6'         SET KEYWORD                             01289500
.*-------------------------------------------------------------------   01289600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01289700
.ZG463A   AIF   ('&VERSION(1)' NE '7').ZG464A                           01289800
&XVERSION     SETC  '7'         SET KEYWORD                             01289900
.*-------------------------------------------------------------------   01290000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01290100
.ZG464A   AIF   ('&VERSION(1)' NE '8').ZG465A                           01290200
&XVERSION     SETC  '8'         SET KEYWORD                             01290300
.*-------------------------------------------------------------------   01290400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01290500
.ZG465A   AIF   ('&VERSION(1)' NE '9').ZG466A                           01290600
&XVERSION     SETC  '9'         SET KEYWORD                             01290700
.*-------------------------------------------------------------------   01290800
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             01290900
.ZG466A       AIF   (K'&XVERSION GT 0).ZG466C   KEYWORD                 01291000
              AIF   (K'&VERSION(1) LE 0).ZG466B                         01291100
&ZMS          SETC  '"VERSION='                                         01291200
&ZMS          SETC  '&ZMS.&VERSION"'                                    01291300
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           01291400
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 01291500
&ZMS          SETC  '&ZMS "1",'                                         01291600
&ZMS          SETC  '&ZMS "2",'                                         01291700
&ZMS          SETC  '&ZMS "3",'                                         01291800
&ZMS          SETC  '&ZMS "4",'                                         01291900
&ZMS          SETC  '&ZMS "5",'                                         01292000
&ZMS          SETC  '&ZMS "6",'                                         01292100
&ZMS          SETC  '&ZMS "7",'                                         01292200
&ZMS          SETC  '&ZMS "8",'                                         01292300
&ZMS          SETC  '&ZMS OR "9".'                                      01292400
              MNOTE 8,' &ZMS '                                          01292500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01292600
.ZG466B       ANOP  ,                                                   01292700
&XVERSION     SETC  '1'         SET DEFAULT KEYWORD                     01292800
.ZG466C       ANOP  ,                                                   01292900
&ZXVERSION    SETC  'INPUT'     SET IN/OUTPUT                           01293000
.******************************************************************     01293100
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        01293200
.******************************************************************     01293300
              ACTR  10000                                               01293400
.*----------------------------------------------------------------***   01293500
.***AH.P02 EXTRA POSITIONALS                                            01293600
              AIF   (N'&SYSLIST LE 0).ZGLISTX   NO EXTRAS               01293700
              AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL                01293800
              AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL            01293900
              AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL             01294000
.ZGLISTX1     ANOP  ,                                                   01294100
&ZCVAL        SETC  ''          ERROR FIELD                             01294200
&ZAWRK        SETA  0           POSITIONAL NUMBER                       01294300
.ZGLIST2      ANOP  ,                                                   01294400
&ZAWRK        SETA  &ZAWRK+1    NEXT POSITIONAL                         01294500
              AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE                01294600
&ZCVAL        SETC '&ZCVAL,&SYSLIST(&ZAWRK)'    EXTRA                   01294700
              AGO   .ZGLIST2                                            01294800
.*                                                                      01294900
.ZGLIST3      ANOP  ,                                                   01295000
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)       STRIP COMMA             01295100
&ZMS          SETC  'POSITIONAL ARGUMENT(S),'                           01295200
&ZMS          SETC  '&ZMS "&ZCVAL"'                                     01295300
&ZMS          SETC  '&ZMS CANNOT BE USED.'                              01295400
&ZMS          SETC  '&ZMS NO POSITIONAL ARGUMENTS'                      01295500
              MNOTE 8,' &ZMS ARE ALLOWED.'                              01295600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             01295700
.ZGLISTX      ANOP  ,                                                   01295800
&ZASYSLNDX    SETA  0                                                   01295900
.*-------------------------------------------------------------------   01296000
.***AG.MF04 MF=(SLE)                                                    01296100
.ZGMFX        ANOP  ,           END OF FULL SYNTAX CHECK                01296200
.*******************************************************************    01296300
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       01296400
.*******************************************************************    01296500
              AIF   (&ZMACRET NE 0).ZLX2        ERROR DETECTED          01296600
.*******************************************************************    01296700
.***AE.01  START OF IEWBIND2 MACRO CODE                                 01296800
.*******************************************************************    01296900
              LCLC  &M0M0001                 NAME                       01297000
&M0M0001      SETC  '&XLABEL'                SET NAME                   01297100
              AIF   (K'&XLABEL NE 0).XLAB2                              01297200
&M0M0001      SETC  'M00M&SYSNDX'            DEFAULT NAME               01297300
.*                                                                      01297400
.XLAB2        ANOP  ,                                                   01297500
              AIF   ('&XMF' EQ 'L').XLAB3                               01297600
&M0M0001 DS    0H                             IEWBIND2-0                01297700
.XLAB3        ANOP  ,                                                   01297800
.*******************************************************************    01297900
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              01298000
.*******************************************************************    01298100
              PUSH  PRINT                                               01298200
              AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON          01298300
              PRINT OFF         ++ PR01                                 01298400
              AGO   .ZPRNTXX                                            01298500
.ZPRINTX      PRINT ON                                                  01298600
.ZPRNTXX      ANOP  ,                                                   01298700
.********************************************************************   01298800
.***AL.A01  INTERNAL ARRAY TO PRODUCE FORMATTED CODE                    01298900
.********************************************************************   01299000
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       01299100
                      LCLA  &ZOPN1         INVOCATION INDEX             01299200
                      LCLC  &ZOPL(4095)    LABEL                        01299300
                      LCLC  &ZOPO(4095)    OPERATION                    01299400
                      LCLC  &ZOPV(4095)    VALUE                        01299500
                      LCLC  &ZOPD(4095)    DESCRIPTION                  01299600
.*                                                                      01299700
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     01299800
.*-------------------------------------------------------------------   01299900
.***AL.A10 SET ZPLLEN                                                   01300000
&ZPLLEN               SETA 56                                           01300100
.******************************************************************     01300200
.***AL.A05 IEWBIND2 FMT=ARG MF=S PARAMETER AREA                         01300300
.******************************************************************     01300400
                      AIF   ('&XMF' NE 'S').ZLMFSX  NOT STANDARD MF     01300500
&XMFCTRL              SETC  '#Z'.'&SYSNDX'.'A'                          01300600
&ZN                   SETA  &ZPLLEN/4                                   01300700
&ZCVAL                SETC  '&ZN'.'A'                                   01300800
.*                                                                      01300900
&ZOPN                 SETA  &ZOPN+1                                     01301000
&ZOPL(&ZOPN)          SETC  ' '                                         01301100
                      AIF   (&SYSALVL NE 0).ZALVL1A                     01301200
&ZOPO(&ZOPN)          SETC  'B'                                         01301300
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                01301400
                      AGO   .ZALVL1B                                    01301500
.ZALVL1A              ANOP                                              01301600
&ZOPO(&ZOPN)          SETC  'CNOP'                                      01301700
&ZOPV(&ZOPN)          SETC  '0,4'                                       01301800
&ZOPN                 SETA  &ZOPN+1                                     01301900
&ZOPL(&ZOPN)          SETC  ' '                                         01302000
&ZOPO(&ZOPN)          SETC  'BRAS'                                      01302100
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              01302200
.ZALVL1B              ANOP                                              01302300
&ZOPD(&ZOPN)          SETC  '++ IEWBIND2 ARG PARMS'                     01302400
.*                                                                      01302500
&ZOPN                 SETA  &ZOPN+1                                     01302600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL'                                  01302700
&ZOPO(&ZOPN)          SETC  'DS'                                        01302800
&ZOPV(&ZOPN)          SETC  '&ZCVAL'                                    01302900
&ZOPD(&ZOPN)          SETC  '++ IEWBIND2 ARG PARMS'                     01303000
.*-------------------------------------------------------------------   01303100
.***AL.A07 IEWBIND2 FMT=ARG MF=S PARAMETERS                             01303200
&ZOPN                 SETA  &ZOPN+1                                     01303300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                01303400
&ZOPO(&ZOPN)          SETC  'DC'                                        01303500
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   01303600
&ZOPD(&ZOPN)          SETC  '++ IEWBIND2 ARG PARMS'                     01303700
.*                                                                      01303800
.ZLMFSX               ANOP  ,                                           01303900
.******************************************************************     01304000
.***AL.AL01 IEWBIND2 FMT=ARG MF=L PARAMETER AREA                        01304100
.******************************************************************     01304200
                      AIF   ('&XMF' NE 'L').ZLMFLX  NOT MF=L            01304300
&ZOPN                 SETA  &ZOPN+1                                     01304400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL'                                  01304500
&ZOPO(&ZOPN)          SETC  'DS'                                        01304600
&ZOPV(&ZOPN)          SETC  '&XMFATTR'                                  01304700
&ZOPD(&ZOPN)          SETC  '++ IEWBIND2 ARG PARMS'                     01304800
.*                                                                      01304900
&ZOPN                 SETA  &ZOPN+1                                     01305000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XPARAMETER01@'                   01305100
&ZOPO(&ZOPN)          SETC  'DS'                                        01305200
&ZOPV(&ZOPN)          SETC  'A'                                         01305300
&ZOPD(&ZOPN)          SETC  '++ FIELD_LABEL F'                          01305400
.*                                                                      01305500
&ZOPN                 SETA  &ZOPN+1                                     01305600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XPARAMETER02@'                   01305700
&ZOPO(&ZOPN)          SETC  'DS'                                        01305800
&ZOPV(&ZOPN)          SETC  'A'                                         01305900
&ZOPD(&ZOPN)          SETC  '++ FIELD_LABEL F'                          01306000
.*                                                                      01306100
&ZOPN                 SETA  &ZOPN+1                                     01306200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XPARAMETER03@'                   01306300
&ZOPO(&ZOPN)          SETC  'DS'                                        01306400
&ZOPV(&ZOPN)          SETC  'A'                                         01306500
&ZOPD(&ZOPN)          SETC  '++ FIELD_LABEL F'                          01306600
.*                                                                      01306700
&ZOPN                 SETA  &ZOPN+1                                     01306800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XPARAMETER04@'                   01306900
&ZOPO(&ZOPN)          SETC  'DS'                                        01307000
&ZOPV(&ZOPN)          SETC  'A'                                         01307100
&ZOPD(&ZOPN)          SETC  '++ FIELD_LABEL CL4'                        01307200
.*                                                                      01307300
&ZOPN                 SETA  &ZOPN+1                                     01307400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XPARAMETER05@'                   01307500
&ZOPO(&ZOPN)          SETC  'DS'                                        01307600
&ZOPV(&ZOPN)          SETC  'A'                                         01307700
&ZOPD(&ZOPN)          SETC  '++ FIELD_LABEL CL4'                        01307800
.*                                                                      01307900
&ZOPN                 SETA  &ZOPN+1                                     01308000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XPARAMETER06@'                   01308100
&ZOPO(&ZOPN)          SETC  'DS'                                        01308200
&ZOPV(&ZOPN)          SETC  'A'                                         01308300
&ZOPD(&ZOPN)          SETC  '++ FIELD_LABEL CL4'                        01308400
.*                                                                      01308500
&ZOPN                 SETA  &ZOPN+1                                     01308600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XPARAMETER07@'                   01308700
&ZOPO(&ZOPN)          SETC  'DS'                                        01308800
&ZOPV(&ZOPN)          SETC  'A'                                         01308900
&ZOPD(&ZOPN)          SETC  '++ FIELD_LABEL CL4'                        01309000
.*                                                                      01309100
&ZOPN                 SETA  &ZOPN+1                                     01309200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XPARAMETER08@'                   01309300
&ZOPO(&ZOPN)          SETC  'DS'                                        01309400
&ZOPV(&ZOPN)          SETC  'A'                                         01309500
&ZOPD(&ZOPN)          SETC  '++ FIELD_LABEL CL4'                        01309600
.*                                                                      01309700
&ZOPN                 SETA  &ZOPN+1                                     01309800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XPARAMETER09@'                   01309900
&ZOPO(&ZOPN)          SETC  'DS'                                        01310000
&ZOPV(&ZOPN)          SETC  'A'                                         01310100
&ZOPD(&ZOPN)          SETC  '++ FIELD_LABEL CL4'                        01310200
.*                                                                      01310300
&ZOPN                 SETA  &ZOPN+1                                     01310400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XPARAMETER10@'                   01310500
&ZOPO(&ZOPN)          SETC  'DS'                                        01310600
&ZOPV(&ZOPN)          SETC  'A'                                         01310700
&ZOPD(&ZOPN)          SETC  '++ FIELD_LABEL CL4'                        01310800
.*                                                                      01310900
&ZOPN                 SETA  &ZOPN+1                                     01311000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XPARAMETER11@'                   01311100
&ZOPO(&ZOPN)          SETC  'DS'                                        01311200
&ZOPV(&ZOPN)          SETC  'A'                                         01311300
&ZOPD(&ZOPN)          SETC  '++ FIELD_LABEL CL4'                        01311400
.*                                                                      01311500
&ZOPN                 SETA  &ZOPN+1                                     01311600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XPARAMETER12@'                   01311700
&ZOPO(&ZOPN)          SETC  'DS'                                        01311800
&ZOPV(&ZOPN)          SETC  'A'                                         01311900
&ZOPD(&ZOPN)          SETC  '++ FIELD_LABEL CL4'                        01312000
.*                                                                      01312100
&ZOPN                 SETA  &ZOPN+1                                     01312200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XPARAMETER13@'                   01312300
&ZOPO(&ZOPN)          SETC  'DS'                                        01312400
&ZOPV(&ZOPN)          SETC  'A'                                         01312500
&ZOPD(&ZOPN)          SETC  '++ FIELD_LABEL CL4'                        01312600
.*                                                                      01312700
&ZOPN                 SETA  &ZOPN+1                                     01312800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XPARAMETER14@'                   01312900
&ZOPO(&ZOPN)          SETC  'DS'                                        01313000
&ZOPV(&ZOPN)          SETC  'A'                                         01313100
&ZOPD(&ZOPN)          SETC  '++ FIELD_LABEL CL4'                        01313200
.*-------------------------------------------------------------------   01313300
.***AL.AL08 IEWBIND2 FMT=ARG MF=L PARAMETER AREA DEFINED                01313400
                      AGO   .ZMFLX         EXIT, MF=L DONE              01313500
.*                                                                      01313600
.ZLMFLX               ANOP  ,                                           01313700
.********************************************************************   01313800
.***AI.A01 IEWBIND2 FMT=ARG FILL IN PARAMETER AREA                      01313900
.********************************************************************   01314000
                      ACTR  10000                                       01314100
&ZOPN                 SETA  &ZOPN+1                                     01314200
&ZOPL(&ZOPN)          SETC  ' '                                         01314300
&ZOPO(&ZOPN)          SETC  'XR'                                        01314400
&ZOPV(&ZOPN)          SETC  '0,0'                                       01314500
&ZOPD(&ZOPN)          SETC  '++ SET GPR TO ZERO'                        01314600
.*                                                                      01314700
&ZCVAL                SETC  'LA'           ASSUME XA MODE               01314800
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSTATE PRI     01314900
&ZCVAL                SETC  'LAE'          XAX MODE                     01315000
.ZIMFXA               ANOP ,                                            01315100
.*                                                                      01315200
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    01315300
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         01315400
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 01315500
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                01315600
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 01315700
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                01315800
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   01315900
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    01316000
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   01316100
&ZOPN                 SETA  &ZOPN+1                                     01316200
&ZOPL(&ZOPN)          SETC  ' '                                         01316300
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    01316400
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              01316500
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       01316600
                      AGO   .ZIMFNX                                     01316700
.*                                                                      01316800
.ZIMFN2               ANOP ,                                            01316900
&ZOPN                 SETA  &ZOPN+1                                     01317000
&ZOPL(&ZOPN)          SETC  ' '                                         01317100
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    01317200
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                01317300
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       01317400
.ZIMFNX               ANOP ,                                            01317500
.********************************************************************   01317600
.***AI.A02 IEWBIND2 FMT=ARG INITIALIZE PARAMETER AREA                   01317700
.********************************************************************   01317800
.***AI.L03 MF=(SLE)                                                     01317900
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      01318000
.*                                                                      01318100
&ZOPN                 SETA  &ZOPN+1                                     01318200
&ZOPL(&ZOPN)          SETC  ' '                                         01318300
&ZOPO(&ZOPN)          SETC  'XC'                                        01318400
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         01318500
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             01318600
.ZIMFLX               ANOP  ,                                           01318700
.*-------------------------------------------------------------------   01318800
&ZOPN1                SETA &ZOPN                                        01318900
.*******************************************************************    01319000
.***AO.X04  LABEL FOR MF=L PROCESSING                                   01319100
.*******************************************************************    01319200
.ZMFLX                ANOP  ,              MF=L PROCESSING              01319300
.*******************************************************************    01319400
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               01319500
.*******************************************************************    01319600
                      ACTR  10000                                       01319700
.*                                                                      01319800
                      LCLA  &ZLC           COLUMN POSITION              01319900
                      LCLA  &ZOPX          LIST TABLE INDEX             01320000
                      LCLC  &ZLL           LABEL                        01320100
                      LCLC  &ZLOP          OPERATION                    01320200
                      LCLC  &ZLV           VALUE                        01320300
                      LCLC  &ZLD           DESCRIPTION                  01320400
.*                                                                      01320500
&ZOPX                 SETA  1                                           01320600
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            01320700
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              01320800
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              01320900
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              01321000
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              01321100
                      AIF   (K'&ZLD LE 0).ZL5                           01321200
&ZLC                  SETA  35             COMMENT COLUMN               01321300
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    01321400
&ZLC                  SETA  33             COMMMENT COLUMN              01321500
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   01321600
&ZLV                  SETC  '&ZLV'.' '                                  01321700
                      AGO   .ZL3                                        01321800
.*                                                                      01321900
.ZL4                  ANOP  ,                                           01322000
&ZLV                  SETC  '&ZLV'.' '                                  01322100
.ZL5                  ANOP  ,                                           01322200
&ZLV                  SETC  '&ZLV'.'&ZLD'                               01322300
.*                                                                      01322400
&ZLL     &ZLOP &ZLV                                                     01322500
.*                                                                      01322600
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               01322700
                      AGO   .ZL2           CONTINUE LOOPING             01322800
.*                                                                      01322900
.ZLX                  ANOP  ,                                           01323000
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                01323100
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  01323200
         PUSH PRINT                                                     01323300
         PRINT OFF                                                      01323400
.****  Inner macro  to support register form for parms            @P5A* 01323500
         MACRO                                                          01323600
         IEWBRL2   &PARMA,&B                                            01323700
.*       &B is an optional register number.  Defaults to 14             01323800
         AIF  (K'&PARMA EQ 0).IEWBR07                                   01323900
         AIF   ('&PARMA'(1,1) NE '(').IEWBR04                           01324000
         AIF  (K'&B EQ 0).IEWBR03                                       01324100
         LR    &B,&PARMA(1)                                             01324200
.IEWBR03 ANOP                                                           01324300
         LR    14,&PARMA(1)                                             01324400
         AGO   .IEWBR07                                                 01324500
.IEWBR04 ANOP                                                           01324600
         AIF  (K'&B EQ 0).IEWBR05                                       01324700
         LA    &B,&PARMA                                                01324800
         AGO   .IEWBR07                                                 01324900
.IEWBR05 ANOP                                                           01325000
         LA    14,&PARMA                                                01325100
.IEWBR07 ANOP                                                           01325200
         MEND                                                           01325300
.****  Inner macro  to load register                              @P5A* 01325400
         MACRO                                                          01325500
         IEWBRG3   &VARA,&B                                             01325600
.*       &B is an optional register number.  Defaults to 14             01325700
         AIF  (K'&VARA EQ 0).IEWBG07                                    01325800
         AIF   ('&VARA'(1,1) NE '(').IEWBG04                            01325900
         AIF  (K'&B EQ 0).IEWBG03                                       01326000
         L     &B,0(,&VARA(1))                                          01326100
         AGO   .IEWBG07                                                 01326200
.IEWBG03 ANOP                                                           01326300
         L     14,0(,&VARA(1))                                          01326400
         AGO   .IEWBG07                                                 01326500
.IEWBG04 ANOP                                                           01326600
         AIF  (K'&B EQ 0).IEWBG05                                       01326700
         L     &B,&VARA                                                 01326800
         AGO   .IEWBG07                                                 01326900
.IEWBG05 ANOP                                                           01327000
         LA    14,&VARA                                                 01327100
.IEWBG07 ANOP                                                           01327200
         MEND                                                           01327300
.****  Inner macro  to support register form for output parms     @P5A* 01327400
.*       &B is target (may be register)                                 01327500
         MACRO                                                          01327600
         IEWBRS2   &A,&B                                                01327700
         AIF  (K'&B EQ 0).IEWBL08                                       01327800
         AIF   ('&B'(1,1) NE '(').IEWBL07                               01327900
         ST    &A,0(,&B(1))                                             01328000
         AGO   .IEWBL08                                                 01328100
.IEWBL07 ANOP                                                           01328200
         ST    &A,&B                                                    01328300
.IEWBL08 ANOP                                                           01328400
         MEND                                                           01328500
.**** End of Inner Macros                                         @P5A* 01328600
         POP  PRINT                                                     01328700
         AIF   ('&XAMODE' NE '0').IEWB010                               01328800
&XAMODE  SETC '=XL4''00004040'''                                        01328900
.IEWB010 AIF   ('&XAREA' NE '0').IEWB015                                01329000
&XAREA   SETC '=2FL4''0'''                                              01329100
.IEWB015  AIF   (K'&XAREA GT 0).IEWB020                                 01329200
&XAREA   SETC '=2FL4''0'''                                              01329300
.IEWB020  AIF   ('&XCALLIB' NE '0').IEWB385              @01C           01329400
&XCALLIB SETC '=XL4''00004040'''                                        01329500
.IEWB385  AIF   ('&XCLASS' NE '0').IEWB030               @05C           01329600
&XCLASS  SETC '=XL4''00004040'''                         @01A           01329700
.IEWB030  AIF   (K'&XCOUNT NE 0).IEWB040                                01329800
&XCOUNT  SETC  '=FL4''0'''                                              01329900
.IEWB040  AIF   ('&XCURSOR' NE '-1').IEWB050                            01330000
&XCURSOR SETC  '=FL4''-1'''                                             01330100
.IEWB050  AIF   (K'&XCURSOR GT 0).IEWB060                               01330200
&XCURSOR SETC  '=FL4''-1'''                                             01330300
.IEWB060  AIF   (K'&XDCBPTR GT 0).IEWB080                               01330400
&XDCBPTR SETC '=FL4''0'''                                               01330500
.IEWB080  AIF   (K'&XDDNAME NE 0).IEWB085                               01330600
&XDDNAME SETC  '=XL4''00004040'''                                       01330700
.IEWB085  AIF   (K'&XDEPTR GT 0).IEWB090                                01330800
&XDEPTR  SETC '=FL4''0'''                                               01330900
.IEWB090  AIF   (K'&XDIALOG GT 0).IEWB100                               01331000
&XDIALOG SETC '=2FL4''0'''                                              01331100
.IEWB100 AIF   ('&XENAME' NE '0').IEWB110                               01331200
&XENAME  SETC '=XL4''00004040'''                                        01331300
.IEWB110 AIF   ('&XDNAME' NE '0').IEWB120                    @PDA       01331400
&XDNAME  SETC '=XL4''00004040'''                             @PDA       01331500
.IEWB120 AIF   (K'&XEPTOKEN GT 0).IEWB130                    @PDC       01331600
&XEPTOKEN SETC '=FL4''0'''                                              01331700
.IEWB130 AIF   ('&XEXITS' NE '0').IEWB140                               01331800
&XEXITS  SETC '=FL4''0'''                                               01331900
.IEWB140 AIF   ('&XEXTLST' NE '0').IEWB141                              01332000
&XEXTLST SETC '=2FL4''0'''                                              01332100
.IEWB141 AIF   (K'&XEXTLST GT 0).IEWB150                                01332200
&XEXTLST SETC '=2FL4''0'''                                              01332300
.IEWB150 AIF   ('&XFILES' NE '0').IEWB160                               01332400
&XFILES  SETC '=FL4''0'''                                               01332500
.IEWB160 AIF   (K'&XLNAME GT 0).IEWB170                                 01332600
&XLNAME  SETC '=XL4''00004040'''                                        01332700
.IEWB170 AIF   ('&XLNAME' NE '0').IEWB190                               01332800
&XLNAME  SETC '=XL4''00004040'''                                        01332900
.IEWB190 AIF   ('&XMEMBER' NE '0').IEWB200                              01333000
&XMEMBER SETC '=XL4''00004040'''                                        01333100
.IEWB200 AIF   (K'&XMEMBER GT 0).IEWB220                                01333200
&XMEMBER SETC '=XL4''00004040'''                                        01333300
.IEWB220 AIF   ('&XMODLIB' NE '0').IEWB230                              01333400
&XMODLIB SETC '=XL4''00004040'''                                        01333500
.IEWB230 AIF   (K'&XNEWNAME NE 0).IEWB240                               01333600
&XNEWNAME SETC  '=XL4''00004040'''                                      01333700
.IEWB240 AIF   ('&XOFFSET' NE '-1').IEWB260                             01333800
&XOFFSET SETC  '=FL4''-1'''                                             01333900
.IEWB260 AIF   (K'&XOFFSET GT 0).IEWB270                                01334000
&XOFFSET SETC  '=FL4''-1'''                                             01334100
.IEWB270 AIF   ('&XOPTIONS' NE '0').IEWB280                             01334200
&XOPTIONS SETC '=FL4''0'''                                              01334300
.IEWB280 AIF   ('&XRECTYPE' NE '0').IEWB300                             01334400
&XRECTYPE SETC '=XL4''00004040'''                                       01334500
.IEWB300 AIF   (K'&XRETCODE GT 0).IEWB330                               01334600
&XRETCODE SETC '=FL4''-1'''                                             01334700
.IEWB330 AIF   (K'&XRSNCODE GT 0).IEWB340                               01334800
&XRSNCODE SETC '=FL4''-1'''                                             01334900
.IEWB340 AIF   ('&XSECTION' NE '0').IEWB350                             01335000
&XSECTION SETC '=XL4''00004040'''                                       01335100
.IEWB350 AIF   ('&XSNAME' NE '0').IEWB360                               01335200
&XSNAME  SETC '=XL4''00004040'''                                        01335300
.IEWB360 AIF   ('&XSYMBOL' NE '0').IEWB361                              01335400
&XSYMBOL SETC '=XL4''00004040'''                                        01335500
.IEWB361 AIF   (K'&XSYMBOL GT 0).IEWB370                                01335600
&XSYMBOL SETC '=XL4''00004040'''                                        01335700
.IEWB370 AIF   ('&XPARMS' NE '0').IEWB380                               01335800
&XPARMS   SETC '=XL4''00004040'''                                  @L2A 01335900
.IEWB380 AIF   (K'&XWORKMOD NE 0).IEWB390                          @L7C 01336000
&XWORKMOD SETC '=2FL4''0'''                                             01336100
.IEWB390 AIF   ('&XCULIST' NE '0').IEWB400                         @LBA 01336200
&XCULIST  SETC '=2FL4''0'''                                             01336300
.IEWB400 AIF   (K'&XCULIST GT 0).IEWB410                           @LBA 01336400
&XCULIST  SETC '=2FL4''0'''                                             01336500
.IEWB410 AIF   ('&XRELOC' NE '0').IEWB420                          @LBA 01336600
&XRELOC   SETC '=2FL4''0'''                                             01336700
.IEWB420 AIF   (K'&XRELOC GT 0).IEWB430                            @LBA 01336800
&XRELOC   SETC '=2FL4''0'''                                             01336900
.IEWB430 AIF   ('&XENVARS' NE '0').IEWB440                        @LBA  01337000
&XENVARS   SETC '=FL4''0'''                                             01337100
.IEWB440 AIF   (K'&XENVARS GT 0).IEWB450                           @LEA 01337200
&XENVARS   SETC '=FL4''0'''                                             01337300
.IEWB450 AIF   ('&XBDY' NE '0').IEWB452                            @PBC 01337400
&XBDY     SETC '=FL4''0'''                                              01337500
.IEWB452 AIF   ('&XBDY' NE '4096').IEWB454                         @PBA 01337600
&XBDY     SETC '=FL4''4096'''                                           01337700
.IEWB454 AIF   ('&XCLASSL' NE '0').IEWB456                         @LJA 01337800
&XCLASSL  SETC '=2FL4''0'''                                             01337900
.IEWB456 AIF   (K'&XCLASSL GT 0).IEWB460                           @LJA 01338000
&XCLASSL  SETC '=2FL4''0'''                                             01338100
.IEWB460 ANOP  ,                                                   @LJC 01338200
&TEMPX2  SETA  &XVERSION                                           @L7A 01338300
&TEMPX1  SETA  (&TEMPX2/16)                                        @L7A 01338400
&TEMPX2  SETA  (&TEMPX2-16*&TEMPX1)                                @L7A 01338500
&HEXV    SETC  '0123456789ABCDEF'                                  @L7A 01338600
&HEXV    SETC  '&HEXV'.'&HEXV'(&TEMPX1+1,1)                        @L7A 01338700
&HEXV    SETC  '&HEXV'.'&HEXV'(&TEMPX2+1,1)                        @L7A 01338800
&HEXV    SETC  '00'.'&HEXV'(17,2)                                  @L7A 01338900
.IEWB499 ANOP  ,                                                        01339000
.********************************************************************** 01339100
.* Fill in parameter list                                             * 01339200
.********************************************************************** 01339300
.********************************************************************** 01339400
.* First, fill in RETCODE and RSNCODE arguments                       * 01339500
.********************************************************************** 01339600
.*Pervasive changes made to handle register arguments             @p4a* 01339700
         AIF   (K'&RETCODE EQ 0).IEWB501                           @L7A 01339800
         IEWBRL2  &XRETCODE    ++ RETCODE - return code                 01339900
         ST    14,4(,1)                                                 01340000
.IEWB501 AIF   (K'&RSNCODE EQ 0).IEWB502                           @L7A 01340100
         IEWBRL2  &XRSNCODE    ++ RSNCODE - reason code                 01340200
         ST    14,8(,1)                                                 01340300
.IEWB502 ANOP  ,                                                   @L7A 01340400
.********************************************************************** 01340500
.* Secondly, fill in function dependent arguments                     * 01340600
.********************************************************************** 01340700
.*******  ADDALIAS function call                                  @L3A  01340800
         AIF   ('&XFUNC' NE 'ADDA').IEWB506                             01340900
.*                                                               3@L7D  01341000
         LA    14,=XL4'001E&HEXV'   ++ ADDAlias function/version  @L7C  01341100
.*                                                               7@L7D  01341200
         ST    14,0(,1)                                                 01341300
         IEWBRL2  &XWORKMOD    ++ WORKMOD - workmod token               01341400
         ST    14,12(,1)                                                01341500
         IEWBRL2  &XANAME      ++ ANAME - alias name to add             01341600
         ST    14,16(,1)                                                01341700
         IEWBRL2  &XENAME      ++ ENAME - ESD to use for ANAME          01341800
         ST    14,20(,1)                                                01341900
         IEWBRL2  &XAMODE      ++ AMODE - amode string                  01342000
         ST    14,24(,1)                                                01342100
         AIF   ('&XVERSION' GT '3').IEWB518                     @L7C    01342200
         OI    24(1),X'80'                                              01342300
         AGO   .IEWB506                                         @03A    01342400
.IEWB518 LA    14,=CL1'&XATYPE'      ++ ATYPE -                 @03A    01342500
         ST    14,28(,1)                                       @03A     01342600
         AIF   ('&XVERSION' GT '8').IEWB519                    @PDA     01342700
         OI    28(1),X'80'                                     @03A     01342800
.IEWB519 IEWBRL2  &XDNAME                                        @PDA   01342900
         ST    14,32(,1)                                         @PDA   01343000
         OI    32(1),X'80'                                       @PDA   01343100
.*******  ALIGNT function call                                   @L3A   01343200
.IEWB506 AIF   ('&XFUNC' NE 'ALIGNT').IEWB510                           01343300
.*                                                              2@L7D   01343400
         LA    14,=XL4'001F&HEXV'   ++ ALIGNText function/version@L7C   01343500
.*                                                              5@L7D   01343600
         ST    14,0(,1)                                                 01343700
         IEWBRL2  &XWORKMOD    ++ WORKMOD - workmod token               01343800
         ST    14,12(,1)                                                01343900
         IEWBRL2  &XSECTION    ++ SECTION - section name                01344000
         ST    14,16(,1)                                                01344100
         AIF   ('&XVERSION' GT '7').IEWB507                      @LJA   01344200
         OI    16(1),X'80'                                              01344300
         AGO   .IEWB510                                          @LJA   01344400
.IEWB507 IEWBRL2 &XBDY         ++BDY  alignment boundary         @LJA   01344500
         ST    14,20(,1)                                         @LJA   01344600
         IEWBRL2 &XCLASSL     ++ CLASS class list                @LJA   01344700
         ST    14,24(,1)                                         @LJA   01344800
         OI    24(1),X'80'                                       @LJA   01344900
.*******  ALTERW function call                                   @L3A   01345000
.IEWB510 AIF   ('&XFUNC' NE 'ALTERW').IEWB750                           01345100
.*                                                              2@L7D   01345200
         LA    14,=XL4'0032&HEXV'  ++ ALTERWmod function/version @L7C   01345300
.*                                                              5@L7D   01345400
         ST    14,0(,1)                                          @L2C   01345500
         IEWBRL2  &XWORKMOD    ++ WORKMOD - workmod token               01345600
         ST    14,12(,1)                                                01345700
         LA    14,=CL1'&XATYPE'      ++ ATYPE -                         01345800
         ST    14,16(,1)                                                01345900
         LA    14,=CL1'&XMODE'       ++ MODE - Immed or Next            01346000
         ST    14,20(,1)                                                01346100
         IEWBRL2  &XOLDNAME    ++ OLDNAME - old name of symbol          01346200
         ST    14,24(,1)                                                01346300
         IEWBRL2  &XNEWNAME    ++ NEWNAME - new name of symbol          01346400
         ST    14,28(,1)                                                01346500
         IEWBRL2  &XCOUNT      ++ COUNT -                               01346600
         ST    14,32(,1)                                                01346700
         AIF   ('&XVERSION' GT '1').IEWB516                      @L7C   01346800
.*       AIF   ('&XVERSION' EQ '3').IEWB516                      @L7D   01346900
         OI    32(1),X'80'                                       @L2C   01347000
         AGO   .IEWB520                                                 01347100
.IEWB516 IEWBRL2  &XCLASS      ++ CLASS -                        @L2C   01347200
         ST    14,36(,1)                                         @L2C   01347300
         OI    36(1),X'80'                                       @L2C   01347400
.*******  AUTOCALL function call                                 @L4A   01347500
.IEWB750 AIF   ('&XFUNC' NE 'AUTOC').IEWB520                            01347600
.*                                                              2@L7D   01347700
         LA    14,=XL4'0033&HEXV'   ++ AUTOCall function/version @L7C   01347800
.*                                                              5@L7D   01347900
         ST    14,0(,1)                                                 01348000
         IEWBRL2  &XWORKMOD    ++ WORKMOD - workmod token               01348100
         ST    14,12(,1)                                                01348200
         AIF   ('&XPATHNAME' NE '').IEWB755                             01348300
         IEWBRL2  &XCALLIB     ++ CALLIB   - autocall ddname            01348400
         AGO   .IEWB756                                                 01348500
.IEWB755 IEWBRL2  &XPATHNAME   ++ PATHNAME - autocall pathname          01348600
.IEWB756 ST    14,16(,1)                                                01348700
         OI    16(1),X'80'                                              01348800
.*******  BINDW function call                                    @L4A   01348900
.IEWB520 AIF   ('&XFUNC' NE 'BINDW').IEWB530                            01349000
.*                                                              2@L7D   01349100
         LA    14,=XL4'0046&HEXV'   ++ BINDWmod function/version @L7C   01349200
.*                                                              5@L7D   01349300
         ST    14,0(,1)                                                 01349400
         IEWBRL2  &XWORKMOD    ++ WORKMOD - workmod token               01349500
         ST    14,12(,1)                                                01349600
         IEWBRL2  &XCALLIB     ++ CALLIB - autocall ddname              01349700
         ST    14,16(,1)                                                01349800
         OI    16(1),X'80'                                              01349900
.*******  CREATEW function call                                  @L3A   01350000
.IEWB530 AIF   ('&XFUNC' NE 'CREATEW').IEWB540                          01350100
.*                                                              2@L7D   01350200
         LA    14,=XL4'000A&HEXV'  ++ CREATEWmod function/version@L7C   01350300
.*                                                              5@L7D   01350400
         ST    14,0(,1)                                                 01350500
         IEWBRL2  &XDIALOG     ++ DIALOG -                              01350600
         ST    14,12(,1)                                                01350700
         IEWBRL2  &XWORKMOD    ++ WORKMOD - workmod token               01350800
         ST    14,16(,1)                                                01350900
         LA    14,=CL1'&XINTENT'     ++ INTENT -                        01351000
         ST    14,20(,1)                                                01351100
         OI    20(1),X'80'                                              01351200
.*******  DELETEW function call                                   @L3A  01351300
.IEWB540 AIF   ('&XFUNC' NE 'DELETEW').IEWB760                          01351400
.*                                                               2@L7D  01351500
         LA    14,=XL4'000F&HEXV'  ++ DELETEWmod function/version @L7C  01351600
.*                                                               5@L7D  01351700
         ST    14,0(,1)                                                 01351800
         IEWBRL2  &XWORKMOD    ++ WORKMOD - workmod token               01351900
         ST    14,12(,1)                                                01352000
         LA    14,=CL1'&XPROTECT'    ++ PROTECT -                       01352100
         ST    14,16(,1)                                                01352200
         OI    16(1),X'80'                                              01352300
.*******  DLLRENAME function call                                @L4A   01352400
.IEWB760 AIF   ('&XFUNC' NE 'DLLR').IEWB550                             01352500
.*                                                              2@L7D   01352600
         LA    14,=XL4'0011&HEXV'  ++ DLLRename function/version @L7C   01352700
.*                                                              5@L7D   01352800
         ST    14,0(,1)                                                 01352900
         IEWBRL2  &XWORKMOD    ++ WORKMOD - workmod token               01353000
         ST    14,12(,1)                                                01353100
         IEWBRL2  &XRENAMEL    ++ RENAME list                           01353200
         ST    14,16(,1)                                                01353300
         OI    16(1),X'80'                                              01353400
.*******  ENDDIALOG function call                                @L3A   01353500
.IEWB550 AIF   ('&XFUNC' NE 'ENDD').IEWB560                             01353600
.*                                                              2@L7D   01353700
         LA    14,=XL4'0005&HEXV'  ++ ENDDialog function/version @L7C   01353800
.*                                                              5@L7D   01353900
         ST    14,0(,1)                                                 01354000
         IEWBRL2  &XDIALOG     ++ DIALOG -                              01354100
         ST    14,12(,1)                                                01354200
         LA    14,=CL1'&XPROTECT'    ++ PROTECT -                       01354300
         ST    14,16(,1)                                                01354400
         OI    16(1),X'80'                                              01354500
.*******  GETDATA function call                                  @L3A   01354600
.IEWB560 AIF   ('&XFUNC' NE 'GETD').IEWB570                             01354700
.*                                                              2@L7D   01354800
         LA    14,=XL4'003D&HEXV'   ++ GETData function/version  @L7C   01354900
.*                                                              5@L7D   01355000
         ST    14,0(,1)                                                 01355100
         IEWBRL2  &XWORKMOD    ++ WORKMOD - workmod token               01355200
         ST    14,12(,1)                                                01355300
         IEWBRL2  &XCLASS      ++ CLASS -                               01355400
         ST    14,16(,1)                                                01355500
         IEWBRL2  &XSECTION    ++ SECTION - section name                01355600
         ST    14,20(,1)                                                01355700
         IEWBRL2  &XAREA       ++ AREA -                                01355800
         ST    14,24(,1)                                                01355900
         IEWBRL2  &XCURSOR     ++ CURSOR -                              01356000
         ST    14,28(,1)                                                01356100
         IEWBRL2  &XCOUNT      ++ COUNT -                               01356200
         ST    14,32(,1)                                                01356300
         AIF   ('&XVERSION' GT '5').IEWB565                      @LBA   01356400
         OI    32(1),X'80'                                       @LBA   01356500
         AGO   .IEWB570                                          @LBA   01356600
.IEWB565 IEWBRL2  &XRELOC      ++ RELOC -                        @LBA   01356700
         ST    14,36(,1)                                         @LBA   01356800
         OI    36(1),X'80'                                       @LBC   01356900
.*******  GETESD function call                                   @L3A   01357000
.IEWB570 AIF   ('&XFUNC' NE 'GETE').IEWB580                             01357100
.*                                                              2@L7D   01357200
         LA    14,=XL4'003E&HEXV'   ++ GETEsd function/version   @L7C   01357300
.*                                                              5@L7D   01357400
         ST    14,0(,1)                                                 01357500
         IEWBRL2  &XWORKMOD    ++ WORKMOD - workmod token               01357600
         ST    14,12(,1)                                                01357700
         IEWBRL2  &XSECTION    ++ SECTION - section name                01357800
         ST    14,16(,1)                                                01357900
         IEWBRL2  &XRECTYPE    ++ RECTYPE -                             01358000
         ST    14,20(,1)                                                01358100
         IEWBRL2  &XOFFSET     ++ OFFSET -                              01358200
         ST    14,24(,1)                                                01358300
         IEWBRL2  &XSYMBOL     ++ SYMBOL -                              01358400
         ST    14,28(,1)                                                01358500
         IEWBRL2  &XAREA       ++ AREA -                                01358600
         ST    14,32(,1)                                                01358700
         IEWBRL2  &XCURSOR     ++ CURSOR -                              01358800
         ST    14,36(,1)                                                01358900
         IEWBRL2  &XCOUNT      ++ COUNT -                               01359000
         ST    14,40(,1)                                                01359100
         AIF   ('&XVERSION' GT '1').IEWB576                      @L7C   01359200
.*       AIF   ('&XVERSION' EQ '3').IEWB576                      @L7D   01359300
         OI    40(1),X'80'                                              01359400
         AGO   .IEWB580                                                 01359500
.IEWB576 IEWBRL2  &XCLASS      ++ CLASS -                               01359600
         ST    14,44(,1)                                         @L2A   01359700
         OI    44(1),X'80'                                       @L2A   01359800
.*******  GETNAMES function call                                 @L3A   01359900
.IEWB580 AIF   ('&XFUNC' NE 'GETN').IEWB585                             01360000
.*                                                              2@L7D   01360100
         LA    14,=XL4'003C&HEXV'   ++ GETNames function/version @L7C   01360200
.*                                                              5@L7D   01360300
         ST    14,0(,1)                                                 01360400
         IEWBRL2  &XWORKMOD    ++ WORKMOD - workmod token               01360500
         ST    14,12(,1)                                                01360600
         IEWBRL2  &XAREA       ++ AREA -                                01360700
         ST    14,16(,1)                                                01360800
         IEWBRL2  &XCURSOR     ++ CURSOR -                              01360900
         ST    14,20(,1)                                                01361000
         IEWBRL2  &XCOUNT      ++ COUNT -                               01361100
         ST    14,24(,1)                                                01361200
         IEWBRL2  &XTCOUNT     ++ TCOUNT -                              01361300
         ST    14,28(,1)                                                01361400
         LA    14,=CL1'&XNTYPE' ++ NTYPE - Section or Class        @P2A 01361500
         ST    14,32(,1)                                                01361600
         OI    32(1),X'80'                                              01361700
.*******  GETCompileUnitInfo function call                     17@LBA   01361800
.IEWB585 AIF   ('&XFUNC' NE 'GETC').IEWB770                             01361900
         AIF   ('&XVERSION' GE '6').IEWB587                             01362000
         AGO   .IEWB770                                                 01362100
.IEWB587 LA    14,=XL4'0040&HEXV' ++ GETCompileUnitInfo funct/version   01362200
         ST    14,0(,1)                                                 01362300
         IEWBRL2  &XWORKMOD    ++ WORKMOD - workmod token               01362400
         ST    14,12(,1)                                                01362500
         IEWBRL2  &XCULIST     ++ CULIST  - compile unit list           01362600
         ST    14,16(,1)                                                01362700
         IEWBRL2  &XAREA       ++ AREA -                                01362800
         ST    14,20(,1)                                                01362900
         IEWBRL2  &XCURSOR     ++ CURSOR -                              01363000
         ST    14,24(,1)                                                01363100
         IEWBRL2  &XCOUNT      ++ COUNT -                               01363200
         ST    14,28(,1)                                                01363300
         OI    28(1),X'80'                                              01363400
.*******  IMPORT  function call                                  @L4A   01363500
.IEWB770 AIF   ('&XFUNC' NE 'IMPORT').IEWB590                           01363600
.*                                                              3@L7D   01363700
         LA    14,=XL4'0026&HEXV'   ++ IMPORT function/version   @L7C   01363800
.*                                                              7@L7D   01363900
         ST    14,0(,1)                                                 01364000
         IEWBRL2  &XWORKMOD     ++ WORKMOD - workmod token       @L4A   01364100
         ST    14,12(,1)                                         @L4A   01364200
         LA    14,=CL1'&XITYPE' ++ ITYPE - import type,C,D,E,orF @LCC   01364300
         ST    14,16(,1)                                         @L4A   01364400
         IEWBRL2  &XDLLNAME     ++ DLLNAME - ddname              @L4A   01364500
         ST    14,20(,1)                                         @L4A   01364600
         IEWBRL2  &XINAME       ++ INAME   - import symbol name  @L4A   01364700
         ST    14,24(,1)                                         @L4A   01364800
         AIF   ('&XVERSION' GT '3').IEWB779                       @L7C  01364900
         OI    24(1),X'80'                                              01365000
         AGO   .IEWB590                                                 01365100
.IEWB779 IEWBRL2  &XOFFSET           ++ OFFSET-                         01365200
         ST    14,28(,1)                                                01365300
         OI    28(1),X'80'                                              01365400
.*******  INCLUDE function call                                   @L3A  01365500
.IEWB590 AIF   ('&XFUNC' NE 'INCLUDE').IEWB600                          01365600
.*                                                               2@L7D  01365700
         LA    14,=XL4'0028&HEXV'   ++ INCLUDE function/version   @L7C  01365800
.*                                                               5@L7D  01365900
         ST    14,0(,1)                                                 01366000
         IEWBRL2  &XWORKMOD    ++ WORKMOD - workmod token               01366100
         ST    14,12(,1)                                                01366200
         LA    14,=CL1'&XINTYPE'     ++ INTYPE -                        01366300
         ST    14,16(,1)                                                01366400
         AIF   ('&XPATHNAME' NE '').IEWB595                             01366500
         IEWBRL2  &XDDNAME     ++ DDNAME   -                            01366600
         AGO   .IEWB596                                                 01366700
.IEWB595 IEWBRL2  &XPATHNAME   ++ PATHNAME -                            01366800
.IEWB596 ST    14,20(,1)                                                01366900
         IEWBRL2  &XMEMBER     ++ MEMBER -                              01367000
         ST    14,24(,1)                                                01367100
         IEWBRL2  &XDCBPTR     ++ DCBPTR -                              01367200
         ST    14,28(,1)                                                01367300
         IEWBRL2  &XDEPTR      ++ DEPTR -                               01367400
         ST    14,32(,1)                                                01367500
         IEWBRL2  &XEPTOKEN    ++ EPTOKEN                               01367600
         ST    14,36(,1)                                                01367700
         LA    14,0            ++ Reserved                              01367800
         ST    14,40(,1)                                                01367900
         LA    14,=CL1'&XATTRIB'     ++ ATTRIB -                        01368000
         ST    14,44(,1)                                                01368100
         LA    14,=CL1'&XALIASES'    ++ ALIASES                         01368200
         ST    14,48(,1)                                                01368300
         AIF   ('&XVERSION' GE '5').IEWB559                     @P8C    01368400
         OI    48(1),X'80'                                      @L8A    01368500
         AGO   .IEWB600                                         @L8A    01368600
.IEWB559 LA    14,=CL1'&XIMPORTS'    ++ IMPORTS                         01368700
         ST    14,52(,1)                                        @L8A    01368800
         OI    52(1),X'80'                                      @L8A    01368900
.*******  INSERTS function call                                  @L3A   01369000
.IEWB600 AIF   ('&XFUNC' NE 'INSERTS').IEWB610                          01369100
.*                                                               2@L7D  01369200
         LA    14,=XL4'0024&HEXV'  ++ INSERTSect function/version @L7C  01369300
.*                                                               5@L7D  01369400
         ST    14,0(,1)                                                 01369500
         IEWBRL2  &XWORKMOD    ++ WORKMOD - workmod token               01369600
         ST    14,12(,1)                                                01369700
         IEWBRL2  &XSECTION    ++ SECTION - section name                01369800
         ST    14,16(,1)                                                01369900
         OI    16(1),X'80'                                              01370000
.*******  LOADW function call                                     @L3A  01370100
.IEWB610 AIF   ('&XFUNC' NE 'LOADW').IEWB620                            01370200
.*                                                               2@L7D  01370300
         LA    14,=XL4'0051&HEXV'   ++ LOADWmod function/version  @L7C  01370400
.*                                                               5@L7D  01370500
         ST    14,0(,1)                                                 01370600
         IEWBRL2  &XWORKMOD    ++ WORKMOD - workmod token               01370700
         ST    14,12(,1)                                                01370800
         LA    14,=CL1'&XIDENTIFY'   ++ IDENTIFY -                      01370900
         ST    14,16(,1)                                                01371000
         IEWBRL2  &XEPLOC      ++ EPLOC -                               01371100
         ST    14,20(,1)                                                01371200
         IEWBRL2  &XEXTLST     ++ EXTLST -                              01371300
         ST    14,24(,1)                                                01371400
         IEWBRL2  &XLNAME      ++ LNAME -                               01371500
         ST    14,28(,1)                                                01371600
         OI    28(1),X'80'                                              01371700
.*******  ORDERS function call                                    @L3A  01371800
.IEWB620 AIF   ('&XFUNC' NE 'ORDERS').IEWB630                           01371900
.*                                                               2@L7D  01372000
         LA    14,=XL4'0025&HEXV'   ++ ORDERSect function/version @L7C  01372100
.*                                                               5@L7D  01372200
         ST    14,0(,1)                                                 01372300
         IEWBRL2  &XWORKMOD    ++ WORKMOD - workmod token               01372400
         ST    14,12(,1)                                                01372500
         IEWBRL2  &XSECTION    ++ SECTION - section name                01372600
         ST    14,16(,1)                                                01372700
         OI    16(1),X'80'                                              01372800
.*******  PUTDATA function call                                   @L3A  01372900
.IEWB630 AIF   ('&XFUNC' NE 'PUTD').IEWB640                             01373000
.*                                                               2@L7D  01373100
         LA    14,=XL4'0041&HEXV'   ++ PUTData function/version   @L7C  01373200
.*                                                               5@L7D  01373300
         ST    14,0(,1)                                                 01373400
         IEWBRL2  &XWORKMOD    ++ WORKMOD - workmod token               01373500
         ST    14,12(,1)                                                01373600
         IEWBRL2  &XCLASS      ++ CLASS -                               01373700
         ST    14,16(,1)                                                01373800
         IEWBRL2  &XSECTION    ++ SECTION - section name                01373900
         ST    14,20(,1)                                                01374000
         IEWBRL2  &XAREA       ++ AREA -                                01374100
         ST    14,24(,1)                                                01374200
         IEWBRL2  &XCURSOR     ++ CURSOR -                              01374300
         ST    14,28(,1)                                                01374400
         IEWBRL2  &XCOUNT      ++ COUNT -                               01374500
         ST    14,32(,1)                                                01374600
         LA    14,=CL1'&XNEWSECT'    ++ NEWSECT -                       01374700
         ST    14,36(,1)                                                01374800
         LA    14,=CL1'&XENDDATA'    ++ ENDDATA -                       01374900
         ST    14,40(,1)                                                01375000
         OI    40(1),X'80'                                              01375100
.*******  RENAME function call                                 ALL@L4A  01375200
.IEWB640 AIF   ('&XFUNC' NE 'RENAME').IEWB645                           01375300
.*                                                               2@L7D  01375400
         LA    14,=XL4'0016&HEXV'   ++ RENAME function/version    @L7C  01375500
.*                                                               5@L7D  01375600
         ST    14,0(,1)                                                 01375700
         IEWBRL2  &XWORKMOD    ++ WORKMOD - workmod token               01375800
         ST    14,12(,1)                                                01375900
         IEWBRL2  &XOLDNAME    ++ OLDNAME - old name of symbol          01376000
         ST    14,16(,1)                                                01376100
         IEWBRL2  &XNEWNAME    ++ NEWNAME - new name of symbol          01376200
         ST    14,20(,1)                                                01376300
         OI    20(1),X'80'                                              01376400
.*******  RESETW function call                                    @L3A  01376500
.IEWB645 AIF   ('&XFUNC' NE 'RESETW').IEWB650                           01376600
.*                                                               2@L7D  01376700
         LA    14,=XL4'0013&HEXV'   ++ RESETWmod function/version @L7C  01376800
.*                                                               5@L7D  01376900
         ST    14,0(,1)                                                 01377000
         IEWBRL2  &XWORKMOD    ++ WORKMOD - workmod token               01377100
         ST    14,12(,1)                                                01377200
         LA    14,=CL1'&XINTENT'     ++ INTENT -                        01377300
         ST    14,16(,1)                                                01377400
         LA    14,=CL1'&XPROTECT'    ++ PROTECT -                       01377500
         ST    14,20(,1)                                                01377600
         OI    20(1),X'80'                                              01377700
.*******  SAVEW function call                                     @L3A  01377800
.IEWB650 AIF   ('&XFUNC' NE 'SAVEW').IEWB660                            01377900
.*                                                               2@L7D  01378000
         LA    14,=XL4'0050&HEXV'   ++ SAVEWmod function/version  @L7C  01378100
.*                                                               5@L7D  01378200
         ST    14,0(,1)                                                 01378300
         IEWBRL2  &XWORKMOD    ++ WORKMOD - workmod token               01378400
         ST    14,12(,1)                                                01378500
         IEWBRL2  &XMODLIB     ++ MODLIB -                              01378600
         ST    14,16(,1)                                                01378700
         IEWBRL2  &XSNAME      ++ SNAME -                               01378800
         ST    14,20(,1)                                                01378900
         LA    14,=CL1'&XREPLACE'    ++ REPLACE -                       01379000
         ST    14,24(,1)                                                01379100
         OI    24(1),X'80'                                              01379200
.*******  SETL function call                                      @L3A  01379300
.IEWB660 AIF   ('&XFUNC' NE 'SETL').IEWB670                             01379400
.*                                                               2@L7D  01379500
         LA    14,=XL4'0015&HEXV'   ++ SETLib function/version    @L7C  01379600
.*                                                               5@L7D  01379700
         ST    14,0(,1)                                                 01379800
         IEWBRL2  &XWORKMOD    ++ WORKMOD - workmod token               01379900
         ST    14,12(,1)                                                01380000
         IEWBRL2  &XSYMBOL     ++ SYMBOL -                              01380100
         ST    14,16(,1)                                                01380200
         LA    14,=CL1'&XLIBOPT'     ++ LIBOPT -                        01380300
         ST    14,20(,1)                                                01380400
         AIF   ('&XPATHNAME' NE '').IEWB665                             01380500
         IEWBRL2  &XCALLIB     ++ CALLIB   - SETLIB ddname              01380600
         AGO   .IEWB666                                                 01380700
.IEWB665 IEWBRL2  &XPATHNAME   ++ PATHNAME - SETLIB pathname            01380800
.IEWB666 ST    14,24(,1)                                                01380900
         OI    24(1),X'80'                                              01381000
.*******  SETO function call                                      @L3A  01381100
.IEWB670 AIF   ('&XFUNC' NE 'SETO').IEWB680                             01381200
.*                                                               2@L7D  01381300
         LA    14,=XL4'0014&HEXV'   ++ SETOption function/version @L7C  01381400
.*                                                               5@L7D  01381500
         ST    14,0(,1)                                           @L2C  01381600
         IEWBRL2  &XDIALOG     ++ DIALOG -                              01381700
         ST    14,12(,1)                                                01381800
         IEWBRL2  &XWORKMOD    ++ WORKMOD - workmod token               01381900
         ST    14,16(,1)                                                01382000
         IEWBRL2  &XOPTION     ++ OPTION -                              01382100
         ST    14,20(,1)                                                01382200
         IEWBRL2  &XOPTVAL     ++ OPTVAL -                              01382300
         ST    14,24(,1)                                                01382400
         AIF   ('&XVERSION' GT '1').IEWB676                        @L7C 01382500
.*       AIF   ('&XVERSION' EQ '3').IEWB676                        @L7D 01382600
         OI    24(1),X'80'                                         @L2C 01382700
         AGO   .IEWB680                                                 01382800
.IEWB676 IEWBRL2  &XPARMS      ++ PARM -                           @L2C 01382900
         ST    14,28(,1)                                                01383000
         OI    28(1),X'80'                                         @L2C 01383100
.*******  STARTD function call                                   @L3A   01383200
.IEWB680 AIF   ('&XFUNC' NE 'STARTD').IEWB690                           01383300
.*                                                               2@L7D  01383400
         LA    14,=XL4'0001&HEXV'  ++ STARTDialog function/version@L7C  01383500
.*                                                               5@L7D  01383600
         ST    14,0(,1)                                          @L2C   01383700
         IEWBRL2  &XDIALOG     ++ DIALOG -                              01383800
         ST    14,12(,1)                                                01383900
         IEWBRL2  &XFILES      ++ FILES -                               01384000
         ST    14,16(,1)                                                01384100
         IEWBRL2  &XEXITS      ++ EXITS -                               01384200
         ST    14,20(,1)                                                01384300
         IEWBRL2  &XOPTIONS    ++ OPTIONS -                             01384400
         ST    14,24(,1)                                                01384500
         AIF   ('&XVERSION' GT '1').IEWB686                        @L7C 01384600
.*       AIF   ('&XVERSION' EQ '3').IEWB686                        @L7D 01384700
         OI    24(1),X'80'                                         @L2C 01384800
         AGO   .IEWB690                                                 01384900
.IEWB686 IEWBRL2  &XPARMS      ++ PARM -                           @L2C 01385000
         ST    14,28(,1)                                                01385100
         AIF   ('&XVERSION' GT '5').IEWB687                        @LEC 01385200
         OI    28(1),X'80'                                         @L2C 01385300
         AGO   .IEWB690                                            @LEA 01385400
.IEWB687 IEWBRL2  &XENVARS    ++ ENVAR -                          @LEA  01385500
         ST    14,32(,1) @LEA                                           01385600
         OI    32(1),X'80'                                         @LEA 01385700
.*******  STARTS function call                                   @L3A   01385800
.IEWB690 AIF   ('&XFUNC' NE 'STARTS').IEWB699                           01385900
.*                                                               2@L7D  01386000
         LA    14,=XL4'0023&HEXV'   ++ STARTSeg function/version  @L7C  01386100
.*                                                               5@L7D  01386200
         ST    14,0(,1)                                                 01386300
         IEWBRL2  &XWORKMOD    ++ WORKMOD - workmod token               01386400
         ST    14,12(,1)                                                01386500
         IEWBRL2  &XORIGIN     ++ ORIGIN -                              01386600
         ST    14,16(,1)                                                01386700
         LA    14,=CL1'&XREGION'     ++ REGION -                        01386800
         ST    14,20(,1)                                                01386900
         OI    20(1),X'80'                                              01387000
.IEWB699 ANOP  ,                                                        01387100
.********************************************************************** 01387200
.* Call the Binder                                                    * 01387300
.********************************************************************** 01387400
         AIF   ('&XFUNC' NE 'STARTD').IEWB700                           01387500
         LOAD  EP=IEWBIND                                               01387600
         IEWBRS2  0,&DIALOG    ++Keep Binder entry address              01387700
         AIF   ('&XMFCTRL'(1,1) NE '(').IEWB710                         01387800
&ZCGPR   SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                               01387900
         LR    1,&ZCGPR        ++ Reinstate parameter list address      01388000
         AGO   .IEWB700                                                 01388100
.IEWB710 LA    1,&XMFCTRL      ++ Reinstate parameter list address      01388200
.IEWB700 ANOP  ,                                                        01388300
         AIF   ('&XFUNC' NE 'CREATEW').IEWB715                          01388400
.* Copy new epa into returned token                             @P3A    01388500
         IEWBRG3  &DIALOG,15      ++ Get entry point address            01388600
         IEWBRS2  15,&WORKMOD     ++ Store into Workmod token           01388700
.IEWB715 ANOP                                                           01388800
&IEWBEPA SETC  '&XDIALOG'                                               01388900
         AIF   ('&XDIALOG' NE '=2FL4''0''').IEWB717                     01389000
&IEWBEPA SETC  '&XWORKMOD'                                              01389100
.IEWB717 ANOP                                                           01389200
         IEWBRG3  &IEWBEPA,15                                           01389300
         LTR   15,15                                                    01389400
         BNZ   IEWB&SYSNDX.A                                            01389500
         LA    15,12                                                    01389600
         AIF   (K'&RETCODE EQ 0).IEWB721                         @L7C   01389700
         IEWBRS2  15,&XRETCODE     ++ Store return code                 01389800
.IEWB721 ANOP  ,                                                        01389900
         L     0,=XL4'83000FFF' ++Reason code returned                  01390000
         AIF   (K'&RSNCODE EQ 0).IEWB722                         @L7C   01390100
         IEWBRS2  0,&XRSNCODE     ++ Store reason code                  01390200
.IEWB722 ANOP  ,                                                        01390300
         B     IEWB&SYSNDX.B                                            01390400
IEWB&SYSNDX.A DS  0H                                                    01390500
         O     15,=X'80000000'   ++ Binder always amode 31       @P3A   01390600
         BASSM 14,15             ++ Call the Binder              @P3A   01390700
         AH    14,6(,14)         ++ Increment return address     @P4A   01390800
         BSM   0,14              ++ Set mode correctly                  01390900
         DC    H'8'                                              @P4A   01391000
         AIF   ('&XFUNC' NE 'ENDD').IEWB740                             01391100
         IEWBRG3  &IEWBEPA,1                                            01391200
         LTR   1,1                                                      01391300
         BZ    IEWB&SYSNDX.B                                            01391400
         LR    1,0     ++ Save Binder reason code                       01391500
         LR    14,15   ++ Save Binder return code                       01391600
         DELETE EP=IEWBIND                                              01391700
         LR    0,1     ++ Restore Binder reason code                    01391800
         LR    15,14   ++ Restore Binder return code                    01391900
.IEWB740 ANOP  ,                                                        01392000
IEWB&SYSNDX.B DS  0H                                                    01392100
.********************************************************************** 01392200
.* End of BAL macro code to be added to IEWBIND2.                     * 01392300
.********************************************************************** 01392400
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  01392500
.ZLINKX               ANOP  ,                                           01392600
.*******************************************************************    01392700
.***AP.X01  FORMAT GENERATED CODE                                       01392800
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            01392900
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              01393000
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              01393100
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              01393200
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              01393300
                      AIF   (K'&ZLD LE 0).ZL51                          01393400
&ZLC                  SETA  35             COMMENT COLUMN               01393500
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   01393600
&ZLC                  SETA  33             COMMENT COLUMN               01393700
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  01393800
&ZLV                  SETC  '&ZLV'.' '                                  01393900
                      AGO   .ZL31                                       01394000
.*                                                                      01394100
.ZL41                 ANOP  ,                                           01394200
&ZLV                  SETC  '&ZLV'.' '                                  01394300
.ZL51                 ANOP  ,                                           01394400
&ZLV                  SETC  '&ZLV'.'&ZLD'                               01394500
.*                                                                      01394600
&ZLL     &ZLOP &ZLV                                                     01394700
.*                                                                      01394800
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               01394900
                      AGO   .ZL21          CONTINUE LOOPING             01395000
.*                                                                      01395100
.ZLX1                 ANOP  ,                                           01395200
.*******************************************************************    01395300
.***AP.X02  END OF IEWBIND2 MACRO                                       01395400
&ZIEWBIND2            SETC  'YES'          SET IEWBIND2 USED            01395500
         POP   PRINT                                                    01395600
*                                            IEWBIND2-0                 01395700
         SPACE 1                                                        01395800
.ZLX2                 ANOP  ,                                           01395900
         MEND                                                           01396000
**********************************************************************/ 01396100
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  01396200
*%IEWBIND2: MACRO KEYS(FUNC,WORKMOD,ANAME,ENAME,AMODE,ATYPE,DNAME,      01396300
*                 SECTION,BDY,CLASSL,OLDNAME,NEWNAME,COUNT,MODE,CLASS,  01396400
*                 CALLIB,PATHNAME,DIALOG,INTENT,PROTECT,RENAMEL,AREA,   01396500
*                 CURSOR,RELOC,RECTYPE,OFFSET,SYMBOL,TCOUNT,NTYPE,      01396600
*                 CULIST,ITYPE,DLLNAME,INAME,INTYPE,DDNAME,DEPTR,       01396700
*                 MEMBER,DCBPTR,EPTOKEN,ATTRIB,ALIASES,IMPORTS,EPLOC,   01396800
*                 IDENTIFY,EXTLST,LNAME,NEWSECT,ENDDATA,MODLIB,SNAME,   01396900
*                 REPLACE,LIBOPT,OPTION,OPTVAL,PARMS,FILES,EXITS,       01397000
*                 OPTIONS,ENVARS,ORIGIN,REGION,RETCODE,RSNCODE,         01397100
*                 VERSION,PLISTVER,MF);                                 01397200
*  ANS('?'!!MACLABEL!!' '!!'IEWBINDP '!!MACLIST!!                       01397300
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              01397400
*%END IEWBIND2;                                                         01397500
