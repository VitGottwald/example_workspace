*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IOSCMXR                               -12/06/17-<1> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  Obtain UCB common extension address           * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5650-ZOS COPYRIGHT IBM CORP. 1994, 2019                         * 00001200
*                                                                     * 00001300
* STATUS= HBB77C0                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      The IOSCMXR macro obtains the UCB common extension address via * 00002100
*      a register only interface.                                     * 00002200
*                                                                     * 00002300
*      Users may map the UCB common extension area using the mapping  * 00002400
*      macro IEFUCBOB.                                                * 00002500
*                                                                     * 00002600
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00002700
*                                                                     * 00002800
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00002900
*                                                                     * 00003000
*01* ENVIRONMENT:                                                     * 00003100
*                                                                     * 00003200
*                                                                     * 00003300
*      Dispatchable unit mode: Task or SRB mode.                      * 00003400
*                                                                     * 00003500
*      Minimum authorization: Problem or Supervisor state.  Any PSW   * 00003600
*                        key.                                         * 00003700
*                                                                     * 00003800
*      AMODE:            24- or 31-bit.                               * 00003900
*                                                                     * 00004000
*      ASC mode:         Primary.                                     * 00004100
*                                                                     * 00004200
*      Serialization:    Enabled or Disabled.                         * 00004300
*                                                                     * 00004400
*                                                                     * 00004500
*                                                                     * 00004600
*01* PROGRAMMING REQUIREMENTS:                                        * 00004700
*                                                                     * 00004800
*    Users of this macro must make sure that register one is set up   * 00004900
*    with the address of the UCB Common Segment at the time of        * 00005000
*    invocation of IOSCMXR.                                           * 00005100
*                                                                     * 00005200
*    Users of this macro must make sure that the UCB will not be      * 00005300
*    deleted.  The application must PIN the UCB, or make sure that    * 00005400
*    the environment it is executing in will not allow the UCB to be  * 00005500
*    deleted.                                                         * 00005600
*                                                                     * 00005700
*    This service will not have any recovery. The user must supply    * 00005800
*    recovery to handle any unexpected errors.  Users of this service * 00005900
*    should consider using the UCBLOOK, UCBINFO, or UCBSCAN service   * 00006000
*    to satisfy their needs as those services provide more checking,  * 00006100
*    recovery, and allow less restrictive environments.               * 00006200
*                                                                     * 00006300
*01* INPUT REGISTER INFORMATION:                                      * 00006400
*                                                                     * 00006500
*                                                                     * 00006600
*    REGISTER  CONTENTS                                               * 00006700
*                                                                     * 00006800
*    GR0       Undefined                                              * 00006900
*                                                                     * 00007000
*    GR1       Must contain address of UCB Common Segment of the UCB. * 00007100
*              This may be either an Actual or a Captured UCB         * 00007200
*              address.                                               * 00007300
*                                                                     * 00007400
*    GR2-GR15  Undefined                                              * 00007500
*                                                                     * 00007600
*                                                                     * 00007700
*                                                                     * 00007800
*    Before issuing IOSCMXR the caller does not have to place any     * 00007900
*    information into any AR.                                         * 00008000
*                                                                     * 00008100
*01* OUTPUT REGISTER INFORMATION:                                     * 00008200
*                                                                     * 00008300
*                                                                     * 00008400
*    REGISTER  CONTENTS                                               * 00008500
*                                                                     * 00008600
*    GR0       Used by the service                                    * 00008700
*                                                                     * 00008800
*    GR1       Will contain the address of the UCB Common Extension.  * 00008900
*              The UCB Common Extension is mapped by a portion of     * 00009000
*              IEFUCBOB.  If the UCB Common Segment is Captured, then * 00009100
*              the address of the Captured UCB Common Extension will  * 00009200
*              be returned.                                           * 00009300
*                                                                     * 00009400
*    GR2-GR13  Unchanged                                              * 00009500
*                                                                     * 00009600
*    GR14-GR15 Used by the service                                    * 00009700
*                                                                     * 00009800
*                                                                     * 00009900
*                                                                     * 00010000
*    When control returns to the caller, the ARs will contain what    * 00010100
*    they had at entry.                                               * 00010200
*                                                                     * 00010300
*01* SYNTAX:                                                          * 00010400
*                                                                     * 00010500
*Ýxlabel¨  IOSCMXR   Ý PLISTVER                                       * 00010600
*                               =»xplistver!IMPLIED_VERSIONº¨         * 00010700
*                    Ý,MF=»Sº¨                                        * 00010800
*                                                                     * 00010900
*                                                                     * 00011000
*      Where:                                                         * 00011100
*                                                                     * 00011200
*                                                                     * 00011300
*      Ýxlabel¨                                                       * 00011400
*          is an optional symbol, starting in column 1, that is the   * 00011500
*          name on the IOSCMXR macro invocation.  The name must       * 00011600
*          conform to the rules for an ordinary assembler language    * 00011700
*          symbol.                                                    * 00011800
*          DEFAULT: No name.                                          * 00011900
*                                                                     * 00012000
*                                                                     * 00012100
*                                                                     * 00012200
*                                                                     * 00012300
*      ÝPLISTVER=»xplistver!IMPLIED_VERSIONº¨                         * 00012400
*          is an optional byte input decimal value in the "0-1" range * 00012500
*          that specifies the macro version.  PLISTVER determines     * 00012600
*          which parameter list is generated.  The macro keys         * 00012700
*          associated with each supported version of the macro are    * 00012800
*          listed in MACRO USAGE NOTE 2.  Note that MAX may be        * 00012900
*          specified instead of a number, and the parameter list will * 00013000
*          be of the largest size currently supported. This size may  * 00013100
*          grow from release to release (thus possibly affecting the  * 00013200
*          amount of storage needed by your program).                 * 00013300
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00013400
*          default is the lowest version which allows all of the      * 00013500
*          parameters specified on the invocation to be processed.    * 00013600
*                                                                     * 00013700
*                                                                     * 00013800
*                                                                     * 00013900
*                                                                     * 00014000
*      ÝMF=»Sº¨                                                       * 00014100
*          is an optional keyword input which specifies the macro     * 00014200
*          form.                                                      * 00014300
*          DEFAULT: S                                                 * 00014400
*                                                                     * 00014500
*                                                                     * 00014600
*          MF=S                                                       * 00014700
*              specifies the standard form of the macro.  The "S"     * 00014800
*              form generates code to put the parameters into an      * 00014900
*              in-line parameter list and invoke the desired service. * 00015000
*              Full checking for required macro keys is done along    * 00015100
*              with supplying defaults for omitted optional           * 00015200
*              parameters.                                            * 00015300
*                                                                     * 00015400
*                                                                     * 00015500
*                                                                     * 00015600
*                                                                     * 00015700
*                                                                     * 00015800
*01* RETURN CODES:  None.                                             * 00015900
*                                                                     * 00016000
*01* REASON CODES:  None.                                             * 00016100
*                                                                     * 00016200
*01* MODULE TYPE:  ASSEM MACRO                                        * 00016300
*                                                                     * 00016400
*02*   PROCESSOR:  ASSEM                                              * 00016500
*                                                                     * 00016600
*01* COMPONENT:  SC1C3                                                * 00016700
*                                                                     * 00016800
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00016900
*                                                                     * 00017000
*01* MACRO USAGE NOTES:                                               * 00017100
*                                                                     * 00017200
*                                                                     * 00017300
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00017400
*        global macro variable.  Any value other than 'NO' will       * 00017500
*        result in the macro expansion being printed.  The default is * 00017600
*        'YES'.  The following examples illustrate how the ZPRINT     * 00017700
*        variable should be set.                                      * 00017800
*                                                                     * 00017900
*                    GBLC &ZPRINT                                     * 00018000
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00018100
*                                                                     * 00018200
*                                                                     * 00018300
*    2.  The  IOSCMXR macro supports multiple versions. The macro key * 00018400
*        list  below  contains the version level in which the key was * 00018500
*        first  introduced.  Positionals  are  identified by the word * 00018600
*        'Positional'  followed by the numeric value of its position. * 00018700
*        Nested  positionals  are  preceded  by their outer key.  The * 00018800
*        lowest value represents the original version and the highest * 00018900
*        value  represents  the  most  recent  version of the IOSCMXR * 00019000
*        macro.    When  specifying  PLISTVER,  be sure that it is at * 00019100
*        least  as high as the highest version number of all the keys * 00019200
*        being used.                                                  * 00019300
*                                                                     * 00019400
*        VERSION   KEY                                                * 00019500
*                                                                     * 00019600
*              0      PLISTVER                                        * 00019700
*                                                                     * 00019800
*                                                                     * 00019900
*                                                                     * 00020000
*01* CHANGE ACTIVITY:                                                 * 00020100
*                                                                     * 00020200
*   Flag LineItem  FMID    Date   ID    Comment                       * 00020300
*                                                                     * 00020400
*    $L0=UCBVP    HBB5520 940106 PDLU:  UCB VSCR Support              * 00020500
*    $D1=DCR0095  HBB5520 940912 PDLU:  Change IOSCMXR to GUPI.       * 00020600
*    $01=OW12724  HBB5520 950602 PDMC:  Allow macro to be used in     * 00020700
*                                         relocatable code.           * 00020800
*    $L1=W220894  HBB77C0 171205 PDH6:  No basereg needed with        * 00020900
*                                         SYSSTATE ARCHLVL=2.         * 00021000
****** END OF SPECIFICATIONS *****************************************/ 00021100
*/********************************************************************* 00021200
         MACRO                                                          00021300
&XLABEL  IOSCMXR &PLISTVER=,&MF=                                        00021400
.*                                                                      00021500
*              MACDATE -12/06/17-<1>                                    00021600
.*                                                                      00021700
.*******************************************************************    00021800
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00021900
.*******************************************************************    00022000
              GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                   00022100
              GBLC  &ZTEST      YES=TEST NO=NO TEST                     00022200
              GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX             00022300
.*                                                                      00022400
              GBLC  &ZIOSCMXR   YES=MACRO USED AT LEAST ONCE            00022500
.*******************************************************************    00022600
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00022700
.*******************************************************************    00022800
              LCLC  &ZMS        ERROR MESSAGE WORK AREA                 00022900
              LCLC  &ZCNDX      SYSNDX CHARACTERS                       00023000
              LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED              00023100
              LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR             00023200
              LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE             00023300
              LCLA  &ZAWRK      USED AS A WORK AREA                     00023400
              LCLA  &ZASIZ      USED FOR SIZE OF VALUE                  00023500
              LCLA  &ZN         NUMERIC WORK VARIABLE                   00023600
              LCLC  &ZC         CHARACTER WORK VARIABLE                 00023700
              LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE             00023800
              LCLA  &ZTLA       VALUE TOO LONG VARIABLE                 00023900
              LCLC  &ZMAC_G     "G" or null                             00024000
&ZMAC_G       SETC  ''                                                  00024100
              LCLC  &ZMAC_LR                                            00024200
&ZMAC_LR      SETC  'LR'                                                00024300
              LCLC  &ZMAC_L                                             00024400
&ZMAC_L       SETC  'L'                                                 00024500
              LCLC  &ZMAC_ST                                            00024600
&ZMAC_ST      SETC  'ST'                                                00024700
              LCLC  &ZMAC_LLGT                                          00024800
&ZMAC_LLGT    SETC  'L'                                                 00024900
              LCLC  &ZMAC_LGR                                           00025000
&ZMAC_LGR     SETC  'LR'                                                00025100
              LCLC  &ZMAC_LG                                            00025200
&ZMAC_LG      SETC  'L'                                                 00025300
              LCLC  &ZMAC_STG                                           00025400
&ZMAC_STG     SETC  'ST'                                                00025500
              LCLA  &ZMACRET    MACRO RETURN CODE                       00025600
&ZMACRET      SETA  0           ASSUME NO ERRORS                        00025700
.*                                                                      00025800
              LCLC  &ZCSYSLIST(255)             NONXKEY, POS ARRAY      00025900
              LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()              00026000
              LCLA  &ZPLLEN     PARAMETER LIST LENGTH                   00026100
              LCLC  &ZENDBASEPL                 End of base PL          00026200
              LCLA  &ZPLWORKA   PARAMETER LIST LENGTH                   00026300
.*******************************************************************    00026400
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00026500
.*******************************************************************    00026600
              LCLA  &ZI         INDEX FOR ARRAY                         00026700
              LCLA  &ZJ         INDEX FOR PARMS                         00026800
              LCLA  &ZK         INDEX FOR PARSE                         00026900
              LCLA  &ZLO        LOW RANGE VALUE                         00027000
              LCLA  &ZHI        HIGH RANGE VALUE                        00027100
              LCLC  &ZW         WORK AREA FOR PARM                      00027200
.********************************************************************   00027300
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00027400
.********************************************************************   00027500
              GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL                 00027600
              GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE          00027700
              GBLA  &SYSALVL    SYSSTATE ARCHLVL                        00027800
              GBLC  &SYSAM64    SYSSTATE AMODE64                        00027900
.*                                                                      00028000
              AIF   (K'&SYSASCE GT 0).ZSYS4     SYS STATE DEFINED       00028100
              AIF   (K'&SYSSPLV GT 0).ZSYS2     SP LEVEL DEFINED        00028200
              SPLEVEL  TEST                                             00028300
.ZSYS2        ANOP  ,                                                   00028400
              AIF   ('&SYSSPLV' EQ '1').ZSYS3   PRE SP 3.1              00028500
              AIF   ('&SYSSPLV' EQ '2').ZSYS3   PRE SP 3.1              00028600
              SYSSTATE TEST                                             00028700
              AGO   .ZSYS4                                              00028800
.ZSYS3        ANOP  ,                                                   00028900
&SYSASCE      SETC  'P'         ASSUME SYSSTATE PRIMARY                 00029000
.ZSYS4        ANOP  ,                                                   00029100
              AIF   ('&SYSAM64' NE 'YES').ZSYSN64                       00029200
&ZMAC_LLGT    SETC 'LLGT'                                               00029300
&ZMAC_LGR     SETC 'LGR'                                                00029400
&ZMAC_LG      SETC 'LG'                                                 00029500
&ZMAC_STG     SETC 'STG'                                                00029600
.ZSYSN64      ANOP  ,                                                   00029700
.*******************************************************************    00029800
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00029900
.*******************************************************************    00030000
              LCLA  &XPLISTVER  ++ VALUE                                00030100
              LCLC  &XMF        ++ VALUE                                00030200
.*******************************************************************    00030300
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00030400
.*******************************************************************    00030500
              LCLC  &ZXPLISTVER                 ++ INPUT VALUE          00030600
              LCLC  &ZXMF       ++ INPUT VALUE                          00030700
.*******************************************************************    00030800
.***AB.15  ENSURE THAT XMFCTRL AND XMFATTR EXIST                        00030900
.*******************************************************************    00031000
              LCLC  &XMFCTRL $TAB.++ CONTROL BLOCK                      00031100
              LCLC  &XMFATTR $TAB.++ CONTROL BLOCK ATTRIBUTES           00031200
.*                                                                      00031300
              LCLC  &ZXMFCTRL $TAB.++ INPUT                             00031400
              LCLC  &ZXMFATTR $TAB.++ INPUT                             00031500
.*                                                                      00031600
&XMFATTR      SETC  '0D'        DEFAULT ATTRIBUTES                      00031700
.********************************************************************   00031800
.***AC.PLV01  PROCESS PLISTVER                                      *   00031900
.********************************************************************   00032000
&XPLISTVER      SETA  0                                                 00032100
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00032200
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00032300
&XPLISTVER      SETA  1                                                 00032400
.ZPLV0          ANOP  ,                                                 00032500
.*                                                                      00032600
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00032700
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00032800
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00032900
.*-------------------------------------------------------------------   00033000
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00033100
&ZMS            SETC  '"PLISTVER='                                      00033200
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00033300
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00033400
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00033500
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00033600
                AGO   .ZPVCK2                                           00033700
.ZPVCK3         ANOP  ,                                                 00033800
.*-------------------------------------------------------------------   00033900
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00034000
&ZMS            SETC  '"PLISTVER='                                      00034100
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00034200
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00034300
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00034400
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00034500
                AGO   .ZPVCKE                                           00034600
.ZPVCK2         ANOP  ,                                                 00034700
.*-------------------------------------------------------------------   00034800
&ZCVAL          SETC  '&PLISTVER(1)'                                    00034900
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00035000
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00035100
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00035200
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00035300
                AIF   (&ZN LE 1).ZPVCK4A   NOT HIGH                     00035400
.ZPVCK6         ANOP  ,                                                 00035500
&ZMS            SETC  '"PLISTVER='                                      00035600
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00035700
&ZMS            SETC  '&ZMS THE RANGE IS "0-1"'                         00035800
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00035900
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00036000
&XPLISTVER      SETA  1                                                 00036100
                AGO   .ZPVCKE                                           00036200
.*-------------------------------------------------------------------   00036300
.ZPVCK4A        ANOP  ,                                                 00036400
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00036500
&ZMS            SETC  'PLISTVER='                                       00036600
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00036700
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00036800
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00036900
                MNOTE 8,' &ZMS IS REQUIRED.'                            00037000
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00037100
                AGO   .ZPVCK5                                           00037200
.ZPVCK4         ANOP  ,                                                 00037300
&XPLISTVER      SETA  &PLISTVER(1)                                      00037400
.ZPVCK5         ANOP  ,                                                 00037500
.ZPVCKE         ANOP  ,                                                 00037600
.********************************************************************   00037700
.***AG.MF01 PROCESS MF MACRO FORMS                                      00037800
.********************************************************************   00037900
              ACTR  10000                                               00038000
.*----------------------------------------------------------------***   00038100
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00038200
              AIF   (N'&MF LE 1).ZG5A           CK NUM                  00038300
&ZMS          SETC  '"MF='                                              00038400
&ZMS          SETC  '&ZMS.&MF"'                                         00038500
&ZMS          SETC  '&ZMS "MF"'                                         00038600
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00038700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00038800
.ZG5A         ANOP  ,                                                   00038900
.*-------------------------------------------------------------------   00039000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00039100
&XMF          SETC  ''          INITIALIZE XVARIABLE                    00039200
.ZG6A   AIF   ('&MF(1)' NE 'S').ZG7A                                    00039300
&XMF          SETC  'S'         SET KEYWORD                             00039400
.*-------------------------------------------------------------------   00039500
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00039600
.ZG7A         AIF   (K'&XMF GT 0).ZG7C          KEYWORD                 00039700
              AIF   (K'&MF(1) LE 0).ZG7B                                00039800
&ZMS          SETC  '"MF='                                              00039900
&ZMS          SETC  '&ZMS.&MF"'                                         00040000
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           00040100
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00040200
&ZMS          SETC  '&ZMS "S".'                                         00040300
              MNOTE 8,' &ZMS '                                          00040400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00040500
.ZG7B         ANOP  ,                                                   00040600
&XMF          SETC  'S'         SET DEFAULT KEYWORD                     00040700
.ZG7C         ANOP  ,                                                   00040800
&ZXMF         SETC  'INPUT'     SET IN/OUTPUT                           00040900
.********************************************************************   00041000
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00041100
.********************************************************************   00041200
              ACTR  10000                                               00041300
.******************************************************************     00041400
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00041500
.******************************************************************     00041600
              ACTR  10000                                               00041700
.*----------------------------------------------------------------***   00041800
.***AH.P02 EXTRA POSITIONALS                                            00041900
              AIF   (N'&SYSLIST LE 0).ZGLISTX   NO EXTRAS               00042000
              AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL                00042100
              AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL            00042200
              AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL             00042300
.ZGLISTX1     ANOP  ,                                                   00042400
&ZCVAL        SETC  ''          ERROR FIELD                             00042500
&ZAWRK        SETA  0           POSITIONAL NUMBER                       00042600
.ZGLIST2      ANOP  ,                                                   00042700
&ZAWRK        SETA  &ZAWRK+1    NEXT POSITIONAL                         00042800
              AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE                00042900
&ZCVAL        SETC '&ZCVAL,&SYSLIST(&ZAWRK)'    EXTRA                   00043000
              AGO   .ZGLIST2                                            00043100
.*                                                                      00043200
.ZGLIST3      ANOP  ,                                                   00043300
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)       STRIP COMMA             00043400
&ZMS          SETC  'POSITIONAL ARGUMENT(S),'                           00043500
&ZMS          SETC  '&ZMS "&ZCVAL"'                                     00043600
&ZMS          SETC  '&ZMS CANNOT BE USED.'                              00043700
&ZMS          SETC  '&ZMS NO POSITIONAL ARGUMENTS'                      00043800
              MNOTE 8,' &ZMS ARE ALLOWED.'                              00043900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00044000
.ZGLISTX      ANOP  ,                                                   00044100
&ZASYSLNDX    SETA  0                                                   00044200
.*******************************************************************    00044300
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00044400
.*******************************************************************    00044500
              AIF   (&ZMACRET NE 0).ZLX2        ERROR DETECTED          00044600
.*******************************************************************    00044700
.***AE.01  START OF IOSCMXR MACRO CODE                                  00044800
.*******************************************************************    00044900
              LCLC  &M0M0001                 NAME                       00045000
&M0M0001      SETC  '&XLABEL'                SET NAME                   00045100
              AIF   (K'&XLABEL NE 0).XLAB2                              00045200
&M0M0001      SETC  'M00M&SYSNDX'            DEFAULT NAME               00045300
.*                                                                      00045400
.XLAB2        ANOP  ,                                                   00045500
&M0M0001 DS    0H                             IOSCMXR-1                 00045600
.*******************************************************************    00045700
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00045800
.*******************************************************************    00045900
              PUSH  PRINT                                               00046000
              AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON          00046100
              PRINT OFF         ++ PR01                                 00046200
              AGO   .ZPRNTXX                                            00046300
.ZPRINTX      PRINT ON                                                  00046400
.ZPRNTXX      ANOP  ,                                                   00046500
.********************************************************************   00046600
.***AL.A01  INTERNAL ARRAY TO PRODUCE FORMATTED CODE                    00046700
.********************************************************************   00046800
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00046900
                      LCLA  &ZOPN1         INVOCATION INDEX             00047000
                      LCLC  &ZOPL(4095)    LABEL                        00047100
                      LCLC  &ZOPO(4095)    OPERATION                    00047200
                      LCLC  &ZOPV(4095)    VALUE                        00047300
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00047400
.*                                                                      00047500
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00047600
.*-------------------------------------------------------------------   00047700
&ZOPN1                SETA &ZOPN                                        00047800
.*******************************************************************    00047900
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00048000
.*******************************************************************    00048100
                      ACTR  10000                                       00048200
.*                                                                      00048300
                      LCLA  &ZLC           COLUMN POSITION              00048400
                      LCLA  &ZOPX          LIST TABLE INDEX             00048500
                      LCLC  &ZLL           LABEL                        00048600
                      LCLC  &ZLOP          OPERATION                    00048700
                      LCLC  &ZLV           VALUE                        00048800
                      LCLC  &ZLD           DESCRIPTION                  00048900
.*                                                                      00049000
&ZOPX                 SETA  1                                           00049100
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00049200
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00049300
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00049400
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00049500
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00049600
                      AIF   (K'&ZLD LE 0).ZL5                           00049700
&ZLC                  SETA  35             COMMENT COLUMN               00049800
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00049900
&ZLC                  SETA  33             COMMMENT COLUMN              00050000
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00050100
&ZLV                  SETC  '&ZLV'.' '                                  00050200
                      AGO   .ZL3                                        00050300
.*                                                                      00050400
.ZL4                  ANOP  ,                                           00050500
&ZLV                  SETC  '&ZLV'.' '                                  00050600
.ZL5                  ANOP  ,                                           00050700
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00050800
.*                                                                      00050900
&ZLL     &ZLOP &ZLV                                                     00051000
.*                                                                      00051100
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00051200
                      AGO   .ZL2           CONTINUE LOOPING             00051300
.*                                                                      00051400
.ZLX                  ANOP  ,                                           00051500
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00051600
.*-----------BAL invocation code-------------                           00051700
.*********************************************************************  00051800
.*                                                                   *  00051900
.*  Switch to AMODE 31 to access the IOVT.                           *  00052000
.*                                                                   *  00052100
.*********************************************************************  00052200
         AIF    (&SYSALVL GE 2).ALVL2A                            @L1A  00052300
         LA    14,IOSCMXR_RETADDR_&SYSNDX     SAVE RETURN ADDRESS       00052400
         AGO   .ALVL2MA                                           @L1A  00052500
.ALVL2A  ANOP                                                     @L1A  00052600
         LARL  14,IOSCMXR_RETADDR_&SYSNDX     SAVE RETURN ADDRESS @L1A  00052700
.ALVL2MA ANOP                                                     @L1A  00052800
         BSM   14,0                SAVE CALLER AMODE BIT INTO HIGH      00052900
*                                  ORDER BIT OF R14                     00053000
         AIF    (&SYSALVL GE 2).ALVL2B                            @L1A  00053100
         LA    15,IOSCMXR_NXTADDR_&SYSNDX     GET THE NEXT ADDRESS      00053200
*                                                                 @01C  00053300
         O     15,IOSCMXR_X31_&SYSNDX         SET 31 BIT ADDRESSING     00053400
*                                                                 @01A  00053500
         BSM   0,15                SWITCH TO 31 BYTE ADDRESSING MODE    00053600
IOSCMXR_X31_&SYSNDX  DC A(X'80000000')  FOR 31 BIT ADDRESSING     @01C  00053700
IOSCMXR_NXTADDR_&SYSNDX  DS    0H      FOR SWITCHING ADDR MODE.   @01C  00053800
         AGO   .ALVL2MB                                           @L1A  00053900
.ALVL2B  ANOP                                                     @L1A  00054000
         SAM31                     SWITCH TO 31 BYTE ADDRESSING MODE    00054100
.ALVL2MB ANOP                                                     @L1A  00054200
.*********************************************************************  00054300
.*                                                                   *  00054400
.*  Get addressability to CVT                                        *  00054500
.*                                                                   *  00054600
.*********************************************************************  00054700
         L     15,16(0,0)                                               00054800
.*********************************************************************  00054900
.*                                                                   *  00055000
.*  Get addressability to IOCOM                                      *  00055100
.*                                                                   *  00055200
.*********************************************************************  00055300
         L     15,124(15,0)                                             00055400
.*********************************************************************  00055500
.*                                                                   *  00055600
.*  Get addressability to IOVT                                       *  00055700
.*                                                                   *  00055800
.*********************************************************************  00055900
         L     15,208(15,0)                                             00056000
         L     15,152(15,0)       ++ SET ADDR OF IOSVUXLR               00056100
         BR    15                 ++ BRANCH TO IOSVUXLR                 00056200
IOSCMXR_RETADDR_&SYSNDX  DS    0H  FOR SWIT. ADDR MODE                  00056300
         ANOP                                                           00056400
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00056500
.*******************************************************************    00056600
.***AP.X01  FORMAT GENERATED CODE                                       00056700
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00056800
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00056900
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00057000
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00057100
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00057200
                      AIF   (K'&ZLD LE 0).ZL51                          00057300
&ZLC                  SETA  35             COMMENT COLUMN               00057400
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00057500
&ZLC                  SETA  33             COMMENT COLUMN               00057600
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00057700
&ZLV                  SETC  '&ZLV'.' '                                  00057800
                      AGO   .ZL31                                       00057900
.*                                                                      00058000
.ZL41                 ANOP  ,                                           00058100
&ZLV                  SETC  '&ZLV'.' '                                  00058200
.ZL51                 ANOP  ,                                           00058300
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00058400
.*                                                                      00058500
&ZLL     &ZLOP &ZLV                                                     00058600
.*                                                                      00058700
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00058800
                      AGO   .ZL21          CONTINUE LOOPING             00058900
.*                                                                      00059000
.ZLX1                 ANOP  ,                                           00059100
.*******************************************************************    00059200
.***AP.X02  END OF IOSCMXR MACRO                                        00059300
&ZIOSCMXR             SETC  'YES'          SET IOSCMXR USED             00059400
         POP   PRINT                                                    00059500
*                                            IOSCMXR-1                  00059600
         SPACE 1                                                        00059700
.ZLX2                 ANOP  ,                                           00059800
         MEND                                                           00059900
**********************************************************************/ 00060000
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00060100
*%IOSCMXR: MACRO KEYS(PLISTVER,MF);                                     00060200
*  ANS('?'!!MACLABEL!!' '!!'IOSCMXRP '!!MACLIST!!                       00060300
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              00060400
*%END IOSCMXR;                                                          00060500
