*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IXCMG                                 -09/26/18-<3> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  XCF Accounting and Measurement                * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5650-ZOS COPYRIGHT IBM CORP. 1992, 2019                         * 00001200
*                                                                     * 00001300
* STATUS= HBB77C0                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      The XCF Measurement Gatherer service is used to collect        * 00002100
*      information about the XCF resources in use by the system on    * 00002200
*      which the service is invoked.  It may be possible to have the  * 00002300
*      XCF Measurement Gatherer service execute on some other system  * 00002400
*      in the sysplex, and in such cases, information about the XCF   * 00002500
*      resources in use by those systems can be returned by the       * 00002600
*      service routine.  Detailed information about XCF signalling    * 00002700
*      paths and/or messages pending delivery can be collected, as    * 00002800
*      well as summary information about message traffic between      * 00002900
*      systems in the sysplex, and/or message traffic between XCF     * 00003000
*      group members.  Summary information about the signalling       * 00003100
*      resources and the state of message delivery can also be        * 00003200
*      obtained for each XCF group member that is active on the       * 00003300
*      system that collects the data.  Detail information about the   * 00003400
*      signalling resources and the state of message delivery can     * 00003500
*      also be obtained for individual member(s) of an XCF group.     * 00003600
*                                                                     * 00003700
*      The measurement gathering data move routine is given control   * 00003800
*      from the IXCMG macro.  The measurement gathering macro will    * 00003900
*      complete the parameter list with caller provided data and      * 00004000
*      generate a program call to the measurement gathering service.  * 00004100
*      The measurement gathering macro is provided in list, execute,  * 00004200
*      and standard form.  The list form accepts no variable          * 00004300
*      parameters and is used only to reserve space for the parameter * 00004400
*      list.  The standard form is provided for use with routines     * 00004500
*      which do not require reentrant code.  The execute form is      * 00004600
*      provided for use with the list format for reentrant routines.  * 00004700
*      The measurement gathering macro is provided in PL/X and        * 00004800
*      assembler formats.                                             * 00004900
*                                                                     * 00005000
*      The parameter list must be in the caller's primary address     * 00005100
*      space or be addressable by the dispatchable unit access list.  * 00005200
*                                                                     * 00005300
*                                                                     * 00005400
*                                                                     * 00005500
*      INPUT REGISTERS:                                               * 00005600
*                                                                     * 00005700
*                                                                     * 00005800
*                          GR0-GR1     reserved                       * 00005900
*                                                                     * 00006000
*                          GR2-GR13    undefined                      * 00006100
*                                                                     * 00006200
*                          GR14-GR15   reserved                       * 00006300
*                                                                     * 00006400
*                          AR0-AR1     reserved                       * 00006500
*                                                                     * 00006600
*                          AR2-AR13    undefined                      * 00006700
*                                                                     * 00006800
*                          AR14-AR15   reserved                       * 00006900
*                                                                     * 00007000
*                                                                     * 00007100
*                                                                     * 00007200
*      OUTPUT ENVIRONMENT: Same as on entry                           * 00007300
*                                                                     * 00007400
*      OUTPUT REGISTERS:                                              * 00007500
*                                                                     * 00007600
*                                                                     * 00007700
*                          GR0         reason code based on GR15 or 0 * 00007800
*                                                                     * 00007900
*                          GR1         unpredictable                  * 00008000
*                                                                     * 00008100
*                          GR2-GR13    unchanged                      * 00008200
*                                                                     * 00008300
*                          GR14        unpredictable                  * 00008400
*                                                                     * 00008500
*                          GR15        return code                    * 00008600
*                                                                     * 00008700
*                          AR0-AR1     unpredictable                  * 00008800
*                                                                     * 00008900
*                          AR2-AR13    unchanged                      * 00009000
*                                                                     * 00009100
*                          AR14-AR15   unpredictable                  * 00009200
*                                                                     * 00009300
*                                                                     * 00009400
*                                                                     * 00009500
*                                                                     * 00009600
*                                                                     * 00009700
*      The data area is defined by mapping macro IXCYAMDA.  The       * 00009800
*      contents and mapping of the data area depend on the the        * 00009900
*      particular request.                                            * 00010000
*                                                                     * 00010100
*      When the GATHERFROM keyword is NOT explicitly coded (so the    * 00010200
*      data gathering defaults to LOCAL) and measurement data is      * 00010300
*      returned, the data area contains:                              * 00010400
*       A header (AMDAREA),                                           * 00010500
*       followed by 0 or more path entries (AMDPATH),                 * 00010600
*       followed by 0 or more message pending entries (AMDMPEND),     * 00010700
*       followed by 0 or more system entries (AMDSYS),                * 00010800
*       followed by 0 or more source/destination entries (AMDSD),     * 00010900
*       followed by 0 or more member entries (AMDMEM).                * 00011000
*                                                                     * 00011100
*      When data is returned for any of the following requests:       * 00011200
*       o GATHERFROM=TOKEN                                            * 00011300
*       o GATHERFROM=LOCAL                                            * 00011400
*                                                                     * 00011500
*      the data area contains:                                        * 00011600
*       A header (AMDAGFD, which incorporates AMDAREA),               * 00011700
*       followed by 0 or 1 Gatherer Level Info record (AMDGLI) that   * 00011800
*         indicates the AMDALEVEL of the data records provided,       * 00011900
*       followed by 0 or 1 Gatherer Level Info record (AMDGLI) that   * 00012000
*         indicates the maximum AMDALEVELs that can be provided,      * 00012100
*       followed by 0 or more path entries (AMDPATH),                 * 00012200
*       followed by 0 or more message pending entries (AMDMPEND),     * 00012300
*       followed by 0 or more system entries (AMDSYS),                * 00012400
*       followed by 0 or more source/destination entries (AMDSD),     * 00012500
*       followed by 0 or more member entries (AMDMEM).                * 00012600
*                                                                     * 00012700
*      When GATHERFROM=OTHER is specified and data is returned, the   * 00012800
*      data area contains:                                            * 00012900
*       A header (AMDAGFO).                                           * 00013000
*                                                                     * 00013100
*                                                                     * 00013200
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00013300
*                                                                     * 00013400
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00013500
*                                                                     * 00013600
*01* ENVIRONMENT:                                                     * 00013700
*                                                                     * 00013800
*                                                                     * 00013900
*      Dispatchable unit mode: Task or SRB mode.                      * 00014000
*                                                                     * 00014100
*      Minimum authorization: Supervisor state or PKM allowing keys   * 00014200
*                        0-7.                                         * 00014300
*                                                                     * 00014400
*      AMODE:            31-bit.                                      * 00014500
*                                                                     * 00014600
*      ASC mode:         Primary or Access Register.                  * 00014700
*                                                                     * 00014800
*                        If in Access Register ASC mode, specify      * 00014900
*                        SYSSTATE ASCENV=AR before invoking this      * 00015000
*                        macro.                                       * 00015100
*                                                                     * 00015200
*                        Any primary address space; any secondary     * 00015300
*                        address space; any home address space.       * 00015400
*                                                                     * 00015500
*                        Non-swappable primary address space          * 00015600
*                                                                     * 00015700
*      Serialization:                                                 * 00015800
*                                                                     * 00015900
*                        For GATHERFROM=LOCAL:                        * 00016000
*                         Enabled or disabled for I/O and external    * 00016100
*                        interrupts                                   * 00016200
*                         Either no locks held or only the CPU lock   * 00016300
*                        held.                                        * 00016400
*                                                                     * 00016500
*                        For GATHERFROM=OTHER with ECBPTR=NONE:       * 00016600
*                         Enabled or disabled for I/O and external    * 00016700
*                        interrupts                                   * 00016800
*                         Either no locks held or only the CPU lock   * 00016900
*                        held.                                        * 00017000
*                                                                     * 00017100
*                        For GATHERFROM=OTHER with ECBPTR^=NONE       * 00017200
*                         Enabled for I/O and external interrupts     * 00017300
*                         No locks held                               * 00017400
*                                                                     * 00017500
*                        For GATHERFROM=TOKEN:                        * 00017600
*                         Enabled for I/O and external interrupts     * 00017700
*                         No locks held                               * 00017800
*                                                                     * 00017900
*                                                                     * 00018000
*                                                                     * 00018100
*01* SYNTAX:                                                          * 00018200
*                                                                     * 00018300
*Ýxlabel¨  IXCMG     DATAAREA=xdataarea                               * 00018400
*                   ,DATALEN=xdatalen                                 * 00018500
*                  Ý,TYPE=ALL!PATH!MSGPEND!SYSTEM!SRCDST!MEMBER¨      * 00018600
*                  Ý,MEMTOKEN=»xmemtoken!0º                           * 00018700
*                     ÐÝ,GROUP=NO¨                                    * 00018800
*                     ¿Ý,GROUP=YES¨¨                                  * 00018900
*                  Ý,CLASSNAME=»xclassname!0º¨                        * 00019000
*                 ÐÝ,GATHERFROM=LOCAL¨                                * 00019100
*                 ÔÝ,GATHERFROM=OTHER                                 * 00019200
*                 !     ,SYSID=xsysid                                 * 00019300
*                 !     ,TIMEOUT=xtimeout                             * 00019400
*                 !    Ý,ECBPTR=»xecbptr!NONEº¨¨                      * 00019500
*                 ¿Ý,GATHERFROM=TOKEN                                 * 00019600
*                       ,REQTOKEN=xreqtoken¨                          * 00019700
*                  Ý,AMDALEVEL=»xamdalevel!0º¨                        * 00019800
*                  Ý,RETCODE=xretcode¨                                * 00019900
*                  Ý,RSNCODE=xrsncode¨                                * 00020000
*                  Ý,PLISTVER=»xplistver!IMPLIED_VERSIONº¨            * 00020100
*                 ÐÝ,MF=S¨                                            * 00020200
*                 ÔÝ,MF=(L,xmfctrl»,xmfattr!0Dº)¨                     * 00020300
*                 ¿Ý,MF=(E,xmfctrl»,COMPLETEº)¨                       * 00020400
*                                                                     * 00020500
*                                                                     * 00020600
*      Where:                                                         * 00020700
*                                                                     * 00020800
*                                                                     * 00020900
*      Ýxlabel¨                                                       * 00021000
*          is an optional symbol, starting in column 1, that is the   * 00021100
*          name on the IXCMG macro invocation.  The name must conform * 00021200
*          to the rules for an ordinary assembler language symbol.    * 00021300
*          DEFAULT: No name.                                          * 00021400
*                                                                     * 00021500
*                                                                     * 00021600
*                                                                     * 00021700
*                                                                     * 00021800
*      DATAAREA=xdataarea                                             * 00021900
*          is the name (RS-type), or address in register (2)-(12), of * 00022000
*          a required character output variable which is to contain   * 00022100
*          the output of the request.  The output is defined by       * 00022200
*          mappings in the macro IXCYAMDA.                            * 00022300
*                                                                     * 00022400
*          The data area must be in the primary address space or in   * 00022500
*          an address/data space that is addressable through a public * 00022600
*          entry on the dispatchable unit access list (DU-AL) of the  * 00022700
*          caller.  For callers running disabled and for              * 00022800
*          GATHERFROM=LOCAL requests, the data area must be in fixed  * 00022900
*          or disabled reference (DREF) storage.                      * 00023000
*                                                                     * 00023100
*          When the GATHERFROM keyword is NOT explicitly coded (so    * 00023200
*          the data gathering defaults to LOCAL) the DATAAREA will    * 00023300
*          contain the header AMDAREA at offset zero followed by the  * 00023400
*          requested data records (AMDPATH, AMDMPEND, AMDSYS, AMDSD,  * 00023500
*          and AMDMEM).                                               * 00023600
*                                                                     * 00023700
*          For a request that explicitly specifies GATHERFROM=LOCAL   * 00023800
*          or for a GATHERFROM=TOKEN request, the DATAAREA will       * 00023900
*          contain the header AMDAGFD at offset zero, followed by 0   * 00024000
*          or more Gatherer Level Info records (AMDGLI), followed by  * 00024100
*          the requested data records (AMDPATH, AMDMPEND, AMDSYS,     * 00024200
*          AMDSD, and AMDMEM).                                        * 00024300
*                                                                     * 00024400
*          For a GATHERFROM=OTHER request, the DATAAREA will contain  * 00024500
*          the header AMDAGFO at offset zero.                         * 00024600
*                                                                     * 00024700
*                                                                     * 00024800
*                                                                     * 00024900
*                                                                     * 00025000
*      DATALEN=xdatalen                                               * 00025100
*          is the name (RS-type), or address in register (2)-(12), of * 00025200
*          a required fullword input variable which contains the      * 00025300
*          length of the data area to contain the data returned by    * 00025400
*          the measurement gathering routine.  The length must be     * 00025500
*          greater than or equal to the length of the header          * 00025600
*          information (AMDAREA, or AMDAGFD, or AMDAGFO) that is to   * 00025700
*          be returned for the request.                               * 00025800
*                                                                     * 00025900
*                                                                     * 00026000
*                                                                     * 00026100
*                                                                     * 00026200
*      ÝTYPE=ALL!PATH!MSGPEND!SYSTEM!SRCDST!MEMBER¨                   * 00026300
*          is an optional group of keyword input(s) that specifies    * 00026400
*          the type(s) of data being requested from the measurement   * 00026500
*          gathering routine.  More than one of the options may be    * 00026600
*          specified (though it is not necessary if ALL is            * 00026700
*          specified), and all of the requested data is returned.     * 00026800
*          DEFAULT: ALL                                               * 00026900
*                                                                     * 00027000
*                                                                     * 00027100
*          TYPE=ALL                                                   * 00027200
*              indicates that all data types are returned.            * 00027300
*                                                                     * 00027400
*              For AMDALEVEL 0 requests, ALL is equivalent to having  * 00027500
*              specified PATH, MSGPEND, SYSTEM, and SRCDST for TYPE.  * 00027600
*              For AMDALEVEL > 0 requests, ALL is equivalent to       * 00027700
*              having specified PATH, MSGPEND, SYSTEM, SRCDST, and    * 00027800
*              MEMBER for TYPE.                                       * 00027900
*                                                                     * 00028000
*              For GATHERFROM=OTHER requests, the target system       * 00028100
*              determines what data types are to be returned when ALL * 00028200
*              is specified.  Since the target system could support   * 00028300
*              more data types than the local system, it could        * 00028400
*              include data records that are not understood by the    * 00028500
*              local system.  If you specify ALL for a                * 00028600
*              GATHERFROM=OTHER, your program must be prepared to     * 00028700
*              handle this possibility.  For example, a larger data   * 00028800
*              area might be needed, or unrecognized data types might * 00028900
*              need to be skipped.  Also be aware that the amount of  * 00029000
*              data collected when ALL is specified could be quite    * 00029100
*              large.  If it is too large for XCF to transfer between * 00029200
*              systems, the request will fail with a return and       * 00029300
*              reason code indicating that the system does not have   * 00029400
*              sufficient resources (IxcMgRsnNeedResources).          * 00029500
*                                                                     * 00029600
*          TYPE=PATH                                                  * 00029700
*              requests information on the usage of XCF paths.        * 00029800
*                                                                     * 00029900
*          TYPE=MSGPEND                                               * 00030000
*              requests information on pending messages.              * 00030100
*                                                                     * 00030200
*          TYPE=SYSTEM                                                * 00030300
*              requests system summary information on XCF paths.      * 00030400
*                                                                     * 00030500
*          TYPE=SRCDST                                                * 00030600
*              requests information for members sending and receiving * 00030700
*              messages (source and destination).                     * 00030800
*                                                                     * 00030900
*                                                                     * 00031000
*              o   If the member is active on the system that         * 00031100
*                  provided the data, this information describes all  * 00031200
*                  messages sent and received by that member.         * 00031300
*                                                                     * 00031400
*              o   If the member is active on some system other than  * 00031500
*                  the one that provided the data, this information   * 00031600
*                  describes just those messages sent from the system * 00031700
*                  providing the data to that member, and just those  * 00031800
*                  messages received from that member by the system   * 00031900
*                  providing the data.                                * 00032000
*                                                                     * 00032100
*                                                                     * 00032200
*                                                                     * 00032300
*          TYPE=MEMBER                                                * 00032400
*              requests information about members.                    * 00032500
*                                                                     * 00032600
*              A member is eligible for data gathering if it is       * 00032700
*              active on the system that collects the data.  So for   * 00032800
*              GATHERFROM=LOCAL requests, the member has to be active * 00032900
*              on the local system.  For GATHERFROM=OTHER, the member * 00033000
*              has to be active on the system that performs the data  * 00033100
*              collection (the one indicated by SYSID).  The MEMTOKEN * 00033200
*              and GROUP keywords determine the set of eligible       * 00033300
*              members whose data is to be gathered.                  * 00033400
*                                                                     * 00033500
*              This option is valid only for requests that specify    * 00033600
*              (or default to) PLISTVER > 0.                          * 00033700
*                                                                     * 00033800
*                                                                     * 00033900
*                                                                     * 00034000
*                                                                     * 00034100
*                                                                     * 00034200
*                                                                     * 00034300
*      ÝMEMTOKEN=»xmemtoken!0º                                        * 00034400
*          is the name (RS-type), or address in register (2)-(12), of * 00034500
*          an optional 64 bit input variable specifying the MEMTOKEN  * 00034600
*          of a member of an XCF group, or zero.  MEMTOKEN is only    * 00034700
*          used when gathering TYPE=MEMBER data.  It is not used for  * 00034800
*          any other data options.                                    * 00034900
*                                                                     * 00035000
*          If MEMTOKEN is 0, data is to be gathered for all eligible  * 00035100
*          members.  If MEMTOKEN is nonzero, the GROUP keyword        * 00035200
*          determines which eligible members are to be included.  For * 00035300
*          GROUP=NO, data is gathered only for the indicated member.  * 00035400
*          For GROUP=YES, the eligible members must be in the same    * 00035500
*          group as the indicated member.                             * 00035600
*          DEFAULT: 0                                                 * 00035700
*                                                                     * 00035800
*                                                                     * 00035900
*          ÝGROUP=»NO!YESº¨                                           * 00036000
*              is an optional keyword input that applies only when    * 00036100
*              the MEMTOKEN value is nonzero.                         * 00036200
*              DEFAULT: NO                                            * 00036300
*                                                                     * 00036400
*                                                                     * 00036500
*              ÝGROUP=NO¨                                             * 00036600
*                  Only information for the indicated member is to be * 00036700
*                  returned.                                          * 00036800
*                                                                     * 00036900
*              ÝGROUP=YES¨¨                                           * 00037000
*                  Information about any active member in the same    * 00037100
*                  group as the indicated member can be returned.     * 00037200
*                                                                     * 00037300
*                                                                     * 00037400
*                                                                     * 00037500
*                                                                     * 00037600
*                                                                     * 00037700
*                                                                     * 00037800
*                                                                     * 00037900
*                                                                     * 00038000
*      ÝCLASSNAME=»xclassname!0º¨                                     * 00038100
*          is the name (RS-type), or address in register (2)-(12), of * 00038200
*          an optional 8 character input variable specifying the name * 00038300
*          of the transport class for which data is to be gathered.   * 00038400
*          CLASSNAME is only used when gathering TYPE=SYSTEM data.    * 00038500
*          It is not used for any other data options.                 * 00038600
*                                                                     * 00038700
*          To properly match an XCF transport class name, the         * 00038800
*          specified name must be 8 characters, left justified, and   * 00038900
*          padded on the right with EBCDIC blanks as needed.          * 00039000
*          Alphabetic characters must be capitalized.  If the name    * 00039100
*          ends with an asterisk (*), all transport classes whose     * 00039200
*          name begins with the indicated prefix will be included.    * 00039300
*                                                                     * 00039400
*          If CLASSNAME is either not specified or specified as       * 00039500
*          hexadecimal zero, no filtering is applied and records      * 00039600
*          related to all installation defined transport classes will * 00039700
*          be included.                                               * 00039800
*          DEFAULT: 0                                                 * 00039900
*                                                                     * 00040000
*                                                                     * 00040100
*                                                                     * 00040200
*                                                                     * 00040300
*      ÝGATHERFROM=»LOCAL!OTHER!TOKENº¨                               * 00040400
*          is an optional keyword input that indicates what sort of   * 00040500
*          data gathering is to be performed.                         * 00040600
*                                                                     * 00040700
*          If a program specifying GATHERFROM is executed on a system * 00040800
*          that does not support this keyword, the request is         * 00040900
*          rejected for an invalid parameter list version             * 00041000
*          (IxcMgRsnPlistVersionNotValid).  The program can determine * 00041100
*          if the local system supports GATHERFROM processing by      * 00041200
*          invoking IXCQUERY REQINFO=FEATURES to see if the           * 00041300
*          QuReqRfIxcmgGatherFrom feature is supported.               * 00041400
*          DEFAULT: LOCAL                                             * 00041500
*                                                                     * 00041600
*                                                                     * 00041700
*          ÝGATHERFROM=LOCAL¨                                         * 00041800
*              Collect information about the XCF resources in use by  * 00041900
*              the system on which the service is invoked.  If        * 00042000
*              GATHERFROM=LOCAL is explicitly coded, the DATAAREA     * 00042100
*              must be large enough for the AMDAGFD header.  If the   * 00042200
*              request defaults to LOCAL because the GATHERFROM       * 00042300
*              keyword is not coded, the DATAAREA must be large       * 00042400
*              enough for the AMDAREA header.                         * 00042500
*                                                                     * 00042600
*          ÝGATHERFROM=OTHER                                          * 00042700
*              The service routine is to send the IXCMG request to    * 00042800
*              the indicated system for processing.  The DATAAREA     * 00042900
*              must be large enough for the AMDAGFO header.  If       * 00043000
*              accepted for processing, a 16 byte token representing  * 00043100
*              this request is placed in the indicated DATAAREA and   * 00043200
*              control returns to the caller.  Use this token as      * 00043300
*              input to a subsequent IXCMG GATHERFROM=TOKEN request   * 00043400
*              to retrieve the results of the data gathering          * 00043500
*              performed by the target system.                        * 00043600
*                                                                     * 00043700
*              The indicated system will asynchronously collect the   * 00043800
*              requested information about the XCF resources in use   * 00043900
*              by that system, and send the results back to the local * 00044000
*              system.  A subsequent IXCMG request can be issued to   * 00044100
*              collect the information received from the indicated    * 00044200
*              system, provided the information becomes available to  * 00044300
*              the local system and the request is made before the    * 00044400
*              indicated TIMEOUT expires.                             * 00044500
*                                                                     * 00044600
*              In general, GATHERFROM=OTHER requests have some unique * 00044700
*              considerations.  The target system that is to collect  * 00044800
*              the data may not provide the same support as the local * 00044900
*              system.  It may support parameter lists not supported  * 00045000
*              by the local system and conversely, it might not       * 00045100
*              support parameter lists supported by the local system. * 00045200
*              All systems that support GATHERFROM=OTHER requests     * 00045300
*              support PLISTVER=2.                                    * 00045400
*                                                                     * 00045500
*              If the target system does not support the requested    * 00045600
*              PLISTVER, the local system sets AMDAGFO_Retcode and    * 00045700
*              AMDAGFO_Rsncode in the DATAAREA to so indicate         * 00045800
*              (IxcMgRsnPlistVersionNotValid) and returns to the      * 00045900
*              caller with a return and reason indicating that the    * 00046000
*              DATAAREA must be examined for the results              * 00046100
*              (ixcMgRsnCheckResults).  If the target system does     * 00046200
*              support the requested PLISTVER, the request is         * 00046300
*              eligible to be sent to the indicated target system for * 00046400
*              processing (even if the local system does not support  * 00046500
*              the indicated PLISTVER).                               * 00046600
*                                                                     * 00046700
*              When using GATHERFROM=OTHER, carefully consider your   * 00046800
*              TYPE and AMDALEVEL specifications.  See the            * 00046900
*              description of those keywords for additional detail,   * 00047000
*              especially concerning the implications for the records * 00047100
*              that can be returned.  Also note that if the amount of * 00047200
*              data to be returned is too large for XCF to transfer   * 00047300
*              between systems, the request will fail with a return   * 00047400
*              and reason code indicating that the system does not    * 00047500
*              have sufficient resources (IxcMgRsnNeedResources).     * 00047600
*                                                                     * 00047700
*                                                                     * 00047800
*              SYSID=xsysid                                           * 00047900
*                  is the name (RS-type), or address in register      * 00048000
*                  (2)-(12), of a required fullword input variable    * 00048100
*                  containing the XCF system ID of the system whose   * 00048200
*                  data is to be collected.                           * 00048300
*                                                                     * 00048400
*                                                                     * 00048500
*                                                                     * 00048600
*                                                                     * 00048700
*              TIMEOUT=xtimeout                                       * 00048800
*                  is the name (RS-type), or address in register      * 00048900
*                  (2)-(12), of a required halfword input variable    * 00049000
*                  indicating the maximum number of seconds that the  * 00049100
*                  system is to allow the request to persist.  The    * 00049200
*                  specified value must be between 1 and 120,         * 00049300
*                  inclusive.                                         * 00049400
*                                                                     * 00049500
*                  Note that the request and its results can be       * 00049600
*                  discarded as soon as any of the following events   * 00049700
*                  occur:                                             * 00049800
*                                                                     * 00049900
*                  o Request has persisted longer than its TIMEOUT    * 00050000
*                                                                     * 00050100
*                  o Target system is removed from the sysplex        * 00050200
*                                                                     * 00050300
*                  o Subsequent IXCMG GATHERFROM=TOKEN request        * 00050400
*                  retrieves the results                              * 00050500
*                                                                     * 00050600
*                                                                     * 00050700
*                                                                     * 00050800
*                                                                     * 00050900
*              ÝECBPTR=»xecbptr!NONEº¨¨                               * 00051000
*                  is the name (RS-type), or address in register      * 00051100
*                  (2)-(12), of an optional 4 byte input that         * 00051200
*                  contains the address of an ECB to be posted either * 00051300
*                  when the results become available or when the      * 00051400
*                  request is discarded.  Note that the ECB could be  * 00051500
*                  posted before the IXCMG service returns.           * 00051600
*                                                                     * 00051700
*                  A zero postcode indicates that the results are     * 00051800
*                  available.  Issue an IXCMG GATHERFROM=TOKEN        * 00051900
*                  request to collect the results.  Note that the     * 00052000
*                  result could be that the original GATHERFROM=OTHER * 00052100
*                  request failed.  Also, the request and its results * 00052200
*                  could be discarded before the IXCMG                * 00052300
*                  GATHERFROM=TOKEN request is able to collect them.  * 00052400
*                                                                     * 00052500
*                  A nonzero postcode indicates that the request was  * 00052600
*                  discarded.  Assuming the ECB is associated with    * 00052700
*                  exactly one request, there would be no need to     * 00052800
*                  issue an IXCMG GATHERFROM=TOKEN request since the  * 00052900
*                  results are no longer available.                   * 00053000
*                                                                     * 00053100
*                  The ECB should be initialized by the requester     * 00053200
*                  prior to use with this service.  The ECB must      * 00053300
*                  reside either in common storage or in the home     * 00053400
*                  address space that existed when the IXCMG service  * 00053500
*                  is invoked.  Any task that waits on the ECB must   * 00053600
*                  have the same home address space.  If the request  * 00053700
*                  is accepted, the caller must ensure that storage   * 00053800
*                  for the ECB persists until the ECB is posted, or   * 00053900
*                  the home address space terminates.                 * 00054000
*                                                                     * 00054100
*                  If ECBPTR is specified with a value other than     * 00054200
*                  NONE, the requester must be running enabled with   * 00054300
*                  no locks held.                                     * 00054400
*                                                                     * 00054500
*                  If ECBPTR is not specified or ECBPTR=NONE is       * 00054600
*                  specified, no ECB is posted.                       * 00054700
*                  DEFAULT: NONE                                      * 00054800
*                                                                     * 00054900
*                                                                     * 00055000
*                                                                     * 00055100
*          ÝGATHERFROM=TOKEN                                          * 00055200
*              A prior IXCMG GATHERFROM=OTHER request was initiated   * 00055300
*              and returned a token to represent the request.         * 00055400
*              Retrieve the results of that request.  The DATAAREA    * 00055500
*              must be large enough for the AMDAGFD header.           * 00055600
*                                                                     * 00055700
*              The data records to be put into the DATAAREA are       * 00055800
*              determined by the parameters specified for the         * 00055900
*              original IXCMG GATHERFROM=OTHER request identified by  * 00056000
*              the REQTOKEN (and the software level of the system on  * 00056100
*              which the request executes).  The TYPE, MEMTOKEN,      * 00056200
*              GROUP, and AMDALEVEL keywords should not be coded when * 00056300
*              issuing a GATHERFROM=TOKEN request to retrieve the     * 00056400
*              results.  If the parameter list contains values for    * 00056500
*              these keywords other than TYPE=ALL, MEMTOKEN=0,        * 00056600
*              GROUP=NO, or AMDALEVEL=0, the request is rejected with * 00056700
*              a return and reason code to so indicate                * 00056800
*              (ixcmgRsnPlistBadType, ixcMgRsnPlistBadMemToken,       * 00056900
*              IxcMgRsnPlistBadGroup, IxcMgRsnPlistBadAmdaLevel       * 00057000
*              respectively).                                         * 00057100
*                                                                     * 00057200
*              If the indicated request no longer exists, the service * 00057300
*              routine sets a return and reason code to so indicate   * 00057400
*              (ixcMgRsnResultsNeeded) and returns to the caller.     * 00057500
*                                                                     * 00057600
*              If the results of the indicated request are not yet    * 00057700
*              available to the local system, the service routine     * 00057800
*              sets a return and reason code to so indicate           * 00057900
*              (ixcMgRsnResultsPending) and returns to the caller.    * 00058000
*                                                                     * 00058100
*              If the results of the indicated request are available, * 00058200
*              but the DATAAREA provided by this GATHERFROM=TOKEN     * 00058300
*              request is not large enough to hold all the results,   * 00058400
*              the service routine sets a return and reason code to   * 00058500
*              so indicate (ixcmgRsnStillMoreData) and returns to the * 00058600
*              caller.  Upon return, the AMDATLEN field in the        * 00058700
*              DATAAREA indicates how much storage is needed to       * 00058800
*              retrieve the results.  The caller should obtain a      * 00058900
*              sufficiently large DATAAREA and reissue the request    * 00059000
*              before the TIMEOUT expires for the indicated request.  * 00059100
*                                                                     * 00059200
*              If the results are available and the DATAAREA is large * 00059300
*              enough to hold the results, the service routine        * 00059400
*              attempts to copy the results (if any) to DATAAREA.     * 00059500
*              The request and its results are then discarded.  If    * 00059600
*              DATAAREA was not accessible, the service routine sets  * 00059700
*              a return and reason to so indicate                     * 00059800
*              (ixcMgRsnDataAreaBadStg or ixcMsgiRsnMsgbufBadAlet)    * 00059900
*              and discards the results.  If the results were         * 00060000
*              successfully copied to DATAAREA, the service routine   * 00060100
*              sets the return and reason code to one of two values   * 00060200
*              depending on the results of the data gathering         * 00060300
*              performed by the target system.  If the target system  * 00060400
*              successfully gathered all the requested data, the      * 00060500
*              service routine sets return code ixcRetcodeOK.  If the * 00060600
*              target system provided a nonzero return code, the      * 00060700
*              service routine sets return code ixcRetcodeWarn and    * 00060800
*              reason code ixcmgRsnCheckResults.  The fields          * 00060900
*              AMDAGFD_Retcode and AMDAGFD_Rsncode in the DATAAREA    * 00061000
*              respectively contain the return and reason code        * 00061100
*              provided by the target system.                         * 00061200
*                                                                     * 00061300
*                                                                     * 00061400
*              REQTOKEN=xreqtoken¨                                    * 00061500
*                  is the name (RS-type), or address in register      * 00061600
*                  (2)-(12), of a required 16 character input field   * 00061700
*                  that contains the request token that identifies    * 00061800
*                  the request whose results are to be collected.     * 00061900
*                  This token was returned as AMDAGFO_REQTOKEN in the * 00062000
*                  DATAAREA produced by a previous IXCMG              * 00062100
*                  GATHERFROM=OTHER request issued on the local       * 00062200
*                  system.                                            * 00062300
*                                                                     * 00062400
*                                                                     * 00062500
*                                                                     * 00062600
*                                                                     * 00062700
*                                                                     * 00062800
*                                                                     * 00062900
*                                                                     * 00063000
*                                                                     * 00063100
*      ÝAMDALEVEL=»xamdalevel!0º¨                                     * 00063200
*          is the name (RS-type), or address in register (2)-(12), of * 00063300
*          an optional byte input variable specifying the level of    * 00063400
*          the various IXCYAMDA record mappings which are to be       * 00063500
*          returned.  Valid values are 0, 1, 2, 3 and 4.  The         * 00063600
*          IXCYAMDA macro documents the records and fields which are  * 00063700
*          returned for the requested level.                          * 00063800
*                                                                     * 00063900
*          For each requested data type, the highest supported level  * 00064000
*          less than or equal to the indicated AMDALEVEL will be      * 00064100
*          returned by the system that collects the data records.     * 00064200
*                                                                     * 00064300
*          Note that the AMDALEVEL specification has some unique      * 00064400
*          considerations for GATHERFROM=OTHER requests.  The target  * 00064500
*          system that is to collect the data may not support the     * 00064600
*          same AMDALEVELs as the local system.  It may support       * 00064700
*          AMDALEVELs not supported by the local system and           * 00064800
*          conversely, it might not support AMDALEVELs supported by   * 00064900
*          the local system.  All systems that support                * 00065000
*          GATHERFROM=OTHER requests support AMDALEVEL=1 (or higher). * 00065100
*                                                                     * 00065200
*          If the target system does not support the requested        * 00065300
*          AMDALEVEL, the local system sets AMDAGFO_Retcode and       * 00065400
*          AMDAGFO_Rsncode in the DATAAREA to so indicate             * 00065500
*          (IxcMgRsnPlistBadAmdaLevel) and returns to the caller with * 00065600
*          a return and reason indicating that the DATAAREA must be   * 00065700
*          examined for the results (ixcMgRsnCheckResults).  The      * 00065800
*          field AMDAGFO_MaxAmdaLevel indicates the maximum AMDALEVEL * 00065900
*          supported by the target system.  If the target system does * 00066000
*          support the requested AMDALEVEL, the request is eligible   * 00066100
*          to be sent to the indicated target system for processing   * 00066200
*          (even if the local system does not support the indicated   * 00066300
*          AMDALEVEL).                                                * 00066400
*                                                                     * 00066500
*          When the results of the data gathering are retrieved by a  * 00066600
*          subsequent GATHERFROM=TOKEN request, the Gather Level Info * 00066700
*          records (AMDGLI) placed in the DATAAREA indicate the       * 00066800
*          maximum AMDALEVEL supported for each data type and the     * 00066900
*          actual AMDALEVEL of the records returned.  When a nonzero  * 00067000
*          AMDALEVEL is specified on the GATHERFROM=OTHER request,    * 00067100
*          the actual AMDALEVEL of the returned data records must be  * 00067200
*          examined to determine whether the requested levels were    * 00067300
*          returned.  If not, your program must proceed accordingly.  * 00067400
*                                                                     * 00067500
*          But even if the target system and the local system support * 00067600
*          the same AMDALEVEL, it could be that they support          * 00067700
*          different levels for a particular data type.  Since the    * 00067800
*          returned records are formatted at the highest supported    * 00067900
*          level less than or equal to the requested AMDALEVEL, a     * 00068000
*          request for AMDALEVEL=1 records of a particular data type  * 00068100
*          might return AMDALEVEL=0 records when the data is          * 00068200
*          collected on one system, and might return AMDALEVEL=1      * 00068300
*          records when collected on another.                         * 00068400
*                                                                     * 00068500
*          In particular, if AMDALEVEL=1 is specified for a data type * 00068600
*          for which the highest level supported by the local system  * 00068700
*          is 0, your program must be prepared for the possibility    * 00068800
*          that a GATHERFROM=OTHER request will return level 1        * 00068900
*          records.  This situation can be avoided by ensuring that   * 00069000
*          the requested AMDALEVEL is never higher than the highest   * 00069100
*          level offered for the requested data type(s).  Conversely, * 00069200
*          if AMDALEVEL=1 is supported by the local system for a      * 00069300
*          particular data type, but the highest level supported by   * 00069400
*          the target system for that data type is 0, your program    * 00069500
*          must be prepared for the fact that a GATHERFROM=OTHER      * 00069600
*          request will return level 0 records instead of the         * 00069700
*          requested level 1.  Your program must therefore inspect    * 00069800
*          the level information in the AMDGLI record for the         * 00069900
*          returned data records and react appropriately.             * 00070000
*                                                                     * 00070100
*          All systems that provide GATHERFROM=OTHER support offer    * 00070200
*          AMDALEVEL=1 data for the following data records:           * 00070300
*           o AMDPATH (TYPE=PATH)                                     * 00070400
*           o AMDSYS  (TYPE=SYSTEM)                                   * 00070500
*           o AMDMEM  (TYPE=MEMBER)                                   * 00070600
*          DEFAULT: 0                                                 * 00070700
*                                                                     * 00070800
*                                                                     * 00070900
*                                                                     * 00071000
*                                                                     * 00071100
*      ÝRETCODE=xretcode¨                                             * 00071200
*          is the name (RS-type) of an optional fullword output       * 00071300
*          variable, or register (2)-(12) or (15), into which the     * 00071400
*          return code is to be copied from GPR 15.  If you specify   * 00071500
*          15, GPR15, REG15, or R15 (within or without parentheses),  * 00071600
*          the value will be left in GPR 15.                          * 00071700
*                                                                     * 00071800
*                                                                     * 00071900
*                                                                     * 00072000
*                                                                     * 00072100
*      ÝRSNCODE=xrsncode¨                                             * 00072200
*          is the name (RS-type) of an optional fullword output       * 00072300
*          variable into which the reason code is to be copied from   * 00072400
*          GPR 0.  If you specify 0, 00, GPR0, GPR00, REG0, REG00, or * 00072500
*          R0 (within or without parentheses), the value will be left * 00072600
*          in GPR 0.                                                  * 00072700
*                                                                     * 00072800
*                                                                     * 00072900
*                                                                     * 00073000
*                                                                     * 00073100
*      ÝPLISTVER=»xplistver!IMPLIED_VERSIONº¨                         * 00073200
*          is an optional byte input decimal value in the "0-3" range * 00073300
*          that specifies the macro version.  PLISTVER is the only    * 00073400
*          key allowed on the list form of MF and determines which    * 00073500
*          parameter list is generated.  The macro keys associated    * 00073600
*          with each supported version of the macro are listed in     * 00073700
*          MACRO USAGE NOTE 2.  Note that MAX may be specified        * 00073800
*          instead of a number, and the parameter list will be of the * 00073900
*          largest size currently supported. This size may grow from  * 00074000
*          release to release (thus possibly affecting the amount of  * 00074100
*          storage needed by your program).  If your program can      * 00074200
*          tolerate this, IBM recommends that you always specify MAX  * 00074300
*          when creating the list form parameter list as that will    * 00074400
*          ensure that the list form parameter list is always long    * 00074500
*          enough to hold whatever parameters might be specified on   * 00074600
*          the execute form.                                          * 00074700
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00074800
*          default is the lowest version which allows all of the      * 00074900
*          parameters specified on the invocation to be processed.    * 00075000
*                                                                     * 00075100
*                                                                     * 00075200
*                                                                     * 00075300
*                                                                     * 00075400
*      ÝMF=»S!L!Eº¨                                                   * 00075500
*          is an optional keyword input which specifies the macro     * 00075600
*          form.                                                      * 00075700
*          DEFAULT: S                                                 * 00075800
*                                                                     * 00075900
*                                                                     * 00076000
*          ÝMF=S¨                                                     * 00076100
*              specifies the standard form of the macro.  The "S"     * 00076200
*              form generates code to put the parameters into an      * 00076300
*              in-line parameter list and invoke the desired service. * 00076400
*              Full checking for required macro keys is done along    * 00076500
*              with supplying defaults for omitted optional           * 00076600
*              parameters.                                            * 00076700
*                                                                     * 00076800
*          ÝMF=(L,xmfctrl»,xmfattr!0Dº)¨                              * 00076900
*              specifies the list form of the macro.  The "L" form    * 00077000
*              defines an area to be used for the parameter list.     * 00077100
*              Only the PLISTVER key may be specified on the          * 00077200
*              invocation.  All other macro parameters are flagged as * 00077300
*              errors.  If PLISTVER is not specified, the original    * 00077400
*              parameter list definition is used.                     * 00077500
*                                                                     * 00077600
*            ,xmfctrl                                                 * 00077700
*              is a required input.  It is the name of a storage area * 00077800
*              for the parameter list.                                * 00077900
*                                                                     * 00078000
*            »,xmfattr!0Dº                                            * 00078100
*              is an optional 60 character input string that varies   * 00078200
*              from 1 to 60 characters. Use it to force boundary      * 00078300
*              alignment of the parameter list. Use only 0F or 0D.    * 00078400
*              DEFAULT: 0D which forces the parameter list to a       * 00078500
*              doubleword boundary.                                   * 00078600
*                                                                     * 00078700
*          ÝMF=(E,xmfctrl»,COMPLETEº)¨                                * 00078800
*              specifies the execute form of the macro.  The "E" form * 00078900
*              generates code to put the parameters into the          * 00079000
*              parameter list specified by xmfctrl and provides full  * 00079100
*              syntax checking with default setting.                  * 00079200
*                                                                     * 00079300
*            ,xmfctrl                                                 * 00079400
*              is a required input.  It is the name (RS-type), or     * 00079500
*              address in register (1)-(12), of a storage area for    * 00079600
*              the parameter list.                                    * 00079700
*                                                                     * 00079800
*            »,COMPLETEº                                              * 00079900
*              is an optional keyword input which specifies the       * 00080000
*              degree of macro parameter syntax checking.             * 00080100
*              DEFAULT: COMPLETE                                      * 00080200
*                                                                     * 00080300
*                                                                     * 00080400
*              COMPLETE                                               * 00080500
*                  Checking for required macro keys is done and       * 00080600
*                  defaults are supplied for omitted optional         * 00080700
*                  parameters.                                        * 00080800
*                                                                     * 00080900
*                                                                     * 00081000
*                                                                     * 00081100
*                                                                     * 00081200
*                                                                     * 00081300
*                                                                     * 00081400
*                                                                     * 00081500
*01* RETURN CODES:                                                    * 00081600
*                                                                     * 00081700
*                                                                     * 00081800
*       0         IxcRetcodeOK:  Successful completion.  All          * 00081900
*                 requested data is contained in the data area        * 00082000
*                 provided.                                           * 00082100
*                                                                     * 00082200
*       4         IxcRetcodeWarning:  Successful completion, although * 00082300
*                 with exceptional circumstances.                     * 00082400
*                                                                     * 00082500
*                 HEX REASON       MEANING                            * 00082600
*                 CODE                                                * 00082700
*                                                                     * 00082800
*                                                                     * 00082900
*                 4           IxcMgRsnStillMoreData: DATAAREA too     * 00083000
*                             small.                                  * 00083100
*                                                                     * 00083200
*                             The DATAAREA provided was large enough  * 00083300
*                             to contain the header information but   * 00083400
*                             was not large enough to contain all the * 00083500
*                             requested measurement data.  The        * 00083600
*                             AMDATLEN field indicates the total      * 00083700
*                             length of the output data area that     * 00083800
*                             would have been needed to contain all   * 00083900
*                             the requested information.              * 00084000
*                                                                     * 00084100
*                             For GATHERFROM=LOCAL, the DATAAREA      * 00084200
*                             contains either the header AMDAREA or   * 00084300
*                             the header AMDAGFD, and as many data    * 00084400
*                             records as would fit.  To retrieve all  * 00084500
*                             the requested data records, retry the   * 00084600
*                             request with a DATAAREA whose length is * 00084700
*                             greater than or equal to the number of  * 00084800
*                             bytes indicated by AMDATLEN.  The       * 00084900
*                             amount of data to be returned can       * 00085000
*                             change dynamically so it is generally   * 00085100
*                             advisable to obtain more storage than   * 00085200
*                             indicated by AMDATLEN.                  * 00085300
*                                                                     * 00085400
*                             For GATHERFROM=TOKEN, the DATAAREA      * 00085500
*                             contains the header field AMDATLEN, but * 00085600
*                             no other data.  To retrieve any data at * 00085700
*                             all, retry the request with a DATAAREA  * 00085800
*                             whose length is greater than or equal   * 00085900
*                             to the number of bytes indicated by     * 00086000
*                             AMDATLEN.  Note that the amount of data * 00086100
*                             to be returned will not change          * 00086200
*                             dynamically so AMDATLEN indicates the   * 00086300
*                             exact amount of storage needed to       * 00086400
*                             retrieve the results.                   * 00086500
*                                                                     * 00086600
*                 8           IxcMgRsnResultsPending: Try again later * 00086700
*                                                                     * 00086800
*                             For GATHERFROM=TOKEN, the expected      * 00086900
*                             results have not yet arrived.  DATAAREA * 00087000
*                             was not updated.                        * 00087100
*                                                                     * 00087200
*                 10          ixcMgRsnCheckResults: GATHERFROM=OTHER  * 00087300
*                             may have failed                         * 00087400
*                                                                     * 00087500
*                             For GATHERFROM=TOKEN, the results of    * 00087600
*                             the request indicated by REQTOKEN were  * 00087700
*                             retrieved.  The system that collected   * 00087800
*                             the data provided a nonzero return      * 00087900
*                             code.  In DATAAREA, the fields          * 00088000
*                             AMDAGFD_Retcode and AMDAGFD_Rsncode     * 00088100
*                             contain the return and reason code      * 00088200
*                             provided by that system.  Continue      * 00088300
*                             processing per that result.             * 00088400
*                                                                     * 00088500
*                             For GATHERFROM=OTHER, the local system  * 00088600
*                             determined that the target system could * 00088700
*                             not process the request.  In DATAAREA,  * 00088800
*                             the fields AMDAGFO_Retcode and          * 00088900
*                             AMDAGFO_Rsncode contain the return and  * 00089000
*                             reason code to explain why.  Continue   * 00089100
*                             processing per that result.             * 00089200
*                                                                     * 00089300
*                                                                     * 00089400
*                                                                     * 00089500
*       8         IxcRetCodeParmError: Invalid parameters             * 00089600
*                                                                     * 00089700
*                 HEX REASON       MEANING                            * 00089800
*                 CODE                                                * 00089900
*                                                                     * 00090000
*                                                                     * 00090100
*                 14          IxcMgRsnDataAreaTooSmall:  DATAAREA too * 00090200
*                             small, not even the header will fit.    * 00090300
*                                                                     * 00090400
*                 18          IxcMgRsnDataAreaBadStg: Error accessing * 00090500
*                             DATAAREA.                               * 00090600
*                                                                     * 00090700
*                             For GATHERFROM=LOCAL or                 * 00090800
*                             GATHERFROM=OTHER, retry the request     * 00090900
*                             with a valid DATAAREA.  For             * 00091000
*                             GATHERFROM=TOKEN, the results of the    * 00091100
*                             original IXCMG GATHERFROM=OTHER request * 00091200
*                             may have been discarded.                * 00091300
*                                                                     * 00091400
*                 1C          IxcMgRsnDataAreaBadAlet: DATAAREA ALET  * 00091500
*                             not valid                               * 00091600
*                                                                     * 00091700
*                             For GATHERFROM=LOCAL or                 * 00091800
*                             GATHERFROM=OTHER, retry the request     * 00091900
*                             with a valid DATAAREA ALET.  For        * 00092000
*                             GATHERFROM=TOKEN, the results of the    * 00092100
*                             original IXCMG GATHERFROM=OTHER request * 00092200
*                             may have been discarded.                * 00092300
*                                                                     * 00092400
*                 40          IxcMgRsnPlistRsvdNotValid:  Reserved    * 00092500
*                             field in parameter list not 0.  or      * 00092600
*                             TYPE=MEMBER data requested with         * 00092700
*                             PLISTVER=0.                             * 00092800
*                                                                     * 00092900
*                 100         IxcMgRsnPlistBadAlet: Parameter list    * 00093000
*                             ALET not valid                          * 00093100
*                                                                     * 00093200
*                 104         IxcMgRsnPlistVersionNotValid:           * 00093300
*                             Parameter list version number not       * 00093400
*                             valid.  In some cases, this error may   * 00093500
*                             instead be reported with reason code    * 00093600
*                             x10C (IxcMgRsnPlistBadStg).             * 00093700
*                                                                     * 00093800
*                             For GATHERFROM=OTHER, which reports     * 00093900
*                             this failure in AMDAGFO_Retcode and     * 00094000
*                             AMDAGFO_RsnCode, the                    * 00094100
*                             AMDAGFO_MaxPlistVer field in the        * 00094200
*                             DATAAREA indicates the highest IXCMG    * 00094300
*                             parameter list version supported by the * 00094400
*                             system that was the target of the       * 00094500
*                             request.                                * 00094600
*                                                                     * 00094700
*                 108         IxcMgRsnPlistBadFunction: Parameter     * 00094800
*                             list function code not valid            * 00094900
*                                                                     * 00095000
*                 10C         IxcMgRsnPlistBadStg: Error accessing    * 00095100
*                             parameter list.  In some cases, this    * 00095200
*                             error is presented if the parameter     * 00095300
*                             list version number is not understood   * 00095400
*                             by the local system (instead of x104,   * 00095500
*                             IxcMgRsnPlistVersionNotValid).          * 00095600
*                                                                     * 00095700
*                 110         IxcMgRsnPlistBadAmdaLevel: AMDALEVEL    * 00095800
*                             value is not valid                      * 00095900
*                                                                     * 00096000
*                             For GATHERFROM=OTHER, which reports     * 00096100
*                             this failure in AMDAGFO_Retcode and     * 00096200
*                             AMDAGFO_RsnCode, the                    * 00096300
*                             AMDAGFO_MaxAmdaLevel field in the       * 00096400
*                             DATAAREA indicates the highest          * 00096500
*                             AMDALEVEL supported by the system that  * 00096600
*                             was the target of the request.          * 00096700
*                                                                     * 00096800
*                 114         IxcMgRsnPlistBadMemToken: MEMTOKEN      * 00096900
*                             value is not a valid token              * 00097000
*                                                                     * 00097100
*                 118         IxcMgRsnPlistBadSysid: SYSID value is   * 00097200
*                             not valid                               * 00097300
*                                                                     * 00097400
*                 11C         ixcMgRsnNotEnabled: Not running         * 00097500
*                             enabled.                                * 00097600
*                                                                     * 00097700
*                 120         ixcMgRsnPlistBadReqtoken: REQTOKEN      * 00097800
*                             value is not a valid token              * 00097900
*                                                                     * 00098000
*                 124         ixcMgRsnPlistBadTimeout: TIMEOUT value  * 00098100
*                             is not valid.                           * 00098200
*                                                                     * 00098300
*                 128         ixcMgRsnEcbBadStg: Error accessing ECB  * 00098400
*                                                                     * 00098500
*                 12C         ixcmgRsnLockHeld: A lock is held.       * 00098600
*                                                                     * 00098700
*                 130         ixcmgRsnPlistBadGroup: GROUP value is   * 00098800
*                             not valid.                              * 00098900
*                                                                     * 00099000
*                 134         ixcmgRsnPlistBadEcbPtr: ECBPTR value is * 00099100
*                             not valid.                              * 00099200
*                                                                     * 00099300
*                 138         ixcmgRsnPlistBadType: TYPE value is not * 00099400
*                             valid.                                  * 00099500
*                                                                     * 00099600
*                                                                     * 00099700
*                                                                     * 00099800
*                                                                     * 00099900
*       C         IxcRetCodeEnvError: Environmental error             * 00100000
*                                                                     * 00100100
*                 HEX REASON       MEANING                            * 00100200
*                 CODE                                                * 00100300
*                                                                     * 00100400
*                                                                     * 00100500
*                 4           IxcMgRsnNeedSoftware: System is         * 00100600
*                             downlevel                               * 00100700
*                                                                     * 00100800
*                             The system is unable to process the     * 00100900
*                             request because it does not have the    * 00101000
*                             necessary software installed.  For      * 00101100
*                             example, the target system does not     * 00101200
*                             support GATHERFROM=OTHER requests.  If  * 00101300
*                             reported via RETCODE and RSNCODE, the   * 00101400
*                             local system did not have the necessary * 00101500
*                             software.  If reported via              * 00101600
*                             AMDAGFO_Retcode and AMDAGFO_Rsncode,    * 00101700
*                             the system that was to collect the data * 00101800
*                             for a GATHERFROM=OTHER request did not  * 00101900
*                             have the necessary software.            * 00102000
*                                                                     * 00102100
*                 8           IxcMgRsnNeedResources: System resources * 00102200
*                             unavailable                             * 00102300
*                                                                     * 00102400
*                             The request could not be processed      * 00102500
*                             because the system was unable to obtain * 00102600
*                             the resources needed to process the     * 00102700
*                             request.  If reported via RETCODE and   * 00102800
*                             RSNCODE, the local system did not have  * 00102900
*                             the necessary resources.  If reported   * 00103000
*                             via AMDAGFD_Retcode and                 * 00103100
*                             AMDAGFD_Rsncode, the system that        * 00103200
*                             attempted to collect the requested data * 00103300
*                             did not have the necessary resources.   * 00103400
*                                                                     * 00103500
*                 C           IxcMgRsnSystemNotActive: System not     * 00103600
*                             active                                  * 00103700
*                                                                     * 00103800
*                             The system that is to provide the       * 00103900
*                             requested data is unable to do so       * 00104000
*                             because it is not active in the         * 00104100
*                             sysplex.  For GATHERFROM=OTHER request, * 00104200
*                             the local system was able to make this  * 00104300
*                             determination before the request was    * 00104400
*                             accepted for processing.  For           * 00104500
*                             GATHERFROM=TOKEN request, the local     * 00104600
*                             system made this determination after    * 00104700
*                             the GATHERFROM=OTHER request was        * 00104800
*                             accepted but the system became inactive * 00104900
*                             before the data could be made available * 00105000
*                             to the local system.                    * 00105100
*                                                                     * 00105200
*                 10          IxcMgRsnSystemNotReady: Try again later * 00105300
*                                                                     * 00105400
*                             For GATHERFROM=OTHER, the local system  * 00105500
*                             and the target system have not yet      * 00105600
*                             completed the setup needed to process   * 00105700
*                             the request.  Try again later.          * 00105800
*                                                                     * 00105900
*                 14          IxcMgRsnNeedNewRequest: Try             * 00106000
*                             GATHERFROM=OTHER                        * 00106100
*                                                                     * 00106200
*                             For GATHERFROM=TOKEN, the request       * 00106300
*                             indicated by REQTOKEN no longer exists. * 00106400
*                             As appropriate, issue a new             * 00106500
*                             GATHERFROM=OTHER request to obtain the  * 00106600
*                             desired data.  Since this failure       * 00106700
*                             likely implies that the request timed   * 00106800
*                             out, consider increasing the TIMEOUT    * 00106900
*                             specification for the new request.      * 00107000
*                                                                     * 00107100
*                             If you have coded the maximum possible  * 00107200
*                             timeout, there may be system problems   * 00107300
*                             that prevent your GATHERFOM=TOKEN       * 00107400
*                             request from being processed in a       * 00107500
*                             timely manner and/or that prevent XCF   * 00107600
*                             from being able to collect the data     * 00107700
*                             from the target system in a timely      * 00107800
*                             manner.                                 * 00107900
*                                                                     * 00108000
*                                                                     * 00108100
*                                                                     * 00108200
*                                                                     * 00108300
*       10        IxcRetCodeCompError: Failure in XCF processing      * 00108400
*                                                                     * 00108500
*                                                                     * 00108600
*                                                                     * 00108700
*01* REASON CODES:                                                    * 00108800
*                                                                     * 00108900
*       A unique reason code will be returned whenever the return     * 00109000
*       code is non-zero.                                             * 00109100
*                                                                     * 00109200
*01* MODULE TYPE:  ASSEM MACRO                                        * 00109300
*                                                                     * 00109400
*02*   PROCESSOR:  ASSEM                                              * 00109500
*                                                                     * 00109600
*01* COMPONENT:  SCXCF                                                * 00109700
*                                                                     * 00109800
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00109900
*                                                                     * 00110000
*01* MACRO USAGE NOTES:                                               * 00110100
*                                                                     * 00110200
*                                                                     * 00110300
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00110400
*        global macro variable.  Any value other than 'NO' will       * 00110500
*        result in the macro expansion being printed.  The default is * 00110600
*        'YES'.  The following examples illustrate how the ZPRINT     * 00110700
*        variable should be set.                                      * 00110800
*                                                                     * 00110900
*                    GBLC &ZPRINT                                     * 00111000
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00111100
*                                                                     * 00111200
*                                                                     * 00111300
*    2.  The  IXCMG  macro  supports multiple versions. The macro key * 00111400
*        list  below  contains the version level in which the key was * 00111500
*        first  introduced.  Positionals  are  identified by the word * 00111600
*        'Positional'  followed by the numeric value of its position. * 00111700
*        Nested  positionals  are  preceded  by their outer key.  The * 00111800
*        lowest value represents the original version and the highest * 00111900
*        value represents the most recent version of the IXCMG macro. * 00112000
*        When  specifying  PLISTVER,  be  sure that it is at least as * 00112100
*        high  as  the  highest  version number of all the keys being * 00112200
*        used.                                                        * 00112300
*                                                                     * 00112400
*        VERSION   KEY                                                * 00112500
*                                                                     * 00112600
*              0      DATAAREA                                        * 00112700
*                     DATALEN                                         * 00112800
*                     TYPE                                            * 00112900
*              1      AMDALEVEL                                       * 00113000
*                     MEMTOKEN                                        * 00113100
*              2      ECBPTR                                          * 00113200
*                     GATHERFROM                                      * 00113300
*                     GROUP                                           * 00113400
*                     REQTOKEN                                        * 00113500
*                     SYSID                                           * 00113600
*                     TIMEOUT                                         * 00113700
*              3      CLASSNAME                                       * 00113800
*                                                                     * 00113900
*                                                                     * 00114000
*                                                                     * 00114100
*01* CHANGE ACTIVITY:                                                 * 00114200
*                                                                     * 00114300
*   Flag LineItem  FMID    Date   ID    Comment                       * 00114400
*                                                                     * 00114500
*    $L0=COUPLXAM HBB4410 860901 PDXB:  Coupling Support              * 00114600
*    $P1=PKB2941  HBB4430 920617 PDT8:  Update prolog to state only   * 00114700
*                                         31 bit addressing mode is   * 00114800
*                                         supported                   * 00114900
*    $P2=PIG1274  HBB5510 930520 PD00BJ:  Miscellaneous prolog        * 00115000
*                                         clarifications, added       * 00115100
*                                         documentation of reason     * 00115200
*                                         code 4 when return code is  * 00115300
*                                         4.                          * 00115400
*    $L1=XCFBC    HBB6603 950707 PD00BJ:  Add MSGUSE support          * 00115500
*    $D1=DQC028   HBB6603 960815 PD00DT:  Delete MSGUSE support       * 00115600
*    $01=OW37621  HBB6606 001215 PD00BJ:  Add MEMBER support          * 00115700
*    $P3=PX01240  HBB7705 010122 PD00MO:  Reship to pick up AMG fix   * 00115800
*    $02=OA09194  HBB7707 060330 PD00BJ:  Add GATHERFROM, GROUP       * 00115900
*    $03=OA26856  HBB7740 090519 PD00BJ:  Add CLASSNAME               * 00116000
*    $L2=TCSIMP   HBB77A0 131205 PD00C9:  AMDALEVEL 3                 * 00116100
*    $L3=ETCLASS  HBB77C0 180814 PD0NDM:  AMDALEVEL 4                 * 00116200
****** END OF SPECIFICATIONS *****************************************/ 00116300
*/********************************************************************* 00116400
         MACRO                                                          00116500
&XLABEL  IXCMG &DATAAREA=,&DATALEN=,&TYPE=,&MEMTOKEN=,&GROUP=,         *00116600
               &CLASSNAME=,&GATHERFROM=,&SYSID=,&TIMEOUT=,&ECBPTR=,    *00116700
               &REQTOKEN=,&AMDALEVEL=,&RETCODE=,&RSNCODE=,&PLISTVER=,  *00116800
               &MF=                                                     00116900
.*                                                                      00117000
*                MACDATE -09/26/18-<3>                                  00117100
.*                                                                      00117200
.*******************************************************************    00117300
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00117400
.*******************************************************************    00117500
                GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                 00117600
                GBLC  &ZTEST      YES=TEST NO=NO TEST                   00117700
                GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX           00117800
.*                                                                      00117900
                GBLC  &ZIXCMG     YES=MACRO USED AT LEAST ONCE          00118000
.*******************************************************************    00118100
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00118200
.*******************************************************************    00118300
                LCLC  &ZMS        ERROR MESSAGE WORK AREA               00118400
                LCLC  &ZCNDX      SYSNDX CHARACTERS                     00118500
                LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED            00118600
                LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR           00118700
                LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE           00118800
                LCLA  &ZAWRK      USED AS A WORK AREA                   00118900
                LCLA  &ZASIZ      USED FOR SIZE OF VALUE                00119000
                LCLA  &ZN         NUMERIC WORK VARIABLE                 00119100
                LCLC  &ZC         CHARACTER WORK VARIABLE               00119200
                LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE           00119300
                LCLA  &ZTLA       VALUE TOO LONG VARIABLE               00119400
                LCLC  &ZMAC_G     "G" or null                           00119500
&ZMAC_G         SETC  ''                                                00119600
                LCLC  &ZMAC_LR                                          00119700
&ZMAC_LR        SETC  'LR'                                              00119800
                LCLC  &ZMAC_L                                           00119900
&ZMAC_L         SETC  'L'                                               00120000
                LCLC  &ZMAC_ST                                          00120100
&ZMAC_ST        SETC  'ST'                                              00120200
                LCLC  &ZMAC_LLGT                                        00120300
&ZMAC_LLGT      SETC  'L'                                               00120400
                LCLC  &ZMAC_LGR                                         00120500
&ZMAC_LGR       SETC  'LR'                                              00120600
                LCLC  &ZMAC_LG                                          00120700
&ZMAC_LG        SETC  'L'                                               00120800
                LCLC  &ZMAC_STG                                         00120900
&ZMAC_STG       SETC  'ST'                                              00121000
                LCLA  &ZMACRET    MACRO RETURN CODE                     00121100
&ZMACRET        SETA  0           ASSUME NO ERRORS                      00121200
.*                                                                      00121300
                LCLC  &ZCSYSLIST(255)           NONXKEY, POS ARRAY      00121400
                LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()            00121500
                LCLA  &ZPLLEN     PARAMETER LIST LENGTH                 00121600
                LCLC  &ZENDBASEPL               End of base PL          00121700
                LCLA  &ZPLWORKA   PARAMETER LIST LENGTH                 00121800
.*******************************************************************    00121900
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00122000
.*******************************************************************    00122100
                LCLA  &ZI         INDEX FOR ARRAY                       00122200
                LCLA  &ZJ         INDEX FOR PARMS                       00122300
                LCLA  &ZK         INDEX FOR PARSE                       00122400
                LCLA  &ZLO        LOW RANGE VALUE                       00122500
                LCLA  &ZHI        HIGH RANGE VALUE                      00122600
                LCLC  &ZW         WORK AREA FOR PARM                    00122700
.********************************************************************   00122800
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00122900
.********************************************************************   00123000
                GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL               00123100
                GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE        00123200
                GBLA  &SYSALVL    SYSSTATE ARCHLVL                      00123300
                GBLC  &SYSAM64    SYSSTATE AMODE64                      00123400
.*                                                                      00123500
                AIF   (K'&SYSASCE GT 0).ZSYS4   SYS STATE DEFINED       00123600
                AIF   (K'&SYSSPLV GT 0).ZSYS2   SP LEVEL DEFINED        00123700
                SPLEVEL  TEST                                           00123800
.ZSYS2          ANOP  ,                                                 00123900
                AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1             00124000
                AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1             00124100
                SYSSTATE TEST                                           00124200
                AGO   .ZSYS4                                            00124300
.ZSYS3          ANOP  ,                                                 00124400
&SYSASCE        SETC  'P'         ASSUME SYSSTATE PRIMARY               00124500
.ZSYS4          ANOP  ,                                                 00124600
                AIF   ('&SYSAM64' NE 'YES').ZSYSN64                     00124700
&ZMAC_LLGT      SETC 'LLGT'                                             00124800
&ZMAC_LGR       SETC 'LGR'                                              00124900
&ZMAC_LG        SETC 'LG'                                               00125000
&ZMAC_STG       SETC 'STG'                                              00125100
.ZSYSN64        ANOP  ,                                                 00125200
.*******************************************************************    00125300
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00125400
.*******************************************************************    00125500
                LCLC  &XDATAAREA  ++ NAME                               00125600
                LCLC  &XDATALEN   ++ NAME                               00125700
                LCLC  &XTYPE(257)               ++ VALUE                00125800
                LCLC  &XMEMTOKEN  ++ NAME                               00125900
                LCLC  &XGROUP     ++ VALUE                              00126000
                LCLC  &XCLASSNAME               ++ NAME                 00126100
                LCLC  &XGATHERFROM              ++ VALUE                00126200
                LCLC  &XSYSID     ++ NAME                               00126300
                LCLC  &XTIMEOUT   ++ NAME                               00126400
                LCLC  &XECBPTR    ++ NAME                               00126500
                LCLC  &XREQTOKEN  ++ NAME                               00126600
                LCLC  &XAMDALEVEL               ++ NAME                 00126700
                LCLC  &XRETCODE   ++ NAME                               00126800
                LCLC  &XRSNCODE   ++ NAME                               00126900
                LCLA  &XPLISTVER  ++ VALUE                              00127000
                LCLC  &XMF        ++ VALUE                              00127100
                LCLC  &XMFCTRL    ++ NAME                               00127200
                LCLC  &XMFATTR    ++ VALUE                              00127300
                LCLC  &XMFSCK     ++ VALUE                              00127400
.*******************************************************************    00127500
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00127600
.*******************************************************************    00127700
                LCLC  &ZXDATAAREA               ++ OUTPUT NAME          00127800
                LCLC  &ZXDATALEN  ++ INPUT NAME                         00127900
                LCLC  &ZXTYPE     ++ INPUT VALUE                        00128000
                LCLC  &ZXMEMTOKEN               ++ INPUT NAME           00128100
                LCLC  &ZXGROUP    ++ INPUT VALUE                        00128200
                LCLC  &ZXCLASSNAME              ++ INPUT NAME           00128300
                LCLC  &ZXGATHERFROM             ++ INPUT VALUE          00128400
                LCLC  &ZXSYSID    ++ INPUT NAME                         00128500
                LCLC  &ZXTIMEOUT  ++ INPUT NAME                         00128600
                LCLC  &ZXECBPTR   ++ INPUT NAME                         00128700
                LCLC  &ZXREQTOKEN               ++ INPUT NAME           00128800
                LCLC  &ZXAMDALEVEL              ++ INPUT NAME           00128900
                LCLC  &ZXRETCODE  ++ OUTPUT NAME                        00129000
                LCLC  &ZXRSNCODE  ++ OUTPUT NAME                        00129100
                LCLC  &ZXPLISTVER               ++ INPUT VALUE          00129200
                LCLC  &ZXMF       ++ INPUT VALUE                        00129300
                LCLC  &ZXMFCTRL   ++ INPUT NAME                         00129400
                LCLC  &ZXMFATTR   ++ INPUT VALUE                        00129500
                LCLC  &ZXMFSCK    ++ INPUT VALUE                        00129600
.********************************************************************   00129700
.***AC.PLV01  PROCESS PLISTVER                                      *   00129800
.********************************************************************   00129900
&XPLISTVER      SETA  0                                                 00130000
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00130100
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00130200
&XPLISTVER      SETA  3                                                 00130300
.ZPLV0          ANOP  ,                                                 00130400
.*                                                                      00130500
                AIF   ('&MEMTOKEN' EQ '').ZPLV1E                        00130600
                AIF   (&XPLISTVER GE 1).ZPLV1E                          00130700
&XPLISTVER      SETA  1                                                 00130800
.ZPLV1E         ANOP  ,                                                 00130900
.*                                                                      00131000
                AIF   ('&GROUP' EQ '').ZPLV2E                           00131100
                AIF   (&XPLISTVER GE 2).ZPLV2E                          00131200
&XPLISTVER      SETA  2                                                 00131300
.ZPLV2E         ANOP  ,                                                 00131400
.*                                                                      00131500
                AIF   ('&CLASSNAME' EQ '').ZPLV3E                       00131600
                AIF   (&XPLISTVER GE 3).ZPLV3E                          00131700
&XPLISTVER      SETA  3                                                 00131800
.ZPLV3E         ANOP  ,                                                 00131900
.*                                                                      00132000
                AIF   ('&GATHERFROM' EQ '').ZPLV4E                      00132100
                AIF   (&XPLISTVER GE 2).ZPLV4E                          00132200
&XPLISTVER      SETA  2                                                 00132300
.ZPLV4E         ANOP  ,                                                 00132400
.*                                                                      00132500
                AIF   ('&SYSID' EQ '').ZPLV5E                           00132600
                AIF   (&XPLISTVER GE 2).ZPLV5E                          00132700
&XPLISTVER      SETA  2                                                 00132800
.ZPLV5E         ANOP  ,                                                 00132900
.*                                                                      00133000
                AIF   ('&TIMEOUT' EQ '').ZPLV6E                         00133100
                AIF   (&XPLISTVER GE 2).ZPLV6E                          00133200
&XPLISTVER      SETA  2                                                 00133300
.ZPLV6E         ANOP  ,                                                 00133400
.*                                                                      00133500
                AIF   ('&ECBPTR' EQ '').ZPLV7E                          00133600
                AIF   (&XPLISTVER GE 2).ZPLV7E                          00133700
&XPLISTVER      SETA  2                                                 00133800
.ZPLV7E         ANOP  ,                                                 00133900
.*                                                                      00134000
                AIF   ('&REQTOKEN' EQ '').ZPLV8E                        00134100
                AIF   (&XPLISTVER GE 2).ZPLV8E                          00134200
&XPLISTVER      SETA  2                                                 00134300
.ZPLV8E         ANOP  ,                                                 00134400
.*                                                                      00134500
                AIF   ('&AMDALEVEL' EQ '').ZPLV9E                       00134600
                AIF   (&XPLISTVER GE 1).ZPLV9E                          00134700
&XPLISTVER      SETA  1                                                 00134800
.ZPLV9E         ANOP  ,                                                 00134900
.*                                                                      00135000
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00135100
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00135200
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00135300
.*-------------------------------------------------------------------   00135400
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00135500
&ZMS            SETC  '"PLISTVER='                                      00135600
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00135700
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00135800
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00135900
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00136000
                AGO   .ZPVCK2                                           00136100
.ZPVCK3         ANOP  ,                                                 00136200
.*-------------------------------------------------------------------   00136300
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00136400
&ZMS            SETC  '"PLISTVER='                                      00136500
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00136600
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00136700
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00136800
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00136900
                AGO   .ZPVCKE                                           00137000
.ZPVCK2         ANOP  ,                                                 00137100
.*-------------------------------------------------------------------   00137200
&ZCVAL          SETC  '&PLISTVER(1)'                                    00137300
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00137400
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00137500
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00137600
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00137700
                AIF   (&ZN LE 3).ZPVCK4A   NOT HIGH                     00137800
.ZPVCK6         ANOP  ,                                                 00137900
&ZMS            SETC  '"PLISTVER='                                      00138000
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00138100
&ZMS            SETC  '&ZMS THE RANGE IS "0-3"'                         00138200
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00138300
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00138400
&XPLISTVER      SETA  3                                                 00138500
                AGO   .ZPVCKE                                           00138600
.*-------------------------------------------------------------------   00138700
.ZPVCK4A        ANOP  ,                                                 00138800
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00138900
&ZMS            SETC  'PLISTVER='                                       00139000
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00139100
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00139200
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00139300
                MNOTE 8,' &ZMS IS REQUIRED.'                            00139400
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00139500
                AGO   .ZPVCK5                                           00139600
.ZPVCK4         ANOP  ,                                                 00139700
&XPLISTVER      SETA  &PLISTVER(1)                                      00139800
.ZPVCK5         ANOP  ,                                                 00139900
.ZPVCKE         ANOP  ,                                                 00140000
.********************************************************************   00140100
.***AG.MF01 PROCESS MF MACRO FORMS                                      00140200
.********************************************************************   00140300
                ACTR  10000                                             00140400
.*------------------------------------------------------------------    00140500
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00140600
&XMF            SETC  ''          INITIALIZE XVARIABLE                  00140700
.*-------------------------------------------------------------------   00140800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00140900
.ZG59           ANOP  ,                                                 00141000
&ZTLC           SETC 'S'                                                00141100
                AIF   ('&MF(1)' NE '&ZTLC').ZG60                        00141200
&XMF            SETC  'S'         SET KEYWORD                           00141300
                AIF   (N'&MF LE 1).ZG59A        CK NUM                  00141400
&ZMS            SETC  '"MF='                                            00141500
&ZMS            SETC  '&ZMS.&MF"'                                       00141600
&ZMS            SETC  '&ZMS "MF"'                                       00141700
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00141800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00141900
.ZG59A          ANOP  ,                                                 00142000
.*-------------------------------------------------------------------   00142100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00142200
.ZG60           ANOP  ,                                                 00142300
&ZTLC           SETC 'L'                                                00142400
                AIF   ('&MF(1)' NE '&ZTLC').ZG67                        00142500
&XMF            SETC  'L'         SET KEYWORD                           00142600
                AIF   (N'&MF LE 3).ZG60A        CK NUM                  00142700
&ZMS            SETC  '"MF='                                            00142800
&ZMS            SETC  '&ZMS.&MF"'                                       00142900
&ZMS            SETC  '&ZMS "MF"'                                       00143000
                MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'              00143100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00143200
.ZG60A          ANOP  ,                                                 00143300
.*-------------------------------------------------------------------   00143400
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00143500
                AIF   (N'&SYSLIST NE 0).ZG60B   POSITIONALS?            00143600
                AIF   ('&DATAAREA' NE '').ZG60B  KEYS?                  00143700
                AIF   ('&DATALEN' NE '').ZG60B  KEYS?                   00143800
                AIF   ('&TYPE' NE '').ZG60B     KEYS?                   00143900
                AIF   ('&MEMTOKEN' NE '').ZG60B  KEYS?                  00144000
                AIF   ('&GROUP' NE '').ZG60B    KEYS?                   00144100
                AIF   ('&CLASSNAME' NE '').ZG60B  KEYS?                 00144200
                AIF   ('&GATHERFROM' NE '').ZG60B  KEYS?                00144300
                AIF   ('&SYSID' NE '').ZG60B    KEYS?                   00144400
                AIF   ('&TIMEOUT' NE '').ZG60B  KEYS?                   00144500
                AIF   ('&ECBPTR' NE '').ZG60B   KEYS?                   00144600
                AIF   ('&REQTOKEN' NE '').ZG60B  KEYS?                  00144700
                AIF   ('&AMDALEVEL' NE '').ZG60B  KEYS?                 00144800
                AIF   ('&RETCODE' NE '').ZG60B  KEYS?                   00144900
                AIF   ('&RSNCODE' NE '').ZG60B  KEYS?                   00145000
                AGO    .ZG60C     INVOCATION OKAY                       00145100
.ZG60B          ANOP  ,                                                 00145200
&ZMS            SETC  'THE "L" FORM OF "MF"'                            00145300
&ZMS            SETC  '&ZMS CAN ONLY HAVE'                              00145400
&ZMS            SETC  '&ZMS THE "PLISTVER" KEY'                         00145500
                MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'            00145600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00145700
.ZG60C          ANOP  ,                                                 00145800
.*-------------------------------------------------------------------   00145900
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00146000
&ZXMFCTRL       SETC  'INPUT'     SET IN/OUTPUT                         00146100
&XMFCTRL        SETC  '&MF(2,1)'  SET XVARIABLE                         00146200
                AIF   (N'&MF(2) GT 1).ZG62B     MULTI                   00146300
&XMFCTRL        SETC  '&MF(2)'    SET XVARIABLE                         00146400
.ZG62B          AIF   (K'&MF(2) GT 0).ZG62C                             00146500
&ZXMFCTRL       SETC  ''          RESET IN/OUTPUT                       00146600
&ZMS            SETC  'WHEN "L" IS SPECIFIED'                           00146700
&ZMS            SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'               00146800
                MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                      00146900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00147000
.ZG62C          ANOP  ,                                                 00147100
.*-------------------------------------------------------------------   00147200
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00147300
                AIF   (K'&ZXMFCTRL LE 0).ZG62P  NOT I/O                 00147400
                AIF   ('&XMFCTRL'(1,1) NE '(').ZG62P                    00147500
&ZXMFCTRL       SETC  ''          RESET IN/OUTPUT                       00147600
&ZMS            SETC  '"MF='                                            00147700
&ZMS            SETC  '&ZMS.&MF"'                                       00147800
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00147900
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'                 00148000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00148100
.ZG62P          ANOP  ,                                                 00148200
.*-------------------------------------------------------------------   00148300
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00148400
&ZXMFATTR       SETC  'INPUT'     SET IN/OUTPUT                         00148500
&XMFATTR        SETC  '0D'                                              00148600
                AIF   (K'&MF(3) LE 0).ZG65B     PARM                    00148700
&XMFATTR        SETC  '&MF(3,1)'  SET XVARIABLE                         00148800
                AIF   (N'&MF(3) GT 1).ZG65B     MULTI                   00148900
&XMFATTR        SETC  '&MF(3)'    SET XVARIABLE                         00149000
.ZG65B          ANOP  ,                                                 00149100
.*-------------------------------------------------------------------   00149200
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00149300
                AIF   (K'&ZXMFATTR LE 0).ZG65P  NOT I/O                 00149400
                AIF   ('&XMFATTR'(1,1) NE '(').ZG65P                    00149500
&ZXMFATTR       SETC  ''          RESET IN/OUTPUT                       00149600
&ZMS            SETC  '"MF='                                            00149700
&ZMS            SETC  '&ZMS.&MF"'                                       00149800
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00149900
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'                 00150000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00150100
.ZG65P          ANOP  ,                                                 00150200
.*-------------------------------------------------------------------   00150300
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00150400
                AIF   (K'&ZXMFATTR LE 0).ZG65S  NOT I/O                 00150500
                AIF   (K'&XMFATTR LE 60).ZG65S  LNG OK                  00150600
&ZXMFATTR       SETC  ''          RESET IN/OUTPUT                       00150700
&ZMS            SETC  '"MF='                                            00150800
&ZMS            SETC  '&ZMS.&MF"'                                       00150900
&ZMS            SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'             00151000
                MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'                00151100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00151200
.ZG65S          ANOP  ,                                                 00151300
.*-------------------------------------------------------------------   00151400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00151500
.ZG67           ANOP  ,                                                 00151600
&ZTLC           SETC 'E'                                                00151700
                AIF   ('&MF(1)' NE '&ZTLC').ZG75                        00151800
&XMF            SETC  'E'         SET KEYWORD                           00151900
                AIF   (N'&MF LE 3).ZG67A        CK NUM                  00152000
&ZMS            SETC  '"MF='                                            00152100
&ZMS            SETC  '&ZMS.&MF"'                                       00152200
&ZMS            SETC  '&ZMS "MF"'                                       00152300
                MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'              00152400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00152500
.ZG67A          ANOP  ,                                                 00152600
.*-------------------------------------------------------------------   00152700
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00152800
&ZXMFCTRL       SETC  'INPUT'     SET IN/OUTPUT                         00152900
&XMFCTRL        SETC  '&MF(2,1)'  SET XVARIABLE                         00153000
                AIF   (N'&MF(2) GT 1).ZG69B     MULTI                   00153100
&XMFCTRL        SETC  '&MF(2)'    SET XVARIABLE                         00153200
.ZG69B          AIF   (K'&MF(2) GT 0).ZG69C                             00153300
&ZXMFCTRL       SETC  ''          RESET IN/OUTPUT                       00153400
&ZMS            SETC  'WHEN "E" IS SPECIFIED'                           00153500
&ZMS            SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'               00153600
                MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                      00153700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00153800
.ZG69C          ANOP  ,                                                 00153900
.*-------------------------------------------------------------------   00154000
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00154100
                AIF   (K'&ZXMFCTRL LE 0).ZG69R  NOT I/O                 00154200
                AIF   ('&XMFCTRL'(1,1) NE '(').ZG69R                    00154300
&ZCGPR          SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                        00154400
                AIF   ('&ZCGPR'(1,1) NE '0').ZG69P                      00154500
                AIF   (K'&ZCGPR GT 2).ZG69Q                             00154600
                AIF   ('&ZCGPR' EQ '0').ZG69Q                           00154700
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00154800
                AIF   (T'&ZCGPR NE 'N').ZG69Q   INVALID REG NAME        00154900
.ZG69P          ANOP  ,                                                 00155000
                AIF   (T'&ZCGPR NE 'N').ZG69R   NON NUMERIC             00155100
                AIF   ('&ZCGPR' LT '1').ZG69Q                           00155200
                AIF   ('&ZCGPR' LE '12').ZG69R                          00155300
.ZG69Q          ANOP  ,                                                 00155400
&ZMS            SETC  '"MF='                                            00155500
&ZMS            SETC  '&ZMS.&MF"'                                       00155600
&ZMS            SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'         00155700
                MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                  00155800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00155900
.ZG69R          ANOP  ,                                                 00156000
.*-------------------------------------------------------------------   00156100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00156200
&XMFSCK         SETC  ''          INITIALIZE XVARIABLE                  00156300
.ZG73A   AIF   ('&MF(3)' NE 'COMPLETE').ZG74A                           00156400
&XMFSCK         SETC  'COMPLETE'  SET KEYWORD                           00156500
.*-------------------------------------------------------------------   00156600
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00156700
.ZG74A          AIF   (K'&XMFSCK GT 0).ZG74C    KEYWORD                 00156800
                AIF   (K'&MF(3) LE 0).ZG74B                             00156900
&ZMS            SETC  '"MF='                                            00157000
&ZMS            SETC  '&ZMS.&MF"'                                       00157100
&ZMS            SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '         00157200
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00157300
&ZMS            SETC  '&ZMS "COMPLETE".'                                00157400
                MNOTE 8,' &ZMS '                                        00157500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00157600
.ZG74B          ANOP  ,                                                 00157700
&XMFSCK         SETC  'COMPLETE'  SET DEFAULT KEYWORD                   00157800
.ZG74C          ANOP  ,                                                 00157900
&ZXMFSCK        SETC  'INPUT'     SET IN/OUTPUT                         00158000
.*------------------------------------------------------------------    00158100
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00158200
.ZG75           ANOP  ,                                                 00158300
&ZXMF           SETC  'INPUT'     SET IN/OUTPUT                         00158400
                AIF   (K'&XMF GT 0).ZG75E       VALID ARG               00158500
                AIF   (T'&MF EQ 'O').ZG75D      OMITTED                 00158600
&ZASYSLNDX      SETA  0                                                 00158700
.ZG75A          ANOP  ,           POSITIONAL MACRO KEY                  00158800
&ZASYSLNDX      SETA  &ZASYSLNDX+1                                      00158900
                AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG75C                  00159000
&ZTLC           SETC 'MF'                                               00159100
                AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG75A         00159200
.ZG75B          ANOP  ,                                                 00159300
&ZXMF           SETC  ''          RESET IN/OUTPUT                       00159400
&ZMS            SETC  'THE "MF" KEY'                                    00159500
&ZMS            SETC  '&ZMS MUST CONTAIN ONE'                           00159600
                MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                  00159700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00159800
                AGO   .ZG75E                                            00159900
.ZG75C          ANOP  ,                                                 00160000
&ZXMF           SETC  ''          RESET IN/OUTPUT                       00160100
&ZMS            SETC  '"MF='                                            00160200
&ZMS            SETC  '&ZMS.&MF"'                                       00160300
&ZMS            SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '         00160400
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00160500
&ZMS            SETC  '&ZMS "S",'                                       00160600
&ZMS            SETC  '&ZMS "L",'                                       00160700
&ZMS            SETC  '&ZMS OR "E".'                                    00160800
                MNOTE 8,' &ZMS '                                        00160900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00161000
                AGO   .ZG75E                                            00161100
.ZG75D          ANOP  ,                                                 00161200
&XMF            SETC  'S'         SET DEFAULT KEYWORD                   00161300
&XMFSCK         SETC  'COMPLETE'  COMPLETE CHECKING                     00161400
.ZG75E          ANOP  ,                                                 00161500
.********************************************************************   00161600
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00161700
.********************************************************************   00161800
                ACTR  10000                                             00161900
.*-------------------------------------------------------------------   00162000
.***AG.MF03 MF=(SLE)                                                    00162100
                AIF   ('&XMF' EQ 'L').ZGMFX                             00162200
.*----------------------------------------------------------------***   00162300
.***AG.KXVAR05 NAME, RQD OUTPUT, KEYS -XVARIABLE KEY                    00162400
                AIF   (N'&DATAAREA LE 1).ZG2A   CK NUM                  00162500
&ZMS            SETC  '"DATAAREA='                                      00162600
&ZMS            SETC  '&ZMS.&DATAAREA"'                                 00162700
&ZMS            SETC  '&ZMS "DATAAREA"'                                 00162800
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00162900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00163000
.ZG2A           ANOP  ,                                                 00163100
.*-------------------------------------------------------------------   00163200
.***AG.KXVAR06 NAME, RQD OUTPUT, KEYS -XVARIABLE                        00163300
&ZXDATAAREA     SETC  'OUTPUT'    SET IN/OUTPUT                         00163400
&XDATAAREA      SETC  '&DATAAREA(1)'            SET XVARIABLE           00163500
                AIF   (N'&DATAAREA GT 1).ZG2B   MULTI                   00163600
&XDATAAREA      SETC  '&DATAAREA'               SET XVARIABLE           00163700
.ZG2B           AIF   (K'&DATAAREA(1) GT 0).ZG2C                        00163800
&ZXDATAAREA     SETC  ''          RESET IN/OUTPUT                       00163900
&ZMS            SETC  ' '                                               00164000
&ZMS            SETC  '&ZMS "DATAAREA" KEY AND ITS'                     00164100
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  00164200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00164300
.ZG2C           ANOP  ,                                                 00164400
.*-------------------------------------------------------------------   00164500
.***AG.KCK02 NAME, RQD OUTPUT, KEYS -GPR OUT OF RANGE                   00164600
                AIF   (K'&ZXDATAAREA LE 0).ZG2R  NOT I/O                00164700
                AIF   ('&XDATAAREA'(1,1) NE '(').ZG2R                   00164800
&ZCGPR          SETC  '&XDATAAREA'(2,K'&XDATAAREA-2)                    00164900
                AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                       00165000
                AIF   (K'&ZCGPR GT 2).ZG2Q                              00165100
                AIF   ('&ZCGPR' EQ '0').ZG2Q                            00165200
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00165300
                AIF   (T'&ZCGPR NE 'N').ZG2Q    INVALID REG NAME        00165400
.ZG2P           ANOP  ,                                                 00165500
                AIF   (T'&ZCGPR NE 'N').ZG2R    NON NUMERIC             00165600
                AIF   ('&ZCGPR' LT '2').ZG2Q                            00165700
                AIF   ('&ZCGPR' LE '12').ZG2R                           00165800
.ZG2Q           ANOP  ,                                                 00165900
&ZMS            SETC  '"DATAAREA='                                      00166000
&ZMS            SETC  '&ZMS.&DATAAREA"'                                 00166100
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00166200
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00166300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00166400
.ZG2R           ANOP  ,                                                 00166500
.*----------------------------------------------------------------***   00166600
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00166700
                AIF   (N'&DATALEN LE 1).ZG5A    CK NUM                  00166800
&ZMS            SETC  '"DATALEN='                                       00166900
&ZMS            SETC  '&ZMS.&DATALEN"'                                  00167000
&ZMS            SETC  '&ZMS "DATALEN"'                                  00167100
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00167200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00167300
.ZG5A           ANOP  ,                                                 00167400
.*-------------------------------------------------------------------   00167500
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00167600
&ZXDATALEN      SETC  'INPUT'     SET IN/OUTPUT                         00167700
&XDATALEN       SETC  '&DATALEN(1)'             SET XVARIABLE           00167800
                AIF   (N'&DATALEN GT 1).ZG5B    MULTI                   00167900
&XDATALEN       SETC  '&DATALEN'  SET XVARIABLE                         00168000
.ZG5B           AIF   (K'&DATALEN(1) GT 0).ZG5C                         00168100
&ZXDATALEN      SETC  ''          RESET IN/OUTPUT                       00168200
&ZMS            SETC  ' '                                               00168300
&ZMS            SETC  '&ZMS "DATALEN" KEY AND ITS'                      00168400
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  00168500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00168600
.ZG5C           ANOP  ,                                                 00168700
.*-------------------------------------------------------------------   00168800
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00168900
                AIF   (K'&ZXDATALEN LE 0).ZG5R  NOT I/O                 00169000
                AIF   ('&XDATALEN'(1,1) NE '(').ZG5R                    00169100
&ZCGPR          SETC  '&XDATALEN'(2,K'&XDATALEN-2)                      00169200
                AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                       00169300
                AIF   (K'&ZCGPR GT 2).ZG5Q                              00169400
                AIF   ('&ZCGPR' EQ '0').ZG5Q                            00169500
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00169600
                AIF   (T'&ZCGPR NE 'N').ZG5Q    INVALID REG NAME        00169700
.ZG5P           ANOP  ,                                                 00169800
                AIF   (T'&ZCGPR NE 'N').ZG5R    NON NUMERIC             00169900
                AIF   ('&ZCGPR' LT '2').ZG5Q                            00170000
                AIF   ('&ZCGPR' LE '12').ZG5R                           00170100
.ZG5Q           ANOP  ,                                                 00170200
&ZMS            SETC  '"DATALEN='                                       00170300
&ZMS            SETC  '&ZMS.&DATALEN"'                                  00170400
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00170500
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00170600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00170700
.ZG5R           ANOP  ,                                                 00170800
.*-------------------------------------------------------------------   00170900
.***AG.KKWRD07 VALUE, OPT INPUT, ME KEYWORD -MULTIPLE KEYWORDS          00171000
&ZI             SETA  0           XVARIABLE ARRAY INDEX                 00171100
&ZJ             SETA  0           SUBLIST INDEX                         00171200
.ZG8A           ANOP  ,                                                 00171300
&ZJ             SETA  &ZJ+1       NEXT SUBLIST                          00171400
                AIF   (&ZJ GT N'&TYPE).ZG8C     DONE                    00171500
                AIF   (K'&TYPE(&ZJ) LE 0).ZG8A  NULL                    00171600
&ZI             SETA  &ZI+1       NEXT ARRAY ENTRY                      00171700
&XTYPE(&ZI)   SETC  ''            NULL ENTRY                            00171800
&XTYPE(&ZI+1) SETC  ''            NULL AT ARRAY END                     00171900
.ZG9B  AIF   ('&TYPE(&ZJ)' NE 'ALL').ZG10B                              00172000
&XTYPE(&ZI)   SETC  'ALL'         SET KEYWORD                           00172100
.ZG10B  AIF   ('&TYPE(&ZJ)' NE 'PATH').ZG11B                            00172200
&XTYPE(&ZI)   SETC  'PATH'        SET KEYWORD                           00172300
.ZG11B  AIF   ('&TYPE(&ZJ)' NE 'MSGPEND').ZG12B                         00172400
&XTYPE(&ZI)   SETC  'MSGPEND'     SET KEYWORD                           00172500
.ZG12B  AIF   ('&TYPE(&ZJ)' NE 'SYSTEM').ZG13B                          00172600
&XTYPE(&ZI)   SETC  'SYSTEM'      SET KEYWORD                           00172700
.ZG13B  AIF   ('&TYPE(&ZJ)' NE 'SRCDST').ZG14B                          00172800
&XTYPE(&ZI)   SETC  'SRCDST'      SET KEYWORD                           00172900
.ZG14B  AIF   ('&TYPE(&ZJ)' NE 'MEMBER').ZG15B                          00173000
&XTYPE(&ZI)   SETC  'MEMBER'      SET KEYWORD                           00173100
.ZG15B          AIF   ('&XTYPE(&ZI)' NE '').ZG8A                        00173200
&ZI             SETA  &ZI-1       BACKUP ARRAY                          00173300
&ZMS            SETC  '"TYPE='                                          00173400
&ZMS            SETC  '&ZMS.&TYPE"'                                     00173500
&ZMS            SETC  '&ZMS ARGUMENT &ZJ'                               00173600
&ZMS            SETC  '&ZMS IS AN UNKNOWN KEYWORD. '                    00173700
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00173800
&ZMS            SETC  '&ZMS "ALL",'                                     00173900
&ZMS            SETC  '&ZMS "PATH",'                                    00174000
&ZMS            SETC  '&ZMS "MSGPEND",'                                 00174100
&ZMS            SETC  '&ZMS "SYSTEM",'                                  00174200
&ZMS            SETC  '&ZMS "SRCDST",'                                  00174300
&ZMS            SETC  '&ZMS OR "MEMBER".'                               00174400
                MNOTE 8,' &ZMS '                                        00174500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00174600
                AGO   .ZG8A                                             00174700
.*-------------------------------------------------------------------   00174800
.***AG.KKWRD08 VALUE, OPT INPUT, ME KEYWORD -MULTIPLE KEYWORDS          00174900
.ZG8C           ANOP  ,                                                 00175000
&ZXTYPE         SETC  'INPUT'     SET IN/OUTPUT                         00175100
                AIF   (&ZI GT 0).ZG8D           VALID KEYWORD           00175200
&XTYPE(1)  SETC  'ALL'            SET DEFAULT KEYWORD                   00175300
&XTYPE(2)  SETC  ''               NULL AT ARRAY END                     00175400
.ZG8D           ANOP  ,                                                 00175500
.*----------------------------------------------------------------***   00175600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00175700
                AIF   (N'&MEMTOKEN LE 1).ZG17A  CK NUM                  00175800
&ZMS            SETC  '"MEMTOKEN='                                      00175900
&ZMS            SETC  '&ZMS.&MEMTOKEN"'                                 00176000
&ZMS            SETC  '&ZMS "MEMTOKEN"'                                 00176100
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00176200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00176300
.ZG17A          ANOP  ,                                                 00176400
.*-------------------------------------------------------------------   00176500
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00176600
&ZXMEMTOKEN     SETC  'INPUT'     SET IN/OUTPUT                         00176700
&XMEMTOKEN      SETC  '0'                                               00176800
                AIF   (K'&MEMTOKEN(1) LE 0).ZG17B  PARM                 00176900
&XMEMTOKEN      SETC  '&MEMTOKEN(1)'            SET XVARIABLE           00177000
                AIF   (N'&MEMTOKEN GT 1).ZG17B  MULTI                   00177100
&XMEMTOKEN      SETC  '&MEMTOKEN'               SET XVARIABLE           00177200
.ZG17B          ANOP  ,                                                 00177300
.*-------------------------------------------------------------------   00177400
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00177500
                AIF   (K'&ZXMEMTOKEN LE 0).ZG17R  NOT I/O               00177600
                AIF   ('&XMEMTOKEN'(1,1) NE '(').ZG17R                  00177700
&ZCGPR          SETC  '&XMEMTOKEN'(2,K'&XMEMTOKEN-2)                    00177800
                AIF   ('&ZCGPR'(1,1) NE '0').ZG17P                      00177900
                AIF   (K'&ZCGPR GT 2).ZG17Q                             00178000
                AIF   ('&ZCGPR' EQ '0').ZG17Q                           00178100
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00178200
                AIF   (T'&ZCGPR NE 'N').ZG17Q   INVALID REG NAME        00178300
.ZG17P          ANOP  ,                                                 00178400
                AIF   (T'&ZCGPR NE 'N').ZG17R   NON NUMERIC             00178500
                AIF   ('&ZCGPR' LT '2').ZG17Q                           00178600
                AIF   ('&ZCGPR' LE '12').ZG17R                          00178700
.ZG17Q          ANOP  ,                                                 00178800
&ZMS            SETC  '"MEMTOKEN='                                      00178900
&ZMS            SETC  '&ZMS.&MEMTOKEN"'                                 00179000
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00179100
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00179200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00179300
.ZG17R          ANOP  ,                                                 00179400
.*------------------------------------------------------------------    00179500
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00179600
&XGROUP         SETC  ''          INITIALIZE XVARIABLE                  00179700
.*-------------------------------------------------------------------   00179800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00179900
.ZG20           ANOP  ,                                                 00180000
                AIF   (K'&GROUP(1) LE 0).ZG20A                          00180100
&ZTLC           SETC 'NO'                                               00180200
                AIF   ('&GROUP(1)' NE '&ZTLC').ZG21                     00180300
&XGROUP         SETC  'NO'        SET KEYWORD                           00180400
                AIF   (N'&GROUP LE 1).ZG20A     CK NUM                  00180500
&ZMS            SETC  '"GROUP='                                         00180600
&ZMS            SETC  '&ZMS.&GROUP"'                                    00180700
&ZMS            SETC  '&ZMS "GROUP"'                                    00180800
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00180900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00181000
.ZG20A          ANOP  ,                                                 00181100
.*-------------------------------------------------------------------   00181200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00181300
.ZG21           ANOP  ,                                                 00181400
&ZTLC           SETC 'YES'                                              00181500
                AIF   ('&GROUP(1)' NE '&ZTLC').ZG22                     00181600
&XGROUP         SETC  'YES'       SET KEYWORD                           00181700
                AIF   (N'&GROUP LE 1).ZG21A     CK NUM                  00181800
&ZMS            SETC  '"GROUP='                                         00181900
&ZMS            SETC  '&ZMS.&GROUP"'                                    00182000
&ZMS            SETC  '&ZMS "GROUP"'                                    00182100
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00182200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00182300
.ZG21A          ANOP  ,                                                 00182400
.*------------------------------------------------------------------    00182500
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00182600
.ZG22           ANOP  ,                                                 00182700
&ZXGROUP        SETC  'INPUT'     SET IN/OUTPUT                         00182800
                AIF   (K'&XGROUP GT 0).ZG22E    VALID ARG               00182900
                AIF   (T'&GROUP EQ 'O').ZG22D   OMITTED                 00183000
&ZASYSLNDX      SETA  0                                                 00183100
.ZG22A          ANOP  ,           POSITIONAL MACRO KEY                  00183200
&ZASYSLNDX      SETA  &ZASYSLNDX+1                                      00183300
                AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG22C                  00183400
&ZTLC           SETC 'GROUP'                                            00183500
                AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG22A         00183600
.ZG22B          ANOP  ,                                                 00183700
&ZXGROUP        SETC  ''          RESET IN/OUTPUT                       00183800
&ZMS            SETC  'THE "GROUP" KEY'                                 00183900
&ZMS            SETC  '&ZMS MUST CONTAIN ONE'                           00184000
                MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                  00184100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00184200
                AGO   .ZG22E                                            00184300
.ZG22C          ANOP  ,                                                 00184400
&ZXGROUP        SETC  ''          RESET IN/OUTPUT                       00184500
&ZMS            SETC  '"GROUP='                                         00184600
&ZMS            SETC  '&ZMS.&GROUP"'                                    00184700
&ZMS            SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '         00184800
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00184900
&ZMS            SETC  '&ZMS "NO"'                                       00185000
&ZMS            SETC  '&ZMS OR "YES".'                                  00185100
                MNOTE 8,' &ZMS '                                        00185200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00185300
                AGO   .ZG22E                                            00185400
.ZG22D          ANOP  ,                                                 00185500
&XGROUP         SETC  'NO'        SET DEFAULT KEYWORD                   00185600
.ZG22E          ANOP  ,                                                 00185700
.*------------------------------------------------------------------    00185800
.***AG.KKCTL07 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00185900
                AIF   (K'&MEMTOKEN(1) GT 0).ZG22F  KEY                  00186000
                AIF   (K'&GROUP(1) LE 0).ZG22F  PARM                    00186100
&ZMS            SETC  '"GROUP'                                          00186200
&ZMS            SETC  '&ZMS.=&GROUP"'                                   00186300
&ZMS            SETC  '&ZMS CAN ONLY BE SPECIFIED IF'                   00186400
&ZMS            SETC  '&ZMS '                                           00186500
&ZMS            SETC  '&ZMS "MEMTOKEN"'                                 00186600
                MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                      00186700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00186800
.ZG22F          ANOP  ,                                                 00186900
.*----------------------------------------------------------------***   00187000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00187100
                AIF   (N'&CLASSNAME LE 1).ZG25A  CK NUM                 00187200
&ZMS            SETC  '"CLASSNAME='                                     00187300
&ZMS            SETC  '&ZMS.&CLASSNAME"'                                00187400
&ZMS            SETC  '&ZMS "CLASSNAME"'                                00187500
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00187600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00187700
.ZG25A          ANOP  ,                                                 00187800
.*-------------------------------------------------------------------   00187900
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00188000
&ZXCLASSNAME    SETC  'INPUT'     SET IN/OUTPUT                         00188100
&XCLASSNAME     SETC  '0'                                               00188200
                AIF   (K'&CLASSNAME(1) LE 0).ZG25B  PARM                00188300
&XCLASSNAME     SETC  '&CLASSNAME(1)'           SET XVARIABLE           00188400
                AIF   (N'&CLASSNAME GT 1).ZG25B  MULTI                  00188500
&XCLASSNAME     SETC  '&CLASSNAME'              SET XVARIABLE           00188600
.ZG25B          ANOP  ,                                                 00188700
.*-------------------------------------------------------------------   00188800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00188900
                AIF   (K'&ZXCLASSNAME LE 0).ZG25R  NOT I/O              00189000
                AIF   ('&XCLASSNAME'(1,1) NE '(').ZG25R                 00189100
&ZCGPR          SETC  '&XCLASSNAME'(2,K'&XCLASSNAME-2)                  00189200
                AIF   ('&ZCGPR'(1,1) NE '0').ZG25P                      00189300
                AIF   (K'&ZCGPR GT 2).ZG25Q                             00189400
                AIF   ('&ZCGPR' EQ '0').ZG25Q                           00189500
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00189600
                AIF   (T'&ZCGPR NE 'N').ZG25Q   INVALID REG NAME        00189700
.ZG25P          ANOP  ,                                                 00189800
                AIF   (T'&ZCGPR NE 'N').ZG25R   NON NUMERIC             00189900
                AIF   ('&ZCGPR' LT '2').ZG25Q                           00190000
                AIF   ('&ZCGPR' LE '12').ZG25R                          00190100
.ZG25Q          ANOP  ,                                                 00190200
&ZMS            SETC  '"CLASSNAME='                                     00190300
&ZMS            SETC  '&ZMS.&CLASSNAME"'                                00190400
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00190500
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00190600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00190700
.ZG25R          ANOP  ,                                                 00190800
.*------------------------------------------------------------------    00190900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00191000
&XGATHERFROM    SETC  ''          INITIALIZE XVARIABLE                  00191100
.*-------------------------------------------------------------------   00191200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00191300
.ZG29           ANOP  ,                                                 00191400
                AIF   (K'&GATHERFROM(1) LE 0).ZG29A                     00191500
&ZTLC           SETC 'LOCAL'                                            00191600
                AIF   ('&GATHERFROM(1)' NE '&ZTLC').ZG30                00191700
&XGATHERFROM    SETC  'LOCAL'     SET KEYWORD                           00191800
                AIF   (N'&GATHERFROM LE 1).ZG29A  CK NUM                00191900
&ZMS            SETC  '"GATHERFROM='                                    00192000
&ZMS            SETC  '&ZMS.&GATHERFROM"'                               00192100
&ZMS            SETC  '&ZMS "GATHERFROM"'                               00192200
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00192300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00192400
.ZG29A          ANOP  ,                                                 00192500
.*------------------------------------------------------------------    00192600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00192700
&ZCVAL          SETC ''           CLEAR ERROR KEY ACCUMULATOR           00192800
.ZG29A0         AIF   (K'&SYSID LE 0).ZG29A1    OK                      00192900
&ZCVAL          SETC '&ZCVAL SYSID'             INCORRECT KEY USED      00193000
.ZG29A1         AIF   (K'&TIMEOUT LE 0).ZG29A2  OK                      00193100
&ZCVAL          SETC '&ZCVAL TIMEOUT'           INCORRECT KEY USED      00193200
.ZG29A2         AIF   (K'&ECBPTR LE 0).ZG29A3   OK                      00193300
&ZCVAL          SETC '&ZCVAL ECBPTR'            INCORRECT KEY USED      00193400
.ZG29A3         AIF   (K'&REQTOKEN LE 0).ZG29A4  OK                     00193500
&ZCVAL          SETC '&ZCVAL REQTOKEN'          INCORRECT KEY USED      00193600
.ZG29A4         AIF   (K'&ZCVAL LE 0).ZG29A5    OK                      00193700
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)                             00193800
&ZMS            SETC  '"GATHERFROM'                                     00193900
&ZMS            SETC  '&ZMS.=&GATHERFROM"'                              00194000
&ZMS            SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'              00194100
                MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'              00194200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00194300
.ZG29A5         ANOP  ,                                                 00194400
.*-------------------------------------------------------------------   00194500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00194600
.ZG30           ANOP  ,                                                 00194700
&ZTLC           SETC 'OTHER'                                            00194800
                AIF   ('&GATHERFROM(1)' NE '&ZTLC').ZG40                00194900
&XGATHERFROM    SETC  'OTHER'     SET KEYWORD                           00195000
                AIF   (N'&GATHERFROM LE 1).ZG30A  CK NUM                00195100
&ZMS            SETC  '"GATHERFROM='                                    00195200
&ZMS            SETC  '&ZMS.&GATHERFROM"'                               00195300
&ZMS            SETC  '&ZMS "GATHERFROM"'                               00195400
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00195500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00195600
.ZG30A          ANOP  ,                                                 00195700
.*------------------------------------------------------------------    00195800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00195900
&ZCVAL          SETC ''           CLEAR ERROR KEY ACCUMULATOR           00196000
.ZG30A0         AIF   (K'&REQTOKEN LE 0).ZG30A1  OK                     00196100
&ZCVAL          SETC '&ZCVAL REQTOKEN'          INCORRECT KEY USED      00196200
.ZG30A1         AIF   (K'&ZCVAL LE 0).ZG30A2    OK                      00196300
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)                             00196400
&ZMS            SETC  '"GATHERFROM'                                     00196500
&ZMS            SETC  '&ZMS.=&GATHERFROM"'                              00196600
&ZMS            SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'              00196700
                MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'              00196800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00196900
.ZG30A2         ANOP  ,                                                 00197000
.*----------------------------------------------------------------***   00197100
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00197200
                AIF   (N'&SYSID LE 1).ZG32A     CK NUM                  00197300
&ZMS            SETC  '"SYSID='                                         00197400
&ZMS            SETC  '&ZMS.&SYSID"'                                    00197500
&ZMS            SETC  '&ZMS "SYSID"'                                    00197600
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00197700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00197800
.ZG32A          ANOP  ,                                                 00197900
.*-------------------------------------------------------------------   00198000
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00198100
&ZXSYSID        SETC  'INPUT'     SET IN/OUTPUT                         00198200
&XSYSID         SETC  '&SYSID(1)'               SET XVARIABLE           00198300
                AIF   (N'&SYSID GT 1).ZG32B     MULTI                   00198400
&XSYSID         SETC  '&SYSID'    SET XVARIABLE                         00198500
.ZG32B          AIF   (K'&SYSID(1) GT 0).ZG32C                          00198600
&ZXSYSID        SETC  ''          RESET IN/OUTPUT                       00198700
&ZMS            SETC  'WHEN "OTHER" IS SPECIFIED'                       00198800
&ZMS            SETC  '&ZMS , "SYSID" KEY AND ITS'                      00198900
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  00199000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00199100
.ZG32C          ANOP  ,                                                 00199200
.*-------------------------------------------------------------------   00199300
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00199400
                AIF   (K'&ZXSYSID LE 0).ZG32R   NOT I/O                 00199500
                AIF   ('&XSYSID'(1,1) NE '(').ZG32R                     00199600
&ZCGPR          SETC  '&XSYSID'(2,K'&XSYSID-2)                          00199700
                AIF   ('&ZCGPR'(1,1) NE '0').ZG32P                      00199800
                AIF   (K'&ZCGPR GT 2).ZG32Q                             00199900
                AIF   ('&ZCGPR' EQ '0').ZG32Q                           00200000
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00200100
                AIF   (T'&ZCGPR NE 'N').ZG32Q   INVALID REG NAME        00200200
.ZG32P          ANOP  ,                                                 00200300
                AIF   (T'&ZCGPR NE 'N').ZG32R   NON NUMERIC             00200400
                AIF   ('&ZCGPR' LT '2').ZG32Q                           00200500
                AIF   ('&ZCGPR' LE '12').ZG32R                          00200600
.ZG32Q          ANOP  ,                                                 00200700
&ZMS            SETC  '"SYSID='                                         00200800
&ZMS            SETC  '&ZMS.&SYSID"'                                    00200900
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00201000
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00201100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00201200
.ZG32R          ANOP  ,                                                 00201300
.*----------------------------------------------------------------***   00201400
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00201500
                AIF   (N'&TIMEOUT LE 1).ZG35A   CK NUM                  00201600
&ZMS            SETC  '"TIMEOUT='                                       00201700
&ZMS            SETC  '&ZMS.&TIMEOUT"'                                  00201800
&ZMS            SETC  '&ZMS "TIMEOUT"'                                  00201900
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00202000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00202100
.ZG35A          ANOP  ,                                                 00202200
.*-------------------------------------------------------------------   00202300
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00202400
&ZXTIMEOUT      SETC  'INPUT'     SET IN/OUTPUT                         00202500
&XTIMEOUT       SETC  '&TIMEOUT(1)'             SET XVARIABLE           00202600
                AIF   (N'&TIMEOUT GT 1).ZG35B   MULTI                   00202700
&XTIMEOUT       SETC  '&TIMEOUT'  SET XVARIABLE                         00202800
.ZG35B          AIF   (K'&TIMEOUT(1) GT 0).ZG35C                        00202900
&ZXTIMEOUT      SETC  ''          RESET IN/OUTPUT                       00203000
&ZMS            SETC  'WHEN "OTHER" IS SPECIFIED'                       00203100
&ZMS            SETC  '&ZMS , "TIMEOUT" KEY AND ITS'                    00203200
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  00203300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00203400
.ZG35C          ANOP  ,                                                 00203500
.*-------------------------------------------------------------------   00203600
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00203700
                AIF   (K'&ZXTIMEOUT LE 0).ZG35R  NOT I/O                00203800
                AIF   ('&XTIMEOUT'(1,1) NE '(').ZG35R                   00203900
&ZCGPR          SETC  '&XTIMEOUT'(2,K'&XTIMEOUT-2)                      00204000
                AIF   ('&ZCGPR'(1,1) NE '0').ZG35P                      00204100
                AIF   (K'&ZCGPR GT 2).ZG35Q                             00204200
                AIF   ('&ZCGPR' EQ '0').ZG35Q                           00204300
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00204400
                AIF   (T'&ZCGPR NE 'N').ZG35Q   INVALID REG NAME        00204500
.ZG35P          ANOP  ,                                                 00204600
                AIF   (T'&ZCGPR NE 'N').ZG35R   NON NUMERIC             00204700
                AIF   ('&ZCGPR' LT '2').ZG35Q                           00204800
                AIF   ('&ZCGPR' LE '12').ZG35R                          00204900
.ZG35Q          ANOP  ,                                                 00205000
&ZMS            SETC  '"TIMEOUT='                                       00205100
&ZMS            SETC  '&ZMS.&TIMEOUT"'                                  00205200
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00205300
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00205400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00205500
.ZG35R          ANOP  ,                                                 00205600
.*----------------------------------------------------------------***   00205700
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00205800
                AIF   (N'&ECBPTR LE 1).ZG38A    CK NUM                  00205900
&ZMS            SETC  '"ECBPTR='                                        00206000
&ZMS            SETC  '&ZMS.&ECBPTR"'                                   00206100
&ZMS            SETC  '&ZMS "ECBPTR"'                                   00206200
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00206300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00206400
.ZG38A          ANOP  ,                                                 00206500
.*-------------------------------------------------------------------   00206600
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00206700
&ZXECBPTR       SETC  'INPUT'     SET IN/OUTPUT                         00206800
&XECBPTR        SETC  'NONE'                                            00206900
                AIF   (K'&ECBPTR(1) LE 0).ZG38B  PARM                   00207000
&XECBPTR        SETC  '&ECBPTR(1)'              SET XVARIABLE           00207100
                AIF   (N'&ECBPTR GT 1).ZG38B    MULTI                   00207200
&XECBPTR        SETC  '&ECBPTR'   SET XVARIABLE                         00207300
.ZG38B          ANOP  ,                                                 00207400
.*-------------------------------------------------------------------   00207500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00207600
                AIF   (K'&ZXECBPTR LE 0).ZG38R  NOT I/O                 00207700
         AIF   ('&XECBPTR' EQ 'NONE').ZG38R                             00207800
                AIF   ('&XECBPTR'(1,1) NE '(').ZG38R                    00207900
&ZCGPR          SETC  '&XECBPTR'(2,K'&XECBPTR-2)                        00208000
                AIF   ('&ZCGPR'(1,1) NE '0').ZG38P                      00208100
                AIF   (K'&ZCGPR GT 2).ZG38Q                             00208200
                AIF   ('&ZCGPR' EQ '0').ZG38Q                           00208300
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00208400
                AIF   (T'&ZCGPR NE 'N').ZG38Q   INVALID REG NAME        00208500
.ZG38P          ANOP  ,                                                 00208600
                AIF   (T'&ZCGPR NE 'N').ZG38R   NON NUMERIC             00208700
                AIF   ('&ZCGPR' LT '2').ZG38Q                           00208800
                AIF   ('&ZCGPR' LE '12').ZG38R                          00208900
.ZG38Q          ANOP  ,                                                 00209000
&ZMS            SETC  '"ECBPTR='                                        00209100
&ZMS            SETC  '&ZMS.&ECBPTR"'                                   00209200
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00209300
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00209400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00209500
.ZG38R          ANOP  ,                                                 00209600
.*-------------------------------------------------------------------   00209700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00209800
.ZG40           ANOP  ,                                                 00209900
&ZTLC           SETC 'TOKEN'                                            00210000
                AIF   ('&GATHERFROM(1)' NE '&ZTLC').ZG44                00210100
&XGATHERFROM    SETC  'TOKEN'     SET KEYWORD                           00210200
                AIF   (N'&GATHERFROM LE 1).ZG40A  CK NUM                00210300
&ZMS            SETC  '"GATHERFROM='                                    00210400
&ZMS            SETC  '&ZMS.&GATHERFROM"'                               00210500
&ZMS            SETC  '&ZMS "GATHERFROM"'                               00210600
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00210700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00210800
.ZG40A          ANOP  ,                                                 00210900
.*------------------------------------------------------------------    00211000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00211100
&ZCVAL          SETC ''           CLEAR ERROR KEY ACCUMULATOR           00211200
.ZG40A0         AIF   (K'&SYSID LE 0).ZG40A1    OK                      00211300
&ZCVAL          SETC '&ZCVAL SYSID'             INCORRECT KEY USED      00211400
.ZG40A1         AIF   (K'&TIMEOUT LE 0).ZG40A2  OK                      00211500
&ZCVAL          SETC '&ZCVAL TIMEOUT'           INCORRECT KEY USED      00211600
.ZG40A2         AIF   (K'&ECBPTR LE 0).ZG40A3   OK                      00211700
&ZCVAL          SETC '&ZCVAL ECBPTR'            INCORRECT KEY USED      00211800
.ZG40A3         AIF   (K'&ZCVAL LE 0).ZG40A4    OK                      00211900
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)                             00212000
&ZMS            SETC  '"GATHERFROM'                                     00212100
&ZMS            SETC  '&ZMS.=&GATHERFROM"'                              00212200
&ZMS            SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'              00212300
                MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'              00212400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00212500
.ZG40A4         ANOP  ,                                                 00212600
.*----------------------------------------------------------------***   00212700
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00212800
                AIF   (N'&REQTOKEN LE 1).ZG42A  CK NUM                  00212900
&ZMS            SETC  '"REQTOKEN='                                      00213000
&ZMS            SETC  '&ZMS.&REQTOKEN"'                                 00213100
&ZMS            SETC  '&ZMS "REQTOKEN"'                                 00213200
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00213300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00213400
.ZG42A          ANOP  ,                                                 00213500
.*-------------------------------------------------------------------   00213600
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00213700
&ZXREQTOKEN     SETC  'INPUT'     SET IN/OUTPUT                         00213800
&XREQTOKEN      SETC  '&REQTOKEN(1)'            SET XVARIABLE           00213900
                AIF   (N'&REQTOKEN GT 1).ZG42B  MULTI                   00214000
&XREQTOKEN      SETC  '&REQTOKEN'               SET XVARIABLE           00214100
.ZG42B          AIF   (K'&REQTOKEN(1) GT 0).ZG42C                       00214200
&ZXREQTOKEN     SETC  ''          RESET IN/OUTPUT                       00214300
&ZMS            SETC  'WHEN "TOKEN" IS SPECIFIED'                       00214400
&ZMS            SETC  '&ZMS , "REQTOKEN" KEY AND ITS'                   00214500
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  00214600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00214700
.ZG42C          ANOP  ,                                                 00214800
.*-------------------------------------------------------------------   00214900
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00215000
                AIF   (K'&ZXREQTOKEN LE 0).ZG42R  NOT I/O               00215100
                AIF   ('&XREQTOKEN'(1,1) NE '(').ZG42R                  00215200
&ZCGPR          SETC  '&XREQTOKEN'(2,K'&XREQTOKEN-2)                    00215300
                AIF   ('&ZCGPR'(1,1) NE '0').ZG42P                      00215400
                AIF   (K'&ZCGPR GT 2).ZG42Q                             00215500
                AIF   ('&ZCGPR' EQ '0').ZG42Q                           00215600
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00215700
                AIF   (T'&ZCGPR NE 'N').ZG42Q   INVALID REG NAME        00215800
.ZG42P          ANOP  ,                                                 00215900
                AIF   (T'&ZCGPR NE 'N').ZG42R   NON NUMERIC             00216000
                AIF   ('&ZCGPR' LT '2').ZG42Q                           00216100
                AIF   ('&ZCGPR' LE '12').ZG42R                          00216200
.ZG42Q          ANOP  ,                                                 00216300
&ZMS            SETC  '"REQTOKEN='                                      00216400
&ZMS            SETC  '&ZMS.&REQTOKEN"'                                 00216500
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00216600
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00216700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00216800
.ZG42R          ANOP  ,                                                 00216900
.*------------------------------------------------------------------    00217000
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00217100
.ZG44           ANOP  ,                                                 00217200
&ZXGATHERFROM   SETC  'INPUT'     SET IN/OUTPUT                         00217300
                AIF   (K'&XGATHERFROM GT 0).ZG44E  VALID ARG            00217400
                AIF   (T'&GATHERFROM EQ 'O').ZG44D  OMITTED             00217500
&ZASYSLNDX      SETA  0                                                 00217600
.ZG44A          ANOP  ,           POSITIONAL MACRO KEY                  00217700
&ZASYSLNDX      SETA  &ZASYSLNDX+1                                      00217800
                AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG44C                  00217900
&ZTLC           SETC 'GATHERFROM'                                       00218000
                AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG44A         00218100
.ZG44B          ANOP  ,                                                 00218200
&ZXGATHERFROM   SETC  ''          RESET IN/OUTPUT                       00218300
&ZMS            SETC  'THE "GATHERFROM" KEY'                            00218400
&ZMS            SETC  '&ZMS MUST CONTAIN ONE'                           00218500
                MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                  00218600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00218700
                AGO   .ZG44E                                            00218800
.ZG44C          ANOP  ,                                                 00218900
&ZXGATHERFROM   SETC  ''          RESET IN/OUTPUT                       00219000
&ZMS            SETC  '"GATHERFROM='                                    00219100
&ZMS            SETC  '&ZMS.&GATHERFROM"'                               00219200
&ZMS            SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '         00219300
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00219400
&ZMS            SETC  '&ZMS "LOCAL",'                                   00219500
&ZMS            SETC  '&ZMS "OTHER",'                                   00219600
&ZMS            SETC  '&ZMS OR "TOKEN".'                                00219700
                MNOTE 8,' &ZMS '                                        00219800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00219900
                AGO   .ZG44E                                            00220000
.ZG44D          ANOP  ,                                                 00220100
&XGATHERFROM    SETC  'LOCAL'     SET DEFAULT KEYWORD                   00220200
.ZG44E          ANOP  ,                                                 00220300
.*----------------------------------------------------------------***   00220400
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00220500
                AIF   (N'&AMDALEVEL LE 1).ZG46A  CK NUM                 00220600
&ZMS            SETC  '"AMDALEVEL='                                     00220700
&ZMS            SETC  '&ZMS.&AMDALEVEL"'                                00220800
&ZMS            SETC  '&ZMS "AMDALEVEL"'                                00220900
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00221000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00221100
.ZG46A          ANOP  ,                                                 00221200
.*-------------------------------------------------------------------   00221300
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00221400
&ZXAMDALEVEL    SETC  'INPUT'     SET IN/OUTPUT                         00221500
&XAMDALEVEL     SETC  '0'                                               00221600
                AIF   (K'&AMDALEVEL(1) LE 0).ZG46B  PARM                00221700
&XAMDALEVEL     SETC  '&AMDALEVEL(1)'           SET XVARIABLE           00221800
                AIF   (N'&AMDALEVEL GT 1).ZG46B  MULTI                  00221900
&XAMDALEVEL     SETC  '&AMDALEVEL'              SET XVARIABLE           00222000
.ZG46B          ANOP  ,                                                 00222100
.*-------------------------------------------------------------------   00222200
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00222300
                AIF   (K'&ZXAMDALEVEL LE 0).ZG46R  NOT I/O              00222400
                AIF   ('&XAMDALEVEL'(1,1) NE '(').ZG46R                 00222500
&ZCGPR          SETC  '&XAMDALEVEL'(2,K'&XAMDALEVEL-2)                  00222600
                AIF   ('&ZCGPR'(1,1) NE '0').ZG46P                      00222700
                AIF   (K'&ZCGPR GT 2).ZG46Q                             00222800
                AIF   ('&ZCGPR' EQ '0').ZG46Q                           00222900
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00223000
                AIF   (T'&ZCGPR NE 'N').ZG46Q   INVALID REG NAME        00223100
.ZG46P          ANOP  ,                                                 00223200
                AIF   (T'&ZCGPR NE 'N').ZG46R   NON NUMERIC             00223300
                AIF   ('&ZCGPR' LT '2').ZG46Q                           00223400
                AIF   ('&ZCGPR' LE '12').ZG46R                          00223500
.ZG46Q          ANOP  ,                                                 00223600
&ZMS            SETC  '"AMDALEVEL='                                     00223700
&ZMS            SETC  '&ZMS.&AMDALEVEL"'                                00223800
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00223900
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00224000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00224100
.ZG46R          ANOP  ,                                                 00224200
.*----------------------------------------------------------------***   00224300
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00224400
                AIF   (N'&RETCODE LE 1).ZG49A   CK NUM                  00224500
&ZMS            SETC  '"RETCODE='                                       00224600
&ZMS            SETC  '&ZMS.&RETCODE"'                                  00224700
&ZMS            SETC  '&ZMS "RETCODE"'                                  00224800
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00224900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00225000
.ZG49A          ANOP  ,                                                 00225100
.*-------------------------------------------------------------------   00225200
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00225300
                AIF   (K'&RETCODE(1) LE 0).ZG49C  NO PARM               00225400
&ZXRETCODE      SETC  'OUTPUT'    SET OUTPUT                            00225500
&XRETCODE       SETC  '&RETCODE(1)'             SET XVARIABLE           00225600
                AIF   (N'&RETCODE GT 1).ZG49C                           00225700
&XRETCODE       SETC  '&RETCODE'  SET XVARIABLE                         00225800
.ZG49C          ANOP  ,                                                 00225900
.*-------------------------------------------------------------------   00226000
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00226100
                AIF   (K'&ZXRETCODE LE 0).ZG49R  NOT I/O                00226200
                AIF   ('&XRETCODE'(1,1) NE '(').ZG49R                   00226300
&ZCGPR          SETC  '&XRETCODE'(2,K'&XRETCODE-2)                      00226400
                AIF   ('&ZCGPR'(1,1) NE '0').ZG49P                      00226500
                AIF   (K'&ZCGPR GT 2).ZG49Q                             00226600
                AIF   ('&ZCGPR' EQ '0').ZG49Q                           00226700
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00226800
                AIF   (T'&ZCGPR NE 'N').ZG49Q   INVALID REG NAME        00226900
.ZG49P          ANOP  ,                                                 00227000
                AIF   (T'&ZCGPR NE 'N').ZG49R   NON NUMERIC             00227100
                AIF   ('&ZCGPR' EQ '15').ZG49R                          00227200
                AIF   ('&ZCGPR' LT '2').ZG49Q                           00227300
                AIF   ('&ZCGPR' LE '12').ZG49R                          00227400
.ZG49Q          ANOP  ,                                                 00227500
&ZMS            SETC  '"RETCODE='                                       00227600
&ZMS            SETC  '&ZMS.&RETCODE"'                                  00227700
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00227800
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12) OR (15).'          00227900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00228000
.ZG49R          ANOP  ,                                                 00228100
.*----------------------------------------------------------------***   00228200
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00228300
                AIF   (N'&RSNCODE LE 1).ZG52A   CK NUM                  00228400
&ZMS            SETC  '"RSNCODE='                                       00228500
&ZMS            SETC  '&ZMS.&RSNCODE"'                                  00228600
&ZMS            SETC  '&ZMS "RSNCODE"'                                  00228700
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00228800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00228900
.ZG52A          ANOP  ,                                                 00229000
.*-------------------------------------------------------------------   00229100
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00229200
                AIF   (K'&RSNCODE(1) LE 0).ZG52C  NO PARM               00229300
&ZXRSNCODE      SETC  'OUTPUT'    SET OUTPUT                            00229400
&XRSNCODE       SETC  '&RSNCODE(1)'             SET XVARIABLE           00229500
                AIF   (N'&RSNCODE GT 1).ZG52C                           00229600
&XRSNCODE       SETC  '&RSNCODE'  SET XVARIABLE                         00229700
.ZG52C          ANOP  ,                                                 00229800
.*-------------------------------------------------------------------   00229900
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00230000
                AIF   (K'&ZXRSNCODE LE 0).ZG52R  NOT I/O                00230100
                AIF   ('&XRSNCODE'(1,1) NE '(').ZG52R                   00230200
&ZCGPR          SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                      00230300
                AIF   ('&ZCGPR'(1,1) NE '0').ZG52P                      00230400
                AIF   (K'&ZCGPR GT 2).ZG52Q                             00230500
                AIF   ('&ZCGPR' EQ '0').ZG52R                           00230600
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00230700
                AIF   (T'&ZCGPR NE 'N').ZG52Q   INVALID REG NAME        00230800
.ZG52P          ANOP  ,                                                 00230900
                AIF   (T'&ZCGPR NE 'N').ZG52R   NON NUMERIC             00231000
                AIF   ('&ZCGPR' EQ '0').ZG52R                           00231100
                AIF   ('&ZCGPR' LT '2').ZG52Q                           00231200
                AIF   ('&ZCGPR' LE '12').ZG52R                          00231300
.ZG52Q          ANOP  ,                                                 00231400
&ZMS            SETC  '"RSNCODE='                                       00231500
&ZMS            SETC  '&ZMS.&RSNCODE"'                                  00231600
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00231700
                MNOTE 8,' &ZMS IN THE RANGE (0) OR (2)-(12).'           00231800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00231900
.ZG52R          ANOP  ,                                                 00232000
.******************************************************************     00232100
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00232200
.******************************************************************     00232300
                ACTR  10000                                             00232400
.*----------------------------------------------------------------***   00232500
.***AH.P02 EXTRA POSITIONALS                                            00232600
                AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS              00232700
                AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL              00232800
                AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL          00232900
                AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL           00233000
.ZGLISTX1       ANOP  ,                                                 00233100
&ZCVAL          SETC  ''          ERROR FIELD                           00233200
&ZAWRK          SETA  0           POSITIONAL NUMBER                     00233300
.ZGLIST2        ANOP  ,                                                 00233400
&ZAWRK          SETA  &ZAWRK+1    NEXT POSITIONAL                       00233500
                AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE              00233600
&ZCVAL          SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                   00233700
                AGO   .ZGLIST2                                          00233800
.*                                                                      00233900
.ZGLIST3        ANOP  ,                                                 00234000
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)     STRIP COMMA             00234100
&ZMS            SETC  'POSITIONAL ARGUMENT(S),'                         00234200
&ZMS            SETC  '&ZMS "&ZCVAL"'                                   00234300
&ZMS            SETC  '&ZMS CANNOT BE USED.'                            00234400
&ZMS            SETC  '&ZMS NO POSITIONAL ARGUMENTS'                    00234500
                MNOTE 8,' &ZMS ARE ALLOWED.'                            00234600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00234700
.ZGLISTX        ANOP  ,                                                 00234800
&ZASYSLNDX      SETA  0                                                 00234900
.*-------------------------------------------------------------------   00235000
.***AG.MF04 MF=(SLE)                                                    00235100
.ZGMFX          ANOP  ,           END OF FULL SYNTAX CHECK              00235200
.*******************************************************************    00235300
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00235400
.*******************************************************************    00235500
                AIF   (&ZMACRET NE 0).ZLX2      ERROR DETECTED          00235600
.*******************************************************************    00235700
.***AE.01  START OF IXCMG MACRO CODE                                    00235800
.*******************************************************************    00235900
                LCLC  &M0M0001                 NAME                     00236000
&M0M0001        SETC  '&XLABEL'                SET NAME                 00236100
                AIF   (K'&XLABEL NE 0).XLAB2                            00236200
&M0M0001        SETC  'M00M&SYSNDX'            DEFAULT NAME             00236300
.*                                                                      00236400
.XLAB2          ANOP  ,                                                 00236500
                AIF   ('&XMF' EQ 'L').XLAB3                             00236600
&M0M0001 DS    0H                             IXCMG-3                   00236700
.XLAB3          ANOP  ,                                                 00236800
.*******************************************************************    00236900
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00237000
.*******************************************************************    00237100
              PUSH  PRINT                                               00237200
                AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON        00237300
                PRINT OFF         ++ PR01                               00237400
                AGO   .ZPRNTXX                                          00237500
.ZPRINTX        PRINT ON                                                00237600
.ZPRNTXX        ANOP  ,                                                 00237700
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00237800
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00237900
.********************************************************************   00238000
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00238100
.********************************************************************   00238200
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00238300
                      LCLA  &ZOPN1         INVOCATION INDEX             00238400
                      LCLC  &ZOPL(4095)    LABEL                        00238500
                      LCLC  &ZOPO(4095)    OPERATION                    00238600
                      LCLC  &ZOPV(4095)    VALUE                        00238700
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00238800
.*                                                                      00238900
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00239000
.******************************************************************     00239100
.***AL.L10 IXCMG FMT=LIST MF=S!L PARAMETERS                             00239200
.******************************************************************     00239300
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00239400
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00239500
&XMFCTRL              SETC  '#Z'.'&SYSNDX'.'A'                          00239600
&XMFATTR              SETC  '0D'                                        00239700
.*                                                                      00239800
&ZOPN                 SETA  &ZOPN+1                                     00239900
&ZOPL(&ZOPN)          SETC  ' '                                         00240000
                      AIF   (&SYSALVL NE 0).ZALVL6A                     00240100
&ZOPO(&ZOPN)          SETC  'B'                                         00240200
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00240300
                      AGO   .ZALVL6B                                    00240400
.ZALVL6A              ANOP                                              00240500
&ZOPO(&ZOPN)          SETC  'CNOP'                                      00240600
&ZOPV(&ZOPN)          SETC  '4,8'                                       00240700
&ZOPN                 SETA  &ZOPN+1                                     00240800
&ZOPL(&ZOPN)          SETC  ' '                                         00240900
&ZOPO(&ZOPN)          SETC  'BRAS'                                      00241000
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              00241100
.ZALVL6B              ANOP                                              00241200
&ZOPD(&ZOPN)          SETC  '++ IXCMG ARG PARMS'                        00241300
.*                                                                      00241400
&ZOPN                 SETA  &ZOPN+1                                     00241500
&ZOPL(&ZOPN)          SETC  ' '                                         00241600
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00241700
&ZOPV(&ZOPN)          SETC  '1'                                         00241800
&ZOPD(&ZOPN)          SETC  ' '                                         00241900
.*                                                                      00242000
.ZLMFSL2              ANOP  ,                                           00242100
.*-------------------------------------------------------------------   00242200
.***AM.L00  IXCMG FMT=LIST name                                         00242300
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00242400
&ZOPN                 SETA &ZOPN+1                                      00242500
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00242600
&ZOPO(&ZOPN)          SETC 'EQU'                                        00242700
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00242800
&ZOPD(&ZOPN)          SETC '++ IXCMG NAME'                              00242900
.ZLMFSL2M             ANOP  ,                                           00243000
.*-------------------------------------------------------------------   00243100
.***AM.L01  IXCMG FMT=LIST PARAMETERS                                   00243200
&ZOPN                 SETA &ZOPN+1                                      00243300
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00243400
&ZOPO(&ZOPN)          SETC 'DS'                                         00243500
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00243600
&ZOPD(&ZOPN)          SETC '++ IXCMG PARM LIST'                         00243700
.*-------------------------------------------------------------------   00243800
.***AM.L02 XVERSION XL1                                                 00243900
&ZOPN                 SETA &ZOPN+1                                      00244000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00244100
&ZOPO(&ZOPN)          SETC 'DS'                                         00244200
&ZOPV(&ZOPN)          SETC 'XL1'                                        00244300
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00244400
.*-------------------------------------------------------------------   00244500
.***AM.L09  XSERVICE XL1                                                00244600
&ZOPN                 SETA &ZOPN+1                                      00244700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSERVICE'                         00244800
&ZOPO(&ZOPN)          SETC 'DS'                                         00244900
&ZOPV(&ZOPN)          SETC 'XL1'                                        00245000
&ZOPD(&ZOPN)          SETC '++ CONSTANT '                               00245100
.*-------------------------------------------------------------------   00245200
.***AM.L03 XTYPE BL.8                                                   00245300
&ZOPN                 SETA &ZOPN+1                                      00245400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XTYPE'                            00245500
&ZOPO(&ZOPN)          SETC 'DS'                                         00245600
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00245700
&ZOPD(&ZOPN)          SETC '++ INPUT'                                   00245800
.*                                                                      00245900
&ZOPN                 SETA  &ZOPN+1                                     00246000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTYPE_ALL'                       00246100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00246200
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00246300
&ZOPD(&ZOPN)          SETC  '++ XTYPE.'                                 00246400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ALL'                          00246500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00246600
.*                                                                      00246700
&ZOPN                 SETA  &ZOPN+1                                     00246800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTYPE_MEMBER'                    00246900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00247000
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             00247100
&ZOPD(&ZOPN)          SETC  '++ XTYPE.'                                 00247200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).MEMBER'                       00247300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00247400
.*                                                                      00247500
&ZOPN                 SETA  &ZOPN+1                                     00247600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTYPE_SRCDST'                    00247700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00247800
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             00247900
&ZOPD(&ZOPN)          SETC  '++ XTYPE.'                                 00248000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SRCDST'                       00248100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00248200
.*                                                                      00248300
&ZOPN                 SETA  &ZOPN+1                                     00248400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTYPE_SYSTEM'                    00248500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00248600
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             00248700
&ZOPD(&ZOPN)          SETC  '++ XTYPE.'                                 00248800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SYSTEM'                       00248900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00249000
.*                                                                      00249100
&ZOPN                 SETA  &ZOPN+1                                     00249200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTYPE_MSGPEND'                   00249300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00249400
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             00249500
&ZOPD(&ZOPN)          SETC  '++ XTYPE.'                                 00249600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).MSGPEND'                      00249700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00249800
.*                                                                      00249900
&ZOPN                 SETA  &ZOPN+1                                     00250000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTYPE_PATH'                      00250100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00250200
&ZOPV(&ZOPN)          SETC  'B''00000001'''                             00250300
&ZOPD(&ZOPN)          SETC  '++ XTYPE.'                                 00250400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).PATH'                         00250500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00250600
.*-------------------------------------------------------------------   00250700
.***AM.L09  XAMDALEVEL XL1                                              00250800
&ZOPN                 SETA &ZOPN+1                                      00250900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XAMDALEVEL'                       00251000
&ZOPO(&ZOPN)          SETC 'DS'                                         00251100
&ZOPV(&ZOPN)          SETC 'XL1'                                        00251200
&ZOPD(&ZOPN)          SETC '++ &ZXAMDALEVEL '                           00251300
.*-------------------------------------------------------------------   00251400
.***AM.L09 ADDR XDATAAREA A                                             00251500
&ZOPN                 SETA &ZOPN+1                                      00251600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDATAAREA_ADDR'                   00251700
&ZOPO(&ZOPN)          SETC 'DS'                                         00251800
&ZOPV(&ZOPN)          SETC 'A'                                          00251900
&ZOPD(&ZOPN)          SETC '++ &ZXDATAAREA ADDR'                        00252000
.*-------------------------------------------------------------------   00252100
.***AM.L09 ALET XDATAAREA F                                             00252200
&ZOPN                 SETA &ZOPN+1                                      00252300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDATAAREA_ALET'                   00252400
&ZOPO(&ZOPN)          SETC 'DS'                                         00252500
&ZOPV(&ZOPN)          SETC 'F'                                          00252600
&ZOPD(&ZOPN)          SETC '++ &ZXDATAAREA ALET'                        00252700
.*-------------------------------------------------------------------   00252800
.***AM.L09  XDATALEN F                                                  00252900
&ZOPN                 SETA &ZOPN+1                                      00253000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDATALEN'                         00253100
&ZOPO(&ZOPN)          SETC 'DS'                                         00253200
&ZOPV(&ZOPN)          SETC 'F'                                          00253300
&ZOPD(&ZOPN)          SETC '++ &ZXDATALEN '                             00253400
.*-------------------------------------------------------------------   00253500
.***AM.L09  XRSV0010 CL4                                                00253600
&ZOPN                 SETA &ZOPN+1                                      00253700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0010'                         00253800
&ZOPO(&ZOPN)          SETC 'DS'                                         00253900
&ZOPV(&ZOPN)          SETC 'CL4'                                        00254000
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00254100
.*-------------------------------------------------------------------   00254200
.***AM.MLM2 SAVED LOCATION COUNTER                                      00254300
                      AIF  (&XPLISTVER GE 1).ZL14LA                     00254400
                      AIF  ('&ZENDBASEPL' NE '').ZL14LA                 00254500
&ZENDBASEPL           SETC 'YES'                                        00254600
&ZOPN                 SETA &ZOPN+1                                      00254700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00254800
&ZOPO(&ZOPN)          SETC 'EQU'                                        00254900
&ZOPV(&ZOPN)          SETC '*'                                          00255000
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00255100
.ZL14LA               ANOP  ,                                           00255200
.*-------------------------------------------------------------------   00255300
.***AM.LVER1                                                            00255400
                      AIF  (&XPLISTVER LT 1).ZL14L                      00255500
.*-------------------------------------------------------------------   00255600
.*-------------------------------------------------------------------   00255700
.***AM.L09  XMEMTOKEN BL.64                                             00255800
&ZOPN                 SETA &ZOPN+1                                      00255900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMEMTOKEN'                        00256000
&ZOPO(&ZOPN)          SETC 'DS'                                         00256100
&ZOPV(&ZOPN)          SETC 'BL.64'                                      00256200
&ZOPD(&ZOPN)          SETC '++ &ZXMEMTOKEN '                            00256300
.*-------------------------------------------------------------------   00256400
.***AM.LVER2                                                            00256500
.ZL14L                ANOP  ,                                           00256600
.*-------------------------------------------------------------------   00256700
.*-------------------------------------------------------------------   00256800
.***AM.MLM2 SAVED LOCATION COUNTER                                      00256900
                      AIF  (&XPLISTVER GE 2).ZL15LA                     00257000
                      AIF  ('&ZENDBASEPL' NE '').ZL15LA                 00257100
&ZENDBASEPL           SETC 'YES'                                        00257200
&ZOPN                 SETA &ZOPN+1                                      00257300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00257400
&ZOPO(&ZOPN)          SETC 'EQU'                                        00257500
&ZOPV(&ZOPN)          SETC '*'                                          00257600
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00257700
.ZL15LA               ANOP  ,                                           00257800
.*-------------------------------------------------------------------   00257900
.***AM.LVER1                                                            00258000
                      AIF  (&XPLISTVER LT 2).ZL15L                      00258100
.*-------------------------------------------------------------------   00258200
.*-------------------------------------------------------------------   00258300
.***AM.L03 XKEYUSED2 BL.8                                               00258400
&ZOPN                 SETA &ZOPN+1                                      00258500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XKEYUSED2'                        00258600
&ZOPO(&ZOPN)          SETC 'DS'                                         00258700
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00258800
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00258900
.*-------------------------------------------------------------------   00259000
.***AM.LVER2                                                            00259100
.ZL15L                ANOP  ,                                           00259200
.*-------------------------------------------------------------------   00259300
.*-------------------------------------------------------------------   00259400
.***AM.LVER1                                                            00259500
                      AIF  (&XPLISTVER LT 2).ZL16L                      00259600
.*-------------------------------------------------------------------   00259700
.*                                                                      00259800
&ZOPN                 SETA  &ZOPN+1                                     00259900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XGROUP_YES'                      00260000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00260100
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00260200
&ZOPD(&ZOPN)          SETC  '++ XGROUP.'                                00260300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00260400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00260500
.*-------------------------------------------------------------------   00260600
.***AM.LVER2                                                            00260700
.ZL16L                ANOP  ,                                           00260800
.*-------------------------------------------------------------------   00260900
.*-------------------------------------------------------------------   00261000
.***AM.LVER1                                                            00261100
                      AIF  (&XPLISTVER LT 2).ZL17L                      00261200
.*-------------------------------------------------------------------   00261300
.*                                                                      00261400
&ZOPN                 SETA  &ZOPN+1                                     00261500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_ECBPTR'                  00261600
&ZOPO(&ZOPN)          SETC  'EQU'                                       00261700
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00261800
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00261900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ECBPTR'                       00262000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00262100
.*-------------------------------------------------------------------   00262200
.***AM.LVER2                                                            00262300
.ZL17L                ANOP  ,                                           00262400
.*-------------------------------------------------------------------   00262500
.*-------------------------------------------------------------------   00262600
.***AM.LVER1                                                            00262700
                      AIF  (&XPLISTVER LT 2).ZL18L                      00262800
.*-------------------------------------------------------------------   00262900
.*                                                                      00263000
&ZOPN                 SETA  &ZOPN+1                                     00263100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XGATHERFROM_OTHER'               00263200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00263300
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             00263400
&ZOPD(&ZOPN)          SETC  '++ XGATHERFROM.'                           00263500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).OTHER'                        00263600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00263700
.*-------------------------------------------------------------------   00263800
.***AM.LVER2                                                            00263900
.ZL18L                ANOP  ,                                           00264000
.*-------------------------------------------------------------------   00264100
.*-------------------------------------------------------------------   00264200
.***AM.LVER1                                                            00264300
                      AIF  (&XPLISTVER LT 2).ZL19L                      00264400
.*-------------------------------------------------------------------   00264500
.*                                                                      00264600
&ZOPN                 SETA  &ZOPN+1                                     00264700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XGATHERFROM_TOKEN'               00264800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00264900
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             00265000
&ZOPD(&ZOPN)          SETC  '++ XGATHERFROM.'                           00265100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).TOKEN'                        00265200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00265300
.*-------------------------------------------------------------------   00265400
.***AM.LVER2                                                            00265500
.ZL19L                ANOP  ,                                           00265600
.*-------------------------------------------------------------------   00265700
.*-------------------------------------------------------------------   00265800
.***AM.LVER1                                                            00265900
                      AIF  (&XPLISTVER LT 2).ZL20L                      00266000
.*-------------------------------------------------------------------   00266100
.*                                                                      00266200
&ZOPN                 SETA  &ZOPN+1                                     00266300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XGATHERFROM_LOCAL'               00266400
&ZOPO(&ZOPN)          SETC  'EQU'                                       00266500
&ZOPV(&ZOPN)          SETC  'B''00000001'''                             00266600
&ZOPD(&ZOPN)          SETC  '++ XGATHERFROM.'                           00266700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).LOCAL'                        00266800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00266900
.*-------------------------------------------------------------------   00267000
.***AM.LVER2                                                            00267100
.ZL20L                ANOP  ,                                           00267200
.*-------------------------------------------------------------------   00267300
.*-------------------------------------------------------------------   00267400
.***AM.LVER1                                                            00267500
                      AIF  (&XPLISTVER LT 2).ZL21L                      00267600
.*-------------------------------------------------------------------   00267700
.*-------------------------------------------------------------------   00267800
.***AM.L09  XRSV001A CL1                                                00267900
&ZOPN                 SETA &ZOPN+1                                      00268000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV001A'                         00268100
&ZOPO(&ZOPN)          SETC 'DS'                                         00268200
&ZOPV(&ZOPN)          SETC 'CL1'                                        00268300
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00268400
.*-------------------------------------------------------------------   00268500
.***AM.LVER2                                                            00268600
.ZL21L                ANOP  ,                                           00268700
.*-------------------------------------------------------------------   00268800
.*-------------------------------------------------------------------   00268900
.***AM.LVER1                                                            00269000
                      AIF  (&XPLISTVER LT 2).ZL22L                      00269100
.*-------------------------------------------------------------------   00269200
.*-------------------------------------------------------------------   00269300
.***AM.L09  XTIMEOUT XL2                                                00269400
&ZOPN                 SETA &ZOPN+1                                      00269500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XTIMEOUT'                         00269600
&ZOPO(&ZOPN)          SETC 'DS'                                         00269700
&ZOPV(&ZOPN)          SETC 'XL2'                                        00269800
&ZOPD(&ZOPN)          SETC '++ &ZXTIMEOUT '                             00269900
.*-------------------------------------------------------------------   00270000
.***AM.LVER2                                                            00270100
.ZL22L                ANOP  ,                                           00270200
.*-------------------------------------------------------------------   00270300
.*-------------------------------------------------------------------   00270400
.***AM.LVER1                                                            00270500
                      AIF  (&XPLISTVER LT 2).ZL23L                      00270600
.*-------------------------------------------------------------------   00270700
.*-------------------------------------------------------------------   00270800
.***AM.L09  XSYSID F                                                    00270900
&ZOPN                 SETA &ZOPN+1                                      00271000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSYSID'                           00271100
&ZOPO(&ZOPN)          SETC 'DS'                                         00271200
&ZOPV(&ZOPN)          SETC 'F'                                          00271300
&ZOPD(&ZOPN)          SETC '++ &ZXSYSID '                               00271400
.*-------------------------------------------------------------------   00271500
.***AM.LVER2                                                            00271600
.ZL23L                ANOP  ,                                           00271700
.*-------------------------------------------------------------------   00271800
.*-------------------------------------------------------------------   00271900
.***AM.LVER1                                                            00272000
                      AIF  (&XPLISTVER LT 2).ZL24L                      00272100
.*-------------------------------------------------------------------   00272200
.*-------------------------------------------------------------------   00272300
.***AM.L09  XECBPTR A                                                   00272400
&ZOPN                 SETA &ZOPN+1                                      00272500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XECBPTR'                          00272600
&ZOPO(&ZOPN)          SETC 'DS'                                         00272700
&ZOPV(&ZOPN)          SETC 'A'                                          00272800
&ZOPD(&ZOPN)          SETC '++ &ZXECBPTR '                              00272900
.*-------------------------------------------------------------------   00273000
.***AM.LVER2                                                            00273100
.ZL24L                ANOP  ,                                           00273200
.*-------------------------------------------------------------------   00273300
.*-------------------------------------------------------------------   00273400
.***AM.LVER1                                                            00273500
                      AIF  (&XPLISTVER LT 2).ZL25L                      00273600
.*-------------------------------------------------------------------   00273700
.*-------------------------------------------------------------------   00273800
.***AM.L09  XREQTOKEN CL16                                              00273900
&ZOPN                 SETA &ZOPN+1                                      00274000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XREQTOKEN'                        00274100
&ZOPO(&ZOPN)          SETC 'DS'                                         00274200
&ZOPV(&ZOPN)          SETC 'CL16'                                       00274300
&ZOPD(&ZOPN)          SETC '++ &ZXREQTOKEN '                            00274400
.*-------------------------------------------------------------------   00274500
.***AM.LVER2                                                            00274600
.ZL25L                ANOP  ,                                           00274700
.*-------------------------------------------------------------------   00274800
.*-------------------------------------------------------------------   00274900
.***AM.MLM2 SAVED LOCATION COUNTER                                      00275000
                      AIF  (&XPLISTVER GE 3).ZL26LA                     00275100
                      AIF  ('&ZENDBASEPL' NE '').ZL26LA                 00275200
&ZENDBASEPL           SETC 'YES'                                        00275300
&ZOPN                 SETA &ZOPN+1                                      00275400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00275500
&ZOPO(&ZOPN)          SETC 'EQU'                                        00275600
&ZOPV(&ZOPN)          SETC '*'                                          00275700
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00275800
.ZL26LA               ANOP  ,                                           00275900
.*-------------------------------------------------------------------   00276000
.***AM.LVER1                                                            00276100
                      AIF  (&XPLISTVER LT 3).ZL26L                      00276200
.*-------------------------------------------------------------------   00276300
.*-------------------------------------------------------------------   00276400
.***AM.L09  XCLASSNAME CL8                                              00276500
&ZOPN                 SETA &ZOPN+1                                      00276600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCLASSNAME'                       00276700
&ZOPO(&ZOPN)          SETC 'DS'                                         00276800
&ZOPV(&ZOPN)          SETC 'CL8'                                        00276900
&ZOPD(&ZOPN)          SETC '++ &ZXCLASSNAME '                           00277000
.*-------------------------------------------------------------------   00277100
.***AM.LVER2                                                            00277200
.ZL26L                ANOP  ,                                           00277300
.*-------------------------------------------------------------------   00277400
.*-------------------------------------------------------------------   00277500
.***AM.L10 END OF IXCMG LIST PARAMETERS                                 00277600
&ZOPN                 SETA &ZOPN+1                                      00277700
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00277800
&ZOPO(&ZOPN)          SETC 'EQU'                                        00277900
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00278000
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00278100
.*                                                                      00278200
&ZOPN                 SETA &ZOPN+1                                      00278300
&ZOPL(&ZOPN)          SETC ' '                                          00278400
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00278500
&ZOPV(&ZOPN)          SETC '1'                                          00278600
&ZOPD(&ZOPN)          SETC ' '                                          00278700
.*-------------------------------------------------------------------   00278800
.***AL.L12 IXCMG FMT=LIST MF=S!L PARAMETERS                             00278900
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00279000
.*                                                                      00279100
&ZOPN                 SETA  &ZOPN+1                                     00279200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00279300
&ZOPO(&ZOPN)          SETC  'DC'                                        00279400
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00279500
&ZOPD(&ZOPN)          SETC  '++ IXCMG ARG PARMS'                        00279600
.*                                                                      00279700
.ZLMFSLX              ANOP  ,                                           00279800
.*-------------------------------------------------------------------   00279900
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00280000
&ZPLLEN               SETA 20                                           00280100
.*                                                                      00280200
                      AIF  (&XPLISTVER LT 1).ZLLEN2Z                    00280300
&ZPLLEN               SETA 28                                           00280400
.ZLLEN2Z              ANOP  ,                                           00280500
.*                                                                      00280600
                      AIF  (&XPLISTVER LT 2).ZLLEN3Z                    00280700
&ZPLLEN               SETA 56                                           00280800
.ZLLEN3Z              ANOP  ,                                           00280900
.*                                                                      00281000
                      AIF  (&XPLISTVER LT 3).ZLLEN4Z                    00281100
&ZPLLEN               SETA 64                                           00281200
.ZLLEN4Z              ANOP  ,                                           00281300
.*                                                                      00281400
.******************************************************************     00281500
.***AI.L01 IXCMG FMT=LIST FILL IN PARAMETER AREA                        00281600
.******************************************************************     00281700
                      ACTR  10000                                       00281800
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00281900
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00282000
&ZCVAL                SETC  'LAE'          XAX MODE                     00282100
.ZIMFXA               ANOP ,                                            00282200
.*                                                                      00282300
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00282400
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00282500
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00282600
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00282700
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00282800
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00282900
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00283000
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00283100
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00283200
&ZOPN                 SETA  &ZOPN+1                                     00283300
&ZOPL(&ZOPN)          SETC  ' '                                         00283400
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00283500
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00283600
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00283700
                      AGO   .ZIMFNX                                     00283800
.*                                                                      00283900
.ZIMFN2               ANOP ,                                            00284000
                      AIF   (&SYSALVL EQ 0).ZIMFNX1                     00284100
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     00284200
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  00284300
&ZOPN                 SETA  &ZOPN+1                                     00284400
&ZOPL(&ZOPN)          SETC  ' '                                         00284500
&ZOPO(&ZOPN)          SETC  'LAE'                                       00284600
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  00284700
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00284800
                      AGO   .ZIMFNX                                     00284900
.ZIMFNX1              ANOP ,                                            00285000
&ZOPN                 SETA  &ZOPN+1                                     00285100
&ZOPL(&ZOPN)          SETC  ' '                                         00285200
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00285300
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00285400
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00285500
.ZIMFNX               ANOP ,                                            00285600
.********************************************************************   00285700
.***AI.L02 IXCMG FMT=LIST INITIALIZE PARAMETER AREA                     00285800
.********************************************************************   00285900
.***AI.L03 MF=(SLE)                                                     00286000
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00286100
.*                                                                      00286200
&ZOPN                 SETA  &ZOPN+1                                     00286300
&ZOPL(&ZOPN)          SETC  ' '                                         00286400
&ZOPO(&ZOPN)          SETC  'XC'                                        00286500
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00286600
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00286700
.ZIMFLX               ANOP  ,                                           00286800
.*-------------------------------------------------------------------   00286900
.***AI.L04A XVERSION XL1                                                00287000
                      AIF   (&XPLISTVER EQ 0).ZIMFVW                    00287100
&ZOPN                 SETA  &ZOPN+1                                     00287200
&ZOPL(&ZOPN)          SETC  ' '                                         00287300
&ZOPO(&ZOPN)          SETC  'MVI'                                       00287400
&ZOPV(&ZOPN)          SETC  '0(1),&XPLISTVER'                           00287500
&ZOPD(&ZOPN)          SETC  '++ INPUT XVERSION XL1'                     00287600
.ZIMFVW               ANOP  ,                                           00287700
.*-------------------------------------------------------------------   00287800
.***AI.L53 XSERVICE XL1                                                 00287900
&ZOPN                 SETA  &ZOPN+1                                     00288000
&ZOPL(&ZOPN)          SETC  ' '                                         00288100
&ZOPO(&ZOPN)          SETC  'MVI'                                       00288200
&ZOPV(&ZOPN)          SETC  '1(1),14'                                   00288300
&ZOPD(&ZOPN)          SETC  '++ XL1 CONSTANT'                           00288400
.*-------------------------------------------------------------------   00288500
.***AI.L05 XTYPE BL1                                                    00288600
&ZW                   SETC  ''                                          00288700
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00288800
.*-------------------------------------------------------------------   00288900
.***AI.L09 XTYPE "ALL"                                                  00289000
.***      BL1'1XXXXXXX'                                                 00289100
&ZI                   SETA  0              RESET ARRAY INDEX            00289200
.ZI4A                 ANOP  ,                                           00289300
&ZI                   SETA  &ZI+1          NEXT ARRAY ENTRY             00289400
                      AIF   (K'&XTYPE(&ZI) LE 0).ZI4B                   00289500
         AIF   ('&XTYPE(&ZI)' NE 'ALL').ZI4A                            00289600
&ZW                   SETC  '&ZW.1'                                     00289700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00289800
                      AGO   .ZI4C                                       00289900
.*                                                                      00290000
.ZI4B                 ANOP  ,                                           00290100
&ZW                   SETC  '&ZW.0'                                     00290200
.ZI4C                 ANOP  ,                                           00290300
.*-------------------------------------------------------------------   00290400
.***AI.L09 XTYPE "MEMBER"                                               00290500
.***      BL1'XXX1XXXX'                                                 00290600
&ZI                   SETA  0              RESET ARRAY INDEX            00290700
.ZI5A                 ANOP  ,                                           00290800
&ZI                   SETA  &ZI+1          NEXT ARRAY ENTRY             00290900
                      AIF   (K'&XTYPE(&ZI) LE 0).ZI5B                   00291000
         AIF   ('&XTYPE(&ZI)' NE 'MEMBER').ZI5A                         00291100
&ZW                   SETC  '&ZW.001'                                   00291200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00291300
                      AGO   .ZI5C                                       00291400
.*                                                                      00291500
.ZI5B                 ANOP  ,                                           00291600
&ZW                   SETC  '&ZW.000'                                   00291700
.ZI5C                 ANOP  ,                                           00291800
.*-------------------------------------------------------------------   00291900
.***AI.L09 XTYPE "SRCDST"                                               00292000
.***      BL1'XXXX1XXX'                                                 00292100
&ZI                   SETA  0              RESET ARRAY INDEX            00292200
.ZI6A                 ANOP  ,                                           00292300
&ZI                   SETA  &ZI+1          NEXT ARRAY ENTRY             00292400
                      AIF   (K'&XTYPE(&ZI) LE 0).ZI6B                   00292500
         AIF   ('&XTYPE(&ZI)' NE 'SRCDST').ZI6A                         00292600
&ZW                   SETC  '&ZW.1'                                     00292700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00292800
                      AGO   .ZI6C                                       00292900
.*                                                                      00293000
.ZI6B                 ANOP  ,                                           00293100
&ZW                   SETC  '&ZW.0'                                     00293200
.ZI6C                 ANOP  ,                                           00293300
.*-------------------------------------------------------------------   00293400
.***AI.L09 XTYPE "SYSTEM"                                               00293500
.***      BL1'XXXXX1XX'                                                 00293600
&ZI                   SETA  0              RESET ARRAY INDEX            00293700
.ZI7A                 ANOP  ,                                           00293800
&ZI                   SETA  &ZI+1          NEXT ARRAY ENTRY             00293900
                      AIF   (K'&XTYPE(&ZI) LE 0).ZI7B                   00294000
         AIF   ('&XTYPE(&ZI)' NE 'SYSTEM').ZI7A                         00294100
&ZW                   SETC  '&ZW.1'                                     00294200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00294300
                      AGO   .ZI7C                                       00294400
.*                                                                      00294500
.ZI7B                 ANOP  ,                                           00294600
&ZW                   SETC  '&ZW.0'                                     00294700
.ZI7C                 ANOP  ,                                           00294800
.*-------------------------------------------------------------------   00294900
.***AI.L09 XTYPE "MSGPEND"                                              00295000
.***      BL1'XXXXXX1X'                                                 00295100
&ZI                   SETA  0              RESET ARRAY INDEX            00295200
.ZI8A                 ANOP  ,                                           00295300
&ZI                   SETA  &ZI+1          NEXT ARRAY ENTRY             00295400
                      AIF   (K'&XTYPE(&ZI) LE 0).ZI8B                   00295500
         AIF   ('&XTYPE(&ZI)' NE 'MSGPEND').ZI8A                        00295600
&ZW                   SETC  '&ZW.1'                                     00295700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00295800
                      AGO   .ZI8C                                       00295900
.*                                                                      00296000
.ZI8B                 ANOP  ,                                           00296100
&ZW                   SETC  '&ZW.0'                                     00296200
.ZI8C                 ANOP  ,                                           00296300
.*-------------------------------------------------------------------   00296400
.***AI.L09 XTYPE "PATH"                                                 00296500
.***      BL1'XXXXXXX1'                                                 00296600
&ZI                   SETA  0              RESET ARRAY INDEX            00296700
.ZI9A                 ANOP  ,                                           00296800
&ZI                   SETA  &ZI+1          NEXT ARRAY ENTRY             00296900
                      AIF   (K'&XTYPE(&ZI) LE 0).ZI9B                   00297000
         AIF   ('&XTYPE(&ZI)' NE 'PATH').ZI9A                           00297100
&ZW                   SETC  '&ZW.1'                                     00297200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00297300
                      AGO   .ZI9C                                       00297400
.*                                                                      00297500
.ZI9B                 ANOP  ,                                           00297600
&ZW                   SETC  '&ZW.0'                                     00297700
.ZI9C                 ANOP  ,                                           00297800
.*-------------------------------------------------------------------   00297900
.***AI.L11 XTYPE BL1                                                    00298000
                      AIF   ('&ZCLNG' NE 'YES').ZI9E  ALL ZERO BITS     00298100
&ZOPN                 SETA  &ZOPN+1                                     00298200
&ZOPL(&ZOPN)          SETC  ' '                                         00298300
&ZOPO(&ZOPN)          SETC  'OI'                                        00298400
&ZOPV(&ZOPN)          SETC  '2(1),B''&ZW'''                             00298500
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00298600
.ZI9E                 ANOP  ,                                           00298700
.*-------------------------------------------------------------------   00298800
.***AI.L25  XAMDALEVEL XL1                                              00298900
                      AIF   ('&ZXAMDALEVEL' EQ '').ZI10E                00299000
                      AIF   ('&ZXAMDALEVEL' EQ 'OUTPUT').ZI10E          00299100
&ZCGPR                SETC  '&XAMDALEVEL'                               00299200
         AIF   ('&XAMDALEVEL' EQ '0').ZI10E                             00299300
         AIF   ('&XAMDALEVEL' EQ '0').ZI10E                             00299400
.*                                                                      00299500
                      AIF   ('&XAMDALEVEL'(1,1) NE '(').ZI10B           00299600
&ZCGPR   SETC  '0('.'&XAMDALEVEL'(2,K'&XAMDALEVEL-2).')'                00299700
                      AGO   .ZI10D                                      00299800
.ZI10B                ANOP  ,                                           00299900
.*                                                                      00300000
&ZC                   SETC  '&XAMDALEVEL'(1,1)                          00300100
                      AIF   (T'&ZC NE 'N').ZI10D                        00300200
&ZC                   SETC  '&XAMDALEVEL'                               00300300
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI10D               00300400
&ZCGPR                SETC  '=AL1(&XAMDALEVEL)'                         00300500
.*                                                                      00300600
.ZI10D                ANOP  ,                                           00300700
.*                                                                      00300800
&ZOPN                 SETA  &ZOPN+1                                     00300900
&ZOPL(&ZOPN)          SETC  ' '                                         00301000
&ZOPO(&ZOPN)          SETC  'MVC'                                       00301100
&ZOPV(&ZOPN)          SETC  '3(1,1),&ZCGPR'                             00301200
&ZOPD(&ZOPN)          SETC  '++ &ZXAMDALEVEL XAMDALEVEL'                00301300
.*                                                                      00301400
.ZI10E                ANOP  ,                                           00301500
.*-------------------------------------------------------------------   00301600
.***AI.L19 ADDR XDATAAREA A                                             00301700
                      AIF   ('&ZXDATAAREA' EQ '').ZI11H                 00301800
&ZCLNG                SETC  '&XDATAAREA'                                00301900
&ZCGPR                SETC  '14'                                        00302000
         AIF   ('&XDATAAREA'(1,1) EQ '(').ZI11F  IN GPR                 00302100
.*                                                                      00302200
&ZOPN                 SETA  &ZOPN+1                                     00302300
&ZOPL(&ZOPN)          SETC  ' '                                         00302400
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00302500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00302600
&ZOPD(&ZOPN)          SETC  '++ &ZXDATAAREA XDATAAREA'                  00302700
.*                                                                      00302800
                      AGO   .ZI11G                                      00302900
.*                                                                      00303000
.ZI11F                ANOP  ,                                           00303100
&ZCGPR   SETC  '&XDATAAREA'(2,K'&XDATAAREA-2)                           00303200
.*                                                                      00303300
.ZI11G                ANOP  ,                                           00303400
.*                                                                      00303500
&ZOPN                 SETA  &ZOPN+1                                     00303600
&ZOPL(&ZOPN)          SETC  ' '                                         00303700
&ZOPO(&ZOPN)          SETC  'ST'                                        00303800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4(,1)'                              00303900
&ZOPD(&ZOPN)          SETC  '++ &ZXDATAAREA XDATAAREA'                  00304000
.*                                                                      00304100
.ZI11H                ANOP  ,                                           00304200
.*-------------------------------------------------------------------   00304300
.***AI.L23 ALET XDATAAREA F                                             00304400
         AIF   ('&ZXDATAAREA' EQ '').ZI12G                              00304500
         AIF   ('&SYSASCE' EQ 'P').ZI12G   SYSSTATE PRIMARY             00304600
&ZCLNG                SETC  '&XDATAAREA'                                00304700
         AIF   ('&XDATAAREA'(1,1) EQ '(').ZI12E  IN AR                  00304800
.*                                                                      00304900
&ZCGPR                SETC  '14'                                        00305000
                      AGO   .ZI12F                                      00305100
.*                                                                      00305200
.ZI12E                ANOP  ,                                           00305300
&ZCGPR   SETC  '&XDATAAREA'(2,K'&XDATAAREA-2)                           00305400
.*                                                                      00305500
.ZI12F                ANOP  ,                                           00305600
.*                                                                      00305700
&ZOPN                 SETA  &ZOPN+1                                     00305800
&ZOPL(&ZOPN)          SETC  ' '                                         00305900
&ZOPO(&ZOPN)          SETC  'STAM'                                      00306000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,8(1)'                        00306100
&ZOPD(&ZOPN)          SETC  '++ &ZXDATAAREA XDATAAREA'                  00306200
.*                                                                      00306300
.ZI12G                ANOP  ,                                           00306400
.*-------------------------------------------------------------------   00306500
.***AI.L25  XDATALEN F                                                  00306600
                      AIF   ('&ZXDATALEN' EQ '').ZI13E                  00306700
                      AIF   ('&ZXDATALEN' EQ 'OUTPUT').ZI13E            00306800
&ZCGPR                SETC  '&XDATALEN'                                 00306900
.*                                                                      00307000
                      AIF   ('&XDATALEN'(1,1) NE '(').ZI13B             00307100
&ZCGPR   SETC  '0('.'&XDATALEN'(2,K'&XDATALEN-2).')'                    00307200
                      AGO   .ZI13D                                      00307300
.ZI13B                ANOP  ,                                           00307400
.*                                                                      00307500
&ZC                   SETC  '&XDATALEN'(1,1)                            00307600
                      AIF   (T'&ZC NE 'N').ZI13D                        00307700
&ZC                   SETC  '&XDATALEN'                                 00307800
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI13D               00307900
&ZCGPR                SETC  '=AL4(&XDATALEN)'                           00308000
.*                                                                      00308100
.ZI13D                ANOP  ,                                           00308200
.*                                                                      00308300
&ZOPN                 SETA  &ZOPN+1                                     00308400
&ZOPL(&ZOPN)          SETC  ' '                                         00308500
&ZOPO(&ZOPN)          SETC  'MVC'                                       00308600
&ZOPV(&ZOPN)          SETC  '12(4,1),&ZCGPR'                            00308700
&ZOPD(&ZOPN)          SETC  '++ &ZXDATALEN XDATALEN'                    00308800
.*                                                                      00308900
.ZI13E                ANOP  ,                                           00309000
.*-------------------------------------------------------------------   00309100
.***AI.LVER01                                                           00309200
                      AIF  (&XPLISTVER LT 1).ZI15Z                      00309300
.*-------------------------------------------------------------------   00309400
.***AI.L25  XMEMTOKEN XL8                                               00309500
                      AIF   ('&ZXMEMTOKEN' EQ '').ZI15E                 00309600
                      AIF   ('&ZXMEMTOKEN' EQ 'OUTPUT').ZI15E           00309700
&ZCGPR                SETC  '&XMEMTOKEN'                                00309800
         AIF   ('&XMEMTOKEN' EQ '0').ZI15E                              00309900
         AIF   ('&XMEMTOKEN' EQ '0').ZI15E                              00310000
.*                                                                      00310100
                      AIF   ('&XMEMTOKEN'(1,1) NE '(').ZI15B            00310200
&ZCGPR   SETC  '0('.'&XMEMTOKEN'(2,K'&XMEMTOKEN-2).')'                  00310300
                      AGO   .ZI15D                                      00310400
.ZI15B                ANOP  ,                                           00310500
.*                                                                      00310600
&ZC                   SETC  '&XMEMTOKEN'(1,1)                           00310700
                      AIF   (T'&ZC NE 'N').ZI15D                        00310800
&ZC                   SETC  '&XMEMTOKEN'                                00310900
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI15D               00311000
&ZCGPR                SETC  '=BL8''&XMEMTOKEN'''                        00311100
.*                                                                      00311200
.ZI15D                ANOP  ,                                           00311300
.*                                                                      00311400
&ZOPN                 SETA  &ZOPN+1                                     00311500
&ZOPL(&ZOPN)          SETC  ' '                                         00311600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00311700
&ZOPV(&ZOPN)          SETC  '20(8,1),&ZCGPR'                            00311800
&ZOPD(&ZOPN)          SETC  '++ &ZXMEMTOKEN XMEMTOKEN'                  00311900
.*                                                                      00312000
.ZI15E                ANOP  ,                                           00312100
.*-------------------------------------------------------------------   00312200
.***AI.LVER02                                                           00312300
.ZI15Z                ANOP  ,                                           00312400
.*-------------------------------------------------------------------   00312500
.***AI.LVER01                                                           00312600
                      AIF  (&XPLISTVER LT 2).ZI16Z                      00312700
.*-------------------------------------------------------------------   00312800
.***AI.L05 XKEYUSED2 BL1                                                00312900
&ZW                   SETC  ''                                          00313000
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00313100
.*-------------------------------------------------------------------   00313200
.***AI.LVER02                                                           00313300
.ZI16Z                ANOP  ,                                           00313400
.*-------------------------------------------------------------------   00313500
.***AI.LVER01                                                           00313600
                      AIF  (&XPLISTVER LT 2).ZI17Z                      00313700
.*-------------------------------------------------------------------   00313800
.***AI.L08 XKEYUSED2 "YES"                                              00313900
.***      BL1'1XXXXXXX'                                                 00314000
         AIF   ('&XGROUP' NE 'YES').ZI17A                               00314100
&ZW                   SETC  '&ZW.1'                                     00314200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00314300
                      AGO   .ZI17C                                      00314400
.*                                                                      00314500
.ZI17A                ANOP  ,                                           00314600
&ZW                   SETC  '&ZW.0'                                     00314700
.ZI17C                ANOP  ,                                           00314800
.*-------------------------------------------------------------------   00314900
.***AI.LVER02                                                           00315000
.ZI17Z                ANOP  ,                                           00315100
.*-------------------------------------------------------------------   00315200
.***AI.LVER01                                                           00315300
                      AIF  (&XPLISTVER LT 2).ZI18Z                      00315400
.*-------------------------------------------------------------------   00315500
.***AI.L08 XKEYUSED2 "ECBPTR"                                           00315600
.***      BL1'X1XXXXXX'                                                 00315700
         AIF   ('&ECBPTR' EQ '').ZI18A                                  00315800
         AIF   ('&ECBPTR' EQ 'NONE').ZI18A                              00315900
&ZW                   SETC  '&ZW.1'                                     00316000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00316100
                      AGO   .ZI18C                                      00316200
.*                                                                      00316300
.ZI18A                ANOP  ,                                           00316400
&ZW                   SETC  '&ZW.0'                                     00316500
.ZI18C                ANOP  ,                                           00316600
.*-------------------------------------------------------------------   00316700
.***AI.LVER02                                                           00316800
.ZI18Z                ANOP  ,                                           00316900
.*-------------------------------------------------------------------   00317000
.***AI.LVER01                                                           00317100
                      AIF  (&XPLISTVER LT 2).ZI19Z                      00317200
.*-------------------------------------------------------------------   00317300
.***AI.L08 XKEYUSED2 "OTHER"                                            00317400
.***      BL1'XXXXX1XX'                                                 00317500
         AIF   ('&XGATHERFROM' NE 'OTHER').ZI19A                        00317600
&ZW                   SETC  '&ZW.0001'                                  00317700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00317800
                      AGO   .ZI19C                                      00317900
.*                                                                      00318000
.ZI19A                ANOP  ,                                           00318100
&ZW                   SETC  '&ZW.0000'                                  00318200
.ZI19C                ANOP  ,                                           00318300
.*-------------------------------------------------------------------   00318400
.***AI.LVER02                                                           00318500
.ZI19Z                ANOP  ,                                           00318600
.*-------------------------------------------------------------------   00318700
.***AI.LVER01                                                           00318800
                      AIF  (&XPLISTVER LT 2).ZI20Z                      00318900
.*-------------------------------------------------------------------   00319000
.***AI.L08 XKEYUSED2 "TOKEN"                                            00319100
.***      BL1'XXXXXX1X'                                                 00319200
         AIF   ('&XGATHERFROM' NE 'TOKEN').ZI20A                        00319300
&ZW                   SETC  '&ZW.1'                                     00319400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00319500
                      AGO   .ZI20C                                      00319600
.*                                                                      00319700
.ZI20A                ANOP  ,                                           00319800
&ZW                   SETC  '&ZW.0'                                     00319900
.ZI20C                ANOP  ,                                           00320000
.*-------------------------------------------------------------------   00320100
.***AI.LVER02                                                           00320200
.ZI20Z                ANOP  ,                                           00320300
.*-------------------------------------------------------------------   00320400
.***AI.LVER01                                                           00320500
                      AIF  (&XPLISTVER LT 2).ZI21Z                      00320600
.*-------------------------------------------------------------------   00320700
.***AI.L08 XKEYUSED2 "LOCAL"                                            00320800
.***      BL1'XXXXXXX1'                                                 00320900
         AIF   ('&XGATHERFROM' NE 'LOCAL').ZI21A                        00321000
&ZW                   SETC  '&ZW.1'                                     00321100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00321200
                      AGO   .ZI21C                                      00321300
.*                                                                      00321400
.ZI21A                ANOP  ,                                           00321500
&ZW                   SETC  '&ZW.0'                                     00321600
.ZI21C                ANOP  ,                                           00321700
.*-------------------------------------------------------------------   00321800
.***AI.L11 XKEYUSED2 BL1                                                00321900
                      AIF   ('&ZCLNG' NE 'YES').ZI21E  ALL ZERO BITS    00322000
&ZOPN                 SETA  &ZOPN+1                                     00322100
&ZOPL(&ZOPN)          SETC  ' '                                         00322200
&ZOPO(&ZOPN)          SETC  'OI'                                        00322300
&ZOPV(&ZOPN)          SETC  '28(1),B''&ZW'''                            00322400
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00322500
.ZI21E                ANOP  ,                                           00322600
.*-------------------------------------------------------------------   00322700
.***AI.LVER02                                                           00322800
.ZI21Z                ANOP  ,                                           00322900
.*-------------------------------------------------------------------   00323000
.***AI.LVER01                                                           00323100
                      AIF  (&XPLISTVER LT 2).ZI22Z                      00323200
.*-------------------------------------------------------------------   00323300
.***AI.LVER02                                                           00323400
.ZI22Z                ANOP  ,                                           00323500
.*-------------------------------------------------------------------   00323600
.***AI.LVER01                                                           00323700
                      AIF  (&XPLISTVER LT 2).ZI23Z                      00323800
.*-------------------------------------------------------------------   00323900
.***AI.L25  XTIMEOUT XL2                                                00324000
                      AIF   ('&ZXTIMEOUT' EQ '').ZI23E                  00324100
                      AIF   ('&ZXTIMEOUT' EQ 'OUTPUT').ZI23E            00324200
&ZCGPR                SETC  '&XTIMEOUT'                                 00324300
.*                                                                      00324400
                      AIF   ('&XTIMEOUT'(1,1) NE '(').ZI23B             00324500
&ZCGPR   SETC  '0('.'&XTIMEOUT'(2,K'&XTIMEOUT-2).')'                    00324600
                      AGO   .ZI23D                                      00324700
.ZI23B                ANOP  ,                                           00324800
.*                                                                      00324900
&ZC                   SETC  '&XTIMEOUT'(1,1)                            00325000
                      AIF   (T'&ZC NE 'N').ZI23D                        00325100
&ZC                   SETC  '&XTIMEOUT'                                 00325200
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI23D               00325300
&ZCGPR                SETC  '=FL2''&XTIMEOUT'''                         00325400
.*                                                                      00325500
.ZI23D                ANOP  ,                                           00325600
.*                                                                      00325700
&ZOPN                 SETA  &ZOPN+1                                     00325800
&ZOPL(&ZOPN)          SETC  ' '                                         00325900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00326000
&ZOPV(&ZOPN)          SETC  '30(2,1),&ZCGPR'                            00326100
&ZOPD(&ZOPN)          SETC  '++ &ZXTIMEOUT XTIMEOUT'                    00326200
.*                                                                      00326300
.ZI23E                ANOP  ,                                           00326400
.*-------------------------------------------------------------------   00326500
.***AI.LVER02                                                           00326600
.ZI23Z                ANOP  ,                                           00326700
.*-------------------------------------------------------------------   00326800
.***AI.LVER01                                                           00326900
                      AIF  (&XPLISTVER LT 2).ZI24Z                      00327000
.*-------------------------------------------------------------------   00327100
.***AI.L25  XSYSID F                                                    00327200
                      AIF   ('&ZXSYSID' EQ '').ZI24E                    00327300
                      AIF   ('&ZXSYSID' EQ 'OUTPUT').ZI24E              00327400
&ZCGPR                SETC  '&XSYSID'                                   00327500
.*                                                                      00327600
                      AIF   ('&XSYSID'(1,1) NE '(').ZI24B               00327700
&ZCGPR   SETC  '0('.'&XSYSID'(2,K'&XSYSID-2).')'                        00327800
                      AGO   .ZI24D                                      00327900
.ZI24B                ANOP  ,                                           00328000
.*                                                                      00328100
&ZC                   SETC  '&XSYSID'(1,1)                              00328200
                      AIF   (T'&ZC NE 'N').ZI24D                        00328300
&ZC                   SETC  '&XSYSID'                                   00328400
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI24D               00328500
&ZCGPR                SETC  '=AL4(&XSYSID)'                             00328600
.*                                                                      00328700
.ZI24D                ANOP  ,                                           00328800
.*                                                                      00328900
&ZOPN                 SETA  &ZOPN+1                                     00329000
&ZOPL(&ZOPN)          SETC  ' '                                         00329100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00329200
&ZOPV(&ZOPN)          SETC  '32(4,1),&ZCGPR'                            00329300
&ZOPD(&ZOPN)          SETC  '++ &ZXSYSID XSYSID'                        00329400
.*                                                                      00329500
.ZI24E                ANOP  ,                                           00329600
.*-------------------------------------------------------------------   00329700
.***AI.LVER02                                                           00329800
.ZI24Z                ANOP  ,                                           00329900
.*-------------------------------------------------------------------   00330000
.***AI.LVER01                                                           00330100
                      AIF  (&XPLISTVER LT 2).ZI25Z                      00330200
.*-------------------------------------------------------------------   00330300
.***AI.L18  XECBPTR AL4                                                 00330400
         AIF   ('&XECBPTR' NE 'NONE').ZI25                              00330500
&ZXECBPTR             SETC  ''             RESET INPUT/OUTPUT           00330600
.ZI25                 ANOP  ,                                           00330700
.*-------------------------------------------------------------------   00330800
.***AI.L25  XECBPTR AL4                                                 00330900
                      AIF   ('&ZXECBPTR' EQ '').ZI25E                   00331000
                      AIF   ('&ZXECBPTR' EQ 'OUTPUT').ZI25E             00331100
&ZCGPR                SETC  '&XECBPTR'                                  00331200
.*                                                                      00331300
                      AIF   ('&XECBPTR'(1,1) NE '(').ZI25B              00331400
&ZCGPR   SETC  '0('.'&XECBPTR'(2,K'&XECBPTR-2).')'                      00331500
                      AGO   .ZI25D                                      00331600
.ZI25B                ANOP  ,                                           00331700
.*                                                                      00331800
&ZC                   SETC  '&XECBPTR'(1,1)                             00331900
                      AIF   (T'&ZC NE 'N').ZI25D                        00332000
&ZC                   SETC  '&XECBPTR'                                  00332100
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI25D               00332200
&ZCGPR                SETC  '=AL4(&XECBPTR)'                            00332300
.*                                                                      00332400
.ZI25D                ANOP  ,                                           00332500
.*                                                                      00332600
&ZOPN                 SETA  &ZOPN+1                                     00332700
&ZOPL(&ZOPN)          SETC  ' '                                         00332800
&ZOPO(&ZOPN)          SETC  'MVC'                                       00332900
&ZOPV(&ZOPN)          SETC  '36(4,1),&ZCGPR'                            00333000
&ZOPD(&ZOPN)          SETC  '++ &ZXECBPTR XECBPTR'                      00333100
.*                                                                      00333200
.ZI25E                ANOP  ,                                           00333300
.*-------------------------------------------------------------------   00333400
.***AI.LVER02                                                           00333500
.ZI25Z                ANOP  ,                                           00333600
.*-------------------------------------------------------------------   00333700
.***AI.LVER01                                                           00333800
                      AIF  (&XPLISTVER LT 2).ZI26Z                      00333900
.*-------------------------------------------------------------------   00334000
.***AI.L25  XREQTOKEN CL16                                              00334100
                      AIF   ('&ZXREQTOKEN' EQ '').ZI26E                 00334200
                      AIF   ('&ZXREQTOKEN' EQ 'OUTPUT').ZI26E           00334300
&ZCGPR                SETC  '&XREQTOKEN'                                00334400
.*                                                                      00334500
                      AIF   ('&XREQTOKEN'(1,1) NE '(').ZI26B            00334600
&ZCGPR   SETC  '0('.'&XREQTOKEN'(2,K'&XREQTOKEN-2).')'                  00334700
.ZI26B                ANOP  ,                                           00334800
.*                                                                      00334900
&ZOPN                 SETA  &ZOPN+1                                     00335000
&ZOPL(&ZOPN)          SETC  ' '                                         00335100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00335200
&ZOPV(&ZOPN)          SETC  '40(16,1),&ZCGPR'                           00335300
&ZOPD(&ZOPN)          SETC  '++ &ZXREQTOKEN XREQTOKEN'                  00335400
.*                                                                      00335500
.ZI26E                ANOP  ,                                           00335600
.*-------------------------------------------------------------------   00335700
.***AI.LVER02                                                           00335800
.ZI26Z                ANOP  ,                                           00335900
.*-------------------------------------------------------------------   00336000
.***AI.LVER01                                                           00336100
                      AIF  (&XPLISTVER LT 3).ZI27Z                      00336200
.*-------------------------------------------------------------------   00336300
.***AI.L25  XCLASSNAME CL8                                              00336400
                      AIF   ('&ZXCLASSNAME' EQ '').ZI27E                00336500
                      AIF   ('&ZXCLASSNAME' EQ 'OUTPUT').ZI27E          00336600
&ZCGPR                SETC  '&XCLASSNAME'                               00336700
         AIF   ('&XCLASSNAME' EQ '0').ZI27E                             00336800
         AIF   ('&XCLASSNAME' EQ '0').ZI27E                             00336900
.*                                                                      00337000
                      AIF   ('&XCLASSNAME'(1,1) NE '(').ZI27B           00337100
&ZCGPR   SETC  '0('.'&XCLASSNAME'(2,K'&XCLASSNAME-2).')'                00337200
                      AGO   .ZI27D                                      00337300
.ZI27B                ANOP  ,                                           00337400
.*                                                                      00337500
                      AIF   ('&CLASSNAME(1)' EQ '').ZI27I               00337600
&ZC                   SETC  '0'                                         00337700
                      AIF   ('&XCLASSNAME' NE '&ZC').ZI27C              00337800
.ZI27I                ANOP  ,                                           00337900
&ZCGPR                SETC  '=CL8''&XCLASSNAME'''                       00338000
.ZI27C                ANOP  ,                                           00338100
.*                                                                      00338200
.ZI27D                ANOP  ,                                           00338300
.*                                                                      00338400
&ZOPN                 SETA  &ZOPN+1                                     00338500
&ZOPL(&ZOPN)          SETC  ' '                                         00338600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00338700
&ZOPV(&ZOPN)          SETC  '56(8,1),&ZCGPR'                            00338800
&ZOPD(&ZOPN)          SETC  '++ &ZXCLASSNAME XCLASSNAME'                00338900
.*                                                                      00339000
.ZI27E                ANOP  ,                                           00339100
.*-------------------------------------------------------------------   00339200
.***AI.LVER02                                                           00339300
.ZI27Z                ANOP  ,                                           00339400
.*-------------------------------------------------------------------   00339500
&ZOPN1                SETA &ZOPN                                        00339600
.*******************************************************************    00339700
.***  PROCESS IXCMG OUTPUT PARAMETERS                                   00339800
.*******************************************************************    00339900
                      ACTR  10000                                       00340000
.*******************************************************************    00340100
.***AO.X02  RETURN CODE PROCESSING                                      00340200
.*******************************************************************    00340300
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00340400
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00340500
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00340600
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00340700
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00340800
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00340900
&ZOPN                 SETA  &ZOPN+1                                     00341000
&ZOPL(&ZOPN)          SETC  ' '                                         00341100
&ZOPO(&ZOPN)          SETC  'ST'                                        00341200
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00341300
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00341400
                      AGO   .ZMRETX                                     00341500
.*                                                                      00341600
.ZMRET2               ANOP  ,                                           00341700
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00341800
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00341900
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00342000
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00342100
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00342200
&ZOPN                 SETA  &ZOPN+1                                     00342300
&ZOPL(&ZOPN)          SETC  ' '                                         00342400
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00342500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00342600
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00342700
.ZMRETX               ANOP  ,                                           00342800
.*******************************************************************    00342900
.***AO.X03  REASON CODE PROCESSING                                      00343000
.*******************************************************************    00343100
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00343200
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00343300
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00343400
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00343500
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00343600
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00343700
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00343800
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00343900
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00344000
&ZOPN                 SETA  &ZOPN+1                                     00344100
&ZOPL(&ZOPN)          SETC  ' '                                         00344200
&ZOPO(&ZOPN)          SETC  'ST'                                        00344300
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00344400
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00344500
                      AGO   .ZMRSNX                                     00344600
.*                                                                      00344700
.ZMRSN2               ANOP  ,                                           00344800
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00344900
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00345000
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00345100
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00345200
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00345300
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00345400
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00345500
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00345600
&ZOPN                 SETA  &ZOPN+1                                     00345700
&ZOPL(&ZOPN)          SETC  ' '                                         00345800
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00345900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00346000
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00346100
.ZMRSNX               ANOP  ,                                           00346200
.*******************************************************************    00346300
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00346400
.*******************************************************************    00346500
.ZMFLX                ANOP  ,              MF=L PROCESSING              00346600
.*******************************************************************    00346700
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00346800
.*******************************************************************    00346900
                      ACTR  10000                                       00347000
.*                                                                      00347100
                      LCLA  &ZLC           COLUMN POSITION              00347200
                      LCLA  &ZOPX          LIST TABLE INDEX             00347300
                      LCLC  &ZLL           LABEL                        00347400
                      LCLC  &ZLOP          OPERATION                    00347500
                      LCLC  &ZLV           VALUE                        00347600
                      LCLC  &ZLD           DESCRIPTION                  00347700
.*                                                                      00347800
&ZOPX                 SETA  1                                           00347900
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00348000
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00348100
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00348200
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00348300
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00348400
                      AIF   (K'&ZLD LE 0).ZL5                           00348500
&ZLC                  SETA  35             COMMENT COLUMN               00348600
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00348700
&ZLC                  SETA  33             COMMMENT COLUMN              00348800
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00348900
&ZLV                  SETC  '&ZLV'.' '                                  00349000
                      AGO   .ZL3                                        00349100
.*                                                                      00349200
.ZL4                  ANOP  ,                                           00349300
&ZLV                  SETC  '&ZLV'.' '                                  00349400
.ZL5                  ANOP  ,                                           00349500
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00349600
.*                                                                      00349700
&ZLL     &ZLOP &ZLV                                                     00349800
.*                                                                      00349900
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00350000
                      AGO   .ZL2           CONTINUE LOOPING             00350100
.*                                                                      00350200
.ZLX                  ANOP  ,                                           00350300
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00350400
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00350500
         L     14,16(0,0)              GET CVT ADDRESS                  00350600
         L     14,772(14,0)            GET SFT ADDRESS                  00350700
         L     14,220(14,0)            GET LX FOR SERVICE ROUTINE       00350800
         LA    15,6                    GET EX FOR SERVICE ROUTINE       00350900
         OR    14,15                   GET PC NUMBER                    00351000
         PC    0(14)                                                    00351100
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00351200
.ZLINKX               ANOP  ,                                           00351300
.*******************************************************************    00351400
.***AP.X01  FORMAT GENERATED CODE                                       00351500
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00351600
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00351700
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00351800
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00351900
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00352000
                      AIF   (K'&ZLD LE 0).ZL51                          00352100
&ZLC                  SETA  35             COMMENT COLUMN               00352200
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00352300
&ZLC                  SETA  33             COMMENT COLUMN               00352400
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00352500
&ZLV                  SETC  '&ZLV'.' '                                  00352600
                      AGO   .ZL31                                       00352700
.*                                                                      00352800
.ZL41                 ANOP  ,                                           00352900
&ZLV                  SETC  '&ZLV'.' '                                  00353000
.ZL51                 ANOP  ,                                           00353100
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00353200
.*                                                                      00353300
&ZLL     &ZLOP &ZLV                                                     00353400
.*                                                                      00353500
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00353600
                      AGO   .ZL21          CONTINUE LOOPING             00353700
.*                                                                      00353800
.ZLX1                 ANOP  ,                                           00353900
.*******************************************************************    00354000
.***AP.X02  END OF IXCMG MACRO                                          00354100
&ZIXCMG               SETC  'YES'          SET IXCMG USED               00354200
         POP   PRINT                                                    00354300
*                                            IXCMG-3                    00354400
         SPACE 1                                                        00354500
.ZLX2                 ANOP  ,                                           00354600
         MEND                                                           00354700
**********************************************************************/ 00354800
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00354900
*%IXCMG: MACRO KEYS(DATAAREA,DATALEN,TYPE,MEMTOKEN,GROUP,CLASSNAME,     00355000
*                 GATHERFROM,SYSID,TIMEOUT,ECBPTR,REQTOKEN,AMDALEVEL,   00355100
*                 RETCODE,RSNCODE,PLISTVER,MF);                         00355200
*  ANS('?'!!MACLABEL!!' '!!'IXCMGP '!!MACLIST!!                         00355300
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              00355400
*%END IXCMG;                                                            00355500
