*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IEAMSCHD                              -09/26/18-<4> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  Schedule SRB Services                         * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5650-ZOS COPYRIGHT IBM CORP. 1994, 2019                         * 00001200
*                                                                     * 00001300
* STATUS= HBB77C0                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      The IEAMSCHD macro schedules an SRB routine for asynchronous   * 00002100
*      execution. The SRB may be scheduled for execution in any       * 00002200
*      address space.                                                 * 00002300
*                                                                     * 00002400
*      REGISTER INFORMATION:                                          * 00002500
*                                                                     * 00002600
*                                                                     * 00002700
*      o   Registers on Entry:                                        * 00002800
*                                                                     * 00002900
*                                                                     * 00003000
*          -   General Purpose Registers                              * 00003100
*                                                                     * 00003200
*                                                                     * 00003300
*              Reg  0-15   Irrelevant                                 * 00003400
*                                                                     * 00003500
*                                                                     * 00003600
*                                                                     * 00003700
*          -   Access Registers                                       * 00003800
*                                                                     * 00003900
*                                                                     * 00004000
*              Reg  0-15   Irrelevant                                 * 00004100
*                                                                     * 00004200
*                                                                     * 00004300
*                                                                     * 00004400
*                                                                     * 00004500
*                                                                     * 00004600
*      o   Registers on Return:                                       * 00004700
*                                                                     * 00004800
*                                                                     * 00004900
*          -   General Purpose Registers                              * 00005000
*                                                                     * 00005100
*                                                                     * 00005200
*              Reg  0-1    Unpredictable                              * 00005300
*                                                                     * 00005400
*              Reg  2-13   Preserved                                  * 00005500
*                                                                     * 00005600
*              Reg 14      Unpredictable                              * 00005700
*                                                                     * 00005800
*              Reg 15      Return code                                * 00005900
*                                                                     * 00006000
*                                                                     * 00006100
*                                                                     * 00006200
*          -   Access Registers                                       * 00006300
*                                                                     * 00006400
*                                                                     * 00006500
*              Reg  0-1    Unpredictable                              * 00006600
*                                                                     * 00006700
*              Reg  2-13   Preserved                                  * 00006800
*                                                                     * 00006900
*              Reg  14-15  Unpredictable                              * 00007000
*                                                                     * 00007100
*                                                                     * 00007200
*                                                                     * 00007300
*                                                                     * 00007400
*                                                                     * 00007500
*      o   Registers on Entry to the SRB routine:                     * 00007600
*                                                                     * 00007700
*                                                                     * 00007800
*          -   General Purpose Registers                              * 00007900
*                                                                     * 00008000
*                                                                     * 00008100
*              Reg  0      0                                          * 00008200
*                                                                     * 00008300
*              Reg 1       Contents as specified via the PARM         * 00008400
*                          keyword.                                   * 00008500
*                                                                     * 00008600
*              Reg 2-13    Unpredictable                              * 00008700
*                                                                     * 00008800
*              Reg 14      Return address                             * 00008900
*                                                                     * 00009000
*              Reg 15      Entry point address of SRB routine         * 00009100
*                                                                     * 00009200
*                                                                     * 00009300
*                                                                     * 00009400
*          -   Access Registers                                       * 00009500
*                                                                     * 00009600
*                                                                     * 00009700
*              Reg  0-15   Unpredictable                              * 00009800
*                                                                     * 00009900
*                                                                     * 00010000
*                                                                     * 00010100
*                                                                     * 00010200
*                                                                     * 00010300
*      o   Registers on Entry to the SRB routine with FRR:            * 00010400
*                                                                     * 00010500
*                                                                     * 00010600
*          -   General Purpose Registers                              * 00010700
*                                                                     * 00010800
*                                                                     * 00010900
*              Reg  0      0                                          * 00011000
*                                                                     * 00011100
*              Reg 1       Contents as specified via the PARM         * 00011200
*                          keyword.                                   * 00011300
*                                                                     * 00011400
*              Reg 2       Address of 24-byte FRR parameter area      * 00011500
*                                                                     * 00011600
*              Reg 3-13    Unpredictable                              * 00011700
*                                                                     * 00011800
*              Reg 14      Return address                             * 00011900
*                                                                     * 00012000
*              Reg 15      Entry point address of SRB routine         * 00012100
*                                                                     * 00012200
*                                                                     * 00012300
*                                                                     * 00012400
*          -   Access Registers                                       * 00012500
*                                                                     * 00012600
*                                                                     * 00012700
*              Reg  0-15   Unpredictable                              * 00012800
*                                                                     * 00012900
*                                                                     * 00013000
*                                                                     * 00013100
*                                                                     * 00013200
*                                                                     * 00013300
*      o   Registers on Entry to the SRB routine's RMTR:              * 00013400
*                                                                     * 00013500
*                                                                     * 00013600
*          -   General Purpose Registers                              * 00013700
*                                                                     * 00013800
*                                                                     * 00013900
*              Reg  0      Value passed in general purpose register 0 * 00014000
*                          by caller of PURGEDQ service               * 00014100
*                                                                     * 00014200
*              Reg 1       0                                          * 00014300
*                                                                     * 00014400
*              Reg 2       Contents as specified via the PARM         * 00014500
*                          keyword.                                   * 00014600
*                                                                     * 00014700
*              Reg 3-13    Unpredictable                              * 00014800
*                                                                     * 00014900
*              Reg 14      Return address to PURGEDQ                  * 00015000
*                                                                     * 00015100
*              Reg 15      Entry point address of SRB routine's RMTR  * 00015200
*                                                                     * 00015300
*                                                                     * 00015400
*                                                                     * 00015500
*          -   Access Registers                                       * 00015600
*                                                                     * 00015700
*                                                                     * 00015800
*              Reg  0      Value passed in access register 0 by       * 00015900
*                          caller of PURGEDQ service                  * 00016000
*                                                                     * 00016100
*              Reg  1-15   Unpredictable                              * 00016200
*                                                                     * 00016300
*                                                                     * 00016400
*                                                                     * 00016500
*                                                                     * 00016600
*                                                                     * 00016700
*          .NOTE General Purpose Register 0 and Access Register 0     * 00016800
*          will be zero if the SRB Routine was purged by the system.  * 00016900
*                                                                     * 00017000
*                                                                     * 00017100
*                                                                     * 00017200
*01* EXTERNAL CLASSIFICATION:                                         * 00017300
*                                                                     * 00017400
*02* GUPI: BASE                                                       * 00017500
*                                                                     * 00017600
*02* NONE: FIELDS                                                     * 00017700
*          DUALPOOLTOKEN                                              * 00017800
*                                                                     * 00017900
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00018000
*                                                                     * 00018100
*01* ENVIRONMENT:                                                     * 00018200
*                                                                     * 00018300
*                                                                     * 00018400
*      Dispatchable unit mode: Either Task, SRB, or DIE mode.         * 00018500
*                                                                     * 00018600
*      Minimum authorization: Supervisor State and any Key or Problem * 00018700
*                        State and Key 0-7.                           * 00018800
*                                                                     * 00018900
*      AMODE:            31- or 64-bit.                               * 00019000
*                                                                     * 00019100
*      ASC mode:         Primary or Access Register.                  * 00019200
*                                                                     * 00019300
*      Interrupt status: Enabled or disabled for I/O and external     * 00019400
*                        interrupts.                                  * 00019500
*                                                                     * 00019600
*      Locks:            Any lock may be held.                        * 00019700
*                                                                     * 00019800
*      Control parameters: Control parameters must be in the primary  * 00019900
*                        address space.                               * 00020000
*                                                                     * 00020100
*      Cross Memory Mode: Any PASN, any HASN, any SASN.               * 00020200
*                                                                     * 00020300
*                                                                     * 00020400
*                                                                     * 00020500
*01* RESTRICTIONS:                                                    * 00020600
*                                                                     * 00020700
*                                                                     * 00020800
*    o   Address space resource managers may not specify              * 00020900
*        ENV=STOKEN,STOKEN=stoken to schedule an SRB routine into the * 00021000
*        terminating address space as the Space Token (STOKEN) for    * 00021100
*        that address space may no longer be valid.                   * 00021200
*                                                                     * 00021300
*    o   DIE routines may not specify the following:                  * 00021400
*                                                                     * 00021500
*                                                                     * 00021600
*        -   PRIORITY=CURRENT, as a DIE routine does not have a       * 00021700
*            priority which can be inherited by the SRB routine.      * 00021800
*                                                                     * 00021900
*        -   SYNCH=YES, as the DIE routine does not own the thread    * 00022000
*            under which it receives control.                         * 00022100
*                                                                     * 00022200
*                                                                     * 00022300
*                                                                     * 00022400
*    o   BCP callers may not hold any lock higher than the VSMFIX     * 00022500
*        lock.                                                        * 00022600
*                                                                     * 00022700
*    o   Only system level SRBs may be created via IEAMSCHD.          * 00022800
*        Non-quiesceable SRBs will still require the use of the       * 00022900
*        SCHEDULE macro.                                              * 00023000
*                                                                     * 00023100
*    o   Even if invoking IEAMSCHD in AMODE 64, the parameter area    * 00023200
*        and any data pointed to by the parameter area must be below  * 00023300
*        2G.                                                          * 00023400
*                                                                     * 00023500
*                                                                     * 00023600
*                                                                     * 00023700
*01* SYNTAX:                                                          * 00023800
*                                                                     * 00023900
*Ýxlabel¨  IEAMSCHD     EPADDR=xepaddr                                * 00024000
*                    ÐÝ,ENV=HOME                                      * 00024100
*                    !   ÐÝ,PRIORITY=LOCAL¨                           * 00024200
*                    !   ÔÝ,PRIORITY=GLOBAL¨                          * 00024300
*                    !   ÔÝ,PRIORITY=CURRENT¨                         * 00024400
*                    !   ÔÝ,PRIORITY=PREEMPT                          * 00024500
*                    !   !    Ý,MINORPRIORITY=»xminorpriority!ZEROº¨  * 00024600
*                    !   !    Ý,SRBIDTOKEN=xsrbidtoken¨¨              * 00024700
*                    !   ÔÝ,PRIORITY=CLIENT                           * 00024800
*                    !   !     ,CLIENTSTOKEN=xclientstoken            * 00024900
*                    !   !    Ý,MINORPRIORITY=»xminorpriority!ZEROº¨  * 00025000
*                    !   !    Ý,SRBIDTOKEN=xsrbidtoken¨¨              * 00025100
*                    !   ¿Ý,PRIORITY=ENCLAVE                          * 00025200
*                    !         ,ENCLAVETOKEN=xenclavetoken            * 00025300
*                    !        Ý,MINORPRIORITY=»xminorpriority!ZEROº¨  * 00025400
*                    !        Ý,SRBIDTOKEN=xsrbidtoken¨¨              * 00025500
*                    !    Ý,DUALPOOLTOKEN=»xdualpooltoken!NOTOKENº¨¨  * 00025600
*                    ÔÝ,ENV=PRIMARY                                   * 00025700
*                    !   ÐÝ,PRIORITY=LOCAL¨                           * 00025800
*                    !   ÔÝ,PRIORITY=GLOBAL¨                          * 00025900
*                    !   ÔÝ,PRIORITY=CURRENT¨                         * 00026000
*                    !   ÔÝ,PRIORITY=PREEMPT                          * 00026100
*                    !   !    Ý,MINORPRIORITY=»xminorpriority!ZEROº¨  * 00026200
*                    !   !    Ý,SRBIDTOKEN=xsrbidtoken¨¨              * 00026300
*                    !   ÔÝ,PRIORITY=CLIENT                           * 00026400
*                    !   !     ,CLIENTSTOKEN=xclientstoken            * 00026500
*                    !   !    Ý,MINORPRIORITY=»xminorpriority!ZEROº¨  * 00026600
*                    !   !    Ý,SRBIDTOKEN=xsrbidtoken¨¨              * 00026700
*                    !   ¿Ý,PRIORITY=ENCLAVE                          * 00026800
*                    !         ,ENCLAVETOKEN=xenclavetoken            * 00026900
*                    !        Ý,MINORPRIORITY=»xminorpriority!ZEROº¨  * 00027000
*                    !        Ý,SRBIDTOKEN=xsrbidtoken¨¨              * 00027100
*                    !    Ý,DUALPOOLTOKEN=»xdualpooltoken!NOTOKENº¨¨  * 00027200
*                    ÔÝ,ENV=FULLXM                                    * 00027300
*                    !   ÐÝ,PRIORITY=LOCAL¨                           * 00027400
*                    !   ÔÝ,PRIORITY=GLOBAL¨                          * 00027500
*                    !   ÔÝ,PRIORITY=CURRENT¨                         * 00027600
*                    !   ÔÝ,PRIORITY=PREEMPT                          * 00027700
*                    !   !    Ý,MINORPRIORITY=»xminorpriority!ZEROº¨  * 00027800
*                    !   !    Ý,SRBIDTOKEN=xsrbidtoken¨¨              * 00027900
*                    !   ÔÝ,PRIORITY=CLIENT                           * 00028000
*                    !   !     ,CLIENTSTOKEN=xclientstoken            * 00028100
*                    !   !    Ý,MINORPRIORITY=»xminorpriority!ZEROº¨  * 00028200
*                    !   !    Ý,SRBIDTOKEN=xsrbidtoken¨¨              * 00028300
*                    !   ¿Ý,PRIORITY=ENCLAVE                          * 00028400
*                    !         ,ENCLAVETOKEN=xenclavetoken            * 00028500
*                    !        Ý,MINORPRIORITY=»xminorpriority!ZEROº¨  * 00028600
*                    !        Ý,SRBIDTOKEN=xsrbidtoken¨¨              * 00028700
*                    !    Ý,DUALPOOLTOKEN=»xdualpooltoken!NOTOKENº¨¨  * 00028800
*                    ¿Ý,ENV=STOKEN                                    * 00028900
*                          ,TARGETSTOKEN=xtargetstoken                * 00029000
*                        ÐÝ,PRIORITY=LOCAL¨                           * 00029100
*                        ÔÝ,PRIORITY=GLOBAL¨                          * 00029200
*                        ÔÝ,PRIORITY=CURRENT¨                         * 00029300
*                        ÔÝ,PRIORITY=PREEMPT                          * 00029400
*                        !    Ý,MINORPRIORITY=»xminorpriority!ZEROº¨  * 00029500
*                        !    Ý,SRBIDTOKEN=xsrbidtoken¨¨              * 00029600
*                        ÔÝ,PRIORITY=CLIENT                           * 00029700
*                        !     ,CLIENTSTOKEN=xclientstoken            * 00029800
*                        !    Ý,MINORPRIORITY=»xminorpriority!ZEROº¨  * 00029900
*                        !    Ý,SRBIDTOKEN=xsrbidtoken¨¨              * 00030000
*                        ¿Ý,PRIORITY=ENCLAVE                          * 00030100
*                              ,ENCLAVETOKEN=xenclavetoken            * 00030200
*                             Ý,MINORPRIORITY=»xminorpriority!ZEROº¨  * 00030300
*                             Ý,SRBIDTOKEN=xsrbidtoken¨¨              * 00030400
*                         Ý,DUALPOOLTOKEN=»xdualpooltoken!NOTOKENº¨¨  * 00030500
*                    ÐÝ,FEATURE=NONE¨                                 * 00030600
*                    ÔÝ,FEATURE=CRYPTO¨                               * 00030700
*                    ¿Ý,FEATURE=CPMASK                                * 00030800
*                          ,CPUMASK=xcpumask¨                         * 00030900
*                     Ý,FLAGS=»xflags!NO_FLAGSº¨                      * 00031000
*                     Ý,PARM=»xparm!ZEROº¨                            * 00031100
*                     Ý,FRRADDR=»xfrraddr!NOFRRº                      * 00031200
*                        ÐÝ,SDWALOC31=NO¨                             * 00031300
*                        ¿Ý,SDWALOC31=YES¨¨                           * 00031400
*                     Ý,KEYVALUE=»xkeyvalue!INVOKERKEYº¨              * 00031500
*                    ÐÝ,TRANSFER=NO¨                                  * 00031600
*                    ¿Ý,TRANSFER=YES¨                                 * 00031700
*                    ÐÝ,LLOCK=NO¨                                     * 00031800
*                    ¿Ý,LLOCK=YES¨                                    * 00031900
*                     Ý,RMTRADDR=»xrmtraddr!NORMTRº¨                  * 00032000
*                     Ý,PURGESTOKEN=»xpurgestoken!NOPSTOKENº          * 00032100
*                         Ý,PTCBADDR=»xptcbaddr!NOPTCBº¨¨             * 00032200
*                    ÐÝ,SYNCH=NO¨                                     * 00032300
*                    ¿Ý,SYNCH=YES                                     * 00032400
*                         Ý,SYNCHCOMPADDR=»xsynchcompaddr!NOVALUEº    * 00032500
*                              ,SYNCHCODEADDR                         * 00032600
*                                             =xsynchcodeaddr         * 00032700
*                              ,SYNCHRSNADDR                          * 00032800
*                                            =xsynchrsnaddr¨¨         * 00032900
*                     Ý,RETCODE=xretcode¨                             * 00033000
*                     Ý,PLISTVER=»xplistver!IMPLIED_VERSIONº¨         * 00033100
*                    ÐÝ,MF=S¨                                         * 00033200
*                    ÔÝ,MF=(L,xmfctrl»,xmfattr!0Dº)¨                  * 00033300
*                    ¿Ý,MF=(E,xmfctrl»,COMPLETEº)¨                    * 00033400
*                                                                     * 00033500
*                                                                     * 00033600
*      Where:                                                         * 00033700
*                                                                     * 00033800
*                                                                     * 00033900
*      Ýxlabel¨                                                       * 00034000
*          is an optional symbol, starting in column 1, that is the   * 00034100
*          name on the IEAMSCHD macro invocation.  The name must      * 00034200
*          conform to the rules for an ordinary assembler language    * 00034300
*          symbol.                                                    * 00034400
*          DEFAULT: No name.                                          * 00034500
*                                                                     * 00034600
*                                                                     * 00034700
*                                                                     * 00034800
*                                                                     * 00034900
*      EPADDR=xepaddr                                                 * 00035000
*          is the name (RS-type), or address in register (2)-(12), of * 00035100
*          a required 4 byte input that contains the address of the   * 00035200
*          SRB routine to be scheduled for asynchronous execution.    * 00035300
*          This routine will receive control in 31-bit AMODE.         * 00035400
*                                                                     * 00035500
*                                                                     * 00035600
*                                                                     * 00035700
*                                                                     * 00035800
*      ÝENV=»HOME!PRIMARY!FULLXM!STOKENº                              * 00035900
*          is an optional keyword input that specifies the addressing * 00036000
*          and cross memory environment in which the SRB routine is   * 00036100
*          to receive control.                                        * 00036200
*          DEFAULT: HOME                                              * 00036300
*                                                                     * 00036400
*                                                                     * 00036500
*          ÝENV=HOME                                                  * 00036600
*              specifies that the SRB routine is to receive control   * 00036700
*              in the current Home address space.  The SRB routine    * 00036800
*              will receive control in Supervisor State, Primary ASC  * 00036900
*              mode, enabled for I/O and External Interrupts, 31-bit  * 00037000
*              AMODE, and with PASID = SASID = HASID.                 * 00037100
*                                                                     * 00037200
*                                                                     * 00037300
*              ÝPRIORITY=»LOCAL!GLOBAL!CURRENT!PREEMPT!CLIENT!ENCLAVE * 00037400
*                  º¨                                                 * 00037500
*                  is an optional keyword input that specifies the    * 00037600
*                  priority at which the SRB routine will be          * 00037700
*                  dispatched and whether the SRB is to be preempted. * 00037800
*                  DEFAULT: LOCAL                                     * 00037900
*                                                                     * 00038000
*                                                                     * 00038100
*                  ÝPRIORITY=LOCAL¨                                   * 00038200
*                      specifies that the SRB routine will be         * 00038300
*                      assigned a major priority that is equal to     * 00038400
*                      that of the address space into which it was    * 00038500
*                      scheduled.  It will have a minor priority      * 00038600
*                      higher than any task or preemptable class SRB  * 00038700
*                      in that address space.  An SRB scheduled with  * 00038800
*                      PRIORITY = LOCAL is NONPREEMPTABLE.            * 00038900
*                                                                     * 00039000
*                  ÝPRIORITY=GLOBAL¨                                  * 00039100
*                      specifies that the SRB routine will be         * 00039200
*                      assigned a priority that is equal to that of   * 00039300
*                      the highest priority work in the system,       * 00039400
*                      regardless of which address space it was       * 00039500
*                      scheduled into.  An SRB scheduled with         * 00039600
*                      PRIORITY = GLOBAL is NONPREEMPTABLE.           * 00039700
*                                                                     * 00039800
*                  ÝPRIORITY=CURRENT¨                                 * 00039900
*                      specifies that the SRB routine is to inherit   * 00040000
*                      the priority and preemptability of the         * 00040100
*                      invoker.                                       * 00040200
*                                                                     * 00040300
*                      For invokers which are SRB routines, the SRB   * 00040400
*                      will inherit the invoker's PRIORITY options.   * 00040500
*                      For example, if a PRIORITY = LOCAL SRB routine * 00040600
*                      schedules another SRB with PRIORITY = CURRENT, * 00040700
*                      the new SRB routine will be scheduled as if    * 00040800
*                      PRIORITY = LOCAL was specified.  The new SRB   * 00040900
*                      routine will be nonpreemptable.  If an enclave * 00041000
*                      SRB routine schedules an SRB with PRIORITY =   * 00041100
*                      CURRENT, the new SRB routine will inherit the  * 00041200
*                      enclave parameters and be scheduled into the   * 00041300
*                      enclave.                                       * 00041400
*                                                                     * 00041500
*                      For task mode invokers, the SRB routine will   * 00041600
*                      inherit the home address space's major         * 00041700
*                      priority and the task's minor priority.  The   * 00041800
*                      SRB routine will be preemptable if the target  * 00041900
*                      address space is the same as the scheduler's   * 00042000
*                      Home address space and will be converted to a  * 00042100
*                      Client SRB otherwise.                          * 00042200
*                                                                     * 00042300
*                                                                     * 00042400
*                  ÝPRIORITY=PREEMPT                                  * 00042500
*                      specifies that the SRB routine is to inherit   * 00042600
*                      the major priority of the target home address  * 00042700
*                      space, i.e. the home address space specified   * 00042800
*                      on the ENV keyword.  An SRB routine that is    * 00042900
*                      scheduled with PRIORITY=PREEMPT is             * 00043000
*                      preemptable.                                   * 00043100
*                                                                     * 00043200
*                                                                     * 00043300
*                      ÝMINORPRIORITY=»xminorpriority!ZEROº¨          * 00043400
*                          is the name (RS-type), or address in       * 00043500
*                          register (2)-(12), of an optional 8 bit    * 00043600
*                          input containing the minor priority that   * 00043700
*                          the SRB routine is to be assigned.  SRB    * 00043800
*                          routines with higher minor priority are    * 00043900
*                          dispatched before preemptable-class SRB    * 00044000
*                          routines or tasks with lower minor         * 00044100
*                          priority in the same address space.  A     * 00044200
*                          minor priority of X'00' is the lowest and  * 00044300
*                          X'FF' is the highest.                      * 00044400
*                                                                     * 00044500
*                          The minor priority parameter gives the     * 00044600
*                          caller the ability to assign the SRB       * 00044700
*                          routine a priority that is comparable to a * 00044800
*                          task's dispatching priority in the address * 00044900
*                          space.  The caller may specify priorities  * 00045000
*                          for SRB routines such that they are        * 00045100
*                          dispatched before, intermixed with, or     * 00045200
*                          after tasks in the address space.          * 00045300
*                                                                     * 00045400
*                          A task's dispatching priority may be       * 00045500
*                          obtained by using the EXTRACT macro        * 00045600
*                          services.  To schedule an SRB routine with * 00045700
*                          a priority that is higher than a certain   * 00045800
*                          task's, the task's dispatching priority    * 00045900
*                          value should be obtained via the EXTRACT   * 00046000
*                          macro and then incremented.  Likewise, to  * 00046100
*                          schedule an SRB routine with a priority    * 00046200
*                          that is lower, decrement the value         * 00046300
*                          returned by the EXTRACT macro.             * 00046400
*                          DEFAULT: ZERO.  The minor priority will be * 00046500
*                          X'00'.                                     * 00046600
*                                                                     * 00046700
*                                                                     * 00046800
*                                                                     * 00046900
*                                                                     * 00047000
*                      ÝSRBIDTOKEN=xsrbidtoken¨¨                      * 00047100
*                          is the name (RS-type), or address in       * 00047200
*                          register (2)-(12), of an optional 16       * 00047300
*                          character output into which a token will   * 00047400
*                          be placed that can be used to identify the * 00047500
*                          SRB uniquely to the system.  This token    * 00047600
*                          can be used to request termination of the  * 00047700
*                          SRB via CALLRTM TYPE=SRBTERM.  The         * 00047800
*                          SRBIDTOKEN keyword may be used even if the * 00047900
*                          program runs on a release for which the    * 00048000
*                          support is not provided or a release on    * 00048100
*                          which the support is not installed.  If    * 00048200
*                          the program is running on a release that   * 00048300
*                          supports SRBIDTOKEN, the returned          * 00048400
*                          SRBIDTOKEN will have a non-zero value in   * 00048500
*                          the first eight bytes.  z/OS 2.1 is the    * 00048600
*                          first release in which this support can be * 00048700
*                          presumed to exist.                         * 00048800
*                                                                     * 00048900
*                                                                     * 00049000
*                                                                     * 00049100
*                  ÝPRIORITY=CLIENT                                   * 00049200
*                      specifies that the SRB routine is to inherit   * 00049300
*                      the major priority of the address space named  * 00049400
*                      by the STOKEN specified on the CLIENTSTOKEN    * 00049500
*                      keyword.  An SRB routine that is scheduled     * 00049600
*                      with PRIORITY=CLIENT is preemptable.  In       * 00049700
*                      addition, the CPU time used by this SRB will   * 00049800
*                      be accumulated in the address space specified  * 00049900
*                      by the clientstoken.                           * 00050000
*                                                                     * 00050100
*                                                                     * 00050200
*                      CLIENTSTOKEN=xclientstoken                     * 00050300
*                          is the name (RS-type), or address in       * 00050400
*                          register (2)-(12), of a required 64 bit    * 00050500
*                          input which contains the Space Token       * 00050600
*                          (STOKEN) of the address space where the    * 00050700
*                          CPU time utilized by the SRB is to be      * 00050800
*                          accumulated.  The SRB will also inherit    * 00050900
*                          the major priority of this address space.  * 00051000
*                                                                     * 00051100
*                                                                     * 00051200
*                                                                     * 00051300
*                                                                     * 00051400
*                      ÝMINORPRIORITY=»xminorpriority!ZEROº¨          * 00051500
*                          is the name (RS-type), or address in       * 00051600
*                          register (2)-(12), of an optional 8 bit    * 00051700
*                          input containing the minor priority that   * 00051800
*                          the SRB routine is to be assigned.  SRB    * 00051900
*                          routines with higher minor priority are    * 00052000
*                          dispatched before preemptable-class SRB    * 00052100
*                          routines or tasks with lower minor         * 00052200
*                          priority in the same address space.  A     * 00052300
*                          minor priority of X'00' is the lowest and  * 00052400
*                          X'FF' is the highest.                      * 00052500
*                                                                     * 00052600
*                          The minor priority parameter gives the     * 00052700
*                          caller the ability to assign the SRB       * 00052800
*                          routine a priority that is comparable to a * 00052900
*                          task's dispatching priority in the address * 00053000
*                          space.  The caller may specify priorities  * 00053100
*                          for SRB routines such that they are        * 00053200
*                          dispatched before, intermixed with, or     * 00053300
*                          after tasks in the address space.          * 00053400
*                                                                     * 00053500
*                          A task's dispatching priority may be       * 00053600
*                          obtained by using the EXTRACT macro        * 00053700
*                          services.  To schedule an SRB routine with * 00053800
*                          a priority that is higher than a certain   * 00053900
*                          task's, the task's dispatching priority    * 00054000
*                          value should be obtained via the EXTRACT   * 00054100
*                          macro and then incremented.  Likewise, to  * 00054200
*                          schedule an SRB routine with a priority    * 00054300
*                          that is lower, decrement the value         * 00054400
*                          returned by the EXTRACT macro.             * 00054500
*                          DEFAULT: ZERO.  The minor priority will be * 00054600
*                          X'00'.                                     * 00054700
*                                                                     * 00054800
*                                                                     * 00054900
*                                                                     * 00055000
*                                                                     * 00055100
*                      ÝSRBIDTOKEN=xsrbidtoken¨¨                      * 00055200
*                          is the name (RS-type), or address in       * 00055300
*                          register (2)-(12), of an optional 16       * 00055400
*                          character output into which a token will   * 00055500
*                          be placed that can be used to identify the * 00055600
*                          SRB uniquely to the system.  This token    * 00055700
*                          can be used to request termination of the  * 00055800
*                          SRB via CALLRTM TYPE=SRBTERM.  The         * 00055900
*                          SRBIDTOKEN keyword may be used even if the * 00056000
*                          program runs on a release for which the    * 00056100
*                          support is not provided or a release on    * 00056200
*                          which the support is not installed.  If    * 00056300
*                          the program is running on a release that   * 00056400
*                          supports SRBIDTOKEN, the returned          * 00056500
*                          SRBIDTOKEN will have a non-zero value in   * 00056600
*                          the first eight bytes.  z/OS 2.1 is the    * 00056700
*                          first release in which this support can be * 00056800
*                          presumed to exist.                         * 00056900
*                                                                     * 00057000
*                                                                     * 00057100
*                                                                     * 00057200
*                  ÝPRIORITY=ENCLAVE                                  * 00057300
*                      specifies that the SRB routine is to be        * 00057400
*                      scheduled into an enclave.  An SRB routine     * 00057500
*                      that is scheduled with PRIORITY=ENCLAVE is     * 00057600
*                      preemptable.  The SRB will inherit its major   * 00057700
*                      priority from the Enclave and any CPU time     * 00057800
*                      used will be accumulated in the Enclave.       * 00057900
*                                                                     * 00058000
*                                                                     * 00058100
*                      ENCLAVETOKEN=xenclavetoken                     * 00058200
*                          is the name (RS-type), or address in       * 00058300
*                          register (2)-(12), of a required 8         * 00058400
*                          character input which contains the enclave * 00058500
*                          token which represents the group of SRB    * 00058600
*                          routines whose resources are to be managed * 00058700
*                          as a group by the System Resource Manager  * 00058800
*                          (SRM).  The enclave token must be obtained * 00058900
*                          prior to scheduling the SRB routine and    * 00059000
*                          may be obtained via the IWMECREA macro.    * 00059100
*                                                                     * 00059200
*                                                                     * 00059300
*                                                                     * 00059400
*                                                                     * 00059500
*                      ÝMINORPRIORITY=»xminorpriority!ZEROº¨          * 00059600
*                          is the name (RS-type), or address in       * 00059700
*                          register (2)-(12), of an optional 8 bit    * 00059800
*                          input containing the minor priority that   * 00059900
*                          the SRB routine is to be assigned.  SRB    * 00060000
*                          routines with higher minor priority are    * 00060100
*                          dispatched before SRB routines or tasks    * 00060200
*                          with lower minor priority in the enclave.  * 00060300
*                          A minor priority of X'00' is the lowest    * 00060400
*                          and X'FF' is the highest.                  * 00060500
*                          DEFAULT: ZERO.  The minor priority will be * 00060600
*                          X'00'.                                     * 00060700
*                                                                     * 00060800
*                                                                     * 00060900
*                                                                     * 00061000
*                                                                     * 00061100
*                      ÝSRBIDTOKEN=xsrbidtoken¨¨                      * 00061200
*                          is the name (RS-type), or address in       * 00061300
*                          register (2)-(12), of an optional 16       * 00061400
*                          character output into which a token will   * 00061500
*                          be placed that can be used to identify the * 00061600
*                          SRB uniquely to the system.  This token    * 00061700
*                          can be used to request termination of the  * 00061800
*                          SRB via CALLRTM TYPE=SRBTERM.  The         * 00061900
*                          SRBIDTOKEN keyword may be used even if the * 00062000
*                          program runs on a release for which the    * 00062100
*                          support is not provided or a release on    * 00062200
*                          which the support is not installed.  If    * 00062300
*                          the program is running on a release that   * 00062400
*                          supports SRBIDTOKEN, the returned          * 00062500
*                          SRBIDTOKEN will have a non-zero value in   * 00062600
*                          the first eight bytes.  z/OS 2.1 is the    * 00062700
*                          first release in which this support can be * 00062800
*                          presumed to exist.                         * 00062900
*                                                                     * 00063000
*                                                                     * 00063100
*                                                                     * 00063200
*                                                                     * 00063300
*                                                                     * 00063400
*                                                                     * 00063500
*                                                                     * 00063600
*                                                                     * 00063700
*              ÝDUALPOOLTOKEN=»xdualpooltoken!NOTOKENº¨¨              * 00063800
*                  is the name (RS-type), or address in register      * 00063900
*                  (2)-(12), of an optional 16 character input which  * 00064000
*                  contains the token of the DU Access List pool from * 00064100
*                  which to obtain the DU-AL for the SRB.  This token * 00064200
*                  is the one returned from the DUALPOOLCREATE option * 00064300
*                  of the ALESERV macro.                              * 00064400
*                  DEFAULT: NOTOKEN  The SRB will receive control     * 00064500
*                  with the Basic Access list.                        * 00064600
*                                                                     * 00064700
*                                                                     * 00064800
*                                                                     * 00064900
*          ÝENV=PRIMARY                                               * 00065000
*              specifies that the SRB routine is to receive control   * 00065100
*              in the current Primary address space.  The SRB routine * 00065200
*              will receive control in Supervisor State, Primary ASC  * 00065300
*              mode, enabled for I/O and External Interrupts, 31-bit  * 00065400
*              AMODE, and with PASID = SASID = HASID.                 * 00065500
*                                                                     * 00065600
*                                                                     * 00065700
*              ÝPRIORITY=»LOCAL!GLOBAL!CURRENT!PREEMPT!CLIENT!ENCLAVE * 00065800
*                  º¨                                                 * 00065900
*                  is an optional keyword input that specifies the    * 00066000
*                  priority at which the SRB routine will be          * 00066100
*                  dispatched and whether the SRB is to be preempted. * 00066200
*                  DEFAULT: LOCAL                                     * 00066300
*                                                                     * 00066400
*                                                                     * 00066500
*                  ÝPRIORITY=LOCAL¨                                   * 00066600
*                      specifies that the SRB routine will be         * 00066700
*                      assigned a priority that is equal to that of   * 00066800
*                      the address space into which it was scheduled. * 00066900
*                      It will have a priority higher than any task   * 00067000
*                      or preemptable class SRB in that address       * 00067100
*                      space.  An SRB scheduled with PRIORITY = LOCAL * 00067200
*                      is NONPREEMPTABLE.                             * 00067300
*                                                                     * 00067400
*                  ÝPRIORITY=GLOBAL¨                                  * 00067500
*                      specifies that the SRB routine will be         * 00067600
*                      assigned a priority that is equal to that of   * 00067700
*                      the highest priority work in the system,       * 00067800
*                      regardless of which address space it was       * 00067900
*                      scheduled into.  An SRB scheduled with         * 00068000
*                      PRIORITY = GLOBAL is NONPREEMPTABLE.           * 00068100
*                                                                     * 00068200
*                  ÝPRIORITY=CURRENT¨                                 * 00068300
*                      specifies that the SRB routine is to inherit   * 00068400
*                      the priority and preemptability of the         * 00068500
*                      invoker.                                       * 00068600
*                                                                     * 00068700
*                      For invokers which are SRB routines, the SRB   * 00068800
*                      will inherit the invoker's PRIORITY options.   * 00068900
*                      For example, if a PRIORITY = LOCAL SRB routine * 00069000
*                      schedules another SRB with PRIORITY = CURRENT, * 00069100
*                      the new SRB routine will be scheduled as if    * 00069200
*                      PRIORITY = LOCAL was specified.  The new SRB   * 00069300
*                      routine will be nonpreemptable.  If an enclave * 00069400
*                      SRB routine schedules an SRB with PRIORITY =   * 00069500
*                      CURRENT, the new SRB routine will inherit the  * 00069600
*                      enclave parameters and be scheduled into the   * 00069700
*                      enclave.  For preemptable SRB mode invokers    * 00069800
*                      the new SRB will be premptable if the Home and * 00069900
*                      Primary address spaces are the same, otherwise * 00070000
*                      the new SRB will be converted to a Client SRB. * 00070100
*                                                                     * 00070200
*                      For task mode invokers, the SRB routine will   * 00070300
*                      inherit the home address space's major         * 00070400
*                      priority and the task's minor priority.  The   * 00070500
*                      SRB routine will be preemptable if the target  * 00070600
*                      address space is the same as the scheduler's   * 00070700
*                      Home address space and will be converted to a  * 00070800
*                      Client SRB otherwise.                          * 00070900
*                                                                     * 00071000
*                  ÝPRIORITY=PREEMPT                                  * 00071100
*                      specifies that the SRB routine is to inherit   * 00071200
*                      the major priority of the target home address  * 00071300
*                      space, i.e. the home address space specified   * 00071400
*                      on the ENV keyword.  An SRB routine that is    * 00071500
*                      scheduled with PRIORITY=PREEMPT is             * 00071600
*                      preemptable.                                   * 00071700
*                                                                     * 00071800
*                                                                     * 00071900
*                      ÝMINORPRIORITY=»xminorpriority!ZEROº¨          * 00072000
*                          is the name (RS-type), or address in       * 00072100
*                          register (2)-(12), of an optional 8 bit    * 00072200
*                          input containing the minor priority that   * 00072300
*                          the SRB routine is to be assigned.  SRB    * 00072400
*                          routines with higher minor priority are    * 00072500
*                          dispatched before preemptible-class SRB    * 00072600
*                          routines or tasks with lower minor         * 00072700
*                          priority in the same address space.  A     * 00072800
*                          minor priority of X'00' is the lowest and  * 00072900
*                          X'FF' is the highest.                      * 00073000
*                                                                     * 00073100
*                          The minor priority parameter gives the     * 00073200
*                          caller the ability to assign the SRB       * 00073300
*                          routine a priority that is comparable to a * 00073400
*                          task's dispatching priority in the address * 00073500
*                          space.  The caller may specify priorities  * 00073600
*                          for SRB routines such that they are        * 00073700
*                          dispatched before, intermixed with, or     * 00073800
*                          after tasks in the address space.          * 00073900
*                                                                     * 00074000
*                          A task's dispatching priority may be       * 00074100
*                          obtained by using the EXTRACT macro        * 00074200
*                          services.  To schedule an SRB routine with * 00074300
*                          a priority that is higher than a certain   * 00074400
*                          task's, the task's dispatching priority    * 00074500
*                          value should be obtained via the EXTRACT   * 00074600
*                          macro and then incremented.  Likewise, to  * 00074700
*                          schedule an SRB routine with a priority    * 00074800
*                          that is lower, decrement the value         * 00074900
*                          returned by the EXTRACT macro.             * 00075000
*                          DEFAULT: ZERO.  The minor priority will be * 00075100
*                          X'00'.                                     * 00075200
*                                                                     * 00075300
*                                                                     * 00075400
*                                                                     * 00075500
*                                                                     * 00075600
*                      ÝSRBIDTOKEN=xsrbidtoken¨¨                      * 00075700
*                          is the name (RS-type), or address in       * 00075800
*                          register (2)-(12), of an optional 16       * 00075900
*                          character output into which a token will   * 00076000
*                          be placed that can be used to identify the * 00076100
*                          SRB uniquely to the system.  This token    * 00076200
*                          can be used to request termination of the  * 00076300
*                          SRB via CALLRTM TYPE=SRBTERM.  The         * 00076400
*                          SRBIDTOKEN keyword may be used even if the * 00076500
*                          program runs on a release for which the    * 00076600
*                          support is not provided or a release on    * 00076700
*                          which the support is not installed.  If    * 00076800
*                          the program is running on a release that   * 00076900
*                          supports SRBIDTOKEN, the returned          * 00077000
*                          SRBIDTOKEN will have a non-zero value in   * 00077100
*                          the first eight bytes.  z/OS 2.1 is the    * 00077200
*                          first release in which this support can be * 00077300
*                          presumed to exist.                         * 00077400
*                                                                     * 00077500
*                                                                     * 00077600
*                                                                     * 00077700
*                  ÝPRIORITY=CLIENT                                   * 00077800
*                      specifies that the SRB routine is to inherit   * 00077900
*                      the major priority of the address space named  * 00078000
*                      by the STOKEN specified on the CLIENTSTOKEN    * 00078100
*                      keyword.  An SRB routine that is scheduled     * 00078200
*                      with PRIORITY=CLIENT is preemptable.  In       * 00078300
*                      addition, the CPU time used by this SRB will   * 00078400
*                      be accumulated in the address space specified  * 00078500
*                      by the clientstoken.                           * 00078600
*                                                                     * 00078700
*                                                                     * 00078800
*                      CLIENTSTOKEN=xclientstoken                     * 00078900
*                          is the name (RS-type), or address in       * 00079000
*                          register (2)-(12), of a required 64 bit    * 00079100
*                          input which contains the Space Token       * 00079200
*                          (STOKEN) of the address space where the    * 00079300
*                          CPU time utilized by the SRB is to be      * 00079400
*                          accumulated.  The SRB will also inheirit   * 00079500
*                          the major priority of this address space.  * 00079600
*                                                                     * 00079700
*                                                                     * 00079800
*                                                                     * 00079900
*                                                                     * 00080000
*                      ÝMINORPRIORITY=»xminorpriority!ZEROº¨          * 00080100
*                          is the name (RS-type), or address in       * 00080200
*                          register (2)-(12), of an optional 8 bit    * 00080300
*                          input containing the minor priority that   * 00080400
*                          the SRB routine is to be assigned.  SRB    * 00080500
*                          routines with higher minor priority are    * 00080600
*                          dispatched before preemptable-class SRB    * 00080700
*                          routines or tasks with lower minor         * 00080800
*                          priority in the same address space.  A     * 00080900
*                          minor priority of X'00' is the lowest and  * 00081000
*                          X'FF' is the highest.                      * 00081100
*                                                                     * 00081200
*                          The minor priority parameter gives the     * 00081300
*                          caller the ability to assign the SRB       * 00081400
*                          routine a priority that is comparable to a * 00081500
*                          task's dispatching priority in the address * 00081600
*                          space.  The caller may specify priorities  * 00081700
*                          for SRB routines such that they are        * 00081800
*                          dispatched before, intermixed with, or     * 00081900
*                          after tasks in the address space.          * 00082000
*                                                                     * 00082100
*                          A task's dispatching priority may be       * 00082200
*                          obtained by using the EXTRACT macro        * 00082300
*                          services.  To schedule an SRB routine with * 00082400
*                          a priority that is higher than a certain   * 00082500
*                          task's, the task's dispatching priority    * 00082600
*                          value should be obtained via the EXTRACT   * 00082700
*                          macro and then incremented.  Likewise, to  * 00082800
*                          schedule an SRB routine with a priority    * 00082900
*                          that is lower, decrement the value         * 00083000
*                          returned by the EXTRACT macro.             * 00083100
*                          DEFAULT: ZERO.  The minor priority will be * 00083200
*                          X'00'.                                     * 00083300
*                                                                     * 00083400
*                                                                     * 00083500
*                                                                     * 00083600
*                                                                     * 00083700
*                      ÝSRBIDTOKEN=xsrbidtoken¨¨                      * 00083800
*                          is the name (RS-type), or address in       * 00083900
*                          register (2)-(12), of an optional 16       * 00084000
*                          character output into which a token will   * 00084100
*                          be placed that can be used to identify the * 00084200
*                          SRB uniquely to the system.  This token    * 00084300
*                          can be used to request termination of the  * 00084400
*                          SRB via CALLRTM TYPE=SRBTERM.  The         * 00084500
*                          SRBIDTOKEN keyword may be used even if the * 00084600
*                          program runs on a release for which the    * 00084700
*                          support is not provided or a release on    * 00084800
*                          which the support is not installed.  If    * 00084900
*                          the program is running on a release that   * 00085000
*                          supports SRBIDTOKEN, the returned          * 00085100
*                          SRBIDTOKEN will have a non-zero value in   * 00085200
*                          the first eight bytes.  z/OS 2.1 is the    * 00085300
*                          first release in which this support can be * 00085400
*                          presumed to exist.                         * 00085500
*                                                                     * 00085600
*                                                                     * 00085700
*                                                                     * 00085800
*                  ÝPRIORITY=ENCLAVE                                  * 00085900
*                      specifies that the SRB routine is to be        * 00086000
*                      scheduled into an enclave.  An SRB routine     * 00086100
*                      that is scheduled with PRIORITY=ENCLAVE is     * 00086200
*                      preemptable.  The SRB will inherit its major   * 00086300
*                      priority from the Enclave and any CPU time     * 00086400
*                      used will be accumulated in the Enclave.       * 00086500
*                                                                     * 00086600
*                                                                     * 00086700
*                      ENCLAVETOKEN=xenclavetoken                     * 00086800
*                          is the name (RS-type), or address in       * 00086900
*                          register (2)-(12), of a required 8         * 00087000
*                          character input which contains the enclave * 00087100
*                          token which represents the group of SRB    * 00087200
*                          routines whose resources are to be managed * 00087300
*                          as a group by the System Resource Manager  * 00087400
*                          (SRM).  The enclave token must be obtained * 00087500
*                          prior to scheduling the SRB routine and    * 00087600
*                          may be obtained via the IWMECREA macro.    * 00087700
*                                                                     * 00087800
*                                                                     * 00087900
*                                                                     * 00088000
*                                                                     * 00088100
*                      ÝMINORPRIORITY=»xminorpriority!ZEROº¨          * 00088200
*                          is the name (RS-type), or address in       * 00088300
*                          register (2)-(12), of an optional 8 bit    * 00088400
*                          input containing the minor priority that   * 00088500
*                          the SRB routine is to be assigned.  SRB    * 00088600
*                          routines with higher minor priority are    * 00088700
*                          dispatched before SRB routines or tasks    * 00088800
*                          with lower minor priority in the enclave.  * 00088900
*                          A minor priority of X'00' is the lowest    * 00089000
*                          and X'FF' is the highest.                  * 00089100
*                          DEFAULT: ZERO.  The minor priority will be * 00089200
*                          X'00'.                                     * 00089300
*                                                                     * 00089400
*                                                                     * 00089500
*                                                                     * 00089600
*                                                                     * 00089700
*                      ÝSRBIDTOKEN=xsrbidtoken¨¨                      * 00089800
*                          is the name (RS-type), or address in       * 00089900
*                          register (2)-(12), of an optional 16       * 00090000
*                          character output into which a token will   * 00090100
*                          be placed that can be used to identify the * 00090200
*                          SRB uniquely to the system.  This token    * 00090300
*                          can be used to request termination of the  * 00090400
*                          SRB via CALLRTM TYPE=SRBTERM.  The         * 00090500
*                          SRBIDTOKEN keyword may be used even if the * 00090600
*                          program runs on a release for which the    * 00090700
*                          support is not provided or a release on    * 00090800
*                          which the support is not installed.  If    * 00090900
*                          the program is running on a release that   * 00091000
*                          supports SRBIDTOKEN, the returned          * 00091100
*                          SRBIDTOKEN will have a non-zero value in   * 00091200
*                          the first eight bytes.  z/OS 2.1 is the    * 00091300
*                          first release in which this support can be * 00091400
*                          presumed to exist.                         * 00091500
*                                                                     * 00091600
*                                                                     * 00091700
*                                                                     * 00091800
*                                                                     * 00091900
*                                                                     * 00092000
*                                                                     * 00092100
*                                                                     * 00092200
*                                                                     * 00092300
*              ÝDUALPOOLTOKEN=»xdualpooltoken!NOTOKENº¨¨              * 00092400
*                  is the name (RS-type), or address in register      * 00092500
*                  (2)-(12), of an optional 16 character input which  * 00092600
*                  contains the token of the DU Access List pool from * 00092700
*                  which to obtain the DU-AL for the SRB.  This token * 00092800
*                  is the one returned from the DUALPOOLCREATE option * 00092900
*                  of the ALESERV macro.                              * 00093000
*                  DEFAULT: NOTOKEN  The SRB will receive control     * 00093100
*                  with the Basic Access list.                        * 00093200
*                                                                     * 00093300
*                                                                     * 00093400
*                                                                     * 00093500
*          ÝENV=FULLXM                                                * 00093600
*              specifies that the SRB routine is to receive control   * 00093700
*              in the current Home address space with a copy of the   * 00093800
*              invoker's Dispatchable Unit-Access List (DU-AL).  This * 00093900
*              provides the SRB routine with addressability to the    * 00094000
*              same address spaces and data spaces as the invoker.    * 00094100
*              If DUALPOOLTOKEN is specified then the SRB routine     * 00094200
*              will receive control instead with a DU-Access List     * 00094300
*              from the the DU_AL pool.  In either case, the SRB      * 00094400
*              routine will receive control in Supervisor State,      * 00094500
*              Primary ASC mode, enabled for I/O and External         * 00094600
*              Interrupts, 31-bit AMODE, and with the same PASID,     * 00094700
*              SASID, and HASID as at the time of invocation of the   * 00094800
*              IEAMSCHD macro.                                        * 00094900
*                                                                     * 00095000
*                                                                     * 00095100
*              ÝPRIORITY=»LOCAL!GLOBAL!CURRENT!PREEMPT!CLIENT!ENCLAVE * 00095200
*                  º¨                                                 * 00095300
*                  is an optional keyword input that specifies the    * 00095400
*                  priority at which the SRB routine will be          * 00095500
*                  dispatched and whether the SRB is to be preempted. * 00095600
*                  DEFAULT: LOCAL                                     * 00095700
*                                                                     * 00095800
*                                                                     * 00095900
*                  ÝPRIORITY=LOCAL¨                                   * 00096000
*                      specifies that the SRB routine will be         * 00096100
*                      assigned a priority that is equal to that of   * 00096200
*                      the address space into which it was scheduled. * 00096300
*                      It will have a priority higher than any task   * 00096400
*                      or preemptable class SRB in that address       * 00096500
*                      space.  An SRB scheduled with PRIORITY = LOCAL * 00096600
*                      is NONPREEMPTABLE.                             * 00096700
*                                                                     * 00096800
*                  ÝPRIORITY=GLOBAL¨                                  * 00096900
*                      specifies that the SRB routine will be         * 00097000
*                      assigned a priority that is equal to that of   * 00097100
*                      the highest priority work in the system,       * 00097200
*                      regardless of which address space it was       * 00097300
*                      scheduled into.  An SRB scheduled with         * 00097400
*                      PRIORITY = GLOBAL is NONPREEMPTABLE.           * 00097500
*                                                                     * 00097600
*                  ÝPRIORITY=CURRENT¨                                 * 00097700
*                      specifies that the SRB routine is to inherit   * 00097800
*                      the priority and preemptability of the         * 00097900
*                      invoker.                                       * 00098000
*                                                                     * 00098100
*                      For invokers which are SRB routines, the SRB   * 00098200
*                      will inherit the invoker's PRIORITY options.   * 00098300
*                      For example, if a PRIORITY = LOCAL SRB routine * 00098400
*                      schedules another SRB with PRIORITY = CURRENT, * 00098500
*                      the new SRB routine will be scheduled as if    * 00098600
*                      PRIORITY = LOCAL was specified.  The new SRB   * 00098700
*                      routine will be nonpreemptable.  If an enclave * 00098800
*                      SRB routine schedules an SRB with PRIORITY =   * 00098900
*                      CURRENT, the new SRB routine will inherit the  * 00099000
*                      enclave parameters and be scheduled into the   * 00099100
*                      enclave.  For preemptable SRB mode invokers    * 00099200
*                      the new SRB will be premptable if the Home and * 00099300
*                      target address spaces are the same, otherwise  * 00099400
*                      the new SRB will be converted to a Client SRB. * 00099500
*                                                                     * 00099600
*                      For task mode invokers, the SRB routine will   * 00099700
*                      inherit the home address space's major         * 00099800
*                      priority and the task's minor priority.  The   * 00099900
*                      SRB routine will be preemptable if the target  * 00100000
*                      address space is the same as the scheduler's   * 00100100
*                      Home address space and will be converted to a  * 00100200
*                      Client SRB otherwise.                          * 00100300
*                                                                     * 00100400
*                  ÝPRIORITY=PREEMPT                                  * 00100500
*                      specifies that the SRB routine is to inherit   * 00100600
*                      the major priority of the target home address  * 00100700
*                      space, i.e. the home address space specified   * 00100800
*                      on the ENV keyword.  An SRB routine that is    * 00100900
*                      scheduled with PRIORITY=PREEMPT is             * 00101000
*                      preemptable.                                   * 00101100
*                                                                     * 00101200
*                                                                     * 00101300
*                      ÝMINORPRIORITY=»xminorpriority!ZEROº¨          * 00101400
*                          is the name (RS-type), or address in       * 00101500
*                          register (2)-(12), of an optional 8 bit    * 00101600
*                          input containing the minor priority that   * 00101700
*                          the SRB routine is to be assigned.  SRB    * 00101800
*                          routines with higher minor priority are    * 00101900
*                          dispatched before preemptable-class SRB    * 00102000
*                          routines or tasks with lower minor         * 00102100
*                          priority in the same address space.  A     * 00102200
*                          minor priority of X'00' is the lowest and  * 00102300
*                          X'FF' is the highest.                      * 00102400
*                                                                     * 00102500
*                          The minor priority parameter gives the     * 00102600
*                          caller the ability to assign the SRB       * 00102700
*                          routine a priority that is comparable to a * 00102800
*                          task's dispatching priority in the address * 00102900
*                          space.  The caller may specify priorities  * 00103000
*                          for SRB routines such that they are        * 00103100
*                          dispatched before, intermixed with, or     * 00103200
*                          after tasks in the address space.          * 00103300
*                                                                     * 00103400
*                          A task's dispatching priority may be       * 00103500
*                          obtained by using the EXTRACT macro        * 00103600
*                          services.  To schedule an SRB routine with * 00103700
*                          a priority that is higher than a certain   * 00103800
*                          task's, the task's dispatching priority    * 00103900
*                          value should be obtained via the EXTRACT   * 00104000
*                          macro and then incremented.  Likewise, to  * 00104100
*                          schedule an SRB routine with a priority    * 00104200
*                          that is lower, decrement the value         * 00104300
*                          returned by the EXTRACT macro.             * 00104400
*                          DEFAULT: ZERO.  The minor priority will be * 00104500
*                          X'00'.                                     * 00104600
*                                                                     * 00104700
*                                                                     * 00104800
*                                                                     * 00104900
*                                                                     * 00105000
*                      ÝSRBIDTOKEN=xsrbidtoken¨¨                      * 00105100
*                          is the name (RS-type), or address in       * 00105200
*                          register (2)-(12), of an optional 16       * 00105300
*                          character output into which a token will   * 00105400
*                          be placed that can be used to identify the * 00105500
*                          SRB uniquely to the system.  This token    * 00105600
*                          can be used to request termination of the  * 00105700
*                          SRB via CALLRTM TYPE=SRBTERM.  The         * 00105800
*                          SRBIDTOKEN keyword may be used even if the * 00105900
*                          program runs on a release for which the    * 00106000
*                          support is not provided or a release on    * 00106100
*                          which the support is not installed.  If    * 00106200
*                          the program is running on a release that   * 00106300
*                          supports SRBIDTOKEN, the returned          * 00106400
*                          SRBIDTOKEN will have a non-zero value in   * 00106500
*                          the first eight bytes.  z/OS 2.1 is the    * 00106600
*                          first release in which this support can be * 00106700
*                          presumed to exist.                         * 00106800
*                                                                     * 00106900
*                                                                     * 00107000
*                                                                     * 00107100
*                  ÝPRIORITY=CLIENT                                   * 00107200
*                      specifies that the SRB routine is to inherit   * 00107300
*                      the major priority of the address space named  * 00107400
*                      by the STOKEN specified on the CLIENTSTOKEN    * 00107500
*                      keyword.  An SRB routine that is scheduled     * 00107600
*                      with PRIORITY=CLIENT is preemptable.  In       * 00107700
*                      addition, the CPU time used by this SRB will   * 00107800
*                      be accumulated in the address space specified  * 00107900
*                      by the clientstoken.                           * 00108000
*                                                                     * 00108100
*                                                                     * 00108200
*                      CLIENTSTOKEN=xclientstoken                     * 00108300
*                          is the name (RS-type), or address in       * 00108400
*                          register (2)-(12), of a required 64 bit    * 00108500
*                          input which contains the Space Token       * 00108600
*                          (STOKEN) of the address space where the    * 00108700
*                          CPU time utilized by the SRB is to be      * 00108800
*                          accumulated.  The SRB will also inheirit   * 00108900
*                          the major priority of this address space.  * 00109000
*                                                                     * 00109100
*                                                                     * 00109200
*                                                                     * 00109300
*                                                                     * 00109400
*                      ÝMINORPRIORITY=»xminorpriority!ZEROº¨          * 00109500
*                          is the name (RS-type), or address in       * 00109600
*                          register (2)-(12), of an optional 8 bit    * 00109700
*                          input containing the minor priority that   * 00109800
*                          the SRB routine is to be assigned.  SRB    * 00109900
*                          routines with higher minor priority are    * 00110000
*                          dispatched before preemptable-class SRB    * 00110100
*                          routines or tasks with lower minor         * 00110200
*                          priority in the same address space.  A     * 00110300
*                          minor priority of X'00' is the lowest and  * 00110400
*                          X'FF' is the highest.                      * 00110500
*                                                                     * 00110600
*                          The minor priority parameter gives the     * 00110700
*                          caller the ability to assign the SRB       * 00110800
*                          routine a priority that is comparable to a * 00110900
*                          task's dispatching priority in the address * 00111000
*                          space.  The caller may specify priorities  * 00111100
*                          for SRB routines such that they are        * 00111200
*                          dispatched before, intermixed with, or     * 00111300
*                          after tasks in the address space.          * 00111400
*                                                                     * 00111500
*                          A task's dispatching priority may be       * 00111600
*                          obtained by using the EXTRACT macro        * 00111700
*                          services.  To schedule an SRB routine with * 00111800
*                          a priority that is higher than a certain   * 00111900
*                          task's, the task's dispatching priority    * 00112000
*                          value should be obtained via the EXTRACT   * 00112100
*                          macro and then incremented.  Likewise, to  * 00112200
*                          schedule an SRB routine with a priority    * 00112300
*                          that is lower, decrement the value         * 00112400
*                          returned by the EXTRACT macro.             * 00112500
*                          DEFAULT: ZERO.  The minor priority will be * 00112600
*                          X'00'.                                     * 00112700
*                                                                     * 00112800
*                                                                     * 00112900
*                                                                     * 00113000
*                                                                     * 00113100
*                      ÝSRBIDTOKEN=xsrbidtoken¨¨                      * 00113200
*                          is the name (RS-type), or address in       * 00113300
*                          register (2)-(12), of an optional 16       * 00113400
*                          character output into which a token will   * 00113500
*                          be placed that can be used to identify the * 00113600
*                          SRB uniquely to the system.  This token    * 00113700
*                          can be used to request termination of the  * 00113800
*                          SRB via CALLRTM TYPE=SRBTERM.  The         * 00113900
*                          SRBIDTOKEN keyword may be used even if the * 00114000
*                          program runs on a release for which the    * 00114100
*                          support is not provided or a release on    * 00114200
*                          which the support is not installed.  If    * 00114300
*                          the program is running on a release that   * 00114400
*                          supports SRBIDTOKEN, the returned          * 00114500
*                          SRBIDTOKEN will have a non-zero value in   * 00114600
*                          the first eight bytes.  z/OS 2.1 is the    * 00114700
*                          first release in which this support can be * 00114800
*                          presumed to exist.                         * 00114900
*                                                                     * 00115000
*                                                                     * 00115100
*                                                                     * 00115200
*                  ÝPRIORITY=ENCLAVE                                  * 00115300
*                      specifies that the SRB routine is to be        * 00115400
*                      scheduled into an enclave.  An SRB routine     * 00115500
*                      that is scheduled with PRIORITY=ENCLAVE is     * 00115600
*                      preemptable.  The SRB will inherit its major   * 00115700
*                      priority from the e Enclave and any CPU time   * 00115800
*                      used will be accumulated in the Enclave.       * 00115900
*                                                                     * 00116000
*                                                                     * 00116100
*                      ENCLAVETOKEN=xenclavetoken                     * 00116200
*                          is the name (RS-type), or address in       * 00116300
*                          register (2)-(12), of a required 8         * 00116400
*                          character input which contains the enclave * 00116500
*                          token which represents the group of SRB    * 00116600
*                          routines whose resources are to be managed * 00116700
*                          as a group by the System Resource Manager  * 00116800
*                          (SRM).  The enclave token must be obtained * 00116900
*                          prior to scheduling the SRB routine and    * 00117000
*                          may be obtained via the IWMECREA macro.    * 00117100
*                                                                     * 00117200
*                                                                     * 00117300
*                                                                     * 00117400
*                                                                     * 00117500
*                      ÝMINORPRIORITY=»xminorpriority!ZEROº¨          * 00117600
*                          is the name (RS-type), or address in       * 00117700
*                          register (2)-(12), of an optional 8 bit    * 00117800
*                          input containing the minor priority that   * 00117900
*                          the SRB routine is to be assigned.  SRB    * 00118000
*                          routines with higher minor priority are    * 00118100
*                          dispatched before SRB routines or tasks    * 00118200
*                          with lower minor priority in the enclave.  * 00118300
*                          A minor priority of X'00' is the lowest    * 00118400
*                          and X'FF' is the highest.                  * 00118500
*                          DEFAULT: ZERO.  The minor priority will be * 00118600
*                          X'00'.                                     * 00118700
*                                                                     * 00118800
*                                                                     * 00118900
*                                                                     * 00119000
*                                                                     * 00119100
*                      ÝSRBIDTOKEN=xsrbidtoken¨¨                      * 00119200
*                          is the name (RS-type), or address in       * 00119300
*                          register (2)-(12), of an optional 16       * 00119400
*                          character output into which a token will   * 00119500
*                          be placed that can be used to identify the * 00119600
*                          SRB uniquely to the system.  This token    * 00119700
*                          can be used to request termination of the  * 00119800
*                          SRB via CALLRTM TYPE=SRBTERM.  The         * 00119900
*                          SRBIDTOKEN keyword may be used even if the * 00120000
*                          program runs on a release for which the    * 00120100
*                          support is not provided or a release on    * 00120200
*                          which the support is not installed.  If    * 00120300
*                          the program is running on a release that   * 00120400
*                          supports SRBIDTOKEN, the returned          * 00120500
*                          SRBIDTOKEN will have a non-zero value in   * 00120600
*                          the first eight bytes.  z/OS 2.1 is the    * 00120700
*                          first release in which this support can be * 00120800
*                          presumed to exist.                         * 00120900
*                                                                     * 00121000
*                                                                     * 00121100
*                                                                     * 00121200
*                                                                     * 00121300
*                                                                     * 00121400
*                                                                     * 00121500
*                                                                     * 00121600
*                                                                     * 00121700
*              ÝDUALPOOLTOKEN=»xdualpooltoken!NOTOKENº¨¨              * 00121800
*                  is the name (RS-type), or address in register      * 00121900
*                  (2)-(12), of an optional 16 character input which  * 00122000
*                  contains the token of the DU Access List pool from * 00122100
*                  which to obtain the DU-AL for the SRB.  This token * 00122200
*                  is the one returned from the DUALPOOLCREATE option * 00122300
*                  of the ALESERV macro.                              * 00122400
*                  DEFAULT: NOTOKEN  The SRB will receive control     * 00122500
*                  with a copy of the invoker's Dispatchable          * 00122600
*                  Unit-Access List (DU-AL).                          * 00122700
*                                                                     * 00122800
*                                                                     * 00122900
*                                                                     * 00123000
*          ÝENV=STOKEN                                                * 00123100
*              specifies that the SRB routine is to receive control   * 00123200
*              in the address space specified by the supplied         * 00123300
*              TARGETSTOKEN.  The SRB routine will receive control in * 00123400
*              Supervisor State, Primary ASC mode, enabled for I/O    * 00123500
*              and External Interrupts, 31-bit AMODE, and with PASID  * 00123600
*              = SASID = HASID.                                       * 00123700
*                                                                     * 00123800
*              The STOKEN option also provides some environmental     * 00123900
*              checking.  If the TARGETSTOKEN no longer represents a  * 00124000
*              valid address space, the caller will receive a return  * 00124100
*              code X'0010' from the IEAMSCHD service.  If the        * 00124200
*              TARGETSTOKEN passed was invalid, the caller will       * 00124300
*              receive an X'AC7' ABEND reason code X'00080001'.       * 00124400
*                                                                     * 00124500
*                                                                     * 00124600
*              TARGETSTOKEN=xtargetstoken                             * 00124700
*                  is the name (RS-type), or address in register      * 00124800
*                  (2)-(12), of a required 64 bit input which         * 00124900
*                  contains the Space Token (STOKEN) of the address   * 00125000
*                  space in which the SRB routine is to receive       * 00125100
*                  control.                                           * 00125200
*                                                                     * 00125300
*                                                                     * 00125400
*                                                                     * 00125500
*                                                                     * 00125600
*              ÝPRIORITY=»LOCAL!GLOBAL!CURRENT!PREEMPT!CLIENT!ENCLAVE * 00125700
*                  º¨¨                                                * 00125800
*                  is an optional keyword input that specifies the    * 00125900
*                  priority at which the SRB routine will be          * 00126000
*                  dispatched and whether the SRB is to be preempted. * 00126100
*                  DEFAULT: LOCAL                                     * 00126200
*                                                                     * 00126300
*                                                                     * 00126400
*                  ÝPRIORITY=LOCAL¨                                   * 00126500
*                      specifies that the SRB routine will be         * 00126600
*                      assigned a priority that is equal to that of   * 00126700
*                      the address space into which it was scheduled. * 00126800
*                      It will have a priority higher than any task   * 00126900
*                      or preemptable class SRB in that address       * 00127000
*                      space.  An SRB scheduled with PRIORITY = LOCAL * 00127100
*                      is NONPREEMPTABLE.                             * 00127200
*                                                                     * 00127300
*                  ÝPRIORITY=GLOBAL¨                                  * 00127400
*                      specifies that the SRB routine will be         * 00127500
*                      assigned a priority that is equal to that of   * 00127600
*                      the highest priority work in the system,       * 00127700
*                      regardless of which address space it was       * 00127800
*                      scheduled into.  An SRB scheduled with         * 00127900
*                      PRIORITY = GLOBAL is NONPREEMPTABLE.           * 00128000
*                                                                     * 00128100
*                  ÝPRIORITY=CURRENT¨                                 * 00128200
*                      specifies that the SRB routine is to inherit   * 00128300
*                      the priority and preemptability of the         * 00128400
*                      invoker.                                       * 00128500
*                                                                     * 00128600
*                      For invokers which are SRB routines, the SRB   * 00128700
*                      will inherit the invoker's PRIORITY options.   * 00128800
*                      For example, if a PRIORITY = LOCAL SRB routine * 00128900
*                      schedules another SRB with PRIORITY = CURRENT, * 00129000
*                      the new SRB routine will be scheduled as if    * 00129100
*                      PRIORITY = LOCAL was specified.  The new SRB   * 00129200
*                      routine will be nonpreemptable.  If an enclave * 00129300
*                      SRB routine schedules an SRB with PRIORITY =   * 00129400
*                      CURRENT, the new SRB routine will inherit the  * 00129500
*                      enclave parameters and be scheduled into the   * 00129600
*                      enclave.  For preemptable SRB mode invokers    * 00129700
*                      the new SRB will be premptable if the Home and * 00129800
*                      target address spaces are the same, otherwise  * 00129900
*                      the new SRB will be converted to a Client SRB. * 00130000
*                                                                     * 00130100
*                      For task mode invokers, the SRB routine will   * 00130200
*                      inherit the home address space's major         * 00130300
*                      priority and the task's minor priority.  The   * 00130400
*                      SRB routine will be preemptable if the target  * 00130500
*                      address space is the same as the scheduler's   * 00130600
*                      Home address space and will be converted to a  * 00130700
*                      Client SRB otherwise.                          * 00130800
*                                                                     * 00130900
*                  ÝPRIORITY=PREEMPT                                  * 00131000
*                      specifies that the SRB routine is to inherit   * 00131100
*                      the major priority of the target home address  * 00131200
*                      space, i.e. the home address space specified   * 00131300
*                      on the ENV keyword.  An SRB routine that is    * 00131400
*                      scheduled with PRIORITY=PREEMPT is             * 00131500
*                      preemptable.                                   * 00131600
*                                                                     * 00131700
*                                                                     * 00131800
*                      ÝMINORPRIORITY=»xminorpriority!ZEROº¨          * 00131900
*                          is the name (RS-type), or address in       * 00132000
*                          register (2)-(12), of an optional 8 bit    * 00132100
*                          input containing the minor priority that   * 00132200
*                          the SRB routine is to be assigned.  SRB    * 00132300
*                          routines with higher minor priority are    * 00132400
*                          dispatched before preemptable-class SRB    * 00132500
*                          routines or tasks with lower minor         * 00132600
*                          priority in the same address space.  A     * 00132700
*                          minor priority of X'00' is the lowest and  * 00132800
*                          X'FF' is the highest.                      * 00132900
*                                                                     * 00133000
*                          The minor priority parameter gives the     * 00133100
*                          caller the ability to assign the SRB       * 00133200
*                          routine a priority that is comparable to a * 00133300
*                          task's dispatching priority in the address * 00133400
*                          space.  The caller may specify priorities  * 00133500
*                          for SRB routines such that they are        * 00133600
*                          dispatched before, intermixed with, or     * 00133700
*                          after tasks in the address space.          * 00133800
*                                                                     * 00133900
*                          A task's dispatching priority may be       * 00134000
*                          obtained by using the EXTRACT macro        * 00134100
*                          services.  To schedule an SRB routine with * 00134200
*                          a priority that is higher than a certain   * 00134300
*                          task's, the task's dispatching priority    * 00134400
*                          value should be obtained via the EXTRACT   * 00134500
*                          macro and then incremented.  Likewise, to  * 00134600
*                          schedule an SRB routine with a priority    * 00134700
*                          that is lower, decrement the value         * 00134800
*                          returned by the EXTRACT macro.             * 00134900
*                          DEFAULT: ZERO.  The minor priority will be * 00135000
*                          X'00'.                                     * 00135100
*                                                                     * 00135200
*                                                                     * 00135300
*                                                                     * 00135400
*                                                                     * 00135500
*                      ÝSRBIDTOKEN=xsrbidtoken¨¨                      * 00135600
*                          is the name (RS-type), or address in       * 00135700
*                          register (2)-(12), of an optional 16       * 00135800
*                          character output into which a token will   * 00135900
*                          be placed that can be used to identify the * 00136000
*                          SRB uniquely to the system.  This token    * 00136100
*                          can be used to request termination of the  * 00136200
*                          SRB via CALLRTM TYPE=SRBTERM.  The         * 00136300
*                          SRBIDTOKEN keyword may be used even if the * 00136400
*                          program runs on a release for which the    * 00136500
*                          support is not provided or a release on    * 00136600
*                          which the support is not installed.  If    * 00136700
*                          the program is running on a release that   * 00136800
*                          supports SRBIDTOKEN, the returned          * 00136900
*                          SRBIDTOKEN will have a non-zero value in   * 00137000
*                          the first eight bytes.  z/OS 2.1 is the    * 00137100
*                          first release in which this support can be * 00137200
*                          presumed to exist.                         * 00137300
*                                                                     * 00137400
*                                                                     * 00137500
*                                                                     * 00137600
*                  ÝPRIORITY=CLIENT                                   * 00137700
*                      specifies that the SRB routine is to inherit   * 00137800
*                      the major priority of the address space named  * 00137900
*                      by the STOKEN specified on the CLIENTSTOKEN    * 00138000
*                      keyword.  An SRB routine that is scheduled     * 00138100
*                      with PRIORITY=CLIENT is preemptable.  In       * 00138200
*                      addition, the CPU time used by this SRB will   * 00138300
*                      be accumulated in the address space specified  * 00138400
*                      by the clientstoken.                           * 00138500
*                                                                     * 00138600
*                                                                     * 00138700
*                      CLIENTSTOKEN=xclientstoken                     * 00138800
*                          is the name (RS-type), or address in       * 00138900
*                          register (2)-(12), of a required 64 bit    * 00139000
*                          input which contains the Space Token       * 00139100
*                          (STOKEN) of the address space where the    * 00139200
*                          CPU time utilized by the SRB is to be      * 00139300
*                          accumulated.  The SRB will also inheirit   * 00139400
*                          the major priority of this address space.  * 00139500
*                                                                     * 00139600
*                                                                     * 00139700
*                                                                     * 00139800
*                                                                     * 00139900
*                      ÝMINORPRIORITY=»xminorpriority!ZEROº¨          * 00140000
*                          is the name (RS-type), or address in       * 00140100
*                          register (2)-(12), of an optional 8 bit    * 00140200
*                          input containing the minor priority that   * 00140300
*                          the SRB routine is to be assigned.  SRB    * 00140400
*                          routines with higher minor priority are    * 00140500
*                          dispatched before preemptable-class SRB    * 00140600
*                          routines or tasks with lower minor         * 00140700
*                          priority in the same address space.  A     * 00140800
*                          minor priority of X'00' is the lowest and  * 00140900
*                          X'FF' is the highest.                      * 00141000
*                                                                     * 00141100
*                          The minor priority parameter gives the     * 00141200
*                          caller the ability to assign the SRB       * 00141300
*                          routine a priority that is comparable to a * 00141400
*                          task's dispatching priority in the address * 00141500
*                          space.  The caller may specify priorities  * 00141600
*                          for SRB routines such that they are        * 00141700
*                          dispatched before, intermixed with, or     * 00141800
*                          after tasks in the address space.          * 00141900
*                                                                     * 00142000
*                          A task's dispatching priority may be       * 00142100
*                          obtained by using the EXTRACT macro        * 00142200
*                          services.  To schedule an SRB routine with * 00142300
*                          a priority that is higher than a certain   * 00142400
*                          task's, the task's dispatching priority    * 00142500
*                          value should be obtained via the EXTRACT   * 00142600
*                          macro and then incremented.  Likewise, to  * 00142700
*                          schedule an SRB routine with a priority    * 00142800
*                          that is lower, decrement the value         * 00142900
*                          returned by the EXTRACT macro.             * 00143000
*                          DEFAULT: ZERO.  The minor priority will be * 00143100
*                          X'00'.                                     * 00143200
*                                                                     * 00143300
*                                                                     * 00143400
*                                                                     * 00143500
*                                                                     * 00143600
*                      ÝSRBIDTOKEN=xsrbidtoken¨¨                      * 00143700
*                          is the name (RS-type), or address in       * 00143800
*                          register (2)-(12), of an optional 16       * 00143900
*                          character output into which a token will   * 00144000
*                          be placed that can be used to identify the * 00144100
*                          SRB uniquely to the system.  This token    * 00144200
*                          can be used to request termination of the  * 00144300
*                          SRB via CALLRTM TYPE=SRBTERM.  The         * 00144400
*                          SRBIDTOKEN keyword may be used even if the * 00144500
*                          program runs on a release for which the    * 00144600
*                          support is not provided or a release on    * 00144700
*                          which the support is not installed.  If    * 00144800
*                          the program is running on a release that   * 00144900
*                          supports SRBIDTOKEN, the returned          * 00145000
*                          SRBIDTOKEN will have a non-zero value in   * 00145100
*                          the first eight bytes.  z/OS 2.1 is the    * 00145200
*                          first release in which this support can be * 00145300
*                          presumed to exist.                         * 00145400
*                                                                     * 00145500
*                                                                     * 00145600
*                                                                     * 00145700
*                  ÝPRIORITY=ENCLAVE                                  * 00145800
*                      specifies that the SRB routine is to be        * 00145900
*                      scheduled into an enclave.  An SRB routine     * 00146000
*                      that is scheduled with PRIORITY=ENCLAVE is     * 00146100
*                      preemptable.  The SRB will inherit  its major  * 00146200
*                      priority from the Enclave and any CPU time     * 00146300
*                      used will be accumulated in the Enclave.       * 00146400
*                                                                     * 00146500
*                                                                     * 00146600
*                      ENCLAVETOKEN=xenclavetoken                     * 00146700
*                          is the name (RS-type), or address in       * 00146800
*                          register (2)-(12), of a required 8         * 00146900
*                          character input which contains the enclave * 00147000
*                          token which represents the group of SRB    * 00147100
*                          routines whose resources are to be managed * 00147200
*                          as a group by the System Resource Manager  * 00147300
*                          (SRM).  The enclave token must be obtained * 00147400
*                          prior to scheduling the SRB routine and    * 00147500
*                          may be obtained via the IWMECREA macro.    * 00147600
*                                                                     * 00147700
*                                                                     * 00147800
*                                                                     * 00147900
*                                                                     * 00148000
*                      ÝMINORPRIORITY=»xminorpriority!ZEROº¨          * 00148100
*                          is the name (RS-type), or address in       * 00148200
*                          register (2)-(12), of an optional 8 bit    * 00148300
*                          input containing the minor priority that   * 00148400
*                          the SRB routine is to be assigned.  SRB    * 00148500
*                          routines with higher minor priority are    * 00148600
*                          dispatched before SRB routines or tasks    * 00148700
*                          with lower minor priority in the enclave.  * 00148800
*                          A minor priority of X'00' is the lowest    * 00148900
*                          and X'FF' is the highest.                  * 00149000
*                          DEFAULT: ZERO.  The minor priority will be * 00149100
*                          X'00'.                                     * 00149200
*                                                                     * 00149300
*                                                                     * 00149400
*                                                                     * 00149500
*                                                                     * 00149600
*                      ÝSRBIDTOKEN=xsrbidtoken¨¨                      * 00149700
*                          is the name (RS-type), or address in       * 00149800
*                          register (2)-(12), of an optional 16       * 00149900
*                          character output into which a token will   * 00150000
*                          be placed that can be used to identify the * 00150100
*                          SRB uniquely to the system.  This token    * 00150200
*                          can be used to request termination of the  * 00150300
*                          SRB via CALLRTM TYPE=SRBTERM.  The         * 00150400
*                          SRBIDTOKEN keyword may be used even if the * 00150500
*                          program runs on a release for which the    * 00150600
*                          support is not provided or a release on    * 00150700
*                          which the support is not installed.  If    * 00150800
*                          the program is running on a release that   * 00150900
*                          supports SRBIDTOKEN, the returned          * 00151000
*                          SRBIDTOKEN will have a non-zero value in   * 00151100
*                          the first eight bytes.  z/OS 2.1 is the    * 00151200
*                          first release in which this support can be * 00151300
*                          presumed to exist.                         * 00151400
*                                                                     * 00151500
*                                                                     * 00151600
*                                                                     * 00151700
*                                                                     * 00151800
*                                                                     * 00151900
*                                                                     * 00152000
*                                                                     * 00152100
*                                                                     * 00152200
*              ÝDUALPOOLTOKEN=»xdualpooltoken!NOTOKENº¨¨              * 00152300
*                  is the name (RS-type), or address in register      * 00152400
*                  (2)-(12), of an optional 16 character input which  * 00152500
*                  contains the token of the DU Access List pool from * 00152600
*                  which to obtain the DU-AL for the SRB.  This token * 00152700
*                  is the one returned from the DUALPOOLCREATE option * 00152800
*                  of the ALESERV macro.                              * 00152900
*                  DEFAULT: NOTOKEN  The SRB will receive control     * 00153000
*                  with the Basic Access list.                        * 00153100
*                                                                     * 00153200
*                                                                     * 00153300
*                                                                     * 00153400
*                                                                     * 00153500
*                                                                     * 00153600
*                                                                     * 00153700
*                                                                     * 00153800
*                                                                     * 00153900
*      ÝFEATURE=»NONE!CRYPTO!CPMASKº¨                                 * 00154000
*          is an optional keyword input used to specify affinity to   * 00154100
*          specific processors.                                       * 00154200
*          DEFAULT: NONE                                              * 00154300
*                                                                     * 00154400
*                                                                     * 00154500
*          ÝFEATURE=NONE¨                                             * 00154600
*              If FEATURE is left unspecified, the SRB routine will   * 00154700
*              have no special processor affinity and may be          * 00154800
*              dispatched on any processor.                           * 00154900
*                                                                     * 00155000
*          ÝFEATURE=CRYPTO¨                                           * 00155100
*              specifies the the SRB routine is to be given affinity  * 00155200
*              only to those online processors which have the         * 00155300
*              Integrated Cryptographic Feature installed.            * 00155400
*                                                                     * 00155500
*          ÝFEATURE=CPMASK                                            * 00155600
*              specifies the SRB routine is to be given affinity to   * 00155700
*              only those processors indicated by the specified mask. * 00155800
*                                                                     * 00155900
*                                                                     * 00156000
*              CPUMASK=xcpumask¨                                      * 00156100
*                  is the name (RS-type), or address in register      * 00156200
*                  (2)-(12), of a required 16 bit input CP mask which * 00156300
*                  specifies the processor affinity.  If all of the   * 00156400
*                  bits in the mask are zeroes or ones, then no       * 00156500
*                  affinity is implied.  Otherwise, the mask contains * 00156600
*                  bits which represent processor affinity.  Bits     * 00156700
*                  that have a value of 1 (on) indicate that the SRB  * 00156800
*                  routine is to have affinity to the processor with  * 00156900
*                  the same physical address as the bit position.     * 00157000
*                  For example, if the 4th bit is on in the mask, the * 00157100
*                  SRB routine will have affinity to the processor    * 00157200
*                  with physical address 3.  To schedule an SRB       * 00157300
*                  routine with affinity to CP 0, CP 3, and CP 4, the * 00157400
*                  bit mask would be B'1001 1000 0000 0000'.          * 00157500
*                                                                     * 00157600
*                                                                     * 00157700
*                                                                     * 00157800
*                                                                     * 00157900
*                                                                     * 00158000
*                                                                     * 00158100
*                                                                     * 00158200
*                                                                     * 00158300
*      ÝFLAGS=»xflags!NO_FLAGSº¨                                      * 00158400
*          is the name (RS-type), or address in register (2)-(12), of * 00158500
*          an optional 8 bit input that provides information about    * 00158600
*          the scheduling of the SRB.  The caller must zero this byte * 00158700
*          before invoking IEAMSCHD.                                  * 00158800
*                                                                     * 00158900
*                                                                     * 00159000
*          o   When bit 7 (the x'01' bit) is on, the SRB has been     * 00159100
*              successfully scheduled.                                * 00159200
*                                                                     * 00159300
*          o   When bit 7 is off but bit 6 (the x'02' bit) is on, the * 00159400
*              system had just begun the final part of the scheduling * 00159500
*              of the SRB, but that did not complete successfully; it * 00159600
*              is not known whether the SRB will or will not get      * 00159700
*              control. This will be an extremely rare circumstance.  * 00159800
*                                                                     * 00159900
*          o   When both bits 6 and 7 are off, the SRB was not        * 00160000
*              successfully scheduled.                                * 00160100
*                                                                     * 00160200
*                                                                     * 00160300
*          These bit definitions are true whether control returns     * 00160400
*          normally to the caller or whether control passes to the    * 00160500
*          caller's recovery.  The byte must be in disabled-reference * 00160600
*          or page-fixed storage.                                     * 00160700
*          DEFAULT: NO_FLAGS                                          * 00160800
*                                                                     * 00160900
*                                                                     * 00161000
*                                                                     * 00161100
*                                                                     * 00161200
*      ÝPARM=»xparm!ZEROº¨                                            * 00161300
*          is the name (RS-type), or address in register (2)-(12), of * 00161400
*          an optional fullword input to be loaded into register 1    * 00161500
*          when the SRB routine receives control.                     * 00161600
*          DEFAULT: ZERO.  Register 1 will be set to zero.            * 00161700
*                                                                     * 00161800
*                                                                     * 00161900
*                                                                     * 00162000
*                                                                     * 00162100
*      ÝFRRADDR=»xfrraddr!NOFRRº                                      * 00162200
*          is the name (RS-type), or address in register (2)-(12), of * 00162300
*          an optional 4 byte input that contains the address of the  * 00162400
*          Functional Recovery Routine (FRR) that is to be            * 00162500
*          established prior to the SRB routine receiving control.    * 00162600
*          The low bit of this address should not be set on.  If it   * 00162700
*          is set on, that bit will not be treated as part of the FRR * 00162800
*          address but will be treated as indicating SDWALOC31=YES    * 00162900
*          and will override the specification, or default, of        * 00163000
*          SDWALOC31=NO.                                              * 00163100
*                                                                     * 00163200
*          The FRR will receive control in Supervisor State, PSW Key  * 00163300
*          0, Primary ASC mode, 31-bit AMODE, holding the same locks  * 00163400
*          the SRB routine held at the time of error.  The FRR will   * 00163500
*          receive control with the same PASID, SASID, and HASID as   * 00163600
*          the SRB routine had on entry.                              * 00163700
*          DEFAULT: NOFRR.  The SRB routine will receive control      * 00163800
*          without its own FRR.                                       * 00163900
*                                                                     * 00164000
*                                                                     * 00164100
*          ÝSDWALOC31=»NO!YESº¨                                       * 00164200
*              is an optional keyword input                           * 00164300
*              DEFAULT: NO                                            * 00164400
*                                                                     * 00164500
*                                                                     * 00164600
*              ÝSDWALOC31=NO¨                                         * 00164700
*                  specifies that the FRR can not tolerate an SDWA in * 00164800
*                  31-bit storage and will receive an SDWA in 24-bit  * 00164900
*                  storage.                                           * 00165000
*                                                                     * 00165100
*              ÝSDWALOC31=YES¨¨                                       * 00165200
*                  specifies that the FRR can tolerate an SDWA in     * 00165300
*                  31-bit storage.  Considering that 31-bit storage   * 00165400
*                  is less likely to be constrained than 24-bit       * 00165500
*                  storage and RTM skips FRRs for which it can not    * 00165600
*                  obtain an SDWA, use SDWALOC31=YES whenever         * 00165700
*                  possible.                                          * 00165800
*                                                                     * 00165900
*                                                                     * 00166000
*                                                                     * 00166100
*                                                                     * 00166200
*                                                                     * 00166300
*                                                                     * 00166400
*                                                                     * 00166500
*                                                                     * 00166600
*      ÝKEYVALUE=»xkeyvalue!INVOKERKEYº¨                              * 00166700
*          is the name (RS-type), or address in register (2)-(12), of * 00166800
*          an optional 8 bit input whose bits 0-3 contain the PSW Key * 00166900
*          with which the SRB routine is to receive control.  Bits    * 00167000
*          4-7 of the byte are ignored.  For example, the byte        * 00167100
*          required to specify PSW Key 7 would contain the value      * 00167200
*          X'70', and for PSW Key 11 would contain the value X'B0'.   * 00167300
*          DEFAULT: INVOKERKEY.  IF KEYVALUE IS LEFT UNSPECIFIED, THE * 00167400
*          SRB ROUTINE WILL RECEIVE CONTROL WITH THE PSW KEY OF THE   * 00167500
*          INVOKER OF THE IEAMSCHD MACRO.                             * 00167600
*                                                                     * 00167700
*                                                                     * 00167800
*                                                                     * 00167900
*                                                                     * 00168000
*      ÝTRANSFER=»NO!YESº¨                                            * 00168100
*          is an optional keyword input                               * 00168200
*          DEFAULT: NO                                                * 00168300
*                                                                     * 00168400
*                                                                     * 00168500
*          ÝTRANSFER=NO¨                                              * 00168600
*              specifies that the SRB will be dispatched normally.    * 00168700
*                                                                     * 00168800
*          ÝTRANSFER=YES¨                                             * 00168900
*              specifies that an attempt is to be made to transfer    * 00169000
*              control to the SRB if the requestor is running enabled * 00169100
*              and in task mode.  If the transfer is successful the   * 00169200
*              requestor will be redispatched normally. TRANSFER=YES  * 00169300
*              is ignored for the following cases:                    * 00169400
*                                                                     * 00169500
*                                                                     * 00169600
*              o   a SYNCH=YES request                                * 00169700
*                                                                     * 00169800
*              o   running in SRB mode                                * 00169900
*                                                                     * 00170000
*              o   the caller holds any locks.                        * 00170100
*                                                                     * 00170200
*                                                                     * 00170300
*                                                                     * 00170400
*                                                                     * 00170500
*                                                                     * 00170600
*                                                                     * 00170700
*                                                                     * 00170800
*                                                                     * 00170900
*      ÝLLOCK=»NO!YESº¨                                               * 00171000
*          is an optional keyword input                               * 00171100
*          DEFAULT: NO                                                * 00171200
*                                                                     * 00171300
*                                                                     * 00171400
*          ÝLLOCK=NO¨                                                 * 00171500
*              specifies that the SRB routine is to receive control   * 00171600
*              without holding the local lock.                        * 00171700
*                                                                     * 00171800
*          ÝLLOCK=YES¨                                                * 00171900
*              specifies that the SRB routine is to receive control   * 00172000
*              holding the Home Address Space's Local lock.  It is    * 00172100
*              the responsibility of the SRB routine and its recovery * 00172200
*              to ensure that the local lock is released prior to the * 00172300
*              completion of the SRB routine.                         * 00172400
*                                                                     * 00172500
*                                                                     * 00172600
*                                                                     * 00172700
*                                                                     * 00172800
*                                                                     * 00172900
*                                                                     * 00173000
*      ÝRMTRADDR=»xrmtraddr!NORMTRº¨                                  * 00173100
*          is the name (RS-type), or address in register (2)-(12), of * 00173200
*          an optional 4 byte input that contains the address of an   * 00173300
*          SRB Resource Manager Termination Routine (RMTR).  RMTRs    * 00173400
*          are responsible for cleaning up resources on behalf of an  * 00173500
*          SRB routine which has been purged by the PURGEDQ service   * 00173600
*          before the SRB is first dispatched.                        * 00173700
*                                                                     * 00173800
*          The RMTR must reside in the MVS Common Area as the address * 00173900
*          space in which the RMTR will get control is unpredictable  * 00174000
*          at the time of the invocation of the IEAMSCHD macro.  It   * 00174100
*          is called from the PURGEDQ service and will receive        * 00174200
*          control in task mode, Supervisor State, PSW Key 0, Primary * 00174300
*          ASC Mode, and 31-bit AMODE. If bit 31 of the RMTRADDR is   * 00174400
*          one, control is received with the local lock held and      * 00174500
*          control can be returned to the PURGEDQ service with or     * 00174600
*          without the local lock held, but must not hold any other   * 00174700
*          locks upon return. If bit 31 of the RMTRADDR is zero,      * 00174800
*          control is received with no locks held and control must be * 00174900
*          returned to the PURGEDQ service with no locks held. Bit 31 * 00175000
*          of RMTRADDR is treated as zero when determining the RMTR   * 00175100
*          address.                                                   * 00175200
*          DEFAULT: NORMTR.  The SRB routine will not have a Resource * 00175300
*          Manager Termination Routine.                               * 00175400
*                                                                     * 00175500
*      ÝPURGESTOKEN=»xpurgestoken!NOPSTOKENº                          * 00175600
*          is the name (RS-type), or address in register (2)-(12), of * 00175700
*          an optional 64 bit input containing the Space Token of an  * 00175800
*          address space to be associated with this SRB routine.  The * 00175900
*          Space Token specified is known as the purge-STOKEN.  The   * 00176000
*          address space represented by the Purge-Stoken does not     * 00176100
*          have to be the same as the address space where the SRB     * 00176200
*          routine will be dipatched.                                 * 00176300
*          DEFAULT: NOPSTOKEN.  The SRB routine will not have an      * 00176400
*          associated purge-STOKEN.                                   * 00176500
*                                                                     * 00176600
*          During TASK TERMINATION, not-yet-dispatched SRB routines   * 00176700
*          scheduled into the address space in which the task is      * 00176800
*          terminating, that were scheduled with a purge-STOKEN and   * 00176900
*          purge-TCB address of the terminating task, will be purged  * 00177000
*          and control will be given to that SRB routine's RMTR.      * 00177100
*          Additionally, SRB routines that suspended themselves via   * 00177200
*          the Suspend with Token service, match the purge            * 00177300
*          parameters, and are still in a suspended state will        * 00177400
*          receive a X'47B' ABEND reason code X'0000'.  Preemptable   * 00177500
*          SRB routines that match the purge parameters and have not  * 00177600
*          completed will also receive a X'47B' ABEND reason code     * 00177700
*          X'0008'.  Preemptable SRB routines that are suspended will * 00177800
*          receive a X'47B' ABEND reason code X'0000'.                * 00177900
*                                                                     * 00178000
*          During MEMORY TERMINATION, all SRB routines that are       * 00178100
*          scheduled into the address space and have not received     * 00178200
*          control are purged and control will be given to each SRB   * 00178300
*          Routine's RMTR.                                            * 00178400
*                                                                     * 00178500
*                                                                     * 00178600
*          ÝPTCBADDR=»xptcbaddr!NOPTCBº¨¨                             * 00178700
*              is the name (RS-type), or address in register          * 00178800
*              (2)-(12), of an optional 4 byte input that contains    * 00178900
*              the address of the TCB to be associated with the SRB   * 00179000
*              routine.  The TCB address pointed to by this field is  * 00179100
*              known as the purge-TCB address.  If PTCBADDR is        * 00179200
*              specified, PURGESTOKEN  MUST also be specified.        * 00179300
*                                                                     * 00179400
*              NOTE The task represented by the purge-TCB address is  * 00179500
*              known as the SRB routine's related task.  When a       * 00179600
*              SYNCH=NO SRB routine scheduled with a related task     * 00179700
*              terminates abnormally and the FRR for the SRB routine  * 00179800
*              does not exist or percolates, the error is percolated  * 00179900
*              to the recovery routine of the related task.  This     * 00180000
*              function is known as SRB-TO-TASK PERCOLATION.          * 00180100
*              DEFAULT: NOPTCB.  The SRB routine will not have an     * 00180200
*              associated purge-TCB.                                  * 00180300
*                                                                     * 00180400
*                                                                     * 00180500
*                                                                     * 00180600
*                                                                     * 00180700
*                                                                     * 00180800
*                                                                     * 00180900
*      ÝSYNCH=»NO!YESº¨                                               * 00181000
*          is an optional keyword input used to specify that the      * 00181100
*          caller's thread is to be suspended until the scheduled SRB * 00181200
*          completes, is purged, or ABENDs.                           * 00181300
*          DEFAULT: NO                                                * 00181400
*                                                                     * 00181500
*                                                                     * 00181600
*          ÝSYNCH=NO¨                                                 * 00181700
*              specifies that the SRB is to be scheduled for          * 00181800
*              execution that is asynchronous from the caller's       * 00181900
*              thread.                                                * 00182000
*                                                                     * 00182100
*          ÝSYNCH=YES                                                 * 00182200
*              specifies that the caller's thread is to be suspended  * 00182300
*              until scheduled SRB completes, is purged, or ABENDs.   * 00182400
*              SRB to task percolation does not occur when an SRB is  * 00182500
*              scheduled with SYNCH=YES.                              * 00182600
*                                                                     * 00182700
*                                                                     * 00182800
*              ÝSYNCHCOMPADDR=»xsynchcompaddr!NOVALUEº                * 00182900
*                  is the name (RS-type) of an optional 4 byte input  * 00183000
*                  that contains the address of the fullword that is  * 00183100
*                  to contain the one of completion codes below       * 00183200
*                  following the resumption of the caller's thread:   * 00183300
*                                                                     * 00183400
*                                                                     * 00183500
*                  CODE      MEANING                                  * 00183600
*                                                                     * 00183700
*                  0         Successful Completion                    * 00183800
*                                                                     * 00183900
*                  8         SRB ABENDed and there is an associated   * 00184000
*                            reason code.                             * 00184100
*                                                                     * 00184200
*                  12        SRB ABENDed and there is no associated   * 00184300
*                            reason code.                             * 00184400
*                                                                     * 00184500
*                  16        SRB Purged by PurgeDQ Processing.        * 00184600
*                                                                     * 00184700
*                  20        Undetermined.  The SRB did not complete, * 00184800
*                            but was dispatched -- MEMTERM and/or     * 00184900
*                            DATERR probable cause.                   * 00185000
*                                                                     * 00185100
*                  24        SRB was not scheduled, Return Code is in * 00185200
*                            fullword pointed to by xsynchcodeaddr.   * 00185300
*                                                                     * 00185400
*                  28        SRB was not scheduled, ABEND Code is in  * 00185500
*                            fullword pointed to by xsynchcodeaddr.   * 00185600
*                                                                     * 00185700
*                                                                     * 00185800
*                  DEFAULT: NOVALUE                                   * 00185900
*                                                                     * 00186000
*                                                                     * 00186100
*                  SYNCHCODEADDR=xsynchcodeaddr                       * 00186200
*                      is the name (RS-type) of a required 4 byte     * 00186300
*                      input that contains the address of the         * 00186400
*                      fullword that is to contain the one of values  * 00186500
*                      associated with the returned via the           * 00186600
*                      xsynchcompaddr parameter below:                * 00186700
*                                                                     * 00186800
*                                                                     * 00186900
*                      SYNCHCOMP VALUE SYNCHCODE VALUE REPRESENTS     * 00187000
*                                                                     * 00187100
*                      0         Register 15 when SRB completed.      * 00187200
*                                                                     * 00187300
*                      8         ABEND Code (Same format as           * 00187400
*                                SDWACMPC).                           * 00187500
*                                                                     * 00187600
*                      12        ABEND Code (Same format as           * 00187700
*                                SDWACMPC).                           * 00187800
*                                                                     * 00187900
*                      16        -1 (Value not meaningful.)           * 00188000
*                                                                     * 00188100
*                      20        -1 (Value not meaningful.)           * 00188200
*                                                                     * 00188300
*                      24        Return Code propagated from the      * 00188400
*                                SUSPEND service.  The SRB was not    * 00188500
*                                scheduled because this workunit      * 00188600
*                                could not be successfully suspended. * 00188700
*                                                                     * 00188800
*                      28        ABEND Code propagated from the       * 00188900
*                                SUSPEND service (Same format as      * 00189000
*                                SDWACMPC).  The SRB was not          * 00189100
*                                scheduled because this workunit      * 00189200
*                                could not be successfully suspended. * 00189300
*                                                                     * 00189400
*                                                                     * 00189500
*                                                                     * 00189600
*                                                                     * 00189700
*                                                                     * 00189800
*                                                                     * 00189900
*                  SYNCHRSNADDR=xsynchrsnaddr¨¨                       * 00190000
*                      is the name (RS-type) of a required 4 byte     * 00190100
*                      input that contains the address of the         * 00190200
*                      fullword that is to contain the one of values  * 00190300
*                      associated with the returned via the           * 00190400
*                      xsynchcompaddr and xsynchcodeaddr parameters:  * 00190500
*                                                                     * 00190600
*                                                                     * 00190700
*                      SYNCHCOMP VALUE SYNCHRSN VALUE REPRESENTS      * 00190800
*                                                                     * 00190900
*                      0         Register 0 when SRB completed.       * 00191000
*                                                                     * 00191100
*                      8         Reason Code associated with an ABEND * 00191200
*                                Code.                                * 00191300
*                                                                     * 00191400
*                      12        -1 (Value not meaningful.)           * 00191500
*                                                                     * 00191600
*                      16        -1 (Value not meaningful.)           * 00191700
*                                                                     * 00191800
*                      20        -1 (Value not meaningful.)           * 00191900
*                                                                     * 00192000
*                      24        -1 (Value not meaningful.)           * 00192100
*                                                                     * 00192200
*                      28        Reason Code associated with a ABEND  * 00192300
*                                code from the attempting to suspend  * 00192400
*                                the current workunit.                * 00192500
*                                                                     * 00192600
*                                                                     * 00192700
*                                                                     * 00192800
*                                                                     * 00192900
*                                                                     * 00193000
*                                                                     * 00193100
*                                                                     * 00193200
*                                                                     * 00193300
*                                                                     * 00193400
*                                                                     * 00193500
*                                                                     * 00193600
*                                                                     * 00193700
*      ÝRETCODE=xretcode¨                                             * 00193800
*          is the name (RS-type) of an optional fullword output       * 00193900
*          variable, or register (2)-(12) or (15), into which the     * 00194000
*          return code is to be copied from GPR 15.  If you specify   * 00194100
*          15, GPR15, REG15, or R15 (within or without parentheses),  * 00194200
*          the value will be left in GPR 15.                          * 00194300
*                                                                     * 00194400
*                                                                     * 00194500
*                                                                     * 00194600
*                                                                     * 00194700
*      ÝPLISTVER=»xplistver!IMPLIED_VERSIONº¨                         * 00194800
*          is an optional byte input decimal value in the "0-4" range * 00194900
*          that specifies the macro version.  PLISTVER is the only    * 00195000
*          key allowed on the list form of MF and determines which    * 00195100
*          parameter list is generated.  The macro keys associated    * 00195200
*          with each supported version of the macro are listed in     * 00195300
*          MACRO USAGE NOTE 2.  Note that MAX may be specified        * 00195400
*          instead of a number, and the parameter list will be of the * 00195500
*          largest size currently supported. This size may grow from  * 00195600
*          release to release (thus possibly affecting the amount of  * 00195700
*          storage needed by your program).  If your program can      * 00195800
*          tolerate this, IBM recommends that you always specify MAX  * 00195900
*          when creating the list form parameter list as that will    * 00196000
*          ensure that the list form parameter list is always long    * 00196100
*          enough to hold whatever parameters might be specified on   * 00196200
*          the execute form.                                          * 00196300
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00196400
*          default is the lowest version which allows all of the      * 00196500
*          parameters specified on the invocation to be processed.    * 00196600
*                                                                     * 00196700
*                                                                     * 00196800
*                                                                     * 00196900
*                                                                     * 00197000
*      ÝMF=»S!L!Eº¨                                                   * 00197100
*          is an optional keyword input which specifies the macro     * 00197200
*          form.                                                      * 00197300
*          DEFAULT: S                                                 * 00197400
*                                                                     * 00197500
*                                                                     * 00197600
*          ÝMF=S¨                                                     * 00197700
*              specifies the standard form of the macro.  The "S"     * 00197800
*              form generates code to put the parameters into an      * 00197900
*              in-line parameter list and invoke the desired service. * 00198000
*              Full checking for required macro keys is done along    * 00198100
*              with supplying defaults for omitted optional           * 00198200
*              parameters.                                            * 00198300
*                                                                     * 00198400
*          ÝMF=(L,xmfctrl»,xmfattr!0Dº)¨                              * 00198500
*              specifies the list form of the macro.  The "L" form    * 00198600
*              defines an area to be used for the parameter list.     * 00198700
*              Only the PLISTVER key may be specified on the          * 00198800
*              invocation.  All other macro parameters are flagged as * 00198900
*              errors.  If PLISTVER is not specified, the original    * 00199000
*              parameter list definition is used.                     * 00199100
*                                                                     * 00199200
*            ,xmfctrl                                                 * 00199300
*              is a required input.  It is the name of a storage area * 00199400
*              for the parameter list.                                * 00199500
*                                                                     * 00199600
*            »,xmfattr!0Dº                                            * 00199700
*              is an optional 60 character input string that varies   * 00199800
*              from 1 to 60 characters. Use it to force boundary      * 00199900
*              alignment of the parameter list. Use only 0F or 0D.    * 00200000
*              DEFAULT: 0D which forces the parameter list to a       * 00200100
*              doubleword boundary.                                   * 00200200
*                                                                     * 00200300
*          ÝMF=(E,xmfctrl»,COMPLETEº)¨                                * 00200400
*              specifies the execute form of the macro.  The "E" form * 00200500
*              generates code to put the parameters into the          * 00200600
*              parameter list specified by xmfctrl and provides full  * 00200700
*              syntax checking with default setting.                  * 00200800
*                                                                     * 00200900
*            ,xmfctrl                                                 * 00201000
*              is a required input.  It is the name (RS-type), or     * 00201100
*              address in register (1)-(12), of a storage area for    * 00201200
*              the parameter list.                                    * 00201300
*                                                                     * 00201400
*            »,COMPLETEº                                              * 00201500
*              is an optional keyword input which specifies the       * 00201600
*              degree of macro parameter syntax checking.             * 00201700
*              DEFAULT: COMPLETE                                      * 00201800
*                                                                     * 00201900
*                                                                     * 00202000
*              COMPLETE                                               * 00202100
*                  Checking for required macro keys is done and       * 00202200
*                  defaults are supplied for omitted optional         * 00202300
*                  parameters.                                        * 00202400
*                                                                     * 00202500
*                                                                     * 00202600
*                                                                     * 00202700
*                                                                     * 00202800
*                                                                     * 00202900
*                                                                     * 00203000
*                                                                     * 00203100
*01* RETURN CODES:                                                    * 00203200
*                                                                     * 00203300
*                                                                     * 00203400
*       00        The SRB routine was successfully scheduled.         * 00203500
*                                                                     * 00203600
*       04        The Enclave token specified on the ENCLAVETOKEN     * 00203700
*                 keyword has been reused for a new Enclave.  The SRB * 00203800
*                 was not scheduled.                                  * 00203900
*                                                                     * 00204000
*       08        The Client STOKEN address space has failed.  The    * 00204100
*                 SRB was not scheduled.                              * 00204200
*                                                                     * 00204300
*       0C        The Purge STOKEN address space has failed.  The SRB * 00204400
*                 was not scheduled.                                  * 00204500
*                                                                     * 00204600
*       10        The Target STOKEN address space has failed.  The    * 00204700
*                 SRB was not scheduled.                              * 00204800
*                                                                     * 00204900
*       14        The DualPoolToken specified on the DUALPOOLTOKEN    * 00205000
*                 keyword is invalid.                                 * 00205100
*                                                                     * 00205200
*       18        The pool of DU-ALs specified by the DUALPOOLTOKEN   * 00205300
*                 is exhausted.                                       * 00205400
*                                                                     * 00205500
*       1C        The SYNCH=YES SRB was not scheduled or did not      * 00205600
*                 complete ssucessfully.  Refer to the values         * 00205700
*                 returned via the SYNCHCOMPADDR, SYNCHCODEADDR, and  * 00205800
*                 SYNCHRSNADDR keywords for more details.             * 00205900
*                                                                     * 00206000
*                                                                     * 00206100
*                                                                     * 00206200
*01* REASON CODES:  None.                                             * 00206300
*                                                                     * 00206400
*01* ABEND CODES:                                                     * 00206500
*                                                                     * 00206600
*                                                                     * 00206700
*       AC7       The IEAMSCHD has detected environmental errors.     * 00206800
*                                                                     * 00206900
*                                                                     * 00207000
*                                                                     * 00207100
*01* ABEND REASON CODES:                                              * 00207200
*                                                                     * 00207300
*       REASON    ABEND                                               * 00207400
*       CODE      CODE      DESCRIPTION                               * 00207500
*       --------  --------  -----------                               * 00207600
*                                                                     * 00207700
*                                                                     * 00207800
*       00080000  AC7       The invocation version of the macro is    * 00207900
*                           not supported by this level of the        * 00208000
*                           service routine.                          * 00208100
*                                                                     * 00208200
*       00080001  AC7       The Space token specified via the         * 00208300
*                           TARGETSTOKEN keyword is not valid.        * 00208400
*                                                                     * 00208500
*       00080002  AC7       The Enclave token specified was not a     * 00208600
*                           valid token.                              * 00208700
*                                                                     * 00208800
*       00080003  AC7       CRYPTO was specified on the FEATURE       * 00208900
*                           keyword, but there are no processors with * 00209000
*                           the Integrated Cryptograhic Feature       * 00209100
*                           online.                                   * 00209200
*                                                                     * 00209300
*       00080004  AC7       A DIE routine attempted to schedule an    * 00209400
*                           SRB with PRIORITY = CURRENT.              * 00209500
*                                                                     * 00209600
*       00080005  AC7       The Space token specified via the         * 00209700
*                           PURGESTOKEN keyword is not valid.         * 00209800
*                                                                     * 00209900
*       00080006  AC7       The Space token specified via the         * 00210000
*                           CLIENTSTOKEN keyword is not valid.        * 00210100
*                                                                     * 00210200
*       00080007  AC7       The parameter list is not in the user's   * 00210300
*                           primary address space.                    * 00210400
*                                                                     * 00210500
*       00080009  AC7       The caller of the SYNCH=YES option was    * 00210600
*                           not enabled and unlocked.                 * 00210700
*                                                                     * 00210800
*                                                                     * 00210900
*                                                                     * 00211000
*01* MODULE TYPE:  ASSEM MACRO                                        * 00211100
*                                                                     * 00211200
*02*   PROCESSOR:  ASSEM                                              * 00211300
*                                                                     * 00211400
*01* COMPONENT:  SC1C5                                                * 00211500
*                                                                     * 00211600
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00211700
*                                                                     * 00211800
*01* EXAMPLES:                                                        * 00211900
*    EXAMPLE 1                                                        * 00212000
*                                                                     * 00212100
*    OPERATION:  Schedule a local SRB routine to the current Home     * 00212200
*    address space .  The SRB routine will be entered in the same key * 00212300
*    as that of the invoking routine.                                 * 00212400
*                                                                     * 00212500
*      *                                                              * 00212600
*      SCHED_SRB_RTN  EQU      *                                      * 00212700
*                     IEAMSCHD EPADDR=EP_ADDR,ENV=HOME,PRIORITY=LOCAL * 00212800
*          .                                                          * 00212900
*          .                                                          * 00213000
*          .                                                          * 00213100
*      EP_ADDR        DC   A(SRB_ROUTINE)   SRB Entry Point Address   * 00213200
*      *                                                              * 00213300
*                                                                     * 00213400
*    EXAMPLE 2                                                        * 00213500
*                                                                     * 00213600
*    OPERATION: Schedule an SRB routine to the current primary        * 00213700
*    address space which has the same addressability and cross memory * 00213800
*    environment as its caller and has a GLOBAL priority.  The SRB    * 00213900
*    routine is to receive control in PSW Key 0.                      * 00214000
*                                                                     * 00214100
*      *                                                              * 00214200
*      SCHED_SRB_RTN  EQU *                                           * 00214300
*                     IEAMSCHD EPADDR=EP_ADDR,ENV=FULLXM,           X * 00214400
*                     PRIORITY=GLOBAL,KEYVALUE=PSW_KEY_0              * 00214500
*          .                                                          * 00214600
*          .                                                          * 00214700
*          .                                                          * 00214800
*      EP_ADDR        DC   A(SRB_ROUTINE)   SRB Entry Point Address   * 00214900
*      PSW_KEY_0      DC   X'00'            PSW Key 0                 * 00215000
*      *                                                              * 00215100
*                                                                     * 00215200
*                                                                     * 00215300
*    EXAMPLE 3                                                        * 00215400
*                                                                     * 00215500
*    OPERATION: Schedule an SRB routine at a priority that is the     * 00215600
*    lowest in the enclave identified by the token in ENCLAVE_TOKEN.  * 00215700
*    The SRB routine is to receive control in the current home        * 00215800
*    address space with an FRR established and holding the Local lock * 00215900
*    of the current home address space.  It is to run in the current  * 00216000
*    home address space and is to run in key 2.  The SRB Routine has  * 00216100
*    a resource manager termination routine whose entry point address * 00216200
*    is in RMTR_ADDR.  The current task's recovery is to receive      * 00216300
*    control should the SRB routine's recovery percolate and the SRB  * 00216400
*    routine should be purged if the current task terminates.  This   * 00216500
*    example assumes the ENCLAVE_TOKEN and PURGE_STOKEN were          * 00216600
*    previously initialized.                                          * 00216700
*                                                                     * 00216800
*      *                                                              * 00216900
*      SCHED_SRB_RTN  EQU *                                           * 00217000
*                     USING  PSA,0          Base Prefixed Save Area   * 00217100
*      *                                                              * 00217200
*                     IEAMSCHD  EPADDR=EP_ADDR,FRRADDR=FRR_ADDR,    X * 00217300
*                     KEYVALUE=PSW_KEY_2,PRIORITY=ENCLAVE,          X * 00217400
*                     ENCLAVETOKEN=ENCLAVE_TOKEN,                   X * 00217500
*                     MINORPRIORITY=MINOR_PRIORITY,                 X * 00217600
*                     RMTRADDR=RMTR_ADDR,                           X * 00217700
*                     PURGESTOKEN=PURGE_STOKEN,                     X * 00217800
*                     PTCBADDR=PSATOLD,                             X * 00217900
*                     LLOCK=YES,ENV=HOME                              * 00218000
*      *                                                              * 00218100
*          .                                                          * 00218200
*          .                                                          * 00218300
*          .                                                          * 00218400
*      ENCLAVE_TOKEN  DS    D               Enclave Token             * 00218500
*      PURGE_STOKEN   DS    D               Purge-STOKEN              * 00218600
*      EP_ADDR        DC    A(SRB_ROUTINE)  SRB Entry Point Address   * 00218700
*      FRR_ADDR       DC    A(FRR_ROUTINE)  Address of FRR Routine    * 00218800
*      RMTR_ADDR      DC    A(RMTR_ROUTINE) RMTR Entry Point Address  * 00218900
*      MINOR_PRIORITY DC    X'00'          Lowest Priority in Enclave * 00219000
*      PSW_KEY_2      DC    X'20'           PSW Key 2                 * 00219100
*                     TITLE 'PSA -- Prefix Save Area'                 * 00219200
*                     IHAPSA                                          * 00219300
*                                                                     * 00219400
*    EXAMPLE 4                                                        * 00219500
*                                                                     * 00219600
*    OPERATION: Schedule a LOCAL SRB routine into the address space   * 00219700
*    whose STOKEN is stored in THEIR_STOKEN.  THEIR_TOKEN was         * 00219800
*    previously initialized.                                          * 00219900
*                                                                     * 00220000
*      *                                                              * 00220100
*      SCHED_SRB_RTN  EQU *                                           * 00220200
*                     IEAMSCHD  EPADDR=EP_ADDR,ENV=STOKEN,          X * 00220300
*                     TARGETSTOKEN=THEIR_STOKEN,                    X * 00220400
*                     PRIORITY=LOCAL                                  * 00220500
*      *                                                              * 00220600
*          .                                                          * 00220700
*          .                                                          * 00220800
*          .                                                          * 00220900
*      THEIR_STOKEN   DS    D               Space Token               * 00221000
*      EP_ADDR        DC    A(SRB_ROUTINE)  SRB Entry Point Address   * 00221100
*                                                                     * 00221200
*    EXAMPLE 5                                                        * 00221300
*                                                                     * 00221400
*    OPERATION: Schedule a preemptable SRB routine into the current   * 00221500
*    Home Address Space with a minor priority that is just below the  * 00221600
*    current task's dispatching priority.                             * 00221700
*                                                                     * 00221800
*      *                                                              * 00221900
*      SCHED_SRB_RTN  EQU *                                           * 00222000
*      *                                                              * 00222100
*                     EXTRACT TCB_PRIORITY,'S',FIELDS=(PRI)           * 00222200
*      *                                                              * 00222300
*                     SLR        3,3             Clear register       * 00222400
*                     IC         3,DSP_PRIORITY  Get Disp Priority    * 00222500
*                     S          3,=F'1'    Lower priority by 1       * 00222600
*                     BP         SAVE_MINOR_PRIORITY                  * 00222700
*                     SLR        3,3        If tasks priority already * 00222800
*      *                                    lowest, set minor         * 00222900
*      *                                    priority to zero.         * 00223000
*      SAVE_MINOR_PRIORITY EQU *                                      * 00223100
*                     STC       3,MINOR_PRIORITY Save Minor Priority  * 00223200
*                     IEAMSCHD   EPADDR=EP_ADDR,PRIORITY=PREEMPT,   X * 00223300
*                     ENV=HOME,MINORPRIORITY=MINOR_PRIORITY           * 00223400
*      *                                                              * 00223500
*          .                                                          * 00223600
*          .                                                          * 00223700
*          .                                                          * 00223800
*      EP_ADDR        DC    A(SRB_ROUTINE)  SRB Entry Point Address   * 00223900
*      TCB_PRIORITY   DS   0F               Priority Field            * 00224000
*                     DS    H               Place holder              * 00224100
*      DSP_PRIORITY   DS    B               Current Disp Priority     * 00224200
*      MINOR_PRIORITY DS    B               Minor Priority for SRB    * 00224300
*                                                                     * 00224400
*    EXAMPLE 6                                                        * 00224500
*                                                                     * 00224600
*    OPERATION: Schedule an SRB routine into the home address space,  * 00224700
*    passing it the parameter list pointed to by PARM_ADDR, and give  * 00224800
*    the SRB routine affinity to online processors with the           * 00224900
*    Integrated Cryptographic Feature installed.  The SRB routine is  * 00225000
*    to inherit the current work unit's major and minor priorities.   * 00225100
*                                                                     * 00225200
*      *                                                              * 00225300
*      SCHED_SRB_RTN  EQU *                                           * 00225400
*      *                                                              * 00225500
*                     IEAMSCHD   EPADDR=EP_ADDR,PARM=PARM_ADDR,     X * 00225600
*                     FEATURE=CRYPTO,ENV=HOME,PRIORITY=CURRENT        * 00225700
*      *                                                              * 00225800
*          .                                                          * 00225900
*          .                                                          * 00226000
*          .                                                          * 00226100
*      EP_ADDR        DC    A(SRB_ROUTINE)  SRB Entry Point Address   * 00226200
*      PARM_ADDR      DC    A(PARM_LIST)    Pointer to parameter list * 00226300
*                                                                     * 00226400
*    EXAMPLE 7                                                        * 00226500
*                                                                     * 00226600
*    OPERATION: Schedule a synchronous LOCAL SRB routine into the     * 00226700
*    address space whose STOKEN is stored in THEIR_STOKEN.            * 00226800
*    THEIR_TOKEN was previously initialized.  The invoker of IEAMSCHD * 00226900
*    will be suspended until the SRB routine completes, abends, or is * 00227000
*    purged.                                                          * 00227100
*                                                                     * 00227200
*      *                                                              * 00227300
*      SCHED_SRB_RTN  EQU *                                           * 00227400
*                     IEAMSCHD  EPADDR=EP_ADDR,ENV=STOKEN,          X * 00227500
*                     TARGETSTOKEN=THEIR_STOKEN,PRIORITY=LOCAL,     X * 00227600
*                     SYNCH=YES,SYNCHCOMPADDR=COMPCODE,             X * 00227700
*                     SYNCHCODEADDR=ABENDCODE,SYCHRSNADDR=REASONCODE  * 00227800
*      *                                                              * 00227900
*          .                                                          * 00228000
*          .                                                          * 00228100
*          .                                                          * 00228200
*      THEIR_STOKEN   DS    D               Space Token               * 00228300
*      EP_ADDR        DC    A(SRB_ROUTINE)  SRB Entry Point Address   * 00228400
*      COMPCODE       DS    F                                         * 00228500
*      ABENDCODE      DS    F                                         * 00228600
*      REASONCODE     DS    F                                         * 00228700
*                                                                     * 00228800
*                                                                     * 00228900
*01* MACRO USAGE NOTES:                                               * 00229000
*                                                                     * 00229100
*                                                                     * 00229200
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00229300
*        global macro variable.  Any value other than 'NO' will       * 00229400
*        result in the macro expansion being printed.  The default is * 00229500
*        'YES'.  The following examples illustrate how the ZPRINT     * 00229600
*        variable should be set.                                      * 00229700
*                                                                     * 00229800
*                    GBLC &ZPRINT                                     * 00229900
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00230000
*                                                                     * 00230100
*                                                                     * 00230200
*    2.  The IEAMSCHD macro supports multiple versions. The macro key * 00230300
*        list  below  contains the version level in which the key was * 00230400
*        first  introduced.  Positionals  are  identified by the word * 00230500
*        'Positional'  followed by the numeric value of its position. * 00230600
*        Nested  positionals  are  preceded  by their outer key.  The * 00230700
*        lowest value represents the original version and the highest * 00230800
*        value  represents  the  most  recent version of the IEAMSCHD * 00230900
*        macro.    When  specifying  PLISTVER,  be sure that it is at * 00231000
*        least  as high as the highest version number of all the keys * 00231100
*        being used.                                                  * 00231200
*                                                                     * 00231300
*        VERSION   KEY                                                * 00231400
*                                                                     * 00231500
*              0      CLIENTSTOKEN                                    * 00231600
*                     CPUMASK                                         * 00231700
*                     ENCLAVETOKEN                                    * 00231800
*                     ENV                                             * 00231900
*                     EPADDR                                          * 00232000
*                     FEATURE                                         * 00232100
*                     FRRADDR                                         * 00232200
*                     KEYVALUE                                        * 00232300
*                     LLOCK                                           * 00232400
*                     MINORPRIORITY                                   * 00232500
*                     PARM                                            * 00232600
*                     PRIORITY                                        * 00232700
*                     PTCBADDR                                        * 00232800
*                     PURGESTOKEN                                     * 00232900
*                     RMTRADDR                                        * 00233000
*                     SDWALOC31                                       * 00233100
*                     TARGETSTOKEN                                    * 00233200
*                     TRANSFER                                        * 00233300
*              1      SYNCH                                           * 00233400
*                     SYNCHCODEADDR                                   * 00233500
*                     SYNCHCOMPADDR                                   * 00233600
*                     SYNCHRSNADDR                                    * 00233700
*              2      DUALPOOLTOKEN                                   * 00233800
*              3      SRBIDTOKEN                                      * 00233900
*              4      FLAGS                                           * 00234000
*                                                                     * 00234100
*                                                                     * 00234200
*                                                                     * 00234300
*01* CHANGE ACTIVITY:                                                 * 00234400
*                                                                     * 00234500
*   Flag LineItem  FMID    Date   ID    Comment                       * 00234600
*                                                                     * 00234700
*    $L0=ENCLV    HBB5520 931109 PD16H5:  IEAMSCHD macro              * 00234800
*    $L1=ENCLV    HBB5520 940210 PD16H5:  CLIENT keyword              * 00234900
*    $P1=ENCLV    HBB5520 940210 PD16H5:  Indicate KEVVALUE specified * 00235000
*    $D1=DQC0009  HBB6603 951211 B7HGEJ:  SYNCH keywords              * 00235100
*    $D2=DQC0011  HBB6603 960613 B7HGH5:  DUALPOOLTOKEN keyword       * 00235200
*    $P2=PQC1191  HBB6603 960905 B7HGH5:  Perc the abend instead of   * 00235300
*                                         return code 32              * 00235400
*    $P3=PQC1245  HBB6603 960930 B7HGH5:  Handle PRIORITY=CURRENT     * 00235500
*                                         correctly (TRSQ APAR        * 00235600
*                                         OW23802)                    * 00235700
*    $L2=SUP      HBB7730 060101 PD00XB:  CLIENT keyword              * 00235800
*    $L3=ME05744  HBB7730 060203 PD00QR:  remove SUP keyword support  * 00235900
*    $01=OA22745  HBB7730 071203 PD00XZ:  add macdefs='no' to         * 00236000
*                                         KEYVALUE                    * 00236100
*    $P4=ME17828  HBB7770 091201 PD00KD:  Support SDWALOC31 for the   * 00236200
*                                         SRBs FRR                    * 00236300
*    $L4=SRBTERM  HBB7790 110622 PD00KD:  SRBIDTOKEN for use in       * 00236400
*                                         ABTERMing a preemptable SRB * 00236500
*    $P5=ME24731  HBB7790 120921 PD00KD:  Updates to SRBTERM support  * 00236600
*    $L5=ME25379  HBB7790 121218 PD00XB:  FLAGS parameter             * 00236700
*    $L6=SCHDXFER HBB77A0 130205 PD00XB:  TRANSFER parameter          * 00236800
*    $P6=ME26205  HBB77A0 130429 PD00KD:  Prolog update to clarify    * 00236900
*                                         SYNCH=YES vs SRB to task    * 00237000
*                                         perc                        * 00237100
****** END OF SPECIFICATIONS *****************************************/ 00237200
*/********************************************************************* 00237300
         MACRO                                                          00237400
&XLABEL  IEAMSCHD &EPADDR=,&ENV=,&PRIORITY=,&MINORPRIORITY=,           *00237500
               &SRBIDTOKEN=,&CLIENTSTOKEN=,&ENCLAVETOKEN=,             *00237600
               &DUALPOOLTOKEN=,&TARGETSTOKEN=,&FEATURE=,&CPUMASK=,     *00237700
               &FLAGS=,&PARM=,&FRRADDR=,&SDWALOC31=,&KEYVALUE=,        *00237800
               &TRANSFER=,&LLOCK=,&RMTRADDR=,&PURGESTOKEN=,&PTCBADDR=, *00237900
               &SYNCH=,&SYNCHCOMPADDR=,&SYNCHCODEADDR=,&SYNCHRSNADDR=, *00238000
               &RETCODE=,&PLISTVER=,&MF=                                00238100
.*                                                                      00238200
*                   MACDATE -09/26/18-<4>                               00238300
.*                                                                      00238400
.*******************************************************************    00238500
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00238600
.*******************************************************************    00238700
                   GBLC  &ZPRINT     YES=PRINT NO=NO PRINT              00238800
                   GBLC  &ZTEST      YES=TEST NO=NO TEST                00238900
                   GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX        00239000
.*                                                                      00239100
                   GBLC  &ZIEAMSCHD  YES=MACRO USED AT LEAST ONCE       00239200
.*******************************************************************    00239300
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00239400
.*******************************************************************    00239500
                   LCLC  &ZMS        ERROR MESSAGE WORK AREA            00239600
                   LCLC  &ZCNDX      SYSNDX CHARACTERS                  00239700
                   LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED         00239800
                   LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR        00239900
                   LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE        00240000
                   LCLA  &ZAWRK      USED AS A WORK AREA                00240100
                   LCLA  &ZASIZ      USED FOR SIZE OF VALUE             00240200
                   LCLA  &ZN         NUMERIC WORK VARIABLE              00240300
                   LCLC  &ZC         CHARACTER WORK VARIABLE            00240400
                   LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE        00240500
                   LCLA  &ZTLA       VALUE TOO LONG VARIABLE            00240600
                   LCLC  &ZMAC_G     "G" or null                        00240700
&ZMAC_G            SETC  ''                                             00240800
                   LCLC  &ZMAC_LR                                       00240900
&ZMAC_LR           SETC  'LR'                                           00241000
                   LCLC  &ZMAC_L                                        00241100
&ZMAC_L            SETC  'L'                                            00241200
                   LCLC  &ZMAC_ST                                       00241300
&ZMAC_ST           SETC  'ST'                                           00241400
                   LCLC  &ZMAC_LLGT                                     00241500
&ZMAC_LLGT         SETC  'L'                                            00241600
                   LCLC  &ZMAC_LGR                                      00241700
&ZMAC_LGR          SETC  'LR'                                           00241800
                   LCLC  &ZMAC_LG                                       00241900
&ZMAC_LG           SETC  'L'                                            00242000
                   LCLC  &ZMAC_STG                                      00242100
&ZMAC_STG          SETC  'ST'                                           00242200
                   LCLA  &ZMACRET    MACRO RETURN CODE                  00242300
&ZMACRET           SETA  0           ASSUME NO ERRORS                   00242400
.*                                                                      00242500
                   LCLC  &ZCSYSLIST(255)        NONXKEY, POS ARRAY      00242600
                   LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()         00242700
                   LCLA  &ZPLLEN     PARAMETER LIST LENGTH              00242800
                   LCLC  &ZENDBASEPL            End of base PL          00242900
                   LCLA  &ZPLWORKA   PARAMETER LIST LENGTH              00243000
.*******************************************************************    00243100
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00243200
.*******************************************************************    00243300
                   LCLA  &ZI         INDEX FOR ARRAY                    00243400
                   LCLA  &ZJ         INDEX FOR PARMS                    00243500
                   LCLA  &ZK         INDEX FOR PARSE                    00243600
                   LCLA  &ZLO        LOW RANGE VALUE                    00243700
                   LCLA  &ZHI        HIGH RANGE VALUE                   00243800
                   LCLC  &ZW         WORK AREA FOR PARM                 00243900
.********************************************************************   00244000
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00244100
.********************************************************************   00244200
                   GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL            00244300
                   GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE     00244400
                   GBLA  &SYSALVL    SYSSTATE ARCHLVL                   00244500
                   GBLC  &SYSAM64    SYSSTATE AMODE64                   00244600
.*                                                                      00244700
                   AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED     00244800
                   AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED      00244900
                   SPLEVEL  TEST                                        00245000
.ZSYS2             ANOP  ,                                              00245100
                   AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1          00245200
                   AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1          00245300
                   SYSSTATE TEST                                        00245400
                   AGO   .ZSYS4                                         00245500
.ZSYS3             ANOP  ,                                              00245600
&SYSASCE           SETC  'P'         ASSUME SYSSTATE PRIMARY            00245700
.ZSYS4             ANOP  ,                                              00245800
                   AIF   ('&SYSAM64' NE 'YES').ZSYSN64                  00245900
&ZMAC_LLGT         SETC 'LLGT'                                          00246000
&ZMAC_LGR          SETC 'LGR'                                           00246100
&ZMAC_LG           SETC 'LG'                                            00246200
&ZMAC_STG          SETC 'STG'                                           00246300
.ZSYSN64           ANOP  ,                                              00246400
.*******************************************************************    00246500
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00246600
.*******************************************************************    00246700
                   LCLC  &XEPADDR    ++ NAME                            00246800
                   LCLC  &XENV       ++ VALUE                           00246900
                   LCLC  &XPRIORITY  ++ VALUE                           00247000
                   LCLC  &XMINORPRIORITY        ++ NAME                 00247100
                   LCLC  &XSRBIDTOKEN           ++ NAME                 00247200
                   LCLC  &XCLIENTSTOKEN         ++ NAME                 00247300
                   LCLC  &XENCLAVETOKEN         ++ NAME                 00247400
                   LCLC  &XDUALPOOLTOKEN        ++ NAME                 00247500
                   LCLC  &XTARGETSTOKEN         ++ NAME                 00247600
                   LCLC  &XFEATURE   ++ VALUE                           00247700
                   LCLC  &XCPUMASK   ++ NAME                            00247800
                   LCLC  &XFLAGS     ++ NAME                            00247900
                   LCLC  &XPARM      ++ NAME                            00248000
                   LCLC  &XFRRADDR   ++ NAME                            00248100
                   LCLC  &XSDWALOC31            ++ VALUE                00248200
                   LCLC  &XKEYVALUE  ++ NAME                            00248300
                   LCLC  &XTRANSFER  ++ VALUE                           00248400
                   LCLC  &XLLOCK     ++ VALUE                           00248500
                   LCLC  &XRMTRADDR  ++ NAME                            00248600
                   LCLC  &XPURGESTOKEN          ++ NAME                 00248700
                   LCLC  &XPTCBADDR  ++ NAME                            00248800
                   LCLC  &XSYNCH     ++ VALUE                           00248900
                   LCLC  &XSYNCHCOMPADDR        ++ NAME                 00249000
                   LCLC  &XSYNCHCODEADDR        ++ NAME                 00249100
                   LCLC  &XSYNCHRSNADDR         ++ NAME                 00249200
                   LCLC  &XRETCODE   ++ NAME                            00249300
                   LCLA  &XPLISTVER  ++ VALUE                           00249400
                   LCLC  &XMF        ++ VALUE                           00249500
                   LCLC  &XMFCTRL    ++ NAME                            00249600
                   LCLC  &XMFATTR    ++ VALUE                           00249700
                   LCLC  &XMFSCK     ++ VALUE                           00249800
.*******************************************************************    00249900
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00250000
.*******************************************************************    00250100
                   LCLC  &ZXEPADDR   ++ INPUT NAME                      00250200
                   LCLC  &ZXENV      ++ INPUT VALUE                     00250300
                   LCLC  &ZXPRIORITY            ++ INPUT VALUE          00250400
                   LCLC  &ZXMINORPRIORITY       ++ INPUT NAME           00250500
                   LCLC  &ZXSRBIDTOKEN          ++ OUTPUT NAME          00250600
                   LCLC  &ZXCLIENTSTOKEN        ++ INPUT NAME           00250700
                   LCLC  &ZXENCLAVETOKEN        ++ INPUT NAME           00250800
                   LCLC  &ZXDUALPOOLTOKEN       ++ INPUT NAME           00250900
                   LCLC  &ZXTARGETSTOKEN        ++ INPUT NAME           00251000
                   LCLC  &ZXFEATURE  ++ INPUT VALUE                     00251100
                   LCLC  &ZXCPUMASK  ++ INPUT NAME                      00251200
                   LCLC  &ZXFLAGS    ++ INPUT NAME                      00251300
                   LCLC  &ZXPARM     ++ INPUT NAME                      00251400
                   LCLC  &ZXFRRADDR  ++ INPUT NAME                      00251500
                   LCLC  &ZXSDWALOC31           ++ INPUT VALUE          00251600
                   LCLC  &ZXKEYVALUE            ++ INPUT NAME           00251700
                   LCLC  &ZXTRANSFER            ++ INPUT VALUE          00251800
                   LCLC  &ZXLLOCK    ++ INPUT VALUE                     00251900
                   LCLC  &ZXRMTRADDR            ++ INPUT NAME           00252000
                   LCLC  &ZXPURGESTOKEN         ++ INPUT NAME           00252100
                   LCLC  &ZXPTCBADDR            ++ INPUT NAME           00252200
                   LCLC  &ZXSYNCH    ++ INPUT VALUE                     00252300
                   LCLC  &ZXSYNCHCOMPADDR       ++ INPUT NAME           00252400
                   LCLC  &ZXSYNCHCODEADDR       ++ INPUT NAME           00252500
                   LCLC  &ZXSYNCHRSNADDR        ++ INPUT NAME           00252600
                   LCLC  &ZXRETCODE  ++ OUTPUT NAME                     00252700
                   LCLC  &ZXPLISTVER            ++ INPUT VALUE          00252800
                   LCLC  &ZXMF       ++ INPUT VALUE                     00252900
                   LCLC  &ZXMFCTRL   ++ INPUT NAME                      00253000
                   LCLC  &ZXMFATTR   ++ INPUT VALUE                     00253100
                   LCLC  &ZXMFSCK    ++ INPUT VALUE                     00253200
.********************************************************************   00253300
.***AC.PLV01  PROCESS PLISTVER                                      *   00253400
.********************************************************************   00253500
&XPLISTVER      SETA  0                                                 00253600
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00253700
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00253800
&XPLISTVER      SETA  4                                                 00253900
.ZPLV0          ANOP  ,                                                 00254000
.*                                                                      00254100
                AIF   ('&SRBIDTOKEN' EQ '').ZPLV1E                      00254200
                AIF   (&XPLISTVER GE 3).ZPLV1E                          00254300
&XPLISTVER      SETA  3                                                 00254400
.ZPLV1E         ANOP  ,                                                 00254500
.*                                                                      00254600
                AIF   ('&SRBIDTOKEN' EQ '').ZPLV2E                      00254700
                AIF   (&XPLISTVER GE 3).ZPLV2E                          00254800
&XPLISTVER      SETA  3                                                 00254900
.ZPLV2E         ANOP  ,                                                 00255000
.*                                                                      00255100
                AIF   ('&SRBIDTOKEN' EQ '').ZPLV3E                      00255200
                AIF   (&XPLISTVER GE 3).ZPLV3E                          00255300
&XPLISTVER      SETA  3                                                 00255400
.ZPLV3E         ANOP  ,                                                 00255500
.*                                                                      00255600
                AIF   ('&DUALPOOLTOKEN' EQ '').ZPLV4E                   00255700
                AIF   (&XPLISTVER GE 2).ZPLV4E                          00255800
&XPLISTVER      SETA  2                                                 00255900
.ZPLV4E         ANOP  ,                                                 00256000
.*                                                                      00256100
                AIF   ('&SRBIDTOKEN' EQ '').ZPLV5E                      00256200
                AIF   (&XPLISTVER GE 3).ZPLV5E                          00256300
&XPLISTVER      SETA  3                                                 00256400
.ZPLV5E         ANOP  ,                                                 00256500
.*                                                                      00256600
                AIF   ('&SRBIDTOKEN' EQ '').ZPLV6E                      00256700
                AIF   (&XPLISTVER GE 3).ZPLV6E                          00256800
&XPLISTVER      SETA  3                                                 00256900
.ZPLV6E         ANOP  ,                                                 00257000
.*                                                                      00257100
                AIF   ('&SRBIDTOKEN' EQ '').ZPLV7E                      00257200
                AIF   (&XPLISTVER GE 3).ZPLV7E                          00257300
&XPLISTVER      SETA  3                                                 00257400
.ZPLV7E         ANOP  ,                                                 00257500
.*                                                                      00257600
                AIF   ('&DUALPOOLTOKEN' EQ '').ZPLV8E                   00257700
                AIF   (&XPLISTVER GE 2).ZPLV8E                          00257800
&XPLISTVER      SETA  2                                                 00257900
.ZPLV8E         ANOP  ,                                                 00258000
.*                                                                      00258100
                AIF   ('&SRBIDTOKEN' EQ '').ZPLV9E                      00258200
                AIF   (&XPLISTVER GE 3).ZPLV9E                          00258300
&XPLISTVER      SETA  3                                                 00258400
.ZPLV9E         ANOP  ,                                                 00258500
.*                                                                      00258600
                AIF   ('&SRBIDTOKEN' EQ '').ZPLV10E                     00258700
                AIF   (&XPLISTVER GE 3).ZPLV10E                         00258800
&XPLISTVER      SETA  3                                                 00258900
.ZPLV10E        ANOP  ,                                                 00259000
.*                                                                      00259100
                AIF   ('&SRBIDTOKEN' EQ '').ZPLV11E                     00259200
                AIF   (&XPLISTVER GE 3).ZPLV11E                         00259300
&XPLISTVER      SETA  3                                                 00259400
.ZPLV11E        ANOP  ,                                                 00259500
.*                                                                      00259600
                AIF   ('&DUALPOOLTOKEN' EQ '').ZPLV12E                  00259700
                AIF   (&XPLISTVER GE 2).ZPLV12E                         00259800
&XPLISTVER      SETA  2                                                 00259900
.ZPLV12E        ANOP  ,                                                 00260000
.*                                                                      00260100
                AIF   ('&SRBIDTOKEN' EQ '').ZPLV13E                     00260200
                AIF   (&XPLISTVER GE 3).ZPLV13E                         00260300
&XPLISTVER      SETA  3                                                 00260400
.ZPLV13E        ANOP  ,                                                 00260500
.*                                                                      00260600
                AIF   ('&SRBIDTOKEN' EQ '').ZPLV14E                     00260700
                AIF   (&XPLISTVER GE 3).ZPLV14E                         00260800
&XPLISTVER      SETA  3                                                 00260900
.ZPLV14E        ANOP  ,                                                 00261000
.*                                                                      00261100
                AIF   ('&SRBIDTOKEN' EQ '').ZPLV15E                     00261200
                AIF   (&XPLISTVER GE 3).ZPLV15E                         00261300
&XPLISTVER      SETA  3                                                 00261400
.ZPLV15E        ANOP  ,                                                 00261500
.*                                                                      00261600
                AIF   ('&DUALPOOLTOKEN' EQ '').ZPLV16E                  00261700
                AIF   (&XPLISTVER GE 2).ZPLV16E                         00261800
&XPLISTVER      SETA  2                                                 00261900
.ZPLV16E        ANOP  ,                                                 00262000
.*                                                                      00262100
                AIF   ('&FLAGS' EQ '').ZPLV17E                          00262200
                AIF   (&XPLISTVER GE 4).ZPLV17E                         00262300
&XPLISTVER      SETA  4                                                 00262400
.ZPLV17E        ANOP  ,                                                 00262500
.*                                                                      00262600
                AIF   ('&SYNCH' EQ '').ZPLV18E                          00262700
                AIF   (&XPLISTVER GE 1).ZPLV18E                         00262800
&XPLISTVER      SETA  1                                                 00262900
.ZPLV18E        ANOP  ,                                                 00263000
.*                                                                      00263100
                AIF   ('&SYNCHCOMPADDR' EQ '').ZPLV19E                  00263200
                AIF   (&XPLISTVER GE 1).ZPLV19E                         00263300
&XPLISTVER      SETA  1                                                 00263400
.ZPLV19E        ANOP  ,                                                 00263500
.*                                                                      00263600
                AIF   ('&SYNCHCODEADDR' EQ '').ZPLV20E                  00263700
                AIF   (&XPLISTVER GE 1).ZPLV20E                         00263800
&XPLISTVER      SETA  1                                                 00263900
.ZPLV20E        ANOP  ,                                                 00264000
.*                                                                      00264100
                AIF   ('&SYNCHRSNADDR' EQ '').ZPLV21E                   00264200
                AIF   (&XPLISTVER GE 1).ZPLV21E                         00264300
&XPLISTVER      SETA  1                                                 00264400
.ZPLV21E        ANOP  ,                                                 00264500
.*                                                                      00264600
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00264700
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00264800
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00264900
.*-------------------------------------------------------------------   00265000
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00265100
&ZMS            SETC  '"PLISTVER='                                      00265200
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00265300
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00265400
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00265500
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00265600
                AGO   .ZPVCK2                                           00265700
.ZPVCK3         ANOP  ,                                                 00265800
.*-------------------------------------------------------------------   00265900
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00266000
&ZMS            SETC  '"PLISTVER='                                      00266100
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00266200
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00266300
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00266400
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00266500
                AGO   .ZPVCKE                                           00266600
.ZPVCK2         ANOP  ,                                                 00266700
.*-------------------------------------------------------------------   00266800
&ZCVAL          SETC  '&PLISTVER(1)'                                    00266900
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00267000
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00267100
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00267200
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00267300
                AIF   (&ZN LE 4).ZPVCK4A   NOT HIGH                     00267400
.ZPVCK6         ANOP  ,                                                 00267500
&ZMS            SETC  '"PLISTVER='                                      00267600
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00267700
&ZMS            SETC  '&ZMS THE RANGE IS "0-4"'                         00267800
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00267900
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00268000
&XPLISTVER      SETA  4                                                 00268100
                AGO   .ZPVCKE                                           00268200
.*-------------------------------------------------------------------   00268300
.ZPVCK4A        ANOP  ,                                                 00268400
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00268500
&ZMS            SETC  'PLISTVER='                                       00268600
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00268700
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00268800
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00268900
                MNOTE 8,' &ZMS IS REQUIRED.'                            00269000
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00269100
                AGO   .ZPVCK5                                           00269200
.ZPVCK4         ANOP  ,                                                 00269300
&XPLISTVER      SETA  &PLISTVER(1)                                      00269400
.ZPVCK5         ANOP  ,                                                 00269500
.ZPVCKE         ANOP  ,                                                 00269600
.********************************************************************   00269700
.***AG.MF01 PROCESS MF MACRO FORMS                                      00269800
.********************************************************************   00269900
                   ACTR  10000                                          00270000
.*------------------------------------------------------------------    00270100
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00270200
&XMF               SETC  ''          INITIALIZE XVARIABLE               00270300
.*-------------------------------------------------------------------   00270400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00270500
.ZG223             ANOP  ,                                              00270600
&ZTLC              SETC 'S'                                             00270700
                   AIF   ('&MF(1)' NE '&ZTLC').ZG224                    00270800
&XMF               SETC  'S'         SET KEYWORD                        00270900
                   AIF   (N'&MF LE 1).ZG223A    CK NUM                  00271000
&ZMS               SETC  '"MF='                                         00271100
&ZMS               SETC  '&ZMS.&MF"'                                    00271200
&ZMS               SETC  '&ZMS "MF"'                                    00271300
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00271400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00271500
.ZG223A            ANOP  ,                                              00271600
.*-------------------------------------------------------------------   00271700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00271800
.ZG224             ANOP  ,                                              00271900
&ZTLC              SETC 'L'                                             00272000
                   AIF   ('&MF(1)' NE '&ZTLC').ZG231                    00272100
&XMF               SETC  'L'         SET KEYWORD                        00272200
                   AIF   (N'&MF LE 3).ZG224A    CK NUM                  00272300
&ZMS               SETC  '"MF='                                         00272400
&ZMS               SETC  '&ZMS.&MF"'                                    00272500
&ZMS               SETC  '&ZMS "MF"'                                    00272600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'           00272700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00272800
.ZG224A            ANOP  ,                                              00272900
.*-------------------------------------------------------------------   00273000
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00273100
                   AIF   (N'&SYSLIST NE 0).ZG224B  POSITIONALS?         00273200
                   AIF   ('&EPADDR' NE '').ZG224B  KEYS?                00273300
                   AIF   ('&ENV' NE '').ZG224B  KEYS?                   00273400
                   AIF   ('&PRIORITY' NE '').ZG224B  KEYS?              00273500
                   AIF   ('&MINORPRIORITY' NE '').ZG224B  KEYS?         00273600
                   AIF   ('&SRBIDTOKEN' NE '').ZG224B  KEYS?            00273700
                   AIF   ('&CLIENTSTOKEN' NE '').ZG224B  KEYS?          00273800
                   AIF   ('&ENCLAVETOKEN' NE '').ZG224B  KEYS?          00273900
                   AIF   ('&DUALPOOLTOKEN' NE '').ZG224B  KEYS?         00274000
                   AIF   ('&TARGETSTOKEN' NE '').ZG224B  KEYS?          00274100
                   AIF   ('&FEATURE' NE '').ZG224B  KEYS?               00274200
                   AIF   ('&CPUMASK' NE '').ZG224B  KEYS?               00274300
                   AIF   ('&FLAGS' NE '').ZG224B  KEYS?                 00274400
                   AIF   ('&PARM' NE '').ZG224B  KEYS?                  00274500
                   AIF   ('&FRRADDR' NE '').ZG224B  KEYS?               00274600
                   AIF   ('&SDWALOC31' NE '').ZG224B  KEYS?             00274700
                   AIF   ('&KEYVALUE' NE '').ZG224B  KEYS?              00274800
                   AIF   ('&TRANSFER' NE '').ZG224B  KEYS?              00274900
                   AIF   ('&LLOCK' NE '').ZG224B  KEYS?                 00275000
                   AIF   ('&RMTRADDR' NE '').ZG224B  KEYS?              00275100
                   AIF   ('&PURGESTOKEN' NE '').ZG224B  KEYS?           00275200
                   AIF   ('&PTCBADDR' NE '').ZG224B  KEYS?              00275300
                   AIF   ('&SYNCH' NE '').ZG224B  KEYS?                 00275400
                   AIF   ('&SYNCHCOMPADDR' NE '').ZG224B  KEYS?         00275500
                   AIF   ('&SYNCHCODEADDR' NE '').ZG224B  KEYS?         00275600
                   AIF   ('&SYNCHRSNADDR' NE '').ZG224B  KEYS?          00275700
                   AIF   ('&RETCODE' NE '').ZG224B  KEYS?               00275800
                   AGO    .ZG224C    INVOCATION OKAY                    00275900
.ZG224B            ANOP  ,                                              00276000
&ZMS               SETC  'THE "L" FORM OF "MF"'                         00276100
&ZMS               SETC  '&ZMS CAN ONLY HAVE'                           00276200
&ZMS               SETC  '&ZMS THE "PLISTVER" KEY'                      00276300
                   MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'         00276400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00276500
.ZG224C            ANOP  ,                                              00276600
.*-------------------------------------------------------------------   00276700
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00276800
&ZXMFCTRL          SETC  'INPUT'     SET IN/OUTPUT                      00276900
&XMFCTRL           SETC  '&MF(2,1)'  SET XVARIABLE                      00277000
                   AIF   (N'&MF(2) GT 1).ZG226B  MULTI                  00277100
&XMFCTRL           SETC  '&MF(2)'    SET XVARIABLE                      00277200
.ZG226B            AIF   (K'&MF(2) GT 0).ZG226C                         00277300
&ZXMFCTRL          SETC  ''          RESET IN/OUTPUT                    00277400
&ZMS               SETC  'WHEN "L" IS SPECIFIED'                        00277500
&ZMS               SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'            00277600
                   MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                   00277700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00277800
.ZG226C            ANOP  ,                                              00277900
.*-------------------------------------------------------------------   00278000
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00278100
                   AIF   (K'&ZXMFCTRL LE 0).ZG226P  NOT I/O             00278200
                   AIF   ('&XMFCTRL'(1,1) NE '(').ZG226P                00278300
&ZXMFCTRL          SETC  ''          RESET IN/OUTPUT                    00278400
&ZMS               SETC  '"MF='                                         00278500
&ZMS               SETC  '&ZMS.&MF"'                                    00278600
&ZMS               SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'      00278700
                   MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'              00278800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00278900
.ZG226P            ANOP  ,                                              00279000
.*-------------------------------------------------------------------   00279100
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00279200
&ZXMFATTR          SETC  'INPUT'     SET IN/OUTPUT                      00279300
&XMFATTR           SETC  '0D'                                           00279400
                   AIF   (K'&MF(3) LE 0).ZG229B  PARM                   00279500
&XMFATTR           SETC  '&MF(3,1)'  SET XVARIABLE                      00279600
                   AIF   (N'&MF(3) GT 1).ZG229B  MULTI                  00279700
&XMFATTR           SETC  '&MF(3)'    SET XVARIABLE                      00279800
.ZG229B            ANOP  ,                                              00279900
.*-------------------------------------------------------------------   00280000
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00280100
                   AIF   (K'&ZXMFATTR LE 0).ZG229P  NOT I/O             00280200
                   AIF   ('&XMFATTR'(1,1) NE '(').ZG229P                00280300
&ZXMFATTR          SETC  ''          RESET IN/OUTPUT                    00280400
&ZMS               SETC  '"MF='                                         00280500
&ZMS               SETC  '&ZMS.&MF"'                                    00280600
&ZMS               SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'      00280700
                   MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'              00280800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00280900
.ZG229P            ANOP  ,                                              00281000
.*-------------------------------------------------------------------   00281100
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00281200
                   AIF   (K'&ZXMFATTR LE 0).ZG229S  NOT I/O             00281300
                   AIF   (K'&XMFATTR LE 60).ZG229S  LNG OK              00281400
&ZXMFATTR          SETC  ''          RESET IN/OUTPUT                    00281500
&ZMS               SETC  '"MF='                                         00281600
&ZMS               SETC  '&ZMS.&MF"'                                    00281700
&ZMS               SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'          00281800
                   MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'             00281900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00282000
.ZG229S            ANOP  ,                                              00282100
.*-------------------------------------------------------------------   00282200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00282300
.ZG231             ANOP  ,                                              00282400
&ZTLC              SETC 'E'                                             00282500
                   AIF   ('&MF(1)' NE '&ZTLC').ZG239                    00282600
&XMF               SETC  'E'         SET KEYWORD                        00282700
                   AIF   (N'&MF LE 3).ZG231A    CK NUM                  00282800
&ZMS               SETC  '"MF='                                         00282900
&ZMS               SETC  '&ZMS.&MF"'                                    00283000
&ZMS               SETC  '&ZMS "MF"'                                    00283100
                   MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'           00283200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00283300
.ZG231A            ANOP  ,                                              00283400
.*-------------------------------------------------------------------   00283500
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00283600
&ZXMFCTRL          SETC  'INPUT'     SET IN/OUTPUT                      00283700
&XMFCTRL           SETC  '&MF(2,1)'  SET XVARIABLE                      00283800
                   AIF   (N'&MF(2) GT 1).ZG233B  MULTI                  00283900
&XMFCTRL           SETC  '&MF(2)'    SET XVARIABLE                      00284000
.ZG233B            AIF   (K'&MF(2) GT 0).ZG233C                         00284100
&ZXMFCTRL          SETC  ''          RESET IN/OUTPUT                    00284200
&ZMS               SETC  'WHEN "E" IS SPECIFIED'                        00284300
&ZMS               SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'            00284400
                   MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                   00284500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00284600
.ZG233C            ANOP  ,                                              00284700
.*-------------------------------------------------------------------   00284800
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00284900
                   AIF   (K'&ZXMFCTRL LE 0).ZG233R  NOT I/O             00285000
                   AIF   ('&XMFCTRL'(1,1) NE '(').ZG233R                00285100
&ZCGPR             SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                     00285200
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG233P                  00285300
                   AIF   (K'&ZCGPR GT 2).ZG233Q                         00285400
                   AIF   ('&ZCGPR' EQ '0').ZG233Q                       00285500
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00285600
                   AIF   (T'&ZCGPR NE 'N').ZG233Q  INVALID REG NAME     00285700
.ZG233P            ANOP  ,                                              00285800
                   AIF   (T'&ZCGPR NE 'N').ZG233R  NON NUMERIC          00285900
                   AIF   ('&ZCGPR' LT '1').ZG233Q                       00286000
                   AIF   ('&ZCGPR' LE '12').ZG233R                      00286100
.ZG233Q            ANOP  ,                                              00286200
&ZMS               SETC  '"MF='                                         00286300
&ZMS               SETC  '&ZMS.&MF"'                                    00286400
&ZMS               SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'      00286500
                   MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'               00286600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00286700
.ZG233R            ANOP  ,                                              00286800
.*-------------------------------------------------------------------   00286900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00287000
&XMFSCK            SETC  ''          INITIALIZE XVARIABLE               00287100
.ZG237A   AIF   ('&MF(3)' NE 'COMPLETE').ZG238A                         00287200
&XMFSCK            SETC  'COMPLETE'  SET KEYWORD                        00287300
.*-------------------------------------------------------------------   00287400
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00287500
.ZG238A            AIF   (K'&XMFSCK GT 0).ZG238C  KEYWORD               00287600
                   AIF   (K'&MF(3) LE 0).ZG238B                         00287700
&ZMS               SETC  '"MF='                                         00287800
&ZMS               SETC  '&ZMS.&MF"'                                    00287900
&ZMS               SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '      00288000
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00288100
&ZMS               SETC  '&ZMS "COMPLETE".'                             00288200
                   MNOTE 8,' &ZMS '                                     00288300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00288400
.ZG238B            ANOP  ,                                              00288500
&XMFSCK            SETC  'COMPLETE'  SET DEFAULT KEYWORD                00288600
.ZG238C            ANOP  ,                                              00288700
&ZXMFSCK           SETC  'INPUT'     SET IN/OUTPUT                      00288800
.*------------------------------------------------------------------    00288900
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00289000
.ZG239             ANOP  ,                                              00289100
&ZXMF              SETC  'INPUT'     SET IN/OUTPUT                      00289200
                   AIF   (K'&XMF GT 0).ZG239E   VALID ARG               00289300
                   AIF   (T'&MF EQ 'O').ZG239D  OMITTED                 00289400
&ZASYSLNDX         SETA  0                                              00289500
.ZG239A            ANOP  ,           POSITIONAL MACRO KEY               00289600
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   00289700
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG239C              00289800
&ZTLC              SETC 'MF'                                            00289900
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG239A     00290000
.ZG239B            ANOP  ,                                              00290100
&ZXMF              SETC  ''          RESET IN/OUTPUT                    00290200
&ZMS               SETC  'THE "MF" KEY'                                 00290300
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        00290400
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               00290500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00290600
                   AGO   .ZG239E                                        00290700
.ZG239C            ANOP  ,                                              00290800
&ZXMF              SETC  ''          RESET IN/OUTPUT                    00290900
&ZMS               SETC  '"MF='                                         00291000
&ZMS               SETC  '&ZMS.&MF"'                                    00291100
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00291200
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00291300
&ZMS               SETC  '&ZMS "S",'                                    00291400
&ZMS               SETC  '&ZMS "L",'                                    00291500
&ZMS               SETC  '&ZMS OR "E".'                                 00291600
                   MNOTE 8,' &ZMS '                                     00291700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00291800
                   AGO   .ZG239E                                        00291900
.ZG239D            ANOP  ,                                              00292000
&XMF               SETC  'S'         SET DEFAULT KEYWORD                00292100
&XMFSCK            SETC  'COMPLETE'  COMPLETE CHECKING                  00292200
.ZG239E            ANOP  ,                                              00292300
.********************************************************************   00292400
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00292500
.********************************************************************   00292600
                   ACTR  10000                                          00292700
.*-------------------------------------------------------------------   00292800
.***AG.MF03 MF=(SLE)                                                    00292900
                   AIF   ('&XMF' EQ 'L').ZGMFX                          00293000
.*----------------------------------------------------------------***   00293100
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00293200
                   AIF   (N'&EPADDR LE 1).ZG2A  CK NUM                  00293300
&ZMS               SETC  '"EPADDR='                                     00293400
&ZMS               SETC  '&ZMS.&EPADDR"'                                00293500
&ZMS               SETC  '&ZMS "EPADDR"'                                00293600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00293700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00293800
.ZG2A              ANOP  ,                                              00293900
.*-------------------------------------------------------------------   00294000
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00294100
&ZXEPADDR          SETC  'INPUT'     SET IN/OUTPUT                      00294200
&XEPADDR           SETC  '&EPADDR(1)'           SET XVARIABLE           00294300
                   AIF   (N'&EPADDR GT 1).ZG2B  MULTI                   00294400
&XEPADDR           SETC  '&EPADDR'   SET XVARIABLE                      00294500
.ZG2B              AIF   (K'&EPADDR(1) GT 0).ZG2C                       00294600
&ZXEPADDR          SETC  ''          RESET IN/OUTPUT                    00294700
&ZMS               SETC  ' '                                            00294800
&ZMS               SETC  '&ZMS "EPADDR" KEY AND ITS'                    00294900
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00295000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00295100
.ZG2C              ANOP  ,                                              00295200
.*-------------------------------------------------------------------   00295300
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00295400
                   AIF   (K'&ZXEPADDR LE 0).ZG2R  NOT I/O               00295500
                   AIF   ('&XEPADDR'(1,1) NE '(').ZG2R                  00295600
&ZCGPR             SETC  '&XEPADDR'(2,K'&XEPADDR-2)                     00295700
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                    00295800
                   AIF   (K'&ZCGPR GT 2).ZG2Q                           00295900
                   AIF   ('&ZCGPR' EQ '0').ZG2Q                         00296000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00296100
                   AIF   (T'&ZCGPR NE 'N').ZG2Q  INVALID REG NAME       00296200
.ZG2P              ANOP  ,                                              00296300
                   AIF   (T'&ZCGPR NE 'N').ZG2R  NON NUMERIC            00296400
                   AIF   ('&ZCGPR' LT '2').ZG2Q                         00296500
                   AIF   ('&ZCGPR' LE '12').ZG2R                        00296600
.ZG2Q              ANOP  ,                                              00296700
&ZMS               SETC  '"EPADDR='                                     00296800
&ZMS               SETC  '&ZMS.&EPADDR"'                                00296900
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00297000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00297100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00297200
.ZG2R              ANOP  ,                                              00297300
.*------------------------------------------------------------------    00297400
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00297500
&XENV              SETC  ''          INITIALIZE XVARIABLE               00297600
.*-------------------------------------------------------------------   00297700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00297800
.ZG6               ANOP  ,                                              00297900
                   AIF   (K'&ENV(1) LE 0).ZG6A                          00298000
&ZTLC              SETC 'HOME'                                          00298100
                   AIF   ('&ENV(1)' NE '&ZTLC').ZG43                    00298200
&XENV              SETC  'HOME'      SET KEYWORD                        00298300
                   AIF   (N'&ENV LE 1).ZG6A     CK NUM                  00298400
&ZMS               SETC  '"ENV='                                        00298500
&ZMS               SETC  '&ZMS.&ENV"'                                   00298600
&ZMS               SETC  '&ZMS "ENV"'                                   00298700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00298800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00298900
.ZG6A              ANOP  ,                                              00299000
.*------------------------------------------------------------------    00299100
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00299200
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00299300
.ZG6A0             AIF   (K'&TARGETSTOKEN LE 0).ZG6A1  OK               00299400
&ZCVAL             SETC '&ZCVAL TARGETSTOKEN'   INCORRECT KEY USED      00299500
.ZG6A1             AIF   (K'&ZCVAL LE 0).ZG6A2  OK                      00299600
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00299700
&ZMS               SETC  '"ENV'                                         00299800
&ZMS               SETC  '&ZMS.=&ENV"'                                  00299900
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00300000
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00300100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00300200
.ZG6A2             ANOP  ,                                              00300300
.*------------------------------------------------------------------    00300400
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00300500
&XPRIORITY         SETC  ''          INITIALIZE XVARIABLE               00300600
.*-------------------------------------------------------------------   00300700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00300800
.ZG9               ANOP  ,                                              00300900
                   AIF   (K'&PRIORITY(1) LE 0).ZG9A                     00301000
&ZTLC              SETC 'LOCAL'                                         00301100
                   AIF   ('&PRIORITY(1)' NE '&ZTLC').ZG10               00301200
&XPRIORITY         SETC  'LOCAL'     SET KEYWORD                        00301300
                   AIF   (N'&PRIORITY LE 1).ZG9A  CK NUM                00301400
&ZMS               SETC  '"PRIORITY='                                   00301500
&ZMS               SETC  '&ZMS.&PRIORITY"'                              00301600
&ZMS               SETC  '&ZMS "PRIORITY"'                              00301700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00301800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00301900
.ZG9A              ANOP  ,                                              00302000
.*------------------------------------------------------------------    00302100
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00302200
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00302300
.ZG9A0             AIF   (K'&MINORPRIORITY LE 0).ZG9A1  OK              00302400
&ZCVAL             SETC '&ZCVAL MINORPRIORITY'  INCORRECT KEY USED      00302500
.ZG9A1             AIF   (K'&SRBIDTOKEN LE 0).ZG9A2  OK                 00302600
&ZCVAL             SETC '&ZCVAL SRBIDTOKEN'     INCORRECT KEY USED      00302700
.ZG9A2             AIF   (K'&CLIENTSTOKEN LE 0).ZG9A3  OK               00302800
&ZCVAL             SETC '&ZCVAL CLIENTSTOKEN'   INCORRECT KEY USED      00302900
.ZG9A3             AIF   (K'&ENCLAVETOKEN LE 0).ZG9A4  OK               00303000
&ZCVAL             SETC '&ZCVAL ENCLAVETOKEN'   INCORRECT KEY USED      00303100
.ZG9A4             AIF   (K'&ZCVAL LE 0).ZG9A5  OK                      00303200
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00303300
&ZMS               SETC  '"PRIORITY'                                    00303400
&ZMS               SETC  '&ZMS.=&PRIORITY"'                             00303500
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00303600
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00303700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00303800
.ZG9A5             ANOP  ,                                              00303900
.*-------------------------------------------------------------------   00304000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00304100
.ZG10              ANOP  ,                                              00304200
&ZTLC              SETC 'GLOBAL'                                        00304300
                   AIF   ('&PRIORITY(1)' NE '&ZTLC').ZG11               00304400
&XPRIORITY         SETC  'GLOBAL'    SET KEYWORD                        00304500
                   AIF   (N'&PRIORITY LE 1).ZG10A  CK NUM               00304600
&ZMS               SETC  '"PRIORITY='                                   00304700
&ZMS               SETC  '&ZMS.&PRIORITY"'                              00304800
&ZMS               SETC  '&ZMS "PRIORITY"'                              00304900
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00305000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00305100
.ZG10A             ANOP  ,                                              00305200
.*------------------------------------------------------------------    00305300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00305400
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00305500
.ZG10A0            AIF   (K'&MINORPRIORITY LE 0).ZG10A1  OK             00305600
&ZCVAL             SETC '&ZCVAL MINORPRIORITY'  INCORRECT KEY USED      00305700
.ZG10A1            AIF   (K'&SRBIDTOKEN LE 0).ZG10A2  OK                00305800
&ZCVAL             SETC '&ZCVAL SRBIDTOKEN'     INCORRECT KEY USED      00305900
.ZG10A2            AIF   (K'&CLIENTSTOKEN LE 0).ZG10A3  OK              00306000
&ZCVAL             SETC '&ZCVAL CLIENTSTOKEN'   INCORRECT KEY USED      00306100
.ZG10A3            AIF   (K'&ENCLAVETOKEN LE 0).ZG10A4  OK              00306200
&ZCVAL             SETC '&ZCVAL ENCLAVETOKEN'   INCORRECT KEY USED      00306300
.ZG10A4            AIF   (K'&ZCVAL LE 0).ZG10A5  OK                     00306400
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00306500
&ZMS               SETC  '"PRIORITY'                                    00306600
&ZMS               SETC  '&ZMS.=&PRIORITY"'                             00306700
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00306800
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00306900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00307000
.ZG10A5            ANOP  ,                                              00307100
.*-------------------------------------------------------------------   00307200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00307300
.ZG11              ANOP  ,                                              00307400
&ZTLC              SETC 'CURRENT'                                       00307500
                   AIF   ('&PRIORITY(1)' NE '&ZTLC').ZG12               00307600
&XPRIORITY         SETC  'CURRENT'   SET KEYWORD                        00307700
                   AIF   (N'&PRIORITY LE 1).ZG11A  CK NUM               00307800
&ZMS               SETC  '"PRIORITY='                                   00307900
&ZMS               SETC  '&ZMS.&PRIORITY"'                              00308000
&ZMS               SETC  '&ZMS "PRIORITY"'                              00308100
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00308200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00308300
.ZG11A             ANOP  ,                                              00308400
.*------------------------------------------------------------------    00308500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00308600
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00308700
.ZG11A0            AIF   (K'&MINORPRIORITY LE 0).ZG11A1  OK             00308800
&ZCVAL             SETC '&ZCVAL MINORPRIORITY'  INCORRECT KEY USED      00308900
.ZG11A1            AIF   (K'&SRBIDTOKEN LE 0).ZG11A2  OK                00309000
&ZCVAL             SETC '&ZCVAL SRBIDTOKEN'     INCORRECT KEY USED      00309100
.ZG11A2            AIF   (K'&CLIENTSTOKEN LE 0).ZG11A3  OK              00309200
&ZCVAL             SETC '&ZCVAL CLIENTSTOKEN'   INCORRECT KEY USED      00309300
.ZG11A3            AIF   (K'&ENCLAVETOKEN LE 0).ZG11A4  OK              00309400
&ZCVAL             SETC '&ZCVAL ENCLAVETOKEN'   INCORRECT KEY USED      00309500
.ZG11A4            AIF   (K'&ZCVAL LE 0).ZG11A5  OK                     00309600
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00309700
&ZMS               SETC  '"PRIORITY'                                    00309800
&ZMS               SETC  '&ZMS.=&PRIORITY"'                             00309900
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00310000
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00310100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00310200
.ZG11A5            ANOP  ,                                              00310300
.*-------------------------------------------------------------------   00310400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00310500
.ZG12              ANOP  ,                                              00310600
&ZTLC              SETC 'PREEMPT'                                       00310700
                   AIF   ('&PRIORITY(1)' NE '&ZTLC').ZG19               00310800
&XPRIORITY         SETC  'PREEMPT'   SET KEYWORD                        00310900
                   AIF   (N'&PRIORITY LE 1).ZG12A  CK NUM               00311000
&ZMS               SETC  '"PRIORITY='                                   00311100
&ZMS               SETC  '&ZMS.&PRIORITY"'                              00311200
&ZMS               SETC  '&ZMS "PRIORITY"'                              00311300
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00311400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00311500
.ZG12A             ANOP  ,                                              00311600
.*------------------------------------------------------------------    00311700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00311800
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00311900
.ZG12A0            AIF   (K'&CLIENTSTOKEN LE 0).ZG12A1  OK              00312000
&ZCVAL             SETC '&ZCVAL CLIENTSTOKEN'   INCORRECT KEY USED      00312100
.ZG12A1            AIF   (K'&ENCLAVETOKEN LE 0).ZG12A2  OK              00312200
&ZCVAL             SETC '&ZCVAL ENCLAVETOKEN'   INCORRECT KEY USED      00312300
.ZG12A2            AIF   (K'&ZCVAL LE 0).ZG12A3  OK                     00312400
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00312500
&ZMS               SETC  '"PRIORITY'                                    00312600
&ZMS               SETC  '&ZMS.=&PRIORITY"'                             00312700
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00312800
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00312900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00313000
.ZG12A3            ANOP  ,                                              00313100
.*----------------------------------------------------------------***   00313200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00313300
                   AIF   (N'&MINORPRIORITY LE 1).ZG14A  CK NUM          00313400
&ZMS               SETC  '"MINORPRIORITY='                              00313500
&ZMS               SETC  '&ZMS.&MINORPRIORITY"'                         00313600
&ZMS               SETC  '&ZMS "MINORPRIORITY"'                         00313700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00313800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00313900
.ZG14A             ANOP  ,                                              00314000
.*-------------------------------------------------------------------   00314100
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00314200
&ZXMINORPRIORITY   SETC  'INPUT'     SET IN/OUTPUT                      00314300
&XMINORPRIORITY    SETC  'ZERO'                                         00314400
                   AIF   (K'&MINORPRIORITY(1) LE 0).ZG14B  PARM         00314500
&XMINORPRIORITY    SETC  '&MINORPRIORITY(1)'    SET XVARIABLE           00314600
                   AIF   (N'&MINORPRIORITY GT 1).ZG14B  MULTI           00314700
&XMINORPRIORITY    SETC  '&MINORPRIORITY'       SET XVARIABLE           00314800
.ZG14B             ANOP  ,                                              00314900
.*-------------------------------------------------------------------   00315000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00315100
                   AIF   (K'&ZXMINORPRIORITY LE 0).ZG14R  NOT I/O       00315200
         AIF   ('&XMINORPRIORITY' EQ 'ZERO').ZG14R                      00315300
                   AIF   ('&XMINORPRIORITY'(1,1) NE '(').ZG14R          00315400
&ZCGPR             SETC  '&XMINORPRIORITY'(2,K'&XMINORPRIORITY-2)       00315500
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG14P                   00315600
                   AIF   (K'&ZCGPR GT 2).ZG14Q                          00315700
                   AIF   ('&ZCGPR' EQ '0').ZG14Q                        00315800
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00315900
                   AIF   (T'&ZCGPR NE 'N').ZG14Q  INVALID REG NAME      00316000
.ZG14P             ANOP  ,                                              00316100
                   AIF   (T'&ZCGPR NE 'N').ZG14R  NON NUMERIC           00316200
                   AIF   ('&ZCGPR' LT '2').ZG14Q                        00316300
                   AIF   ('&ZCGPR' LE '12').ZG14R                       00316400
.ZG14Q             ANOP  ,                                              00316500
&ZMS               SETC  '"MINORPRIORITY='                              00316600
&ZMS               SETC  '&ZMS.&MINORPRIORITY"'                         00316700
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00316800
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00316900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00317000
.ZG14R             ANOP  ,                                              00317100
.*----------------------------------------------------------------***   00317200
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00317300
                   AIF   (N'&SRBIDTOKEN LE 1).ZG17A  CK NUM             00317400
&ZMS               SETC  '"SRBIDTOKEN='                                 00317500
&ZMS               SETC  '&ZMS.&SRBIDTOKEN"'                            00317600
&ZMS               SETC  '&ZMS "SRBIDTOKEN"'                            00317700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00317800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00317900
.ZG17A             ANOP  ,                                              00318000
.*-------------------------------------------------------------------   00318100
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00318200
                   AIF   (K'&SRBIDTOKEN(1) LE 0).ZG17C  NO PARM         00318300
&ZXSRBIDTOKEN      SETC  'OUTPUT'    SET OUTPUT                         00318400
&XSRBIDTOKEN       SETC  '&SRBIDTOKEN(1)'       SET XVARIABLE           00318500
                   AIF   (N'&SRBIDTOKEN GT 1).ZG17C                     00318600
&XSRBIDTOKEN       SETC  '&SRBIDTOKEN'          SET XVARIABLE           00318700
.ZG17C             ANOP  ,                                              00318800
.*-------------------------------------------------------------------   00318900
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00319000
                   AIF   (K'&ZXSRBIDTOKEN LE 0).ZG17R  NOT I/O          00319100
                   AIF   ('&XSRBIDTOKEN'(1,1) NE '(').ZG17R             00319200
&ZCGPR             SETC  '&XSRBIDTOKEN'(2,K'&XSRBIDTOKEN-2)             00319300
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG17P                   00319400
                   AIF   (K'&ZCGPR GT 2).ZG17Q                          00319500
                   AIF   ('&ZCGPR' EQ '0').ZG17Q                        00319600
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00319700
                   AIF   (T'&ZCGPR NE 'N').ZG17Q  INVALID REG NAME      00319800
.ZG17P             ANOP  ,                                              00319900
                   AIF   (T'&ZCGPR NE 'N').ZG17R  NON NUMERIC           00320000
                   AIF   ('&ZCGPR' LT '2').ZG17Q                        00320100
                   AIF   ('&ZCGPR' LE '12').ZG17R                       00320200
.ZG17Q             ANOP  ,                                              00320300
&ZMS               SETC  '"SRBIDTOKEN='                                 00320400
&ZMS               SETC  '&ZMS.&SRBIDTOKEN"'                            00320500
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00320600
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00320700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00320800
.ZG17R             ANOP  ,                                              00320900
.*-------------------------------------------------------------------   00321000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00321100
.ZG19              ANOP  ,                                              00321200
&ZTLC              SETC 'CLIENT'                                        00321300
                   AIF   ('&PRIORITY(1)' NE '&ZTLC').ZG29               00321400
&XPRIORITY         SETC  'CLIENT'    SET KEYWORD                        00321500
                   AIF   (N'&PRIORITY LE 1).ZG19A  CK NUM               00321600
&ZMS               SETC  '"PRIORITY='                                   00321700
&ZMS               SETC  '&ZMS.&PRIORITY"'                              00321800
&ZMS               SETC  '&ZMS "PRIORITY"'                              00321900
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00322000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00322100
.ZG19A             ANOP  ,                                              00322200
.*------------------------------------------------------------------    00322300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00322400
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00322500
.ZG19A0            AIF   (K'&ENCLAVETOKEN LE 0).ZG19A1  OK              00322600
&ZCVAL             SETC '&ZCVAL ENCLAVETOKEN'   INCORRECT KEY USED      00322700
.ZG19A1            AIF   (K'&ZCVAL LE 0).ZG19A2  OK                     00322800
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00322900
&ZMS               SETC  '"PRIORITY'                                    00323000
&ZMS               SETC  '&ZMS.=&PRIORITY"'                             00323100
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00323200
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00323300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00323400
.ZG19A2            ANOP  ,                                              00323500
.*----------------------------------------------------------------***   00323600
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00323700
                   AIF   (N'&CLIENTSTOKEN LE 1).ZG21A  CK NUM           00323800
&ZMS               SETC  '"CLIENTSTOKEN='                               00323900
&ZMS               SETC  '&ZMS.&CLIENTSTOKEN"'                          00324000
&ZMS               SETC  '&ZMS "CLIENTSTOKEN"'                          00324100
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00324200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00324300
.ZG21A             ANOP  ,                                              00324400
.*-------------------------------------------------------------------   00324500
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00324600
&ZXCLIENTSTOKEN    SETC  'INPUT'     SET IN/OUTPUT                      00324700
&XCLIENTSTOKEN     SETC  '&CLIENTSTOKEN(1)'     SET XVARIABLE           00324800
                   AIF   (N'&CLIENTSTOKEN GT 1).ZG21B  MULTI            00324900
&XCLIENTSTOKEN     SETC  '&CLIENTSTOKEN'        SET XVARIABLE           00325000
.ZG21B             AIF   (K'&CLIENTSTOKEN(1) GT 0).ZG21C                00325100
&ZXCLIENTSTOKEN    SETC  ''          RESET IN/OUTPUT                    00325200
&ZMS               SETC  'WHEN "CLIENT" IS SPECIFIED'                   00325300
&ZMS               SETC  '&ZMS , "CLIENTSTOKEN" KEY AND ITS'            00325400
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00325500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00325600
.ZG21C             ANOP  ,                                              00325700
.*-------------------------------------------------------------------   00325800
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00325900
                   AIF   (K'&ZXCLIENTSTOKEN LE 0).ZG21R  NOT I/O        00326000
                   AIF   ('&XCLIENTSTOKEN'(1,1) NE '(').ZG21R           00326100
&ZCGPR             SETC  '&XCLIENTSTOKEN'(2,K'&XCLIENTSTOKEN-2)         00326200
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG21P                   00326300
                   AIF   (K'&ZCGPR GT 2).ZG21Q                          00326400
                   AIF   ('&ZCGPR' EQ '0').ZG21Q                        00326500
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00326600
                   AIF   (T'&ZCGPR NE 'N').ZG21Q  INVALID REG NAME      00326700
.ZG21P             ANOP  ,                                              00326800
                   AIF   (T'&ZCGPR NE 'N').ZG21R  NON NUMERIC           00326900
                   AIF   ('&ZCGPR' LT '2').ZG21Q                        00327000
                   AIF   ('&ZCGPR' LE '12').ZG21R                       00327100
.ZG21Q             ANOP  ,                                              00327200
&ZMS               SETC  '"CLIENTSTOKEN='                               00327300
&ZMS               SETC  '&ZMS.&CLIENTSTOKEN"'                          00327400
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00327500
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00327600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00327700
.ZG21R             ANOP  ,                                              00327800
.*----------------------------------------------------------------***   00327900
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00328000
                   AIF   (N'&MINORPRIORITY LE 1).ZG24A  CK NUM          00328100
&ZMS               SETC  '"MINORPRIORITY='                              00328200
&ZMS               SETC  '&ZMS.&MINORPRIORITY"'                         00328300
&ZMS               SETC  '&ZMS "MINORPRIORITY"'                         00328400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00328500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00328600
.ZG24A             ANOP  ,                                              00328700
.*-------------------------------------------------------------------   00328800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00328900
&ZXMINORPRIORITY   SETC  'INPUT'     SET IN/OUTPUT                      00329000
&XMINORPRIORITY    SETC  'ZERO'                                         00329100
                   AIF   (K'&MINORPRIORITY(1) LE 0).ZG24B  PARM         00329200
&XMINORPRIORITY    SETC  '&MINORPRIORITY(1)'    SET XVARIABLE           00329300
                   AIF   (N'&MINORPRIORITY GT 1).ZG24B  MULTI           00329400
&XMINORPRIORITY    SETC  '&MINORPRIORITY'       SET XVARIABLE           00329500
.ZG24B             ANOP  ,                                              00329600
.*-------------------------------------------------------------------   00329700
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00329800
                   AIF   (K'&ZXMINORPRIORITY LE 0).ZG24R  NOT I/O       00329900
         AIF   ('&XMINORPRIORITY' EQ 'ZERO').ZG24R                      00330000
                   AIF   ('&XMINORPRIORITY'(1,1) NE '(').ZG24R          00330100
&ZCGPR             SETC  '&XMINORPRIORITY'(2,K'&XMINORPRIORITY-2)       00330200
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG24P                   00330300
                   AIF   (K'&ZCGPR GT 2).ZG24Q                          00330400
                   AIF   ('&ZCGPR' EQ '0').ZG24Q                        00330500
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00330600
                   AIF   (T'&ZCGPR NE 'N').ZG24Q  INVALID REG NAME      00330700
.ZG24P             ANOP  ,                                              00330800
                   AIF   (T'&ZCGPR NE 'N').ZG24R  NON NUMERIC           00330900
                   AIF   ('&ZCGPR' LT '2').ZG24Q                        00331000
                   AIF   ('&ZCGPR' LE '12').ZG24R                       00331100
.ZG24Q             ANOP  ,                                              00331200
&ZMS               SETC  '"MINORPRIORITY='                              00331300
&ZMS               SETC  '&ZMS.&MINORPRIORITY"'                         00331400
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00331500
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00331600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00331700
.ZG24R             ANOP  ,                                              00331800
.*----------------------------------------------------------------***   00331900
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00332000
                   AIF   (N'&SRBIDTOKEN LE 1).ZG27A  CK NUM             00332100
&ZMS               SETC  '"SRBIDTOKEN='                                 00332200
&ZMS               SETC  '&ZMS.&SRBIDTOKEN"'                            00332300
&ZMS               SETC  '&ZMS "SRBIDTOKEN"'                            00332400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00332500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00332600
.ZG27A             ANOP  ,                                              00332700
.*-------------------------------------------------------------------   00332800
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00332900
                   AIF   (K'&SRBIDTOKEN(1) LE 0).ZG27C  NO PARM         00333000
&ZXSRBIDTOKEN      SETC  'OUTPUT'    SET OUTPUT                         00333100
&XSRBIDTOKEN       SETC  '&SRBIDTOKEN(1)'       SET XVARIABLE           00333200
                   AIF   (N'&SRBIDTOKEN GT 1).ZG27C                     00333300
&XSRBIDTOKEN       SETC  '&SRBIDTOKEN'          SET XVARIABLE           00333400
.ZG27C             ANOP  ,                                              00333500
.*-------------------------------------------------------------------   00333600
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00333700
                   AIF   (K'&ZXSRBIDTOKEN LE 0).ZG27R  NOT I/O          00333800
                   AIF   ('&XSRBIDTOKEN'(1,1) NE '(').ZG27R             00333900
&ZCGPR             SETC  '&XSRBIDTOKEN'(2,K'&XSRBIDTOKEN-2)             00334000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG27P                   00334100
                   AIF   (K'&ZCGPR GT 2).ZG27Q                          00334200
                   AIF   ('&ZCGPR' EQ '0').ZG27Q                        00334300
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00334400
                   AIF   (T'&ZCGPR NE 'N').ZG27Q  INVALID REG NAME      00334500
.ZG27P             ANOP  ,                                              00334600
                   AIF   (T'&ZCGPR NE 'N').ZG27R  NON NUMERIC           00334700
                   AIF   ('&ZCGPR' LT '2').ZG27Q                        00334800
                   AIF   ('&ZCGPR' LE '12').ZG27R                       00334900
.ZG27Q             ANOP  ,                                              00335000
&ZMS               SETC  '"SRBIDTOKEN='                                 00335100
&ZMS               SETC  '&ZMS.&SRBIDTOKEN"'                            00335200
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00335300
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00335400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00335500
.ZG27R             ANOP  ,                                              00335600
.*-------------------------------------------------------------------   00335700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00335800
.ZG29              ANOP  ,                                              00335900
&ZTLC              SETC 'ENCLAVE'                                       00336000
                   AIF   ('&PRIORITY(1)' NE '&ZTLC').ZG39               00336100
&XPRIORITY         SETC  'ENCLAVE'   SET KEYWORD                        00336200
                   AIF   (N'&PRIORITY LE 1).ZG29A  CK NUM               00336300
&ZMS               SETC  '"PRIORITY='                                   00336400
&ZMS               SETC  '&ZMS.&PRIORITY"'                              00336500
&ZMS               SETC  '&ZMS "PRIORITY"'                              00336600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00336700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00336800
.ZG29A             ANOP  ,                                              00336900
.*------------------------------------------------------------------    00337000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00337100
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00337200
.ZG29A0            AIF   (K'&CLIENTSTOKEN LE 0).ZG29A1  OK              00337300
&ZCVAL             SETC '&ZCVAL CLIENTSTOKEN'   INCORRECT KEY USED      00337400
.ZG29A1            AIF   (K'&ZCVAL LE 0).ZG29A2  OK                     00337500
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00337600
&ZMS               SETC  '"PRIORITY'                                    00337700
&ZMS               SETC  '&ZMS.=&PRIORITY"'                             00337800
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00337900
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00338000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00338100
.ZG29A2            ANOP  ,                                              00338200
.*----------------------------------------------------------------***   00338300
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00338400
                   AIF   (N'&ENCLAVETOKEN LE 1).ZG31A  CK NUM           00338500
&ZMS               SETC  '"ENCLAVETOKEN='                               00338600
&ZMS               SETC  '&ZMS.&ENCLAVETOKEN"'                          00338700
&ZMS               SETC  '&ZMS "ENCLAVETOKEN"'                          00338800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00338900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00339000
.ZG31A             ANOP  ,                                              00339100
.*-------------------------------------------------------------------   00339200
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00339300
&ZXENCLAVETOKEN    SETC  'INPUT'     SET IN/OUTPUT                      00339400
&XENCLAVETOKEN     SETC  '&ENCLAVETOKEN(1)'     SET XVARIABLE           00339500
                   AIF   (N'&ENCLAVETOKEN GT 1).ZG31B  MULTI            00339600
&XENCLAVETOKEN     SETC  '&ENCLAVETOKEN'        SET XVARIABLE           00339700
.ZG31B             AIF   (K'&ENCLAVETOKEN(1) GT 0).ZG31C                00339800
&ZXENCLAVETOKEN    SETC  ''          RESET IN/OUTPUT                    00339900
&ZMS               SETC  ' '                                            00340000
&ZMS               SETC  '&ZMS "ENCLAVETOKEN" KEY AND ITS'              00340100
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00340200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00340300
.ZG31C             ANOP  ,                                              00340400
.*-------------------------------------------------------------------   00340500
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00340600
                   AIF   (K'&ZXENCLAVETOKEN LE 0).ZG31R  NOT I/O        00340700
                   AIF   ('&XENCLAVETOKEN'(1,1) NE '(').ZG31R           00340800
&ZCGPR             SETC  '&XENCLAVETOKEN'(2,K'&XENCLAVETOKEN-2)         00340900
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG31P                   00341000
                   AIF   (K'&ZCGPR GT 2).ZG31Q                          00341100
                   AIF   ('&ZCGPR' EQ '0').ZG31Q                        00341200
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00341300
                   AIF   (T'&ZCGPR NE 'N').ZG31Q  INVALID REG NAME      00341400
.ZG31P             ANOP  ,                                              00341500
                   AIF   (T'&ZCGPR NE 'N').ZG31R  NON NUMERIC           00341600
                   AIF   ('&ZCGPR' LT '2').ZG31Q                        00341700
                   AIF   ('&ZCGPR' LE '12').ZG31R                       00341800
.ZG31Q             ANOP  ,                                              00341900
&ZMS               SETC  '"ENCLAVETOKEN='                               00342000
&ZMS               SETC  '&ZMS.&ENCLAVETOKEN"'                          00342100
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00342200
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00342300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00342400
.ZG31R             ANOP  ,                                              00342500
.*----------------------------------------------------------------***   00342600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00342700
                   AIF   (N'&MINORPRIORITY LE 1).ZG34A  CK NUM          00342800
&ZMS               SETC  '"MINORPRIORITY='                              00342900
&ZMS               SETC  '&ZMS.&MINORPRIORITY"'                         00343000
&ZMS               SETC  '&ZMS "MINORPRIORITY"'                         00343100
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00343200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00343300
.ZG34A             ANOP  ,                                              00343400
.*-------------------------------------------------------------------   00343500
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00343600
&ZXMINORPRIORITY   SETC  'INPUT'     SET IN/OUTPUT                      00343700
&XMINORPRIORITY    SETC  'ZERO'                                         00343800
                   AIF   (K'&MINORPRIORITY(1) LE 0).ZG34B  PARM         00343900
&XMINORPRIORITY    SETC  '&MINORPRIORITY(1)'    SET XVARIABLE           00344000
                   AIF   (N'&MINORPRIORITY GT 1).ZG34B  MULTI           00344100
&XMINORPRIORITY    SETC  '&MINORPRIORITY'       SET XVARIABLE           00344200
.ZG34B             ANOP  ,                                              00344300
.*-------------------------------------------------------------------   00344400
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00344500
                   AIF   (K'&ZXMINORPRIORITY LE 0).ZG34R  NOT I/O       00344600
         AIF   ('&XMINORPRIORITY' EQ 'ZERO').ZG34R                      00344700
                   AIF   ('&XMINORPRIORITY'(1,1) NE '(').ZG34R          00344800
&ZCGPR             SETC  '&XMINORPRIORITY'(2,K'&XMINORPRIORITY-2)       00344900
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG34P                   00345000
                   AIF   (K'&ZCGPR GT 2).ZG34Q                          00345100
                   AIF   ('&ZCGPR' EQ '0').ZG34Q                        00345200
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00345300
                   AIF   (T'&ZCGPR NE 'N').ZG34Q  INVALID REG NAME      00345400
.ZG34P             ANOP  ,                                              00345500
                   AIF   (T'&ZCGPR NE 'N').ZG34R  NON NUMERIC           00345600
                   AIF   ('&ZCGPR' LT '2').ZG34Q                        00345700
                   AIF   ('&ZCGPR' LE '12').ZG34R                       00345800
.ZG34Q             ANOP  ,                                              00345900
&ZMS               SETC  '"MINORPRIORITY='                              00346000
&ZMS               SETC  '&ZMS.&MINORPRIORITY"'                         00346100
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00346200
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00346300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00346400
.ZG34R             ANOP  ,                                              00346500
.*----------------------------------------------------------------***   00346600
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00346700
                   AIF   (N'&SRBIDTOKEN LE 1).ZG37A  CK NUM             00346800
&ZMS               SETC  '"SRBIDTOKEN='                                 00346900
&ZMS               SETC  '&ZMS.&SRBIDTOKEN"'                            00347000
&ZMS               SETC  '&ZMS "SRBIDTOKEN"'                            00347100
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00347200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00347300
.ZG37A             ANOP  ,                                              00347400
.*-------------------------------------------------------------------   00347500
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00347600
                   AIF   (K'&SRBIDTOKEN(1) LE 0).ZG37C  NO PARM         00347700
&ZXSRBIDTOKEN      SETC  'OUTPUT'    SET OUTPUT                         00347800
&XSRBIDTOKEN       SETC  '&SRBIDTOKEN(1)'       SET XVARIABLE           00347900
                   AIF   (N'&SRBIDTOKEN GT 1).ZG37C                     00348000
&XSRBIDTOKEN       SETC  '&SRBIDTOKEN'          SET XVARIABLE           00348100
.ZG37C             ANOP  ,                                              00348200
.*-------------------------------------------------------------------   00348300
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00348400
                   AIF   (K'&ZXSRBIDTOKEN LE 0).ZG37R  NOT I/O          00348500
                   AIF   ('&XSRBIDTOKEN'(1,1) NE '(').ZG37R             00348600
&ZCGPR             SETC  '&XSRBIDTOKEN'(2,K'&XSRBIDTOKEN-2)             00348700
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG37P                   00348800
                   AIF   (K'&ZCGPR GT 2).ZG37Q                          00348900
                   AIF   ('&ZCGPR' EQ '0').ZG37Q                        00349000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00349100
                   AIF   (T'&ZCGPR NE 'N').ZG37Q  INVALID REG NAME      00349200
.ZG37P             ANOP  ,                                              00349300
                   AIF   (T'&ZCGPR NE 'N').ZG37R  NON NUMERIC           00349400
                   AIF   ('&ZCGPR' LT '2').ZG37Q                        00349500
                   AIF   ('&ZCGPR' LE '12').ZG37R                       00349600
.ZG37Q             ANOP  ,                                              00349700
&ZMS               SETC  '"SRBIDTOKEN='                                 00349800
&ZMS               SETC  '&ZMS.&SRBIDTOKEN"'                            00349900
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00350000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00350100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00350200
.ZG37R             ANOP  ,                                              00350300
.*------------------------------------------------------------------    00350400
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00350500
.ZG39              ANOP  ,                                              00350600
&ZXPRIORITY        SETC  'INPUT'     SET IN/OUTPUT                      00350700
                   AIF   (K'&XPRIORITY GT 0).ZG39E  VALID ARG           00350800
                   AIF   (T'&PRIORITY EQ 'O').ZG39D  OMITTED            00350900
&ZASYSLNDX         SETA  0                                              00351000
.ZG39A             ANOP  ,           POSITIONAL MACRO KEY               00351100
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   00351200
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG39C               00351300
&ZTLC              SETC 'PRIORITY'                                      00351400
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG39A      00351500
.ZG39B             ANOP  ,                                              00351600
&ZXPRIORITY        SETC  ''          RESET IN/OUTPUT                    00351700
&ZMS               SETC  'THE "PRIORITY" KEY'                           00351800
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        00351900
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               00352000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00352100
                   AGO   .ZG39E                                         00352200
.ZG39C             ANOP  ,                                              00352300
&ZXPRIORITY        SETC  ''          RESET IN/OUTPUT                    00352400
&ZMS               SETC  '"PRIORITY='                                   00352500
&ZMS               SETC  '&ZMS.&PRIORITY"'                              00352600
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00352700
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00352800
&ZMS               SETC  '&ZMS "LOCAL",'                                00352900
&ZMS               SETC  '&ZMS "GLOBAL",'                               00353000
&ZMS               SETC  '&ZMS "CURRENT",'                              00353100
&ZMS               SETC  '&ZMS "PREEMPT",'                              00353200
&ZMS               SETC  '&ZMS "CLIENT",'                               00353300
&ZMS               SETC  '&ZMS OR "ENCLAVE".'                           00353400
                   MNOTE 8,' &ZMS '                                     00353500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00353600
                   AGO   .ZG39E                                         00353700
.ZG39D             ANOP  ,                                              00353800
&XPRIORITY         SETC  'LOCAL'     SET DEFAULT KEYWORD                00353900
.ZG39E             ANOP  ,                                              00354000
.*----------------------------------------------------------------***   00354100
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00354200
                   AIF   (N'&DUALPOOLTOKEN LE 1).ZG41A  CK NUM          00354300
&ZMS               SETC  '"DUALPOOLTOKEN='                              00354400
&ZMS               SETC  '&ZMS.&DUALPOOLTOKEN"'                         00354500
&ZMS               SETC  '&ZMS "DUALPOOLTOKEN"'                         00354600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00354700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00354800
.ZG41A             ANOP  ,                                              00354900
.*-------------------------------------------------------------------   00355000
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00355100
&ZXDUALPOOLTOKEN   SETC  'INPUT'     SET IN/OUTPUT                      00355200
&XDUALPOOLTOKEN    SETC  'NOTOKEN'                                      00355300
                   AIF   (K'&DUALPOOLTOKEN(1) LE 0).ZG41B  PARM         00355400
&XDUALPOOLTOKEN    SETC  '&DUALPOOLTOKEN(1)'    SET XVARIABLE           00355500
                   AIF   (N'&DUALPOOLTOKEN GT 1).ZG41B  MULTI           00355600
&XDUALPOOLTOKEN    SETC  '&DUALPOOLTOKEN'       SET XVARIABLE           00355700
.ZG41B             ANOP  ,                                              00355800
.*-------------------------------------------------------------------   00355900
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00356000
                   AIF   (K'&ZXDUALPOOLTOKEN LE 0).ZG41R  NOT I/O       00356100
         AIF   ('&XDUALPOOLTOKEN' EQ 'NOTOKEN').ZG41R                   00356200
                   AIF   ('&XDUALPOOLTOKEN'(1,1) NE '(').ZG41R          00356300
&ZCGPR             SETC  '&XDUALPOOLTOKEN'(2,K'&XDUALPOOLTOKEN-2)       00356400
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG41P                   00356500
                   AIF   (K'&ZCGPR GT 2).ZG41Q                          00356600
                   AIF   ('&ZCGPR' EQ '0').ZG41Q                        00356700
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00356800
                   AIF   (T'&ZCGPR NE 'N').ZG41Q  INVALID REG NAME      00356900
.ZG41P             ANOP  ,                                              00357000
                   AIF   (T'&ZCGPR NE 'N').ZG41R  NON NUMERIC           00357100
                   AIF   ('&ZCGPR' LT '2').ZG41Q                        00357200
                   AIF   ('&ZCGPR' LE '12').ZG41R                       00357300
.ZG41Q             ANOP  ,                                              00357400
&ZMS               SETC  '"DUALPOOLTOKEN='                              00357500
&ZMS               SETC  '&ZMS.&DUALPOOLTOKEN"'                         00357600
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00357700
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00357800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00357900
.ZG41R             ANOP  ,                                              00358000
.*-------------------------------------------------------------------   00358100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00358200
.ZG43              ANOP  ,                                              00358300
&ZTLC              SETC 'PRIMARY'                                       00358400
                   AIF   ('&ENV(1)' NE '&ZTLC').ZG80                    00358500
&XENV              SETC  'PRIMARY'   SET KEYWORD                        00358600
                   AIF   (N'&ENV LE 1).ZG43A    CK NUM                  00358700
&ZMS               SETC  '"ENV='                                        00358800
&ZMS               SETC  '&ZMS.&ENV"'                                   00358900
&ZMS               SETC  '&ZMS "ENV"'                                   00359000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00359100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00359200
.ZG43A             ANOP  ,                                              00359300
.*------------------------------------------------------------------    00359400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00359500
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00359600
.ZG43A0            AIF   (K'&TARGETSTOKEN LE 0).ZG43A1  OK              00359700
&ZCVAL             SETC '&ZCVAL TARGETSTOKEN'   INCORRECT KEY USED      00359800
.ZG43A1            AIF   (K'&ZCVAL LE 0).ZG43A2  OK                     00359900
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00360000
&ZMS               SETC  '"ENV'                                         00360100
&ZMS               SETC  '&ZMS.=&ENV"'                                  00360200
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00360300
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00360400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00360500
.ZG43A2            ANOP  ,                                              00360600
.*------------------------------------------------------------------    00360700
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00360800
&XPRIORITY         SETC  ''          INITIALIZE XVARIABLE               00360900
.*-------------------------------------------------------------------   00361000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00361100
.ZG46              ANOP  ,                                              00361200
                   AIF   (K'&PRIORITY(1) LE 0).ZG46A                    00361300
&ZTLC              SETC 'LOCAL'                                         00361400
                   AIF   ('&PRIORITY(1)' NE '&ZTLC').ZG47               00361500
&XPRIORITY         SETC  'LOCAL'     SET KEYWORD                        00361600
                   AIF   (N'&PRIORITY LE 1).ZG46A  CK NUM               00361700
&ZMS               SETC  '"PRIORITY='                                   00361800
&ZMS               SETC  '&ZMS.&PRIORITY"'                              00361900
&ZMS               SETC  '&ZMS "PRIORITY"'                              00362000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00362100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00362200
.ZG46A             ANOP  ,                                              00362300
.*------------------------------------------------------------------    00362400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00362500
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00362600
.ZG46A0            AIF   (K'&MINORPRIORITY LE 0).ZG46A1  OK             00362700
&ZCVAL             SETC '&ZCVAL MINORPRIORITY'  INCORRECT KEY USED      00362800
.ZG46A1            AIF   (K'&SRBIDTOKEN LE 0).ZG46A2  OK                00362900
&ZCVAL             SETC '&ZCVAL SRBIDTOKEN'     INCORRECT KEY USED      00363000
.ZG46A2            AIF   (K'&CLIENTSTOKEN LE 0).ZG46A3  OK              00363100
&ZCVAL             SETC '&ZCVAL CLIENTSTOKEN'   INCORRECT KEY USED      00363200
.ZG46A3            AIF   (K'&ENCLAVETOKEN LE 0).ZG46A4  OK              00363300
&ZCVAL             SETC '&ZCVAL ENCLAVETOKEN'   INCORRECT KEY USED      00363400
.ZG46A4            AIF   (K'&ZCVAL LE 0).ZG46A5  OK                     00363500
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00363600
&ZMS               SETC  '"PRIORITY'                                    00363700
&ZMS               SETC  '&ZMS.=&PRIORITY"'                             00363800
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00363900
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00364000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00364100
.ZG46A5            ANOP  ,                                              00364200
.*-------------------------------------------------------------------   00364300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00364400
.ZG47              ANOP  ,                                              00364500
&ZTLC              SETC 'GLOBAL'                                        00364600
                   AIF   ('&PRIORITY(1)' NE '&ZTLC').ZG48               00364700
&XPRIORITY         SETC  'GLOBAL'    SET KEYWORD                        00364800
                   AIF   (N'&PRIORITY LE 1).ZG47A  CK NUM               00364900
&ZMS               SETC  '"PRIORITY='                                   00365000
&ZMS               SETC  '&ZMS.&PRIORITY"'                              00365100
&ZMS               SETC  '&ZMS "PRIORITY"'                              00365200
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00365300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00365400
.ZG47A             ANOP  ,                                              00365500
.*------------------------------------------------------------------    00365600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00365700
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00365800
.ZG47A0            AIF   (K'&MINORPRIORITY LE 0).ZG47A1  OK             00365900
&ZCVAL             SETC '&ZCVAL MINORPRIORITY'  INCORRECT KEY USED      00366000
.ZG47A1            AIF   (K'&SRBIDTOKEN LE 0).ZG47A2  OK                00366100
&ZCVAL             SETC '&ZCVAL SRBIDTOKEN'     INCORRECT KEY USED      00366200
.ZG47A2            AIF   (K'&CLIENTSTOKEN LE 0).ZG47A3  OK              00366300
&ZCVAL             SETC '&ZCVAL CLIENTSTOKEN'   INCORRECT KEY USED      00366400
.ZG47A3            AIF   (K'&ENCLAVETOKEN LE 0).ZG47A4  OK              00366500
&ZCVAL             SETC '&ZCVAL ENCLAVETOKEN'   INCORRECT KEY USED      00366600
.ZG47A4            AIF   (K'&ZCVAL LE 0).ZG47A5  OK                     00366700
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00366800
&ZMS               SETC  '"PRIORITY'                                    00366900
&ZMS               SETC  '&ZMS.=&PRIORITY"'                             00367000
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00367100
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00367200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00367300
.ZG47A5            ANOP  ,                                              00367400
.*-------------------------------------------------------------------   00367500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00367600
.ZG48              ANOP  ,                                              00367700
&ZTLC              SETC 'CURRENT'                                       00367800
                   AIF   ('&PRIORITY(1)' NE '&ZTLC').ZG49               00367900
&XPRIORITY         SETC  'CURRENT'   SET KEYWORD                        00368000
                   AIF   (N'&PRIORITY LE 1).ZG48A  CK NUM               00368100
&ZMS               SETC  '"PRIORITY='                                   00368200
&ZMS               SETC  '&ZMS.&PRIORITY"'                              00368300
&ZMS               SETC  '&ZMS "PRIORITY"'                              00368400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00368500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00368600
.ZG48A             ANOP  ,                                              00368700
.*------------------------------------------------------------------    00368800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00368900
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00369000
.ZG48A0            AIF   (K'&MINORPRIORITY LE 0).ZG48A1  OK             00369100
&ZCVAL             SETC '&ZCVAL MINORPRIORITY'  INCORRECT KEY USED      00369200
.ZG48A1            AIF   (K'&SRBIDTOKEN LE 0).ZG48A2  OK                00369300
&ZCVAL             SETC '&ZCVAL SRBIDTOKEN'     INCORRECT KEY USED      00369400
.ZG48A2            AIF   (K'&CLIENTSTOKEN LE 0).ZG48A3  OK              00369500
&ZCVAL             SETC '&ZCVAL CLIENTSTOKEN'   INCORRECT KEY USED      00369600
.ZG48A3            AIF   (K'&ENCLAVETOKEN LE 0).ZG48A4  OK              00369700
&ZCVAL             SETC '&ZCVAL ENCLAVETOKEN'   INCORRECT KEY USED      00369800
.ZG48A4            AIF   (K'&ZCVAL LE 0).ZG48A5  OK                     00369900
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00370000
&ZMS               SETC  '"PRIORITY'                                    00370100
&ZMS               SETC  '&ZMS.=&PRIORITY"'                             00370200
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00370300
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00370400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00370500
.ZG48A5            ANOP  ,                                              00370600
.*-------------------------------------------------------------------   00370700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00370800
.ZG49              ANOP  ,                                              00370900
&ZTLC              SETC 'PREEMPT'                                       00371000
                   AIF   ('&PRIORITY(1)' NE '&ZTLC').ZG56               00371100
&XPRIORITY         SETC  'PREEMPT'   SET KEYWORD                        00371200
                   AIF   (N'&PRIORITY LE 1).ZG49A  CK NUM               00371300
&ZMS               SETC  '"PRIORITY='                                   00371400
&ZMS               SETC  '&ZMS.&PRIORITY"'                              00371500
&ZMS               SETC  '&ZMS "PRIORITY"'                              00371600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00371700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00371800
.ZG49A             ANOP  ,                                              00371900
.*------------------------------------------------------------------    00372000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00372100
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00372200
.ZG49A0            AIF   (K'&CLIENTSTOKEN LE 0).ZG49A1  OK              00372300
&ZCVAL             SETC '&ZCVAL CLIENTSTOKEN'   INCORRECT KEY USED      00372400
.ZG49A1            AIF   (K'&ENCLAVETOKEN LE 0).ZG49A2  OK              00372500
&ZCVAL             SETC '&ZCVAL ENCLAVETOKEN'   INCORRECT KEY USED      00372600
.ZG49A2            AIF   (K'&ZCVAL LE 0).ZG49A3  OK                     00372700
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00372800
&ZMS               SETC  '"PRIORITY'                                    00372900
&ZMS               SETC  '&ZMS.=&PRIORITY"'                             00373000
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00373100
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00373200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00373300
.ZG49A3            ANOP  ,                                              00373400
.*----------------------------------------------------------------***   00373500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00373600
                   AIF   (N'&MINORPRIORITY LE 1).ZG51A  CK NUM          00373700
&ZMS               SETC  '"MINORPRIORITY='                              00373800
&ZMS               SETC  '&ZMS.&MINORPRIORITY"'                         00373900
&ZMS               SETC  '&ZMS "MINORPRIORITY"'                         00374000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00374100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00374200
.ZG51A             ANOP  ,                                              00374300
.*-------------------------------------------------------------------   00374400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00374500
&ZXMINORPRIORITY   SETC  'INPUT'     SET IN/OUTPUT                      00374600
&XMINORPRIORITY    SETC  'ZERO'                                         00374700
                   AIF   (K'&MINORPRIORITY(1) LE 0).ZG51B  PARM         00374800
&XMINORPRIORITY    SETC  '&MINORPRIORITY(1)'    SET XVARIABLE           00374900
                   AIF   (N'&MINORPRIORITY GT 1).ZG51B  MULTI           00375000
&XMINORPRIORITY    SETC  '&MINORPRIORITY'       SET XVARIABLE           00375100
.ZG51B             ANOP  ,                                              00375200
.*-------------------------------------------------------------------   00375300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00375400
                   AIF   (K'&ZXMINORPRIORITY LE 0).ZG51R  NOT I/O       00375500
         AIF   ('&XMINORPRIORITY' EQ 'ZERO').ZG51R                      00375600
                   AIF   ('&XMINORPRIORITY'(1,1) NE '(').ZG51R          00375700
&ZCGPR             SETC  '&XMINORPRIORITY'(2,K'&XMINORPRIORITY-2)       00375800
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG51P                   00375900
                   AIF   (K'&ZCGPR GT 2).ZG51Q                          00376000
                   AIF   ('&ZCGPR' EQ '0').ZG51Q                        00376100
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00376200
                   AIF   (T'&ZCGPR NE 'N').ZG51Q  INVALID REG NAME      00376300
.ZG51P             ANOP  ,                                              00376400
                   AIF   (T'&ZCGPR NE 'N').ZG51R  NON NUMERIC           00376500
                   AIF   ('&ZCGPR' LT '2').ZG51Q                        00376600
                   AIF   ('&ZCGPR' LE '12').ZG51R                       00376700
.ZG51Q             ANOP  ,                                              00376800
&ZMS               SETC  '"MINORPRIORITY='                              00376900
&ZMS               SETC  '&ZMS.&MINORPRIORITY"'                         00377000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00377100
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00377200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00377300
.ZG51R             ANOP  ,                                              00377400
.*----------------------------------------------------------------***   00377500
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00377600
                   AIF   (N'&SRBIDTOKEN LE 1).ZG54A  CK NUM             00377700
&ZMS               SETC  '"SRBIDTOKEN='                                 00377800
&ZMS               SETC  '&ZMS.&SRBIDTOKEN"'                            00377900
&ZMS               SETC  '&ZMS "SRBIDTOKEN"'                            00378000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00378100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00378200
.ZG54A             ANOP  ,                                              00378300
.*-------------------------------------------------------------------   00378400
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00378500
                   AIF   (K'&SRBIDTOKEN(1) LE 0).ZG54C  NO PARM         00378600
&ZXSRBIDTOKEN      SETC  'OUTPUT'    SET OUTPUT                         00378700
&XSRBIDTOKEN       SETC  '&SRBIDTOKEN(1)'       SET XVARIABLE           00378800
                   AIF   (N'&SRBIDTOKEN GT 1).ZG54C                     00378900
&XSRBIDTOKEN       SETC  '&SRBIDTOKEN'          SET XVARIABLE           00379000
.ZG54C             ANOP  ,                                              00379100
.*-------------------------------------------------------------------   00379200
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00379300
                   AIF   (K'&ZXSRBIDTOKEN LE 0).ZG54R  NOT I/O          00379400
                   AIF   ('&XSRBIDTOKEN'(1,1) NE '(').ZG54R             00379500
&ZCGPR             SETC  '&XSRBIDTOKEN'(2,K'&XSRBIDTOKEN-2)             00379600
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG54P                   00379700
                   AIF   (K'&ZCGPR GT 2).ZG54Q                          00379800
                   AIF   ('&ZCGPR' EQ '0').ZG54Q                        00379900
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00380000
                   AIF   (T'&ZCGPR NE 'N').ZG54Q  INVALID REG NAME      00380100
.ZG54P             ANOP  ,                                              00380200
                   AIF   (T'&ZCGPR NE 'N').ZG54R  NON NUMERIC           00380300
                   AIF   ('&ZCGPR' LT '2').ZG54Q                        00380400
                   AIF   ('&ZCGPR' LE '12').ZG54R                       00380500
.ZG54Q             ANOP  ,                                              00380600
&ZMS               SETC  '"SRBIDTOKEN='                                 00380700
&ZMS               SETC  '&ZMS.&SRBIDTOKEN"'                            00380800
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00380900
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00381000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00381100
.ZG54R             ANOP  ,                                              00381200
.*-------------------------------------------------------------------   00381300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00381400
.ZG56              ANOP  ,                                              00381500
&ZTLC              SETC 'CLIENT'                                        00381600
                   AIF   ('&PRIORITY(1)' NE '&ZTLC').ZG66               00381700
&XPRIORITY         SETC  'CLIENT'    SET KEYWORD                        00381800
                   AIF   (N'&PRIORITY LE 1).ZG56A  CK NUM               00381900
&ZMS               SETC  '"PRIORITY='                                   00382000
&ZMS               SETC  '&ZMS.&PRIORITY"'                              00382100
&ZMS               SETC  '&ZMS "PRIORITY"'                              00382200
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00382300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00382400
.ZG56A             ANOP  ,                                              00382500
.*------------------------------------------------------------------    00382600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00382700
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00382800
.ZG56A0            AIF   (K'&ENCLAVETOKEN LE 0).ZG56A1  OK              00382900
&ZCVAL             SETC '&ZCVAL ENCLAVETOKEN'   INCORRECT KEY USED      00383000
.ZG56A1            AIF   (K'&ZCVAL LE 0).ZG56A2  OK                     00383100
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00383200
&ZMS               SETC  '"PRIORITY'                                    00383300
&ZMS               SETC  '&ZMS.=&PRIORITY"'                             00383400
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00383500
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00383600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00383700
.ZG56A2            ANOP  ,                                              00383800
.*----------------------------------------------------------------***   00383900
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00384000
                   AIF   (N'&CLIENTSTOKEN LE 1).ZG58A  CK NUM           00384100
&ZMS               SETC  '"CLIENTSTOKEN='                               00384200
&ZMS               SETC  '&ZMS.&CLIENTSTOKEN"'                          00384300
&ZMS               SETC  '&ZMS "CLIENTSTOKEN"'                          00384400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00384500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00384600
.ZG58A             ANOP  ,                                              00384700
.*-------------------------------------------------------------------   00384800
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00384900
&ZXCLIENTSTOKEN    SETC  'INPUT'     SET IN/OUTPUT                      00385000
&XCLIENTSTOKEN     SETC  '&CLIENTSTOKEN(1)'     SET XVARIABLE           00385100
                   AIF   (N'&CLIENTSTOKEN GT 1).ZG58B  MULTI            00385200
&XCLIENTSTOKEN     SETC  '&CLIENTSTOKEN'        SET XVARIABLE           00385300
.ZG58B             AIF   (K'&CLIENTSTOKEN(1) GT 0).ZG58C                00385400
&ZXCLIENTSTOKEN    SETC  ''          RESET IN/OUTPUT                    00385500
&ZMS               SETC  ' '                                            00385600
&ZMS               SETC  '&ZMS "CLIENTSTOKEN" KEY AND ITS'              00385700
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00385800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00385900
.ZG58C             ANOP  ,                                              00386000
.*-------------------------------------------------------------------   00386100
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00386200
                   AIF   (K'&ZXCLIENTSTOKEN LE 0).ZG58R  NOT I/O        00386300
                   AIF   ('&XCLIENTSTOKEN'(1,1) NE '(').ZG58R           00386400
&ZCGPR             SETC  '&XCLIENTSTOKEN'(2,K'&XCLIENTSTOKEN-2)         00386500
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG58P                   00386600
                   AIF   (K'&ZCGPR GT 2).ZG58Q                          00386700
                   AIF   ('&ZCGPR' EQ '0').ZG58Q                        00386800
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00386900
                   AIF   (T'&ZCGPR NE 'N').ZG58Q  INVALID REG NAME      00387000
.ZG58P             ANOP  ,                                              00387100
                   AIF   (T'&ZCGPR NE 'N').ZG58R  NON NUMERIC           00387200
                   AIF   ('&ZCGPR' LT '2').ZG58Q                        00387300
                   AIF   ('&ZCGPR' LE '12').ZG58R                       00387400
.ZG58Q             ANOP  ,                                              00387500
&ZMS               SETC  '"CLIENTSTOKEN='                               00387600
&ZMS               SETC  '&ZMS.&CLIENTSTOKEN"'                          00387700
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00387800
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00387900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00388000
.ZG58R             ANOP  ,                                              00388100
.*----------------------------------------------------------------***   00388200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00388300
                   AIF   (N'&MINORPRIORITY LE 1).ZG61A  CK NUM          00388400
&ZMS               SETC  '"MINORPRIORITY='                              00388500
&ZMS               SETC  '&ZMS.&MINORPRIORITY"'                         00388600
&ZMS               SETC  '&ZMS "MINORPRIORITY"'                         00388700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00388800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00388900
.ZG61A             ANOP  ,                                              00389000
.*-------------------------------------------------------------------   00389100
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00389200
&ZXMINORPRIORITY   SETC  'INPUT'     SET IN/OUTPUT                      00389300
&XMINORPRIORITY    SETC  'ZERO'                                         00389400
                   AIF   (K'&MINORPRIORITY(1) LE 0).ZG61B  PARM         00389500
&XMINORPRIORITY    SETC  '&MINORPRIORITY(1)'    SET XVARIABLE           00389600
                   AIF   (N'&MINORPRIORITY GT 1).ZG61B  MULTI           00389700
&XMINORPRIORITY    SETC  '&MINORPRIORITY'       SET XVARIABLE           00389800
.ZG61B             ANOP  ,                                              00389900
.*-------------------------------------------------------------------   00390000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00390100
                   AIF   (K'&ZXMINORPRIORITY LE 0).ZG61R  NOT I/O       00390200
         AIF   ('&XMINORPRIORITY' EQ 'ZERO').ZG61R                      00390300
                   AIF   ('&XMINORPRIORITY'(1,1) NE '(').ZG61R          00390400
&ZCGPR             SETC  '&XMINORPRIORITY'(2,K'&XMINORPRIORITY-2)       00390500
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG61P                   00390600
                   AIF   (K'&ZCGPR GT 2).ZG61Q                          00390700
                   AIF   ('&ZCGPR' EQ '0').ZG61Q                        00390800
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00390900
                   AIF   (T'&ZCGPR NE 'N').ZG61Q  INVALID REG NAME      00391000
.ZG61P             ANOP  ,                                              00391100
                   AIF   (T'&ZCGPR NE 'N').ZG61R  NON NUMERIC           00391200
                   AIF   ('&ZCGPR' LT '2').ZG61Q                        00391300
                   AIF   ('&ZCGPR' LE '12').ZG61R                       00391400
.ZG61Q             ANOP  ,                                              00391500
&ZMS               SETC  '"MINORPRIORITY='                              00391600
&ZMS               SETC  '&ZMS.&MINORPRIORITY"'                         00391700
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00391800
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00391900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00392000
.ZG61R             ANOP  ,                                              00392100
.*----------------------------------------------------------------***   00392200
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00392300
                   AIF   (N'&SRBIDTOKEN LE 1).ZG64A  CK NUM             00392400
&ZMS               SETC  '"SRBIDTOKEN='                                 00392500
&ZMS               SETC  '&ZMS.&SRBIDTOKEN"'                            00392600
&ZMS               SETC  '&ZMS "SRBIDTOKEN"'                            00392700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00392800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00392900
.ZG64A             ANOP  ,                                              00393000
.*-------------------------------------------------------------------   00393100
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00393200
                   AIF   (K'&SRBIDTOKEN(1) LE 0).ZG64C  NO PARM         00393300
&ZXSRBIDTOKEN      SETC  'OUTPUT'    SET OUTPUT                         00393400
&XSRBIDTOKEN       SETC  '&SRBIDTOKEN(1)'       SET XVARIABLE           00393500
                   AIF   (N'&SRBIDTOKEN GT 1).ZG64C                     00393600
&XSRBIDTOKEN       SETC  '&SRBIDTOKEN'          SET XVARIABLE           00393700
.ZG64C             ANOP  ,                                              00393800
.*-------------------------------------------------------------------   00393900
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00394000
                   AIF   (K'&ZXSRBIDTOKEN LE 0).ZG64R  NOT I/O          00394100
                   AIF   ('&XSRBIDTOKEN'(1,1) NE '(').ZG64R             00394200
&ZCGPR             SETC  '&XSRBIDTOKEN'(2,K'&XSRBIDTOKEN-2)             00394300
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG64P                   00394400
                   AIF   (K'&ZCGPR GT 2).ZG64Q                          00394500
                   AIF   ('&ZCGPR' EQ '0').ZG64Q                        00394600
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00394700
                   AIF   (T'&ZCGPR NE 'N').ZG64Q  INVALID REG NAME      00394800
.ZG64P             ANOP  ,                                              00394900
                   AIF   (T'&ZCGPR NE 'N').ZG64R  NON NUMERIC           00395000
                   AIF   ('&ZCGPR' LT '2').ZG64Q                        00395100
                   AIF   ('&ZCGPR' LE '12').ZG64R                       00395200
.ZG64Q             ANOP  ,                                              00395300
&ZMS               SETC  '"SRBIDTOKEN='                                 00395400
&ZMS               SETC  '&ZMS.&SRBIDTOKEN"'                            00395500
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00395600
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00395700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00395800
.ZG64R             ANOP  ,                                              00395900
.*-------------------------------------------------------------------   00396000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00396100
.ZG66              ANOP  ,                                              00396200
&ZTLC              SETC 'ENCLAVE'                                       00396300
                   AIF   ('&PRIORITY(1)' NE '&ZTLC').ZG76               00396400
&XPRIORITY         SETC  'ENCLAVE'   SET KEYWORD                        00396500
                   AIF   (N'&PRIORITY LE 1).ZG66A  CK NUM               00396600
&ZMS               SETC  '"PRIORITY='                                   00396700
&ZMS               SETC  '&ZMS.&PRIORITY"'                              00396800
&ZMS               SETC  '&ZMS "PRIORITY"'                              00396900
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00397000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00397100
.ZG66A             ANOP  ,                                              00397200
.*------------------------------------------------------------------    00397300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00397400
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00397500
.ZG66A0            AIF   (K'&CLIENTSTOKEN LE 0).ZG66A1  OK              00397600
&ZCVAL             SETC '&ZCVAL CLIENTSTOKEN'   INCORRECT KEY USED      00397700
.ZG66A1            AIF   (K'&ZCVAL LE 0).ZG66A2  OK                     00397800
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00397900
&ZMS               SETC  '"PRIORITY'                                    00398000
&ZMS               SETC  '&ZMS.=&PRIORITY"'                             00398100
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00398200
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00398300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00398400
.ZG66A2            ANOP  ,                                              00398500
.*----------------------------------------------------------------***   00398600
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00398700
                   AIF   (N'&ENCLAVETOKEN LE 1).ZG68A  CK NUM           00398800
&ZMS               SETC  '"ENCLAVETOKEN='                               00398900
&ZMS               SETC  '&ZMS.&ENCLAVETOKEN"'                          00399000
&ZMS               SETC  '&ZMS "ENCLAVETOKEN"'                          00399100
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00399200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00399300
.ZG68A             ANOP  ,                                              00399400
.*-------------------------------------------------------------------   00399500
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00399600
&ZXENCLAVETOKEN    SETC  'INPUT'     SET IN/OUTPUT                      00399700
&XENCLAVETOKEN     SETC  '&ENCLAVETOKEN(1)'     SET XVARIABLE           00399800
                   AIF   (N'&ENCLAVETOKEN GT 1).ZG68B  MULTI            00399900
&XENCLAVETOKEN     SETC  '&ENCLAVETOKEN'        SET XVARIABLE           00400000
.ZG68B             AIF   (K'&ENCLAVETOKEN(1) GT 0).ZG68C                00400100
&ZXENCLAVETOKEN    SETC  ''          RESET IN/OUTPUT                    00400200
&ZMS               SETC  ' '                                            00400300
&ZMS               SETC  '&ZMS "ENCLAVETOKEN" KEY AND ITS'              00400400
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00400500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00400600
.ZG68C             ANOP  ,                                              00400700
.*-------------------------------------------------------------------   00400800
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00400900
                   AIF   (K'&ZXENCLAVETOKEN LE 0).ZG68R  NOT I/O        00401000
                   AIF   ('&XENCLAVETOKEN'(1,1) NE '(').ZG68R           00401100
&ZCGPR             SETC  '&XENCLAVETOKEN'(2,K'&XENCLAVETOKEN-2)         00401200
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG68P                   00401300
                   AIF   (K'&ZCGPR GT 2).ZG68Q                          00401400
                   AIF   ('&ZCGPR' EQ '0').ZG68Q                        00401500
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00401600
                   AIF   (T'&ZCGPR NE 'N').ZG68Q  INVALID REG NAME      00401700
.ZG68P             ANOP  ,                                              00401800
                   AIF   (T'&ZCGPR NE 'N').ZG68R  NON NUMERIC           00401900
                   AIF   ('&ZCGPR' LT '2').ZG68Q                        00402000
                   AIF   ('&ZCGPR' LE '12').ZG68R                       00402100
.ZG68Q             ANOP  ,                                              00402200
&ZMS               SETC  '"ENCLAVETOKEN='                               00402300
&ZMS               SETC  '&ZMS.&ENCLAVETOKEN"'                          00402400
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00402500
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00402600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00402700
.ZG68R             ANOP  ,                                              00402800
.*----------------------------------------------------------------***   00402900
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00403000
                   AIF   (N'&MINORPRIORITY LE 1).ZG71A  CK NUM          00403100
&ZMS               SETC  '"MINORPRIORITY='                              00403200
&ZMS               SETC  '&ZMS.&MINORPRIORITY"'                         00403300
&ZMS               SETC  '&ZMS "MINORPRIORITY"'                         00403400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00403500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00403600
.ZG71A             ANOP  ,                                              00403700
.*-------------------------------------------------------------------   00403800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00403900
&ZXMINORPRIORITY   SETC  'INPUT'     SET IN/OUTPUT                      00404000
&XMINORPRIORITY    SETC  'ZERO'                                         00404100
                   AIF   (K'&MINORPRIORITY(1) LE 0).ZG71B  PARM         00404200
&XMINORPRIORITY    SETC  '&MINORPRIORITY(1)'    SET XVARIABLE           00404300
                   AIF   (N'&MINORPRIORITY GT 1).ZG71B  MULTI           00404400
&XMINORPRIORITY    SETC  '&MINORPRIORITY'       SET XVARIABLE           00404500
.ZG71B             ANOP  ,                                              00404600
.*-------------------------------------------------------------------   00404700
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00404800
                   AIF   (K'&ZXMINORPRIORITY LE 0).ZG71R  NOT I/O       00404900
         AIF   ('&XMINORPRIORITY' EQ 'ZERO').ZG71R                      00405000
                   AIF   ('&XMINORPRIORITY'(1,1) NE '(').ZG71R          00405100
&ZCGPR             SETC  '&XMINORPRIORITY'(2,K'&XMINORPRIORITY-2)       00405200
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG71P                   00405300
                   AIF   (K'&ZCGPR GT 2).ZG71Q                          00405400
                   AIF   ('&ZCGPR' EQ '0').ZG71Q                        00405500
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00405600
                   AIF   (T'&ZCGPR NE 'N').ZG71Q  INVALID REG NAME      00405700
.ZG71P             ANOP  ,                                              00405800
                   AIF   (T'&ZCGPR NE 'N').ZG71R  NON NUMERIC           00405900
                   AIF   ('&ZCGPR' LT '2').ZG71Q                        00406000
                   AIF   ('&ZCGPR' LE '12').ZG71R                       00406100
.ZG71Q             ANOP  ,                                              00406200
&ZMS               SETC  '"MINORPRIORITY='                              00406300
&ZMS               SETC  '&ZMS.&MINORPRIORITY"'                         00406400
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00406500
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00406600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00406700
.ZG71R             ANOP  ,                                              00406800
.*----------------------------------------------------------------***   00406900
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00407000
                   AIF   (N'&SRBIDTOKEN LE 1).ZG74A  CK NUM             00407100
&ZMS               SETC  '"SRBIDTOKEN='                                 00407200
&ZMS               SETC  '&ZMS.&SRBIDTOKEN"'                            00407300
&ZMS               SETC  '&ZMS "SRBIDTOKEN"'                            00407400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00407500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00407600
.ZG74A             ANOP  ,                                              00407700
.*-------------------------------------------------------------------   00407800
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00407900
                   AIF   (K'&SRBIDTOKEN(1) LE 0).ZG74C  NO PARM         00408000
&ZXSRBIDTOKEN      SETC  'OUTPUT'    SET OUTPUT                         00408100
&XSRBIDTOKEN       SETC  '&SRBIDTOKEN(1)'       SET XVARIABLE           00408200
                   AIF   (N'&SRBIDTOKEN GT 1).ZG74C                     00408300
&XSRBIDTOKEN       SETC  '&SRBIDTOKEN'          SET XVARIABLE           00408400
.ZG74C             ANOP  ,                                              00408500
.*-------------------------------------------------------------------   00408600
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00408700
                   AIF   (K'&ZXSRBIDTOKEN LE 0).ZG74R  NOT I/O          00408800
                   AIF   ('&XSRBIDTOKEN'(1,1) NE '(').ZG74R             00408900
&ZCGPR             SETC  '&XSRBIDTOKEN'(2,K'&XSRBIDTOKEN-2)             00409000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG74P                   00409100
                   AIF   (K'&ZCGPR GT 2).ZG74Q                          00409200
                   AIF   ('&ZCGPR' EQ '0').ZG74Q                        00409300
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00409400
                   AIF   (T'&ZCGPR NE 'N').ZG74Q  INVALID REG NAME      00409500
.ZG74P             ANOP  ,                                              00409600
                   AIF   (T'&ZCGPR NE 'N').ZG74R  NON NUMERIC           00409700
                   AIF   ('&ZCGPR' LT '2').ZG74Q                        00409800
                   AIF   ('&ZCGPR' LE '12').ZG74R                       00409900
.ZG74Q             ANOP  ,                                              00410000
&ZMS               SETC  '"SRBIDTOKEN='                                 00410100
&ZMS               SETC  '&ZMS.&SRBIDTOKEN"'                            00410200
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00410300
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00410400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00410500
.ZG74R             ANOP  ,                                              00410600
.*------------------------------------------------------------------    00410700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00410800
.ZG76              ANOP  ,                                              00410900
&ZXPRIORITY        SETC  'INPUT'     SET IN/OUTPUT                      00411000
                   AIF   (K'&XPRIORITY GT 0).ZG76E  VALID ARG           00411100
                   AIF   (T'&PRIORITY EQ 'O').ZG76D  OMITTED            00411200
&ZASYSLNDX         SETA  0                                              00411300
.ZG76A             ANOP  ,           POSITIONAL MACRO KEY               00411400
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   00411500
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG76C               00411600
&ZTLC              SETC 'PRIORITY'                                      00411700
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG76A      00411800
.ZG76B             ANOP  ,                                              00411900
&ZXPRIORITY        SETC  ''          RESET IN/OUTPUT                    00412000
&ZMS               SETC  'THE "PRIORITY" KEY'                           00412100
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        00412200
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               00412300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00412400
                   AGO   .ZG76E                                         00412500
.ZG76C             ANOP  ,                                              00412600
&ZXPRIORITY        SETC  ''          RESET IN/OUTPUT                    00412700
&ZMS               SETC  '"PRIORITY='                                   00412800
&ZMS               SETC  '&ZMS.&PRIORITY"'                              00412900
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00413000
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00413100
&ZMS               SETC  '&ZMS "LOCAL",'                                00413200
&ZMS               SETC  '&ZMS "GLOBAL",'                               00413300
&ZMS               SETC  '&ZMS "CURRENT",'                              00413400
&ZMS               SETC  '&ZMS "PREEMPT",'                              00413500
&ZMS               SETC  '&ZMS "CLIENT",'                               00413600
&ZMS               SETC  '&ZMS OR "ENCLAVE".'                           00413700
                   MNOTE 8,' &ZMS '                                     00413800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00413900
                   AGO   .ZG76E                                         00414000
.ZG76D             ANOP  ,                                              00414100
&XPRIORITY         SETC  'LOCAL'     SET DEFAULT KEYWORD                00414200
.ZG76E             ANOP  ,                                              00414300
.*----------------------------------------------------------------***   00414400
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00414500
                   AIF   (N'&DUALPOOLTOKEN LE 1).ZG78A  CK NUM          00414600
&ZMS               SETC  '"DUALPOOLTOKEN='                              00414700
&ZMS               SETC  '&ZMS.&DUALPOOLTOKEN"'                         00414800
&ZMS               SETC  '&ZMS "DUALPOOLTOKEN"'                         00414900
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00415000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00415100
.ZG78A             ANOP  ,                                              00415200
.*-------------------------------------------------------------------   00415300
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00415400
&ZXDUALPOOLTOKEN   SETC  'INPUT'     SET IN/OUTPUT                      00415500
&XDUALPOOLTOKEN    SETC  'NOTOKEN'                                      00415600
                   AIF   (K'&DUALPOOLTOKEN(1) LE 0).ZG78B  PARM         00415700
&XDUALPOOLTOKEN    SETC  '&DUALPOOLTOKEN(1)'    SET XVARIABLE           00415800
                   AIF   (N'&DUALPOOLTOKEN GT 1).ZG78B  MULTI           00415900
&XDUALPOOLTOKEN    SETC  '&DUALPOOLTOKEN'       SET XVARIABLE           00416000
.ZG78B             ANOP  ,                                              00416100
.*-------------------------------------------------------------------   00416200
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00416300
                   AIF   (K'&ZXDUALPOOLTOKEN LE 0).ZG78R  NOT I/O       00416400
         AIF   ('&XDUALPOOLTOKEN' EQ 'NOTOKEN').ZG78R                   00416500
                   AIF   ('&XDUALPOOLTOKEN'(1,1) NE '(').ZG78R          00416600
&ZCGPR             SETC  '&XDUALPOOLTOKEN'(2,K'&XDUALPOOLTOKEN-2)       00416700
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG78P                   00416800
                   AIF   (K'&ZCGPR GT 2).ZG78Q                          00416900
                   AIF   ('&ZCGPR' EQ '0').ZG78Q                        00417000
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00417100
                   AIF   (T'&ZCGPR NE 'N').ZG78Q  INVALID REG NAME      00417200
.ZG78P             ANOP  ,                                              00417300
                   AIF   (T'&ZCGPR NE 'N').ZG78R  NON NUMERIC           00417400
                   AIF   ('&ZCGPR' LT '2').ZG78Q                        00417500
                   AIF   ('&ZCGPR' LE '12').ZG78R                       00417600
.ZG78Q             ANOP  ,                                              00417700
&ZMS               SETC  '"DUALPOOLTOKEN='                              00417800
&ZMS               SETC  '&ZMS.&DUALPOOLTOKEN"'                         00417900
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00418000
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00418100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00418200
.ZG78R             ANOP  ,                                              00418300
.*-------------------------------------------------------------------   00418400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00418500
.ZG80              ANOP  ,                                              00418600
&ZTLC              SETC 'FULLXM'                                        00418700
                   AIF   ('&ENV(1)' NE '&ZTLC').ZG117                   00418800
&XENV              SETC  'FULLXM'    SET KEYWORD                        00418900
                   AIF   (N'&ENV LE 1).ZG80A    CK NUM                  00419000
&ZMS               SETC  '"ENV='                                        00419100
&ZMS               SETC  '&ZMS.&ENV"'                                   00419200
&ZMS               SETC  '&ZMS "ENV"'                                   00419300
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00419400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00419500
.ZG80A             ANOP  ,                                              00419600
.*------------------------------------------------------------------    00419700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00419800
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00419900
.ZG80A0            AIF   (K'&TARGETSTOKEN LE 0).ZG80A1  OK              00420000
&ZCVAL             SETC '&ZCVAL TARGETSTOKEN'   INCORRECT KEY USED      00420100
.ZG80A1            AIF   (K'&ZCVAL LE 0).ZG80A2  OK                     00420200
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00420300
&ZMS               SETC  '"ENV'                                         00420400
&ZMS               SETC  '&ZMS.=&ENV"'                                  00420500
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00420600
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00420700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00420800
.ZG80A2            ANOP  ,                                              00420900
.*------------------------------------------------------------------    00421000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00421100
&XPRIORITY         SETC  ''          INITIALIZE XVARIABLE               00421200
.*-------------------------------------------------------------------   00421300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00421400
.ZG83              ANOP  ,                                              00421500
                   AIF   (K'&PRIORITY(1) LE 0).ZG83A                    00421600
&ZTLC              SETC 'LOCAL'                                         00421700
                   AIF   ('&PRIORITY(1)' NE '&ZTLC').ZG84               00421800
&XPRIORITY         SETC  'LOCAL'     SET KEYWORD                        00421900
                   AIF   (N'&PRIORITY LE 1).ZG83A  CK NUM               00422000
&ZMS               SETC  '"PRIORITY='                                   00422100
&ZMS               SETC  '&ZMS.&PRIORITY"'                              00422200
&ZMS               SETC  '&ZMS "PRIORITY"'                              00422300
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00422400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00422500
.ZG83A             ANOP  ,                                              00422600
.*------------------------------------------------------------------    00422700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00422800
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00422900
.ZG83A0            AIF   (K'&MINORPRIORITY LE 0).ZG83A1  OK             00423000
&ZCVAL             SETC '&ZCVAL MINORPRIORITY'  INCORRECT KEY USED      00423100
.ZG83A1            AIF   (K'&SRBIDTOKEN LE 0).ZG83A2  OK                00423200
&ZCVAL             SETC '&ZCVAL SRBIDTOKEN'     INCORRECT KEY USED      00423300
.ZG83A2            AIF   (K'&CLIENTSTOKEN LE 0).ZG83A3  OK              00423400
&ZCVAL             SETC '&ZCVAL CLIENTSTOKEN'   INCORRECT KEY USED      00423500
.ZG83A3            AIF   (K'&ENCLAVETOKEN LE 0).ZG83A4  OK              00423600
&ZCVAL             SETC '&ZCVAL ENCLAVETOKEN'   INCORRECT KEY USED      00423700
.ZG83A4            AIF   (K'&ZCVAL LE 0).ZG83A5  OK                     00423800
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00423900
&ZMS               SETC  '"PRIORITY'                                    00424000
&ZMS               SETC  '&ZMS.=&PRIORITY"'                             00424100
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00424200
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00424300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00424400
.ZG83A5            ANOP  ,                                              00424500
.*-------------------------------------------------------------------   00424600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00424700
.ZG84              ANOP  ,                                              00424800
&ZTLC              SETC 'GLOBAL'                                        00424900
                   AIF   ('&PRIORITY(1)' NE '&ZTLC').ZG85               00425000
&XPRIORITY         SETC  'GLOBAL'    SET KEYWORD                        00425100
                   AIF   (N'&PRIORITY LE 1).ZG84A  CK NUM               00425200
&ZMS               SETC  '"PRIORITY='                                   00425300
&ZMS               SETC  '&ZMS.&PRIORITY"'                              00425400
&ZMS               SETC  '&ZMS "PRIORITY"'                              00425500
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00425600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00425700
.ZG84A             ANOP  ,                                              00425800
.*------------------------------------------------------------------    00425900
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00426000
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00426100
.ZG84A0            AIF   (K'&MINORPRIORITY LE 0).ZG84A1  OK             00426200
&ZCVAL             SETC '&ZCVAL MINORPRIORITY'  INCORRECT KEY USED      00426300
.ZG84A1            AIF   (K'&SRBIDTOKEN LE 0).ZG84A2  OK                00426400
&ZCVAL             SETC '&ZCVAL SRBIDTOKEN'     INCORRECT KEY USED      00426500
.ZG84A2            AIF   (K'&CLIENTSTOKEN LE 0).ZG84A3  OK              00426600
&ZCVAL             SETC '&ZCVAL CLIENTSTOKEN'   INCORRECT KEY USED      00426700
.ZG84A3            AIF   (K'&ENCLAVETOKEN LE 0).ZG84A4  OK              00426800
&ZCVAL             SETC '&ZCVAL ENCLAVETOKEN'   INCORRECT KEY USED      00426900
.ZG84A4            AIF   (K'&ZCVAL LE 0).ZG84A5  OK                     00427000
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00427100
&ZMS               SETC  '"PRIORITY'                                    00427200
&ZMS               SETC  '&ZMS.=&PRIORITY"'                             00427300
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00427400
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00427500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00427600
.ZG84A5            ANOP  ,                                              00427700
.*-------------------------------------------------------------------   00427800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00427900
.ZG85              ANOP  ,                                              00428000
&ZTLC              SETC 'CURRENT'                                       00428100
                   AIF   ('&PRIORITY(1)' NE '&ZTLC').ZG86               00428200
&XPRIORITY         SETC  'CURRENT'   SET KEYWORD                        00428300
                   AIF   (N'&PRIORITY LE 1).ZG85A  CK NUM               00428400
&ZMS               SETC  '"PRIORITY='                                   00428500
&ZMS               SETC  '&ZMS.&PRIORITY"'                              00428600
&ZMS               SETC  '&ZMS "PRIORITY"'                              00428700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00428800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00428900
.ZG85A             ANOP  ,                                              00429000
.*------------------------------------------------------------------    00429100
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00429200
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00429300
.ZG85A0            AIF   (K'&MINORPRIORITY LE 0).ZG85A1  OK             00429400
&ZCVAL             SETC '&ZCVAL MINORPRIORITY'  INCORRECT KEY USED      00429500
.ZG85A1            AIF   (K'&SRBIDTOKEN LE 0).ZG85A2  OK                00429600
&ZCVAL             SETC '&ZCVAL SRBIDTOKEN'     INCORRECT KEY USED      00429700
.ZG85A2            AIF   (K'&CLIENTSTOKEN LE 0).ZG85A3  OK              00429800
&ZCVAL             SETC '&ZCVAL CLIENTSTOKEN'   INCORRECT KEY USED      00429900
.ZG85A3            AIF   (K'&ENCLAVETOKEN LE 0).ZG85A4  OK              00430000
&ZCVAL             SETC '&ZCVAL ENCLAVETOKEN'   INCORRECT KEY USED      00430100
.ZG85A4            AIF   (K'&ZCVAL LE 0).ZG85A5  OK                     00430200
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00430300
&ZMS               SETC  '"PRIORITY'                                    00430400
&ZMS               SETC  '&ZMS.=&PRIORITY"'                             00430500
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00430600
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00430700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00430800
.ZG85A5            ANOP  ,                                              00430900
.*-------------------------------------------------------------------   00431000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00431100
.ZG86              ANOP  ,                                              00431200
&ZTLC              SETC 'PREEMPT'                                       00431300
                   AIF   ('&PRIORITY(1)' NE '&ZTLC').ZG93               00431400
&XPRIORITY         SETC  'PREEMPT'   SET KEYWORD                        00431500
                   AIF   (N'&PRIORITY LE 1).ZG86A  CK NUM               00431600
&ZMS               SETC  '"PRIORITY='                                   00431700
&ZMS               SETC  '&ZMS.&PRIORITY"'                              00431800
&ZMS               SETC  '&ZMS "PRIORITY"'                              00431900
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00432000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00432100
.ZG86A             ANOP  ,                                              00432200
.*------------------------------------------------------------------    00432300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00432400
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00432500
.ZG86A0            AIF   (K'&CLIENTSTOKEN LE 0).ZG86A1  OK              00432600
&ZCVAL             SETC '&ZCVAL CLIENTSTOKEN'   INCORRECT KEY USED      00432700
.ZG86A1            AIF   (K'&ENCLAVETOKEN LE 0).ZG86A2  OK              00432800
&ZCVAL             SETC '&ZCVAL ENCLAVETOKEN'   INCORRECT KEY USED      00432900
.ZG86A2            AIF   (K'&ZCVAL LE 0).ZG86A3  OK                     00433000
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00433100
&ZMS               SETC  '"PRIORITY'                                    00433200
&ZMS               SETC  '&ZMS.=&PRIORITY"'                             00433300
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00433400
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00433500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00433600
.ZG86A3            ANOP  ,                                              00433700
.*----------------------------------------------------------------***   00433800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00433900
                   AIF   (N'&MINORPRIORITY LE 1).ZG88A  CK NUM          00434000
&ZMS               SETC  '"MINORPRIORITY='                              00434100
&ZMS               SETC  '&ZMS.&MINORPRIORITY"'                         00434200
&ZMS               SETC  '&ZMS "MINORPRIORITY"'                         00434300
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00434400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00434500
.ZG88A             ANOP  ,                                              00434600
.*-------------------------------------------------------------------   00434700
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00434800
&ZXMINORPRIORITY   SETC  'INPUT'     SET IN/OUTPUT                      00434900
&XMINORPRIORITY    SETC  'ZERO'                                         00435000
                   AIF   (K'&MINORPRIORITY(1) LE 0).ZG88B  PARM         00435100
&XMINORPRIORITY    SETC  '&MINORPRIORITY(1)'    SET XVARIABLE           00435200
                   AIF   (N'&MINORPRIORITY GT 1).ZG88B  MULTI           00435300
&XMINORPRIORITY    SETC  '&MINORPRIORITY'       SET XVARIABLE           00435400
.ZG88B             ANOP  ,                                              00435500
.*-------------------------------------------------------------------   00435600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00435700
                   AIF   (K'&ZXMINORPRIORITY LE 0).ZG88R  NOT I/O       00435800
         AIF   ('&XMINORPRIORITY' EQ 'ZERO').ZG88R                      00435900
                   AIF   ('&XMINORPRIORITY'(1,1) NE '(').ZG88R          00436000
&ZCGPR             SETC  '&XMINORPRIORITY'(2,K'&XMINORPRIORITY-2)       00436100
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG88P                   00436200
                   AIF   (K'&ZCGPR GT 2).ZG88Q                          00436300
                   AIF   ('&ZCGPR' EQ '0').ZG88Q                        00436400
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00436500
                   AIF   (T'&ZCGPR NE 'N').ZG88Q  INVALID REG NAME      00436600
.ZG88P             ANOP  ,                                              00436700
                   AIF   (T'&ZCGPR NE 'N').ZG88R  NON NUMERIC           00436800
                   AIF   ('&ZCGPR' LT '2').ZG88Q                        00436900
                   AIF   ('&ZCGPR' LE '12').ZG88R                       00437000
.ZG88Q             ANOP  ,                                              00437100
&ZMS               SETC  '"MINORPRIORITY='                              00437200
&ZMS               SETC  '&ZMS.&MINORPRIORITY"'                         00437300
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00437400
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00437500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00437600
.ZG88R             ANOP  ,                                              00437700
.*----------------------------------------------------------------***   00437800
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00437900
                   AIF   (N'&SRBIDTOKEN LE 1).ZG91A  CK NUM             00438000
&ZMS               SETC  '"SRBIDTOKEN='                                 00438100
&ZMS               SETC  '&ZMS.&SRBIDTOKEN"'                            00438200
&ZMS               SETC  '&ZMS "SRBIDTOKEN"'                            00438300
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00438400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00438500
.ZG91A             ANOP  ,                                              00438600
.*-------------------------------------------------------------------   00438700
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00438800
                   AIF   (K'&SRBIDTOKEN(1) LE 0).ZG91C  NO PARM         00438900
&ZXSRBIDTOKEN      SETC  'OUTPUT'    SET OUTPUT                         00439000
&XSRBIDTOKEN       SETC  '&SRBIDTOKEN(1)'       SET XVARIABLE           00439100
                   AIF   (N'&SRBIDTOKEN GT 1).ZG91C                     00439200
&XSRBIDTOKEN       SETC  '&SRBIDTOKEN'          SET XVARIABLE           00439300
.ZG91C             ANOP  ,                                              00439400
.*-------------------------------------------------------------------   00439500
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00439600
                   AIF   (K'&ZXSRBIDTOKEN LE 0).ZG91R  NOT I/O          00439700
                   AIF   ('&XSRBIDTOKEN'(1,1) NE '(').ZG91R             00439800
&ZCGPR             SETC  '&XSRBIDTOKEN'(2,K'&XSRBIDTOKEN-2)             00439900
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG91P                   00440000
                   AIF   (K'&ZCGPR GT 2).ZG91Q                          00440100
                   AIF   ('&ZCGPR' EQ '0').ZG91Q                        00440200
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00440300
                   AIF   (T'&ZCGPR NE 'N').ZG91Q  INVALID REG NAME      00440400
.ZG91P             ANOP  ,                                              00440500
                   AIF   (T'&ZCGPR NE 'N').ZG91R  NON NUMERIC           00440600
                   AIF   ('&ZCGPR' LT '2').ZG91Q                        00440700
                   AIF   ('&ZCGPR' LE '12').ZG91R                       00440800
.ZG91Q             ANOP  ,                                              00440900
&ZMS               SETC  '"SRBIDTOKEN='                                 00441000
&ZMS               SETC  '&ZMS.&SRBIDTOKEN"'                            00441100
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00441200
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00441300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00441400
.ZG91R             ANOP  ,                                              00441500
.*-------------------------------------------------------------------   00441600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00441700
.ZG93              ANOP  ,                                              00441800
&ZTLC              SETC 'CLIENT'                                        00441900
                   AIF   ('&PRIORITY(1)' NE '&ZTLC').ZG103              00442000
&XPRIORITY         SETC  'CLIENT'    SET KEYWORD                        00442100
                   AIF   (N'&PRIORITY LE 1).ZG93A  CK NUM               00442200
&ZMS               SETC  '"PRIORITY='                                   00442300
&ZMS               SETC  '&ZMS.&PRIORITY"'                              00442400
&ZMS               SETC  '&ZMS "PRIORITY"'                              00442500
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00442600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00442700
.ZG93A             ANOP  ,                                              00442800
.*------------------------------------------------------------------    00442900
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00443000
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00443100
.ZG93A0            AIF   (K'&ENCLAVETOKEN LE 0).ZG93A1  OK              00443200
&ZCVAL             SETC '&ZCVAL ENCLAVETOKEN'   INCORRECT KEY USED      00443300
.ZG93A1            AIF   (K'&ZCVAL LE 0).ZG93A2  OK                     00443400
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00443500
&ZMS               SETC  '"PRIORITY'                                    00443600
&ZMS               SETC  '&ZMS.=&PRIORITY"'                             00443700
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00443800
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00443900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00444000
.ZG93A2            ANOP  ,                                              00444100
.*----------------------------------------------------------------***   00444200
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00444300
                   AIF   (N'&CLIENTSTOKEN LE 1).ZG95A  CK NUM           00444400
&ZMS               SETC  '"CLIENTSTOKEN='                               00444500
&ZMS               SETC  '&ZMS.&CLIENTSTOKEN"'                          00444600
&ZMS               SETC  '&ZMS "CLIENTSTOKEN"'                          00444700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00444800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00444900
.ZG95A             ANOP  ,                                              00445000
.*-------------------------------------------------------------------   00445100
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00445200
&ZXCLIENTSTOKEN    SETC  'INPUT'     SET IN/OUTPUT                      00445300
&XCLIENTSTOKEN     SETC  '&CLIENTSTOKEN(1)'     SET XVARIABLE           00445400
                   AIF   (N'&CLIENTSTOKEN GT 1).ZG95B  MULTI            00445500
&XCLIENTSTOKEN     SETC  '&CLIENTSTOKEN'        SET XVARIABLE           00445600
.ZG95B             AIF   (K'&CLIENTSTOKEN(1) GT 0).ZG95C                00445700
&ZXCLIENTSTOKEN    SETC  ''          RESET IN/OUTPUT                    00445800
&ZMS               SETC  ' '                                            00445900
&ZMS               SETC  '&ZMS "CLIENTSTOKEN" KEY AND ITS'              00446000
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00446100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00446200
.ZG95C             ANOP  ,                                              00446300
.*-------------------------------------------------------------------   00446400
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00446500
                   AIF   (K'&ZXCLIENTSTOKEN LE 0).ZG95R  NOT I/O        00446600
                   AIF   ('&XCLIENTSTOKEN'(1,1) NE '(').ZG95R           00446700
&ZCGPR             SETC  '&XCLIENTSTOKEN'(2,K'&XCLIENTSTOKEN-2)         00446800
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG95P                   00446900
                   AIF   (K'&ZCGPR GT 2).ZG95Q                          00447000
                   AIF   ('&ZCGPR' EQ '0').ZG95Q                        00447100
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00447200
                   AIF   (T'&ZCGPR NE 'N').ZG95Q  INVALID REG NAME      00447300
.ZG95P             ANOP  ,                                              00447400
                   AIF   (T'&ZCGPR NE 'N').ZG95R  NON NUMERIC           00447500
                   AIF   ('&ZCGPR' LT '2').ZG95Q                        00447600
                   AIF   ('&ZCGPR' LE '12').ZG95R                       00447700
.ZG95Q             ANOP  ,                                              00447800
&ZMS               SETC  '"CLIENTSTOKEN='                               00447900
&ZMS               SETC  '&ZMS.&CLIENTSTOKEN"'                          00448000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00448100
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00448200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00448300
.ZG95R             ANOP  ,                                              00448400
.*----------------------------------------------------------------***   00448500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00448600
                   AIF   (N'&MINORPRIORITY LE 1).ZG98A  CK NUM          00448700
&ZMS               SETC  '"MINORPRIORITY='                              00448800
&ZMS               SETC  '&ZMS.&MINORPRIORITY"'                         00448900
&ZMS               SETC  '&ZMS "MINORPRIORITY"'                         00449000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00449100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00449200
.ZG98A             ANOP  ,                                              00449300
.*-------------------------------------------------------------------   00449400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00449500
&ZXMINORPRIORITY   SETC  'INPUT'     SET IN/OUTPUT                      00449600
&XMINORPRIORITY    SETC  'ZERO'                                         00449700
                   AIF   (K'&MINORPRIORITY(1) LE 0).ZG98B  PARM         00449800
&XMINORPRIORITY    SETC  '&MINORPRIORITY(1)'    SET XVARIABLE           00449900
                   AIF   (N'&MINORPRIORITY GT 1).ZG98B  MULTI           00450000
&XMINORPRIORITY    SETC  '&MINORPRIORITY'       SET XVARIABLE           00450100
.ZG98B             ANOP  ,                                              00450200
.*-------------------------------------------------------------------   00450300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00450400
                   AIF   (K'&ZXMINORPRIORITY LE 0).ZG98R  NOT I/O       00450500
         AIF   ('&XMINORPRIORITY' EQ 'ZERO').ZG98R                      00450600
                   AIF   ('&XMINORPRIORITY'(1,1) NE '(').ZG98R          00450700
&ZCGPR             SETC  '&XMINORPRIORITY'(2,K'&XMINORPRIORITY-2)       00450800
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG98P                   00450900
                   AIF   (K'&ZCGPR GT 2).ZG98Q                          00451000
                   AIF   ('&ZCGPR' EQ '0').ZG98Q                        00451100
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00451200
                   AIF   (T'&ZCGPR NE 'N').ZG98Q  INVALID REG NAME      00451300
.ZG98P             ANOP  ,                                              00451400
                   AIF   (T'&ZCGPR NE 'N').ZG98R  NON NUMERIC           00451500
                   AIF   ('&ZCGPR' LT '2').ZG98Q                        00451600
                   AIF   ('&ZCGPR' LE '12').ZG98R                       00451700
.ZG98Q             ANOP  ,                                              00451800
&ZMS               SETC  '"MINORPRIORITY='                              00451900
&ZMS               SETC  '&ZMS.&MINORPRIORITY"'                         00452000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00452100
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00452200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00452300
.ZG98R             ANOP  ,                                              00452400
.*----------------------------------------------------------------***   00452500
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00452600
                   AIF   (N'&SRBIDTOKEN LE 1).ZG101A  CK NUM            00452700
&ZMS               SETC  '"SRBIDTOKEN='                                 00452800
&ZMS               SETC  '&ZMS.&SRBIDTOKEN"'                            00452900
&ZMS               SETC  '&ZMS "SRBIDTOKEN"'                            00453000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00453100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00453200
.ZG101A            ANOP  ,                                              00453300
.*-------------------------------------------------------------------   00453400
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00453500
                   AIF   (K'&SRBIDTOKEN(1) LE 0).ZG101C  NO PARM        00453600
&ZXSRBIDTOKEN      SETC  'OUTPUT'    SET OUTPUT                         00453700
&XSRBIDTOKEN       SETC  '&SRBIDTOKEN(1)'       SET XVARIABLE           00453800
                   AIF   (N'&SRBIDTOKEN GT 1).ZG101C                    00453900
&XSRBIDTOKEN       SETC  '&SRBIDTOKEN'          SET XVARIABLE           00454000
.ZG101C            ANOP  ,                                              00454100
.*-------------------------------------------------------------------   00454200
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00454300
                   AIF   (K'&ZXSRBIDTOKEN LE 0).ZG101R  NOT I/O         00454400
                   AIF   ('&XSRBIDTOKEN'(1,1) NE '(').ZG101R            00454500
&ZCGPR             SETC  '&XSRBIDTOKEN'(2,K'&XSRBIDTOKEN-2)             00454600
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG101P                  00454700
                   AIF   (K'&ZCGPR GT 2).ZG101Q                         00454800
                   AIF   ('&ZCGPR' EQ '0').ZG101Q                       00454900
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00455000
                   AIF   (T'&ZCGPR NE 'N').ZG101Q  INVALID REG NAME     00455100
.ZG101P            ANOP  ,                                              00455200
                   AIF   (T'&ZCGPR NE 'N').ZG101R  NON NUMERIC          00455300
                   AIF   ('&ZCGPR' LT '2').ZG101Q                       00455400
                   AIF   ('&ZCGPR' LE '12').ZG101R                      00455500
.ZG101Q            ANOP  ,                                              00455600
&ZMS               SETC  '"SRBIDTOKEN='                                 00455700
&ZMS               SETC  '&ZMS.&SRBIDTOKEN"'                            00455800
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00455900
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00456000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00456100
.ZG101R            ANOP  ,                                              00456200
.*-------------------------------------------------------------------   00456300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00456400
.ZG103             ANOP  ,                                              00456500
&ZTLC              SETC 'ENCLAVE'                                       00456600
                   AIF   ('&PRIORITY(1)' NE '&ZTLC').ZG113              00456700
&XPRIORITY         SETC  'ENCLAVE'   SET KEYWORD                        00456800
                   AIF   (N'&PRIORITY LE 1).ZG103A  CK NUM              00456900
&ZMS               SETC  '"PRIORITY='                                   00457000
&ZMS               SETC  '&ZMS.&PRIORITY"'                              00457100
&ZMS               SETC  '&ZMS "PRIORITY"'                              00457200
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00457300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00457400
.ZG103A            ANOP  ,                                              00457500
.*------------------------------------------------------------------    00457600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00457700
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00457800
.ZG103A0           AIF   (K'&CLIENTSTOKEN LE 0).ZG103A1  OK             00457900
&ZCVAL             SETC '&ZCVAL CLIENTSTOKEN'   INCORRECT KEY USED      00458000
.ZG103A1           AIF   (K'&ZCVAL LE 0).ZG103A2  OK                    00458100
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00458200
&ZMS               SETC  '"PRIORITY'                                    00458300
&ZMS               SETC  '&ZMS.=&PRIORITY"'                             00458400
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00458500
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00458600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00458700
.ZG103A2           ANOP  ,                                              00458800
.*----------------------------------------------------------------***   00458900
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00459000
                   AIF   (N'&ENCLAVETOKEN LE 1).ZG105A  CK NUM          00459100
&ZMS               SETC  '"ENCLAVETOKEN='                               00459200
&ZMS               SETC  '&ZMS.&ENCLAVETOKEN"'                          00459300
&ZMS               SETC  '&ZMS "ENCLAVETOKEN"'                          00459400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00459500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00459600
.ZG105A            ANOP  ,                                              00459700
.*-------------------------------------------------------------------   00459800
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00459900
&ZXENCLAVETOKEN    SETC  'INPUT'     SET IN/OUTPUT                      00460000
&XENCLAVETOKEN     SETC  '&ENCLAVETOKEN(1)'     SET XVARIABLE           00460100
                   AIF   (N'&ENCLAVETOKEN GT 1).ZG105B  MULTI           00460200
&XENCLAVETOKEN     SETC  '&ENCLAVETOKEN'        SET XVARIABLE           00460300
.ZG105B            AIF   (K'&ENCLAVETOKEN(1) GT 0).ZG105C               00460400
&ZXENCLAVETOKEN    SETC  ''          RESET IN/OUTPUT                    00460500
&ZMS               SETC  'WHEN "ENCLAVE" IS SPECIFIED'                  00460600
&ZMS               SETC  '&ZMS , "ENCLAVETOKEN" KEY AND ITS'            00460700
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00460800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00460900
.ZG105C            ANOP  ,                                              00461000
.*-------------------------------------------------------------------   00461100
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00461200
                   AIF   (K'&ZXENCLAVETOKEN LE 0).ZG105R  NOT I/O       00461300
                   AIF   ('&XENCLAVETOKEN'(1,1) NE '(').ZG105R          00461400
&ZCGPR             SETC  '&XENCLAVETOKEN'(2,K'&XENCLAVETOKEN-2)         00461500
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG105P                  00461600
                   AIF   (K'&ZCGPR GT 2).ZG105Q                         00461700
                   AIF   ('&ZCGPR' EQ '0').ZG105Q                       00461800
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00461900
                   AIF   (T'&ZCGPR NE 'N').ZG105Q  INVALID REG NAME     00462000
.ZG105P            ANOP  ,                                              00462100
                   AIF   (T'&ZCGPR NE 'N').ZG105R  NON NUMERIC          00462200
                   AIF   ('&ZCGPR' LT '2').ZG105Q                       00462300
                   AIF   ('&ZCGPR' LE '12').ZG105R                      00462400
.ZG105Q            ANOP  ,                                              00462500
&ZMS               SETC  '"ENCLAVETOKEN='                               00462600
&ZMS               SETC  '&ZMS.&ENCLAVETOKEN"'                          00462700
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00462800
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00462900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00463000
.ZG105R            ANOP  ,                                              00463100
.*----------------------------------------------------------------***   00463200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00463300
                   AIF   (N'&MINORPRIORITY LE 1).ZG108A  CK NUM         00463400
&ZMS               SETC  '"MINORPRIORITY='                              00463500
&ZMS               SETC  '&ZMS.&MINORPRIORITY"'                         00463600
&ZMS               SETC  '&ZMS "MINORPRIORITY"'                         00463700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00463800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00463900
.ZG108A            ANOP  ,                                              00464000
.*-------------------------------------------------------------------   00464100
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00464200
&ZXMINORPRIORITY   SETC  'INPUT'     SET IN/OUTPUT                      00464300
&XMINORPRIORITY    SETC  'ZERO'                                         00464400
                   AIF   (K'&MINORPRIORITY(1) LE 0).ZG108B  PARM        00464500
&XMINORPRIORITY    SETC  '&MINORPRIORITY(1)'    SET XVARIABLE           00464600
                   AIF   (N'&MINORPRIORITY GT 1).ZG108B  MULTI          00464700
&XMINORPRIORITY    SETC  '&MINORPRIORITY'       SET XVARIABLE           00464800
.ZG108B            ANOP  ,                                              00464900
.*-------------------------------------------------------------------   00465000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00465100
                   AIF   (K'&ZXMINORPRIORITY LE 0).ZG108R  NOT I/O      00465200
         AIF   ('&XMINORPRIORITY' EQ 'ZERO').ZG108R                     00465300
                   AIF   ('&XMINORPRIORITY'(1,1) NE '(').ZG108R         00465400
&ZCGPR             SETC  '&XMINORPRIORITY'(2,K'&XMINORPRIORITY-2)       00465500
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG108P                  00465600
                   AIF   (K'&ZCGPR GT 2).ZG108Q                         00465700
                   AIF   ('&ZCGPR' EQ '0').ZG108Q                       00465800
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00465900
                   AIF   (T'&ZCGPR NE 'N').ZG108Q  INVALID REG NAME     00466000
.ZG108P            ANOP  ,                                              00466100
                   AIF   (T'&ZCGPR NE 'N').ZG108R  NON NUMERIC          00466200
                   AIF   ('&ZCGPR' LT '2').ZG108Q                       00466300
                   AIF   ('&ZCGPR' LE '12').ZG108R                      00466400
.ZG108Q            ANOP  ,                                              00466500
&ZMS               SETC  '"MINORPRIORITY='                              00466600
&ZMS               SETC  '&ZMS.&MINORPRIORITY"'                         00466700
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00466800
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00466900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00467000
.ZG108R            ANOP  ,                                              00467100
.*----------------------------------------------------------------***   00467200
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00467300
                   AIF   (N'&SRBIDTOKEN LE 1).ZG111A  CK NUM            00467400
&ZMS               SETC  '"SRBIDTOKEN='                                 00467500
&ZMS               SETC  '&ZMS.&SRBIDTOKEN"'                            00467600
&ZMS               SETC  '&ZMS "SRBIDTOKEN"'                            00467700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00467800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00467900
.ZG111A            ANOP  ,                                              00468000
.*-------------------------------------------------------------------   00468100
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00468200
                   AIF   (K'&SRBIDTOKEN(1) LE 0).ZG111C  NO PARM        00468300
&ZXSRBIDTOKEN      SETC  'OUTPUT'    SET OUTPUT                         00468400
&XSRBIDTOKEN       SETC  '&SRBIDTOKEN(1)'       SET XVARIABLE           00468500
                   AIF   (N'&SRBIDTOKEN GT 1).ZG111C                    00468600
&XSRBIDTOKEN       SETC  '&SRBIDTOKEN'          SET XVARIABLE           00468700
.ZG111C            ANOP  ,                                              00468800
.*-------------------------------------------------------------------   00468900
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00469000
                   AIF   (K'&ZXSRBIDTOKEN LE 0).ZG111R  NOT I/O         00469100
                   AIF   ('&XSRBIDTOKEN'(1,1) NE '(').ZG111R            00469200
&ZCGPR             SETC  '&XSRBIDTOKEN'(2,K'&XSRBIDTOKEN-2)             00469300
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG111P                  00469400
                   AIF   (K'&ZCGPR GT 2).ZG111Q                         00469500
                   AIF   ('&ZCGPR' EQ '0').ZG111Q                       00469600
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00469700
                   AIF   (T'&ZCGPR NE 'N').ZG111Q  INVALID REG NAME     00469800
.ZG111P            ANOP  ,                                              00469900
                   AIF   (T'&ZCGPR NE 'N').ZG111R  NON NUMERIC          00470000
                   AIF   ('&ZCGPR' LT '2').ZG111Q                       00470100
                   AIF   ('&ZCGPR' LE '12').ZG111R                      00470200
.ZG111Q            ANOP  ,                                              00470300
&ZMS               SETC  '"SRBIDTOKEN='                                 00470400
&ZMS               SETC  '&ZMS.&SRBIDTOKEN"'                            00470500
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00470600
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00470700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00470800
.ZG111R            ANOP  ,                                              00470900
.*------------------------------------------------------------------    00471000
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00471100
.ZG113             ANOP  ,                                              00471200
&ZXPRIORITY        SETC  'INPUT'     SET IN/OUTPUT                      00471300
                   AIF   (K'&XPRIORITY GT 0).ZG113E  VALID ARG          00471400
                   AIF   (T'&PRIORITY EQ 'O').ZG113D  OMITTED           00471500
&ZASYSLNDX         SETA  0                                              00471600
.ZG113A            ANOP  ,           POSITIONAL MACRO KEY               00471700
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   00471800
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG113C              00471900
&ZTLC              SETC 'PRIORITY'                                      00472000
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG113A     00472100
.ZG113B            ANOP  ,                                              00472200
&ZXPRIORITY        SETC  ''          RESET IN/OUTPUT                    00472300
&ZMS               SETC  'THE "PRIORITY" KEY'                           00472400
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        00472500
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               00472600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00472700
                   AGO   .ZG113E                                        00472800
.ZG113C            ANOP  ,                                              00472900
&ZXPRIORITY        SETC  ''          RESET IN/OUTPUT                    00473000
&ZMS               SETC  '"PRIORITY='                                   00473100
&ZMS               SETC  '&ZMS.&PRIORITY"'                              00473200
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00473300
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00473400
&ZMS               SETC  '&ZMS "LOCAL",'                                00473500
&ZMS               SETC  '&ZMS "GLOBAL",'                               00473600
&ZMS               SETC  '&ZMS "CURRENT",'                              00473700
&ZMS               SETC  '&ZMS "PREEMPT",'                              00473800
&ZMS               SETC  '&ZMS "CLIENT",'                               00473900
&ZMS               SETC  '&ZMS OR "ENCLAVE".'                           00474000
                   MNOTE 8,' &ZMS '                                     00474100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00474200
                   AGO   .ZG113E                                        00474300
.ZG113D            ANOP  ,                                              00474400
&XPRIORITY         SETC  'LOCAL'     SET DEFAULT KEYWORD                00474500
.ZG113E            ANOP  ,                                              00474600
.*----------------------------------------------------------------***   00474700
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00474800
                   AIF   (N'&DUALPOOLTOKEN LE 1).ZG115A  CK NUM         00474900
&ZMS               SETC  '"DUALPOOLTOKEN='                              00475000
&ZMS               SETC  '&ZMS.&DUALPOOLTOKEN"'                         00475100
&ZMS               SETC  '&ZMS "DUALPOOLTOKEN"'                         00475200
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00475300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00475400
.ZG115A            ANOP  ,                                              00475500
.*-------------------------------------------------------------------   00475600
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00475700
&ZXDUALPOOLTOKEN   SETC  'INPUT'     SET IN/OUTPUT                      00475800
&XDUALPOOLTOKEN    SETC  'NOTOKEN'                                      00475900
                   AIF   (K'&DUALPOOLTOKEN(1) LE 0).ZG115B  PARM        00476000
&XDUALPOOLTOKEN    SETC  '&DUALPOOLTOKEN(1)'    SET XVARIABLE           00476100
                   AIF   (N'&DUALPOOLTOKEN GT 1).ZG115B  MULTI          00476200
&XDUALPOOLTOKEN    SETC  '&DUALPOOLTOKEN'       SET XVARIABLE           00476300
.ZG115B            ANOP  ,                                              00476400
.*-------------------------------------------------------------------   00476500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00476600
                   AIF   (K'&ZXDUALPOOLTOKEN LE 0).ZG115R  NOT I/O      00476700
         AIF   ('&XDUALPOOLTOKEN' EQ 'NOTOKEN').ZG115R                  00476800
                   AIF   ('&XDUALPOOLTOKEN'(1,1) NE '(').ZG115R         00476900
&ZCGPR             SETC  '&XDUALPOOLTOKEN'(2,K'&XDUALPOOLTOKEN-2)       00477000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG115P                  00477100
                   AIF   (K'&ZCGPR GT 2).ZG115Q                         00477200
                   AIF   ('&ZCGPR' EQ '0').ZG115Q                       00477300
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00477400
                   AIF   (T'&ZCGPR NE 'N').ZG115Q  INVALID REG NAME     00477500
.ZG115P            ANOP  ,                                              00477600
                   AIF   (T'&ZCGPR NE 'N').ZG115R  NON NUMERIC          00477700
                   AIF   ('&ZCGPR' LT '2').ZG115Q                       00477800
                   AIF   ('&ZCGPR' LE '12').ZG115R                      00477900
.ZG115Q            ANOP  ,                                              00478000
&ZMS               SETC  '"DUALPOOLTOKEN='                              00478100
&ZMS               SETC  '&ZMS.&DUALPOOLTOKEN"'                         00478200
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00478300
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00478400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00478500
.ZG115R            ANOP  ,                                              00478600
.*-------------------------------------------------------------------   00478700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00478800
.ZG117             ANOP  ,                                              00478900
&ZTLC              SETC 'STOKEN'                                        00479000
                   AIF   ('&ENV(1)' NE '&ZTLC').ZG157                   00479100
&XENV              SETC  'STOKEN'    SET KEYWORD                        00479200
                   AIF   (N'&ENV LE 1).ZG117A   CK NUM                  00479300
&ZMS               SETC  '"ENV='                                        00479400
&ZMS               SETC  '&ZMS.&ENV"'                                   00479500
&ZMS               SETC  '&ZMS "ENV"'                                   00479600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00479700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00479800
.ZG117A            ANOP  ,                                              00479900
.*----------------------------------------------------------------***   00480000
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00480100
                   AIF   (N'&TARGETSTOKEN LE 1).ZG119A  CK NUM          00480200
&ZMS               SETC  '"TARGETSTOKEN='                               00480300
&ZMS               SETC  '&ZMS.&TARGETSTOKEN"'                          00480400
&ZMS               SETC  '&ZMS "TARGETSTOKEN"'                          00480500
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00480600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00480700
.ZG119A            ANOP  ,                                              00480800
.*-------------------------------------------------------------------   00480900
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00481000
&ZXTARGETSTOKEN    SETC  'INPUT'     SET IN/OUTPUT                      00481100
&XTARGETSTOKEN     SETC  '&TARGETSTOKEN(1)'     SET XVARIABLE           00481200
                   AIF   (N'&TARGETSTOKEN GT 1).ZG119B  MULTI           00481300
&XTARGETSTOKEN     SETC  '&TARGETSTOKEN'        SET XVARIABLE           00481400
.ZG119B            AIF   (K'&TARGETSTOKEN(1) GT 0).ZG119C               00481500
&ZXTARGETSTOKEN    SETC  ''          RESET IN/OUTPUT                    00481600
&ZMS               SETC  'WHEN "STOKEN" IS SPECIFIED'                   00481700
&ZMS               SETC  '&ZMS , "TARGETSTOKEN" KEY AND ITS'            00481800
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00481900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00482000
.ZG119C            ANOP  ,                                              00482100
.*-------------------------------------------------------------------   00482200
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00482300
                   AIF   (K'&ZXTARGETSTOKEN LE 0).ZG119R  NOT I/O       00482400
                   AIF   ('&XTARGETSTOKEN'(1,1) NE '(').ZG119R          00482500
&ZCGPR             SETC  '&XTARGETSTOKEN'(2,K'&XTARGETSTOKEN-2)         00482600
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG119P                  00482700
                   AIF   (K'&ZCGPR GT 2).ZG119Q                         00482800
                   AIF   ('&ZCGPR' EQ '0').ZG119Q                       00482900
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00483000
                   AIF   (T'&ZCGPR NE 'N').ZG119Q  INVALID REG NAME     00483100
.ZG119P            ANOP  ,                                              00483200
                   AIF   (T'&ZCGPR NE 'N').ZG119R  NON NUMERIC          00483300
                   AIF   ('&ZCGPR' LT '2').ZG119Q                       00483400
                   AIF   ('&ZCGPR' LE '12').ZG119R                      00483500
.ZG119Q            ANOP  ,                                              00483600
&ZMS               SETC  '"TARGETSTOKEN='                               00483700
&ZMS               SETC  '&ZMS.&TARGETSTOKEN"'                          00483800
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00483900
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00484000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00484100
.ZG119R            ANOP  ,                                              00484200
.*------------------------------------------------------------------    00484300
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00484400
&XPRIORITY         SETC  ''          INITIALIZE XVARIABLE               00484500
.*-------------------------------------------------------------------   00484600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00484700
.ZG123             ANOP  ,                                              00484800
                   AIF   (K'&PRIORITY(1) LE 0).ZG123A                   00484900
&ZTLC              SETC 'LOCAL'                                         00485000
                   AIF   ('&PRIORITY(1)' NE '&ZTLC').ZG124              00485100
&XPRIORITY         SETC  'LOCAL'     SET KEYWORD                        00485200
                   AIF   (N'&PRIORITY LE 1).ZG123A  CK NUM              00485300
&ZMS               SETC  '"PRIORITY='                                   00485400
&ZMS               SETC  '&ZMS.&PRIORITY"'                              00485500
&ZMS               SETC  '&ZMS "PRIORITY"'                              00485600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00485700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00485800
.ZG123A            ANOP  ,                                              00485900
.*------------------------------------------------------------------    00486000
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00486100
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00486200
.ZG123A0           AIF   (K'&MINORPRIORITY LE 0).ZG123A1  OK            00486300
&ZCVAL             SETC '&ZCVAL MINORPRIORITY'  INCORRECT KEY USED      00486400
.ZG123A1           AIF   (K'&SRBIDTOKEN LE 0).ZG123A2  OK               00486500
&ZCVAL             SETC '&ZCVAL SRBIDTOKEN'     INCORRECT KEY USED      00486600
.ZG123A2           AIF   (K'&CLIENTSTOKEN LE 0).ZG123A3  OK             00486700
&ZCVAL             SETC '&ZCVAL CLIENTSTOKEN'   INCORRECT KEY USED      00486800
.ZG123A3           AIF   (K'&ENCLAVETOKEN LE 0).ZG123A4  OK             00486900
&ZCVAL             SETC '&ZCVAL ENCLAVETOKEN'   INCORRECT KEY USED      00487000
.ZG123A4           AIF   (K'&ZCVAL LE 0).ZG123A5  OK                    00487100
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00487200
&ZMS               SETC  '"PRIORITY'                                    00487300
&ZMS               SETC  '&ZMS.=&PRIORITY"'                             00487400
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00487500
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00487600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00487700
.ZG123A5           ANOP  ,                                              00487800
.*-------------------------------------------------------------------   00487900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00488000
.ZG124             ANOP  ,                                              00488100
&ZTLC              SETC 'GLOBAL'                                        00488200
                   AIF   ('&PRIORITY(1)' NE '&ZTLC').ZG125              00488300
&XPRIORITY         SETC  'GLOBAL'    SET KEYWORD                        00488400
                   AIF   (N'&PRIORITY LE 1).ZG124A  CK NUM              00488500
&ZMS               SETC  '"PRIORITY='                                   00488600
&ZMS               SETC  '&ZMS.&PRIORITY"'                              00488700
&ZMS               SETC  '&ZMS "PRIORITY"'                              00488800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00488900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00489000
.ZG124A            ANOP  ,                                              00489100
.*------------------------------------------------------------------    00489200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00489300
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00489400
.ZG124A0           AIF   (K'&MINORPRIORITY LE 0).ZG124A1  OK            00489500
&ZCVAL             SETC '&ZCVAL MINORPRIORITY'  INCORRECT KEY USED      00489600
.ZG124A1           AIF   (K'&SRBIDTOKEN LE 0).ZG124A2  OK               00489700
&ZCVAL             SETC '&ZCVAL SRBIDTOKEN'     INCORRECT KEY USED      00489800
.ZG124A2           AIF   (K'&CLIENTSTOKEN LE 0).ZG124A3  OK             00489900
&ZCVAL             SETC '&ZCVAL CLIENTSTOKEN'   INCORRECT KEY USED      00490000
.ZG124A3           AIF   (K'&ENCLAVETOKEN LE 0).ZG124A4  OK             00490100
&ZCVAL             SETC '&ZCVAL ENCLAVETOKEN'   INCORRECT KEY USED      00490200
.ZG124A4           AIF   (K'&ZCVAL LE 0).ZG124A5  OK                    00490300
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00490400
&ZMS               SETC  '"PRIORITY'                                    00490500
&ZMS               SETC  '&ZMS.=&PRIORITY"'                             00490600
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00490700
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00490800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00490900
.ZG124A5           ANOP  ,                                              00491000
.*-------------------------------------------------------------------   00491100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00491200
.ZG125             ANOP  ,                                              00491300
&ZTLC              SETC 'CURRENT'                                       00491400
                   AIF   ('&PRIORITY(1)' NE '&ZTLC').ZG126              00491500
&XPRIORITY         SETC  'CURRENT'   SET KEYWORD                        00491600
                   AIF   (N'&PRIORITY LE 1).ZG125A  CK NUM              00491700
&ZMS               SETC  '"PRIORITY='                                   00491800
&ZMS               SETC  '&ZMS.&PRIORITY"'                              00491900
&ZMS               SETC  '&ZMS "PRIORITY"'                              00492000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00492100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00492200
.ZG125A            ANOP  ,                                              00492300
.*------------------------------------------------------------------    00492400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00492500
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00492600
.ZG125A0           AIF   (K'&MINORPRIORITY LE 0).ZG125A1  OK            00492700
&ZCVAL             SETC '&ZCVAL MINORPRIORITY'  INCORRECT KEY USED      00492800
.ZG125A1           AIF   (K'&SRBIDTOKEN LE 0).ZG125A2  OK               00492900
&ZCVAL             SETC '&ZCVAL SRBIDTOKEN'     INCORRECT KEY USED      00493000
.ZG125A2           AIF   (K'&CLIENTSTOKEN LE 0).ZG125A3  OK             00493100
&ZCVAL             SETC '&ZCVAL CLIENTSTOKEN'   INCORRECT KEY USED      00493200
.ZG125A3           AIF   (K'&ENCLAVETOKEN LE 0).ZG125A4  OK             00493300
&ZCVAL             SETC '&ZCVAL ENCLAVETOKEN'   INCORRECT KEY USED      00493400
.ZG125A4           AIF   (K'&ZCVAL LE 0).ZG125A5  OK                    00493500
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00493600
&ZMS               SETC  '"PRIORITY'                                    00493700
&ZMS               SETC  '&ZMS.=&PRIORITY"'                             00493800
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00493900
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00494000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00494100
.ZG125A5           ANOP  ,                                              00494200
.*-------------------------------------------------------------------   00494300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00494400
.ZG126             ANOP  ,                                              00494500
&ZTLC              SETC 'PREEMPT'                                       00494600
                   AIF   ('&PRIORITY(1)' NE '&ZTLC').ZG133              00494700
&XPRIORITY         SETC  'PREEMPT'   SET KEYWORD                        00494800
                   AIF   (N'&PRIORITY LE 1).ZG126A  CK NUM              00494900
&ZMS               SETC  '"PRIORITY='                                   00495000
&ZMS               SETC  '&ZMS.&PRIORITY"'                              00495100
&ZMS               SETC  '&ZMS "PRIORITY"'                              00495200
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00495300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00495400
.ZG126A            ANOP  ,                                              00495500
.*------------------------------------------------------------------    00495600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00495700
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00495800
.ZG126A0           AIF   (K'&CLIENTSTOKEN LE 0).ZG126A1  OK             00495900
&ZCVAL             SETC '&ZCVAL CLIENTSTOKEN'   INCORRECT KEY USED      00496000
.ZG126A1           AIF   (K'&ENCLAVETOKEN LE 0).ZG126A2  OK             00496100
&ZCVAL             SETC '&ZCVAL ENCLAVETOKEN'   INCORRECT KEY USED      00496200
.ZG126A2           AIF   (K'&ZCVAL LE 0).ZG126A3  OK                    00496300
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00496400
&ZMS               SETC  '"PRIORITY'                                    00496500
&ZMS               SETC  '&ZMS.=&PRIORITY"'                             00496600
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00496700
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00496800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00496900
.ZG126A3           ANOP  ,                                              00497000
.*----------------------------------------------------------------***   00497100
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00497200
                   AIF   (N'&MINORPRIORITY LE 1).ZG128A  CK NUM         00497300
&ZMS               SETC  '"MINORPRIORITY='                              00497400
&ZMS               SETC  '&ZMS.&MINORPRIORITY"'                         00497500
&ZMS               SETC  '&ZMS "MINORPRIORITY"'                         00497600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00497700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00497800
.ZG128A            ANOP  ,                                              00497900
.*-------------------------------------------------------------------   00498000
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00498100
&ZXMINORPRIORITY   SETC  'INPUT'     SET IN/OUTPUT                      00498200
&XMINORPRIORITY    SETC  'ZERO'                                         00498300
                   AIF   (K'&MINORPRIORITY(1) LE 0).ZG128B  PARM        00498400
&XMINORPRIORITY    SETC  '&MINORPRIORITY(1)'    SET XVARIABLE           00498500
                   AIF   (N'&MINORPRIORITY GT 1).ZG128B  MULTI          00498600
&XMINORPRIORITY    SETC  '&MINORPRIORITY'       SET XVARIABLE           00498700
.ZG128B            ANOP  ,                                              00498800
.*-------------------------------------------------------------------   00498900
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00499000
                   AIF   (K'&ZXMINORPRIORITY LE 0).ZG128R  NOT I/O      00499100
         AIF   ('&XMINORPRIORITY' EQ 'ZERO').ZG128R                     00499200
                   AIF   ('&XMINORPRIORITY'(1,1) NE '(').ZG128R         00499300
&ZCGPR             SETC  '&XMINORPRIORITY'(2,K'&XMINORPRIORITY-2)       00499400
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG128P                  00499500
                   AIF   (K'&ZCGPR GT 2).ZG128Q                         00499600
                   AIF   ('&ZCGPR' EQ '0').ZG128Q                       00499700
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00499800
                   AIF   (T'&ZCGPR NE 'N').ZG128Q  INVALID REG NAME     00499900
.ZG128P            ANOP  ,                                              00500000
                   AIF   (T'&ZCGPR NE 'N').ZG128R  NON NUMERIC          00500100
                   AIF   ('&ZCGPR' LT '2').ZG128Q                       00500200
                   AIF   ('&ZCGPR' LE '12').ZG128R                      00500300
.ZG128Q            ANOP  ,                                              00500400
&ZMS               SETC  '"MINORPRIORITY='                              00500500
&ZMS               SETC  '&ZMS.&MINORPRIORITY"'                         00500600
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00500700
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00500800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00500900
.ZG128R            ANOP  ,                                              00501000
.*----------------------------------------------------------------***   00501100
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00501200
                   AIF   (N'&SRBIDTOKEN LE 1).ZG131A  CK NUM            00501300
&ZMS               SETC  '"SRBIDTOKEN='                                 00501400
&ZMS               SETC  '&ZMS.&SRBIDTOKEN"'                            00501500
&ZMS               SETC  '&ZMS "SRBIDTOKEN"'                            00501600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00501700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00501800
.ZG131A            ANOP  ,                                              00501900
.*-------------------------------------------------------------------   00502000
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00502100
                   AIF   (K'&SRBIDTOKEN(1) LE 0).ZG131C  NO PARM        00502200
&ZXSRBIDTOKEN      SETC  'OUTPUT'    SET OUTPUT                         00502300
&XSRBIDTOKEN       SETC  '&SRBIDTOKEN(1)'       SET XVARIABLE           00502400
                   AIF   (N'&SRBIDTOKEN GT 1).ZG131C                    00502500
&XSRBIDTOKEN       SETC  '&SRBIDTOKEN'          SET XVARIABLE           00502600
.ZG131C            ANOP  ,                                              00502700
.*-------------------------------------------------------------------   00502800
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00502900
                   AIF   (K'&ZXSRBIDTOKEN LE 0).ZG131R  NOT I/O         00503000
                   AIF   ('&XSRBIDTOKEN'(1,1) NE '(').ZG131R            00503100
&ZCGPR             SETC  '&XSRBIDTOKEN'(2,K'&XSRBIDTOKEN-2)             00503200
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG131P                  00503300
                   AIF   (K'&ZCGPR GT 2).ZG131Q                         00503400
                   AIF   ('&ZCGPR' EQ '0').ZG131Q                       00503500
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00503600
                   AIF   (T'&ZCGPR NE 'N').ZG131Q  INVALID REG NAME     00503700
.ZG131P            ANOP  ,                                              00503800
                   AIF   (T'&ZCGPR NE 'N').ZG131R  NON NUMERIC          00503900
                   AIF   ('&ZCGPR' LT '2').ZG131Q                       00504000
                   AIF   ('&ZCGPR' LE '12').ZG131R                      00504100
.ZG131Q            ANOP  ,                                              00504200
&ZMS               SETC  '"SRBIDTOKEN='                                 00504300
&ZMS               SETC  '&ZMS.&SRBIDTOKEN"'                            00504400
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00504500
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00504600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00504700
.ZG131R            ANOP  ,                                              00504800
.*-------------------------------------------------------------------   00504900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00505000
.ZG133             ANOP  ,                                              00505100
&ZTLC              SETC 'CLIENT'                                        00505200
                   AIF   ('&PRIORITY(1)' NE '&ZTLC').ZG143              00505300
&XPRIORITY         SETC  'CLIENT'    SET KEYWORD                        00505400
                   AIF   (N'&PRIORITY LE 1).ZG133A  CK NUM              00505500
&ZMS               SETC  '"PRIORITY='                                   00505600
&ZMS               SETC  '&ZMS.&PRIORITY"'                              00505700
&ZMS               SETC  '&ZMS "PRIORITY"'                              00505800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00505900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00506000
.ZG133A            ANOP  ,                                              00506100
.*------------------------------------------------------------------    00506200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00506300
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00506400
.ZG133A0           AIF   (K'&ENCLAVETOKEN LE 0).ZG133A1  OK             00506500
&ZCVAL             SETC '&ZCVAL ENCLAVETOKEN'   INCORRECT KEY USED      00506600
.ZG133A1           AIF   (K'&ZCVAL LE 0).ZG133A2  OK                    00506700
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00506800
&ZMS               SETC  '"PRIORITY'                                    00506900
&ZMS               SETC  '&ZMS.=&PRIORITY"'                             00507000
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00507100
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00507200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00507300
.ZG133A2           ANOP  ,                                              00507400
.*----------------------------------------------------------------***   00507500
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00507600
                   AIF   (N'&CLIENTSTOKEN LE 1).ZG135A  CK NUM          00507700
&ZMS               SETC  '"CLIENTSTOKEN='                               00507800
&ZMS               SETC  '&ZMS.&CLIENTSTOKEN"'                          00507900
&ZMS               SETC  '&ZMS "CLIENTSTOKEN"'                          00508000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00508100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00508200
.ZG135A            ANOP  ,                                              00508300
.*-------------------------------------------------------------------   00508400
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00508500
&ZXCLIENTSTOKEN    SETC  'INPUT'     SET IN/OUTPUT                      00508600
&XCLIENTSTOKEN     SETC  '&CLIENTSTOKEN(1)'     SET XVARIABLE           00508700
                   AIF   (N'&CLIENTSTOKEN GT 1).ZG135B  MULTI           00508800
&XCLIENTSTOKEN     SETC  '&CLIENTSTOKEN'        SET XVARIABLE           00508900
.ZG135B            AIF   (K'&CLIENTSTOKEN(1) GT 0).ZG135C               00509000
&ZXCLIENTSTOKEN    SETC  ''          RESET IN/OUTPUT                    00509100
&ZMS               SETC  'WHEN "CLIENT" IS SPECIFIED'                   00509200
&ZMS               SETC  '&ZMS , "CLIENTSTOKEN" KEY AND ITS'            00509300
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00509400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00509500
.ZG135C            ANOP  ,                                              00509600
.*-------------------------------------------------------------------   00509700
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00509800
                   AIF   (K'&ZXCLIENTSTOKEN LE 0).ZG135R  NOT I/O       00509900
                   AIF   ('&XCLIENTSTOKEN'(1,1) NE '(').ZG135R          00510000
&ZCGPR             SETC  '&XCLIENTSTOKEN'(2,K'&XCLIENTSTOKEN-2)         00510100
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG135P                  00510200
                   AIF   (K'&ZCGPR GT 2).ZG135Q                         00510300
                   AIF   ('&ZCGPR' EQ '0').ZG135Q                       00510400
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00510500
                   AIF   (T'&ZCGPR NE 'N').ZG135Q  INVALID REG NAME     00510600
.ZG135P            ANOP  ,                                              00510700
                   AIF   (T'&ZCGPR NE 'N').ZG135R  NON NUMERIC          00510800
                   AIF   ('&ZCGPR' LT '2').ZG135Q                       00510900
                   AIF   ('&ZCGPR' LE '12').ZG135R                      00511000
.ZG135Q            ANOP  ,                                              00511100
&ZMS               SETC  '"CLIENTSTOKEN='                               00511200
&ZMS               SETC  '&ZMS.&CLIENTSTOKEN"'                          00511300
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00511400
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00511500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00511600
.ZG135R            ANOP  ,                                              00511700
.*----------------------------------------------------------------***   00511800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00511900
                   AIF   (N'&MINORPRIORITY LE 1).ZG138A  CK NUM         00512000
&ZMS               SETC  '"MINORPRIORITY='                              00512100
&ZMS               SETC  '&ZMS.&MINORPRIORITY"'                         00512200
&ZMS               SETC  '&ZMS "MINORPRIORITY"'                         00512300
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00512400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00512500
.ZG138A            ANOP  ,                                              00512600
.*-------------------------------------------------------------------   00512700
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00512800
&ZXMINORPRIORITY   SETC  'INPUT'     SET IN/OUTPUT                      00512900
&XMINORPRIORITY    SETC  'ZERO'                                         00513000
                   AIF   (K'&MINORPRIORITY(1) LE 0).ZG138B  PARM        00513100
&XMINORPRIORITY    SETC  '&MINORPRIORITY(1)'    SET XVARIABLE           00513200
                   AIF   (N'&MINORPRIORITY GT 1).ZG138B  MULTI          00513300
&XMINORPRIORITY    SETC  '&MINORPRIORITY'       SET XVARIABLE           00513400
.ZG138B            ANOP  ,                                              00513500
.*-------------------------------------------------------------------   00513600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00513700
                   AIF   (K'&ZXMINORPRIORITY LE 0).ZG138R  NOT I/O      00513800
         AIF   ('&XMINORPRIORITY' EQ 'ZERO').ZG138R                     00513900
                   AIF   ('&XMINORPRIORITY'(1,1) NE '(').ZG138R         00514000
&ZCGPR             SETC  '&XMINORPRIORITY'(2,K'&XMINORPRIORITY-2)       00514100
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG138P                  00514200
                   AIF   (K'&ZCGPR GT 2).ZG138Q                         00514300
                   AIF   ('&ZCGPR' EQ '0').ZG138Q                       00514400
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00514500
                   AIF   (T'&ZCGPR NE 'N').ZG138Q  INVALID REG NAME     00514600
.ZG138P            ANOP  ,                                              00514700
                   AIF   (T'&ZCGPR NE 'N').ZG138R  NON NUMERIC          00514800
                   AIF   ('&ZCGPR' LT '2').ZG138Q                       00514900
                   AIF   ('&ZCGPR' LE '12').ZG138R                      00515000
.ZG138Q            ANOP  ,                                              00515100
&ZMS               SETC  '"MINORPRIORITY='                              00515200
&ZMS               SETC  '&ZMS.&MINORPRIORITY"'                         00515300
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00515400
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00515500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00515600
.ZG138R            ANOP  ,                                              00515700
.*----------------------------------------------------------------***   00515800
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00515900
                   AIF   (N'&SRBIDTOKEN LE 1).ZG141A  CK NUM            00516000
&ZMS               SETC  '"SRBIDTOKEN='                                 00516100
&ZMS               SETC  '&ZMS.&SRBIDTOKEN"'                            00516200
&ZMS               SETC  '&ZMS "SRBIDTOKEN"'                            00516300
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00516400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00516500
.ZG141A            ANOP  ,                                              00516600
.*-------------------------------------------------------------------   00516700
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00516800
                   AIF   (K'&SRBIDTOKEN(1) LE 0).ZG141C  NO PARM        00516900
&ZXSRBIDTOKEN      SETC  'OUTPUT'    SET OUTPUT                         00517000
&XSRBIDTOKEN       SETC  '&SRBIDTOKEN(1)'       SET XVARIABLE           00517100
                   AIF   (N'&SRBIDTOKEN GT 1).ZG141C                    00517200
&XSRBIDTOKEN       SETC  '&SRBIDTOKEN'          SET XVARIABLE           00517300
.ZG141C            ANOP  ,                                              00517400
.*-------------------------------------------------------------------   00517500
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00517600
                   AIF   (K'&ZXSRBIDTOKEN LE 0).ZG141R  NOT I/O         00517700
                   AIF   ('&XSRBIDTOKEN'(1,1) NE '(').ZG141R            00517800
&ZCGPR             SETC  '&XSRBIDTOKEN'(2,K'&XSRBIDTOKEN-2)             00517900
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG141P                  00518000
                   AIF   (K'&ZCGPR GT 2).ZG141Q                         00518100
                   AIF   ('&ZCGPR' EQ '0').ZG141Q                       00518200
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00518300
                   AIF   (T'&ZCGPR NE 'N').ZG141Q  INVALID REG NAME     00518400
.ZG141P            ANOP  ,                                              00518500
                   AIF   (T'&ZCGPR NE 'N').ZG141R  NON NUMERIC          00518600
                   AIF   ('&ZCGPR' LT '2').ZG141Q                       00518700
                   AIF   ('&ZCGPR' LE '12').ZG141R                      00518800
.ZG141Q            ANOP  ,                                              00518900
&ZMS               SETC  '"SRBIDTOKEN='                                 00519000
&ZMS               SETC  '&ZMS.&SRBIDTOKEN"'                            00519100
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00519200
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00519300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00519400
.ZG141R            ANOP  ,                                              00519500
.*-------------------------------------------------------------------   00519600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00519700
.ZG143             ANOP  ,                                              00519800
&ZTLC              SETC 'ENCLAVE'                                       00519900
                   AIF   ('&PRIORITY(1)' NE '&ZTLC').ZG153              00520000
&XPRIORITY         SETC  'ENCLAVE'   SET KEYWORD                        00520100
                   AIF   (N'&PRIORITY LE 1).ZG143A  CK NUM              00520200
&ZMS               SETC  '"PRIORITY='                                   00520300
&ZMS               SETC  '&ZMS.&PRIORITY"'                              00520400
&ZMS               SETC  '&ZMS "PRIORITY"'                              00520500
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00520600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00520700
.ZG143A            ANOP  ,                                              00520800
.*------------------------------------------------------------------    00520900
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00521000
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00521100
.ZG143A0           AIF   (K'&CLIENTSTOKEN LE 0).ZG143A1  OK             00521200
&ZCVAL             SETC '&ZCVAL CLIENTSTOKEN'   INCORRECT KEY USED      00521300
.ZG143A1           AIF   (K'&ZCVAL LE 0).ZG143A2  OK                    00521400
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00521500
&ZMS               SETC  '"PRIORITY'                                    00521600
&ZMS               SETC  '&ZMS.=&PRIORITY"'                             00521700
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00521800
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00521900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00522000
.ZG143A2           ANOP  ,                                              00522100
.*----------------------------------------------------------------***   00522200
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00522300
                   AIF   (N'&ENCLAVETOKEN LE 1).ZG145A  CK NUM          00522400
&ZMS               SETC  '"ENCLAVETOKEN='                               00522500
&ZMS               SETC  '&ZMS.&ENCLAVETOKEN"'                          00522600
&ZMS               SETC  '&ZMS "ENCLAVETOKEN"'                          00522700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00522800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00522900
.ZG145A            ANOP  ,                                              00523000
.*-------------------------------------------------------------------   00523100
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00523200
&ZXENCLAVETOKEN    SETC  'INPUT'     SET IN/OUTPUT                      00523300
&XENCLAVETOKEN     SETC  '&ENCLAVETOKEN(1)'     SET XVARIABLE           00523400
                   AIF   (N'&ENCLAVETOKEN GT 1).ZG145B  MULTI           00523500
&XENCLAVETOKEN     SETC  '&ENCLAVETOKEN'        SET XVARIABLE           00523600
.ZG145B            AIF   (K'&ENCLAVETOKEN(1) GT 0).ZG145C               00523700
&ZXENCLAVETOKEN    SETC  ''          RESET IN/OUTPUT                    00523800
&ZMS               SETC  'WHEN "ENCLAVE" IS SPECIFIED'                  00523900
&ZMS               SETC  '&ZMS , "ENCLAVETOKEN" KEY AND ITS'            00524000
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00524100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00524200
.ZG145C            ANOP  ,                                              00524300
.*-------------------------------------------------------------------   00524400
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00524500
                   AIF   (K'&ZXENCLAVETOKEN LE 0).ZG145R  NOT I/O       00524600
                   AIF   ('&XENCLAVETOKEN'(1,1) NE '(').ZG145R          00524700
&ZCGPR             SETC  '&XENCLAVETOKEN'(2,K'&XENCLAVETOKEN-2)         00524800
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG145P                  00524900
                   AIF   (K'&ZCGPR GT 2).ZG145Q                         00525000
                   AIF   ('&ZCGPR' EQ '0').ZG145Q                       00525100
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00525200
                   AIF   (T'&ZCGPR NE 'N').ZG145Q  INVALID REG NAME     00525300
.ZG145P            ANOP  ,                                              00525400
                   AIF   (T'&ZCGPR NE 'N').ZG145R  NON NUMERIC          00525500
                   AIF   ('&ZCGPR' LT '2').ZG145Q                       00525600
                   AIF   ('&ZCGPR' LE '12').ZG145R                      00525700
.ZG145Q            ANOP  ,                                              00525800
&ZMS               SETC  '"ENCLAVETOKEN='                               00525900
&ZMS               SETC  '&ZMS.&ENCLAVETOKEN"'                          00526000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00526100
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00526200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00526300
.ZG145R            ANOP  ,                                              00526400
.*----------------------------------------------------------------***   00526500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00526600
                   AIF   (N'&MINORPRIORITY LE 1).ZG148A  CK NUM         00526700
&ZMS               SETC  '"MINORPRIORITY='                              00526800
&ZMS               SETC  '&ZMS.&MINORPRIORITY"'                         00526900
&ZMS               SETC  '&ZMS "MINORPRIORITY"'                         00527000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00527100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00527200
.ZG148A            ANOP  ,                                              00527300
.*-------------------------------------------------------------------   00527400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00527500
&ZXMINORPRIORITY   SETC  'INPUT'     SET IN/OUTPUT                      00527600
&XMINORPRIORITY    SETC  'ZERO'                                         00527700
                   AIF   (K'&MINORPRIORITY(1) LE 0).ZG148B  PARM        00527800
&XMINORPRIORITY    SETC  '&MINORPRIORITY(1)'    SET XVARIABLE           00527900
                   AIF   (N'&MINORPRIORITY GT 1).ZG148B  MULTI          00528000
&XMINORPRIORITY    SETC  '&MINORPRIORITY'       SET XVARIABLE           00528100
.ZG148B            ANOP  ,                                              00528200
.*-------------------------------------------------------------------   00528300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00528400
                   AIF   (K'&ZXMINORPRIORITY LE 0).ZG148R  NOT I/O      00528500
         AIF   ('&XMINORPRIORITY' EQ 'ZERO').ZG148R                     00528600
                   AIF   ('&XMINORPRIORITY'(1,1) NE '(').ZG148R         00528700
&ZCGPR             SETC  '&XMINORPRIORITY'(2,K'&XMINORPRIORITY-2)       00528800
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG148P                  00528900
                   AIF   (K'&ZCGPR GT 2).ZG148Q                         00529000
                   AIF   ('&ZCGPR' EQ '0').ZG148Q                       00529100
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00529200
                   AIF   (T'&ZCGPR NE 'N').ZG148Q  INVALID REG NAME     00529300
.ZG148P            ANOP  ,                                              00529400
                   AIF   (T'&ZCGPR NE 'N').ZG148R  NON NUMERIC          00529500
                   AIF   ('&ZCGPR' LT '2').ZG148Q                       00529600
                   AIF   ('&ZCGPR' LE '12').ZG148R                      00529700
.ZG148Q            ANOP  ,                                              00529800
&ZMS               SETC  '"MINORPRIORITY='                              00529900
&ZMS               SETC  '&ZMS.&MINORPRIORITY"'                         00530000
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00530100
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00530200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00530300
.ZG148R            ANOP  ,                                              00530400
.*----------------------------------------------------------------***   00530500
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00530600
                   AIF   (N'&SRBIDTOKEN LE 1).ZG151A  CK NUM            00530700
&ZMS               SETC  '"SRBIDTOKEN='                                 00530800
&ZMS               SETC  '&ZMS.&SRBIDTOKEN"'                            00530900
&ZMS               SETC  '&ZMS "SRBIDTOKEN"'                            00531000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00531100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00531200
.ZG151A            ANOP  ,                                              00531300
.*-------------------------------------------------------------------   00531400
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00531500
                   AIF   (K'&SRBIDTOKEN(1) LE 0).ZG151C  NO PARM        00531600
&ZXSRBIDTOKEN      SETC  'OUTPUT'    SET OUTPUT                         00531700
&XSRBIDTOKEN       SETC  '&SRBIDTOKEN(1)'       SET XVARIABLE           00531800
                   AIF   (N'&SRBIDTOKEN GT 1).ZG151C                    00531900
&XSRBIDTOKEN       SETC  '&SRBIDTOKEN'          SET XVARIABLE           00532000
.ZG151C            ANOP  ,                                              00532100
.*-------------------------------------------------------------------   00532200
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00532300
                   AIF   (K'&ZXSRBIDTOKEN LE 0).ZG151R  NOT I/O         00532400
                   AIF   ('&XSRBIDTOKEN'(1,1) NE '(').ZG151R            00532500
&ZCGPR             SETC  '&XSRBIDTOKEN'(2,K'&XSRBIDTOKEN-2)             00532600
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG151P                  00532700
                   AIF   (K'&ZCGPR GT 2).ZG151Q                         00532800
                   AIF   ('&ZCGPR' EQ '0').ZG151Q                       00532900
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00533000
                   AIF   (T'&ZCGPR NE 'N').ZG151Q  INVALID REG NAME     00533100
.ZG151P            ANOP  ,                                              00533200
                   AIF   (T'&ZCGPR NE 'N').ZG151R  NON NUMERIC          00533300
                   AIF   ('&ZCGPR' LT '2').ZG151Q                       00533400
                   AIF   ('&ZCGPR' LE '12').ZG151R                      00533500
.ZG151Q            ANOP  ,                                              00533600
&ZMS               SETC  '"SRBIDTOKEN='                                 00533700
&ZMS               SETC  '&ZMS.&SRBIDTOKEN"'                            00533800
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00533900
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00534000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00534100
.ZG151R            ANOP  ,                                              00534200
.*------------------------------------------------------------------    00534300
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00534400
.ZG153             ANOP  ,                                              00534500
&ZXPRIORITY        SETC  'INPUT'     SET IN/OUTPUT                      00534600
                   AIF   (K'&XPRIORITY GT 0).ZG153E  VALID ARG          00534700
                   AIF   (T'&PRIORITY EQ 'O').ZG153D  OMITTED           00534800
&ZASYSLNDX         SETA  0                                              00534900
.ZG153A            ANOP  ,           POSITIONAL MACRO KEY               00535000
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   00535100
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG153C              00535200
&ZTLC              SETC 'PRIORITY'                                      00535300
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG153A     00535400
.ZG153B            ANOP  ,                                              00535500
&ZXPRIORITY        SETC  ''          RESET IN/OUTPUT                    00535600
&ZMS               SETC  'THE "PRIORITY" KEY'                           00535700
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        00535800
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               00535900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00536000
                   AGO   .ZG153E                                        00536100
.ZG153C            ANOP  ,                                              00536200
&ZXPRIORITY        SETC  ''          RESET IN/OUTPUT                    00536300
&ZMS               SETC  '"PRIORITY='                                   00536400
&ZMS               SETC  '&ZMS.&PRIORITY"'                              00536500
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00536600
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00536700
&ZMS               SETC  '&ZMS "LOCAL",'                                00536800
&ZMS               SETC  '&ZMS "GLOBAL",'                               00536900
&ZMS               SETC  '&ZMS "CURRENT",'                              00537000
&ZMS               SETC  '&ZMS "PREEMPT",'                              00537100
&ZMS               SETC  '&ZMS "CLIENT",'                               00537200
&ZMS               SETC  '&ZMS OR "ENCLAVE".'                           00537300
                   MNOTE 8,' &ZMS '                                     00537400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00537500
                   AGO   .ZG153E                                        00537600
.ZG153D            ANOP  ,                                              00537700
&XPRIORITY         SETC  'LOCAL'     SET DEFAULT KEYWORD                00537800
.ZG153E            ANOP  ,                                              00537900
.*----------------------------------------------------------------***   00538000
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00538100
                   AIF   (N'&DUALPOOLTOKEN LE 1).ZG155A  CK NUM         00538200
&ZMS               SETC  '"DUALPOOLTOKEN='                              00538300
&ZMS               SETC  '&ZMS.&DUALPOOLTOKEN"'                         00538400
&ZMS               SETC  '&ZMS "DUALPOOLTOKEN"'                         00538500
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00538600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00538700
.ZG155A            ANOP  ,                                              00538800
.*-------------------------------------------------------------------   00538900
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00539000
&ZXDUALPOOLTOKEN   SETC  'INPUT'     SET IN/OUTPUT                      00539100
&XDUALPOOLTOKEN    SETC  'NOTOKEN'                                      00539200
                   AIF   (K'&DUALPOOLTOKEN(1) LE 0).ZG155B  PARM        00539300
&XDUALPOOLTOKEN    SETC  '&DUALPOOLTOKEN(1)'    SET XVARIABLE           00539400
                   AIF   (N'&DUALPOOLTOKEN GT 1).ZG155B  MULTI          00539500
&XDUALPOOLTOKEN    SETC  '&DUALPOOLTOKEN'       SET XVARIABLE           00539600
.ZG155B            ANOP  ,                                              00539700
.*-------------------------------------------------------------------   00539800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00539900
                   AIF   (K'&ZXDUALPOOLTOKEN LE 0).ZG155R  NOT I/O      00540000
         AIF   ('&XDUALPOOLTOKEN' EQ 'NOTOKEN').ZG155R                  00540100
                   AIF   ('&XDUALPOOLTOKEN'(1,1) NE '(').ZG155R         00540200
&ZCGPR             SETC  '&XDUALPOOLTOKEN'(2,K'&XDUALPOOLTOKEN-2)       00540300
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG155P                  00540400
                   AIF   (K'&ZCGPR GT 2).ZG155Q                         00540500
                   AIF   ('&ZCGPR' EQ '0').ZG155Q                       00540600
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00540700
                   AIF   (T'&ZCGPR NE 'N').ZG155Q  INVALID REG NAME     00540800
.ZG155P            ANOP  ,                                              00540900
                   AIF   (T'&ZCGPR NE 'N').ZG155R  NON NUMERIC          00541000
                   AIF   ('&ZCGPR' LT '2').ZG155Q                       00541100
                   AIF   ('&ZCGPR' LE '12').ZG155R                      00541200
.ZG155Q            ANOP  ,                                              00541300
&ZMS               SETC  '"DUALPOOLTOKEN='                              00541400
&ZMS               SETC  '&ZMS.&DUALPOOLTOKEN"'                         00541500
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00541600
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00541700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00541800
.ZG155R            ANOP  ,                                              00541900
.*------------------------------------------------------------------    00542000
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00542100
.ZG157             ANOP  ,                                              00542200
&ZXENV             SETC  'INPUT'     SET IN/OUTPUT                      00542300
                   AIF   (K'&XENV GT 0).ZG157E  VALID ARG               00542400
                   AIF   (T'&ENV EQ 'O').ZG157D  OMITTED                00542500
&ZASYSLNDX         SETA  0                                              00542600
.ZG157A            ANOP  ,           POSITIONAL MACRO KEY               00542700
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   00542800
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG157C              00542900
&ZTLC              SETC 'ENV'                                           00543000
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG157A     00543100
.ZG157B            ANOP  ,                                              00543200
&ZXENV             SETC  ''          RESET IN/OUTPUT                    00543300
&ZMS               SETC  'THE "ENV" KEY'                                00543400
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        00543500
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               00543600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00543700
                   AGO   .ZG157E                                        00543800
.ZG157C            ANOP  ,                                              00543900
&ZXENV             SETC  ''          RESET IN/OUTPUT                    00544000
&ZMS               SETC  '"ENV='                                        00544100
&ZMS               SETC  '&ZMS.&ENV"'                                   00544200
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00544300
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00544400
&ZMS               SETC  '&ZMS "HOME",'                                 00544500
&ZMS               SETC  '&ZMS "PRIMARY",'                              00544600
&ZMS               SETC  '&ZMS "FULLXM",'                               00544700
&ZMS               SETC  '&ZMS OR "STOKEN".'                            00544800
                   MNOTE 8,' &ZMS '                                     00544900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00545000
                   AGO   .ZG157E                                        00545100
.ZG157D            ANOP  ,                                              00545200
&XENV              SETC  'HOME'      SET DEFAULT KEYWORD                00545300
.ZG157E            ANOP  ,                                              00545400
.*------------------------------------------------------------------    00545500
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00545600
&XFEATURE          SETC  ''          INITIALIZE XVARIABLE               00545700
.*-------------------------------------------------------------------   00545800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00545900
.ZG160             ANOP  ,                                              00546000
                   AIF   (K'&FEATURE(1) LE 0).ZG160A                    00546100
&ZTLC              SETC 'NONE'                                          00546200
                   AIF   ('&FEATURE(1)' NE '&ZTLC').ZG161               00546300
&XFEATURE          SETC  'NONE'      SET KEYWORD                        00546400
                   AIF   (N'&FEATURE LE 1).ZG160A  CK NUM               00546500
&ZMS               SETC  '"FEATURE='                                    00546600
&ZMS               SETC  '&ZMS.&FEATURE"'                               00546700
&ZMS               SETC  '&ZMS "FEATURE"'                               00546800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00546900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00547000
.ZG160A            ANOP  ,                                              00547100
.*------------------------------------------------------------------    00547200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00547300
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00547400
.ZG160A0           AIF   (K'&CPUMASK LE 0).ZG160A1  OK                  00547500
&ZCVAL             SETC '&ZCVAL CPUMASK'        INCORRECT KEY USED      00547600
.ZG160A1           AIF   (K'&ZCVAL LE 0).ZG160A2  OK                    00547700
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00547800
&ZMS               SETC  '"FEATURE'                                     00547900
&ZMS               SETC  '&ZMS.=&FEATURE"'                              00548000
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00548100
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00548200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00548300
.ZG160A2           ANOP  ,                                              00548400
.*-------------------------------------------------------------------   00548500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00548600
.ZG161             ANOP  ,                                              00548700
&ZTLC              SETC 'CRYPTO'                                        00548800
                   AIF   ('&FEATURE(1)' NE '&ZTLC').ZG162               00548900
&XFEATURE          SETC  'CRYPTO'    SET KEYWORD                        00549000
                   AIF   (N'&FEATURE LE 1).ZG161A  CK NUM               00549100
&ZMS               SETC  '"FEATURE='                                    00549200
&ZMS               SETC  '&ZMS.&FEATURE"'                               00549300
&ZMS               SETC  '&ZMS "FEATURE"'                               00549400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00549500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00549600
.ZG161A            ANOP  ,                                              00549700
.*------------------------------------------------------------------    00549800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00549900
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00550000
.ZG161A0           AIF   (K'&CPUMASK LE 0).ZG161A1  OK                  00550100
&ZCVAL             SETC '&ZCVAL CPUMASK'        INCORRECT KEY USED      00550200
.ZG161A1           AIF   (K'&ZCVAL LE 0).ZG161A2  OK                    00550300
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00550400
&ZMS               SETC  '"FEATURE'                                     00550500
&ZMS               SETC  '&ZMS.=&FEATURE"'                              00550600
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00550700
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00550800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00550900
.ZG161A2           ANOP  ,                                              00551000
.*-------------------------------------------------------------------   00551100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00551200
.ZG162             ANOP  ,                                              00551300
&ZTLC              SETC 'CPMASK'                                        00551400
                   AIF   ('&FEATURE(1)' NE '&ZTLC').ZG166               00551500
&XFEATURE          SETC  'CPMASK'    SET KEYWORD                        00551600
                   AIF   (N'&FEATURE LE 1).ZG162A  CK NUM               00551700
&ZMS               SETC  '"FEATURE='                                    00551800
&ZMS               SETC  '&ZMS.&FEATURE"'                               00551900
&ZMS               SETC  '&ZMS "FEATURE"'                               00552000
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00552100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00552200
.ZG162A            ANOP  ,                                              00552300
.*----------------------------------------------------------------***   00552400
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00552500
                   AIF   (N'&CPUMASK LE 1).ZG164A  CK NUM               00552600
&ZMS               SETC  '"CPUMASK='                                    00552700
&ZMS               SETC  '&ZMS.&CPUMASK"'                               00552800
&ZMS               SETC  '&ZMS "CPUMASK"'                               00552900
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00553000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00553100
.ZG164A            ANOP  ,                                              00553200
.*-------------------------------------------------------------------   00553300
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00553400
&ZXCPUMASK         SETC  'INPUT'     SET IN/OUTPUT                      00553500
&XCPUMASK          SETC  '&CPUMASK(1)'          SET XVARIABLE           00553600
                   AIF   (N'&CPUMASK GT 1).ZG164B  MULTI                00553700
&XCPUMASK          SETC  '&CPUMASK'  SET XVARIABLE                      00553800
.ZG164B            AIF   (K'&CPUMASK(1) GT 0).ZG164C                    00553900
&ZXCPUMASK         SETC  ''          RESET IN/OUTPUT                    00554000
&ZMS               SETC  'WHEN "CPMASK" IS SPECIFIED'                   00554100
&ZMS               SETC  '&ZMS , "CPUMASK" KEY AND ITS'                 00554200
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00554300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00554400
.ZG164C            ANOP  ,                                              00554500
.*-------------------------------------------------------------------   00554600
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00554700
                   AIF   (K'&ZXCPUMASK LE 0).ZG164R  NOT I/O            00554800
                   AIF   ('&XCPUMASK'(1,1) NE '(').ZG164R               00554900
&ZCGPR             SETC  '&XCPUMASK'(2,K'&XCPUMASK-2)                   00555000
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG164P                  00555100
                   AIF   (K'&ZCGPR GT 2).ZG164Q                         00555200
                   AIF   ('&ZCGPR' EQ '0').ZG164Q                       00555300
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00555400
                   AIF   (T'&ZCGPR NE 'N').ZG164Q  INVALID REG NAME     00555500
.ZG164P            ANOP  ,                                              00555600
                   AIF   (T'&ZCGPR NE 'N').ZG164R  NON NUMERIC          00555700
                   AIF   ('&ZCGPR' LT '2').ZG164Q                       00555800
                   AIF   ('&ZCGPR' LE '12').ZG164R                      00555900
.ZG164Q            ANOP  ,                                              00556000
&ZMS               SETC  '"CPUMASK='                                    00556100
&ZMS               SETC  '&ZMS.&CPUMASK"'                               00556200
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00556300
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00556400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00556500
.ZG164R            ANOP  ,                                              00556600
.*------------------------------------------------------------------    00556700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00556800
.ZG166             ANOP  ,                                              00556900
&ZXFEATURE         SETC  'INPUT'     SET IN/OUTPUT                      00557000
                   AIF   (K'&XFEATURE GT 0).ZG166E  VALID ARG           00557100
                   AIF   (T'&FEATURE EQ 'O').ZG166D  OMITTED            00557200
&ZASYSLNDX         SETA  0                                              00557300
.ZG166A            ANOP  ,           POSITIONAL MACRO KEY               00557400
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   00557500
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG166C              00557600
&ZTLC              SETC 'FEATURE'                                       00557700
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG166A     00557800
.ZG166B            ANOP  ,                                              00557900
&ZXFEATURE         SETC  ''          RESET IN/OUTPUT                    00558000
&ZMS               SETC  'THE "FEATURE" KEY'                            00558100
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        00558200
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               00558300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00558400
                   AGO   .ZG166E                                        00558500
.ZG166C            ANOP  ,                                              00558600
&ZXFEATURE         SETC  ''          RESET IN/OUTPUT                    00558700
&ZMS               SETC  '"FEATURE='                                    00558800
&ZMS               SETC  '&ZMS.&FEATURE"'                               00558900
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00559000
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00559100
&ZMS               SETC  '&ZMS "NONE",'                                 00559200
&ZMS               SETC  '&ZMS "CRYPTO",'                               00559300
&ZMS               SETC  '&ZMS OR "CPMASK".'                            00559400
                   MNOTE 8,' &ZMS '                                     00559500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00559600
                   AGO   .ZG166E                                        00559700
.ZG166D            ANOP  ,                                              00559800
&XFEATURE          SETC  'NONE'      SET DEFAULT KEYWORD                00559900
.ZG166E            ANOP  ,                                              00560000
.*----------------------------------------------------------------***   00560100
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00560200
                   AIF   (N'&FLAGS LE 1).ZG168A  CK NUM                 00560300
&ZMS               SETC  '"FLAGS='                                      00560400
&ZMS               SETC  '&ZMS.&FLAGS"'                                 00560500
&ZMS               SETC  '&ZMS "FLAGS"'                                 00560600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00560700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00560800
.ZG168A            ANOP  ,                                              00560900
.*-------------------------------------------------------------------   00561000
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00561100
&ZXFLAGS           SETC  'INPUT'     SET IN/OUTPUT                      00561200
&XFLAGS            SETC  'NO_FLAGS'                                     00561300
                   AIF   (K'&FLAGS(1) LE 0).ZG168B  PARM                00561400
&XFLAGS            SETC  '&FLAGS(1)'            SET XVARIABLE           00561500
                   AIF   (N'&FLAGS GT 1).ZG168B  MULTI                  00561600
&XFLAGS            SETC  '&FLAGS'    SET XVARIABLE                      00561700
.ZG168B            ANOP  ,                                              00561800
.*-------------------------------------------------------------------   00561900
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00562000
                   AIF   (K'&ZXFLAGS LE 0).ZG168R  NOT I/O              00562100
         AIF   ('&XFLAGS' EQ 'NO_FLAGS').ZG168R                         00562200
                   AIF   ('&XFLAGS'(1,1) NE '(').ZG168R                 00562300
&ZCGPR             SETC  '&XFLAGS'(2,K'&XFLAGS-2)                       00562400
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG168P                  00562500
                   AIF   (K'&ZCGPR GT 2).ZG168Q                         00562600
                   AIF   ('&ZCGPR' EQ '0').ZG168Q                       00562700
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00562800
                   AIF   (T'&ZCGPR NE 'N').ZG168Q  INVALID REG NAME     00562900
.ZG168P            ANOP  ,                                              00563000
                   AIF   (T'&ZCGPR NE 'N').ZG168R  NON NUMERIC          00563100
                   AIF   ('&ZCGPR' LT '2').ZG168Q                       00563200
                   AIF   ('&ZCGPR' LE '12').ZG168R                      00563300
.ZG168Q            ANOP  ,                                              00563400
&ZMS               SETC  '"FLAGS='                                      00563500
&ZMS               SETC  '&ZMS.&FLAGS"'                                 00563600
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00563700
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00563800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00563900
.ZG168R            ANOP  ,                                              00564000
.*----------------------------------------------------------------***   00564100
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00564200
                   AIF   (N'&PARM LE 1).ZG171A  CK NUM                  00564300
&ZMS               SETC  '"PARM='                                       00564400
&ZMS               SETC  '&ZMS.&PARM"'                                  00564500
&ZMS               SETC  '&ZMS "PARM"'                                  00564600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00564700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00564800
.ZG171A            ANOP  ,                                              00564900
.*-------------------------------------------------------------------   00565000
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00565100
&ZXPARM            SETC  'INPUT'     SET IN/OUTPUT                      00565200
&XPARM             SETC  'ZERO'                                         00565300
                   AIF   (K'&PARM(1) LE 0).ZG171B  PARM                 00565400
&XPARM             SETC  '&PARM(1)'  SET XVARIABLE                      00565500
                   AIF   (N'&PARM GT 1).ZG171B  MULTI                   00565600
&XPARM             SETC  '&PARM'     SET XVARIABLE                      00565700
.ZG171B            ANOP  ,                                              00565800
.*-------------------------------------------------------------------   00565900
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00566000
                   AIF   (K'&ZXPARM LE 0).ZG171R  NOT I/O               00566100
         AIF   ('&XPARM' EQ 'ZERO').ZG171R                              00566200
                   AIF   ('&XPARM'(1,1) NE '(').ZG171R                  00566300
&ZCGPR             SETC  '&XPARM'(2,K'&XPARM-2)                         00566400
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG171P                  00566500
                   AIF   (K'&ZCGPR GT 2).ZG171Q                         00566600
                   AIF   ('&ZCGPR' EQ '0').ZG171Q                       00566700
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00566800
                   AIF   (T'&ZCGPR NE 'N').ZG171Q  INVALID REG NAME     00566900
.ZG171P            ANOP  ,                                              00567000
                   AIF   (T'&ZCGPR NE 'N').ZG171R  NON NUMERIC          00567100
                   AIF   ('&ZCGPR' LT '2').ZG171Q                       00567200
                   AIF   ('&ZCGPR' LE '12').ZG171R                      00567300
.ZG171Q            ANOP  ,                                              00567400
&ZMS               SETC  '"PARM='                                       00567500
&ZMS               SETC  '&ZMS.&PARM"'                                  00567600
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00567700
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00567800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00567900
.ZG171R            ANOP  ,                                              00568000
.*----------------------------------------------------------------***   00568100
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00568200
                   AIF   (N'&FRRADDR LE 1).ZG174A  CK NUM               00568300
&ZMS               SETC  '"FRRADDR='                                    00568400
&ZMS               SETC  '&ZMS.&FRRADDR"'                               00568500
&ZMS               SETC  '&ZMS "FRRADDR"'                               00568600
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00568700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00568800
.ZG174A            ANOP  ,                                              00568900
.*-------------------------------------------------------------------   00569000
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00569100
&ZXFRRADDR         SETC  'INPUT'     SET IN/OUTPUT                      00569200
&XFRRADDR          SETC  'NOFRR'                                        00569300
                   AIF   (K'&FRRADDR(1) LE 0).ZG174B  PARM              00569400
&XFRRADDR          SETC  '&FRRADDR(1)'          SET XVARIABLE           00569500
                   AIF   (N'&FRRADDR GT 1).ZG174B  MULTI                00569600
&XFRRADDR          SETC  '&FRRADDR'  SET XVARIABLE                      00569700
.ZG174B            ANOP  ,                                              00569800
.*-------------------------------------------------------------------   00569900
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00570000
                   AIF   (K'&ZXFRRADDR LE 0).ZG174R  NOT I/O            00570100
         AIF   ('&XFRRADDR' EQ 'NOFRR').ZG174R                          00570200
                   AIF   ('&XFRRADDR'(1,1) NE '(').ZG174R               00570300
&ZCGPR             SETC  '&XFRRADDR'(2,K'&XFRRADDR-2)                   00570400
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG174P                  00570500
                   AIF   (K'&ZCGPR GT 2).ZG174Q                         00570600
                   AIF   ('&ZCGPR' EQ '0').ZG174Q                       00570700
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00570800
                   AIF   (T'&ZCGPR NE 'N').ZG174Q  INVALID REG NAME     00570900
.ZG174P            ANOP  ,                                              00571000
                   AIF   (T'&ZCGPR NE 'N').ZG174R  NON NUMERIC          00571100
                   AIF   ('&ZCGPR' LT '2').ZG174Q                       00571200
                   AIF   ('&ZCGPR' LE '12').ZG174R                      00571300
.ZG174Q            ANOP  ,                                              00571400
&ZMS               SETC  '"FRRADDR='                                    00571500
&ZMS               SETC  '&ZMS.&FRRADDR"'                               00571600
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00571700
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00571800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00571900
.ZG174R            ANOP  ,                                              00572000
.*------------------------------------------------------------------    00572100
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00572200
&XSDWALOC31        SETC  ''          INITIALIZE XVARIABLE               00572300
.*-------------------------------------------------------------------   00572400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00572500
.ZG177             ANOP  ,                                              00572600
                   AIF   (K'&SDWALOC31(1) LE 0).ZG177A                  00572700
&ZTLC              SETC 'NO'                                            00572800
                   AIF   ('&SDWALOC31(1)' NE '&ZTLC').ZG178             00572900
&XSDWALOC31        SETC  'NO'        SET KEYWORD                        00573000
                   AIF   (N'&SDWALOC31 LE 1).ZG177A  CK NUM             00573100
&ZMS               SETC  '"SDWALOC31='                                  00573200
&ZMS               SETC  '&ZMS.&SDWALOC31"'                             00573300
&ZMS               SETC  '&ZMS "SDWALOC31"'                             00573400
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00573500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00573600
.ZG177A            ANOP  ,                                              00573700
.*-------------------------------------------------------------------   00573800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00573900
.ZG178             ANOP  ,                                              00574000
&ZTLC              SETC 'YES'                                           00574100
                   AIF   ('&SDWALOC31(1)' NE '&ZTLC').ZG179             00574200
&XSDWALOC31        SETC  'YES'       SET KEYWORD                        00574300
                   AIF   (N'&SDWALOC31 LE 1).ZG178A  CK NUM             00574400
&ZMS               SETC  '"SDWALOC31='                                  00574500
&ZMS               SETC  '&ZMS.&SDWALOC31"'                             00574600
&ZMS               SETC  '&ZMS "SDWALOC31"'                             00574700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00574800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00574900
.ZG178A            ANOP  ,                                              00575000
.*------------------------------------------------------------------    00575100
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00575200
.ZG179             ANOP  ,                                              00575300
&ZXSDWALOC31       SETC  'INPUT'     SET IN/OUTPUT                      00575400
                   AIF   (K'&XSDWALOC31 GT 0).ZG179E  VALID ARG         00575500
                   AIF   (T'&SDWALOC31 EQ 'O').ZG179D  OMITTED          00575600
&ZASYSLNDX         SETA  0                                              00575700
.ZG179A            ANOP  ,           POSITIONAL MACRO KEY               00575800
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   00575900
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG179C              00576000
&ZTLC              SETC 'SDWALOC31'                                     00576100
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG179A     00576200
.ZG179B            ANOP  ,                                              00576300
&ZXSDWALOC31       SETC  ''          RESET IN/OUTPUT                    00576400
&ZMS               SETC  'THE "SDWALOC31" KEY'                          00576500
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        00576600
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               00576700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00576800
                   AGO   .ZG179E                                        00576900
.ZG179C            ANOP  ,                                              00577000
&ZXSDWALOC31       SETC  ''          RESET IN/OUTPUT                    00577100
&ZMS               SETC  '"SDWALOC31='                                  00577200
&ZMS               SETC  '&ZMS.&SDWALOC31"'                             00577300
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00577400
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00577500
&ZMS               SETC  '&ZMS "NO"'                                    00577600
&ZMS               SETC  '&ZMS OR "YES".'                               00577700
                   MNOTE 8,' &ZMS '                                     00577800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00577900
                   AGO   .ZG179E                                        00578000
.ZG179D            ANOP  ,                                              00578100
&XSDWALOC31        SETC  'NO'        SET DEFAULT KEYWORD                00578200
.ZG179E            ANOP  ,                                              00578300
.*------------------------------------------------------------------    00578400
.***AG.KKCTL07 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00578500
                   AIF   (K'&FRRADDR(1) GT 0).ZG179F  KEY               00578600
                   AIF   (K'&SDWALOC31(1) LE 0).ZG179F  PARM            00578700
&ZMS               SETC  '"SDWALOC31'                                   00578800
&ZMS               SETC  '&ZMS.=&SDWALOC31"'                            00578900
&ZMS               SETC  '&ZMS CAN ONLY BE SPECIFIED IF'                00579000
&ZMS               SETC  '&ZMS '                                        00579100
&ZMS               SETC  '&ZMS "FRRADDR"'                               00579200
                   MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                   00579300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00579400
.ZG179F            ANOP  ,                                              00579500
.*----------------------------------------------------------------***   00579600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00579700
                   AIF   (N'&KEYVALUE LE 1).ZG182A  CK NUM              00579800
&ZMS               SETC  '"KEYVALUE='                                   00579900
&ZMS               SETC  '&ZMS.&KEYVALUE"'                              00580000
&ZMS               SETC  '&ZMS "KEYVALUE"'                              00580100
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00580200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00580300
.ZG182A            ANOP  ,                                              00580400
.*-------------------------------------------------------------------   00580500
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00580600
&ZXKEYVALUE        SETC  'INPUT'     SET IN/OUTPUT                      00580700
&XKEYVALUE         SETC  'INVOKERKEY'                                   00580800
                   AIF   (K'&KEYVALUE(1) LE 0).ZG182B  PARM             00580900
&XKEYVALUE         SETC  '&KEYVALUE(1)'         SET XVARIABLE           00581000
                   AIF   (N'&KEYVALUE GT 1).ZG182B  MULTI               00581100
&XKEYVALUE         SETC  '&KEYVALUE'            SET XVARIABLE           00581200
.ZG182B            ANOP  ,                                              00581300
.*-------------------------------------------------------------------   00581400
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00581500
                   AIF   (K'&ZXKEYVALUE LE 0).ZG182R  NOT I/O           00581600
         AIF   ('&XKEYVALUE' EQ 'INVOKERKEY').ZG182R                    00581700
                   AIF   ('&XKEYVALUE'(1,1) NE '(').ZG182R              00581800
&ZCGPR             SETC  '&XKEYVALUE'(2,K'&XKEYVALUE-2)                 00581900
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG182P                  00582000
                   AIF   (K'&ZCGPR GT 2).ZG182Q                         00582100
                   AIF   ('&ZCGPR' EQ '0').ZG182Q                       00582200
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00582300
                   AIF   (T'&ZCGPR NE 'N').ZG182Q  INVALID REG NAME     00582400
.ZG182P            ANOP  ,                                              00582500
                   AIF   (T'&ZCGPR NE 'N').ZG182R  NON NUMERIC          00582600
                   AIF   ('&ZCGPR' LT '2').ZG182Q                       00582700
                   AIF   ('&ZCGPR' LE '12').ZG182R                      00582800
.ZG182Q            ANOP  ,                                              00582900
&ZMS               SETC  '"KEYVALUE='                                   00583000
&ZMS               SETC  '&ZMS.&KEYVALUE"'                              00583100
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00583200
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00583300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00583400
.ZG182R            ANOP  ,                                              00583500
.*------------------------------------------------------------------    00583600
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00583700
&XTRANSFER         SETC  ''          INITIALIZE XVARIABLE               00583800
.*-------------------------------------------------------------------   00583900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00584000
.ZG186             ANOP  ,                                              00584100
                   AIF   (K'&TRANSFER(1) LE 0).ZG186A                   00584200
&ZTLC              SETC 'NO'                                            00584300
                   AIF   ('&TRANSFER(1)' NE '&ZTLC').ZG187              00584400
&XTRANSFER         SETC  'NO'        SET KEYWORD                        00584500
                   AIF   (N'&TRANSFER LE 1).ZG186A  CK NUM              00584600
&ZMS               SETC  '"TRANSFER='                                   00584700
&ZMS               SETC  '&ZMS.&TRANSFER"'                              00584800
&ZMS               SETC  '&ZMS "TRANSFER"'                              00584900
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00585000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00585100
.ZG186A            ANOP  ,                                              00585200
.*-------------------------------------------------------------------   00585300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00585400
.ZG187             ANOP  ,                                              00585500
&ZTLC              SETC 'YES'                                           00585600
                   AIF   ('&TRANSFER(1)' NE '&ZTLC').ZG188              00585700
&XTRANSFER         SETC  'YES'       SET KEYWORD                        00585800
                   AIF   (N'&TRANSFER LE 1).ZG187A  CK NUM              00585900
&ZMS               SETC  '"TRANSFER='                                   00586000
&ZMS               SETC  '&ZMS.&TRANSFER"'                              00586100
&ZMS               SETC  '&ZMS "TRANSFER"'                              00586200
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00586300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00586400
.ZG187A            ANOP  ,                                              00586500
.*------------------------------------------------------------------    00586600
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00586700
.ZG188             ANOP  ,                                              00586800
&ZXTRANSFER        SETC  'INPUT'     SET IN/OUTPUT                      00586900
                   AIF   (K'&XTRANSFER GT 0).ZG188E  VALID ARG          00587000
                   AIF   (T'&TRANSFER EQ 'O').ZG188D  OMITTED           00587100
&ZASYSLNDX         SETA  0                                              00587200
.ZG188A            ANOP  ,           POSITIONAL MACRO KEY               00587300
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   00587400
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG188C              00587500
&ZTLC              SETC 'TRANSFER'                                      00587600
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG188A     00587700
.ZG188B            ANOP  ,                                              00587800
&ZXTRANSFER        SETC  ''          RESET IN/OUTPUT                    00587900
&ZMS               SETC  'THE "TRANSFER" KEY'                           00588000
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        00588100
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               00588200
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00588300
                   AGO   .ZG188E                                        00588400
.ZG188C            ANOP  ,                                              00588500
&ZXTRANSFER        SETC  ''          RESET IN/OUTPUT                    00588600
&ZMS               SETC  '"TRANSFER='                                   00588700
&ZMS               SETC  '&ZMS.&TRANSFER"'                              00588800
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00588900
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00589000
&ZMS               SETC  '&ZMS "NO"'                                    00589100
&ZMS               SETC  '&ZMS OR "YES".'                               00589200
                   MNOTE 8,' &ZMS '                                     00589300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00589400
                   AGO   .ZG188E                                        00589500
.ZG188D            ANOP  ,                                              00589600
&XTRANSFER         SETC  'NO'        SET DEFAULT KEYWORD                00589700
.ZG188E            ANOP  ,                                              00589800
.*------------------------------------------------------------------    00589900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00590000
&XLLOCK            SETC  ''          INITIALIZE XVARIABLE               00590100
.*-------------------------------------------------------------------   00590200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00590300
.ZG191             ANOP  ,                                              00590400
                   AIF   (K'&LLOCK(1) LE 0).ZG191A                      00590500
&ZTLC              SETC 'NO'                                            00590600
                   AIF   ('&LLOCK(1)' NE '&ZTLC').ZG192                 00590700
&XLLOCK            SETC  'NO'        SET KEYWORD                        00590800
                   AIF   (N'&LLOCK LE 1).ZG191A  CK NUM                 00590900
&ZMS               SETC  '"LLOCK='                                      00591000
&ZMS               SETC  '&ZMS.&LLOCK"'                                 00591100
&ZMS               SETC  '&ZMS "LLOCK"'                                 00591200
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00591300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00591400
.ZG191A            ANOP  ,                                              00591500
.*-------------------------------------------------------------------   00591600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00591700
.ZG192             ANOP  ,                                              00591800
&ZTLC              SETC 'YES'                                           00591900
                   AIF   ('&LLOCK(1)' NE '&ZTLC').ZG193                 00592000
&XLLOCK            SETC  'YES'       SET KEYWORD                        00592100
                   AIF   (N'&LLOCK LE 1).ZG192A  CK NUM                 00592200
&ZMS               SETC  '"LLOCK='                                      00592300
&ZMS               SETC  '&ZMS.&LLOCK"'                                 00592400
&ZMS               SETC  '&ZMS "LLOCK"'                                 00592500
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00592600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00592700
.ZG192A            ANOP  ,                                              00592800
.*------------------------------------------------------------------    00592900
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00593000
.ZG193             ANOP  ,                                              00593100
&ZXLLOCK           SETC  'INPUT'     SET IN/OUTPUT                      00593200
                   AIF   (K'&XLLOCK GT 0).ZG193E  VALID ARG             00593300
                   AIF   (T'&LLOCK EQ 'O').ZG193D  OMITTED              00593400
&ZASYSLNDX         SETA  0                                              00593500
.ZG193A            ANOP  ,           POSITIONAL MACRO KEY               00593600
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   00593700
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG193C              00593800
&ZTLC              SETC 'LLOCK'                                         00593900
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG193A     00594000
.ZG193B            ANOP  ,                                              00594100
&ZXLLOCK           SETC  ''          RESET IN/OUTPUT                    00594200
&ZMS               SETC  'THE "LLOCK" KEY'                              00594300
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        00594400
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               00594500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00594600
                   AGO   .ZG193E                                        00594700
.ZG193C            ANOP  ,                                              00594800
&ZXLLOCK           SETC  ''          RESET IN/OUTPUT                    00594900
&ZMS               SETC  '"LLOCK='                                      00595000
&ZMS               SETC  '&ZMS.&LLOCK"'                                 00595100
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00595200
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00595300
&ZMS               SETC  '&ZMS "NO"'                                    00595400
&ZMS               SETC  '&ZMS OR "YES".'                               00595500
                   MNOTE 8,' &ZMS '                                     00595600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00595700
                   AGO   .ZG193E                                        00595800
.ZG193D            ANOP  ,                                              00595900
&XLLOCK            SETC  'NO'        SET DEFAULT KEYWORD                00596000
.ZG193E            ANOP  ,                                              00596100
.*----------------------------------------------------------------***   00596200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00596300
                   AIF   (N'&RMTRADDR LE 1).ZG195A  CK NUM              00596400
&ZMS               SETC  '"RMTRADDR='                                   00596500
&ZMS               SETC  '&ZMS.&RMTRADDR"'                              00596600
&ZMS               SETC  '&ZMS "RMTRADDR"'                              00596700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00596800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00596900
.ZG195A            ANOP  ,                                              00597000
.*-------------------------------------------------------------------   00597100
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00597200
&ZXRMTRADDR        SETC  'INPUT'     SET IN/OUTPUT                      00597300
&XRMTRADDR         SETC  'NORMTR'                                       00597400
                   AIF   (K'&RMTRADDR(1) LE 0).ZG195B  PARM             00597500
&XRMTRADDR         SETC  '&RMTRADDR(1)'         SET XVARIABLE           00597600
                   AIF   (N'&RMTRADDR GT 1).ZG195B  MULTI               00597700
&XRMTRADDR         SETC  '&RMTRADDR'            SET XVARIABLE           00597800
.ZG195B            ANOP  ,                                              00597900
.*-------------------------------------------------------------------   00598000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00598100
                   AIF   (K'&ZXRMTRADDR LE 0).ZG195R  NOT I/O           00598200
         AIF   ('&XRMTRADDR' EQ 'NORMTR').ZG195R                        00598300
                   AIF   ('&XRMTRADDR'(1,1) NE '(').ZG195R              00598400
&ZCGPR             SETC  '&XRMTRADDR'(2,K'&XRMTRADDR-2)                 00598500
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG195P                  00598600
                   AIF   (K'&ZCGPR GT 2).ZG195Q                         00598700
                   AIF   ('&ZCGPR' EQ '0').ZG195Q                       00598800
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00598900
                   AIF   (T'&ZCGPR NE 'N').ZG195Q  INVALID REG NAME     00599000
.ZG195P            ANOP  ,                                              00599100
                   AIF   (T'&ZCGPR NE 'N').ZG195R  NON NUMERIC          00599200
                   AIF   ('&ZCGPR' LT '2').ZG195Q                       00599300
                   AIF   ('&ZCGPR' LE '12').ZG195R                      00599400
.ZG195Q            ANOP  ,                                              00599500
&ZMS               SETC  '"RMTRADDR='                                   00599600
&ZMS               SETC  '&ZMS.&RMTRADDR"'                              00599700
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00599800
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00599900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00600000
.ZG195R            ANOP  ,                                              00600100
.*----------------------------------------------------------------***   00600200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00600300
                   AIF   (N'&PURGESTOKEN LE 1).ZG196A  CK NUM           00600400
&ZMS               SETC  '"PURGESTOKEN='                                00600500
&ZMS               SETC  '&ZMS.&PURGESTOKEN"'                           00600600
&ZMS               SETC  '&ZMS "PURGESTOKEN"'                           00600700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00600800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00600900
.ZG196A            ANOP  ,                                              00601000
.*-------------------------------------------------------------------   00601100
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00601200
&ZXPURGESTOKEN     SETC  'INPUT'     SET IN/OUTPUT                      00601300
&XPURGESTOKEN      SETC  'NOPSTOKEN'                                    00601400
                   AIF   (K'&PURGESTOKEN(1) LE 0).ZG196B  PARM          00601500
&XPURGESTOKEN      SETC  '&PURGESTOKEN(1)'      SET XVARIABLE           00601600
                   AIF   (N'&PURGESTOKEN GT 1).ZG196B  MULTI            00601700
&XPURGESTOKEN      SETC  '&PURGESTOKEN'         SET XVARIABLE           00601800
.ZG196B            ANOP  ,                                              00601900
.*-------------------------------------------------------------------   00602000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00602100
                   AIF   (K'&ZXPURGESTOKEN LE 0).ZG196R  NOT I/O        00602200
         AIF   ('&XPURGESTOKEN' EQ 'NOPSTOKEN').ZG196R                  00602300
                   AIF   ('&XPURGESTOKEN'(1,1) NE '(').ZG196R           00602400
&ZCGPR             SETC  '&XPURGESTOKEN'(2,K'&XPURGESTOKEN-2)           00602500
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG196P                  00602600
                   AIF   (K'&ZCGPR GT 2).ZG196Q                         00602700
                   AIF   ('&ZCGPR' EQ '0').ZG196Q                       00602800
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00602900
                   AIF   (T'&ZCGPR NE 'N').ZG196Q  INVALID REG NAME     00603000
.ZG196P            ANOP  ,                                              00603100
                   AIF   (T'&ZCGPR NE 'N').ZG196R  NON NUMERIC          00603200
                   AIF   ('&ZCGPR' LT '2').ZG196Q                       00603300
                   AIF   ('&ZCGPR' LE '12').ZG196R                      00603400
.ZG196Q            ANOP  ,                                              00603500
&ZMS               SETC  '"PURGESTOKEN='                                00603600
&ZMS               SETC  '&ZMS.&PURGESTOKEN"'                           00603700
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00603800
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00603900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00604000
.ZG196R            ANOP  ,                                              00604100
.*----------------------------------------------------------------***   00604200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00604300
                   AIF   (N'&PTCBADDR LE 1).ZG198A  CK NUM              00604400
&ZMS               SETC  '"PTCBADDR='                                   00604500
&ZMS               SETC  '&ZMS.&PTCBADDR"'                              00604600
&ZMS               SETC  '&ZMS "PTCBADDR"'                              00604700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00604800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00604900
.ZG198A            ANOP  ,                                              00605000
.*-------------------------------------------------------------------   00605100
.***AG.KXVAR17 NAME, OPT INPUT, KEYS -XVARIABLE                         00605200
&XPTCBADDR         SETC  'NOPTCB'    SET DEFAULT                        00605300
                   AIF   (K'&PTCBADDR(1) LE 0).ZG198C  PARM             00605400
&XPTCBADDR         SETC  '&PTCBADDR(1)'         SET XVARIABLE           00605500
                   AIF   (N'&PTCBADDR GT 1).ZG198B  MULTI               00605600
&XPTCBADDR         SETC  '&PTCBADDR'            SET XVARIABLE           00605700
.ZG198B            AIF   (K'&PURGESTOKEN(1) GT 0).ZG198C  KEY           00605800
&ZMS               SETC  '"PTCBADDR'                                    00605900
&ZMS               SETC  '&ZMS.=&PTCBADDR"'                             00606000
&ZMS               SETC  '&ZMS CAN ONLY BE SPECIFIED IF'                00606100
&ZMS               SETC  '&ZMS '                                        00606200
&ZMS               SETC  '&ZMS "PURGESTOKEN"'                           00606300
                   MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                   00606400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00606500
.ZG198C            ANOP  ,                                              00606600
&ZXPTCBADDR        SETC  'INPUT'     SET IN/OUTPUT                      00606700
.*-------------------------------------------------------------------   00606800
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00606900
                   AIF   (K'&ZXPTCBADDR LE 0).ZG198R  NOT I/O           00607000
         AIF   ('&XPTCBADDR' EQ 'NOPTCB').ZG198R                        00607100
                   AIF   ('&XPTCBADDR'(1,1) NE '(').ZG198R              00607200
&ZCGPR             SETC  '&XPTCBADDR'(2,K'&XPTCBADDR-2)                 00607300
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG198P                  00607400
                   AIF   (K'&ZCGPR GT 2).ZG198Q                         00607500
                   AIF   ('&ZCGPR' EQ '0').ZG198Q                       00607600
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00607700
                   AIF   (T'&ZCGPR NE 'N').ZG198Q  INVALID REG NAME     00607800
.ZG198P            ANOP  ,                                              00607900
                   AIF   (T'&ZCGPR NE 'N').ZG198R  NON NUMERIC          00608000
                   AIF   ('&ZCGPR' LT '2').ZG198Q                       00608100
                   AIF   ('&ZCGPR' LE '12').ZG198R                      00608200
.ZG198Q            ANOP  ,                                              00608300
&ZMS               SETC  '"PTCBADDR='                                   00608400
&ZMS               SETC  '&ZMS.&PTCBADDR"'                              00608500
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00608600
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'               00608700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00608800
.ZG198R            ANOP  ,                                              00608900
.*------------------------------------------------------------------    00609000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00609100
&XSYNCH            SETC  ''          INITIALIZE XVARIABLE               00609200
.*-------------------------------------------------------------------   00609300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00609400
.ZG203             ANOP  ,                                              00609500
                   AIF   (K'&SYNCH(1) LE 0).ZG203A                      00609600
&ZTLC              SETC 'NO'                                            00609700
                   AIF   ('&SYNCH(1)' NE '&ZTLC').ZG204                 00609800
&XSYNCH            SETC  'NO'        SET KEYWORD                        00609900
                   AIF   (N'&SYNCH LE 1).ZG203A  CK NUM                 00610000
&ZMS               SETC  '"SYNCH='                                      00610100
&ZMS               SETC  '&ZMS.&SYNCH"'                                 00610200
&ZMS               SETC  '&ZMS "SYNCH"'                                 00610300
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00610400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00610500
.ZG203A            ANOP  ,                                              00610600
.*------------------------------------------------------------------    00610700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00610800
&ZCVAL             SETC ''           CLEAR ERROR KEY ACCUMULATOR        00610900
.ZG203A0           AIF   (K'&SYNCHCOMPADDR LE 0).ZG203A1  OK            00611000
&ZCVAL             SETC '&ZCVAL SYNCHCOMPADDR'  INCORRECT KEY USED      00611100
.ZG203A1           AIF   (K'&SYNCHCODEADDR LE 0).ZG203A2  OK            00611200
&ZCVAL             SETC '&ZCVAL SYNCHCODEADDR'  INCORRECT KEY USED      00611300
.ZG203A2           AIF   (K'&SYNCHRSNADDR LE 0).ZG203A3  OK             00611400
&ZCVAL             SETC '&ZCVAL SYNCHRSNADDR'   INCORRECT KEY USED      00611500
.ZG203A3           AIF   (K'&ZCVAL LE 0).ZG203A4  OK                    00611600
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)                          00611700
&ZMS               SETC  '"SYNCH'                                       00611800
&ZMS               SETC  '&ZMS.=&SYNCH"'                                00611900
&ZMS               SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'           00612000
                   MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'           00612100
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00612200
.ZG203A4           ANOP  ,                                              00612300
.*-------------------------------------------------------------------   00612400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00612500
.ZG204             ANOP  ,                                              00612600
&ZTLC              SETC 'YES'                                           00612700
                   AIF   ('&SYNCH(1)' NE '&ZTLC').ZG214                 00612800
&XSYNCH            SETC  'YES'       SET KEYWORD                        00612900
                   AIF   (N'&SYNCH LE 1).ZG204A  CK NUM                 00613000
&ZMS               SETC  '"SYNCH='                                      00613100
&ZMS               SETC  '&ZMS.&SYNCH"'                                 00613200
&ZMS               SETC  '&ZMS "SYNCH"'                                 00613300
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00613400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00613500
.ZG204A            ANOP  ,                                              00613600
.*----------------------------------------------------------------***   00613700
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00613800
                   AIF   (N'&SYNCHCOMPADDR LE 1).ZG206A  CK NUM         00613900
&ZMS               SETC  '"SYNCHCOMPADDR='                              00614000
&ZMS               SETC  '&ZMS.&SYNCHCOMPADDR"'                         00614100
&ZMS               SETC  '&ZMS "SYNCHCOMPADDR"'                         00614200
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00614300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00614400
.ZG206A            ANOP  ,                                              00614500
.*-------------------------------------------------------------------   00614600
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00614700
&ZXSYNCHCOMPADDR   SETC  'INPUT'     SET IN/OUTPUT                      00614800
&XSYNCHCOMPADDR    SETC  'NOVALUE'                                      00614900
                   AIF   (K'&SYNCHCOMPADDR(1) LE 0).ZG206B  PARM        00615000
&XSYNCHCOMPADDR    SETC  '&SYNCHCOMPADDR(1)'    SET XVARIABLE           00615100
                   AIF   (N'&SYNCHCOMPADDR GT 1).ZG206B  MULTI          00615200
&XSYNCHCOMPADDR    SETC  '&SYNCHCOMPADDR'       SET XVARIABLE           00615300
.ZG206B            ANOP  ,                                              00615400
.*-------------------------------------------------------------------   00615500
.***AG.KCK01 NAME, OPT INPUT, KEYS -GPR NOT ALLOWED                     00615600
                   AIF   (K'&ZXSYNCHCOMPADDR LE 0).ZG206P  NOT I/O      00615700
                   AIF   ('&XSYNCHCOMPADDR' EQ 'NOVALUE').ZG206P        00615800
                   AIF   ('&XSYNCHCOMPADDR'(1,1) NE '(').ZG206P         00615900
&ZXSYNCHCOMPADDR   SETC  ''          RESET IN/OUTPUT                    00616000
&ZMS               SETC  '"SYNCHCOMPADDR='                              00616100
&ZMS               SETC  '&ZMS.&SYNCHCOMPADDR"'                         00616200
&ZMS               SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'      00616300
                   MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'              00616400
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00616500
.ZG206P            ANOP  ,                                              00616600
.*----------------------------------------------------------------***   00616700
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00616800
                   AIF   (N'&SYNCHCODEADDR LE 1).ZG208A  CK NUM         00616900
&ZMS               SETC  '"SYNCHCODEADDR='                              00617000
&ZMS               SETC  '&ZMS.&SYNCHCODEADDR"'                         00617100
&ZMS               SETC  '&ZMS "SYNCHCODEADDR"'                         00617200
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00617300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00617400
.ZG208A            ANOP  ,                                              00617500
.*-------------------------------------------------------------------   00617600
.***AG.KXVAR09 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00617700
&ZXSYNCHCODEADDR   SETC  'INPUT'     SET IN/OUTPUT                      00617800
&XSYNCHCODEADDR    SETC  '&SYNCHCODEADDR(1)'    SET XVARIABLE           00617900
                   AIF   (N'&SYNCHCODEADDR GT 1).ZG208B  MULTI          00618000
&XSYNCHCODEADDR    SETC  '&SYNCHCODEADDR'       SET XVARIABLE           00618100
.ZG208B            AIF   (K'&SYNCHCOMPADDR(1) GT 0).ZG208C  KEY         00618200
                   AIF   (K'&SYNCHCODEADDR(1) LE 0).ZG208D  PARM        00618300
&ZMS               SETC  '"SYNCHCODEADDR'                               00618400
&ZMS               SETC  '&ZMS.=&SYNCHCODEADDR"'                        00618500
&ZMS               SETC  '&ZMS CAN ONLY BE SPECIFIED IF'                00618600
&ZMS               SETC  '&ZMS '                                        00618700
&ZMS               SETC  '&ZMS "SYNCHCOMPADDR"'                         00618800
                   MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                   00618900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00619000
                   AGO   .ZG208E                                        00619100
.*                                                                      00619200
.ZG208C            AIF   (K'&SYNCHCODEADDR(1) GT 0).ZG208E  PARM        00619300
&ZXSYNCHCODEADDR   SETC  ''          RESET IN/OUTPUT                    00619400
&ZMS               SETC  'WHEN "SYNCHCOMPADDR" IS SPECIFIED'            00619500
&ZMS               SETC  '&ZMS , "SYNCHCODEADDR" KEY AND ITS'           00619600
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00619700
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00619800
.ZG208D            ANOP  ,                                              00619900
&XSYNCHCODEADDR    SETC  '0'         SET DEFAULT                        00620000
.ZG208E            ANOP  ,                                              00620100
.*-------------------------------------------------------------------   00620200
.***AG.KCK01 NAME, OPT RQD INPUT, KEYS -GPR NOT ALLOWED                 00620300
                   AIF   (K'&ZXSYNCHCODEADDR LE 0).ZG208P  NOT I/O      00620400
                   AIF   ('&XSYNCHCODEADDR'(1,1) NE '(').ZG208P         00620500
&ZXSYNCHCODEADDR   SETC  ''          RESET IN/OUTPUT                    00620600
&ZMS               SETC  '"SYNCHCODEADDR='                              00620700
&ZMS               SETC  '&ZMS.&SYNCHCODEADDR"'                         00620800
&ZMS               SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'      00620900
                   MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'              00621000
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00621100
.ZG208P            ANOP  ,                                              00621200
.*----------------------------------------------------------------***   00621300
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00621400
                   AIF   (N'&SYNCHRSNADDR LE 1).ZG211A  CK NUM          00621500
&ZMS               SETC  '"SYNCHRSNADDR='                               00621600
&ZMS               SETC  '&ZMS.&SYNCHRSNADDR"'                          00621700
&ZMS               SETC  '&ZMS "SYNCHRSNADDR"'                          00621800
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00621900
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00622000
.ZG211A            ANOP  ,                                              00622100
.*-------------------------------------------------------------------   00622200
.***AG.KXVAR09 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00622300
&ZXSYNCHRSNADDR    SETC  'INPUT'     SET IN/OUTPUT                      00622400
&XSYNCHRSNADDR     SETC  '&SYNCHRSNADDR(1)'     SET XVARIABLE           00622500
                   AIF   (N'&SYNCHRSNADDR GT 1).ZG211B  MULTI           00622600
&XSYNCHRSNADDR     SETC  '&SYNCHRSNADDR'        SET XVARIABLE           00622700
.ZG211B            AIF   (K'&SYNCHCOMPADDR(1) GT 0).ZG211C  KEY         00622800
                   AIF   (K'&SYNCHRSNADDR(1) LE 0).ZG211D  PARM         00622900
&ZMS               SETC  '"SYNCHRSNADDR'                                00623000
&ZMS               SETC  '&ZMS.=&SYNCHRSNADDR"'                         00623100
&ZMS               SETC  '&ZMS CAN ONLY BE SPECIFIED IF'                00623200
&ZMS               SETC  '&ZMS '                                        00623300
&ZMS               SETC  '&ZMS "SYNCHCOMPADDR"'                         00623400
                   MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                   00623500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00623600
                   AGO   .ZG211E                                        00623700
.*                                                                      00623800
.ZG211C            AIF   (K'&SYNCHRSNADDR(1) GT 0).ZG211E  PARM         00623900
&ZXSYNCHRSNADDR    SETC  ''          RESET IN/OUTPUT                    00624000
&ZMS               SETC  'WHEN "SYNCHCOMPADDR" IS SPECIFIED'            00624100
&ZMS               SETC  '&ZMS , "SYNCHRSNADDR" KEY AND ITS'            00624200
                   MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'               00624300
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00624400
.ZG211D            ANOP  ,                                              00624500
&XSYNCHRSNADDR     SETC  '0'         SET DEFAULT                        00624600
.ZG211E            ANOP  ,                                              00624700
.*-------------------------------------------------------------------   00624800
.***AG.KCK01 NAME, OPT RQD INPUT, KEYS -GPR NOT ALLOWED                 00624900
                   AIF   (K'&ZXSYNCHRSNADDR LE 0).ZG211P  NOT I/O       00625000
                   AIF   ('&XSYNCHRSNADDR'(1,1) NE '(').ZG211P          00625100
&ZXSYNCHRSNADDR    SETC  ''          RESET IN/OUTPUT                    00625200
&ZMS               SETC  '"SYNCHRSNADDR='                               00625300
&ZMS               SETC  '&ZMS.&SYNCHRSNADDR"'                          00625400
&ZMS               SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'      00625500
                   MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'              00625600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00625700
.ZG211P            ANOP  ,                                              00625800
.*------------------------------------------------------------------    00625900
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00626000
.ZG214             ANOP  ,                                              00626100
&ZXSYNCH           SETC  'INPUT'     SET IN/OUTPUT                      00626200
                   AIF   (K'&XSYNCH GT 0).ZG214E  VALID ARG             00626300
                   AIF   (T'&SYNCH EQ 'O').ZG214D  OMITTED              00626400
&ZASYSLNDX         SETA  0                                              00626500
.ZG214A            ANOP  ,           POSITIONAL MACRO KEY               00626600
&ZASYSLNDX         SETA  &ZASYSLNDX+1                                   00626700
                   AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG214C              00626800
&ZTLC              SETC 'SYNCH'                                         00626900
                   AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG214A     00627000
.ZG214B            ANOP  ,                                              00627100
&ZXSYNCH           SETC  ''          RESET IN/OUTPUT                    00627200
&ZMS               SETC  'THE "SYNCH" KEY'                              00627300
&ZMS               SETC  '&ZMS MUST CONTAIN ONE'                        00627400
                   MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'               00627500
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00627600
                   AGO   .ZG214E                                        00627700
.ZG214C            ANOP  ,                                              00627800
&ZXSYNCH           SETC  ''          RESET IN/OUTPUT                    00627900
&ZMS               SETC  '"SYNCH='                                      00628000
&ZMS               SETC  '&ZMS.&SYNCH"'                                 00628100
&ZMS               SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '      00628200
&ZMS               SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'            00628300
&ZMS               SETC  '&ZMS "NO"'                                    00628400
&ZMS               SETC  '&ZMS OR "YES".'                               00628500
                   MNOTE 8,' &ZMS '                                     00628600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00628700
                   AGO   .ZG214E                                        00628800
.ZG214D            ANOP  ,                                              00628900
&XSYNCH            SETC  'NO'        SET DEFAULT KEYWORD                00629000
.ZG214E            ANOP  ,                                              00629100
.*----------------------------------------------------------------***   00629200
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00629300
                   AIF   (N'&RETCODE LE 1).ZG216A  CK NUM               00629400
&ZMS               SETC  '"RETCODE='                                    00629500
&ZMS               SETC  '&ZMS.&RETCODE"'                               00629600
&ZMS               SETC  '&ZMS "RETCODE"'                               00629700
                   MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'            00629800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00629900
.ZG216A            ANOP  ,                                              00630000
.*-------------------------------------------------------------------   00630100
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00630200
                   AIF   (K'&RETCODE(1) LE 0).ZG216C  NO PARM           00630300
&ZXRETCODE         SETC  'OUTPUT'    SET OUTPUT                         00630400
&XRETCODE          SETC  '&RETCODE(1)'          SET XVARIABLE           00630500
                   AIF   (N'&RETCODE GT 1).ZG216C                       00630600
&XRETCODE          SETC  '&RETCODE'  SET XVARIABLE                      00630700
.ZG216C            ANOP  ,                                              00630800
.*-------------------------------------------------------------------   00630900
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00631000
                   AIF   (K'&ZXRETCODE LE 0).ZG216R  NOT I/O            00631100
                   AIF   ('&XRETCODE'(1,1) NE '(').ZG216R               00631200
&ZCGPR             SETC  '&XRETCODE'(2,K'&XRETCODE-2)                   00631300
                   AIF   ('&ZCGPR'(1,1) NE '0').ZG216P                  00631400
                   AIF   (K'&ZCGPR GT 2).ZG216Q                         00631500
                   AIF   ('&ZCGPR' EQ '0').ZG216Q                       00631600
&ZCGPR             SETC  '&ZCGPR'(2,1)                                  00631700
                   AIF   (T'&ZCGPR NE 'N').ZG216Q  INVALID REG NAME     00631800
.ZG216P            ANOP  ,                                              00631900
                   AIF   (T'&ZCGPR NE 'N').ZG216R  NON NUMERIC          00632000
                   AIF   ('&ZCGPR' EQ '15').ZG216R                      00632100
                   AIF   ('&ZCGPR' LT '2').ZG216Q                       00632200
                   AIF   ('&ZCGPR' LE '12').ZG216R                      00632300
.ZG216Q            ANOP  ,                                              00632400
&ZMS               SETC  '"RETCODE='                                    00632500
&ZMS               SETC  '&ZMS.&RETCODE"'                               00632600
&ZMS               SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'      00632700
                   MNOTE 8,' &ZMS IN THE RANGE (2)-(12) OR (15).'       00632800
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00632900
.ZG216R            ANOP  ,                                              00633000
.******************************************************************     00633100
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00633200
.******************************************************************     00633300
                   ACTR  10000                                          00633400
.*----------------------------------------------------------------***   00633500
.***AH.P02 EXTRA POSITIONALS                                            00633600
                   AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS           00633700
                   AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL           00633800
                   AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL       00633900
                   AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL        00634000
.ZGLISTX1          ANOP  ,                                              00634100
&ZCVAL             SETC  ''          ERROR FIELD                        00634200
&ZAWRK             SETA  0           POSITIONAL NUMBER                  00634300
.ZGLIST2           ANOP  ,                                              00634400
&ZAWRK             SETA  &ZAWRK+1    NEXT POSITIONAL                    00634500
                   AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE           00634600
&ZCVAL             SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                00634700
                   AGO   .ZGLIST2                                       00634800
.*                                                                      00634900
.ZGLIST3           ANOP  ,                                              00635000
&ZCVAL             SETC '&ZCVAL'(2,K'&ZCVAL-1)  STRIP COMMA             00635100
&ZMS               SETC  'POSITIONAL ARGUMENT(S),'                      00635200
&ZMS               SETC  '&ZMS "&ZCVAL"'                                00635300
&ZMS               SETC  '&ZMS CANNOT BE USED.'                         00635400
&ZMS               SETC  '&ZMS NO POSITIONAL ARGUMENTS'                 00635500
                   MNOTE 8,' &ZMS ARE ALLOWED.'                         00635600
&ZMACRET           SETA  8           SET MACRO ERROR RETURN CODE        00635700
.ZGLISTX           ANOP  ,                                              00635800
&ZASYSLNDX         SETA  0                                              00635900
.*-------------------------------------------------------------------   00636000
.***AG.MF04 MF=(SLE)                                                    00636100
.ZGMFX             ANOP  ,           END OF FULL SYNTAX CHECK           00636200
.*******************************************************************    00636300
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00636400
.*******************************************************************    00636500
                   AIF   (&ZMACRET NE 0).ZLX2   ERROR DETECTED          00636600
.*******************************************************************    00636700
.***AE.01  START OF IEAMSCHD MACRO CODE                                 00636800
.*******************************************************************    00636900
                   LCLC  &M0M0001                 NAME                  00637000
&M0M0001           SETC  '&XLABEL'                SET NAME              00637100
                   AIF   (K'&XLABEL NE 0).XLAB2                         00637200
&M0M0001           SETC  'M00M&SYSNDX'            DEFAULT NAME          00637300
.*                                                                      00637400
.XLAB2             ANOP  ,                                              00637500
                   AIF   ('&XMF' EQ 'L').XLAB3                          00637600
&M0M0001 DS    0H                             IEAMSCHD-4                00637700
.XLAB3             ANOP  ,                                              00637800
.*******************************************************************    00637900
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00638000
.*******************************************************************    00638100
              PUSH  PRINT                                               00638200
                   AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON     00638300
                   PRINT OFF         ++ PR01                            00638400
                   AGO   .ZPRNTXX                                       00638500
.ZPRINTX           PRINT ON                                             00638600
.ZPRNTXX           ANOP  ,                                              00638700
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00638800
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00638900
.********************************************************************   00639000
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00639100
.********************************************************************   00639200
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00639300
                      LCLA  &ZOPN1         INVOCATION INDEX             00639400
                      LCLC  &ZOPL(4095)    LABEL                        00639500
                      LCLC  &ZOPO(4095)    OPERATION                    00639600
                      LCLC  &ZOPV(4095)    VALUE                        00639700
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00639800
.*                                                                      00639900
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00640000
.******************************************************************     00640100
.***AL.L10 IEAMSCHD FMT=LIST MF=S!L PARAMETERS                          00640200
.******************************************************************     00640300
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00640400
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00640500
&XMFCTRL              SETC  '#Z'.'&SYSNDX'.'A'                          00640600
&XMFATTR              SETC  '0D'                                        00640700
.*                                                                      00640800
&ZOPN                 SETA  &ZOPN+1                                     00640900
&ZOPL(&ZOPN)          SETC  ' '                                         00641000
                      AIF   (&SYSALVL NE 0).ZALVL6A                     00641100
&ZOPO(&ZOPN)          SETC  'B'                                         00641200
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00641300
                      AGO   .ZALVL6B                                    00641400
.ZALVL6A              ANOP                                              00641500
&ZOPO(&ZOPN)          SETC  'CNOP'                                      00641600
&ZOPV(&ZOPN)          SETC  '4,8'                                       00641700
&ZOPN                 SETA  &ZOPN+1                                     00641800
&ZOPL(&ZOPN)          SETC  ' '                                         00641900
&ZOPO(&ZOPN)          SETC  'BRAS'                                      00642000
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              00642100
.ZALVL6B              ANOP                                              00642200
&ZOPD(&ZOPN)          SETC  '++ IEAMSCHD ARG PARMS'                     00642300
.*                                                                      00642400
&ZOPN                 SETA  &ZOPN+1                                     00642500
&ZOPL(&ZOPN)          SETC  ' '                                         00642600
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00642700
&ZOPV(&ZOPN)          SETC  '1'                                         00642800
&ZOPD(&ZOPN)          SETC  ' '                                         00642900
.*                                                                      00643000
.ZLMFSL2              ANOP  ,                                           00643100
.*-------------------------------------------------------------------   00643200
.***AM.L00  IEAMSCHD FMT=LIST name                                      00643300
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00643400
&ZOPN                 SETA &ZOPN+1                                      00643500
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00643600
&ZOPO(&ZOPN)          SETC 'EQU'                                        00643700
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00643800
&ZOPD(&ZOPN)          SETC '++ IEAMSCHD NAME'                           00643900
.ZLMFSL2M             ANOP  ,                                           00644000
.*-------------------------------------------------------------------   00644100
.***AM.L01  IEAMSCHD FMT=LIST PARAMETERS                                00644200
&ZOPN                 SETA &ZOPN+1                                      00644300
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00644400
&ZOPO(&ZOPN)          SETC 'DS'                                         00644500
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00644600
&ZOPD(&ZOPN)          SETC '++ IEAMSCHD PARM LIST'                      00644700
.*-------------------------------------------------------------------   00644800
.***AM.L02 XVERSION XL1                                                 00644900
&ZOPN                 SETA &ZOPN+1                                      00645000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00645100
&ZOPO(&ZOPN)          SETC 'DS'                                         00645200
&ZOPV(&ZOPN)          SETC 'XL1'                                        00645300
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00645400
.*-------------------------------------------------------------------   00645500
.***AM.L03 XFLAG1 BL.8                                                  00645600
&ZOPN                 SETA &ZOPN+1                                      00645700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFLAG1'                           00645800
&ZOPO(&ZOPN)          SETC 'DS'                                         00645900
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00646000
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00646100
.*                                                                      00646200
&ZOPN                 SETA  &ZOPN+1                                     00646300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XENV_STOKEN'                     00646400
&ZOPO(&ZOPN)          SETC  'EQU'                                       00646500
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             00646600
&ZOPD(&ZOPN)          SETC  '++ XENV.'                                  00646700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).STOKEN'                       00646800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00646900
.*                                                                      00647000
&ZOPN                 SETA  &ZOPN+1                                     00647100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XENV_FULLXM'                     00647200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00647300
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             00647400
&ZOPD(&ZOPN)          SETC  '++ XENV.'                                  00647500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).FULLXM'                       00647600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00647700
.*                                                                      00647800
&ZOPN                 SETA  &ZOPN+1                                     00647900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XENV_PRIMARY'                    00648000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00648100
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             00648200
&ZOPD(&ZOPN)          SETC  '++ XENV.'                                  00648300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).PRIMARY'                      00648400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00648500
.*                                                                      00648600
&ZOPN                 SETA  &ZOPN+1                                     00648700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XENV_HOME'                       00648800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00648900
&ZOPV(&ZOPN)          SETC  'B''00000001'''                             00649000
&ZOPD(&ZOPN)          SETC  '++ XENV.'                                  00649100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).HOME'                         00649200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00649300
.*-------------------------------------------------------------------   00649400
.***AM.L03 XFLAG2 BL.8                                                  00649500
&ZOPN                 SETA &ZOPN+1                                      00649600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFLAG2'                           00649700
&ZOPO(&ZOPN)          SETC 'DS'                                         00649800
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00649900
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00650000
.*                                                                      00650100
&ZOPN                 SETA  &ZOPN+1                                     00650200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTRANSFER_YES'                   00650300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00650400
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00650500
&ZOPD(&ZOPN)          SETC  '++ XTRANSFER.'                             00650600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00650700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00650800
.*                                                                      00650900
&ZOPN                 SETA  &ZOPN+1                                     00651000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_SRBIDTOKEN'              00651100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00651200
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00651300
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00651400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SRBIDTOKEN'                   00651500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00651600
.*                                                                      00651700
&ZOPN                 SETA  &ZOPN+1                                     00651800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_DUALPOOLTOKEN'           00651900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00652000
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             00652100
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00652200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DUALPOOLTOKEN'                00652300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00652400
.*                                                                      00652500
&ZOPN                 SETA  &ZOPN+1                                     00652600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSYNCH_YES'                      00652700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00652800
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             00652900
&ZOPD(&ZOPN)          SETC  '++ XSYNCH.'                                00653000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00653100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00653200
.*                                                                      00653300
&ZOPN                 SETA  &ZOPN+1                                     00653400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_KEYVALUE'                00653500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00653600
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             00653700
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00653800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).KEYVALUE'                     00653900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00654000
.*                                                                      00654100
&ZOPN                 SETA  &ZOPN+1                                     00654200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XLLOCK_YES'                      00654300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00654400
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             00654500
&ZOPD(&ZOPN)          SETC  '++ XLLOCK.'                                00654600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00654700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00654800
.*                                                                      00654900
&ZOPN                 SETA  &ZOPN+1                                     00655000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XFEATURE_CPMASK'                 00655100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00655200
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             00655300
&ZOPD(&ZOPN)          SETC  '++ XFEATURE.'                              00655400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).CPMASK'                       00655500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00655600
.*                                                                      00655700
&ZOPN                 SETA  &ZOPN+1                                     00655800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XFEATURE_CRYPTO'                 00655900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00656000
&ZOPV(&ZOPN)          SETC  'B''00000001'''                             00656100
&ZOPD(&ZOPN)          SETC  '++ XFEATURE.'                              00656200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).CRYPTO'                       00656300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00656400
.*-------------------------------------------------------------------   00656500
.***AM.L03 XFLAG3 BL.8                                                  00656600
&ZOPN                 SETA &ZOPN+1                                      00656700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFLAG3'                           00656800
&ZOPO(&ZOPN)          SETC 'DS'                                         00656900
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00657000
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00657100
.*                                                                      00657200
&ZOPN                 SETA  &ZOPN+1                                     00657300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XPRIORITY_CLIENT'                00657400
&ZOPO(&ZOPN)          SETC  'EQU'                                       00657500
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             00657600
&ZOPD(&ZOPN)          SETC  '++ XPRIORITY.'                             00657700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).CLIENT'                       00657800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00657900
.*                                                                      00658000
&ZOPN                 SETA  &ZOPN+1                                     00658100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XPRIORITY_ENCLAVE'               00658200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00658300
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             00658400
&ZOPD(&ZOPN)          SETC  '++ XPRIORITY.'                             00658500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ENCLAVE'                      00658600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00658700
.*                                                                      00658800
&ZOPN                 SETA  &ZOPN+1                                     00658900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XPRIORITY_PREEMPT'               00659000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00659100
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             00659200
&ZOPD(&ZOPN)          SETC  '++ XPRIORITY.'                             00659300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).PREEMPT'                      00659400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00659500
.*                                                                      00659600
&ZOPN                 SETA  &ZOPN+1                                     00659700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XPRIORITY_CURRENT'               00659800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00659900
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             00660000
&ZOPD(&ZOPN)          SETC  '++ XPRIORITY.'                             00660100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).CURRENT'                      00660200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00660300
.*                                                                      00660400
&ZOPN                 SETA  &ZOPN+1                                     00660500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XPRIORITY_GLOBAL'                00660600
&ZOPO(&ZOPN)          SETC  'EQU'                                       00660700
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             00660800
&ZOPD(&ZOPN)          SETC  '++ XPRIORITY.'                             00660900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).GLOBAL'                       00661000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00661100
.*                                                                      00661200
&ZOPN                 SETA  &ZOPN+1                                     00661300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XPRIORITY_LOCAL'                 00661400
&ZOPO(&ZOPN)          SETC  'EQU'                                       00661500
&ZOPV(&ZOPN)          SETC  'B''00000001'''                             00661600
&ZOPD(&ZOPN)          SETC  '++ XPRIORITY.'                             00661700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).LOCAL'                        00661800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00661900
.*-------------------------------------------------------------------   00662000
.***AM.L09  XEPADDR A                                                   00662100
&ZOPN                 SETA &ZOPN+1                                      00662200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XEPADDR'                          00662300
&ZOPO(&ZOPN)          SETC 'DS'                                         00662400
&ZOPV(&ZOPN)          SETC 'A'                                          00662500
&ZOPD(&ZOPN)          SETC '++ &ZXEPADDR '                              00662600
.*-------------------------------------------------------------------   00662700
.***AM.L09  XTARGETSTOKEN BL.64                                         00662800
&ZOPN                 SETA &ZOPN+1                                      00662900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XTARGETSTOKEN'                    00663000
&ZOPO(&ZOPN)          SETC 'DS'                                         00663100
&ZOPV(&ZOPN)          SETC 'BL.64'                                      00663200
&ZOPD(&ZOPN)          SETC '++ &ZXTARGETSTOKEN '                        00663300
.*-------------------------------------------------------------------   00663400
.***AM.L09  XENCLAVETOKEN CL8                                           00663500
&ZOPN                 SETA &ZOPN+1                                      00663600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XENCLAVETOKEN'                    00663700
&ZOPO(&ZOPN)          SETC 'DS'                                         00663800
&ZOPV(&ZOPN)          SETC 'CL8'                                        00663900
&ZOPD(&ZOPN)          SETC '++ &ZXENCLAVETOKEN '                        00664000
.*-------------------------------------------------------------------   00664100
.***AM.L09  XMINORPRIORITY BL.8                                         00664200
&ZOPN                 SETA &ZOPN+1                                      00664300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMINORPRIORITY'                   00664400
&ZOPO(&ZOPN)          SETC 'DS'                                         00664500
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00664600
&ZOPD(&ZOPN)          SETC '++ &ZXMINORPRIORITY '                       00664700
.*-------------------------------------------------------------------   00664800
.***AM.L09  XKEYVALUE BL.8                                              00664900
&ZOPN                 SETA &ZOPN+1                                      00665000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XKEYVALUE'                        00665100
&ZOPO(&ZOPN)          SETC 'DS'                                         00665200
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00665300
&ZOPD(&ZOPN)          SETC '++ &ZXKEYVALUE '                            00665400
.*-------------------------------------------------------------------   00665500
.***AM.L09  XCPUMASK BL.16                                              00665600
&ZOPN                 SETA &ZOPN+1                                      00665700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCPUMASK'                         00665800
&ZOPO(&ZOPN)          SETC 'DS'                                         00665900
&ZOPV(&ZOPN)          SETC 'BL.16'                                      00666000
&ZOPD(&ZOPN)          SETC '++ &ZXCPUMASK '                             00666100
.*-------------------------------------------------------------------   00666200
.***AM.L09  XPARM F                                                     00666300
&ZOPN                 SETA &ZOPN+1                                      00666400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPARM'                            00666500
&ZOPO(&ZOPN)          SETC 'DS'                                         00666600
&ZOPV(&ZOPN)          SETC 'F'                                          00666700
&ZOPD(&ZOPN)          SETC '++ &ZXPARM '                                00666800
.*-------------------------------------------------------------------   00666900
.***AM.L09  XFRRADDR A                                                  00667000
&ZOPN                 SETA &ZOPN+1                                      00667100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFRRADDR'                         00667200
&ZOPO(&ZOPN)          SETC 'DS'                                         00667300
&ZOPV(&ZOPN)          SETC 'A'                                          00667400
&ZOPD(&ZOPN)          SETC '++ &ZXFRRADDR '                             00667500
.*-------------------------------------------------------------------   00667600
.***AM.L09  XRMTRADDR A                                                 00667700
&ZOPN                 SETA &ZOPN+1                                      00667800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRMTRADDR'                        00667900
&ZOPO(&ZOPN)          SETC 'DS'                                         00668000
&ZOPV(&ZOPN)          SETC 'A'                                          00668100
&ZOPD(&ZOPN)          SETC '++ &ZXRMTRADDR '                            00668200
.*-------------------------------------------------------------------   00668300
.***AM.L09  XPURGESTOKEN BL.64                                          00668400
&ZOPN                 SETA &ZOPN+1                                      00668500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPURGESTOKEN'                     00668600
&ZOPO(&ZOPN)          SETC 'DS'                                         00668700
&ZOPV(&ZOPN)          SETC 'BL.64'                                      00668800
&ZOPD(&ZOPN)          SETC '++ &ZXPURGESTOKEN '                         00668900
.*-------------------------------------------------------------------   00669000
.***AM.L09  XPTCBADDR A                                                 00669100
&ZOPN                 SETA &ZOPN+1                                      00669200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPTCBADDR'                        00669300
&ZOPO(&ZOPN)          SETC 'DS'                                         00669400
&ZOPV(&ZOPN)          SETC 'A'                                          00669500
&ZOPD(&ZOPN)          SETC '++ &ZXPTCBADDR '                            00669600
.*-------------------------------------------------------------------   00669700
.***AM.L09  XCLIENTSTOKEN BL.64                                         00669800
&ZOPN                 SETA &ZOPN+1                                      00669900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCLIENTSTOKEN'                    00670000
&ZOPO(&ZOPN)          SETC 'DS'                                         00670100
&ZOPV(&ZOPN)          SETC 'BL.64'                                      00670200
&ZOPD(&ZOPN)          SETC '++ &ZXCLIENTSTOKEN '                        00670300
.*-------------------------------------------------------------------   00670400
.***AM.MLM2 SAVED LOCATION COUNTER                                      00670500
                      AIF  (&XPLISTVER GE 1).ZL35LA                     00670600
                      AIF  ('&ZENDBASEPL' NE '').ZL35LA                 00670700
&ZENDBASEPL           SETC 'YES'                                        00670800
&ZOPN                 SETA &ZOPN+1                                      00670900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00671000
&ZOPO(&ZOPN)          SETC 'EQU'                                        00671100
&ZOPV(&ZOPN)          SETC '*'                                          00671200
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00671300
.ZL35LA               ANOP  ,                                           00671400
.*-------------------------------------------------------------------   00671500
.***AM.LVER1                                                            00671600
                      AIF  (&XPLISTVER LT 1).ZL35L                      00671700
.*-------------------------------------------------------------------   00671800
.*-------------------------------------------------------------------   00671900
.***AM.L09  XSYNCHCOMPADDR A                                            00672000
&ZOPN                 SETA &ZOPN+1                                      00672100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSYNCHCOMPADDR'                   00672200
&ZOPO(&ZOPN)          SETC 'DS'                                         00672300
&ZOPV(&ZOPN)          SETC 'A'                                          00672400
&ZOPD(&ZOPN)          SETC '++ &ZXSYNCHCOMPADDR '                       00672500
.*-------------------------------------------------------------------   00672600
.***AM.LVER2                                                            00672700
.ZL35L                ANOP  ,                                           00672800
.*-------------------------------------------------------------------   00672900
.*-------------------------------------------------------------------   00673000
.***AM.LVER1                                                            00673100
                      AIF  (&XPLISTVER LT 1).ZL36L                      00673200
.*-------------------------------------------------------------------   00673300
.*-------------------------------------------------------------------   00673400
.***AM.L09  XSYNCHCODEADDR A                                            00673500
&ZOPN                 SETA &ZOPN+1                                      00673600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSYNCHCODEADDR'                   00673700
&ZOPO(&ZOPN)          SETC 'DS'                                         00673800
&ZOPV(&ZOPN)          SETC 'A'                                          00673900
&ZOPD(&ZOPN)          SETC '++ &ZXSYNCHCODEADDR '                       00674000
.*-------------------------------------------------------------------   00674100
.***AM.LVER2                                                            00674200
.ZL36L                ANOP  ,                                           00674300
.*-------------------------------------------------------------------   00674400
.*-------------------------------------------------------------------   00674500
.***AM.LVER1                                                            00674600
                      AIF  (&XPLISTVER LT 1).ZL37L                      00674700
.*-------------------------------------------------------------------   00674800
.*-------------------------------------------------------------------   00674900
.***AM.L09  XSYNCHRSNADDR A                                             00675000
&ZOPN                 SETA &ZOPN+1                                      00675100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSYNCHRSNADDR'                    00675200
&ZOPO(&ZOPN)          SETC 'DS'                                         00675300
&ZOPV(&ZOPN)          SETC 'A'                                          00675400
&ZOPD(&ZOPN)          SETC '++ &ZXSYNCHRSNADDR '                        00675500
.*-------------------------------------------------------------------   00675600
.***AM.LVER2                                                            00675700
.ZL37L                ANOP  ,                                           00675800
.*-------------------------------------------------------------------   00675900
.*-------------------------------------------------------------------   00676000
.***AM.MLM2 SAVED LOCATION COUNTER                                      00676100
                      AIF  (&XPLISTVER GE 2).ZL38LA                     00676200
                      AIF  ('&ZENDBASEPL' NE '').ZL38LA                 00676300
&ZENDBASEPL           SETC 'YES'                                        00676400
&ZOPN                 SETA &ZOPN+1                                      00676500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00676600
&ZOPO(&ZOPN)          SETC 'EQU'                                        00676700
&ZOPV(&ZOPN)          SETC '*'                                          00676800
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00676900
.ZL38LA               ANOP  ,                                           00677000
.*-------------------------------------------------------------------   00677100
.***AM.LVER1                                                            00677200
                      AIF  (&XPLISTVER LT 2).ZL38L                      00677300
.*-------------------------------------------------------------------   00677400
.*-------------------------------------------------------------------   00677500
.***AM.L09  XDUALPOOLTOKEN CL16                                         00677600
&ZOPN                 SETA &ZOPN+1                                      00677700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XDUALPOOLTOKEN'                   00677800
&ZOPO(&ZOPN)          SETC 'DS'                                         00677900
&ZOPV(&ZOPN)          SETC 'CL16'                                       00678000
&ZOPD(&ZOPN)          SETC '++ &ZXDUALPOOLTOKEN '                       00678100
.*-------------------------------------------------------------------   00678200
.***AM.LVER2                                                            00678300
.ZL38L                ANOP  ,                                           00678400
.*-------------------------------------------------------------------   00678500
.*-------------------------------------------------------------------   00678600
.***AM.MLM2 SAVED LOCATION COUNTER                                      00678700
                      AIF  (&XPLISTVER GE 3).ZL39LA                     00678800
                      AIF  ('&ZENDBASEPL' NE '').ZL39LA                 00678900
&ZENDBASEPL           SETC 'YES'                                        00679000
&ZOPN                 SETA &ZOPN+1                                      00679100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00679200
&ZOPO(&ZOPN)          SETC 'EQU'                                        00679300
&ZOPV(&ZOPN)          SETC '*'                                          00679400
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00679500
.ZL39LA               ANOP  ,                                           00679600
.*-------------------------------------------------------------------   00679700
.***AM.LVER1                                                            00679800
                      AIF  (&XPLISTVER LT 3).ZL39L                      00679900
.*-------------------------------------------------------------------   00680000
.*-------------------------------------------------------------------   00680100
.***AM.L09  XSRBIDTOKEN CL16                                            00680200
&ZOPN                 SETA &ZOPN+1                                      00680300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSRBIDTOKEN'                      00680400
&ZOPO(&ZOPN)          SETC 'DS'                                         00680500
&ZOPV(&ZOPN)          SETC 'CL16'                                       00680600
&ZOPD(&ZOPN)          SETC '++ &ZXSRBIDTOKEN '                          00680700
.*-------------------------------------------------------------------   00680800
.***AM.LVER2                                                            00680900
.ZL39L                ANOP  ,                                           00681000
.*-------------------------------------------------------------------   00681100
.*-------------------------------------------------------------------   00681200
.***AM.MLM2 SAVED LOCATION COUNTER                                      00681300
                      AIF  (&XPLISTVER GE 4).ZL40LA                     00681400
                      AIF  ('&ZENDBASEPL' NE '').ZL40LA                 00681500
&ZENDBASEPL           SETC 'YES'                                        00681600
&ZOPN                 SETA &ZOPN+1                                      00681700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00681800
&ZOPO(&ZOPN)          SETC 'EQU'                                        00681900
&ZOPV(&ZOPN)          SETC '*'                                          00682000
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00682100
.ZL40LA               ANOP  ,                                           00682200
.*-------------------------------------------------------------------   00682300
.***AM.LVER1                                                            00682400
                      AIF  (&XPLISTVER LT 4).ZL40L                      00682500
.*-------------------------------------------------------------------   00682600
.*-------------------------------------------------------------------   00682700
.***AM.L09 ADDR XFLAGS A                                                00682800
&ZOPN                 SETA &ZOPN+1                                      00682900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFLAGS_ADDR'                      00683000
&ZOPO(&ZOPN)          SETC 'DS'                                         00683100
&ZOPV(&ZOPN)          SETC 'A'                                          00683200
&ZOPD(&ZOPN)          SETC '++ &ZXFLAGS ADDR'                           00683300
.*-------------------------------------------------------------------   00683400
.***AM.LVER2                                                            00683500
.ZL40L                ANOP  ,                                           00683600
.*-------------------------------------------------------------------   00683700
.*-------------------------------------------------------------------   00683800
.***AM.LVER1                                                            00683900
                      AIF  (&XPLISTVER LT 4).ZL41L                      00684000
.*-------------------------------------------------------------------   00684100
.*-------------------------------------------------------------------   00684200
.***AM.L09  XRSV0002 CL4                                                00684300
&ZOPN                 SETA &ZOPN+1                                      00684400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0002'                         00684500
&ZOPO(&ZOPN)          SETC 'DS'                                         00684600
&ZOPV(&ZOPN)          SETC 'CL4'                                        00684700
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00684800
.*-------------------------------------------------------------------   00684900
.***AM.LVER2                                                            00685000
.ZL41L                ANOP  ,                                           00685100
.*-------------------------------------------------------------------   00685200
.*-------------------------------------------------------------------   00685300
.***AM.MLM1 SAVED LOCATION COUNTER                                      00685400
                      AIF  ('&ZENDBASEPL' NE '').ZL42LB                 00685500
&ZENDBASEPL           SETC 'YES'                                        00685600
&ZOPN                 SETA &ZOPN+1                                      00685700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00685800
&ZOPO(&ZOPN)          SETC 'EQU'                                        00685900
&ZOPV(&ZOPN)          SETC '*'                                          00686000
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00686100
.ZL42LB               ANOP  ,                                           00686200
.*-------------------------------------------------------------------   00686300
.***AM.PJR1 DEFINED ON XFRRADDR                                         00686400
&ZOPN                 SETA &ZOPN+1                                      00686500
&ZOPL(&ZOPN)          SETC ' '                                          00686600
&ZOPO(&ZOPN)          SETC 'ORG'                                        00686700
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+32'                               00686800
&ZOPD(&ZOPN)          SETC ' '                                          00686900
.*-------------------------------------------------------------------   00687000
.***AM.L09  XRSV0001 CL3                                                00687100
&ZOPN                 SETA &ZOPN+1                                      00687200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0001'                         00687300
&ZOPO(&ZOPN)          SETC 'DS'                                         00687400
&ZOPV(&ZOPN)          SETC 'CL3'                                        00687500
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00687600
.*-------------------------------------------------------------------   00687700
.***AM.L03 XFRRFLAG BL.8                                                00687800
&ZOPN                 SETA &ZOPN+1                                      00687900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFRRFLAG'                         00688000
&ZOPO(&ZOPN)          SETC 'DS'                                         00688100
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00688200
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00688300
.*                                                                      00688400
&ZOPN                 SETA  &ZOPN+1                                     00688500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSDWALOC31_YES'                  00688600
&ZOPO(&ZOPN)          SETC  'EQU'                                       00688700
&ZOPV(&ZOPN)          SETC  'B''00000001'''                             00688800
&ZOPD(&ZOPN)          SETC  '++ XSDWALOC31.'                            00688900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00689000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00689100
&ZOPN                 SETA &ZOPN+1                                      00689200
&ZOPL(&ZOPN)          SETC ' '                                          00689300
&ZOPO(&ZOPN)          SETC 'ORG'                                        00689400
&ZOPV(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00689500
&ZOPD(&ZOPN)          SETC 'RESET LOCATION COUNTER'                     00689600
.*-------------------------------------------------------------------   00689700
.***AM.L10 END OF IEAMSCHD LIST PARAMETERS                              00689800
&ZOPN                 SETA &ZOPN+1                                      00689900
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00690000
&ZOPO(&ZOPN)          SETC 'EQU'                                        00690100
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00690200
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00690300
.*                                                                      00690400
&ZOPN                 SETA &ZOPN+1                                      00690500
&ZOPL(&ZOPN)          SETC ' '                                          00690600
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00690700
&ZOPV(&ZOPN)          SETC '1'                                          00690800
&ZOPD(&ZOPN)          SETC ' '                                          00690900
.*-------------------------------------------------------------------   00691000
.***AL.L12 IEAMSCHD FMT=LIST MF=S!L PARAMETERS                          00691100
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00691200
.*                                                                      00691300
&ZOPN                 SETA  &ZOPN+1                                     00691400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00691500
&ZOPO(&ZOPN)          SETC  'DC'                                        00691600
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00691700
&ZOPD(&ZOPN)          SETC  '++ IEAMSCHD ARG PARMS'                     00691800
.*                                                                      00691900
.ZLMFSLX              ANOP  ,                                           00692000
.*-------------------------------------------------------------------   00692100
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00692200
&ZPLLEN               SETA 60                                           00692300
.*                                                                      00692400
                      AIF  (&XPLISTVER LT 1).ZLLEN2Z                    00692500
&ZPLLEN               SETA 72                                           00692600
.ZLLEN2Z              ANOP  ,                                           00692700
.*                                                                      00692800
                      AIF  (&XPLISTVER LT 2).ZLLEN3Z                    00692900
&ZPLLEN               SETA 88                                           00693000
.ZLLEN3Z              ANOP  ,                                           00693100
.*                                                                      00693200
                      AIF  (&XPLISTVER LT 3).ZLLEN4Z                    00693300
&ZPLLEN               SETA 104                                          00693400
.ZLLEN4Z              ANOP  ,                                           00693500
.*                                                                      00693600
                      AIF  (&XPLISTVER LT 4).ZLLEN5Z                    00693700
&ZPLLEN               SETA 112                                          00693800
.ZLLEN5Z              ANOP  ,                                           00693900
.*                                                                      00694000
.******************************************************************     00694100
.***AI.L01 IEAMSCHD FMT=LIST FILL IN PARAMETER AREA                     00694200
.******************************************************************     00694300
                      ACTR  10000                                       00694400
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00694500
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00694600
&ZCVAL                SETC  'LAE'          XAX MODE                     00694700
.ZIMFXA               ANOP ,                                            00694800
.*                                                                      00694900
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00695000
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00695100
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00695200
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00695300
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00695400
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00695500
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00695600
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00695700
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00695800
&ZOPN                 SETA  &ZOPN+1                                     00695900
&ZOPL(&ZOPN)          SETC  ' '                                         00696000
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00696100
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00696200
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00696300
                      AGO   .ZIMFNX                                     00696400
.*                                                                      00696500
.ZIMFN2               ANOP ,                                            00696600
                      AIF   (&SYSALVL EQ 0).ZIMFNX1                     00696700
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     00696800
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  00696900
&ZOPN                 SETA  &ZOPN+1                                     00697000
&ZOPL(&ZOPN)          SETC  ' '                                         00697100
&ZOPO(&ZOPN)          SETC  'LAE'                                       00697200
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  00697300
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00697400
                      AGO   .ZIMFNX                                     00697500
.ZIMFNX1              ANOP ,                                            00697600
&ZOPN                 SETA  &ZOPN+1                                     00697700
&ZOPL(&ZOPN)          SETC  ' '                                         00697800
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00697900
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00698000
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00698100
.ZIMFNX               ANOP ,                                            00698200
.********************************************************************   00698300
.***AI.L02 IEAMSCHD FMT=LIST INITIALIZE PARAMETER AREA                  00698400
.********************************************************************   00698500
.***AI.L03 MF=(SLE)                                                     00698600
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00698700
.*                                                                      00698800
&ZOPN                 SETA  &ZOPN+1                                     00698900
&ZOPL(&ZOPN)          SETC  ' '                                         00699000
&ZOPO(&ZOPN)          SETC  'XC'                                        00699100
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00699200
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00699300
.ZIMFLX               ANOP  ,                                           00699400
.*-------------------------------------------------------------------   00699500
.***AI.L04B XVERSION XL1                                                00699600
                      AIF   (&XPLISTVER EQ 0).ZIMFVZ                    00699700
&ZOPN                 SETA  &ZOPN+1                                     00699800
&ZOPL(&ZOPN)          SETC  ' '                                         00699900
&ZOPO(&ZOPN)          SETC  'MVI'                                       00700000
&ZOPV(&ZOPN)          SETC  '0(1),&XPLISTVER'                           00700100
&ZOPD(&ZOPN)          SETC  '++ INPUT XVERSION XL1'                     00700200
.ZIMFVZ               ANOP  ,                                           00700300
.*-------------------------------------------------------------------   00700400
.***AI.L05 XFLAG1 BL1                                                   00700500
&ZW                   SETC  ''                                          00700600
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00700700
.*-------------------------------------------------------------------   00700800
.***AI.L08 XFLAG1 "STOKEN"                                              00700900
.***      BL1'XXXX1XXX'                                                 00701000
         AIF   ('&XENV' NE 'STOKEN').ZI3A                               00701100
&ZW                   SETC  '&ZW.00001'                                 00701200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00701300
                      AGO   .ZI3C                                       00701400
.*                                                                      00701500
.ZI3A                 ANOP  ,                                           00701600
&ZW                   SETC  '&ZW.00000'                                 00701700
.ZI3C                 ANOP  ,                                           00701800
.*-------------------------------------------------------------------   00701900
.***AI.L08 XFLAG1 "FULLXM"                                              00702000
.***      BL1'XXXXX1XX'                                                 00702100
         AIF   ('&XENV' NE 'FULLXM').ZI4A                               00702200
&ZW                   SETC  '&ZW.1'                                     00702300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00702400
                      AGO   .ZI4C                                       00702500
.*                                                                      00702600
.ZI4A                 ANOP  ,                                           00702700
&ZW                   SETC  '&ZW.0'                                     00702800
.ZI4C                 ANOP  ,                                           00702900
.*-------------------------------------------------------------------   00703000
.***AI.L08 XFLAG1 "PRIMARY"                                             00703100
.***      BL1'XXXXXX1X'                                                 00703200
         AIF   ('&XENV' NE 'PRIMARY').ZI5A                              00703300
&ZW                   SETC  '&ZW.1'                                     00703400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00703500
                      AGO   .ZI5C                                       00703600
.*                                                                      00703700
.ZI5A                 ANOP  ,                                           00703800
&ZW                   SETC  '&ZW.0'                                     00703900
.ZI5C                 ANOP  ,                                           00704000
.*-------------------------------------------------------------------   00704100
.***AI.L08 XFLAG1 "HOME"                                                00704200
.***      BL1'XXXXXXX1'                                                 00704300
         AIF   ('&XENV' NE 'HOME').ZI6A                                 00704400
&ZW                   SETC  '&ZW.1'                                     00704500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00704600
                      AGO   .ZI6C                                       00704700
.*                                                                      00704800
.ZI6A                 ANOP  ,                                           00704900
&ZW                   SETC  '&ZW.0'                                     00705000
.ZI6C                 ANOP  ,                                           00705100
.*-------------------------------------------------------------------   00705200
.***AI.L11 XFLAG1 BL1                                                   00705300
                      AIF   ('&ZCLNG' NE 'YES').ZI6E  ALL ZERO BITS     00705400
&ZOPN                 SETA  &ZOPN+1                                     00705500
&ZOPL(&ZOPN)          SETC  ' '                                         00705600
&ZOPO(&ZOPN)          SETC  'OI'                                        00705700
&ZOPV(&ZOPN)          SETC  '1(1),B''&ZW'''                             00705800
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00705900
.ZI6E                 ANOP  ,                                           00706000
.*-------------------------------------------------------------------   00706100
.***AI.L05 XFLAG2 BL1                                                   00706200
&ZW                   SETC  ''                                          00706300
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00706400
.*-------------------------------------------------------------------   00706500
.***AI.L08 XFLAG2 "YES"                                                 00706600
.***      BL1'1XXXXXXX'                                                 00706700
         AIF   ('&XTRANSFER' NE 'YES').ZI8A                             00706800
&ZW                   SETC  '&ZW.1'                                     00706900
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00707000
                      AGO   .ZI8C                                       00707100
.*                                                                      00707200
.ZI8A                 ANOP  ,                                           00707300
&ZW                   SETC  '&ZW.0'                                     00707400
.ZI8C                 ANOP  ,                                           00707500
.*-------------------------------------------------------------------   00707600
.***AI.L08 XFLAG2 "SRBIDTOKEN"                                          00707700
.***      BL1'X1XXXXXX'                                                 00707800
         AIF   ('&SRBIDTOKEN' EQ '').ZI9A                               00707900
         AIF   ('&SRBIDTOKEN' EQ '').ZI9A                               00708000
&ZW                   SETC  '&ZW.1'                                     00708100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00708200
                      AGO   .ZI9C                                       00708300
.*                                                                      00708400
.ZI9A                 ANOP  ,                                           00708500
&ZW                   SETC  '&ZW.0'                                     00708600
.ZI9C                 ANOP  ,                                           00708700
.*-------------------------------------------------------------------   00708800
.***AI.L08 XFLAG2 "DUALPOOLTOKEN"                                       00708900
.***      BL1'XX1XXXXX'                                                 00709000
         AIF   ('&DUALPOOLTOKEN' EQ '').ZI10A                           00709100
&ZW                   SETC  '&ZW.1'                                     00709200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00709300
                      AGO   .ZI10C                                      00709400
.*                                                                      00709500
.ZI10A                ANOP  ,                                           00709600
&ZW                   SETC  '&ZW.0'                                     00709700
.ZI10C                ANOP  ,                                           00709800
.*-------------------------------------------------------------------   00709900
.***AI.L08 XFLAG2 "YES"                                                 00710000
.***      BL1'XXX1XXXX'                                                 00710100
         AIF   ('&XSYNCH' NE 'YES').ZI11A                               00710200
&ZW                   SETC  '&ZW.1'                                     00710300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00710400
                      AGO   .ZI11C                                      00710500
.*                                                                      00710600
.ZI11A                ANOP  ,                                           00710700
&ZW                   SETC  '&ZW.0'                                     00710800
.ZI11C                ANOP  ,                                           00710900
.*-------------------------------------------------------------------   00711000
.***AI.L08 XFLAG2 "KEYVALUE"                                            00711100
.***      BL1'XXXX1XXX'                                                 00711200
         AIF   ('&KEYVALUE' EQ '').ZI12A                                00711300
         AIF   ('&KEYVALUE' EQ 'INVOKERKEY').ZI12A                      00711400
&ZW                   SETC  '&ZW.1'                                     00711500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00711600
                      AGO   .ZI12C                                      00711700
.*                                                                      00711800
.ZI12A                ANOP  ,                                           00711900
&ZW                   SETC  '&ZW.0'                                     00712000
.ZI12C                ANOP  ,                                           00712100
.*-------------------------------------------------------------------   00712200
.***AI.L08 XFLAG2 "YES"                                                 00712300
.***      BL1'XXXXX1XX'                                                 00712400
         AIF   ('&XLLOCK' NE 'YES').ZI13A                               00712500
&ZW                   SETC  '&ZW.1'                                     00712600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00712700
                      AGO   .ZI13C                                      00712800
.*                                                                      00712900
.ZI13A                ANOP  ,                                           00713000
&ZW                   SETC  '&ZW.0'                                     00713100
.ZI13C                ANOP  ,                                           00713200
.*-------------------------------------------------------------------   00713300
.***AI.L08 XFLAG2 "CPMASK"                                              00713400
.***      BL1'XXXXXX1X'                                                 00713500
         AIF   ('&XFEATURE' NE 'CPMASK').ZI14A                          00713600
&ZW                   SETC  '&ZW.1'                                     00713700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00713800
                      AGO   .ZI14C                                      00713900
.*                                                                      00714000
.ZI14A                ANOP  ,                                           00714100
&ZW                   SETC  '&ZW.0'                                     00714200
.ZI14C                ANOP  ,                                           00714300
.*-------------------------------------------------------------------   00714400
.***AI.L08 XFLAG2 "CRYPTO"                                              00714500
.***      BL1'XXXXXXX1'                                                 00714600
         AIF   ('&XFEATURE' NE 'CRYPTO').ZI15A                          00714700
&ZW                   SETC  '&ZW.1'                                     00714800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00714900
                      AGO   .ZI15C                                      00715000
.*                                                                      00715100
.ZI15A                ANOP  ,                                           00715200
&ZW                   SETC  '&ZW.0'                                     00715300
.ZI15C                ANOP  ,                                           00715400
.*-------------------------------------------------------------------   00715500
.***AI.L11 XFLAG2 BL1                                                   00715600
                      AIF   ('&ZCLNG' NE 'YES').ZI15E  ALL ZERO BITS    00715700
&ZOPN                 SETA  &ZOPN+1                                     00715800
&ZOPL(&ZOPN)          SETC  ' '                                         00715900
&ZOPO(&ZOPN)          SETC  'OI'                                        00716000
&ZOPV(&ZOPN)          SETC  '2(1),B''&ZW'''                             00716100
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00716200
.ZI15E                ANOP  ,                                           00716300
.*-------------------------------------------------------------------   00716400
.***AI.L05 XFLAG3 BL1                                                   00716500
&ZW                   SETC  ''                                          00716600
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00716700
.*-------------------------------------------------------------------   00716800
.***AI.L08 XFLAG3 "CLIENT"                                              00716900
.***      BL1'XX1XXXXX'                                                 00717000
         AIF   ('&XPRIORITY' NE 'CLIENT').ZI17A                         00717100
&ZW                   SETC  '&ZW.001'                                   00717200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00717300
                      AGO   .ZI17C                                      00717400
.*                                                                      00717500
.ZI17A                ANOP  ,                                           00717600
&ZW                   SETC  '&ZW.000'                                   00717700
.ZI17C                ANOP  ,                                           00717800
.*-------------------------------------------------------------------   00717900
.***AI.L08 XFLAG3 "ENCLAVE"                                             00718000
.***      BL1'XXX1XXXX'                                                 00718100
         AIF   ('&XPRIORITY' NE 'ENCLAVE').ZI18A                        00718200
&ZW                   SETC  '&ZW.1'                                     00718300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00718400
                      AGO   .ZI18C                                      00718500
.*                                                                      00718600
.ZI18A                ANOP  ,                                           00718700
&ZW                   SETC  '&ZW.0'                                     00718800
.ZI18C                ANOP  ,                                           00718900
.*-------------------------------------------------------------------   00719000
.***AI.L08 XFLAG3 "PREEMPT"                                             00719100
.***      BL1'XXXX1XXX'                                                 00719200
         AIF   ('&XPRIORITY' NE 'PREEMPT').ZI19A                        00719300
&ZW                   SETC  '&ZW.1'                                     00719400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00719500
                      AGO   .ZI19C                                      00719600
.*                                                                      00719700
.ZI19A                ANOP  ,                                           00719800
&ZW                   SETC  '&ZW.0'                                     00719900
.ZI19C                ANOP  ,                                           00720000
.*-------------------------------------------------------------------   00720100
.***AI.L08 XFLAG3 "CURRENT"                                             00720200
.***      BL1'XXXXX1XX'                                                 00720300
         AIF   ('&XPRIORITY' NE 'CURRENT').ZI20A                        00720400
&ZW                   SETC  '&ZW.1'                                     00720500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00720600
                      AGO   .ZI20C                                      00720700
.*                                                                      00720800
.ZI20A                ANOP  ,                                           00720900
&ZW                   SETC  '&ZW.0'                                     00721000
.ZI20C                ANOP  ,                                           00721100
.*-------------------------------------------------------------------   00721200
.***AI.L08 XFLAG3 "GLOBAL"                                              00721300
.***      BL1'XXXXXX1X'                                                 00721400
         AIF   ('&XPRIORITY' NE 'GLOBAL').ZI21A                         00721500
&ZW                   SETC  '&ZW.1'                                     00721600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00721700
                      AGO   .ZI21C                                      00721800
.*                                                                      00721900
.ZI21A                ANOP  ,                                           00722000
&ZW                   SETC  '&ZW.0'                                     00722100
.ZI21C                ANOP  ,                                           00722200
.*-------------------------------------------------------------------   00722300
.***AI.L08 XFLAG3 "LOCAL"                                               00722400
.***      BL1'XXXXXXX1'                                                 00722500
         AIF   ('&XPRIORITY' NE 'LOCAL').ZI22A                          00722600
&ZW                   SETC  '&ZW.1'                                     00722700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00722800
                      AGO   .ZI22C                                      00722900
.*                                                                      00723000
.ZI22A                ANOP  ,                                           00723100
&ZW                   SETC  '&ZW.0'                                     00723200
.ZI22C                ANOP  ,                                           00723300
.*-------------------------------------------------------------------   00723400
.***AI.L11 XFLAG3 BL1                                                   00723500
                      AIF   ('&ZCLNG' NE 'YES').ZI22E  ALL ZERO BITS    00723600
&ZOPN                 SETA  &ZOPN+1                                     00723700
&ZOPL(&ZOPN)          SETC  ' '                                         00723800
&ZOPO(&ZOPN)          SETC  'OI'                                        00723900
&ZOPV(&ZOPN)          SETC  '3(1),B''&ZW'''                             00724000
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00724100
.ZI22E                ANOP  ,                                           00724200
.*-------------------------------------------------------------------   00724300
.***AI.L25  XEPADDR AL4                                                 00724400
                      AIF   ('&ZXEPADDR' EQ '').ZI23E                   00724500
                      AIF   ('&ZXEPADDR' EQ 'OUTPUT').ZI23E             00724600
&ZCGPR                SETC  '&XEPADDR'                                  00724700
.*                                                                      00724800
                      AIF   ('&XEPADDR'(1,1) NE '(').ZI23B              00724900
&ZCGPR   SETC  '0('.'&XEPADDR'(2,K'&XEPADDR-2).')'                      00725000
                      AGO   .ZI23D                                      00725100
.ZI23B                ANOP  ,                                           00725200
.*                                                                      00725300
&ZC                   SETC  '&XEPADDR'(1,1)                             00725400
                      AIF   (T'&ZC NE 'N').ZI23D                        00725500
&ZC                   SETC  '&XEPADDR'                                  00725600
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI23D               00725700
&ZCGPR                SETC  '=AL4(&XEPADDR)'                            00725800
.*                                                                      00725900
.ZI23D                ANOP  ,                                           00726000
.*                                                                      00726100
&ZOPN                 SETA  &ZOPN+1                                     00726200
&ZOPL(&ZOPN)          SETC  ' '                                         00726300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00726400
&ZOPV(&ZOPN)          SETC  '4(4,1),&ZCGPR'                             00726500
&ZOPD(&ZOPN)          SETC  '++ &ZXEPADDR XEPADDR'                      00726600
.*                                                                      00726700
.ZI23E                ANOP  ,                                           00726800
.*-------------------------------------------------------------------   00726900
.***AI.L25  XTARGETSTOKEN XL8                                           00727000
                      AIF   ('&ZXTARGETSTOKEN' EQ '').ZI24E             00727100
                      AIF   ('&ZXTARGETSTOKEN' EQ 'OUTPUT').ZI24E       00727200
&ZCGPR                SETC  '&XTARGETSTOKEN'                            00727300
.*                                                                      00727400
                      AIF   ('&XTARGETSTOKEN'(1,1) NE '(').ZI24B        00727500
&ZCGPR   SETC  '0('.'&XTARGETSTOKEN'(2,K'&XTARGETSTOKEN-2).')'          00727600
                      AGO   .ZI24D                                      00727700
.ZI24B                ANOP  ,                                           00727800
.*                                                                      00727900
&ZC                   SETC  '&XTARGETSTOKEN'(1,1)                       00728000
                      AIF   (T'&ZC NE 'N').ZI24D                        00728100
&ZC                   SETC  '&XTARGETSTOKEN'                            00728200
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI24D               00728300
&ZCGPR                SETC  '=BL8''&XTARGETSTOKEN'''                    00728400
.*                                                                      00728500
.ZI24D                ANOP  ,                                           00728600
.*                                                                      00728700
&ZOPN                 SETA  &ZOPN+1                                     00728800
&ZOPL(&ZOPN)          SETC  ' '                                         00728900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00729000
&ZOPV(&ZOPN)          SETC  '8(8,1),&ZCGPR'                             00729100
&ZOPD(&ZOPN)          SETC  '++ &ZXTARGETSTOKEN XTARGETSTOKEN'          00729200
.*                                                                      00729300
.ZI24E                ANOP  ,                                           00729400
.*-------------------------------------------------------------------   00729500
.***AI.L25  XENCLAVETOKEN CL8                                           00729600
                      AIF   ('&ZXENCLAVETOKEN' EQ '').ZI25E             00729700
                      AIF   ('&ZXENCLAVETOKEN' EQ 'OUTPUT').ZI25E       00729800
&ZCGPR                SETC  '&XENCLAVETOKEN'                            00729900
.*                                                                      00730000
                      AIF   ('&XENCLAVETOKEN'(1,1) NE '(').ZI25B        00730100
&ZCGPR   SETC  '0('.'&XENCLAVETOKEN'(2,K'&XENCLAVETOKEN-2).')'          00730200
.ZI25B                ANOP  ,                                           00730300
.*                                                                      00730400
&ZOPN                 SETA  &ZOPN+1                                     00730500
&ZOPL(&ZOPN)          SETC  ' '                                         00730600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00730700
&ZOPV(&ZOPN)          SETC  '16(8,1),&ZCGPR'                            00730800
&ZOPD(&ZOPN)          SETC  '++ &ZXENCLAVETOKEN XENCLAVETOKEN'          00730900
.*                                                                      00731000
.ZI25E                ANOP  ,                                           00731100
.*-------------------------------------------------------------------   00731200
.***AI.L18  XMINORPRIORITY XL1                                          00731300
         AIF   ('&XMINORPRIORITY' NE 'ZERO').ZI26                       00731400
&ZXMINORPRIORITY      SETC  ''             RESET INPUT/OUTPUT           00731500
.ZI26                 ANOP  ,                                           00731600
.*-------------------------------------------------------------------   00731700
.***AI.L25  XMINORPRIORITY XL1                                          00731800
                      AIF   ('&ZXMINORPRIORITY' EQ '').ZI26E            00731900
                      AIF   ('&ZXMINORPRIORITY' EQ 'OUTPUT').ZI26E      00732000
&ZCGPR                SETC  '&XMINORPRIORITY'                           00732100
.*                                                                      00732200
                      AIF   ('&XMINORPRIORITY'(1,1) NE '(').ZI26B       00732300
&ZCGPR   SETC  '0('.'&XMINORPRIORITY'(2,K'&XMINORPRIORITY-2).')'        00732400
                      AGO   .ZI26D                                      00732500
.ZI26B                ANOP  ,                                           00732600
.*                                                                      00732700
&ZC                   SETC  '&XMINORPRIORITY'(1,1)                      00732800
                      AIF   (T'&ZC NE 'N').ZI26D                        00732900
&ZC                   SETC  '&XMINORPRIORITY'                           00733000
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI26D               00733100
&ZCGPR                SETC  '=BL1''&XMINORPRIORITY'''                   00733200
.*                                                                      00733300
.ZI26D                ANOP  ,                                           00733400
.*                                                                      00733500
&ZOPN                 SETA  &ZOPN+1                                     00733600
&ZOPL(&ZOPN)          SETC  ' '                                         00733700
&ZOPO(&ZOPN)          SETC  'MVC'                                       00733800
&ZOPV(&ZOPN)          SETC  '24(1,1),&ZCGPR'                            00733900
&ZOPD(&ZOPN)          SETC  '++ &ZXMINORPRIORITY XMINORPRIORITY'        00734000
.*                                                                      00734100
.ZI26E                ANOP  ,                                           00734200
.*-------------------------------------------------------------------   00734300
.***AI.L18  XKEYVALUE XL1                                               00734400
         AIF   ('&XKEYVALUE' NE 'INVOKERKEY').ZI27                      00734500
&ZXKEYVALUE           SETC  ''             RESET INPUT/OUTPUT           00734600
.ZI27                 ANOP  ,                                           00734700
.*-------------------------------------------------------------------   00734800
.***AI.L25  XKEYVALUE XL1                                               00734900
                      AIF   ('&ZXKEYVALUE' EQ '').ZI27E                 00735000
                      AIF   ('&ZXKEYVALUE' EQ 'OUTPUT').ZI27E           00735100
&ZCGPR                SETC  '&XKEYVALUE'                                00735200
.*                                                                      00735300
                      AIF   ('&XKEYVALUE'(1,1) NE '(').ZI27B            00735400
&ZCGPR   SETC  '0('.'&XKEYVALUE'(2,K'&XKEYVALUE-2).')'                  00735500
                      AGO   .ZI27D                                      00735600
.ZI27B                ANOP  ,                                           00735700
.*                                                                      00735800
&ZC                   SETC  '&XKEYVALUE'(1,1)                           00735900
                      AIF   (T'&ZC NE 'N').ZI27D                        00736000
&ZC                   SETC  '&XKEYVALUE'                                00736100
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI27D               00736200
&ZCGPR                SETC  '=BL1''&XKEYVALUE'''                        00736300
.*                                                                      00736400
.ZI27D                ANOP  ,                                           00736500
.*                                                                      00736600
&ZOPN                 SETA  &ZOPN+1                                     00736700
&ZOPL(&ZOPN)          SETC  ' '                                         00736800
&ZOPO(&ZOPN)          SETC  'MVC'                                       00736900
&ZOPV(&ZOPN)          SETC  '25(1,1),&ZCGPR'                            00737000
&ZOPD(&ZOPN)          SETC  '++ &ZXKEYVALUE XKEYVALUE'                  00737100
.*                                                                      00737200
.ZI27E                ANOP  ,                                           00737300
.*-------------------------------------------------------------------   00737400
.***AI.L25  XCPUMASK XL2                                                00737500
                      AIF   ('&ZXCPUMASK' EQ '').ZI28E                  00737600
                      AIF   ('&ZXCPUMASK' EQ 'OUTPUT').ZI28E            00737700
&ZCGPR                SETC  '&XCPUMASK'                                 00737800
.*                                                                      00737900
                      AIF   ('&XCPUMASK'(1,1) NE '(').ZI28B             00738000
&ZCGPR   SETC  '0('.'&XCPUMASK'(2,K'&XCPUMASK-2).')'                    00738100
                      AGO   .ZI28D                                      00738200
.ZI28B                ANOP  ,                                           00738300
.*                                                                      00738400
&ZC                   SETC  '&XCPUMASK'(1,1)                            00738500
                      AIF   (T'&ZC NE 'N').ZI28D                        00738600
&ZC                   SETC  '&XCPUMASK'                                 00738700
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI28D               00738800
&ZCGPR                SETC  '=BL2''&XCPUMASK'''                         00738900
.*                                                                      00739000
.ZI28D                ANOP  ,                                           00739100
.*                                                                      00739200
&ZOPN                 SETA  &ZOPN+1                                     00739300
&ZOPL(&ZOPN)          SETC  ' '                                         00739400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00739500
&ZOPV(&ZOPN)          SETC  '26(2,1),&ZCGPR'                            00739600
&ZOPD(&ZOPN)          SETC  '++ &ZXCPUMASK XCPUMASK'                    00739700
.*                                                                      00739800
.ZI28E                ANOP  ,                                           00739900
.*-------------------------------------------------------------------   00740000
.***AI.L18  XPARM F                                                     00740100
         AIF   ('&XPARM' NE 'ZERO').ZI29                                00740200
&ZXPARM               SETC  ''             RESET INPUT/OUTPUT           00740300
.ZI29                 ANOP  ,                                           00740400
.*-------------------------------------------------------------------   00740500
.***AI.L25  XPARM F                                                     00740600
                      AIF   ('&ZXPARM' EQ '').ZI29E                     00740700
                      AIF   ('&ZXPARM' EQ 'OUTPUT').ZI29E               00740800
&ZCGPR                SETC  '&XPARM'                                    00740900
.*                                                                      00741000
                      AIF   ('&XPARM'(1,1) NE '(').ZI29B                00741100
&ZCGPR   SETC  '0('.'&XPARM'(2,K'&XPARM-2).')'                          00741200
                      AGO   .ZI29D                                      00741300
.ZI29B                ANOP  ,                                           00741400
.*                                                                      00741500
&ZC                   SETC  '&XPARM'(1,1)                               00741600
                      AIF   (T'&ZC NE 'N').ZI29D                        00741700
&ZC                   SETC  '&XPARM'                                    00741800
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI29D               00741900
&ZCGPR                SETC  '=AL4(&XPARM)'                              00742000
.*                                                                      00742100
.ZI29D                ANOP  ,                                           00742200
.*                                                                      00742300
&ZOPN                 SETA  &ZOPN+1                                     00742400
&ZOPL(&ZOPN)          SETC  ' '                                         00742500
&ZOPO(&ZOPN)          SETC  'MVC'                                       00742600
&ZOPV(&ZOPN)          SETC  '28(4,1),&ZCGPR'                            00742700
&ZOPD(&ZOPN)          SETC  '++ &ZXPARM XPARM'                          00742800
.*                                                                      00742900
.ZI29E                ANOP  ,                                           00743000
.*-------------------------------------------------------------------   00743100
.***AI.L18  XFRRADDR AL4                                                00743200
         AIF   ('&XFRRADDR' NE 'NOFRR').ZI30                            00743300
&ZXFRRADDR            SETC  ''             RESET INPUT/OUTPUT           00743400
.ZI30                 ANOP  ,                                           00743500
.*-------------------------------------------------------------------   00743600
.***AI.L25  XFRRADDR AL4                                                00743700
                      AIF   ('&ZXFRRADDR' EQ '').ZI30E                  00743800
                      AIF   ('&ZXFRRADDR' EQ 'OUTPUT').ZI30E            00743900
&ZCGPR                SETC  '&XFRRADDR'                                 00744000
.*                                                                      00744100
                      AIF   ('&XFRRADDR'(1,1) NE '(').ZI30B             00744200
&ZCGPR   SETC  '0('.'&XFRRADDR'(2,K'&XFRRADDR-2).')'                    00744300
                      AGO   .ZI30D                                      00744400
.ZI30B                ANOP  ,                                           00744500
.*                                                                      00744600
&ZC                   SETC  '&XFRRADDR'(1,1)                            00744700
                      AIF   (T'&ZC NE 'N').ZI30D                        00744800
&ZC                   SETC  '&XFRRADDR'                                 00744900
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI30D               00745000
&ZCGPR                SETC  '=AL4(&XFRRADDR)'                           00745100
.*                                                                      00745200
.ZI30D                ANOP  ,                                           00745300
.*                                                                      00745400
&ZOPN                 SETA  &ZOPN+1                                     00745500
&ZOPL(&ZOPN)          SETC  ' '                                         00745600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00745700
&ZOPV(&ZOPN)          SETC  '32(4,1),&ZCGPR'                            00745800
&ZOPD(&ZOPN)          SETC  '++ &ZXFRRADDR XFRRADDR'                    00745900
.*                                                                      00746000
.ZI30E                ANOP  ,                                           00746100
.*-------------------------------------------------------------------   00746200
.***AI.L18  XRMTRADDR AL4                                               00746300
         AIF   ('&XRMTRADDR' NE 'NORMTR').ZI31                          00746400
&ZXRMTRADDR           SETC  ''             RESET INPUT/OUTPUT           00746500
.ZI31                 ANOP  ,                                           00746600
.*-------------------------------------------------------------------   00746700
.***AI.L25  XRMTRADDR AL4                                               00746800
                      AIF   ('&ZXRMTRADDR' EQ '').ZI31E                 00746900
                      AIF   ('&ZXRMTRADDR' EQ 'OUTPUT').ZI31E           00747000
&ZCGPR                SETC  '&XRMTRADDR'                                00747100
.*                                                                      00747200
                      AIF   ('&XRMTRADDR'(1,1) NE '(').ZI31B            00747300
&ZCGPR   SETC  '0('.'&XRMTRADDR'(2,K'&XRMTRADDR-2).')'                  00747400
                      AGO   .ZI31D                                      00747500
.ZI31B                ANOP  ,                                           00747600
.*                                                                      00747700
&ZC                   SETC  '&XRMTRADDR'(1,1)                           00747800
                      AIF   (T'&ZC NE 'N').ZI31D                        00747900
&ZC                   SETC  '&XRMTRADDR'                                00748000
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI31D               00748100
&ZCGPR                SETC  '=AL4(&XRMTRADDR)'                          00748200
.*                                                                      00748300
.ZI31D                ANOP  ,                                           00748400
.*                                                                      00748500
&ZOPN                 SETA  &ZOPN+1                                     00748600
&ZOPL(&ZOPN)          SETC  ' '                                         00748700
&ZOPO(&ZOPN)          SETC  'MVC'                                       00748800
&ZOPV(&ZOPN)          SETC  '36(4,1),&ZCGPR'                            00748900
&ZOPD(&ZOPN)          SETC  '++ &ZXRMTRADDR XRMTRADDR'                  00749000
.*                                                                      00749100
.ZI31E                ANOP  ,                                           00749200
.*-------------------------------------------------------------------   00749300
.***AI.L18  XPURGESTOKEN XL8                                            00749400
         AIF   ('&XPURGESTOKEN' NE 'NOPSTOKEN').ZI32                    00749500
&ZXPURGESTOKEN        SETC  ''             RESET INPUT/OUTPUT           00749600
.ZI32                 ANOP  ,                                           00749700
.*-------------------------------------------------------------------   00749800
.***AI.L25  XPURGESTOKEN XL8                                            00749900
                      AIF   ('&ZXPURGESTOKEN' EQ '').ZI32E              00750000
                      AIF   ('&ZXPURGESTOKEN' EQ 'OUTPUT').ZI32E        00750100
&ZCGPR                SETC  '&XPURGESTOKEN'                             00750200
.*                                                                      00750300
                      AIF   ('&XPURGESTOKEN'(1,1) NE '(').ZI32B         00750400
&ZCGPR   SETC  '0('.'&XPURGESTOKEN'(2,K'&XPURGESTOKEN-2).')'            00750500
                      AGO   .ZI32D                                      00750600
.ZI32B                ANOP  ,                                           00750700
.*                                                                      00750800
&ZC                   SETC  '&XPURGESTOKEN'(1,1)                        00750900
                      AIF   (T'&ZC NE 'N').ZI32D                        00751000
&ZC                   SETC  '&XPURGESTOKEN'                             00751100
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI32D               00751200
&ZCGPR                SETC  '=BL8''&XPURGESTOKEN'''                     00751300
.*                                                                      00751400
.ZI32D                ANOP  ,                                           00751500
.*                                                                      00751600
&ZOPN                 SETA  &ZOPN+1                                     00751700
&ZOPL(&ZOPN)          SETC  ' '                                         00751800
&ZOPO(&ZOPN)          SETC  'MVC'                                       00751900
&ZOPV(&ZOPN)          SETC  '40(8,1),&ZCGPR'                            00752000
&ZOPD(&ZOPN)          SETC  '++ &ZXPURGESTOKEN XPURGESTOKEN'            00752100
.*                                                                      00752200
.ZI32E                ANOP  ,                                           00752300
.*-------------------------------------------------------------------   00752400
.***AI.L18  XPTCBADDR AL4                                               00752500
         AIF   ('&XPTCBADDR' NE 'NOPTCB').ZI33                          00752600
&ZXPTCBADDR           SETC  ''             RESET INPUT/OUTPUT           00752700
.ZI33                 ANOP  ,                                           00752800
.*-------------------------------------------------------------------   00752900
.***AI.L25  XPTCBADDR AL4                                               00753000
                      AIF   ('&ZXPTCBADDR' EQ '').ZI33E                 00753100
                      AIF   ('&ZXPTCBADDR' EQ 'OUTPUT').ZI33E           00753200
&ZCGPR                SETC  '&XPTCBADDR'                                00753300
.*                                                                      00753400
                      AIF   ('&XPTCBADDR'(1,1) NE '(').ZI33B            00753500
&ZCGPR   SETC  '0('.'&XPTCBADDR'(2,K'&XPTCBADDR-2).')'                  00753600
                      AGO   .ZI33D                                      00753700
.ZI33B                ANOP  ,                                           00753800
.*                                                                      00753900
&ZC                   SETC  '&XPTCBADDR'(1,1)                           00754000
                      AIF   (T'&ZC NE 'N').ZI33D                        00754100
&ZC                   SETC  '&XPTCBADDR'                                00754200
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI33D               00754300
&ZCGPR                SETC  '=AL4(&XPTCBADDR)'                          00754400
.*                                                                      00754500
.ZI33D                ANOP  ,                                           00754600
.*                                                                      00754700
&ZOPN                 SETA  &ZOPN+1                                     00754800
&ZOPL(&ZOPN)          SETC  ' '                                         00754900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00755000
&ZOPV(&ZOPN)          SETC  '48(4,1),&ZCGPR'                            00755100
&ZOPD(&ZOPN)          SETC  '++ &ZXPTCBADDR XPTCBADDR'                  00755200
.*                                                                      00755300
.ZI33E                ANOP  ,                                           00755400
.*-------------------------------------------------------------------   00755500
.***AI.L25  XCLIENTSTOKEN XL8                                           00755600
                      AIF   ('&ZXCLIENTSTOKEN' EQ '').ZI34E             00755700
                      AIF   ('&ZXCLIENTSTOKEN' EQ 'OUTPUT').ZI34E       00755800
&ZCGPR                SETC  '&XCLIENTSTOKEN'                            00755900
.*                                                                      00756000
                      AIF   ('&XCLIENTSTOKEN'(1,1) NE '(').ZI34B        00756100
&ZCGPR   SETC  '0('.'&XCLIENTSTOKEN'(2,K'&XCLIENTSTOKEN-2).')'          00756200
                      AGO   .ZI34D                                      00756300
.ZI34B                ANOP  ,                                           00756400
.*                                                                      00756500
&ZC                   SETC  '&XCLIENTSTOKEN'(1,1)                       00756600
                      AIF   (T'&ZC NE 'N').ZI34D                        00756700
&ZC                   SETC  '&XCLIENTSTOKEN'                            00756800
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI34D               00756900
&ZCGPR                SETC  '=BL8''&XCLIENTSTOKEN'''                    00757000
.*                                                                      00757100
.ZI34D                ANOP  ,                                           00757200
.*                                                                      00757300
&ZOPN                 SETA  &ZOPN+1                                     00757400
&ZOPL(&ZOPN)          SETC  ' '                                         00757500
&ZOPO(&ZOPN)          SETC  'MVC'                                       00757600
&ZOPV(&ZOPN)          SETC  '52(8,1),&ZCGPR'                            00757700
&ZOPD(&ZOPN)          SETC  '++ &ZXCLIENTSTOKEN XCLIENTSTOKEN'          00757800
.*                                                                      00757900
.ZI34E                ANOP  ,                                           00758000
.*-------------------------------------------------------------------   00758100
.***AI.LVER01                                                           00758200
                      AIF  (&XPLISTVER LT 1).ZI35Z                      00758300
.*-------------------------------------------------------------------   00758400
.***AI.L18  XSYNCHCOMPADDR AL4                                          00758500
         AIF   ('&XSYNCHCOMPADDR' NE 'NOVALUE').ZI35                    00758600
&ZXSYNCHCOMPADDR      SETC  ''             RESET INPUT/OUTPUT           00758700
.ZI35                 ANOP  ,                                           00758800
.*-------------------------------------------------------------------   00758900
.***AI.L25  XSYNCHCOMPADDR AL4                                          00759000
                      AIF   ('&ZXSYNCHCOMPADDR' EQ '').ZI35E            00759100
                      AIF   ('&ZXSYNCHCOMPADDR' EQ 'OUTPUT').ZI35E      00759200
&ZCGPR                SETC  '&XSYNCHCOMPADDR'                           00759300
.*                                                                      00759400
&ZC                   SETC  '&XSYNCHCOMPADDR'(1,1)                      00759500
                      AIF   (T'&ZC NE 'N').ZI35D                        00759600
&ZC                   SETC  '&XSYNCHCOMPADDR'                           00759700
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI35D               00759800
&ZCGPR                SETC  '=AL4(&XSYNCHCOMPADDR)'                     00759900
.*                                                                      00760000
.ZI35D                ANOP  ,                                           00760100
.*                                                                      00760200
&ZOPN                 SETA  &ZOPN+1                                     00760300
&ZOPL(&ZOPN)          SETC  ' '                                         00760400
&ZOPO(&ZOPN)          SETC  'MVC'                                       00760500
&ZOPV(&ZOPN)          SETC  '60(4,1),&ZCGPR'                            00760600
&ZOPD(&ZOPN)          SETC  '++ &ZXSYNCHCOMPADDR XSYNCHCOMPADDR'        00760700
.*                                                                      00760800
.ZI35E                ANOP  ,                                           00760900
.*-------------------------------------------------------------------   00761000
.***AI.LVER02                                                           00761100
.ZI35Z                ANOP  ,                                           00761200
.*-------------------------------------------------------------------   00761300
.***AI.LVER01                                                           00761400
                      AIF  (&XPLISTVER LT 1).ZI36Z                      00761500
.*-------------------------------------------------------------------   00761600
.***AI.L25  XSYNCHCODEADDR AL4                                          00761700
                      AIF   ('&ZXSYNCHCODEADDR' EQ '').ZI36E            00761800
                      AIF   ('&ZXSYNCHCODEADDR' EQ 'OUTPUT').ZI36E      00761900
&ZCGPR                SETC  '&XSYNCHCODEADDR'                           00762000
.*                                                                      00762100
&ZC                   SETC  '&XSYNCHCODEADDR'(1,1)                      00762200
                      AIF   (T'&ZC NE 'N').ZI36D                        00762300
&ZC                   SETC  '&XSYNCHCODEADDR'                           00762400
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI36D               00762500
&ZCGPR                SETC  '=AL4(&XSYNCHCODEADDR)'                     00762600
.*                                                                      00762700
.ZI36D                ANOP  ,                                           00762800
.*                                                                      00762900
&ZOPN                 SETA  &ZOPN+1                                     00763000
&ZOPL(&ZOPN)          SETC  ' '                                         00763100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00763200
&ZOPV(&ZOPN)          SETC  '64(4,1),&ZCGPR'                            00763300
&ZOPD(&ZOPN)          SETC  '++ &ZXSYNCHCODEADDR XSYNCHCODEADDR'        00763400
.*                                                                      00763500
.ZI36E                ANOP  ,                                           00763600
.*-------------------------------------------------------------------   00763700
.***AI.LVER02                                                           00763800
.ZI36Z                ANOP  ,                                           00763900
.*-------------------------------------------------------------------   00764000
.***AI.LVER01                                                           00764100
                      AIF  (&XPLISTVER LT 1).ZI37Z                      00764200
.*-------------------------------------------------------------------   00764300
.***AI.L25  XSYNCHRSNADDR AL4                                           00764400
                      AIF   ('&ZXSYNCHRSNADDR' EQ '').ZI37E             00764500
                      AIF   ('&ZXSYNCHRSNADDR' EQ 'OUTPUT').ZI37E       00764600
&ZCGPR                SETC  '&XSYNCHRSNADDR'                            00764700
.*                                                                      00764800
&ZC                   SETC  '&XSYNCHRSNADDR'(1,1)                       00764900
                      AIF   (T'&ZC NE 'N').ZI37D                        00765000
&ZC                   SETC  '&XSYNCHRSNADDR'                            00765100
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI37D               00765200
&ZCGPR                SETC  '=AL4(&XSYNCHRSNADDR)'                      00765300
.*                                                                      00765400
.ZI37D                ANOP  ,                                           00765500
.*                                                                      00765600
&ZOPN                 SETA  &ZOPN+1                                     00765700
&ZOPL(&ZOPN)          SETC  ' '                                         00765800
&ZOPO(&ZOPN)          SETC  'MVC'                                       00765900
&ZOPV(&ZOPN)          SETC  '68(4,1),&ZCGPR'                            00766000
&ZOPD(&ZOPN)          SETC  '++ &ZXSYNCHRSNADDR XSYNCHRSNADDR'          00766100
.*                                                                      00766200
.ZI37E                ANOP  ,                                           00766300
.*-------------------------------------------------------------------   00766400
.***AI.LVER02                                                           00766500
.ZI37Z                ANOP  ,                                           00766600
.*-------------------------------------------------------------------   00766700
.***AI.LVER01                                                           00766800
                      AIF  (&XPLISTVER LT 2).ZI38Z                      00766900
.*-------------------------------------------------------------------   00767000
.***AI.L18  XDUALPOOLTOKEN CL16                                         00767100
         AIF   ('&XDUALPOOLTOKEN' NE 'NOTOKEN').ZI38                    00767200
&ZXDUALPOOLTOKEN      SETC  ''             RESET INPUT/OUTPUT           00767300
.ZI38                 ANOP  ,                                           00767400
.*-------------------------------------------------------------------   00767500
.***AI.L25  XDUALPOOLTOKEN CL16                                         00767600
                      AIF   ('&ZXDUALPOOLTOKEN' EQ '').ZI38E            00767700
                      AIF   ('&ZXDUALPOOLTOKEN' EQ 'OUTPUT').ZI38E      00767800
&ZCGPR                SETC  '&XDUALPOOLTOKEN'                           00767900
.*                                                                      00768000
                      AIF   ('&XDUALPOOLTOKEN'(1,1) NE '(').ZI38B       00768100
&ZCGPR   SETC  '0('.'&XDUALPOOLTOKEN'(2,K'&XDUALPOOLTOKEN-2).')'        00768200
.ZI38B                ANOP  ,                                           00768300
.*                                                                      00768400
&ZOPN                 SETA  &ZOPN+1                                     00768500
&ZOPL(&ZOPN)          SETC  ' '                                         00768600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00768700
&ZOPV(&ZOPN)          SETC  '72(16,1),&ZCGPR'                           00768800
&ZOPD(&ZOPN)          SETC  '++ &ZXDUALPOOLTOKEN XDUALPOOLTOKEN'        00768900
.*                                                                      00769000
.ZI38E                ANOP  ,                                           00769100
.*-------------------------------------------------------------------   00769200
.***AI.LVER02                                                           00769300
.ZI38Z                ANOP  ,                                           00769400
.*-------------------------------------------------------------------   00769500
.***AI.LVER01                                                           00769600
                      AIF  (&XPLISTVER LT 4).ZI40Z                      00769700
.*-------------------------------------------------------------------   00769800
.***AI.L18 ADDR XFLAGS A                                                00769900
         AIF   ('&XFLAGS' NE 'NO_FLAGS').ZI40                           00770000
&ZXFLAGS              SETC  ''             RESET INPUT/OUTPUT           00770100
.ZI40                 ANOP  ,                                           00770200
.*-------------------------------------------------------------------   00770300
.***AI.L19 ADDR XFLAGS A                                                00770400
                      AIF   ('&ZXFLAGS' EQ '').ZI40H                    00770500
&ZCLNG                SETC  '&XFLAGS'                                   00770600
&ZCGPR                SETC  '14'                                        00770700
         AIF   ('&XFLAGS'(1,1) EQ '(').ZI40F  IN GPR                    00770800
         AIF   ('&XFLAGS'(1,1) EQ '0').ZI40B  BIT STRING                00770900
         AIF   ('&XFLAGS'(1,1) EQ '1').ZI40B  BIT STRING                00771000
         AIF   (T'&XFLAGS EQ 'N').ZI40C    SELF DEFINING TERM           00771100
                      AGO   .ZI40D                                      00771200
.ZI40B                ANOP  ,                                           00771300
&ZCLNG                SETC  '=BL1''&XFLAGS'''                           00771400
                      AGO   .ZI40D                                      00771500
.ZI40C                ANOP  ,                                           00771600
&ZCLNG                SETC  '=&XFLAGS'                                  00771700
.ZI40D                ANOP  ,                                           00771800
.*                                                                      00771900
&ZOPN                 SETA  &ZOPN+1                                     00772000
&ZOPL(&ZOPN)          SETC  ' '                                         00772100
&ZOPO(&ZOPN)          SETC  'LA'                                        00772200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00772300
&ZOPD(&ZOPN)          SETC  '++ &ZXFLAGS XFLAGS'                        00772400
.*                                                                      00772500
                      AGO   .ZI40G                                      00772600
.*                                                                      00772700
.ZI40F                ANOP  ,                                           00772800
&ZCGPR   SETC  '&XFLAGS'(2,K'&XFLAGS-2)                                 00772900
.*                                                                      00773000
.ZI40G                ANOP  ,                                           00773100
.*                                                                      00773200
&ZOPN                 SETA  &ZOPN+1                                     00773300
&ZOPL(&ZOPN)          SETC  ' '                                         00773400
&ZOPO(&ZOPN)          SETC  'ST'                                        00773500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,104(,1)'                            00773600
&ZOPD(&ZOPN)          SETC  '++ &ZXFLAGS XFLAGS'                        00773700
.*                                                                      00773800
.ZI40H                ANOP  ,                                           00773900
.*-------------------------------------------------------------------   00774000
.***AI.LVER02                                                           00774100
.ZI40Z                ANOP  ,                                           00774200
.*-------------------------------------------------------------------   00774300
.***AI.LVER01                                                           00774400
                      AIF  (&XPLISTVER LT 4).ZI41Z                      00774500
.*-------------------------------------------------------------------   00774600
.***AI.LVER02                                                           00774700
.ZI41Z                ANOP  ,                                           00774800
.*-------------------------------------------------------------------   00774900
.***AI.L05 XFRRFLAG BL1                                                 00775000
&ZW                   SETC  ''                                          00775100
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00775200
.*-------------------------------------------------------------------   00775300
.***AI.L08 XFRRFLAG "YES"                                               00775400
.***      BL1'XXXXXXX1'                                                 00775500
         AIF   ('&XSDWALOC31' NE 'YES').ZI45A                           00775600
&ZW                   SETC  '&ZW.00000001'                              00775700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00775800
                      AGO   .ZI45C                                      00775900
.*                                                                      00776000
.ZI45A                ANOP  ,                                           00776100
&ZW                   SETC  '&ZW.00000000'                              00776200
.ZI45C                ANOP  ,                                           00776300
.*-------------------------------------------------------------------   00776400
.***AI.L11 XFRRFLAG BL1                                                 00776500
                      AIF   ('&ZCLNG' NE 'YES').ZI45E  ALL ZERO BITS    00776600
&ZOPN                 SETA  &ZOPN+1                                     00776700
&ZOPL(&ZOPN)          SETC  ' '                                         00776800
&ZOPO(&ZOPN)          SETC  'OI'                                        00776900
&ZOPV(&ZOPN)          SETC  '35(1),B''&ZW'''                            00777000
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00777100
.ZI45E                ANOP  ,                                           00777200
.*-------------------------------------------------------------------   00777300
&ZOPN1                SETA &ZOPN                                        00777400
.*******************************************************************    00777500
.***  PROCESS IEAMSCHD OUTPUT PARAMETERS                                00777600
.*******************************************************************    00777700
                      ACTR  10000                                       00777800
.*------------------------------------------------------------------    00777900
.***AO.LVER01                                                           00778000
                      AIF  (&XPLISTVER LT 3).ZO39Z  PLVER               00778100
.*------------------------------------------------------------------    00778200
.***AO.L02 XSRBIDTOKEN CL16                                             00778300
         AIF   ('&ZXSRBIDTOKEN' EQ 'OUTPUT').ZO39A  OUTPUT              00778400
         AIF   ('&ZXSRBIDTOKEN' NE 'INOUT').ZO39C  INOUT                00778500
.ZO39A    AIF   ('&XSRBIDTOKEN'(1,1) NE '(').ZO39B  ADDR IN GPR         00778600
&ZCGPR   SETC  '&XSRBIDTOKEN'(2,K'&XSRBIDTOKEN-2)                       00778700
&ZOPN                 SETA  &ZOPN+1                                     00778800
&ZOPL(&ZOPN)          SETC  ' '                                         00778900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00779000
&ZOPV(&ZOPN)          SETC  '0(16,&ZCGPR),88(1)'                        00779100
&ZOPD(&ZOPN)          SETC  '++ XSRBIDTOKEN CL16'                       00779200
                      AGO   .ZO39C                                      00779300
.*                                                                      00779400
.ZO39B                ANOP  ,                                           00779500
&ZAWRK   SETA  K'&XSRBIDTOKEN                                           00779600
         AIF   ('&XSRBIDTOKEN'(&ZAWRK,1) NE ')').ZO39G                  00779700
&ZN      SETA  2                                                        00779800
.ZO39H    ANOP                                                          00779900
         AIF   (&ZN GE &ZAWRK).ZO39G                                    00780000
         AIF   ('&XSRBIDTOKEN'(&ZN,1) NE '(').ZO39I                     00780100
&ZC      SETC  '&XSRBIDTOKEN'(1,&ZN).'16'.','                           00780200
&ZC      SETC  '&ZC'.'&XSRBIDTOKEN'(&ZN+1,&ZAWRK-&ZN).',88(1)'          00780300
         AGO   .ZO39J                                                   00780400
.ZO39I    ANOP                                                          00780500
&ZN      SETA  &ZN+1                                                    00780600
         AGO   .ZO39H                                                   00780700
.ZO39G    ANOP                                                          00780800
&ZC      SETC  '&XSRBIDTOKEN.(16),88(1)'                                00780900
.ZO39J    ANOP                                                          00781000
&ZOPN                 SETA  &ZOPN+1                                     00781100
&ZOPL(&ZOPN)          SETC  ' '                                         00781200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00781300
&ZOPV(&ZOPN)          SETC  '&ZC'                                       00781400
&ZOPD(&ZOPN)          SETC  '++ XSRBIDTOKEN CL16'                       00781500
.ZO39C                ANOP  ,                                           00781600
.*------------------------------------------------------------------    00781700
.***AO.LVER02                                                           00781800
.ZO39Z                ANOP  ,                                           00781900
.*******************************************************************    00782000
.***AO.X02  RETURN CODE PROCESSING                                      00782100
.*******************************************************************    00782200
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00782300
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00782400
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00782500
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00782600
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00782700
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00782800
&ZOPN                 SETA  &ZOPN+1                                     00782900
&ZOPL(&ZOPN)          SETC  ' '                                         00783000
&ZOPO(&ZOPN)          SETC  'ST'                                        00783100
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00783200
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00783300
                      AGO   .ZMRETX                                     00783400
.*                                                                      00783500
.ZMRET2               ANOP  ,                                           00783600
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00783700
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00783800
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00783900
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00784000
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00784100
&ZOPN                 SETA  &ZOPN+1                                     00784200
&ZOPL(&ZOPN)          SETC  ' '                                         00784300
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00784400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00784500
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00784600
.ZMRETX               ANOP  ,                                           00784700
.*******************************************************************    00784800
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00784900
.*******************************************************************    00785000
.ZMFLX                ANOP  ,              MF=L PROCESSING              00785100
.*******************************************************************    00785200
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00785300
.*******************************************************************    00785400
                      ACTR  10000                                       00785500
.*                                                                      00785600
                      LCLA  &ZLC           COLUMN POSITION              00785700
                      LCLA  &ZOPX          LIST TABLE INDEX             00785800
                      LCLC  &ZLL           LABEL                        00785900
                      LCLC  &ZLOP          OPERATION                    00786000
                      LCLC  &ZLV           VALUE                        00786100
                      LCLC  &ZLD           DESCRIPTION                  00786200
.*                                                                      00786300
&ZOPX                 SETA  1                                           00786400
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00786500
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00786600
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00786700
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00786800
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00786900
                      AIF   (K'&ZLD LE 0).ZL5                           00787000
&ZLC                  SETA  35             COMMENT COLUMN               00787100
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00787200
&ZLC                  SETA  33             COMMMENT COLUMN              00787300
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00787400
&ZLV                  SETC  '&ZLV'.' '                                  00787500
                      AGO   .ZL3                                        00787600
.*                                                                      00787700
.ZL4                  ANOP  ,                                           00787800
&ZLV                  SETC  '&ZLV'.' '                                  00787900
.ZL5                  ANOP  ,                                           00788000
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00788100
.*                                                                      00788200
&ZLL     &ZLOP &ZLV                                                     00788300
.*                                                                      00788400
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00788500
                      AGO   .ZL2           CONTINUE LOOPING             00788600
.*                                                                      00788700
.ZLX                  ANOP  ,                                           00788800
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00788900
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00789000
         &ZMAC_LLGT 14,16(0,0)         CVT ADDRESS                      00789100
         L     14,772(14,0)            SFT ADDRESS                      00789200
         L     14,408(14,0)            LX/EX FOR SERVICE ROUTINE        00789300
         PC    0(14)                                                    00789400
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00789500
.ZLINKX               ANOP  ,                                           00789600
.*******************************************************************    00789700
.***AP.X01  FORMAT GENERATED CODE                                       00789800
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00789900
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00790000
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00790100
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00790200
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00790300
                      AIF   (K'&ZLD LE 0).ZL51                          00790400
&ZLC                  SETA  35             COMMENT COLUMN               00790500
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00790600
&ZLC                  SETA  33             COMMENT COLUMN               00790700
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00790800
&ZLV                  SETC  '&ZLV'.' '                                  00790900
                      AGO   .ZL31                                       00791000
.*                                                                      00791100
.ZL41                 ANOP  ,                                           00791200
&ZLV                  SETC  '&ZLV'.' '                                  00791300
.ZL51                 ANOP  ,                                           00791400
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00791500
.*                                                                      00791600
&ZLL     &ZLOP &ZLV                                                     00791700
.*                                                                      00791800
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00791900
                      AGO   .ZL21          CONTINUE LOOPING             00792000
.*                                                                      00792100
.ZLX1                 ANOP  ,                                           00792200
.*******************************************************************    00792300
.***AP.X02  END OF IEAMSCHD MACRO                                       00792400
&ZIEAMSCHD            SETC  'YES'          SET IEAMSCHD USED            00792500
         POP   PRINT                                                    00792600
*                                            IEAMSCHD-4                 00792700
         SPACE 1                                                        00792800
.ZLX2                 ANOP  ,                                           00792900
         MEND                                                           00793000
**********************************************************************/ 00793100
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00793200
*%IEAMSCHD: MACRO KEYS(EPADDR,ENV,PRIORITY,MINORPRIORITY,SRBIDTOKEN,    00793300
*                 CLIENTSTOKEN,ENCLAVETOKEN,DUALPOOLTOKEN,              00793400
*                 TARGETSTOKEN,FEATURE,CPUMASK,FLAGS,PARM,FRRADDR,      00793500
*                 SDWALOC31,KEYVALUE,TRANSFER,LLOCK,RMTRADDR,           00793600
*                 PURGESTOKEN,PTCBADDR,SYNCH,SYNCHCOMPADDR,             00793700
*                 SYNCHCODEADDR,SYNCHRSNADDR,RETCODE,PLISTVER,MF);      00793800
*  ANS('?'!!MACLABEL!!' '!!'IEAMSCHP '!!MACLIST!!                       00793900
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              00794000
*%END IEAMSCHD;                                                         00794100
