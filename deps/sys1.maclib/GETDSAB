*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  GETDSAB                               -08/25/08-<0> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  DSAB scan service interface                   * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5694-A01 COPYRIGHT IBM CORP. 1993, 2009                         * 00001200
*                                                                     * 00001300
* STATUS= HBB7760                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*      DSAB Scan Interface Macro                                      * 00002000
*                                                                     * 00002100
*      OPERATION:  This macro accomplishes its function in the        * 00002200
*      following manner:                                              * 00002300
*                                                                     * 00002400
*                                                                     * 00002500
*      1.  Checks to ensure that all required keywords were           * 00002600
*          specified.                                                 * 00002700
*                                                                     * 00002800
*      2.  Checks to ensure that all keywords provide appropriate     * 00002900
*          values.                                                    * 00003000
*                                                                     * 00003100
*      3.  Builds parameter list for DSAB scan service using          * 00003200
*          specified values.                                          * 00003300
*                                                                     * 00003400
*      4.  Checks for existence of DSAB scan service module.  If the  * 00003500
*          module was not provided by this environment, the           * 00003600
*          appropriate return code is set.                            * 00003700
*                                                                     * 00003800
*          If the DSAB scan service module is contained in this       * 00003900
*          system environment, the service is invoked.                * 00004000
*                                                                     * 00004100
*      5.  Processes any return codes and reason codes for return to  * 00004200
*          the invoker of this macro.                                 * 00004300
*                                                                     * 00004400
*                                                                     * 00004500
*                                                                     * 00004600
*      NOTES:                                                         * 00004700
*                                                                     * 00004800
*      The DSAB scan routine is given control from the GETDSAB macro. * 00004900
*      This macro will complete the parameter list with caller        * 00005000
*      provided data and generate a call to the DSAB scan service.    * 00005100
*      The GETDSAB macro is provided in list, execute and standard    * 00005200
*      form.  The list format can only be used to reserve storage for * 00005300
*      the parameter list.  No variable initialization can be         * 00005400
*      accomplished with the list format.  The standard and execute   * 00005500
*      format build the complete parameter list storage area          * 00005600
*      contained prior to macro invocation.  Because the standard and * 00005700
*      execute forms build a complete parameter list, setting         * 00005800
*      variables in the parameter list before the macro is invoked is * 00005900
*      of no value.  There is no need to initialize the parameter     * 00006000
*      list except as is done by the macro.  Thus no external mapping * 00006100
*      macro is provided for the parameter list.                      * 00006200
*                                                                     * 00006300
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00006400
*                                                                     * 00006500
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00006600
*                                                                     * 00006700
*01* ENVIRONMENT:                                                     * 00006800
*                                                                     * 00006900
*                                                                     * 00007000
*      Dispatchable unit mode: Task mode.                             * 00007100
*                                                                     * 00007200
*      Minimum authorization: Problem or Supervisor state.  Any PSW   * 00007300
*                        key.                                         * 00007400
*                                                                     * 00007500
*      AMODE:            31-bit.                                      * 00007600
*                                                                     * 00007700
*      Serialization:    The user must provide or inherit the         * 00007800
*                        appropriate serialization on the SYSZTIOT    * 00007900
*                        resource before calling the GETDSAB macro    * 00008000
*                        and while using its output addresses. The    * 00008100
*                        minimum required level of serialization is   * 00008200
*                        SHARED (SHR.) See "Requesting Dynamic        * 00008300
*                        Allocation Functions " in the z/OS MVS       * 00008400
*                        Programming: Authorized Assembler Services   * 00008500
*                        Guide for further discussion.                * 00008600
*                                                                     * 00008700
*      Restrictions:     The DSAB mapping macro (IHADSAB), CVT        * 00008800
*                        mapping macro (CVT) and JESCT mapping macro  * 00008900
*                        (IEFJESCT) must be included in the program   * 00009000
*                        invoking this service.                       * 00009100
*                                                                     * 00009200
*                        This macro can not be used by PLS modules.   * 00009300
*                                                                     * 00009400
*                        The user must provide a recovery environment * 00009500
*                        if one is necessary during the invocation of * 00009600
*                        the GETDSAB Service, as the service does not * 00009700
*                        have a recovery environment of its own.  The * 00009800
*                        service runs under the user's task, so any   * 00009900
*                        recovery environment defined to the user     * 00010000
*                        prior to the invocation of the GETDSAB       * 00010100
*                        Service will be used.                        * 00010200
*                                                                     * 00010300
*                                                                     * 00010400
*                                                                     * 00010500
*01* SYNTAX:                                                          * 00010600
*                                                                     * 00010700
*Ýxlabel¨  GETDSAB  Ð  FIRST                                          * 00010800
*                   Ô ,NEXT                                           * 00010900
*                   Ô ,DDNAME=xddname                                 * 00011000
*                   ¿ ,DCBPTR=xdcbptr                                 * 00011100
*                     ,DSABPTR=xdsabptr                               * 00011200
*                    Ý,TCBPTR=»xtcbptr!0º¨                            * 00011300
*                    Ý,LOC=»BELOW!ANYº¨                               * 00011400
*                    Ý,RETCODE=xretcode¨                              * 00011500
*                    Ý,RSNCODE=xrsncode¨                              * 00011600
*                    Ý,PLISTVER=»xplistver!IMPLIED_VERSIONº¨          * 00011700
*                   ÐÝ,MF=S¨                                          * 00011800
*                   ÔÝ,MF=(L,xmfctrl»,xmfattr!0Dº)¨                   * 00011900
*                   ¿Ý,MF=(E,xmfctrl»,COMPLETEº)¨                     * 00012000
*                                                                     * 00012100
*                                                                     * 00012200
*      Where:                                                         * 00012300
*                                                                     * 00012400
*                                                                     * 00012500
*      Ýxlabel¨                                                       * 00012600
*          is an optional symbol, starting in column 1, that is the   * 00012700
*          name on the GETDSAB macro invocation.  The name must       * 00012800
*          conform to the rules for an ordinary assembler language    * 00012900
*          symbol.                                                    * 00013000
*          DEFAULT: No name.                                          * 00013100
*                                                                     * 00013200
*                                                                     * 00013300
*                                                                     * 00013400
*                                                                     * 00013500
*      The following is a set of mutually exclusive keys.  This set   * 00013600
*      is required; only one key must be specified.                   * 00013700
*                                                                     * 00013800
*                                                                     * 00013900
*      FIRST                                                          * 00014000
*          is part of a group of mutually exclusive keys of which     * 00014100
*          only one is required, and indicates that the pointer to    * 00014200
*          the first DSAB on the DSAB chain is desired.  The DSAB     * 00014300
*          chain selected is that associated with the current TCB     * 00014400
*          unless overridden by the TCBPTR parameter.                 * 00014500
*                                                                     * 00014600
*      NEXT                                                           * 00014700
*          is part of a group of mutually exclusive keys of which     * 00014800
*          only one is required, and indicates that the pointer to    * 00014900
*          the next DSAB on the DSAB chain after the one pointed to   * 00015000
*          by the value of DSABPTR is desired.                        * 00015100
*                                                                     * 00015200
*      DDNAME=xddname                                                 * 00015300
*          belongs to a set of mutually exclusive keys. It is the     * 00015400
*          name (RS-type), or address in register (2)-(12), of an 8   * 00015500
*          character input and consists of an 8-character input       * 00015600
*          string, left-justified, with trailing blanks.  A DDNAME of * 00015700
*          all blanks is invalid.  The address of the DSAB            * 00015800
*          corresponding to this DDNAME will be put into the location * 00015900
*          specified by the DSABPTR parameter.  The DSAB/TIOT chain   * 00016000
*          selected is that associated with the current TCB, unless   * 00016100
*          overridden by the TCBPTR parameter.                        * 00016200
*                                                                     * 00016300
*      DCBPTR=xdcbptr                                                 * 00016400
*          belongs to a set of mutually exclusive keys. It is the     * 00016500
*          name (RS-type), or address in register (2)-(12), of a 4    * 00016600
*          byte input that contains the address and specifies the     * 00016700
*          address of a fullword field that points to the DCB         * 00016800
*          associated with a DD name.  If this DCB is OPEN, the DSAB  * 00016900
*          pointer will be retrieved from the DEB extension           * 00017000
*          associated with it.  If this DCB is not OPEN, the DD name  * 00017100
*          is taken from the DCBDDNAM field in the DCB and the DSAB   * 00017200
*          address corresponding to this DD name is retrieved.  When  * 00017300
*          DCBPTR defines a DCB associated with an OPEN DD, DCBPTR is * 00017400
*          mutually exclusive with TCBPTR (failure to comply with     * 00017500
*          this results in a return code of 12 and reason code of     * 00017600
*          1210).  When DCBPTR defines a DCB associated with a CLOSED * 00017700
*          DD, the DSAB chain selected is determined by the desired   * 00017800
*          TCB, which is either the current TCB (if TCBPTR is zero)   * 00017900
*          or the TCB pointed to by TCBPTR.                           * 00018000
*                                                                     * 00018100
*                                                                     * 00018200
*                                                                     * 00018300
*      End of a set of mutually exclusive required keys.              * 00018400
*                                                                     * 00018500
*                                                                     * 00018600
*                                                                     * 00018700
*      DSABPTR=xdsabptr                                               * 00018800
*          is the name (RS-type), or address in register (2)-(12), of * 00018900
*          a required 4 byte input/output that contains the address   * 00019000
*          of the desired DSAB.  DSABPTR specifies the name of a      * 00019100
*          fullword field that will be set to the address of a DSAB.  * 00019200
*          Upon input, DSABPTR points to the current DSAB.  When used * 00019300
*          with the NEXT keyword, the DSAB on the chain following the * 00019400
*          one specified by DSABPTR will be returned.  Upon output,   * 00019500
*          DSABPTR will contain the address of the requested DSAB if  * 00019600
*          the return code is zero.  If the return code is non-zero   * 00019700
*          (signifying that an error has occurred), DSABPTR will      * 00019800
*          contain a value of 0.                                      * 00019900
*                                                                     * 00020000
*                                                                     * 00020100
*                                                                     * 00020200
*                                                                     * 00020300
*      ÝTCBPTR=»xtcbptr!0º¨                                           * 00020400
*          is the name (RS-type), or address in register (2)-(12), of * 00020500
*          an optional 4 byte input that contains the address of the  * 00020600
*          TCB associated with the task for which DSAB/TIOT           * 00020700
*          information is desired.  When DCBPTR defines a DCB         * 00020800
*          associated with an OPEN DD, DCBPTR is mutually exclusive   * 00020900
*          with TCBPTR.                                               * 00021000
*          DEFAULT: 0 If not specified, the current TCB is used.      * 00021100
*                                                                     * 00021200
*                                                                     * 00021300
*                                                                     * 00021400
*                                                                     * 00021500
*      ÝLOC=»BELOW!ANYº¨                                              * 00021600
*          is an optional keyword input that indicates whether the    * 00021700
*          DSAB Scan Service should search all the DSABs or only      * 00021800
*          those which reside below the 16-megabyte line.             * 00021900
*          DEFAULT: BELOW                                             * 00022000
*                                                                     * 00022100
*                                                                     * 00022200
*          LOC=BELOW                                                  * 00022300
*              Requests that the DSAB Scan Service search only those  * 00022400
*              DSABs which reside below the 16-megabyte line.         * 00022500
*                                                                     * 00022600
*          LOC=ANY                                                    * 00022700
*              Requests that the DSAB Scan Service search all the     * 00022800
*              DSABs.                                                 * 00022900
*                                                                     * 00023000
*                                                                     * 00023100
*                                                                     * 00023200
*                                                                     * 00023300
*                                                                     * 00023400
*                                                                     * 00023500
*      ÝRETCODE=xretcode¨                                             * 00023600
*          is the name (RS-type) of an optional fullword output       * 00023700
*          variable, or register (2)-(12) or (15), into which the     * 00023800
*          return code is to be copied from GPR 15.  If you specify   * 00023900
*          15, GPR15, REG15, or R15 (within or without parentheses),  * 00024000
*          the value will be left in GPR 15.                          * 00024100
*                                                                     * 00024200
*                                                                     * 00024300
*                                                                     * 00024400
*                                                                     * 00024500
*      ÝRSNCODE=xrsncode¨                                             * 00024600
*          is the name (RS-type) of an optional fullword output       * 00024700
*          variable into which the reason code is to be copied from   * 00024800
*          GPR 0.  If you specify 0, 00, GPR0, GPR00, REG0, REG00, or * 00024900
*          R0 (within or without parentheses), the value will be left * 00025000
*          in GPR 0.                                                  * 00025100
*                                                                     * 00025200
*                                                                     * 00025300
*                                                                     * 00025400
*                                                                     * 00025500
*      ÝPLISTVER=»xplistver!IMPLIED_VERSIONº¨                         * 00025600
*          is an optional byte input decimal value in the "0-0" range * 00025700
*          that specifies the macro version.  PLISTVER is the only    * 00025800
*          key allowed on the list form of MF and determines which    * 00025900
*          parameter list is generated.  Note that MAX may be         * 00026000
*          specified instead of a number, and the parameter list will * 00026100
*          be of the largest size currently supported. This size may  * 00026200
*          grow from release to release (thus possibly affecting the  * 00026300
*          amount of storage needed by your program).  If your        * 00026400
*          program can tolerate this, IBM recommends that you always  * 00026500
*          specify MAX when creating the list form parameter list as  * 00026600
*          that will ensure that the list form parameter list is      * 00026700
*          always long enough to hold whatever parameters might be    * 00026800
*          specified on the execute form.                             * 00026900
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00027000
*          default is the lowest version which allows all of the      * 00027100
*          parameters specified on the invocation to be processed.    * 00027200
*                                                                     * 00027300
*                                                                     * 00027400
*                                                                     * 00027500
*                                                                     * 00027600
*      ÝMF=»S!L!Eº¨                                                   * 00027700
*          is an optional keyword input which specifies the macro     * 00027800
*          form.                                                      * 00027900
*          DEFAULT: S                                                 * 00028000
*                                                                     * 00028100
*                                                                     * 00028200
*          ÝMF=S¨                                                     * 00028300
*              specifies the standard form of the macro.  The "S"     * 00028400
*              form generates code to put the parameters into an      * 00028500
*              in-line parameter list and invoke the desired service. * 00028600
*              Full checking for required macro keys is done along    * 00028700
*              with supplying defaults for omitted optional           * 00028800
*              parameters.                                            * 00028900
*                                                                     * 00029000
*          ÝMF=(L,xmfctrl»,xmfattr!0Dº)¨                              * 00029100
*              specifies the list form of the macro.  The "L" form    * 00029200
*              defines an area to be used for the parameter list.     * 00029300
*              Only the PLISTVER key may be specified on the          * 00029400
*              invocation.  All other macro parameters are flagged as * 00029500
*              errors.  If PLISTVER is not specified, the original    * 00029600
*              parameter list definition is used.                     * 00029700
*                                                                     * 00029800
*            ,xmfctrl                                                 * 00029900
*              is a required input.  It is the name of a storage area * 00030000
*              for the parameter list.                                * 00030100
*                                                                     * 00030200
*            »,xmfattr!0Dº                                            * 00030300
*              is an optional 60 character input string that varies   * 00030400
*              from 1 to 60 characters. Use it to force boundary      * 00030500
*              alignment of the parameter list. Use only 0F or 0D.    * 00030600
*              DEFAULT: 0D which forces the parameter list to a       * 00030700
*              doubleword boundary.                                   * 00030800
*                                                                     * 00030900
*          ÝMF=(E,xmfctrl»,COMPLETEº)¨                                * 00031000
*              specifies the execute form of the macro.  The "E" form * 00031100
*              generates code to put the parameters into the          * 00031200
*              parameter list specified by xmfctrl and provides full  * 00031300
*              syntax checking with default setting.                  * 00031400
*                                                                     * 00031500
*            ,xmfctrl                                                 * 00031600
*              is a required input.  It is the name (RS-type), or     * 00031700
*              address in register (1)-(12), of a storage area for    * 00031800
*              the parameter list.                                    * 00031900
*                                                                     * 00032000
*            »,COMPLETEº                                              * 00032100
*              is an optional keyword input which specifies the       * 00032200
*              degree of macro parameter syntax checking.             * 00032300
*              DEFAULT: COMPLETE                                      * 00032400
*                                                                     * 00032500
*                                                                     * 00032600
*              COMPLETE                                               * 00032700
*                  Checking for required macro keys is done and       * 00032800
*                  defaults are supplied for omitted optional         * 00032900
*                  parameters.                                        * 00033000
*                                                                     * 00033100
*                                                                     * 00033200
*                                                                     * 00033300
*                                                                     * 00033400
*                                                                     * 00033500
*                                                                     * 00033600
*                                                                     * 00033700
*01* RETURN CODES:                                                    * 00033800
*                                                                     * 00033900
*                                                                     * 00034000
*            0    Successful completion.                              * 00034100
*                                                                     * 00034200
*            4    Request failed.  DSABPTR points to the last DSAB on * 00034300
*                 the chain for a NEXT request.                       * 00034400
*                                                                     * 00034500
*            8    Request failed.  The requested DSAB was not found.  * 00034600
*                                                                     * 00034700
*            12   Request failed.  Input values are in error or in    * 00034800
*                 conflict (see Reason Code section for more          * 00034900
*                 details).                                           * 00035000
*                                                                     * 00035100
*            16   Request failed.  This function is not currently     * 00035200
*                 installed on the system.                            * 00035300
*                                                                     * 00035400
*                                                                     * 00035500
*                                                                     * 00035600
*01* REASON CODES:                                                    * 00035700
*                                                                     * 00035800
*       REASON    RETURN                                              * 00035900
*       CODE      CODE      DESCRIPTION                               * 00036000
*       ××××××××  ××××××××  ×××××××××××                               * 00036100
*                                                                     * 00036200
*                                                                     * 00036300
*           1200  12        Request failed due to input error.  The   * 00036400
*                           DDNAME specified or obtained was all      * 00036500
*                           blanks.                                   * 00036600
*                                                                     * 00036700
*           1210  12        Request failed due to input error.        * 00036800
*                           TCBPTR specified when DCBPTR points to an * 00036900
*                           OPEN DCB.                                 * 00037000
*                                                                     * 00037100
*           1220  12        Request failed due to input error.  DSAB  * 00037200
*                           pointed to by DSABPTR is invalid.         * 00037300
*                                                                     * 00037400
*           1230  12        Request failed due to input error.        * 00037500
*                           LOC=BELOW is requested, but the DSAB      * 00037600
*                           chain contains DSABs from both above and  * 00037700
*                           below the 16MB line.  Use LOC=ANY for     * 00037800
*                           this DSAB chain.                          * 00037900
*                                                                     * 00038000
*                                                                     * 00038100
*                                                                     * 00038200
*01* MODULE TYPE:  ASSEM MACRO                                        * 00038300
*                                                                     * 00038400
*02*   PROCESSOR:  ASSEM                                              * 00038500
*                                                                     * 00038600
*01* COMPONENT:  SC1B4                                                * 00038700
*                                                                     * 00038800
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00038900
*                                                                     * 00039000
*01* MACRO USAGE NOTES:                                               * 00039100
*                                                                     * 00039200
*                                                                     * 00039300
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00039400
*        global macro variable.  Any value other than 'NO' will       * 00039500
*        result in the macro expansion being printed.  The default is * 00039600
*        'YES'.  The following examples illustrate how the ZPRINT     * 00039700
*        variable should be set.                                      * 00039800
*                                                                     * 00039900
*                    GBLC &ZPRINT                                     * 00040000
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00040100
*                                                                     * 00040200
*                                                                     * 00040300
*    2.  All keys currently contained in the GETDSAB macro correspond * 00040400
*        to  version 0.  If you specify PLISTVER, use a value of 0 or * 00040500
*        MAX.                                                         * 00040600
*                                                                     * 00040700
*                                                                     * 00040800
*                                                                     * 00040900
*                                                                     * 00041000
*01* CHANGE ACTIVITY:                                                 * 00041100
*                                                                     * 00041200
*   Flag LineItem  FMID    Date   ID    Comment                       * 00041300
*                                                                     * 00041400
*                                                                     * 00041500
*    $T0=OY26839  HBB3310 890831 PDE1:  DD Limit SPE                  * 00041600
*                                                                     * 00041700
*    $T1=OY37405  HBB3310 901116 PDEV:  Remove IEFZB4IC dependency by * 00041800
*                                         hardcoding the DACAVER and  * 00041900
*                                         DACAB4CC offsets in         * 00042000
*                                         GETDSAB, since IEFZB4IC is  * 00042100
*                                         not an externally available * 00042200
*                                         macro.                      * 00042300
*                                                                     * 00042400
*    $01=OY39601  HBB3310 910118 PDEV:  Only add register 0 to EPILOG * 00042500
*                                         register macro variable     * 00042600
*                                         EHAREGS if register 0 has   * 00042700
*                                         not yet been added to       * 00042800
*                                         EHAREGS.  If a register is  * 00042900
*                                         requested more than once,   * 00043000
*                                         EPILOG processing can not   * 00043100
*                                         declare the registers       * 00043200
*                                         properly, resulting in      * 00043300
*                                         compiler errors.            * 00043400
*                                                                     * 00043500
*    $02=OY43058  HBB3310 910603 PDEV:  Correctly determine the       * 00043600
*                                         offsets of the CVTJESCT and * 00043700
*                                         the JESDACA fields.  The    * 00043800
*                                         code did not set up base    * 00043900
*                                         addresses for the CVT and   * 00044000
*                                         JESCT, so that the offsets  * 00044100
*                                         of the two fields could not * 00044200
*                                         be determined.              * 00044300
*                                                                     * 00044400
*    $03=OY48968  HBB3310 920318 PDN1:  Correctly determine DSABPTR   * 00044500
*                                         parameter data for          * 00044600
*                                         assembler version when      * 00044700
*                                         register specification is   * 00044800
*                                         used.  Add missing macro    * 00044900
*                                         label DSABREG2.             * 00045000
*                                                                     * 00045100
*    $04=OY57285  HBB4420 921021 PDG5:  Reship GETDSAB to correct     * 00045200
*                                         macro build problem at last * 00045300
*                                         transmit, which resulted in * 00045400
*                                         TCBPTR=RX-type-address      * 00045500
*                                         keyword specification to be * 00045600
*                                         generated incorrectly. Make * 00045700
*                                         cosmetic changes to the     * 00045800
*                                         macro description.          * 00045900
*                                                                     * 00046000
*    $L1=ODSLM    HBB7705 001031 PDNN:  Add the LOC keyword where     * 00046100
*                                         LOC=ANY requests that all   * 00046200
*                                         DSABs be searched and       * 00046300
*                                         LOC=BELOW requests that     * 00046400
*                                         only those DSABs residing   * 00046500
*                                         below the 16-megabyte line  * 00046600
*                                         be searched.                * 00046700
*                                                                     * 00046800
*    $04=OW51598  HBB7705 011120 PDOO:  Removed the LOC parameter     * 00046900
*                                         from the parameter list.    * 00047000
*                                         LOC is still a keyword but  * 00047100
*                                         if LOC=ANY is specified,    * 00047200
*                                         the high-order bit of the   * 00047300
*                                         TCBPTR is turned on.  This  * 00047400
*                                         change was made for         * 00047500
*                                         down-level compatibility.   * 00047600
*                                                                     * 00047700
*    $05=OW52862  HBB7705 020310 PDOO:  Allow programs to compile on  * 00047800
*                                         HBB7705 or higher but       * 00047900
*                                         execute on a system that is * 00048000
*                                         at a lower release.  This   * 00048100
*                                         is done by checking the     * 00048200
*                                         length field that is in the * 00048300
*                                         DSAB (DSABLNTH).  If the    * 00048400
*                                         length is greater than 80,  * 00048500
*                                         then the "all" chain can be * 00048600
*                                         used if LOC=ANY was         * 00048700
*                                         specified.  If the DSAB     * 00048800
*                                         length is 80 then default   * 00048900
*                                         to the below the line only  * 00049000
*                                         chain.  These changes are   * 00049100
*                                         only relevent for the NEXT  * 00049200
*                                         function, since that code   * 00049300
*                                         resides in the macro itself * 00049400
*                                         (not the service -          * 00049500
*                                         IEFAB4CC).                  * 00049600
*                                                                     * 00049700
*    $06=OA08415  HBB7705 040730 PDHB:  Ensured the entire            * 00049800
*                                         LCB2&SYSNDX Label is in     * 00049900
*                                         upper case to eliminate the * 00050000
*                                         IEV044/IEV143 -or-          * 00050100
*                                         ASMA044E/ASMA435I assembly  * 00050200
*                                         error messages.  The latter * 00050300
*                                         message pair is from an out * 00050400
*                                         of serivce Assembler level. * 00050500
*                                                                     * 00050600
*    $07=ME11562  HBB7750 080229 PDTY:  Update the macro to reflect   * 00050700
*                                         changes made to the pubs    * 00050800
*                                         (MVS Authorized Assembler   * 00050900
*                                         Services Reference          * 00051000
*                                         EDT-IXG.) Document the need * 00051100
*                                         for SYSZTIOT serialization  * 00051200
*                                         (SHR) by this macro's       * 00051300
*                                         authorized/unauthorized     * 00051400
*                                         callers.                    * 00051500
*                                                                     * 00051600
*    $08=OA25832  HBB7760 080721 PDTA:  Split PL/X to separate macro  * 00051700
*                                         GETDSABP.                   * 00051800
*                                                                     * 00051900
****** END OF SPECIFICATIONS *****************************************/ 00052000
*/********************************************************************* 00052100
         MACRO                                                          00052200
&XLABEL  GETDSAB &DDNAME=,&DCBPTR=,&DSABPTR=,&TCBPTR=,&LOC=,&RETCODE=, *00052300
               &RSNCODE=,&PLISTVER=,&MF=                                00052400
.*                                                                      00052500
*              MACDATE -08/25/08-<0>                                    00052600
.*                                                                      00052700
.*******************************************************************    00052800
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00052900
.*******************************************************************    00053000
              GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                   00053100
              GBLC  &ZTEST      YES=TEST NO=NO TEST                     00053200
              GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX             00053300
.*                                                                      00053400
              GBLC  &ZGETDSAB   YES=MACRO USED AT LEAST ONCE            00053500
.*******************************************************************    00053600
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00053700
.*******************************************************************    00053800
              LCLC  &ZMS        ERROR MESSAGE WORK AREA                 00053900
              LCLC  &ZCNDX      SYSNDX CHARACTERS                       00054000
              LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED              00054100
              LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR             00054200
              LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE             00054300
              LCLA  &ZAWRK      USED AS A WORK AREA                     00054400
              LCLA  &ZASIZ      USED FOR SIZE OF VALUE                  00054500
              LCLA  &ZN         NUMERIC WORK VARIABLE                   00054600
              LCLC  &ZC         CHARACTER WORK VARIABLE                 00054700
              LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE             00054800
              LCLA  &ZTLA       VALUE TOO LONG VARIABLE                 00054900
              LCLC  &ZMAC_G     "G" or null                             00055000
&ZMAC_G       SETC  ''                                                  00055100
              LCLC  &ZMAC_LR                                            00055200
&ZMAC_LR      SETC  'LR'                                                00055300
              LCLC  &ZMAC_L                                             00055400
&ZMAC_L       SETC  'L'                                                 00055500
              LCLC  &ZMAC_ST                                            00055600
&ZMAC_ST      SETC  'ST'                                                00055700
              LCLA  &ZMACRET    MACRO RETURN CODE                       00055800
&ZMACRET      SETA  0           ASSUME NO ERRORS                        00055900
.*                                                                      00056000
              LCLC  &ZCSYSLIST(255)             NONXKEY, POS ARRAY      00056100
              LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()              00056200
              LCLA  &ZPLLEN     PARAMETER LIST LENGTH                   00056300
              LCLC  &ZENDBASEPL                 End of base PL          00056400
              LCLA  &ZPLWORKA   PARAMETER LIST LENGTH                   00056500
.*******************************************************************    00056600
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00056700
.*******************************************************************    00056800
              LCLA  &ZI         INDEX FOR ARRAY                         00056900
              LCLA  &ZJ         INDEX FOR PARMS                         00057000
              LCLA  &ZK         INDEX FOR PARSE                         00057100
              LCLA  &ZLO        LOW RANGE VALUE                         00057200
              LCLA  &ZHI        HIGH RANGE VALUE                        00057300
              LCLC  &ZW         WORK AREA FOR PARM                      00057400
.********************************************************************   00057500
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00057600
.********************************************************************   00057700
              GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL                 00057800
              GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE          00057900
              GBLA  &SYSALVL    SYSSTATE ARCHLVL                        00058000
              GBLC  &SYSAM64    SYSSTATE AMODE64                        00058100
.*                                                                      00058200
              AIF   (K'&SYSASCE GT 0).ZSYS4     SYS STATE DEFINED       00058300
              AIF   (K'&SYSSPLV GT 0).ZSYS2     SP LEVEL DEFINED        00058400
              SPLEVEL  TEST                                             00058500
.ZSYS2        ANOP  ,                                                   00058600
              AIF   ('&SYSSPLV' EQ '1').ZSYS3   PRE SP 3.1              00058700
              AIF   ('&SYSSPLV' EQ '2').ZSYS3   PRE SP 3.1              00058800
              SYSSTATE TEST                                             00058900
              AGO   .ZSYS4                                              00059000
.ZSYS3        ANOP  ,                                                   00059100
&SYSASCE      SETC  'P'         ASSUME SYSSTATE PRIMARY                 00059200
.ZSYS4        ANOP  ,                                                   00059300
.*******************************************************************    00059400
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00059500
.*******************************************************************    00059600
              LCLC  &XPRIMIN    ++ NAME                                 00059700
              LCLC  &XFIRST     ++ NAME                                 00059800
              LCLC  &XNEXT      ++ NAME                                 00059900
              LCLC  &XDDNAME    ++ NAME                                 00060000
              LCLC  &XDCBPTR    ++ NAME                                 00060100
              LCLC  &XDSABPTR   ++ NAME                                 00060200
              LCLC  &XTCBPTR    ++ NAME                                 00060300
              LCLC  &XLOC       ++ VALUE                                00060400
              LCLC  &XRETCODE   ++ NAME                                 00060500
              LCLC  &XRSNCODE   ++ NAME                                 00060600
              LCLA  &XPLISTVER  ++ VALUE                                00060700
              LCLC  &XMF        ++ VALUE                                00060800
              LCLC  &XMFCTRL    ++ NAME                                 00060900
              LCLC  &XMFATTR    ++ VALUE                                00061000
              LCLC  &XMFSCK     ++ VALUE                                00061100
.*******************************************************************    00061200
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00061300
.*******************************************************************    00061400
              LCLC  &ZXPRIMIN   ++ INPUT NAME                           00061500
              LCLC  &ZXFIRST    ++ INPUT NAME                           00061600
              LCLC  &ZXNEXT     ++ INPUT NAME                           00061700
              LCLC  &ZXDDNAME   ++ INPUT NAME                           00061800
              LCLC  &ZXDCBPTR   ++ INPUT NAME                           00061900
              LCLC  &ZXDSABPTR  ++ INOUT NAME                           00062000
              LCLC  &ZXTCBPTR   ++ INPUT NAME                           00062100
              LCLC  &ZXLOC      ++ INPUT VALUE                          00062200
              LCLC  &ZXRETCODE  ++ OUTPUT NAME                          00062300
              LCLC  &ZXRSNCODE  ++ OUTPUT NAME                          00062400
              LCLC  &ZXPLISTVER                 ++ INPUT VALUE          00062500
              LCLC  &ZXMF       ++ INPUT VALUE                          00062600
              LCLC  &ZXMFCTRL   ++ INPUT NAME                           00062700
              LCLC  &ZXMFATTR   ++ INPUT VALUE                          00062800
              LCLC  &ZXMFSCK    ++ INPUT VALUE                          00062900
.********************************************************************   00063000
.***AC.PLV01  PROCESS PLISTVER                                      *   00063100
.********************************************************************   00063200
&XPLISTVER      SETA  0                                                 00063300
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00063400
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00063500
&XPLISTVER      SETA  0                                                 00063600
.ZPLV0          ANOP  ,                                                 00063700
.*                                                                      00063800
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00063900
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00064000
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00064100
.*-------------------------------------------------------------------   00064200
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00064300
&ZMS            SETC  '"PLISTVER='                                      00064400
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00064500
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00064600
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00064700
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00064800
                AGO   .ZPVCK2                                           00064900
.ZPVCK3         ANOP  ,                                                 00065000
.*-------------------------------------------------------------------   00065100
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00065200
&ZMS            SETC  '"PLISTVER='                                      00065300
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00065400
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00065500
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00065600
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00065700
                AGO   .ZPVCKE                                           00065800
.ZPVCK2         ANOP  ,                                                 00065900
.*-------------------------------------------------------------------   00066000
&ZCVAL          SETC  '&PLISTVER(1)'                                    00066100
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00066200
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00066300
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00066400
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00066500
                AIF   (&ZN LE 0).ZPVCK4A   NOT HIGH                     00066600
.ZPVCK6         ANOP  ,                                                 00066700
&ZMS            SETC  '"PLISTVER='                                      00066800
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00066900
&ZMS            SETC  '&ZMS THE RANGE IS "0-0"'                         00067000
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00067100
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00067200
&XPLISTVER      SETA  0                                                 00067300
                AGO   .ZPVCKE                                           00067400
.*-------------------------------------------------------------------   00067500
.ZPVCK4A        ANOP  ,                                                 00067600
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00067700
&ZMS            SETC  'PLISTVER='                                       00067800
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00067900
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00068000
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00068100
                MNOTE 8,' &ZMS IS REQUIRED.'                            00068200
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00068300
                AGO   .ZPVCK5                                           00068400
.ZPVCK4         ANOP  ,                                                 00068500
&XPLISTVER      SETA  &PLISTVER(1)                                      00068600
.ZPVCK5         ANOP  ,                                                 00068700
.ZPVCKE         ANOP  ,                                                 00068800
.********************************************************************   00068900
.***AG.MF01 PROCESS MF MACRO FORMS                                      00069000
.********************************************************************   00069100
              ACTR  10000                                               00069200
.*------------------------------------------------------------------    00069300
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00069400
&XMF          SETC  ''          INITIALIZE XVARIABLE                    00069500
.*-------------------------------------------------------------------   00069600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00069700
.ZG29         ANOP  ,                                                   00069800
&ZTLC         SETC 'S'                                                  00069900
              AIF   ('&MF(1)' NE '&ZTLC').ZG30                          00070000
&XMF          SETC  'S'         SET KEYWORD                             00070100
              AIF   (N'&MF LE 1).ZG29A          CK NUM                  00070200
&ZMS          SETC  '"MF='                                              00070300
&ZMS          SETC  '&ZMS.&MF"'                                         00070400
&ZMS          SETC  '&ZMS "MF"'                                         00070500
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00070600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00070700
.ZG29A        ANOP  ,                                                   00070800
.*-------------------------------------------------------------------   00070900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00071000
.ZG30         ANOP  ,                                                   00071100
&ZTLC         SETC 'L'                                                  00071200
              AIF   ('&MF(1)' NE '&ZTLC').ZG37                          00071300
&XMF          SETC  'L'         SET KEYWORD                             00071400
              AIF   (N'&MF LE 3).ZG30A          CK NUM                  00071500
&ZMS          SETC  '"MF='                                              00071600
&ZMS          SETC  '&ZMS.&MF"'                                         00071700
&ZMS          SETC  '&ZMS "MF"'                                         00071800
              MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'                00071900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00072000
.ZG30A        ANOP  ,                                                   00072100
.*-------------------------------------------------------------------   00072200
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00072300
              AIF   (N'&SYSLIST NE 0).ZG30B     POSITIONALS?            00072400
              AIF   ('&DDNAME' NE '').ZG30B     KEYS?                   00072500
              AIF   ('&DCBPTR' NE '').ZG30B     KEYS?                   00072600
              AIF   ('&DSABPTR' NE '').ZG30B    KEYS?                   00072700
              AIF   ('&TCBPTR' NE '').ZG30B     KEYS?                   00072800
              AIF   ('&LOC' NE '').ZG30B        KEYS?                   00072900
              AIF   ('&RETCODE' NE '').ZG30B    KEYS?                   00073000
              AIF   ('&RSNCODE' NE '').ZG30B    KEYS?                   00073100
              AGO    .ZG30C     INVOCATION OKAY                         00073200
.ZG30B        ANOP  ,                                                   00073300
&ZMS          SETC  'THE "L" FORM OF "MF"'                              00073400
&ZMS          SETC  '&ZMS CAN ONLY HAVE'                                00073500
&ZMS          SETC  '&ZMS THE "PLISTVER" KEY'                           00073600
              MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'              00073700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00073800
.ZG30C        ANOP  ,                                                   00073900
.*-------------------------------------------------------------------   00074000
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00074100
&ZXMFCTRL     SETC  'INPUT'     SET IN/OUTPUT                           00074200
&XMFCTRL      SETC  '&MF(2,1)'  SET XVARIABLE                           00074300
              AIF   (N'&MF(2) GT 1).ZG32B       MULTI PARMS             00074400
&XMFCTRL      SETC  '&MF(2)'    SET XVARIABLE                           00074500
.ZG32B        AIF   (K'&MF(2) GT 0).ZG32C                               00074600
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         00074700
&ZMS          SETC  'WHEN "L" IS SPECIFIED'                             00074800
&ZMS          SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'                 00074900
              MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                        00075000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00075100
.ZG32C        ANOP  ,                                                   00075200
.*-------------------------------------------------------------------   00075300
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00075400
              AIF   (K'&ZXMFCTRL LE 0).ZG32P    NOT I/O                 00075500
              AIF   ('&XMFCTRL'(1,1) NE '(').ZG32P                      00075600
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         00075700
&ZMS          SETC  '"MF='                                              00075800
&ZMS          SETC  '&ZMS.&MF"'                                         00075900
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           00076000
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'                   00076100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00076200
.ZG32P        ANOP  ,                                                   00076300
.*-------------------------------------------------------------------   00076400
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00076500
&ZXMFATTR     SETC  'INPUT'     SET IN/OUTPUT                           00076600
&XMFATTR      SETC  '0D'                                                00076700
              AIF   (K'&MF(3) LE 0).ZG35B       PARM                    00076800
&XMFATTR      SETC  '&MF(3,1)'  SET XVARIABLE                           00076900
              AIF   (N'&MF(3) GT 1).ZG35B       MULTI                   00077000
&XMFATTR      SETC  '&MF(3)'    SET XVARIABLE                           00077100
.ZG35B        ANOP  ,                                                   00077200
.*-------------------------------------------------------------------   00077300
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00077400
              AIF   (K'&ZXMFATTR LE 0).ZG35P    NOT I/O                 00077500
              AIF   ('&XMFATTR'(1,1) NE '(').ZG35P                      00077600
&ZXMFATTR     SETC  ''          RESET IN/OUTPUT                         00077700
&ZMS          SETC  '"MF='                                              00077800
&ZMS          SETC  '&ZMS.&MF"'                                         00077900
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           00078000
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'                   00078100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00078200
.ZG35P        ANOP  ,                                                   00078300
.*-------------------------------------------------------------------   00078400
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00078500
              AIF   (K'&ZXMFATTR LE 0).ZG35S    NOT I/O                 00078600
              AIF   (K'&XMFATTR LE 60).ZG35S    LNG OK                  00078700
&ZXMFATTR     SETC  ''          RESET IN/OUTPUT                         00078800
&ZMS          SETC  '"MF='                                              00078900
&ZMS          SETC  '&ZMS.&MF"'                                         00079000
&ZMS          SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'               00079100
              MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'                  00079200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00079300
.ZG35S        ANOP  ,                                                   00079400
.*-------------------------------------------------------------------   00079500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00079600
.ZG37         ANOP  ,                                                   00079700
&ZTLC         SETC 'E'                                                  00079800
              AIF   ('&MF(1)' NE '&ZTLC').ZG45                          00079900
&XMF          SETC  'E'         SET KEYWORD                             00080000
              AIF   (N'&MF LE 3).ZG37A          CK NUM                  00080100
&ZMS          SETC  '"MF='                                              00080200
&ZMS          SETC  '&ZMS.&MF"'                                         00080300
&ZMS          SETC  '&ZMS "MF"'                                         00080400
              MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'                00080500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00080600
.ZG37A        ANOP  ,                                                   00080700
.*-------------------------------------------------------------------   00080800
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00080900
&ZXMFCTRL     SETC  'INPUT'     SET IN/OUTPUT                           00081000
&XMFCTRL      SETC  '&MF(2,1)'  SET XVARIABLE                           00081100
              AIF   (N'&MF(2) GT 1).ZG39B       MULTI PARMS             00081200
&XMFCTRL      SETC  '&MF(2)'    SET XVARIABLE                           00081300
.ZG39B        AIF   (K'&MF(2) GT 0).ZG39C                               00081400
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         00081500
&ZMS          SETC  'WHEN "E" IS SPECIFIED'                             00081600
&ZMS          SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'                 00081700
              MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                        00081800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00081900
.ZG39C        ANOP  ,                                                   00082000
.*-------------------------------------------------------------------   00082100
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00082200
              AIF   (K'&ZXMFCTRL LE 0).ZG39R    NOT I/O                 00082300
              AIF   ('&XMFCTRL'(1,1) NE '(').ZG39R                      00082400
&ZCGPR        SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                          00082500
              AIF   ('&ZCGPR'(1,1) NE '0').ZG39P                        00082600
              AIF   (K'&ZCGPR GT 2).ZG39Q                               00082700
              AIF   ('&ZCGPR' EQ '0').ZG39Q                             00082800
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00082900
              AIF   (T'&ZCGPR NE 'N').ZG39Q     INVALID REG NAME        00083000
.ZG39P        ANOP  ,                                                   00083100
              AIF   (T'&ZCGPR NE 'N').ZG39R     NON NUMERIC             00083200
              AIF   ('&ZCGPR' LT '1').ZG39Q                             00083300
              AIF   ('&ZCGPR' LE '12').ZG39R                            00083400
.ZG39Q        ANOP  ,                                                   00083500
&ZMS          SETC  '"MF='                                              00083600
&ZMS          SETC  '&ZMS.&MF"'                                         00083700
&ZMS          SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'           00083800
              MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                    00083900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00084000
.ZG39R        ANOP  ,                                                   00084100
.*-------------------------------------------------------------------   00084200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00084300
&XMFSCK       SETC  ''          INITIALIZE XVARIABLE                    00084400
.ZG43A   AIF   ('&MF(3)' NE 'COMPLETE').ZG44A                           00084500
&XMFSCK       SETC  'COMPLETE'  SET KEYWORD                             00084600
.*-------------------------------------------------------------------   00084700
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00084800
.ZG44A        AIF   (K'&XMFSCK GT 0).ZG44C      KEYWORD                 00084900
              AIF   (K'&MF(3) LE 0).ZG44B                               00085000
&ZMS          SETC  '"MF='                                              00085100
&ZMS          SETC  '&ZMS.&MF"'                                         00085200
&ZMS          SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '           00085300
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00085400
&ZMS          SETC  '&ZMS "COMPLETE".'                                  00085500
              MNOTE 8,' &ZMS '                                          00085600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00085700
.ZG44B        ANOP  ,                                                   00085800
&XMFSCK       SETC  'COMPLETE'  SET DEFAULT KEYWORD                     00085900
.ZG44C        ANOP  ,                                                   00086000
&ZXMFSCK      SETC  'INPUT'     SET IN/OUTPUT                           00086100
.*------------------------------------------------------------------    00086200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00086300
.ZG45         ANOP  ,                                                   00086400
&ZXMF         SETC  'INPUT'     SET IN/OUTPUT                           00086500
              AIF   (K'&XMF GT 0).ZG45E         VALID ARG               00086600
              AIF   (T'&MF EQ 'O').ZG45D        OMITTED                 00086700
&ZASYSLNDX    SETA  0                                                   00086800
.ZG45A        ANOP  ,           POSITIONAL MACRO KEY                    00086900
&ZASYSLNDX    SETA  &ZASYSLNDX+1                                        00087000
              AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG45C                    00087100
&ZTLC         SETC 'MF'                                                 00087200
              AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG45A           00087300
.ZG45B        ANOP  ,                                                   00087400
&ZXMF         SETC  ''          RESET IN/OUTPUT                         00087500
&ZMS          SETC  'THE "MF" KEY'                                      00087600
&ZMS          SETC  '&ZMS MUST CONTAIN ONE'                             00087700
              MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                    00087800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00087900
              AGO   .ZG45E                                              00088000
.ZG45C        ANOP  ,                                                   00088100
&ZXMF         SETC  ''          RESET IN/OUTPUT                         00088200
&ZMS          SETC  '"MF='                                              00088300
&ZMS          SETC  '&ZMS.&MF"'                                         00088400
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           00088500
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00088600
&ZMS          SETC  '&ZMS "S",'                                         00088700
&ZMS          SETC  '&ZMS "L",'                                         00088800
&ZMS          SETC  '&ZMS OR "E".'                                      00088900
              MNOTE 8,' &ZMS '                                          00089000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00089100
              AGO   .ZG45E                                              00089200
.ZG45D        ANOP  ,                                                   00089300
&XMF          SETC  'S'         SET DEFAULT KEYWORD                     00089400
&XMFSCK       SETC  'COMPLETE'  COMPLETE CHECKING                       00089500
.ZG45E        ANOP  ,                                                   00089600
.********************************************************************   00089700
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00089800
.********************************************************************   00089900
              ACTR  10000                                               00090000
.*-------------------------------------------------------------------   00090100
.***AG.MF03 MF=(SLE)                                                    00090200
              AIF   ('&XMF' EQ 'L').ZGMFX                               00090300
.*-------------------------------------------------------------------   00090400
.***AG.KMEKY05 NAME, RQD INPUT, ME KEYS -NO ARGUMENTS                   00090500
&XPRIMIN      SETC  ''          INITIALIZE XVARIABLE                    00090600
&ZASYSLNDX    SETA  0                                                   00090700
.ZG2A         ANOP  ,           POSITIONAL KEY SEARCH                   00090800
&ZASYSLNDX    SETA  &ZASYSLNDX+1                NEXT POSITIONAL         00090900
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG2B  DONE                    00091000
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG2A             00091100
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'FIRST').ZG2A                 00091200
&ZCSYSLIST(&ZASYSLNDX) SETC 'NONXKEY'           KEY IS NON-XKEY         00091300
&ZXPRIMIN     SETC  'INPUT'     SET IN/OUTPUT                           00091400
&XPRIMIN      SETC  'FIRST'     SET XVARIABLE                           00091500
&ZXFIRST      SETC  'INPUT'     SET IN/OUTPUT                           00091600
&XFIRST       SETC  'FIRST'     SET XVARIABLE PARM                      00091700
.ZG2B         ANOP  ,                                                   00091800
.*-------------------------------------------------------------------   00091900
.***AG.KMEKY06 NAME, RQD INPUT, ME KEYS -NO ARGUMENTS                   00092000
&ZASYSLNDX    SETA  0                                                   00092100
.ZG3A         ANOP  ,           POSITIONAL KEY SEARCH                   00092200
&ZASYSLNDX    SETA  &ZASYSLNDX+1                NEXT POSITIONAL         00092300
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG3C  DONE                    00092400
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZG3A             00092500
         AIF   ('&SYSLIST(&ZASYSLNDX)' NE 'NEXT').ZG3A                  00092600
&ZCSYSLIST(&ZASYSLNDX) SETC 'NONXKEY'           KEY IS NON-XKEY         00092700
              AIF   (K'&XPRIMIN LE 0).ZG3B      VALID                   00092800
&ZMS          SETC  '"NEXT'                                             00092900
&ZMS          SETC  '&ZMS."'                                            00093000
&ZMS          SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'               00093100
&ZMS          SETC  '&ZMS "&XPRIMIN"'                                   00093200
              MNOTE 8,' &ZMS KEY.'                                      00093300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00093400
              AGO   .ZG3C                                               00093500
.*                                                                      00093600
.ZG3B         ANOP  ,                                                   00093700
&ZXPRIMIN     SETC  'INPUT'     SET IN/OUTPUT                           00093800
&XPRIMIN      SETC  'NEXT'      SET XVARIABLE                           00093900
&ZXNEXT       SETC  'INPUT'     SET IN/OUTPUT                           00094000
&XNEXT        SETC  'NEXT'      SET XVARIABLE PARM                      00094100
.ZG3C         ANOP  ,                                                   00094200
.*----------------------------------------------------------------***   00094300
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00094400
              AIF   (K'&DDNAME LE 0).ZG4D       NO ME KEY               00094500
              AIF   (N'&DDNAME LE 1).ZG4A       CK NUM                  00094600
&ZMS          SETC  '"DDNAME='                                          00094700
&ZMS          SETC  '&ZMS.&DDNAME"'                                     00094800
&ZMS          SETC  '&ZMS "DDNAME"'                                     00094900
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00095000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00095100
.ZG4A         AIF   (K'&XPRIMIN LE 0).ZG4B                              00095200
&ZMS          SETC  '"DDNAME'                                           00095300
&ZMS          SETC  '&ZMS.=&DDNAME"'                                    00095400
&ZMS          SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'               00095500
&ZMS          SETC  '&ZMS "&XPRIMIN"'                                   00095600
              MNOTE 8,' &ZMS KEY.'                                      00095700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00095800
              AGO   .ZG4D                                               00095900
.*                                                                      00096000
.ZG4B         ANOP  ,                                                   00096100
&ZXPRIMIN     SETC  'INPUT'     SET IN/OUTPUT                           00096200
&XPRIMIN      SETC  'DDNAME'    SET XVARIABLE                           00096300
&ZXDDNAME     SETC  'INPUT'     SET IN/OUTPUT                           00096400
&XDDNAME      SETC  '&DDNAME(1)'                SET XVARIABLE PARM      00096500
              AIF   (N'&DDNAME GT 1).ZG4C                               00096600
&XDDNAME      SETC  '&DDNAME'   SET XVARIABLE PARM                      00096700
.ZG4C         AIF   (K'&XDDNAME GT 0).ZG4D      ONE PARM                00096800
&ZXPRIMIN     SETC  ''          RESET IN/OUTPUT                         00096900
&ZXDDNAME     SETC  ''          RESET IN/OUTPUT                         00097000
&ZMS          SETC  ' '                                                 00097100
&ZMS          SETC  '&ZMS "DDNAME" KEY AND ITS'                         00097200
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00097300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00097400
.ZG4D         ANOP  ,                                                   00097500
.*----------------------------------------------------------------***   00097600
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00097700
              AIF   (K'&DCBPTR LE 0).ZG5D       NO ME KEY               00097800
              AIF   (N'&DCBPTR LE 1).ZG5A       CK NUM                  00097900
&ZMS          SETC  '"DCBPTR='                                          00098000
&ZMS          SETC  '&ZMS.&DCBPTR"'                                     00098100
&ZMS          SETC  '&ZMS "DCBPTR"'                                     00098200
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00098300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00098400
.ZG5A         AIF   (K'&XPRIMIN LE 0).ZG5B                              00098500
&ZMS          SETC  '"DCBPTR'                                           00098600
&ZMS          SETC  '&ZMS.=&DCBPTR"'                                    00098700
&ZMS          SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'               00098800
&ZMS          SETC  '&ZMS "&XPRIMIN"'                                   00098900
              MNOTE 8,' &ZMS KEY.'                                      00099000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00099100
              AGO   .ZG5D                                               00099200
.*                                                                      00099300
.ZG5B         ANOP  ,                                                   00099400
&ZXPRIMIN     SETC  'INPUT'     SET IN/OUTPUT                           00099500
&XPRIMIN      SETC  'DCBPTR'    SET XVARIABLE                           00099600
&ZXDCBPTR     SETC  'INPUT'     SET IN/OUTPUT                           00099700
&XDCBPTR      SETC  '&DCBPTR(1)'                SET XVARIABLE PARM      00099800
              AIF   (N'&DCBPTR GT 1).ZG5C                               00099900
&XDCBPTR      SETC  '&DCBPTR'   SET XVARIABLE PARM                      00100000
.ZG5C         AIF   (K'&XDCBPTR GT 0).ZG5D      ONE PARM                00100100
&ZXPRIMIN     SETC  ''          RESET IN/OUTPUT                         00100200
&ZXDCBPTR     SETC  ''          RESET IN/OUTPUT                         00100300
&ZMS          SETC  ' '                                                 00100400
&ZMS          SETC  '&ZMS "DCBPTR" KEY AND ITS'                         00100500
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00100600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00100700
.ZG5D         ANOP  ,                                                   00100800
.*------------------------------------------------------------------    00100900
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           00101000
              AIF   (K'&XPRIMIN GT 0).ZG6B                              00101100
&ZXPRIMIN     SETC  ''          RESET IN/OUTPUT                         00101200
&ZXFIRST      SETC  ''          RESET IN/OUTPUT                         00101300
&XPRIMIN      SETC  ''          ENSURE NULL                             00101400
&XFIRST       SETC  ''          ENSURE NULL                             00101500
&ZMS          SETC  'ONE OF THE FOLLOWING'                              00101600
&ZMS          SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'                 00101700
&ZMS          SETC  '&ZMS REQUIRED:'                                    00101800
&ZMS          SETC  '&ZMS "FIRST",'             VALID ME KEY            00101900
&ZMS          SETC  '&ZMS "NEXT",'              VALID ME KEY            00102000
&ZMS          SETC  '&ZMS "DDNAME",'            VALID ME KEY            00102100
&ZMS          SETC  '&ZMS OR "DCBPTR".'         VALID ME KEY            00102200
              MNOTE 8,' &ZMS '                                          00102300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00102400
.ZG6B         ANOP  ,                                                   00102500
.*-------------------------------------------------------------------   00102600
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00102700
.ZG2ZY  AIF    ('&XPRIMIN' NE 'FIRST').ZG3ZY                            00102800
.*-------------------------------------------------------------------   00102900
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00103000
.ZG3ZY  AIF    ('&XPRIMIN' NE 'NEXT').ZG4ZY                             00103100
.*-------------------------------------------------------------------   00103200
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00103300
.ZG4ZY  AIF    ('&XPRIMIN' NE 'DDNAME').ZG5ZY                           00103400
.*-------------------------------------------------------------------   00103500
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00103600
              AIF   (K'&ZXDDNAME LE 0).ZG4R     NOT I/O                 00103700
              AIF   ('&XDDNAME'(1,1) NE '(').ZG4R                       00103800
&ZCGPR        SETC  '&XDDNAME'(2,K'&XDDNAME-2)                          00103900
              AIF   ('&ZCGPR'(1,1) NE '0').ZG4P                         00104000
              AIF   (K'&ZCGPR GT 2).ZG4Q                                00104100
              AIF   ('&ZCGPR' EQ '0').ZG4Q                              00104200
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00104300
              AIF   (T'&ZCGPR NE 'N').ZG4Q      INVALID REG NAME        00104400
.ZG4P         ANOP  ,                                                   00104500
              AIF   (T'&ZCGPR NE 'N').ZG4R      NON NUMERIC             00104600
              AIF   ('&ZCGPR' LT '2').ZG4Q                              00104700
              AIF   ('&ZCGPR' LE '12').ZG4R                             00104800
.ZG4Q         ANOP  ,                                                   00104900
&ZMS          SETC  '"DDNAME='                                          00105000
&ZMS          SETC  '&ZMS.&DDNAME"'                                     00105100
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00105200
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00105300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00105400
.ZG4R         ANOP  ,                                                   00105500
.*-------------------------------------------------------------------   00105600
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00105700
.ZG5ZY  AIF    ('&XPRIMIN' NE 'DCBPTR').ZG6ZY                           00105800
.*-------------------------------------------------------------------   00105900
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00106000
              AIF   (K'&ZXDCBPTR LE 0).ZG5R     NOT I/O                 00106100
              AIF   ('&XDCBPTR'(1,1) NE '(').ZG5R                       00106200
&ZCGPR        SETC  '&XDCBPTR'(2,K'&XDCBPTR-2)                          00106300
              AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                         00106400
              AIF   (K'&ZCGPR GT 2).ZG5Q                                00106500
              AIF   ('&ZCGPR' EQ '0').ZG5Q                              00106600
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00106700
              AIF   (T'&ZCGPR NE 'N').ZG5Q      INVALID REG NAME        00106800
.ZG5P         ANOP  ,                                                   00106900
              AIF   (T'&ZCGPR NE 'N').ZG5R      NON NUMERIC             00107000
              AIF   ('&ZCGPR' LT '2').ZG5Q                              00107100
              AIF   ('&ZCGPR' LE '12').ZG5R                             00107200
.ZG5Q         ANOP  ,                                                   00107300
&ZMS          SETC  '"DCBPTR='                                          00107400
&ZMS          SETC  '&ZMS.&DCBPTR"'                                     00107500
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00107600
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00107700
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00107800
.ZG5R         ANOP  ,                                                   00107900
.*-------------------------------------------------------------------   00108000
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            00108100
.ZG6ZY        ANOP ,            END MUTUALLY EXCLUSIVE KEYS             00108200
.*----------------------------------------------------------------***   00108300
.***AG.KXVAR05 NAME, RQD INOUT, KEYS -XVARIABLE KEY                     00108400
              AIF   (N'&DSABPTR LE 1).ZG8A      CK NUM                  00108500
&ZMS          SETC  '"DSABPTR='                                         00108600
&ZMS          SETC  '&ZMS.&DSABPTR"'                                    00108700
&ZMS          SETC  '&ZMS "DSABPTR"'                                    00108800
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00108900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00109000
.ZG8A         ANOP  ,                                                   00109100
.*-------------------------------------------------------------------   00109200
.***AG.KXVAR06 NAME, RQD INOUT, KEYS -XVARIABLE                         00109300
&ZXDSABPTR    SETC  'INOUT'     SET IN/OUTPUT                           00109400
&XDSABPTR     SETC  '&DSABPTR(1)'               SET XVARIABLE           00109500
              AIF   (N'&DSABPTR GT 1).ZG8B      MULTI PARMS             00109600
&XDSABPTR     SETC  '&DSABPTR'  SET XVARIABLE                           00109700
.ZG8B         AIF   (K'&DSABPTR(1) GT 0).ZG8C                           00109800
&ZXDSABPTR    SETC  ''          RESET IN/OUTPUT                         00109900
&ZMS          SETC  ' '                                                 00110000
&ZMS          SETC  '&ZMS "DSABPTR" KEY AND ITS'                        00110100
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00110200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00110300
.ZG8C         ANOP  ,                                                   00110400
.*-------------------------------------------------------------------   00110500
.***AG.KCK02 NAME, RQD INOUT, KEYS -GPR OUT OF RANGE                    00110600
              AIF   (K'&ZXDSABPTR LE 0).ZG8R    NOT I/O                 00110700
              AIF   ('&XDSABPTR'(1,1) NE '(').ZG8R                      00110800
&ZCGPR        SETC  '&XDSABPTR'(2,K'&XDSABPTR-2)                        00110900
              AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                         00111000
              AIF   (K'&ZCGPR GT 2).ZG8Q                                00111100
              AIF   ('&ZCGPR' EQ '0').ZG8Q                              00111200
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00111300
              AIF   (T'&ZCGPR NE 'N').ZG8Q      INVALID REG NAME        00111400
.ZG8P         ANOP  ,                                                   00111500
              AIF   (T'&ZCGPR NE 'N').ZG8R      NON NUMERIC             00111600
              AIF   ('&ZCGPR' LT '2').ZG8Q                              00111700
              AIF   ('&ZCGPR' LE '12').ZG8R                             00111800
.ZG8Q         ANOP  ,                                                   00111900
&ZMS          SETC  '"DSABPTR='                                         00112000
&ZMS          SETC  '&ZMS.&DSABPTR"'                                    00112100
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00112200
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00112300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00112400
.ZG8R         ANOP  ,                                                   00112500
.*----------------------------------------------------------------***   00112600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00112700
              AIF   (N'&TCBPTR LE 1).ZG11A      CK NUM                  00112800
&ZMS          SETC  '"TCBPTR='                                          00112900
&ZMS          SETC  '&ZMS.&TCBPTR"'                                     00113000
&ZMS          SETC  '&ZMS "TCBPTR"'                                     00113100
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00113200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00113300
.ZG11A        ANOP  ,                                                   00113400
.*-------------------------------------------------------------------   00113500
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00113600
&ZXTCBPTR     SETC  'INPUT'     SET IN/OUTPUT                           00113700
&XTCBPTR      SETC  '0'                                                 00113800
              AIF   (K'&TCBPTR(1) LE 0).ZG11B   PARM                    00113900
&XTCBPTR      SETC  '&TCBPTR(1)'                SET XVARIABLE           00114000
              AIF   (N'&TCBPTR GT 1).ZG11B      MULTI                   00114100
&XTCBPTR      SETC  '&TCBPTR'   SET XVARIABLE                           00114200
.ZG11B        ANOP  ,                                                   00114300
.*-------------------------------------------------------------------   00114400
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00114500
              AIF   (K'&ZXTCBPTR LE 0).ZG11R    NOT I/O                 00114600
         AIF   ('&XTCBPTR' EQ '0').ZG11R                                00114700
              AIF   ('&XTCBPTR'(1,1) NE '(').ZG11R                      00114800
&ZCGPR        SETC  '&XTCBPTR'(2,K'&XTCBPTR-2)                          00114900
              AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                        00115000
              AIF   (K'&ZCGPR GT 2).ZG11Q                               00115100
              AIF   ('&ZCGPR' EQ '0').ZG11Q                             00115200
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00115300
              AIF   (T'&ZCGPR NE 'N').ZG11Q     INVALID REG NAME        00115400
.ZG11P        ANOP  ,                                                   00115500
              AIF   (T'&ZCGPR NE 'N').ZG11R     NON NUMERIC             00115600
              AIF   ('&ZCGPR' LT '2').ZG11Q                             00115700
              AIF   ('&ZCGPR' LE '12').ZG11R                            00115800
.ZG11Q        ANOP  ,                                                   00115900
&ZMS          SETC  '"TCBPTR='                                          00116000
&ZMS          SETC  '&ZMS.&TCBPTR"'                                     00116100
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00116200
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00116300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00116400
.ZG11R        ANOP  ,                                                   00116500
.*----------------------------------------------------------------***   00116600
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00116700
              AIF   (N'&LOC LE 1).ZG14A         CK NUM                  00116800
&ZMS          SETC  '"LOC='                                             00116900
&ZMS          SETC  '&ZMS.&LOC"'                                        00117000
&ZMS          SETC  '&ZMS "LOC"'                                        00117100
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00117200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00117300
.ZG14A        ANOP  ,                                                   00117400
.*-------------------------------------------------------------------   00117500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00117600
&XLOC         SETC  ''          INITIALIZE XVARIABLE                    00117700
.ZG15A   AIF   ('&LOC(1)' NE 'BELOW').ZG16A                             00117800
&XLOC         SETC  'BELOW'     SET KEYWORD                             00117900
.*-------------------------------------------------------------------   00118000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00118100
.ZG16A   AIF   ('&LOC(1)' NE 'ANY').ZG17A                               00118200
&XLOC         SETC  'ANY'       SET KEYWORD                             00118300
.*-------------------------------------------------------------------   00118400
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00118500
.ZG17A        AIF   (K'&XLOC GT 0).ZG17C        KEYWORD                 00118600
              AIF   (K'&LOC(1) LE 0).ZG17B                              00118700
&ZMS          SETC  '"LOC='                                             00118800
&ZMS          SETC  '&ZMS.&LOC"'                                        00118900
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           00119000
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00119100
&ZMS          SETC  '&ZMS "BELOW"'                                      00119200
&ZMS          SETC  '&ZMS OR "ANY".'                                    00119300
              MNOTE 8,' &ZMS '                                          00119400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00119500
.ZG17B        ANOP  ,                                                   00119600
&XLOC         SETC  'BELOW'     SET DEFAULT KEYWORD                     00119700
.ZG17C        ANOP  ,                                                   00119800
&ZXLOC        SETC  'INPUT'     SET IN/OUTPUT                           00119900
.*----------------------------------------------------------------***   00120000
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00120100
              AIF   (N'&RETCODE LE 1).ZG19A     CK NUM                  00120200
&ZMS          SETC  '"RETCODE='                                         00120300
&ZMS          SETC  '&ZMS.&RETCODE"'                                    00120400
&ZMS          SETC  '&ZMS "RETCODE"'                                    00120500
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00120600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00120700
.ZG19A        ANOP  ,                                                   00120800
.*-------------------------------------------------------------------   00120900
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00121000
              AIF   (K'&RETCODE(1) LE 0).ZG19C  NO PARM                 00121100
&ZXRETCODE    SETC  'OUTPUT'    SET OUTPUT                              00121200
&XRETCODE     SETC  '&RETCODE(1)'               SET XVARIABLE           00121300
              AIF   (N'&RETCODE GT 1).ZG19C                             00121400
&XRETCODE     SETC  '&RETCODE'  SET XVARIABLE                           00121500
.ZG19C        ANOP  ,                                                   00121600
.*-------------------------------------------------------------------   00121700
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00121800
              AIF   (K'&ZXRETCODE LE 0).ZG19R   NOT I/O                 00121900
              AIF   ('&XRETCODE'(1,1) NE '(').ZG19R                     00122000
&ZCGPR        SETC  '&XRETCODE'(2,K'&XRETCODE-2)                        00122100
              AIF   ('&ZCGPR'(1,1) NE '0').ZG19P                        00122200
              AIF   (K'&ZCGPR GT 2).ZG19Q                               00122300
              AIF   ('&ZCGPR' EQ '0').ZG19Q                             00122400
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00122500
              AIF   (T'&ZCGPR NE 'N').ZG19Q     INVALID REG NAME        00122600
.ZG19P        ANOP  ,                                                   00122700
              AIF   (T'&ZCGPR NE 'N').ZG19R     NON NUMERIC             00122800
              AIF   ('&ZCGPR' EQ '15').ZG19R                            00122900
              AIF   ('&ZCGPR' LT '2').ZG19Q                             00123000
              AIF   ('&ZCGPR' LE '12').ZG19R                            00123100
.ZG19Q        ANOP  ,                                                   00123200
&ZMS          SETC  '"RETCODE='                                         00123300
&ZMS          SETC  '&ZMS.&RETCODE"'                                    00123400
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00123500
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12) OR (15).'            00123600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00123700
.ZG19R        ANOP  ,                                                   00123800
.*----------------------------------------------------------------***   00123900
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00124000
              AIF   (N'&RSNCODE LE 1).ZG22A     CK NUM                  00124100
&ZMS          SETC  '"RSNCODE='                                         00124200
&ZMS          SETC  '&ZMS.&RSNCODE"'                                    00124300
&ZMS          SETC  '&ZMS "RSNCODE"'                                    00124400
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00124500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00124600
.ZG22A        ANOP  ,                                                   00124700
.*-------------------------------------------------------------------   00124800
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00124900
              AIF   (K'&RSNCODE(1) LE 0).ZG22C  NO PARM                 00125000
&ZXRSNCODE    SETC  'OUTPUT'    SET OUTPUT                              00125100
&XRSNCODE     SETC  '&RSNCODE(1)'               SET XVARIABLE           00125200
              AIF   (N'&RSNCODE GT 1).ZG22C                             00125300
&XRSNCODE     SETC  '&RSNCODE'  SET XVARIABLE                           00125400
.ZG22C        ANOP  ,                                                   00125500
.*-------------------------------------------------------------------   00125600
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00125700
              AIF   (K'&ZXRSNCODE LE 0).ZG22R   NOT I/O                 00125800
              AIF   ('&XRSNCODE'(1,1) NE '(').ZG22R                     00125900
&ZCGPR        SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                        00126000
              AIF   ('&ZCGPR'(1,1) NE '0').ZG22P                        00126100
              AIF   (K'&ZCGPR GT 2).ZG22Q                               00126200
              AIF   ('&ZCGPR' EQ '0').ZG22R                             00126300
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00126400
              AIF   (T'&ZCGPR NE 'N').ZG22Q     INVALID REG NAME        00126500
.ZG22P        ANOP  ,                                                   00126600
              AIF   (T'&ZCGPR NE 'N').ZG22R     NON NUMERIC             00126700
              AIF   ('&ZCGPR' EQ '0').ZG22R                             00126800
              AIF   ('&ZCGPR' LT '2').ZG22Q                             00126900
              AIF   ('&ZCGPR' LE '12').ZG22R                            00127000
.ZG22Q        ANOP  ,                                                   00127100
&ZMS          SETC  '"RSNCODE='                                         00127200
&ZMS          SETC  '&ZMS.&RSNCODE"'                                    00127300
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00127400
              MNOTE 8,' &ZMS IN THE RANGE (0) OR (2)-(12).'             00127500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00127600
.ZG22R        ANOP  ,                                                   00127700
.******************************************************************     00127800
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00127900
.******************************************************************     00128000
              ACTR  10000                                               00128100
.*-------------------------------------------------------------------   00128200
.***AH.P03 EXTRA POSITIONALS AMONG NON-X KEYS                           00128300
&ZCVAL        SETC  ''          ERROR FIELD                             00128400
&ZAWRK        SETA  0           POSITIONAL COUNTER                      00128500
&ZASYSLNDX    SETA  0           NON-X KEY COUNTER                       00128600
.ZGLIST2      ANOP  ,                                                   00128700
&ZASYSLNDX    SETA  &ZASYSLNDX+1                NEXT NON-X KEY          00128800
         AIF   (&ZASYSLNDX GT N'&SYSLIST).ZGLIST3  DONE                 00128900
         AIF   ('&ZCSYSLIST(&ZASYSLNDX)' EQ 'NONXKEY').ZGLIST2          00129000
&ZAWRK        SETA  &ZAWRK+1    NEXT POSITIONAL                         00129100
              AIF   (&ZAWRK LE 0).ZGLIST2                               00129200
&ZCVAL        SETC '&ZCVAL,&SYSLIST(&ZASYSLNDX)'  EXTRA                 00129300
              AGO   .ZGLIST2                                            00129400
.*                                                                      00129500
.ZGLIST3  AIF  (K'&ZCVAL LE 0).ZGLISTX                                  00129600
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)       STRIP COMMA             00129700
&ZMS          SETC  'POSITIONAL ARGUMENT(S),'                           00129800
&ZMS          SETC  '&ZMS "&ZCVAL"'                                     00129900
&ZMS          SETC  '&ZMS CANNOT BE USED.'                              00130000
&ZMS          SETC  '&ZMS NO POSITIONAL ARGUMENTS'                      00130100
              MNOTE 8,' &ZMS ARE ALLOWED.'                              00130200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00130300
.ZGLISTX      ANOP  ,                                                   00130400
&ZASYSLNDX    SETA  0                                                   00130500
.*-------------------------------------------------------------------   00130600
.***AG.MF04 MF=(SLE)                                                    00130700
.ZGMFX        ANOP  ,           END OF FULL SYNTAX CHECK                00130800
.*******************************************************************    00130900
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00131000
.*******************************************************************    00131100
              AIF   (&ZMACRET NE 0).ZLX2        ERROR DETECTED          00131200
.*******************************************************************    00131300
.***AE.01  START OF GETDSAB MACRO CODE                                  00131400
.*******************************************************************    00131500
              LCLC  &M0M0001                 NAME                       00131600
&M0M0001      SETC  '&XLABEL'                SET NAME                   00131700
              AIF   (K'&XLABEL NE 0).XLAB2                              00131800
&M0M0001      SETC  'M00M&SYSNDX'            DEFAULT NAME               00131900
.*                                                                      00132000
.XLAB2        ANOP  ,                                                   00132100
              AIF   ('&XMF' EQ 'L').XLAB3                               00132200
&M0M0001 DS    0H                             GETDSAB-0                 00132300
.XLAB3        ANOP  ,                                                   00132400
.*******************************************************************    00132500
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00132600
.*******************************************************************    00132700
              PUSH  PRINT                                               00132800
              AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON          00132900
              PRINT OFF         ++ PR01                                 00133000
              AGO   .ZPRNTXX                                            00133100
.ZPRINTX      PRINT ON                                                  00133200
.ZPRNTXX      ANOP  ,                                                   00133300
.********************************************************************   00133400
.***AL.A01  INTERNAL ARRAY TO PRODUCE FORMATTED CODE                    00133500
.********************************************************************   00133600
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00133700
                      LCLA  &ZOPN1         INVOCATION INDEX             00133800
                      LCLC  &ZOPL(4095)    LABEL                        00133900
                      LCLC  &ZOPO(4095)    OPERATION                    00134000
                      LCLC  &ZOPV(4095)    VALUE                        00134100
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00134200
.*                                                                      00134300
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00134400
.*-------------------------------------------------------------------   00134500
.***AL.A10 SET ZPLLEN                                                   00134600
&ZPLLEN               SETA 16                                           00134700
.******************************************************************     00134800
.***AL.A05 GETDSAB FMT=ARG MF=S PARAMETER AREA                          00134900
.******************************************************************     00135000
                      AIF   ('&XMF' NE 'S').ZLMFSX  NOT STANDARD MF     00135100
&XMFCTRL              SETC  '#Z'.'&SYSNDX'.'A'                          00135200
&ZN                   SETA  &ZPLLEN/4                                   00135300
&ZCVAL                SETC  '&ZN'.'A'                                   00135400
.*                                                                      00135500
&ZOPN                 SETA  &ZOPN+1                                     00135600
&ZOPL(&ZOPN)          SETC  ' '                                         00135700
                      AIF   (&SYSALVL NE 0).ZALVL1A                     00135800
&ZOPO(&ZOPN)          SETC  'B'                                         00135900
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00136000
                      AGO   .ZALVL1B                                    00136100
.ZALVL1A              ANOP                                              00136200
&ZOPO(&ZOPN)          SETC  'CNOP'                                      00136300
&ZOPV(&ZOPN)          SETC  '0,4'                                       00136400
&ZOPN                 SETA  &ZOPN+1                                     00136500
&ZOPL(&ZOPN)          SETC  ' '                                         00136600
&ZOPO(&ZOPN)          SETC  'BRAS'                                      00136700
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              00136800
.ZALVL1B              ANOP                                              00136900
&ZOPD(&ZOPN)          SETC  '++ GETDSAB ARG PARMS'                      00137000
.*                                                                      00137100
&ZOPN                 SETA  &ZOPN+1                                     00137200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL'                                  00137300
&ZOPO(&ZOPN)          SETC  'DS'                                        00137400
&ZOPV(&ZOPN)          SETC  '&ZCVAL'                                    00137500
&ZOPD(&ZOPN)          SETC  '++ GETDSAB ARG PARMS'                      00137600
.*-------------------------------------------------------------------   00137700
.***AL.A07 GETDSAB FMT=ARG MF=S PARAMETERS                              00137800
&ZOPN                 SETA  &ZOPN+1                                     00137900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00138000
&ZOPO(&ZOPN)          SETC  'DC'                                        00138100
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00138200
&ZOPD(&ZOPN)          SETC  '++ GETDSAB ARG PARMS'                      00138300
.*                                                                      00138400
.ZLMFSX               ANOP  ,                                           00138500
.******************************************************************     00138600
.***AL.AL01 GETDSAB FMT=ARG MF=L PARAMETER AREA                         00138700
.******************************************************************     00138800
                      AIF   ('&XMF' NE 'L').ZLMFLX  NOT MF=L            00138900
&ZOPN                 SETA  &ZOPN+1                                     00139000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL'                                  00139100
&ZOPO(&ZOPN)          SETC  'DS'                                        00139200
&ZOPV(&ZOPN)          SETC  '&XMFATTR'                                  00139300
&ZOPD(&ZOPN)          SETC  '++ GETDSAB ARG PARMS'                      00139400
.*                                                                      00139500
&ZOPN                 SETA  &ZOPN+1                                     00139600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTCBPTR@'                        00139700
&ZOPO(&ZOPN)          SETC  'DS'                                        00139800
&ZOPV(&ZOPN)          SETC  'A'                                         00139900
&ZOPD(&ZOPN)          SETC  '++ INPUT A'                                00140000
.*                                                                      00140100
&ZOPN                 SETA  &ZOPN+1                                     00140200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XDCBPTR@'                        00140300
&ZOPO(&ZOPN)          SETC  'DS'                                        00140400
&ZOPV(&ZOPN)          SETC  'A'                                         00140500
&ZOPD(&ZOPN)          SETC  '++ INPUT A'                                00140600
.*                                                                      00140700
&ZOPN                 SETA  &ZOPN+1                                     00140800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XDDNAME@'                        00140900
&ZOPO(&ZOPN)          SETC  'DS'                                        00141000
&ZOPV(&ZOPN)          SETC  'A'                                         00141100
&ZOPD(&ZOPN)          SETC  '++ INPUT CL8'                              00141200
.*                                                                      00141300
&ZOPN                 SETA  &ZOPN+1                                     00141400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XDSABPTR@'                       00141500
&ZOPO(&ZOPN)          SETC  'DS'                                        00141600
&ZOPV(&ZOPN)          SETC  'A'                                         00141700
&ZOPD(&ZOPN)          SETC  '++ INOUT A'                                00141800
.*-------------------------------------------------------------------   00141900
.***AL.AL08 GETDSAB FMT=ARG MF=L PARAMETER AREA DEFINED                 00142000
                      AGO   .ZMFLX         EXIT, MF=L DONE              00142100
.*                                                                      00142200
.ZLMFLX               ANOP  ,                                           00142300
.********************************************************************   00142400
.***AI.A01 GETDSAB FMT=ARG FILL IN PARAMETER AREA                       00142500
.********************************************************************   00142600
                      ACTR  10000                                       00142700
&ZOPN                 SETA  &ZOPN+1                                     00142800
&ZOPL(&ZOPN)          SETC  ' '                                         00142900
&ZOPO(&ZOPN)          SETC  'XR'                                        00143000
&ZOPV(&ZOPN)          SETC  '0,0'                                       00143100
&ZOPD(&ZOPN)          SETC  '++ SET GPR TO ZERO'                        00143200
.*                                                                      00143300
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00143400
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSTATE PRI     00143500
&ZCVAL                SETC  'LAE'          XAX MODE                     00143600
.ZIMFXA               ANOP ,                                            00143700
.*                                                                      00143800
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00143900
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00144000
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00144100
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00144200
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00144300
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00144400
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00144500
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00144600
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00144700
&ZOPN                 SETA  &ZOPN+1                                     00144800
&ZOPL(&ZOPN)          SETC  ' '                                         00144900
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00145000
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00145100
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00145200
                      AGO   .ZIMFNX                                     00145300
.*                                                                      00145400
.ZIMFN2               ANOP ,                                            00145500
&ZOPN                 SETA  &ZOPN+1                                     00145600
&ZOPL(&ZOPN)          SETC  ' '                                         00145700
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00145800
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00145900
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00146000
.ZIMFNX               ANOP ,                                            00146100
.********************************************************************   00146200
.***AI.A02 GETDSAB FMT=ARG INITIALIZE PARAMETER AREA                    00146300
.********************************************************************   00146400
.***AI.L03 MF=(SLE)                                                     00146500
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00146600
.*                                                                      00146700
&ZOPN                 SETA  &ZOPN+1                                     00146800
&ZOPL(&ZOPN)          SETC  ' '                                         00146900
&ZOPO(&ZOPN)          SETC  'XC'                                        00147000
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00147100
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00147200
.ZIMFLX               ANOP  ,                                           00147300
.*-------------------------------------------------------------------   00147400
.***AI.A06 BIND=NAME ADDR XTCBPTR A INPUT                               00147500
         AIF   ('&ZXTCBPTR' EQ '').ZI1G    NOT USED                     00147600
&ZCGPR   SETC  '14'                                                     00147700
&ZCLNG                SETC  '&XTCBPTR'                                  00147800
         AIF   ('&XTCBPTR'(1,1) NE '(').ZI1A  NOT IN GPR                00147900
&ZCGPR   SETC  '&XTCBPTR'(2,K'&XTCBPTR-2)                               00148000
         AGO   .ZI1F                                                    00148100
.*                                                                      00148200
.ZI1A                 ANOP  ,                                           00148300
        AIF   ('&XTCBPTR' EQ '0').ZI1G                                  00148400
&ZOPN                 SETA  &ZOPN+1                                     00148500
&ZOPL(&ZOPN)          SETC  ' '                                         00148600
&ZOPO(&ZOPN)          SETC  'LA'                                        00148700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00148800
&ZOPD(&ZOPN)          SETC  '++ BIND=NAME A'                            00148900
.*                                                                      00149000
.ZI1F                 ANOP  ,                                           00149100
&ZOPN                 SETA  &ZOPN+1                                     00149200
&ZOPL(&ZOPN)          SETC  ' '                                         00149300
&ZOPO(&ZOPN)          SETC  'ST'                                        00149400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0(,1)'                              00149500
&ZOPD(&ZOPN)          SETC  '++ &ZXTCBPTR XTCBPTR ADDR'                 00149600
.ZI1G                 ANOP  ,                                           00149700
.*-------------------------------------------------------------------   00149800
.***AI.A06 BIND=NAME ADDR XDCBPTR A INPUT                               00149900
         AIF   ('&ZXDCBPTR' EQ '').ZI2G    NOT USED                     00150000
&ZCGPR   SETC  '14'                                                     00150100
&ZCLNG                SETC  '&XDCBPTR'                                  00150200
         AIF   ('&XDCBPTR'(1,1) NE '(').ZI2A  NOT IN GPR                00150300
&ZCGPR   SETC  '&XDCBPTR'(2,K'&XDCBPTR-2)                               00150400
         AGO   .ZI2F                                                    00150500
.*                                                                      00150600
.ZI2A                 ANOP  ,                                           00150700
&ZOPN                 SETA  &ZOPN+1                                     00150800
&ZOPL(&ZOPN)          SETC  ' '                                         00150900
&ZOPO(&ZOPN)          SETC  'LA'                                        00151000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00151100
&ZOPD(&ZOPN)          SETC  '++ BIND=NAME A'                            00151200
.*                                                                      00151300
.ZI2F                 ANOP  ,                                           00151400
&ZOPN                 SETA  &ZOPN+1                                     00151500
&ZOPL(&ZOPN)          SETC  ' '                                         00151600
&ZOPO(&ZOPN)          SETC  'ST'                                        00151700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4(,1)'                              00151800
&ZOPD(&ZOPN)          SETC  '++ &ZXDCBPTR XDCBPTR ADDR'                 00151900
.ZI2G                 ANOP  ,                                           00152000
.*-------------------------------------------------------------------   00152100
.***AI.A06 BIND=NAME ADDR XDDNAME CL8 INPUT                             00152200
         AIF   ('&ZXDDNAME' EQ '').ZI3G    NOT USED                     00152300
&ZCGPR   SETC  '14'                                                     00152400
&ZCLNG                SETC  '&XDDNAME'                                  00152500
         AIF   ('&XDDNAME'(1,1) NE '(').ZI3A  NOT IN GPR                00152600
&ZCGPR   SETC  '&XDDNAME'(2,K'&XDDNAME-2)                               00152700
         AGO   .ZI3F                                                    00152800
.*                                                                      00152900
.ZI3A                 ANOP  ,                                           00153000
&ZOPN                 SETA  &ZOPN+1                                     00153100
&ZOPL(&ZOPN)          SETC  ' '                                         00153200
&ZOPO(&ZOPN)          SETC  'LA'                                        00153300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00153400
&ZOPD(&ZOPN)          SETC  '++ BIND=NAME CL8'                          00153500
.*                                                                      00153600
.ZI3F                 ANOP  ,                                           00153700
&ZOPN                 SETA  &ZOPN+1                                     00153800
&ZOPL(&ZOPN)          SETC  ' '                                         00153900
&ZOPO(&ZOPN)          SETC  'ST'                                        00154000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,8(,1)'                              00154100
&ZOPD(&ZOPN)          SETC  '++ &ZXDDNAME XDDNAME ADDR'                 00154200
.ZI3G                 ANOP  ,                                           00154300
.*-------------------------------------------------------------------   00154400
.***AI.A06 BIND=NAME ADDR XDSABPTR A INOUT                              00154500
         AIF   ('&ZXDSABPTR' EQ '').ZI4G   NOT USED                     00154600
&ZCGPR   SETC  '14'                                                     00154700
&ZCLNG                SETC  '&XDSABPTR'                                 00154800
         AIF   ('&XDSABPTR'(1,1) NE '(').ZI4A  NOT IN GPR               00154900
&ZCGPR   SETC  '&XDSABPTR'(2,K'&XDSABPTR-2)                             00155000
         AGO   .ZI4F                                                    00155100
.*                                                                      00155200
.ZI4A                 ANOP  ,                                           00155300
&ZOPN                 SETA  &ZOPN+1                                     00155400
&ZOPL(&ZOPN)          SETC  ' '                                         00155500
&ZOPO(&ZOPN)          SETC  'LA'                                        00155600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00155700
&ZOPD(&ZOPN)          SETC  '++ BIND=NAME A'                            00155800
.*                                                                      00155900
.ZI4F                 ANOP  ,                                           00156000
&ZOPN                 SETA  &ZOPN+1                                     00156100
&ZOPL(&ZOPN)          SETC  ' '                                         00156200
&ZOPO(&ZOPN)          SETC  'ST'                                        00156300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,12(,1)'                             00156400
&ZOPD(&ZOPN)          SETC  '++ &ZXDSABPTR XDSABPTR ADDR'               00156500
.ZI4G                 ANOP  ,                                           00156600
.*-------------------------------------------------------------------   00156700
&ZOPN1                SETA &ZOPN                                        00156800
.*******************************************************************    00156900
.***AO.X02  RETURN CODE PROCESSING                                      00157000
.*******************************************************************    00157100
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00157200
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00157300
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00157400
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00157500
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00157600
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00157700
&ZOPN                 SETA  &ZOPN+1                                     00157800
&ZOPL(&ZOPN)          SETC  ' '                                         00157900
&ZOPO(&ZOPN)          SETC  'ST'                                        00158000
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00158100
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00158200
                      AGO   .ZMRETX                                     00158300
.*                                                                      00158400
.ZMRET2               ANOP  ,                                           00158500
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00158600
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00158700
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00158800
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00158900
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00159000
&ZOPN                 SETA  &ZOPN+1                                     00159100
&ZOPL(&ZOPN)          SETC  ' '                                         00159200
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00159300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00159400
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00159500
.ZMRETX               ANOP  ,                                           00159600
.*******************************************************************    00159700
.***AO.X03  REASON CODE PROCESSING                                      00159800
.*******************************************************************    00159900
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00160000
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00160100
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00160200
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00160300
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00160400
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00160500
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00160600
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00160700
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00160800
&ZOPN                 SETA  &ZOPN+1                                     00160900
&ZOPL(&ZOPN)          SETC  ' '                                         00161000
&ZOPO(&ZOPN)          SETC  'ST'                                        00161100
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00161200
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00161300
                      AGO   .ZMRSNX                                     00161400
.*                                                                      00161500
.ZMRSN2               ANOP  ,                                           00161600
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00161700
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00161800
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00161900
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00162000
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00162100
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00162200
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00162300
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00162400
&ZOPN                 SETA  &ZOPN+1                                     00162500
&ZOPL(&ZOPN)          SETC  ' '                                         00162600
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00162700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00162800
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00162900
.ZMRSNX               ANOP  ,                                           00163000
.*******************************************************************    00163100
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00163200
.*******************************************************************    00163300
.ZMFLX                ANOP  ,              MF=L PROCESSING              00163400
.*******************************************************************    00163500
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00163600
.*******************************************************************    00163700
                      ACTR  10000                                       00163800
.*                                                                      00163900
                      LCLA  &ZLC           COLUMN POSITION              00164000
                      LCLA  &ZOPX          LIST TABLE INDEX             00164100
                      LCLC  &ZLL           LABEL                        00164200
                      LCLC  &ZLOP          OPERATION                    00164300
                      LCLC  &ZLV           VALUE                        00164400
                      LCLC  &ZLD           DESCRIPTION                  00164500
.*                                                                      00164600
&ZOPX                 SETA  1                                           00164700
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00164800
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00164900
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00165000
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00165100
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00165200
                      AIF   (K'&ZLD LE 0).ZL5                           00165300
&ZLC                  SETA  35             COMMENT COLUMN               00165400
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00165500
&ZLC                  SETA  33             COMMMENT COLUMN              00165600
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00165700
&ZLV                  SETC  '&ZLV'.' '                                  00165800
                      AGO   .ZL3                                        00165900
.*                                                                      00166000
.ZL4                  ANOP  ,                                           00166100
&ZLV                  SETC  '&ZLV'.' '                                  00166200
.ZL5                  ANOP  ,                                           00166300
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00166400
.*                                                                      00166500
&ZLL     &ZLOP &ZLV                                                     00166600
.*                                                                      00166700
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00166800
                      AGO   .ZL2           CONTINUE LOOPING             00166900
.*                                                                      00167000
.ZLX                  ANOP  ,                                           00167100
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00167200
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00167300
            AIF   ('&XPRIMIN' NE 'NEXT').CALLSERV                       00167400
            PUSH  USING                                                 00167500
            B     NEXT&SYSNDX                                           00167600
DSAB&SYSNDX DC    CL4'DSAB'                                             00167700
OLTH&SYSNDX DC    XL2'0058'          PRE HBB7705 DSAB LENGTH+8   @05A   00167800
LOCA&SYSNDX DC    C'ANY'                                                00167900
NEXT&SYSNDX LA    0,0                INITIALIZE ERROR REASON CODE       00168000
            LA    15,0               INITIALIZE RETURN CODE             00168100
            AIF   ('&XDSABPTR'(1,1) EQ '(').DSABREG                     00168200
            L     14,&XDSABPTR       LOAD DSAB ADDRESS                  00168300
            LTR   14,14                                                 00168400
            BZ    DERR&SYSNDX        NULL DSAB ADDRESS                  00168500
            AGO   .DSABCONT                                             00168600
.DSABREG    ANOP                                                 @03C   00168700
.* Set DPGPR to the register specified in DSABPTR parameter      @03A   00168800
.*     example: (3) as input will set DSABPTR to 3               @03A   00168900
&DPGPR      SETC  '&XDSABPTR'(2,K'&XDSABPTR-2)                   @03A   00169000
            L     14,0(,&DPGPR)      LOAD DSAB ADDRESS           @03C   00169100
            LTR   14,14              TEST FOR NULL NEXT POINTER  @03A   00169200
            BZ    DERR&SYSNDX        NULL DSAB ADDRESS                  00169300
.DSABCONT   ANOP  ,                                                     00169400
            USING DSAB,14                                               00169500
            CLC   DSABID(4),DSAB&SYSNDX  IS DSAB VALID?                 00169600
            BNE   DERR&SYSNDX        INVALID DSAB                       00169700
            CLC   DSABLNTH,OLTH&SYSNDX IS DSAB PRE HBB7705?      @05A   00169800
            BL    LOCB&SYSNDX        DEFAULT TO BELOW ONLY CHAIN @05A   00169900
            AIF   ('&LOC(1)' NE 'ANY').LOCBELOW                         00170000
            L     14,DSABFCHA        LOAD FORWARD "ALL" POINTER  @L1A   00170100
            B     CHKZ&SYSNDX        BRANCH AROUND DSABFCHN LOAD @L1A   00170200
.LOCBELOW   ANOP                                                 @03C   00170300
LOCB&SYSNDX L     14,DSABFCHN        LOAD FORWARD POINTER        @L1C   00170400
CHKZ&SYSNDX LTR   14,14              CHECK IF ZERO               @L1C   00170500
            BNZ   DONE&SYSNDX        NEXT DSAB EXISTS                   00170600
            LA    15,4               SET ERROR RETURN CODE              00170700
            LA    14,0               CLEAR DSAB POINTER                 00170800
            B     DONE&SYSNDX                                           00170900
DERR&SYSNDX LA    15,12              SET ERROR RETURN CODE              00171000
            LA    0,1220             SET REASON CODE                    00171100
            LA    14,0               CLEAR DSAB POINTER                 00171200
DONE&SYSNDX EQU   *                                                     00171300
            AIF   ('&XDSABPTR'(1,1) EQ '(').DSABREG2                    00171400
            ST    14,&XDSABPTR       STORE NEXT DSAB ADDRESS            00171500
            AGO   .DSABDONE                                             00171600
.DSABREG2   ST    14,0(,&DPGPR)      STORE NEXT DSAB ADDRESS     @03C   00171700
.DSABDONE   ANOP                                                        00171800
            DROP  14                                                    00171900
            POP   USING                                                 00172000
            AGO   .DSABEND                                              00172100
.CALLSERV   ANOP  ,                                                     00172200
            L     14,16(0,0)         CVT ADDRESS                 @05M   00172300
            TM    CVTOSLV3-CVT(14),X'10'      HBB7705 OR ABOVE?  @05A   00172400
            BZ    LCB2&SYSNDX        NO,  DON'T SET TCBPTR BIT   @05A   00172500
            AIF  ('&LOC(1)' NE 'ANY').LOCBELOW2                  @04A   00172600
            OI   0(1),X'80'                                      @04A   00172700
.LOCBELOW2  ANOP                                                 @04C   00172800
*                                    MOVED LOAD CVT ADDRESS UP  1@05D   00172900
LCB2&SYSNDX L    14,CVTJESCT-CVT(,14)  JESCT address             @06C   00173000
            L    14,JESDACA-JESCT(,14) DACA address              @05C   00173100
            CLI  4(14),X'02'         Check DACA version          @T1C   00173200
            BL   NSRV&SYSNDX         IMPROPER SYSTEM LEVEL              00173300
            L    15,80(,14)          Service module address      @T1C   00173400
            LTR  15,15                                                  00173500
            BZ   NSRV&SYSNDX         MODULE ADDRESS IS ZERO             00173600
            BASSM 14,15              INVOKE SERVICE MODULE              00173700
            B    DONE&SYSNDX                                            00173800
NSRV&SYSNDX EQU *                                                       00173900
            LA   15,16               SET ERROR RETURN CODE              00174000
            LA   0,0                 SET ERROR REASON CODE              00174100
DONE&SYSNDX EQU *                                                       00174200
.DSABEND    ANOP                                                        00174300
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00174400
.ZLINKX               ANOP  ,                                           00174500
.*******************************************************************    00174600
.***AP.X01  FORMAT GENERATED CODE                                       00174700
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00174800
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00174900
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00175000
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00175100
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00175200
                      AIF   (K'&ZLD LE 0).ZL51                          00175300
&ZLC                  SETA  35             COMMENT COLUMN               00175400
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00175500
&ZLC                  SETA  33             COMMENT COLUMN               00175600
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00175700
&ZLV                  SETC  '&ZLV'.' '                                  00175800
                      AGO   .ZL31                                       00175900
.*                                                                      00176000
.ZL41                 ANOP  ,                                           00176100
&ZLV                  SETC  '&ZLV'.' '                                  00176200
.ZL51                 ANOP  ,                                           00176300
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00176400
.*                                                                      00176500
&ZLL     &ZLOP &ZLV                                                     00176600
.*                                                                      00176700
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00176800
                      AGO   .ZL21          CONTINUE LOOPING             00176900
.*                                                                      00177000
.ZLX1                 ANOP  ,                                           00177100
.*******************************************************************    00177200
.***AP.X02  END OF GETDSAB MACRO                                        00177300
&ZGETDSAB             SETC  'YES'          SET GETDSAB USED             00177400
         POP   PRINT                                                    00177500
*                                            GETDSAB-0                  00177600
         SPACE 1                                                        00177700
.ZLX2                 ANOP  ,                                           00177800
         MEND                                                           00177900
**********************************************************************/ 00178000
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00178100
*%GETDSAB: MACRO KEYS(FIRST,NEXT,DDNAME,DCBPTR,DSABPTR,TCBPTR,LOC,      00178200
*                 RETCODE,RSNCODE,PLISTVER,MF);                         00178300
*  ANS('?'!!MACLABEL!!' '!!'GETDSABP '!!MACLIST!!                       00178400
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              00178500
*%END GETDSAB;                                                          00178600
