*                                                                       00001000
* %DCL ASASYMBP_INCLUDED CHAR EXT;                                      00002000
* %DEACTIVATE ASASYMBP_INCLUDED;                                        00003000
* %IF ASASYMBP_INCLUDED = '' %THEN                                      00004000
* %DO;                                                                  00005000
*/* Macro made bi-lingual on 15216. CBGEN compile date 12258         */ 00006000
*% /*                                                                   00007000
         MACRO                                                          00008000
         ASASYMBP &DSECT=YES,&LIST=YES,&TITLE=YES,&SYMBP=YES,          *00009000
               &SYMBFP=COND,&SYMBT=COND,&SYMBT1=COND,&SYMBTE=COND,     *00010000
               &SYMBTH=COND                                             00011000
         GBLC  &ASASYMBP_INCLUDED                                       00012000
         GBLC  &ZCBPRINT                                                00013000
&ASASYMBP_INCLUDED SETC 'YES'                                           00014000
         AIF   ('&LIST' EQ 'NONE').P0                                   00015000
         AIF   ('&TITLE' EQ 'NO').P5                                    00016000
 TITLE   'ASASYMBP  - ASASYMBM parameter area and symbol table       '  00017000
.P5      ANOP                                                           00018000
**/ ASASYMBP_1:;                                                        00019000
*/* START OF SPECIFICATIONS ******************************************* 00020000
*                                                                       00021000
*  **PROPRIETARY_STATEMENT********************************************  00022000
***01* PROPRIETARY STATEMENT=                                        *  00023000
*                                                                    *  00024000
*                                                                    *  00025000
*   LICENSED MATERIALS - PROPERTY OF IBM                             *  00026000
*   5650-A01 COPYRIGHT IBM CORP. 1994,2015                           *  00027000
*                                                                    *  00028000
*   STATUS= HBB77A0                                                  *  00029000
*                                                                    *  00030000
*  **END_OF_PROPRIETARY_STATEMENT*************************************  00031000
*                                                                       00032000
*01* DESCRIPTIVE NAME:  ASASYMBM parameter area and symbol table        00033000
*02*  ACRONYM:  SYMBP                                                   00034000
*                                                                       00035000
*01* MACRO NAME:  ASASYMBP                                              00036000
*                                                                       00037000
*01* EXTERNAL CLASSIFICATION:                                           00038000
*02* PI:   BASE                                                         00039000
*02* NOTPI: FIELDS                                                      00040000
*           Symbt1JesSymbols                                            00041000
*01* END OF EXTERNAL CLASSIFICATION:                                    00042000
*                                                                       00043000
*01* DSECT NAME:                                                        00044000
*     SYMBP                                                             00045000
*     SYMBFP                                                            00046000
*     SYMBT                                                             00047000
*     SYMBT1                                                            00048000
*     SYMBTE                                                            00049000
*     SYMBTH                                                            00050000
*                                                                       00051000
*01* COMPONENT:  MVS Reuse (SCASA)                                      00052000
*                                                                       00053000
*01* EYE-CATCHER:  NONE                                                 00054000
*                                                                       00055000
*01* STORAGE ATTRIBUTES:                                                00056000
*02*  SUBPOOL:  Caller-supplied                                         00057000
*02*  KEY:  Caller-supplied                                             00058000
*02*  RESIDENCY:  Caller-supplied                                       00059000
*                                                                       00060000
*01* SIZE:  Variable                                                    00061000
*                SYMBP  -- X'001C' bytes                                00062000
*                SYMBFP -- X'0020' bytes                                00063000
*                SYMBT  -- X'0004' bytes                                00064000
*                          + one SYMBTE for each symbol indicated by    00065000
*                            the SymbtNumberOfSymbols field.            00066000
*                SYMBT1 -- X'0010' bytes                                00067000
*                          + one SYMBTE for each symbol indicated by    00068000
*                            the SymbtNumberOfSymbols field.            00069000
*                SYMBTE -- X'0010' bytes                                00070000
*                SYMBTH -- X'0008' bytes                                00071000
*01* CREATED BY:                                                        00072000
*     Caller and provided as input to ASASYMBM                          00073000
*                                                                       00074000
*01* POINTED TO BY:                                                     00075000
*     Not applicable                                                    00076000
*                                                                       00077000
*01* SERIALIZATION:                                                     00078000
*     None required                                                     00079000
*                                                                       00080000
*01* FUNCTION:                                                          00081000
*02* Maps the data provided to ASASYMBM / ASASYMBF.                     00082000
*    For ASASYMBM: A parameter area (SYMBP) is provided.                00083000
*    For ASASYMBF: A parameter area (SYMBFP) is provided.               00084000
*     You can build SYMBFP on all supported releases, but do not        00085000
*     call or LINK to ASASYMBF unless running on z/OS V2R2 or later,    00086000
*     or with a tasklib/steplib/joblib to the MIGLIB of a z/OS V2R2     00087000
*     or later system.                                                  00088000
*    Optionally, the parameter area can point to a symbol table         00089000
*    (SYMBT / SYMBT1) which consists of                                 00090000
*    the SYMBT / SYMBT1 header plus SYMBTE entries                      00091000
*    (which immediately follow the header, or are pointed to by         00092000
*    a field which immediately follows the header).                     00093000
*                                                                       00094000
*    The system symbol table pointed to by ECVTSYMT is preceded by      00095000
*    an area mapped by the SYMBTH DSECT.                                00096000
*                                                                       00097000
*02* Return information is provided in the fullword pointed to by       00098000
*    field SymbpReturnCode@/SymbfpReturnCode@. Possible values are:     00099000
*03* 0                                                                  00100000
*03*    Meaning: Successful Completion. All requested substitution      00101000
*                was performed.                                         00102000
*03*    Action:  None required.                                         00103000
*                                                                       00104000
*03* 4                                                                  00105000
*03*    Meaning: Warning. When Substring was specified, a substring     00106000
*                that exceeded the bounds of the substitution text,     00107000
*                or a substring in which the length was specified       00108000
*                as 0, was found.                                       00109000
*                Substitution continues.                                00110000
*03*    Action:  None required.                                         00111000
*                                                                       00112000
*03* 8                                                                  00113000
*03*    Meaning: Warning. Target buffer was too small to contain        00114000
*                all of the substitution text.                          00115000
*03*    Action:  Specify a larger target buffer, or continue            00116000
*                processing using the value returned in the fullword    00117000
*                pointed to by field                                    00118000
*                SymbpTargetLength@/SymbpfTargetLength@ to determine    00119000
*                how much data was placed into the target buffer.       00120000
*                                                                       00121000
*03* 12                                                                 00122000
*03*    Meaning: Error. When CheckNull was specified, a substitution    00123000
*                text length of 0 was encountered when performing       00124000
*                substitution. Substitution continues.                  00125000
*03*    Action:  None required. The system informs the program of the   00126000
*                situation in which it was interested. It is up to      00127000
*                the program to determine the necessary course of       00128000
*                action.                                                00129000
*                                                                       00130000
*03* 16                                                                 00131000
*03*    Meaning: Warning. When WarnNoSub was specified, the             00132000
*                substitution process encountered no symbols for        00133000
*                which to substitute.                                   00134000
*                The substitution processing completed normally.        00135000
*03*    Action:  None required.                                         00136000
*                                                                       00137000
*01* METHOD OF ACCESS:                                                  00138000
*02*  ASM:                                                              00139000
*      ASASYMBP                                                         00140000
*           DSECT=YES!NO  -- Request DSECT definition                   00141000
*           SYMBP=YES!NO!COND -- Request parameter area mapping         00142000
*                            USING on SYMBP                             00143000
*           SYMBFP=YES!NO!COND -- Request parameter area mapping        00144000
*                            USING on SYMBFP                            00145000
*           SYMBT=YES!NO!COND -- Request symbol table mapping           00146000
*                            USING on SYMBT                             00147000
*           SYMBT1=YES!NO!COND -- Request symbol table mapping          00148000
*                            USING on SYMBT1                            00149000
*           SYMBTE=YES!NO!COND -- Request symbol table entry mapping    00150000
*                            USING on SYMBTE                            00151000
*           SYMBTH=YES!NO!COND -- Request symbol table entry mapping    00152000
*                            USING on SYMBTH                            00153000
*     Default: DSECT=YES,SYMBP=YES,SYMBT=COND,SYMBT1=COND,              00154000
*              SYMBTE=COND,SYMBTH=COND                                  00155000
*     Notes: name=YES  => expand                                        00156000
*            name=NO   => do not expand                                 00157000
*            name=COND => expand only if DSECT=YES                      00158000
*                                                                       00159000
*02*  PL/AS:                                                            00160000
*      %INCLUDE SYSLIB(ASASYMBP)                                        00161000
*                                                                       00162000
*01*  USAGE NOTES:                                                      00163000
*      Invoke ASASYMBM via                                              00164000
*        Build symbparea to conform with the Symbp mapping.             00165000
*        LINK EP=ASASYMBM,MF=(E,symbparea)                              00166000
*     or LINKX EP=ASASYMBM,MF=(E,symbparea)                             00167000
*          <<if reentrant and using LINKX, use the SF key as well>>     00168000
*     or LOAD EP=ASASYMBM                                               00169000
*        move entry point address to GPR 15                             00170000
*        CALL (15),MF=(E,symbparea)                                     00171000
*                                                                       00172000
*      Invoke ASASYMBF via                                              00173000
*        Build symbfparea to conform with the Symbfp mapping.           00174000
*        LINK EP=ASASYMBF,MF=(E,symbfparea)                             00175000
*     or LINKX EP=ASASYMBF,MF=(E,symbfparea)                            00176000
*          <<if reentrant and using LINKX, use the SF key as well>>     00177000
*     or LOAD EP=ASASYMBF                                               00178000
*        move entry point address to GPR 15                             00179000
*        CALL (15),MF=(E,symbfparea)                                    00180000
*                                                                       00181000
*                                                                       00182000
*01* DELETED BY:  Caller                                                00183000
*                                                                       00184000
*01* FREQUENCY:  Created for input to ASASYMBM                          00185000
*                                                                       00186000
*01* DEPENDENCIES:  None                                                00187000
*                                                                       00188000
*01* DISTRIBUTION LIBRARY:  AMACLIB                                     00189000
*                                                                       00190000
*01* CHANGE ACTIVITY:                                                   00191000
*   $L0=CLONECBG ,HBB5520,930908,PD00XB: ASASYMBM parameter area        00192000
*   $L1=CLONEASA ,HBB5520,930908,PD00XB: ASASYMBM parameter area        00193000
*   $L2=CLONEASA ,HBB5520,930908,PD00XB: Substring, Check null          00194000
*   $D1=DN70056  ,HBB5520,940506,PD00XB: Warn on no substitution        00195000
*   $P1=PN70675  ,HBB5520,940520,PD00XB: Mixed case symbols             00196000
*   $L3=MSYMB    ,HBB7707,010702,PD00XB: More symbols                   00197000
*   $L4=SYMUP    ,HBB7790,110215,PD00XB: SYMBTH                         00198000
*   $L5=LONGSYM  ,HBB77A0,130329,PD00XB: SYMBT1                         00199000
*                                                                       00200000
* END OF SPECIFICATIONS *********************************************/  00201000
*% /*                                                                   00202000
.P0      ANOP                                                           00203000
         AIF   ('&ZCBPRINT' EQ 'NO').P1                                 00204000
         AIF   ('&LIST' EQ 'YES').P2                                    00205000
.P1      ANOP                                                           00206000
         PUSH  PRINT                                                    00207000
         PRINT OFF                                                      00208000
.P2      ANOP                                                           00209000
         AIF   ('&SYMBP' EQ 'NO').L0002                                 00210000
         AIF   ('&DSECT' EQ 'YES').L0003                                00211000
         AIF   ('&SYMBP' NE 'YES').L0002                                00212000
SYMBP    DS    0F                                                       00213000
         AGO   .L0004                                                   00214000
.L0003   ANOP                                                           00215000
SYMBP    DSECT                                                          00216000
.L0004   ANOP                                                           00217000
SYMBPPATTERN@ DS A       Address of input pattern containing symbols   *00218000
                         to be resolved                                 00219000
         ORG   SYMBPPATTERN@                                            00220000
SYMBPPATTERNADDR DS A    Same as SymbpPattern@                          00221000
SYMBPPATTERNLENGTH DS F  Length of input pattern                        00222000
SYMBPTARGET@ DS A        Address of output target area. The target,    *00223000
                         for the length specified in the word pointed  *00224000
                         to by SymbpTargetLength@, is initialized to   *00225000
                         blanks before substitution processing begins.  00226000
         ORG   SYMBPTARGET@                                             00227000
SYMBPTARGETADDR DS A     Same as SymbpTarget@                           00228000
SYMBPTARGETLENGTH@ DS A  Address of input output fullword field        *00229000
                         containing length of target area. On input,   *00230000
                         it contains the length provided. On output,   *00231000
                         it contains the actual length of the target   *00232000
                         resulting from the symbolic substitution. If  *00233000
                         the target buffer did not have room for the   *00234000
                         substituted pattern, the maximum value        *00235000
                         returned is the input value, unless           *00236000
                         "ContinueAfterFull" is in effect, either via  *00237000
                         Symbt1ContinueAfterFull,                       00238000
*                        Symbt1PreserveAlignment,                      *00239000
                         Symbt1NoDoubleAmpersand, or Symbt1JesSymbols.  00240000
         ORG   SYMBPTARGETLENGTH@                                       00241000
SYMBPTARGETLENGTHADDR DS A Same as SymbpTargetLength                    00242000
SYMBPSYMBOLTABLE@ DS A   Address of symbol table mapped by SYMBT       *00243000
                         DSECT. If only the default set of symbols are *00244000
                         wanted, and none of the functions indicated   *00245000
                         by the flags in SymbtFlags are needed, then   *00246000
                         this field should be 0.                        00247000
         ORG   SYMBPSYMBOLTABLE@                                        00248000
SYMBPSYMBOLTABLEADDR DS A Same as SymbpSymbolTable                      00249000
SYMBPTIMESTAMP@ DS A     Address of 8-character area containing the    *00250000
                         time stamp to use. If this field is           *00251000
                         hexadecimal zeroes, the system will obtain    *00252000
                         the current time stamp for use in evaluating  *00253000
                         symbolics related to time or date.             00254000
         ORG   SYMBPTIMESTAMP@                                          00255000
SYMBPTIMESTAMPADDR DS A  Same as SymbpTimeStamp@                        00256000
SYMBPRETURNCODE@ DS F    Address of fullword which is to contain the   *00257000
                         return code                                    00258000
         ORG   SYMBPRETURNCODE@                                         00259000
SYMBPRETURNCODEADDR DS A Same as SymbpReturnCode                        00260000
SYMBP_LEN EQU  *-SYMBP                                                  00261000
.L0002   ANOP                                                           00262000
         AIF   ('&SYMBFP' EQ 'NO').L0005                                00263000
         AIF   ('&DSECT' EQ 'YES').L0006                                00264000
         AIF   ('&SYMBFP' NE 'YES').L0005                               00265000
SYMBFP   DS    0F                                                       00266000
         AGO   .L0007                                                   00267000
.L0006   ANOP                                                           00268000
SYMBFP   DSECT                                                          00269000
.L0007   ANOP                                                           00270000
SYMBFPPATTERN@ DS A      Address of input pattern containing symbols   *00271000
                         to be resolved                                 00272000
         ORG   SYMBFPPATTERN@                                           00273000
SYMBFPPATTERNADDR DS A   Same as SymbfpPattern@                         00274000
SYMBFPPATTERNLENGTH DS F Length of input pattern                        00275000
SYMBFPTARGET@ DS A       Address of output target area. The target,    *00276000
                         for the length specified in the word pointed  *00277000
                         to by SymbfpTargetLength@, is initialized to  *00278000
                         blanks before substitution processing begins.  00279000
         ORG   SYMBFPTARGET@                                            00280000
SYMBFPTARGETADDR DS A    Same as SymbfpTarget@                          00281000
SYMBFPTARGETLENGTH@ DS A Address of input output fullword field        *00282000
                         containing length of target area. On input,   *00283000
                         it contains the length provided. On output,   *00284000
                         it contains the actual length of the target   *00285000
                         resulting from the symbolic substitution.      00286000
         ORG   SYMBFPTARGETLENGTH@                                      00287000
SYMBFPTARGETLENGTHADDR DS A Same as SymbfpTargetLength@                 00288000
SYMBFPSYMBOLTABLE@ DS A  Address of symbol table mapped by SYMBT       *00289000
                         DSECT. If only the default set of symbols are *00290000
                         wanted, and none of the functions indicated   *00291000
                         by the flags in SymbtFlags are needed, then   *00292000
                         this field should be 0.                        00293000
         ORG   SYMBFPSYMBOLTABLE@                                       00294000
SYMBFPSYMBOLTABLEADDR DS A Same as SymbfpSymbolTable                    00295000
SYMBFPTIMESTAMP@ DS A    Address of 8-character area containing the    *00296000
                         time stamp to use. If this field is           *00297000
                         hexadecimal zeroes, the system will obtain    *00298000
                         the current time stamp for use in evaluating  *00299000
                         symbolics related to time or date.             00300000
         ORG   SYMBFPTIMESTAMP@                                         00301000
SYMBFPTIMESTAMPADDR DS A Same as SymbfpTimeStamp                        00302000
SYMBFPRETURNCODE@ DS A   Address of fullword which is to contain the   *00303000
                         return code                                    00304000
         ORG   SYMBFPRETURNCODE@                                        00305000
SYMBFPRETURNCODEADDR DS A Same as SymbfpReturnCode                      00306000
SYMBFPWORKAREAADDR DS A  Address of 1024-byte work area on a           *00307000
                         doubleword boundary                            00308000
SYMBFP_LEN EQU *-SYMBFP                                                 00309000
.L0005   ANOP                                                           00310000
         AIF   ('&SYMBT' EQ 'NO').L0008                                 00311000
         AIF   ('&DSECT' EQ 'YES').L0009                                00312000
         AIF   ('&SYMBT' NE 'YES').L0008                                00313000
SYMBT    DS    0H        Symbol table                                   00314000
         AGO   .L000A                                                   00315000
.L0009   ANOP                                                           00316000
SYMBT    DSECT           Symbol table                                   00317000
.L000A   ANOP                                                           00318000
SYMBTHEADER DS CL4                                                      00319000
         ORG   SYMBTHEADER                                              00320000
SYMBTFLAGS DS  BL2                                                      00321000
         ORG   SYMBTFLAGS                                               00322000
SYMBTFLAG0 DS  B         Byte 0 of SymbtFlags                           00323000
*  Bit definitions:                                                     00324000
SYMBTNODEFAULTSYMBOLS EQU X'80' Avoid using the default symbol set      00325000
SYMBTONLYSTATICSYMBOLS EQU X'40' Allow only static symbols              00326000
SYMBTTIMESTAMPISGMT EQU X'20' The input timestamp is GMT-time, not     *00327000
                         Local. Note that the value from STCK or       *00328000
                         STCKSYNC is not GMT. It needs to be corrected *00329000
                         by subtracting CVTLSO. This bit need not be   *00330000
                         set as it is the default. Do not also specify *00331000
                         SymbtTimeStampIsLocal or                      *00332000
                         SymbtTimeStampIsStck.                          00333000
SYMBTTIMESTAMPISLOCAL EQU X'10' The input timestamp is Local-Time, not *00334000
                         GMT. Do not also specify SymbtTimeStampIsGMT  *00335000
                         or SymbtTimeStampIsStck.                       00336000
SYMBTWARNSUBSTRINGS EQU X'08' When a substring problem is encountered, *00337000
                         produce a warning return code. The substring  *00338000
                         is fixed irregardless.                         00339000
SYMBTCHECKNULLSUBTEXT EQU X'04' The presence of null sub-text will be  *00340000
                         flagged via non-zero return code.              00341000
SYMBTPTRSAREOFFSETS EQU X'02' The pointer fields within the            *00342000
                         user-provided symbol area are offsets. The    *00343000
                         processing code will add the offset and the   *00344000
                         symbol area address to get the actual address *00345000
                         of the operand. Note that this does not apply *00346000
                         to field SymbteSymbolAreaAddr - it is always  *00347000
                         a pointer. Note also that when bit            *00348000
                         SymbtIndrectSymbolArea is on, the symbol area *00349000
                         address is the address contained in           *00350000
                         SymbteSymbolAreaAddr. When bit                 00351000
*                        SymbtIndirectSymbolArea is off, the symbol    *00352000
                         area address is the address of                *00353000
                         SymbtTableEntries.                             00354000
SYMBTONLYDYNAMICSYMBOLS EQU X'01' Allow only dynamic symbols. This     *00355000
                         should be used only when passing in as a user *00356000
                         symbol table the static symbol table of       *00357000
                         another system.                                00358000
SYMBTFLAG1 DS  B         Byte 1 of SymbtFlags                           00359000
*  Bit definitions:                                                     00360000
SYMBTFLAG1RSV1 EQU X'80' Reserved. Must be zero. Do not use.            00361000
SYMBTTIMESTAMPISSTCK EQU X'40' The input timestamp is from the STCK    *00362000
                         instruction or the STCKSYNC service. Do not   *00363000
                         also specify SymbtTimeStampIsGMT or           *00364000
                         SymbtTimeStampIsLocal.                         00365000
SYMBTWARNNOSUB EQU X'20' When no substitution at all has occurred,     *00366000
                         produce a warning return code.                 00367000
SYMBTINDIRECTSYMBOLAREA EQU X'10' Indicates that the symbol area is    *00368000
                         not contiguous but rather is pointed to by    *00369000
                         SymbteSymbolAreaAddr.                          00370000
SYMBTMIXEDCASESYMBOLS EQU X'08' Indicates that the input may have      *00371000
                         non-uppercase symbols. The processing will    *00372000
                         obtain an additional area to copy the input   *00373000
                         pattern in order to make recognition of these *00374000
                         symbols possible.                              00375000
SYMBTFLAG1RSV2 EQU X'06' Unused. Must be zero.                          00376000
SYMBTSYMBT1 EQU X'01'    When this bit is off, the SYMBT DSECT applies *00377000
                         to the fields that follow. Otherwise, the     *00378000
                         SYMBT1 DSECT applies. See Symbt1Symbt1 for    *00379000
                         more information.                              00380000
         ORG   SYMBTFLAGS+2                                             00381000
SYMBTNUMBEROFSYMBOLS DS H Number of entries in symbol table. Can be 0.  00382000
SYMBTTABLEENTRIES DS 0C  Symbol table entries. One for each indicated  *00383000
                         by the NumberOfSymbols field. Mapped by       *00384000
                         SYMBTE DSECT. Note that when                  *00385000
                         SymbtIndirectSymbolArea is specified, this    *00386000
                         area consists only of field                   *00387000
                         SymbteSymbolAreaAddr. In that case, it is the *00388000
                         area pointed to by that pointer that is       *00389000
                         mapped by SYMBTE DSECT.                        00390000
*                                                                       00391000
*    *****************************************************************  00392000
*    *                                                               *  00393000
*    * The static symbol table is pointed to by ECVTSYMT and is      *  00394000
*    * mapped by the SYMBT DSECT. In the 4-bytes preceding this table*  00395000
*    * is a fullword which specifies the length of the contiguous    *  00396000
*    * area that follows which contains the table plus the symbol    *  00397000
*    * names plus the substitution text values.                      *  00398000
*    *                                                               *  00399000
*    *****************************************************************  00400000
*                                                                       00401000
*                                                                       00402000
SYMBTMAXSTATICSYMBOLLENGTHZOSV2R2 EQU 16 The max length of a static    *00403000
                         symbol, not counting the "&" and the "."       00404000
SYMBTMAXSTATICSYMBOLLENGTH EQU 8 The max length of a static symbol,    *00405000
                         not counting the "&" and the "."               00406000
SYMBTMAXSTATICENTRIESPREZOSR4 EQU 103 The max number of full-sized     *00407000
                         entries. This provides for the 5 z/OS-defined *00408000
                         symbols plus 98 user-provided symbols          00409000
SYMBTMAXSTATICENTRIESZOSV2R2_8 EQU 1631 The max number of 8-byte-name  *00410000
                         9-byte value entries. This provides for the 6 *00411000
                         z/OS-defined symbols plus 1625 user-provided  *00412000
                         symbols                                        00413000
SYMBTMAXSTATICENTRIESZOSV2R2_16 EQU 1119 The max number of             *00414000
                         16-byte-name 17-byte value entries. This      *00415000
                         provides for the 6 z/OS-defined symbols plus  *00416000
                         1113 user-provided symbols                     00417000
SYMBTMAXSTATICENTRIESZOSV2R2_44 EQU 731 The max number of 16-byte-name *00418000
                         44-byte value entries. This provides for the  *00419000
                         6 z/OS-defined symbols plus 725 user-provided *00420000
                         symbols                                        00421000
SYMBTMAXSTATICENTRIESZOSR4 EQU 928 The max number of full-sized        *00422000
                         entries. This provides for the 6 z/OS-defined *00423000
                         symbols plus 922 user-provided symbols         00424000
SYMBTMAXSTATICENTRYDATALENGTHZOSV2R2 EQU 62 Name with "&" and "."       00425000
SYMBTMAXSTATICENTRIES EQU 928 The max number of pre-z/OS2.2 full-sized *00426000
                         entries. This provides for the 6 z/OS-defined *00427000
                         symbols plus 922 user-provided symbols         00428000
SYMBTMAXSTATICSUBTEXTLENGTHZOSV2R2 EQU 17 The max length of            *00429000
                         substitution text for a "normal" static       *00430000
                         symbol (does not end with underscore)          00431000
SYMBTMAXSTATICLONGSUBTEXTLENGTHZOSV2R2 EQU 44 The max length of        *00432000
                         substitution text for a static symbol that    *00433000
                         ends with an underscore and thus can have     *00434000
                         long substitution text                         00435000
SYMBTMAXSTATICSUBTEXTLENGTH EQU 9 The max length of substitution text  *00436000
                         for a static symbol                            00437000
SYMBTMAXSTATICTABLESIZEPREZOSR4 EQU 3609 Name with "&" and "." The max *00438000
                         table size, taking into account that each     *00439000
                         symbol is preceded by "&" and followed by "."  00440000
SYMBTMAXSTATICTABLESIZEZOSV2R2 EQU 57088 The max table size, taking    *00441000
                         into account that each symbol is preceded by  *00442000
                         "&" and followed by "."                        00443000
SYMBTMAXSTATICTABLESIZEPREZOSV2R2 EQU 32512 The max table size, taking *00444000
                         into account that each symbol is preceded by  *00445000
                         "&" and followed by "."                        00446000
SYMBTMAXSTATICTABLESIZEZOSR4 EQU 32512 The max table size, taking into *00447000
                         account that each symbol is preceded by "&"   *00448000
                         and followed by "."                            00449000
SYMBTMAXSTATICTABLESIZE EQU 32512                                       00450000
SYMBT_LEN EQU  *-SYMBT                                                  00451000
.L0008   ANOP                                                           00452000
         AIF   ('&SYMBT1' EQ 'NO').L000B                                00453000
         AIF   ('&DSECT' EQ 'YES').L000C                                00454000
         AIF   ('&SYMBT1' NE 'YES').L000B                               00455000
.L000C   ANOP                                                           00456000
*                                                                       00457000
*                                      The max table size prior to      00458000
*                                      z/OS V2R2 taking into account    00459000
*                                      that each symbol is preceded     00460000
*                                      by "&" and followed by "."       00461000
*                                                                       00462000
*                                                                       00463000
*    *****************************************************************  00464000
*     At this point, either the SYMBT or SYMBT1 mapping may be used.    00465000
*     New function may be added only within SYMBT1.                     00466000
*    *****************************************************************  00467000
*                                                                       00468000
*                                                                       00469000
         AIF   ('&DSECT' EQ 'YES').L000D                                00470000
SYMBT1   DS    0F        Symbol table, format 1                         00471000
         AGO   .L000E                                                   00472000
.L000D   ANOP                                                           00473000
SYMBT1   DSECT           Symbol table, format 1                         00474000
.L000E   ANOP                                                           00475000
SYMBT1HEADER DS CL16                                                    00476000
         ORG   SYMBT1HEADER                                             00477000
SYMBT1FLAGS DS BL2                                                      00478000
         ORG   SYMBT1FLAGS                                              00479000
SYMBT1FLAG0 DS B         Byte 0 of Symbt1Flags                          00480000
*  Bit definitions:                                                     00481000
SYMBT1NODEFAULTSYMBOLS EQU X'80' Avoid using the default symbol set.   *00482000
                         If there are multiple user-provided symbol    *00483000
                         tables, this is honored for the first SYMBT1  *00484000
                         only.                                          00485000
SYMBT1ONLYSTATICSYMBOLS EQU X'40' Allow only static symbols. If there  *00486000
                         are multiple user-provided symbol tables,     *00487000
                         this is honored for the first SYMBT1 only.     00488000
SYMBT1TIMESTAMPISGMT EQU X'20' The input timestamp is GMT-time, not    *00489000
                         Local. Note that the value from STCK or       *00490000
                         STCKSYNC is not GMT. It needs to be corrected *00491000
                         by subtracting CVTLSO. This bit need not be   *00492000
                         set as it is the default. Do not also specify *00493000
                         Symbt1TimeStampIsLocal or                     *00494000
                         Symbt1TimeStampIsStck. If there are multiple  *00495000
                         user-provided symbol tables, this is honored  *00496000
                         for the first SYMBT1 only.                     00497000
SYMBT1TIMESTAMPISLOCAL EQU X'10' The input timestamp is Local-Time,    *00498000
                         not GMT. Do not also specify                  *00499000
                         Symbt1TimeStampIsGMT or                       *00500000
                         Symbt1TimeStampIsStck. If there are multiple  *00501000
                         user-provided symbol tables, this is honored  *00502000
                         for the first SYMBT1 only.                     00503000
SYMBT1WARNSUBSTRINGS EQU X'08' When a substring problem is             *00504000
                         encountered, produce a warning return code.   *00505000
                         The substring is fixed irregardless. If there *00506000
                         are multiple user-provided symbol tables,     *00507000
                         this is honored for the first SYMBT1 only.     00508000
SYMBT1CHECKNULLSUBTEXT EQU X'04' The presence of null sub-text will be *00509000
                         flagged via non-zero return code. If there    *00510000
                         are multiple user-provided symbol tables,     *00511000
                         this is honored for the first SYMBT1 only.     00512000
SYMBT1PTRSAREOFFSETS EQU X'02' The pointer fields within the           *00513000
                         user-provided symbol area are offsets. The    *00514000
                         processing code will add the offset and the   *00515000
                         symbol area address to get the actual address *00516000
                         of the operand. Note that this does not apply *00517000
                         to field Symbt1eSymbolAreaAddr - it is always *00518000
                         a pointer. Note also that when bit            *00519000
                         Symbt1IndrectSymbolArea is on, the symbol     *00520000
                         area address is the address contained in      *00521000
                         Symbt1eSymbolAreaAddr. When bit                00522000
*                        Symbt1IndirectSymbolArea is off, the symbol   *00523000
                         area address is the address of                *00524000
                         Symbt1TableEntries.                            00525000
SYMBT1ONLYDYNAMICSYMBOLS EQU X'01' Allow only dynamic symbols. This    *00526000
                         should be used only when passing in as a user *00527000
                         symbol table the static symbol table of       *00528000
                         another system. If there are multiple         *00529000
                         user-provided symbol tables, this is honored  *00530000
                         for the first SYMBT1 only.                     00531000
SYMBT1FLAG1 DS B         Byte 1 of Symbt1Flags                          00532000
*  Bit definitions:                                                     00533000
SYMBT1FLAG1RSV1 EQU X'80' Reserved. Must be zero. Do not use.           00534000
SYMBT1TIMESTAMPISSTCK EQU X'40' The input timestamp is from the STCK   *00535000
                         instruction or the STCKSYNC service. Do not   *00536000
                         also specify Symbt1TimeStampIsGMT or          *00537000
                         Symbt1TimeStampIsLocal. If there are multiple *00538000
                         user-provided symbol tables, this is honored  *00539000
                         for the first SYMBT1 only.                     00540000
SYMBT1WARNNOSUB EQU X'20' When no substitution at all has occurred,    *00541000
                         produce a warning return code. If there are   *00542000
                         multiple user-provided symbol tables, this is *00543000
                         honored for the first SYMBT1 only.             00544000
SYMBT1INDIRECTSYMBOLAREA EQU X'10' Indicates that the symbol area is   *00545000
                         not contiguous but rather is pointed to by    *00546000
                         Symbt1eSymbolAreaAddr.                         00547000
SYMBT1MIXEDCASESYMBOLS EQU X'08' Indicates that the input may have     *00548000
                         non-uppercase symbols. The processing will    *00549000
                         obtain an additional area to copy the input   *00550000
                         pattern in order to make recognition of these *00551000
                         symbols possible. If there are multiple       *00552000
                         user-provided symbol tables, this is honored  *00553000
                         for the first SYMBT1 only.                     00554000
SYMBT1FLAG1RSV2 EQU X'06' Unused. Must be zero.                         00555000
SYMBT1SYMBT1 EQU X'01'   When this bit is on, the SYMBT1 DSECT applies *00556000
                         to the fields that follow. Otherwise, the     *00557000
                         SYMBT DSECT applies. When this bit is on      *00558000
                         several things are implied. All               *00559000
                         caller-provided symbols (in all symbol areas  *00560000
                         identified on this call) are assumed to start *00561000
                         with an "&" and end with a ".", use the same  *00562000
                         character set defined for system symbols, and *00563000
                         be no longer than 18 characters (including    *00564000
                         the leading "&" and trailing "."). When        00565000
*                        Symbt1IEFSJSYM is on, the "&" and "." are not *00566000
                         physically present in the data. Two symbols   *00567000
                         are not both allowed in a symbol table if the *00568000
                         beginning of the longer one is the shorter    *00569000
                         one followed by an underscore, and the        *00570000
                         shorter one has no underscore. This does not  *00571000
                         apply to JES symbols. Symbol matching will    *00572000
                         use the upper-case of the input string.        00573000
         ORG   SYMBT1FLAGS+2                                            00574000
SYMBT1FLAG2 DS B                                                        00575000
*  Bit definitions:                                                     00576000
SYMBT1PRESERVEALIGNMENT EQU X'80' Indicates that an attempt is to be   *00577000
                         made to preserve alignment following a symbol *00578000
                         of items separated from the symbol by 1 or    *00579000
                         more blanks. This is not possible to achieve  *00580000
                         in all cases, specifically some situations    *00581000
                         when the symbol value is longer than the      *00582000
                         symbol name plus one. This follows the rules  *00583000
                         by which JES processes instream data sets. If *00584000
                         the symbol value is shorter than the name,    *00585000
                         blanks will be added to pad the value to       00586000
*                        match If the symbol value is longer than the  *00587000
                         name, blanks latter will be removed (never    *00588000
                         removing the last blank between two tokens)   *00589000
                         so that the token following will, when        *00590000
                         possible, remain in the same position. If     *00591000
                         there are multiple user-provided symbol       *00592000
                         tables, the value for this option is captured *00593000
                         from the first SYMBT1. The value is then used *00594000
                         for all the symbol tables.                     00595000
SYMBT1NODOUBLEAMPERSAND EQU X'40' Indicates that &&symbol in the       *00596000
                         pattern is not to be changed - the target is  *00597000
                         to contain &&symbol. This differs from the    *00598000
                         default processing which changes &&symbol in  *00599000
                         the pattern to &symbol in the target. If      *00600000
                         there are multiple user-provided symbol       *00601000
                         tables, the value for this option is captured *00602000
                         from the first SYMBT1. The value is then used *00603000
                         for all the symbol tables.                     00604000
SYMBT1IEFSJSYM EQU X'20' The symbol table area is an area returned by  *00605000
                         the IEFSJSYM service, the beginning of which  *00606000
                         is mapped by DSECT SYDHDR in macro IEFSJSYD.  *00607000
                         When bit Symbt1IndirectSymbolArea is off this *00608000
                         is the area located at Symbt1TableEntries,    *00609000
                         otherwise it is the area located by           *00610000
                         SymbteSymbolAreaAddr. The number of entries   *00611000
                         is identified by the SYDEntryCount field.      00612000
SYMBT1CONTINUEAFTERFULL EQU X'10' If the target buffer does not have   *00613000
                         room for the substituted pattern (this could  *00614000
                         occur when a symbol value is longer than the  *00615000
                         symbol name), continue processing in order    *00616000
                         that the truly needed buffer length can be    *00617000
                         determined.                                    00618000
SYMBT1FLAG3 DS B                                                        00619000
*  Bit definitions:                                                     00620000
SYMBT1JESSYMBOLS EQU X'01' This bit is intended for IBM use only. When *00621000
                         on, the caller must hold the LOCAL lock       *00622000
                         (this, in turn, implies that LINK must not be *00623000
                         used). If there are multiple user-provided    *00624000
                         symbol tables, the value for this option is   *00625000
                         captured from the first SYMBT1. The value is  *00626000
                         then used for all the symbol tables.           00627000
SYMBT1NEXTSYMBTADDR DS A Address of next SYMBT1 or SYMBT so that the   *00628000
                         user can provide multiple symbol tables. A    *00629000
                         value of 0 indicates that this is the last    *00630000
                         SYMBT1.                                        00631000
         DS    CL6       Reserved, must be 0                            00632000
SYMBT1NUMBEROFSYMBOLS DS H Number of entries in symbol table. Can be   *00633000
                         0. Ignored when Symbt1IEFSJSYM                 00634000
SYMBT1TABLEENTRIES DS 0C Symbol table entries. One for each indicated  *00635000
                         by the NumberOfSymbols field. Mapped by       *00636000
                         SYMBTE DSECT. Note that when                  *00637000
                         Symbt1IndirectSymbolArea is specified, this   *00638000
                         area consists only of field                   *00639000
                         SymbteSymbolAreaAddr. In that case, it is the *00640000
                         area located by that address that is mapped   *00641000
                         by SYMBTE DSECT. When bit Symbt1IEFSJSYM is   *00642000
                         on, the area is mapped by SYDHDR DSECT in     *00643000
                         IEFSJSYD rather than SYMBTE.                   00644000
SYMBT1_LEN EQU *-SYMBT1                                                 00645000
.L000B   ANOP                                                           00646000
         AIF   ('&SYMBTE' EQ 'NO').L000F                                00647000
         AIF   ('&DSECT' EQ 'YES').L0010                                00648000
         AIF   ('&SYMBTE' NE 'YES').L000F                               00649000
SYMBTE   DS    0F        Symbol table entry                             00650000
         AGO   .L0011                                                   00651000
.L0010   ANOP                                                           00652000
SYMBTE   DSECT           Symbol table entry                             00653000
.L0011   ANOP                                                           00654000
SYMBTETABLEENTRIES DS CL16 Symbol table entry. One such entry for each *00655000
                         indicated by the SymbtNumberOfSymbols /       *00656000
                         Symbt1NumberOfSymbols field.                   00657000
         ORG   SYMBTETABLEENTRIES                                       00658000
SYMBTESYMBOLPTR DS A     Address of symbol. Do not use when bit        *00659000
                         SymbtPtrsAreOffsets is on. Note that the      *00660000
                         symbol must include the preceding "&" and the *00661000
                         trailing "."                                   00662000
         ORG   SYMBTESYMBOLPTR                                          00663000
SYMBTESYMBOLOFFSET DS F  Offset to symbol from start of symbol area.   *00664000
                         Only use if bit SymbtPtrsAreOffsets /         *00665000
                         Symbt1PtsAreOffsets is on. Note that the      *00666000
                         symbol must include the preceding "&" and the *00667000
                         trailing "."                                   00668000
         ORG   SYMBTESYMBOLOFFSET                                       00669000
SYMBTESYMBOLAREAADDR DS A Address of symbol area when                  *00670000
                         SymbtIndirectSymbolArea /                     *00671000
                         Symbt1IndirectSymbolArea is set. In that      *00672000
                         case, this is the only word needed in the     *00673000
                         SYMBTE area. When bit Symbt1IEFSJSYM is off,  *00674000
                         the area located by this pointer is mapped by *00675000
                         the "regular" SYMBTE DSECT (for which         *00676000
                         SymbteSymbolAreaAddr is not relevant). When   *00677000
                         bit Symbt1IEFSJSYM is on, the area located by *00678000
                         this address was returned by the IEFSJSYM      00679000
*                        service and the beginning of the area is      *00680000
                         mapped by the SYDHDR DSECT in macro IEFSJSYD.  00681000
SYMBTESYMBOLLENGTH DS F  Length of symbol (includes preceding "&" and  *00682000
                         trailing ".")                                  00683000
SYMBTESUBTEXTPTR DS A    Address of substitution text. Do not use when *00684000
                         bit SymbtPtrsAreOffsets /                     *00685000
                         Symbt1PtrsAreOffsets is on.                    00686000
         ORG   SYMBTESUBTEXTPTR                                         00687000
SYMBTESUBTEXTOFFSET DS F Offset to substitution text from start of     *00688000
                         symbol area. Only use if bit                  *00689000
                         SymbtPtrsAreOffsets / Symbt1PtrsAreOffsets is *00690000
                         on.                                            00691000
SYMBTESUBTEXTLENGTH DS F Length of substitution text                    00692000
SYMBTE_LEN EQU *-SYMBTE                                                 00693000
.L000F   ANOP                                                           00694000
         AIF   ('&SYMBTH' EQ 'NO').L0012                                00695000
         AIF   ('&DSECT' EQ 'YES').L0013                                00696000
         AIF   ('&SYMBTH' NE 'YES').L0012                               00697000
SYMBTH   DS    0F        Symbol table Header. This applies to the      *00698000
                         symbol table pointed to by ECVTSYMT only. Its *00699000
                         address should be calculated by subtracting   *00700000
                         SYMBTH_LEN from the address in ECVTSYMT. Any  *00701000
                         new fields in the future would be at the      *00702000
                         beginning (not the end) of the header. Use    *00703000
                         both the equate SYMBTH_LEN and the field      *00704000
                         SymbthSymbolTableLen to pick up the length of *00705000
                         the symbol table. This approach makes sure    *00706000
                         that your code will continue to work upon      00707000
*                        re-assembly.                                   00708000
         AGO   .L0014                                                   00709000
.L0013   ANOP                                                           00710000
SYMBTH   DSECT           Symbol table Header. This applies to the      *00711000
                         symbol table pointed to by ECVTSYMT only. Its *00712000
                         address should be calculated by subtracting   *00713000
                         SYMBTH_LEN from the address in ECVTSYMT. Any  *00714000
                         new fields in the future would be at the      *00715000
                         beginning (not the end) of the header. Use    *00716000
                         both the equate SYMBTH_LEN and the field      *00717000
                         SymbthSymbolTableLen to pick up the length of *00718000
                         the symbol table. This approach makes sure    *00719000
                         that your code will continue to work upon      00720000
*                        re-assembly.                                   00721000
.L0014   ANOP                                                           00722000
SYMBTHNOTINTERFACE DS CL4                                               00723000
SYMBTHSYMBOLTABLELEN DS F The length of the symbol table (not          *00724000
                         including the length of this header). This    *00725000
                         will always be the last field of the header.   00726000
SYMBTH_LEN EQU *-SYMBTH                                                 00727000
.L0012   ANOP                                                           00728000
         AIF   ('&ZCBPRINT' EQ 'NO').P3                                 00729000
         AIF   ('&LIST' EQ 'YES').P4                                    00730000
.P3      ANOP                                                           00731000
         POP   PRINT                                                    00732000
.P4      ANOP                                                           00733000
.P_EXIT  ANOP                                                           00734000
         MEND                                                           00735000
**/ ASASYMBP_2:;                                                        00736000
* %ASASYMBP_INCLUDED = 'YES';                                           00737000
* %DCL ZCBPRINT CHAR EXT;                                               00738000
* %DEACTIVATE ZCBPRINT;                                                 00739000
* %DCL ASASYMBP_LIST CHAR EXT;                                          00740000
* %DEACTIVATE ASASYMBP_LIST;                                            00741000
* %IF ASASYMBP_LIST ^= 'NO' &                                           00742000
*    ZCBPRINT ^= 'NO' %THEN                                             00743000
*   %GOTO ASASYMBP_3;                                                   00744000
*   @LIST PUSH NOECHO;                                                  00745000
*   @LIST NOASSEMBLE NOECHO;                                            00746000
*   @LIST OFF C NOECHO;                                                 00747000
* %ASASYMBP_3:;                                                         00748000
*/* Start of PL/X Source                                             */ 00749000
*   DCL 1 Symbp BASED,                 /*                        @L1A*/ 00750000
*         2 SymbpPattern@ PTR,         /* Address of input pattern      00751000
*               containing symbols to be resolved                @L1A*/ 00752000
*           3 SymbpPatternAddr PTR,    /* Same as SymbpPattern@  @L2A*/ 00753000
*         2 SymbpPatternLength FIXED,  /* Length of input pattern       00754000
*                                                                @L1A*/ 00755000
*         2 SymbpTarget@ PTR,          /* Address of output target      00756000
*                area. The target, for the length specified in the      00757000
*                word pointed to by SymbpTargetLength@, is              00758000
*                initialized to blanks before substitution              00759000
*                processing begins.                              @L1A*/ 00760000
*           3 SymbpTargetAddr PTR,     /* Same as SymbpTarget@   @L2A*/ 00761000
*         2 SymbpTargetLength@ PTR,    /* Address of input output       00762000
*                fullword field containing length of target area.       00763000
*                On input, it contains the length provided.             00764000
*                On output, it contains the actual length of the        00765000
*                target resulting from the symbolic substitution.       00766000
*                If the target buffer did not have room for the         00767000
*                substituted pattern, the maximum value returned        00768000
*                is the input value, unless "ContinueAfterFull" is      00769000
*                in effect, either via Symbt1ContinueAfterFull,         00770000
*                Symbt1PreserveAlignment, Symbt1NoDoubleAmpersand,      00771000
*                or Symbt1JesSymbols.                            @L5C*/ 00772000
*           3 SymbpTargetLengthAddr PTR,  /* Same as                    00773000
*                SymbpTargetLength@                              @L2A*/ 00774000
*         2 SymbpSymbolTable@ PTR,     /* Address of symbol table       00775000
*                mapped by SYMBT DSECT. If only the default set         00776000
*                of symbols are wanted, and none of the functions       00777000
*                indicated by the flags in SymbtFlags are needed,       00778000
*                then this field should be 0.                    @L1A*/ 00779000
*           3 SymbpSymbolTableAddr  PTR,  /* Same as                    00780000
*                SymbpSymbolTable@                               @L2A*/ 00781000
*         2 SymbpTimeStamp@ PTR,       /* Address of 8-character area   00782000
*                containing the time stamp to use. If this field is     00783000
*                hexadecimal zeroes, the system                         00784000
*                will obtain the current time stamp                     00785000
*                for use in evaluating symbolics related to time or     00786000
*                date.                                           @L1A*/ 00787000
*           3 SymbpTimeStampAddr PTR,  /* Same as SymbpTimeStamp@       00788000
*                                                                @L2A*/ 00789000
*         2 SymbpReturnCode@ FIXED,    /* Address of fullword which     00790000
*                is to contain the return code                   @L1A*/ 00791000
*           3 SymbpReturnCodeAddr PTR, /* Same as SymbpReturnCode@      00792000
*                                                                @L2A*/ 00793000
*         2 * CHAR(0);                 /*                        @L1A*/ 00794000
*   DCL 1 Symbfp BASED,                /*                        @L5A*/ 00795000
*         2 SymbfpPattern@ PTR,        /* Address of input pattern      00796000
*               containing symbols to be resolved                @L5A*/ 00797000
*           3 SymbfpPatternAddr PTR,   /* Same as SymbfpPattern@ @L5A*/ 00798000
*         2 SymbfpPatternLength FIXED, /* Length of input pattern       00799000
*                                                                @L5A*/ 00800000
*         2 SymbfpTarget@ PTR,         /* Address of output target      00801000
*                area. The target, for the length specified in the      00802000
*                word pointed to by SymbfpTargetLength@, is             00803000
*                initialized to blanks before substitution              00804000
*                processing begins.                              @L5A*/ 00805000
*           3 SymbfpTargetAddr PTR,    /* Same as SymbfpTarget@  @L5A*/ 00806000
*         2 SymbfpTargetLength@ PTR,   /* Address of input output       00807000
*                fullword field containing length of target area.       00808000
*                On input, it contains the length provided.             00809000
*                On output, it contains the actual length of the        00810000
*                target resulting from the symbolic substitution.       00811000
*                                                                @L5A*/ 00812000
*           3 SymbfpTargetLengthAddr PTR, /* Same as                    00813000
*                SymbfpTargetLength@                             @L5A*/ 00814000
*         2 SymbfpSymbolTable@ PTR,    /* Address of symbol table       00815000
*                mapped by SYMBT DSECT. If only the default set         00816000
*                of symbols are wanted, and none of the functions       00817000
*                indicated by the flags in SymbtFlags are needed,       00818000
*                then this field should be 0.                    @L5A*/ 00819000
*           3 SymbfpSymbolTableAddr PTR,  /* Same as                    00820000
*                SymbfpSymbolTable@                              @L5A*/ 00821000
*         2 SymbfpTimeStamp@ PTR,      /* Address of 8-character area   00822000
*                containing the time stamp to use. If this field is     00823000
*                hexadecimal zeroes, the system                         00824000
*                will obtain the current time stamp                     00825000
*                for use in evaluating symbolics related to time or     00826000
*                date.                                           @L5A*/ 00827000
*           3 SymbfpTimeStampAddr PTR, /* Same as SymbfpTimeStamp@      00828000
*                                                                @L5A*/ 00829000
*         2 SymbfpReturnCode@ PTR,    /* Address of fullword which      00830000
*                is to contain the return code                   @L5A*/ 00831000
*           3 SymbfpReturnCodeAddr PTR, /* Same as SymbfpReturnCode@    00832000
*                                                                @L5A*/ 00833000
*         2 SymbfpWorkAreaAddr PTR,    /* Address of 1024-byte work     00834000
*                area on a doubleword boundary                   @L5A*/ 00835000
*         2 * CHAR(0);                 /*                        @L5A*/ 00836000
*   DCL 1 Symbt BASED,              /* Symbol table              @L1A*/ 00837000
*         3 SymbtHeader,            /*                           @L1A*/ 00838000
*          5 SymbtFlags BIT(16), /*                              @L1A*/ 00839000
*           6 SymbtFlag0 BIT(8), /* Byte 0 of SymbtFlags         @L1A*/ 00840000
*            7 SymbtNoDefaultSymbols BIT(1),    /* Avoid using the      00841000
*                                  default symbol set            @L1A*/ 00842000
*            7 SymbtOnlyStaticSymbols BIT(1),    /* Allow only          00843000
*                                  static symbols                @L1A*/ 00844000
*            7 SymbtTimestampIsGMT BIT(1), /* The input timestamp       00845000
*                      is GMT-time, not Local. Note that the value      00846000
*                      from STCK or STCKSYNC is not GMT. It needs       00847000
*                      to be corrected by subtracting CVTLSO. This      00848000
*                      bit need not be set as it is the                 00849000
*                      default. Do not also specify                     00850000
*                      SymbtTimeStampIsLocal                            00851000
*                      or SymbtTimeStampIsStck.                  @L1A*/ 00852000
*            7 SymbtTimestampIsLocal BIT(1), /* The input timestamp     00853000
*                      is Local-Time, not GMT. Do not also specify      00854000
*                      SymbtTimeStampIsGMT                              00855000
*                      or SymbtTimeStampIsStck.                  @L1A*/ 00856000
*            7 SymbtWarnSubstrings BIT(1), /* When a substring          00857000
*                      problem is encountered, produce a warning        00858000
*                      return code. The substring is fixed              00859000
*                      irregardless.                             @L2A*/ 00860000
*            7 SymbtCheckNullSubText BIT(1),  /* The presence of        00861000
*                      null sub-text will be flagged via non-zero       00862000
*                      return code.                              @L2A*/ 00863000
*            7 SymbtPtrsAreOffsets BIT(1),    /* The pointer fields     00864000
*                      within the user-provided symbol area are         00865000
*                      offsets. The processing code will add the        00866000
*                      offset and the symbol area address to            00867000
*                      get the actual address of the operand.           00868000
*                      Note that this does not apply to field           00869000
*                      SymbteSymbolAreaAddr - it is always a pointer.   00870000
*                      Note also that when bit SymbtIndrectSymbolArea   00871000
*                      is on, the symbol area address is the address    00872000
*                      contained in SymbteSymbolAreaAddr. When bit      00873000
*                      SymbtIndirectSymbolArea is off, the symbol       00874000
*                      area address is the address of                   00875000
*                      SymbtTableEntries.                        @D1C*/ 00876000
*            7 SymbtOnlyDynamicSymbols BIT(1),    /* Allow only         00877000
*                      dynamic symbols. This should be used only when   00878000
*                      passing in as a user symbol table the static     00879000
*                      symbol table of another system.           @L2A*/ 00880000
*           6 SymbtFlag1 BIT(8), /* Byte 1 of SymbtFlags         @L1A*/ 00881000
*            7 SymbtFlag1RSV1 BIT(1),                /* Reserved.       00882000
*                      Must be zero. Do not use.                 @L2A*/ 00883000
*            7 SymbtTimestampIsSTCK BIT(1), /* The input timestamp      00884000
*                      is from the STCK instruction or the              00885000
*                      STCKSYNC service. Do not also specify            00886000
*                      SymbtTimeStampIsGMT or SymbtTimeStampIsLocal.    00887000
*                                                                @L2A*/ 00888000
*            7 SymbtWarnNoSub BIT(1),           /* When no              00889000
*                      substitution at all has occurred, produce        00890000
*                      a warning return code.                    @D1A*/ 00891000
*            7 SymbtIndirectSymbolArea BIT(1),       /* Indicates that  00892000
*                      the symbol area is not contiguous but rather     00893000
*                      is pointed to by SymbteSymbolAreaAddr.    @D1A*/ 00894000
*            7 SymbtMixedCaseSymbols BIT(1),    /* Indicates that       00895000
*                      the input may have non-uppercase symbols.        00896000
*                      The processing will obtain an additional         00897000
*                      area to copy the input pattern in order          00898000
*                      to make recognition of these symbols possible.   00899000
*                                                                @P1A*/ 00900000
*            7 SymbtFlag1RSV2 BIT(2),                /* Unused.         00901000
*                      Must be zero.                             @L5C*/ 00902000
*            7 SymbtSymbt1 BIT(1),    /* When this bit is off, the      00903000
*                                  SYMBT DSECT applies to the fields    00904000
*                                  that follow. Otherwise, the SYMBT1   00905000
*                                  DSECT applies. See Symbt1Symbt1 for  00906000
*                                  more information.                    00907000
*                                                                @L5A*/ 00908000
*          5 SymbtNumberOfSymbols FIXED(15), /* Number of entries in    00909000
*                                  symbol table. Can be 0.       @L1A*/ 00910000
*         3 SymbtTableEntries CHAR(*); /* Symbol table entries. One     00911000
*                                  for each indicated by the            00912000
*                                  NumberOfSymbols field. Mapped        00913000
*                                  by SYMBTE DSECT. Note that when      00914000
*                                  SymbtIndirectSymbolArea is           00915000
*                                  specified, this area consists        00916000
*                                  only of field SymbteSymbolAreaAddr.  00917000
*                                  In that case, it is the area         00918000
*                                  pointed to by that pointer that is   00919000
*                                  mapped by SYMBTE DSECT.       @L1A*/ 00920000
*   /*****************************************************************/ 00921000
*   /* The static symbol table is pointed to by ECVTSYMT and is      */ 00922000
*   /* mapped by the SYMBT DSECT. In the 4-bytes preceding this      */ 00923000
*   /* table is a fullword which specifies the length of the         */ 00924000
*   /* contiguous area that follows which contains the table plus    */ 00925000
*   /* the symbol names plus the substitution text values.           */ 00926000
*   /*****************************************************************/ 00927000
*   DCL SymbtMaxStaticSymbolLengthZosV2R2 Constant(16); /* The max      00928000
*              length of a static symbol, not counting the "&" and      00929000
*              the "."                                           @L5A*/ 00930000
*   DCL SymbtSystemSymbolZosV2R2                                        00931000
*         Char(SymbtMaxStaticSymbolLengthZosV2R2+2) Type Synonym; /*    00932000
*              Includes the "&" and "."                          @L5A*/ 00933000
*   DCL SymbtMaxStaticSymbolLength Constant(8);      /* The max length  00934000
*              of a static symbol, not counting the "&" and             00935000
*              the "."                                           @L1A*/ 00936000
*   DCL SymbtMaxStaticEntriespreZosR4 Constant(103); /* The max number  00937000
*              of full-sized entries. This provides for the 5           00938000
*              z/OS-defined symbols plus 98 user-provided symbols       00939000
*                                                                @PxA*/ 00940000
*   DCL SymbtMaxStaticEntriesZosV2R2_8 Constant(1631); /* The max       00941000
*              number of 8-byte-name 9-byte value entries. This         00942000
*              provides for the 6 z/OS-defined symbols plus 1625        00943000
*              user-provided symbols                             @L5A*/ 00944000
*   DCL SymbtMaxStaticEntriesZosV2R2_16 Constant(1119); /* The max      00945000
*              number of 16-byte-name 17-byte value entries. This       00946000
*              provides for the 6 z/OS-defined symbols plus 1113        00947000
*              user-provided symbols                             @L5A*/ 00948000
*   DCL SymbtMaxStaticEntriesZosV2R2_44 Constant(731); /* The max       00949000
*              number of 16-byte-name 44-byte value entries. This       00950000
*              provides for the 6 z/OS-defined symbols plus 725         00951000
*              user-provided symbols                             @L5A*/ 00952000
*   DCL SymbtMaxStaticEntriesZosR4 Constant(928);     /* The max number 00953000
*              of full-sized entries. This provides for the 6           00954000
*              z/OS-defined symbols plus 922 user-provided symbols      00955000
*                                                                @L4C*/ 00956000
*   Dcl SymbtMaxStaticEntryDataLengthZosV2R2 Constant(                  00957000
*           SymbtMaxStaticSymbolLengthZosV2R2+2+  /* Name with "&"      00958000
*                                                and "."             */ 00959000
*           SymbtMaxStaticLongSubtextLengthZosV2R2);          /* @L5A*/ 00960000
*   DCL SymbtMaxStaticEntries                                           00961000
*          Constant(SymbtMaxStaticEntriesZosR4);      /* The max number 00962000
*              of pre-z/OS2.2 full-sized entries. This provides for     00963000
*              the 6 z/OS-defined symbols plus 922 user-provided        00964000
*              symbols                                           @L4C*/ 00965000
*   DCL SymbtMaxStaticSubtextLengthZosV2R2 Constant(17);  /* The max    00966000
*              length of substitution text for a "normal" static        00967000
*              symbol (does not end with underscore)             @L5A*/ 00968000
*   DCL SymbtMaxStaticLongSubtextLengthZosV2R2 Constant(44);  /* The    00969000
*              max length of substitution text for a static symbol      00970000
*              that ends with an underscore and thus can have long      00971000
*              substitution text                                 @L5A*/ 00972000
*   DCL SymbtMaxStaticSubtextLength Constant(9);      /* The max length 00973000
*              of substitution text for a static symbol          @L1A*/ 00974000
*   DCL SymbtMaxStaticTableSizePreZosR4 Constant(                       00975000
*              Length(Symbt.SymbtHeader) +                              00976000
*              SymbtMaxStaticEntriesPreZosR4* (                         00977000
*                SymbtMaxStaticSymbolLength+2+   /* Name with "&"       00978000
*                                                and "."             */ 00979000
*                SymbtMaxStaticSubTextLength+                           00980000
*                Length(Symbte.SymbteTableEntries)                      00981000
*                                     ) );   /* The max table size,     00982000
*              taking into account that each symbol is preceded by      00983000
*              "&" and followed by "."                           @L1A*/ 00984000
*   DCL SymbtMaxStaticTableSizeZosV2R2 Constant( 'DF00'x )              00985000
*                                     ;      /* The max table size,     00986000
*              taking into account that each symbol is preceded by      00987000
*              "&" and followed by "."                           @L5A*/ 00988000
*   DCL SymbtMaxStaticTableSizePreZosV2R2 Constant( '7F00'x )           00989000
*                                     ;      /* The max table size,     00990000
*              taking into account that each symbol is preceded by      00991000
*              "&" and followed by "."                           @L5A*/ 00992000
*   ?ASAXMAC Assert(1631,EQ,(                                           00993000
*           SymbtMaxStaticTableSizeZosV2R2/                             00994000
*             (16+                            /* 2 ptr/length pairs  */ 00995000
*              SymbtMaxStaticSymbolLength+2+  /* Name with "&"          00996000
*                                                and "."             */ 00997000
*              SymbtMaxStaticSymbolLength+1)  /* Max value           */ 00998000
*                           )                                           00999000
*                  ) List(NoEcho);                                      01000000
*   ?ASAXMAC Assert(1119,EQ,(                                           01001000
*           SymbtMaxStaticTableSizeZosV2R2/                             01002000
*             (16+                            /* 2 ptr/length pairs  */ 01003000
*              SymbtMaxStaticSymbolLengthZosV2R2+2+  /* Name with "&"   01004000
*                                                and "."             */ 01005000
*              SymbtMaxStaticSymbolLengthZosV2R2+1)  /* Max value    */ 01006000
*                           )                                           01007000
*                  ) List(NoEcho);                                      01008000
*   ?ASAXMAC Assert(731,EQ,(                                            01009000
*           SymbtMaxStaticTableSizeZosV2R2/                             01010000
*             (16+                            /* 2 ptr/length pairs  */ 01011000
*              SymbtMaxStaticSymbolLengthZosV2R2+2+  /* Name with "&"   01012000
*                                                and "."             */ 01013000
*              SymbtMaxStaticLongSubtextLengthZosV2R2)  /* Max value    01014000
*                                                when long-value     */ 01015000
*                           )                                           01016000
*                  ) List(NoEcho);                                      01017000
*   DCL SymbtMaxStaticTableSizeZosR4 Constant( '7F00'x )                01018000
*                                     ;      /* The max table size,     01019000
*              taking into account that each symbol is preceded by      01020000
*              "&" and followed by "."                           @L3A*/ 01021000
*   DCL SymbtMaxStaticTableSize                                         01022000
*           Constant( SymbtMaxStaticTableSizeZosR4 );  /* The max table 01023000
*         size prior to z/OS V2R2                                       01024000
*         taking into account that each symbol is preceded by           01025000
*         "&" and followed by "."                                @L5C*/ 01026000
*  /******************************************************************/ 01027000
*  /* At this point, either the SYMBT or SYMBT1 mapping may be used. */ 01028000
*  /* New function may be added only within SYMBT1.                  */ 01029000
*  /******************************************************************/ 01030000
*   DCL 1 Symbt1 BASED,             /* Symbol table, format 1    @L5A*/ 01031000
*         3 Symbt1Header,           /*                           @L5A*/ 01032000
*          5 Symbt1Flags BIT(16), /*                             @L5A*/ 01033000
*           6 Symbt1Flag0 BIT(8), /* Byte 0 of Symbt1Flags       @L5A*/ 01034000
*            7 Symbt1NoDefaultSymbols BIT(1),   /* Avoid using the      01035000
*                      default symbol set.                              01036000
*                      If there are multiple user-provided symbol       01037000
*                      tables, this is honored for the first SYMBT1     01038000
*                      only.                                     @L5A*/ 01039000
*            7 Symbt1OnlyStaticSymbols BIT(1),   /* Allow only          01040000
*                      static symbols.                                  01041000
*                      If there are multiple user-provided symbol       01042000
*                      tables, this is honored for the first SYMBT1     01043000
*                      only.                                     @L5A*/ 01044000
*            7 Symbt1TimestampIsGMT BIT(1), /* The input timestamp      01045000
*                      is GMT-time, not Local. Note that the value      01046000
*                      from STCK or STCKSYNC is not GMT. It needs       01047000
*                      to be corrected by subtracting CVTLSO. This      01048000
*                      bit need not be set as it is the                 01049000
*                      default. Do not also specify                     01050000
*                      Symbt1TimeStampIsLocal                           01051000
*                      or Symbt1TimeStampIsStck.                        01052000
*                      If there are multiple user-provided symbol       01053000
*                      tables, this is honored for the first SYMBT1     01054000
*                      only.                                     @L5A*/ 01055000
*            7 Symbt1TimestampIsLocal BIT(1), /* The input timestamp    01056000
*                      is Local-Time, not GMT. Do not also specify      01057000
*                      Symbt1TimeStampIsGMT                             01058000
*                      or Symbt1TimeStampIsStck.                        01059000
*                      If there are multiple user-provided symbol       01060000
*                      tables, this is honored for the first SYMBT1     01061000
*                      only.                                     @L5A*/ 01062000
*            7 Symbt1WarnSubstrings BIT(1), /* When a substring         01063000
*                      problem is encountered, produce a warning        01064000
*                      return code. The substring is fixed              01065000
*                      irregardless.                                    01066000
*                      If there are multiple user-provided symbol       01067000
*                      tables, this is honored for the first SYMBT1     01068000
*                      only.                                     @L5A*/ 01069000
*            7 Symbt1CheckNullSubText BIT(1), /* The presence of        01070000
*                      null sub-text will be flagged via non-zero       01071000
*                      return code.                                     01072000
*                      If there are multiple user-provided symbol       01073000
*                      tables, this is honored for the first SYMBT1     01074000
*                      only.                                     @L5A*/ 01075000
*            7 Symbt1PtrsAreOffsets BIT(1),   /* The pointer fields     01076000
*                      within the user-provided symbol area are         01077000
*                      offsets. The processing code will add the        01078000
*                      offset and the symbol area address to            01079000
*                      get the actual address of the operand.           01080000
*                      Note that this does not apply to field           01081000
*                      Symbt1eSymbolAreaAddr - it is always a pointer.  01082000
*                      Note also that when bit Symbt1IndrectSymbolArea  01083000
*                      is on, the symbol area address is the address    01084000
*                      contained in Symbt1eSymbolAreaAddr. When bit     01085000
*                      Symbt1IndirectSymbolArea is off, the symbol      01086000
*                      area address is the address of                   01087000
*                      Symbt1TableEntries.                       @L5A*/ 01088000
*            7 Symbt1OnlyDynamicSymbols BIT(1),   /* Allow only         01089000
*                      dynamic symbols. This should be used only when   01090000
*                      passing in as a user symbol table the static     01091000
*                      symbol table of another system.                  01092000
*                      If there are multiple user-provided symbol       01093000
*                      tables, this is honored for the first SYMBT1     01094000
*                      only.                                     @L5A*/ 01095000
*           6 Symbt1Flag1 BIT(8), /* Byte 1 of Symbt1Flags       @L5A*/ 01096000
*            7 Symbt1Flag1RSV1 BIT(1),               /* Reserved.       01097000
*                      Must be zero. Do not use.                 @L5A*/ 01098000
*            7 Symbt1TimestampIsSTCK BIT(1), /* The input timestamp     01099000
*                      is from the STCK instruction or the              01100000
*                      STCKSYNC service. Do not also specify            01101000
*                      Symbt1TimeStampIsGMT or Symbt1TimeStampIsLocal.  01102000
*                      If there are multiple user-provided symbol       01103000
*                      tables, this is honored for the first SYMBT1     01104000
*                      only.                                     @L5A*/ 01105000
*            7 Symbt1WarnNoSub BIT(1),          /* When no              01106000
*                      substitution at all has occurred, produce        01107000
*                      a warning return code.                           01108000
*                      If there are multiple user-provided symbol       01109000
*                      tables, this is honored for the first SYMBT1     01110000
*                      only.                                     @L5A*/ 01111000
*            7 Symbt1IndirectSymbolArea BIT(1),      /* Indicates that  01112000
*                      the symbol area is not contiguous but rather     01113000
*                      is pointed to by Symbt1eSymbolAreaAddr.   @L5A*/ 01114000
*            7 Symbt1MixedCaseSymbols BIT(1),   /* Indicates that       01115000
*                      the input may have non-uppercase symbols.        01116000
*                      The processing will obtain an additional         01117000
*                      area to copy the input pattern in order          01118000
*                      to make recognition of these symbols possible.   01119000
*                      If there are multiple user-provided symbol       01120000
*                      tables, this is honored for the first SYMBT1     01121000
*                      only.                                     @L5A*/ 01122000
*            7 Symbt1Flag1RSV2 BIT(2),               /* Unused.         01123000
*                      Must be zero.                             @L5A*/ 01124000
*            7 Symbt1Symbt1 BIT(1),    /* When this bit is on, the      01125000
*                      SYMBT1 DSECT applies to the fields that follow.  01126000
*                      Otherwise, the SYMBT DSECT applies. When         01127000
*                      this bit is on several things are implied.       01128000
*                      All caller-provided symbols (in                  01129000
*                      all symbol areas identified on this call) are    01130000
*                      assumed to start with an "&" and end with a ".", 01131000
*                      use the same character set defined for           01132000
*                      system symbols, and be no longer than 18         01133000
*                      characters (including the leading "&" and        01134000
*                      trailing ".").                                   01135000
*                      When Symbt1IEFSJSYM is on, the "&" and "." are   01136000
*                      not physically present in the data.              01137000
*                      Two symbols are not both allowed                 01138000
*                      in a symbol table if the beginning of the        01139000
*                      longer one is the shorter one followed by an     01140000
*                      underscore, and the shorter one has no           01141000
*                      underscore. This does not apply to JES symbols.  01142000
*                      Symbol matching will use the upper-case of the   01143000
*                      input string.                             @L5A*/ 01144000
*          5 Symbt1Flag2 BIT(8),  /*                             @L5A*/ 01145000
*            7 Symbt1PreserveAlignment Bit(1),  /* Indicates that       01146000
*                      an attempt is to be made to preserve alignment   01147000
*                      following a symbol of items separated from       01148000
*                      the symbol by 1 or more blanks. This is not      01149000
*                      possible to achieve in all cases, specifically   01150000
*                      some situations when the symbol value is longer  01151000
*                      than the symbol name plus one. This follows the  01152000
*                      rules by which JES processes instream data sets. 01153000
*                      If the symbol value is shorter than the name,    01154000
*                      blanks will be added to pad the value to match   01155000
*                      If the symbol value is longer than the name,     01156000
*                      blanks latter will be removed (never removing    01157000
*                      the last blank between two tokens) so that       01158000
*                      the token following will, when possible, remain  01159000
*                      in the same position.                            01160000
*                      If there are multiple user-provided symbol       01161000
*                      tables, the value for this option is captured    01162000
*                      from the first SYMBT1. The value is then used    01163000
*                      for all the symbol tables.                @L5A*/ 01164000
*            7 Symbt1NoDoubleAmpersand Bit(1), /* Indicates that        01165000
*                      &&symbol in the pattern is not to be changed -   01166000
*                      the target is to contain &&symbol. This differs  01167000
*                      from the default processing which changes        01168000
*                      &&symbol in the pattern to &symbol in the        01169000
*                      target.                                          01170000
*                      If there are multiple user-provided symbol       01171000
*                      tables, the value for this option is captured    01172000
*                      from the first SYMBT1. The value is then used    01173000
*                      for all the symbol tables.                @L5A*/ 01174000
*            7 Symbt1IEFSJSYM BIT(1), /* The symbol table area is       01175000
*                      an area returned by the IEFSJSYM service, the    01176000
*                      beginning of which is mapped by DSECT SYDHDR     01177000
*                      in macro IEFSJSYD. When bit                      01178000
*                      Symbt1IndirectSymbolArea is off this is the      01179000
*                      area located at Symbt1TableEntries, otherwise    01180000
*                      it is the area located by SymbteSymbolAreaAddr.  01181000
*                      The number of entries is identified by the       01182000
*                      SYDEntryCount field.                      @L5A*/ 01183000
*            7 Symbt1ContinueAfterFull Bit(1),  /* If the target buffer 01184000
*                      does not have room for the substituted pattern   01185000
*                      (this could occur when a symbol value is longer  01186000
*                      than the symbol name), continue processing in    01187000
*                      order that the truly needed buffer length can    01188000
*                      be determined.                            @L5A*/ 01189000
*          5 Symbt1Flag3 BIT(8),  /*                             @L5A*/ 01190000
*            7 * Bit(7),          /* Reserved, must be 0         @L5A*/ 01191000
*            7 Symbt1JesSymbols Bit(1),  /* This bit is intended for    01192000
*                      IBM use only. When on, the caller must hold the  01193000
*                      LOCAL lock (this, in turn, implies that LINK     01194000
*                      must not be used).                               01195000
*                      If there are multiple user-provided symbol       01196000
*                      tables, the value for this option is captured    01197000
*                      from the first SYMBT1. The value is then used    01198000
*                      for all the symbol tables.                @L5A*/ 01199000
*          5 Symbt1NextSymbtAddr Ptr(31),  /* Address of next SYMBT1    01200000
*                      or SYMBT so that the user can provide multiple   01201000
*                      symbol tables. A value of 0 indicates that       01202000
*                      this is the last SYMBT1.                  @L5A*/ 01203000
*          5 * Char(6),           /* Reserved, must be 0         @L5A*/ 01204000
*          5 Symbt1NumberOfSymbols FIXED(15), /* Number of entries in   01205000
*                      symbol table. Can be 0. Ignored when             01206000
*                      Symbt1IEFSJSYM                            @L5A*/ 01207000
*         3 Symbt1TableEntries CHAR(*); /* Symbol table entries. One    01208000
*                      for each indicated by the NumberOfSymbols        01209000
*                      field. Mapped by SYMBTE DSECT. Note that when    01210000
*                      Symbt1IndirectSymbolArea is specified, this area 01211000
*                      consists only of field SymbteSymbolAreaAddr. In  01212000
*                      that case, it is the area located by that        01213000
*                      address that is mapped by SYMBTE DSECT. When     01214000
*                      bit Symbt1IEFSJSYM is on, the area is mapped     01215000
*                      by SYDHDR DSECT in IEFSJSYD rather than SYMBTE.  01216000
*                                                                @L5C*/ 01217000
*   DCL 1 Symbte BASED,             /* Symbol table entry        @L1A*/ 01218000
*         3 SymbteTableEntries(*),    /* Symbol table entry. One such   01219000
*                      entry for each indicated by the                  01220000
*                      SymbtNumberOfSymbols /                           01221000
*                      Symbt1NumberOfSymbols field.              @L1A*/ 01222000
*           5 SymbteSymbolPtr PTR(31), /* Address of symbol. Do not     01223000
*                      use when bit SymbtPtrsAreOffsets is on. Note     01224000
*                      that the symbol must include the preceding "&"   01225000
*                      and the trailing "."                      @L1A*/ 01226000
*             7 SymbteSymbolOffset FIXED(31), /* Offset to symbol from  01227000
*                      start of symbol area. Only use if bit            01228000
*                      SymbtPtrsAreOffsets / Symbt1PtsAreOffsets is on. 01229000
*                      Note that the symbol                             01230000
*                      must include the preceding "&" and               01231000
*                      the trailing "."                          @L1A*/ 01232000
*               9 SymbteSymbolAreaAddr PTR(31),  /* Address of          01233000
*                      symbol area when SymbtIndirectSymbolArea /       01234000
*                      Symbt1IndirectSymbolArea is                      01235000
*                      set. In that case, this is the only word         01236000
*                      needed in the SYMBTE area. When bit              01237000
*                      Symbt1IEFSJSYM is off, the area                  01238000
*                      located by this pointer is mapped by             01239000
*                      the "regular" SYMBTE DSECT (for which            01240000
*                      SymbteSymbolAreaAddr is not relevant). When bit  01241000
*                      Symbt1IEFSJSYM is on, the area                   01242000
*                      located by this address was returned by the      01243000
*                      IEFSJSYM service and the beginning of the area   01244000
*                      is mapped by the SYDHDR DSECT in macro           01245000
*                      IEFSJSYD.                                 @L5C*/ 01246000
*           5 SymbteSymbolLength FIXED(31), /* Length of                01247000
*                                  symbol (includes preceding "&" and   01248000
*                                  trailing ".")                 @L1A*/ 01249000
*           5 SymbteSubTextPtr PTR(31), /* Address of substitution      01250000
*                      text. Do not use when bit                        01251000
*                      SymbtPtrsAreOffsets /                            01252000
*                      Symbt1PtrsAreOffsets is on.               @L1A*/ 01253000
*             7 SymbteSubTextOffset FIXED(31), /* Offset to             01254000
*                      substitution text from start of symbol area.     01255000
*                      Only use if bit SymbtPtrsAreOffsets /            01256000
*                      Symbt1PtrsAreOffsets is on.                      01257000
*                                                                @L1A*/ 01258000
*           5 SymbteSubTextLength FIXED(31); /* Length of               01259000
*                                 substitution text              @L1A*/ 01260000
*                                                                       01261000
*   DCL 1 Symbth BASED              /* Symbol table Header. This        01262000
*                      applies to the symbol table pointed to by        01263000
*                      ECVTSYMT only. Its address should be calculated  01264000
*                      by subtracting SYMBTH_LEN from the address in    01265000
*                      ECVTSYMT. Any new fields in the future would     01266000
*                      be at the beginning (not the end) of the header. 01267000
*                      Use both the equate SYMBTH_LEN and the field     01268000
*                      SymbthSymbolTableLen to pick up the length       01269000
*                      of the symbol table. This approach makes sure    01270000
*                      that your code will continue to work upon        01271000
*                      re-assembly.                              @L4A*/ 01272000
*        ,3 SymbthNotInterface                                /* @L4A*/ 01273000
*         ,4 SymbthNotInterface1                              /* @L4A*/ 01274000
*          ,5 SymbthPrevSymbolTableAddr Ptr /* Address of previous      01275000
*                      symbol table (after an update via SETLOAD        01276000
*                      IEASYM). This is not an intended interface       01277000
*                                                                @L4A*/ 01278000
*        ,3 SymbthSymbolTableLen Fixed      /* The length of the        01279000
*                      symbol table (not including the length of this   01280000
*                      header). This will always be the last            01281000
*                      field of the header.                      @L4A*/ 01282000
*        ;                                                              01283000
* @LOGIC;                                                               01284000
* #PRAGMA TOOL=CBGEN.                                                   01285000
* #USEORG.                                                              01286000
* #DELETE.SymbtSystemSymbolZosV2R2                                      01287000
* #DELETE.SymbthNotInterface1                                           01288000
* #DELETE.ASSERT_EQ1_1                                                  01289000
* #DELETE.ASSERT_EQ2_1                                                  01290000
* #DELETE.ASSERT_EQ1_2                                                  01291000
* #DELETE.ASSERT_EQ2_2                                                  01292000
* #DELETE.ASSERT_EQ1_3                                                  01293000
* #DELETE.ASSERT_EQ2_3                                                  01294000
* #EPRAGMA.                                                             01295000
* @ENDLOGIC;                                                            01296000
*/* End of PL/X Source                                               */ 01297000
* %IF ASASYMBP_LIST ^= 'NO' &                                           01298000
*    ZCBPRINT ^= 'NO' %THEN                                             01299000
*   %GOTO ASASYMBP_4;                                                   01300000
*   @LIST POP NOECHO;                                                   01301000
* %ASASYMBP_4:;                                                         01302000
* %END;                                                                 01303000
