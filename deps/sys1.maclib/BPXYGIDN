*        %GOTO GIDNPRO ;        /* Biliingual header                            
         MACRO                                                                  
         BPXYGIDN  &DSECT=YES,&LIST=YES                                         
         GBLB  &GIDN411                                                         
         AIF   (&GIDN411 EQ 1).E411                                             
&GIDN411 SETB  1                                                                
         AIF   ('&DSECT' EQ 'YES').AA411                                        
         MNOTE 12,'BPXYGIDN: DSECT=YES required'                                
.AA411   AIF   ('&LIST'  EQ 'YES').A411                                         
         PUSH  PRINT  BPXYGIDN: getpwnam, getpwuid and getpwent return          
         PRINT OFF              structure                                       
         AGO   .A411                                                            
*                             */                                                
*%GIDNPRO : ;                                                                   
*/****START OF SPECIFICATIONS******************************************         
*                                                                               
*    $MAC (BPXYGIDN) COMP(SCPX1) PROD(BPX):                                     
*                                                                               
*01* MACRO NAME: BPXYGIDN                                                       
*                                                                               
*01* DSECT NAME: N/A                                                            
*                                                                               
*01* DESCRIPTIVE NAME: getpwnam, getpwuid and getpwent return structure         
*                                                                               
*02*   ACRONYM: GIDN                                                            
**/                                                                             
*/*01* PROPRIETARY STATEMENT=                                        */         
*/***PROPRIETARY_STATEMENT********************************************/         
*/*                                                                  */         
*/*                                                                  */         
*/* LICENSED MATERIALS - PROPERTY OF IBM                             */         
*/* 5650-ZOS COPYRIGHT IBM CORP. 1993,2021                           */         
*/*                                                                  */         
*/* STATUS= HBB77D0                                                  */         
*/*                                                                  */         
*/***END_OF_PROPRIETARY_STATEMENT*************************************/         
*/*                                                                             
*                                                                               
*01* EXTERNAL CLASSIFICATION:  GUPI                                             
*01* END OF EXTERNAL CLASSIFICATION:                                            
*                                                                               
*01* FUNCTION:                                                                  
*      The GIDN defines the structure returned by GPN, GPU and GPE              
*                                                                               
*01* METHOD OF ACCESS:                                                          
*                                                                               
*02*   PL/X:                                                                    
*                                                                               
*        %INCLUDE SYSLIB(BPXYGIDN)                                              
*        By default, the GIDN is based on GIDNPtr. If                           
*        other basing is desired, use %GIDNBASE='BASED(XXXXXX)'.                
*        If %GIDNBASE='BASED(GIDNPtr)' is coded, a Declare for                  
*        GIDNPtr is also generated.                                             
*                                                                               
*                                                                               
*02*   ASM:                                                                     
*        DSECT=NO will not be allowed.  The address of this block is            
*        passed back from GPN, GPU and GPE in the return_value.  The            
*        base register can be incremented to access past the variable           
*        length area (alternately, index registers could be used).              
*                                                                               
*           set base_register = GPN, GPU or GPE Return_Value                    
*           USING  GIDN,base_register                                           
*           access GIDN_U_LENGTH                                                
*           access GIDN_U_NAME (for GIDN_U_LENGTH characters)                   
*           set bump base register by GIDN_U_LENGTH                             
*              (do not try to reaccess previous fields)                         
*           access GIDN_USERID                                                  
*           access GIDN_GROUPID                                                 
*           access GIDN_D_LENGTH                                                
*           access GIDN_D_NAME (for GIDN_D_LENGTH characters)                   
*           set bump base register by GIDN_D_LENGTH                             
*              (do not try to reaccess previous fields)                         
*           access GIDN_P_LENGTH                                                
*           access GIDN_P_NAME (for GIDN_P_LENGTH characters)                   
*           DROP  base_register                                                 
*                                                                               
*01* SIZE: GIDN#LENGTH + GIDN_U_LENGTH + GIDN_D_LENGTH                          
*                                                                               
*01* POINTED TO BY: GPN, GPU and GPE Return_Value                               
*                                                                               
*01* CREATED BY: GPN, GPU and GPE                                               
*                                                                               
*01* DELETED BY: Next GPN, GPU or GPE call from invoking task                   
*                                                                               
*01* STORAGE ATTRIBUTES:                                                        
*02*   SUBPOOL/DATASPACE:  230                                                  
*02*   KEY:                0                                                    
*02*   RESIDENCY:          non-fetch protected storage                          
*                                                                               
*01* FREQUENCY: One per GPN, GPU or GPE invocation.                             
*                                                                               
*01* SERIALIZATION: N/A                                                         
*                                                                               
*01* DEPENDENCIES: None                                                         
*                                                                               
*01* NOTES: None                                                                
*                                                                               
*01* COMPONENT:  OpenMVS (SCPX1)                                                
*                                                                               
*01* DISTRIBUTION LIBRARY:  AMACLIB                                             
*                                                                               
*01* EYE-CATCHER: None                                                          
*                                                                               
*01* CHANGE-ACTIVITY:                                                           
*                                                                               
* $L0=POSIXXP  HOM1110 921201 PDJM: OpenMVS Initial Release                     
* $D0=DL70019  HOM1110 920923 PDJM: New part                                    
* $P1=PL70597  HOM1110 930104 PDJM: Use "OpenMVS"                               
* $D1=DPFA065  HOM1130 940520 PDPE: DCR A065.09 User/group database             
*                                   search                                      
* $D2=W323274  HBB77DO 210220 PDJQ: Added PLX declares for use by other         
*                                   components/products per request             
*                                   from XB                                     
****END OF SPECIFICATIONS*********************************************/         
*        %GOTO GIDNPLX ;      /* Bilingual header                               
.A411    ANOP  ,                                                                
** BPXYGIDN: getpwnam, getpwuid amd getpwent return structure                   
**  Used By: GPN GPU GPE                                                        
GIDN                 DSECT ,        USING on GPN, GPU, GPE Return_value         
GIDN_U_LEN           DS    F        Length of GIDN_U_NAME          1-8          
GIDN_U_NAME          DS    0C       User name (trailing blanks)                 
*  Add GIDN_U_LEN to Index or base to access next field                         
GIDN_USERID_LEN      DS    F        Length of user ID                4          
GIDN_USERID          DS    F        User ID                                     
GIDN_GROUPID_LEN     DS    F        Length of group ID               4          
GIDN_GROUPID         DS    F        Group ID                                    
GIDN_D_LEN           DS    F        Length of GIDN_D_NAME       0-1023          
GIDN_D_NAME          DS    0C       Initial working directory name              
*  Add GIDN_D_LEN to Index or base to access next field                         
GIDN_P_LEN           DS    F        Length of GIDN_P_NAME       0-1023          
GIDN_P_NAME          DS    0C       Initial user program name                   
GIDN#LENGTH          EQU   *-GIDN   Length less U_LEN, D_LEN and P_LEN          
** BPXYGIDN End                                                                 
         SPACE 3                                                                
         AIF   ('&LIST' EQ 'YES').E411                                          
         POP   PRINT                                                            
.E411    ANOP  ,                                                                
         MEND  ,                  Terminating PL/X comment           */         
*%GIDNPLX : ;                                                                   
*%IF GIDNBASE='' %THEN                                                          
*  %DO;                                                                         
*    %GIDNBASE='BASED(GIDNPtr)';                                                
*  %END;                                                                        
* %IF Translate(GIDNBASE)='BASED(GIDNPTR)' %THEN                                
*   %DO;                                                                        
*     DCL GIDNPtr Ptr(31);         /* Pointer to the GIDN            */         
*   %END;                                                                       
*                                                                               
* Dcl 1 GIDN GIDNBASE                                                           
*     ,3 GIDN_U_LEN Fixed(31)     /* Length of GIDN_U_NAME (1-8)    */          
*     ,3 GIDN_U_NAME CHAR(*)      /* User name (trailing blanks)    */          
*     ;                                                                         
*                                                                               
* Dcl 1 GIDN2 Based(Addr(GIDN_U_NAME) + GIDN_U_LEN)                             
*     ,3 GIDN_USERID_LEN Fixed    /* Length of user ID (value=4)    */          
*     ,3 GIDN_USERID Fixed        /* User ID                        */          
*     ,3 GIDN_GROUPID_LEN Fixed   /* Length of group ID (value=4)   */          
*     ,3 GIDN_GROUPID Fixed       /* Group ID                       */          
*     ,3 GIDN_D_LEN Fixed         /* Length of GIDN_D_NAME (0-1023) */          
*     ,3 GIDN_D_NAME Char(*)      /* Initial working directory name */          
*     ;                                                                         
*                                                                               
* Dcl 1 GIDN3 Based(Addr(GIDN_D_NAME) + GIDN_D_LEN)                             
*     ,3 GIDN_P_LEN Fixed         /* Length of GIDN_P_NAME (0-1023) */          
*     ,3 GIDN_P_NAME Char(*)      /* Initial user program name      */          
*     ;                                                                         
*                                                                               
* Dcl GIDN#LENGTH Constant(Offset(GIDN_U_NAME) +                                
*                          Offset(GIDN_D_NAME) +                                
*                          Offset(GIDN_P_NAME));                                
