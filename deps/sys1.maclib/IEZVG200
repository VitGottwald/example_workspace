*                                                                       00001000
* %DCL IEZVG200_INCLUDED CHAR EXT;                                      00002000
* %DEACTIVATE IEZVG200_INCLUDED;                                        00003000
* %IF IEZVG200_INCLUDED = '' %THEN                                      00004000
* %DO;                                                                  00005000
*/* Macro made bi-lingual on 12086. CBGEN compile date 11090         */ 00006000
*% /*                                                                   00007000
         MACRO                                                          00008000
         IEZVG200 &DSECT=YES,&LIST=YES,&TITLE=YES,&CONV=YES             00009000
                      GBLC  &IEZVG200_INCLUDED                          00010000
                      GBLC  &ZCBPRINT                                   00011000
&IEZVG200_INCLUDED    SETC  'YES'                                       00012000
                      AIF   ('&LIST' EQ 'NONE').P0                      00013000
                      AIF   ('&TITLE' EQ 'NO').P5                       00014000
 TITLE                'IEZVG200  - ConVCon Parameter List (CONV)       *00015000
                     @P7A'                                              00016000
.P5                   ANOP                                              00017000
**/ IEZVG200_1:;                                                        00018000
*/**START OF SPECIFICATIONS*******************************************/ 00019000
*/*                                                                  */ 00020000
*/* MACRO NAME:  IEZVG200                                            */ 00021000
*/*                                                                  */ 00022000
*/* DESCRIPTIVE NAME:  ConVCon Parameter List (CONV)             @P7A*/ 00023000
*/*                    CnzConv Constants      (CnzConv)          @P8A*/ 00024000
*/*  ACRONYM:  CONV                                              @P4A*/ 00025000
*/*                                                                  */ 00026000
*/* EXTERNAL CLASSIFICATION: PI                                  @L7C*/ 00027000
*/* END OF EXTERNAL CLASSIFICATION                                   */ 00028000
*/*                                                                  */ 00029000
*/*01* PROPRIETARY STATEMENT=                                        */ 00030000
*/***PROPRIETARY_STATEMENT********************************************/ 00031000
*/*                                                                  */ 00032000
*/*                                                                  */ 00033000
*/* LICENSED MATERIALS - PROPERTY OF IBM                             */ 00034000
*/* 5650-ZOS COPYRIGHT IBM CORP. 1990, 2013                          */ 00035000
*/*                                                                  */ 00036000
*/* STATUS= HBB7790                                                  */ 00037000
*/*                                                                  */ 00038000
*/***END_OF_PROPRIETARY_STATEMENT*************************************/ 00039000
*/*                                                                  */ 00040000
*/* DSECT NAME:  CONV                                            @P4A*/ 00041000
*/*                                                              @P4A*/ 00042000
*/* COMPONENT:  CONSOLE (SC1CK)                                  @P4A*/ 00043000
*/*                                                              @P4A*/ 00044000
*/* EYE-CATCHER:  CONV                                           @P4A*/ 00045000
*/*   OFFSET:  0                                                 @P4A*/ 00046000
*/*   LENGTH:  4                                                 @P4A*/ 00047000
*/*                                                              @P4A*/ 00048000
*/* STORAGE ATTRIBUTES:                                          @P4A*/ 00049000
*/*     SUBPOOL:    Subpool of caller                            @P4A*/ 00050000
*/*     KEY:        Key of caller                                @P4A*/ 00051000
*/*     RESIDENCY:  Any                                          @P4A*/ 00052000
*/*                                                              @P4A*/ 00053000
*/* FUNCTION:   PROVIDES A MAPPING OF THE CONVCON PARAMETER          */ 00054000
*/*             LIST (CONV).                                         */ 00055000
*/*                                                                  */ 00056000
*/*             Provides declares for the CnzConv macro.         @P8A*/ 00057000
*/*                                                                  */ 00058000
*/* INVOCATION: BAL - SPECIFY  IEZVG200 to get:                  @P7C*/ 00059000
*/*                 o A USING ON CONV GIVES ADDRESSABILITY           */ 00060000
*/*                   TO ALL SYMBOLS.                                */ 00061000
*/*                   >>  IF YOU DO NOT WANT A DSECT                 */ 00062000
*/*                       SPECIFY IEZVG200 DSECT=NO.                 */ 00063000
*/*                 o Declares for the CnzConv macro.            @P8A*/ 00064000
*/*                                                                  */ 00065000
*/*             PL/X   ***************************************** @P8A*/ 00066000
*/*                    *                                       *     */ 00067000
*/*                    * To get type declares for the CnzConv  * @P8A*/ 00068000
*/*                    * constants, specify:                   * @P8A*/ 00069000
*/*                    *                                       *     */ 00070000
*/*                    * SPECIFY %IEZVG200_Use_Types = 'YES'   * @P8A*/ 00071000
*/*                    *                                       *     */ 00072000
*/*                    * For internal console modules who      * @P8A*/ 00073000
*/*                    * include CNZMXCNS, suppress the        * @P8A*/ 00074000
*/*                    * CnzConv declares with the following:  * @P8A*/ 00075000
*/*                    *                                       *     */ 00076000
*/*                    * SPECIFY %IEZVG200_Use_Types = 'CNZ'   * @P8A*/ 00077000
*/*                    *                                       *     */ 00078000
*/*                    ***************************************** @P8A*/ 00079000
*/*                                                                  */ 00080000
*/*                      SPECIFY %INCLUDE SYSLIB(IEZVG200)           */ 00081000
*/*                                                                  */ 00082000
*/*                              TO GET:                             */ 00083000
*/*                                                                  */ 00084000
*/*                                DCL 1 CONV BASED,             @L6C*/ 00085000
*/*                                                                  */ 00086000
*/*                      SPECIFY %CONVBASE= 'NONE'                   */ 00087000
*/*                              %INCLUDE SYSLIB(IEZVG200)           */ 00088000
*/*                                                                  */ 00089000
*/*                              TO GET:                             */ 00090000
*/*                                                                  */ 00091000
*/*                                DCL 1 CONV BDY(WORD),             */ 00092000
*/*                                                                  */ 00093000
*/*                      SPECIFY %CONVBASE= 'NONE'                   */ 00094000
*/*                              %CONVATTR= 'YOUR ATTRIBUTES'        */ 00095000
*/*                              %INCLUDE SYSLIB(IEZVG200)           */ 00096000
*/*                                                                  */ 00097000
*/*                              TO GET:                             */ 00098000
*/*                                                                  */ 00099000
*/*                                DCL 1 CONV YOUR ATTRIBUTES,       */ 00100000
*/*                                                                  */ 00101000
*/* USAGE NOTES:                                                     */ 00102000
*/*                                                                  */ 00103000
*/*      *******************************************************     */ 00104000
*/*      *                                                     *     */ 00105000
*/*      * The CONV interface through the ConVCon macro is no  * @P8A*/ 00106000
*/*      * longer being enhanced as of HBB7730.                * @P8A*/ 00107000
*/*      * Only the CnzConv macro will be enhanced             * @P8A*/ 00108000
*/*      * to provide additional information. The CONV         * @P8A*/ 00109000
*/*      * interface through ConVCon will remain for           * @P8A*/ 00110000
*/*      * compatibility purposes only.                        * @P8A*/ 00111000
*/*      *                                                     *     */ 00112000
*/*      *******************************************************     */ 00113000
*/*                                                                  */ 00114000
*/*        o  THE FOLLOWING FIELDS MUST BE SET IN THE CONVCON        */ 00115000
*/*           PARAMETER LIST PRIOR TO CALLING THE CONVCON MACRO:     */ 00116000
*/*                                                                  */ 00117000
*/*                                                                  */ 00118000
*/*             - CONVVRSN <- VERSION LEVEL                          */ 00119000
*/*                                                                  */ 00120000
*/*             - CONVACRO <- "CONV"                                 */ 00121000
*/*                                                                  */ 00122000
*/*                                                                  */ 00123000
*/*             - ONE OF THE FOLLOWING:                              */ 00124000
*/*                                                                  */ 00125000
*/*                                                                  */ 00126000
*/*                - QUERYING AN EBCDIC CONSOLE NAME.            @L6C*/ 00127000
*/*                                                                  */ 00128000
*/*                  If an area id should be validated for a     @L6A*/ 00129000
*/*                  console name, it should be appended after   @L6A*/ 00130000
*/*                  the console name.  See example B below.     @L6A*/ 00131000
*/*                                                                  */ 00132000
*/*        Example A) CONVFLD  <- NAME   => A console name       @L6C*/ 00133000
*/*                            or                                @L6C*/ 00134000
*/*        Example B) CONVFLD  <- NAME-A => A console name with  @L6C*/ 00135000
*/*                                         an area id           @L6C*/ 00136000
*/*                                                                  */ 00137000
*/*                   CONVPFLD <- B'1' INDICATES THAT INPUT WAS      */ 00138000
*/*                               AN EBCDIC CONSOLE name         @L6C*/ 00139000
*/*                                                              @L6A*/ 00140000
*/*                - QUERYING A 4-BYTE BINARY CONSOLE ID:        @L6C*/ 00141000
*/*                                                                  */ 00142000
*/*                  If an area id should be validated for a     @L6A*/ 00143000
*/*                  console id, it should appear in the         @L6A*/ 00144000
*/*                  CONVAREA field.                             @L6A*/ 00145000
*/*                                                                  */ 00146000
*/*                   CONVID   <- A 4-BYTE BINARY CONSOLE ID     @L6C*/ 00147000
*/*                   CONVPID  <- B'1' INDICATES THAT INPUT WAS      */ 00148000
*/*                               A 4-BYTE BINARY CONSOLE ID     @L6C*/ 00149000
*/*                                                                  */ 00150000
*/*        o   THE FOLLOWING FIELD CAN BE OPTIONALLY SET         @D1A*/ 00151000
*/*                - If CONVNPAR is set to on, area id           @L6C*/ 00152000
*/*                  processing will be bypassed.                @L6A*/ 00153000
*/*                - If CONVNPAR is off, the area id will be     @L6A*/ 00154000
*/*                  obtained from the appropriate location.     @L6A*/ 00155000
*/*                  See the previous entry for more             @L6C*/ 00156000
*/*                  information.                                @L6A*/ 00157000
*/*                                                              @D1A*/ 00158000
*/*        o  THE CONVAREA FIELD IS SET IF THE CONVFLD FIELD         */ 00159000
*/*           WAS PROCESSED AND CONTAINED AN AREA ID.  THE AREA      */ 00160000
*/*           ID OF THE CONSOLE IN QUESTION IS VALIDATED, UNLESS @D1A*/ 00161000
*/*           CONVNPAR was turned on by the caller or the        @L6C*/ 00162000
*/*           ConVCon service processor.  The ConVCon service    @L6A*/ 00163000
*/*           turns on CONVNPAR for EMCS and subsystem consoles  @L6A*/ 00164000
*/*           because those consoles cannot have areas.          @L6A*/ 00165000
*/*                                                                  */ 00166000
*/*        o  THE CONVSYSN FIELD IS SET WITH THE NAME OF THE     @P2A*/ 00167000
*/*           SYSTEM ON WHICH THE CONSOLE IS ACTIVE.  CONVSYSN   @P2A*/ 00168000
*/*           WILL CONTAIN binary zeros if the console is not    @L6C*/ 00169000
*/*           active or if the console name is a reserved        @L6C*/ 00170000
*/*           console name.                                      @L6C*/ 00171000
*/*                                                                  */ 00172000
*/*        o  Return and Reason Codes                            @L6A*/ 00173000
*/*                                                                  */ 00174000
*/*           - Return Code                                      @L6A*/ 00175000
*/*              The return code can be found in register 15, or @L6A*/ 00176000
*/*              in the variable specified in RTNCODE after the  @L6A*/ 00177000
*/*              ConVCon macro invocation. Constant declares for @L6A*/ 00178000
*/*              the return codes are present in this macro.     @L6A*/ 00179000
*/*                                                                  */ 00180000
*/*           - Reason Code                                      @L6A*/ 00181000
*/*              The reason code can be found in register 0, the @L6A*/ 00182000
*/*              variable specified in RSNCODE on the after the  @L6A*/ 00183000
*/*              ConVCon macro invocation, or in CONVRSN of the  @L6A*/ 00184000
*/*              CONV parameter list.  Constant declares for the @L6A*/ 00185000
*/*              reason codes are present in this macro.         @L6A*/ 00186000
*/*                                                                  */ 00187000
*/* SIZE:                                                        @P7C*/ 00188000
*/*             CONV -- X'0034' bytes                                */ 00189000
*/*                                                                  */ 00190000
*/*                                                                  */ 00191000
*/* CREATED BY:  CALLER OF CONVCON SERVICE                           */ 00192000
*/*                                                                  */ 00193000
*/* POINTED TO BY:  Register 1 of caller                         @P4A*/ 00194000
*/*                                                              @P4A*/ 00195000
*/* SERIALIZATION:  NONE                                             */ 00196000
*/*                                                                  */ 00197000
*/* CHANGE-ACTIVITY:                                                 */ 00198000
*/*                                                                  */ 00199000
*/*  $MAC(IEZVG200),COMP(SC1CK): ConVCon Parameter List (CONV)       */ 00200000
*/*                              CnzConv Constants      (CnzConv)    */ 00201000
*/*                                                                  */ 00202000
*/*   $L0=CNMG2,    HBB4410, 870319 PDV1: CONSOLE MERGE STAGE II     */ 00203000
*/*   $L1=TSOOP,    HBB4410, 871026 PDBU: TSO OPERATOR               */ 00204000
*/*   $L2=TSOOP,    HBB4410, 880104 PDCM: TSO OPERATOR               */ 00205000
*/*   $P1=PEO0121,  HBB4410, 880216 PDCS: ERROR WHEN ISSUING THE     */ 00206000
*/*                                       ASSEMBLER CONVCON MACRO    */ 00207000
*/*                                       IN A PL/AS PROGRAM         */ 00208000
*/*   $D1=DCR186,   HBB4410, 890626 PDCM: DCR 186                    */ 00209000
*/*   $P2=PEO4390,  HBB4410, 900616 PD35: SYSTEM NAME FIELD          */ 00210000
*/*   $P3=PEO4314,  HBB4410, 900604 PDAD: Add new reason code for    */ 00211000
*/*                                       bad console name to Prolog */ 00212000
*/*   $P4=PKB0806,  HBB4430, 920725 PDCM: Prolog cleanup             */ 00213000
*/*   $01=OW28077,  HBB5510, 970714 PDED: Add 1 byte id              */ 00214000
*/*   $L3=SMCS,     JBB7713, 990729 PDTH: SMCS Consoles              */ 00215000
*/*   $L4=CNZ1B,    HBB7720, 040212 PDD0: TRACK ELIMINATION          */ 00216000
*/*   $P5=ME00837,  HBB7720, 040615 PDSW: Reversioning               */ 00217000
*/*   $P6=ME01663,  HBB7720, 040901,PDSW: Reversioning Cancelled     */ 00218000
*/*   $L5=CNZ2A,    HBB7730, 040524 PDF9: 1-Byte Console Id          */ 00219000
*/*                                         Removal Part 2           */ 00220000
*/*   $L6=CNZ2A,    HBB7730, 050125 PDD0: ConVCon Rewrite            */ 00221000
*/*   $P7=ME05149,  HBB7730, 051130 PDD0: ConVCon Compatibility      */ 00222000
*/*   $P8=ME05355,  HBB7730, 051231 PDD0: CnzConv Support            */ 00223000
*/*   $02=OA16296,  HBB7730, 060531 PDD0: Enhanced CnzConv Checks    */ 00224000
*/*   $L7=CNZ2B,    HBB7750, 060630 PDD0: ConVCon/CnzConv            */ 00225000
*/*                                       Environments               */ 00226000
*/*   $L8=CNZ2B,    HBB7750, 061120 PDDV: SysCon SubType             */ 00227000
*/*   $L9=CNZ2B,    HBB7750, 061212 PDDV: SysCon SubType             */ 00228000
*/*   $LA=HMCS,     HBB7790, 111001 PDSS: HMCS Console Support       */ 00229000
*/*                                                                  */ 00230000
*/* LIBRARY:  AMACLIB                                            @P4A*/ 00231000
*/*                                                                  */ 00232000
*/********************************************************************/ 00233000
*/* DELETED CONVLCKD BIT AND LINKAGE TO UCM                      @L1A*/ 00234000
*/* Add reason code to Prolog                                    @P3A*/ 00235000
*/* Prolog cleanup                                               @P4A*/ 00236000
*/* Add CONVOK1B and CONV1BID                                    @01A*/ 00237000
*/* Add CONVSMCS                                                 @L3A*/ 00238000
*/* Remove reason code 8 (track in use in                        @L4A*/ 00239000
*/* area) and change reason code 4 to say area in use for a      @L4A*/ 00240000
*/* message.                                                     @L4A*/ 00241000
*/* Change version number from 5694-A01 to 5637-A01.             @P5A*/ 00242000
*/* Delete CONVBID, CONV1BID and CONVOK1B                        @L5A*/ 00243000
*/* Expand the CONV parameter list and add CONV_ConsoleType,     @L6A*/ 00244000
*/*   CONV_SubsysAsidValue, CONV_SubsysOwningName, and           @L6A*/ 00245000
*/*   CONV_SMCS_LU.                                              @L6A*/ 00246000
*/* Restore the original CONV mapping.                           @P7A*/ 00247000
*/* Add declares for the CnzConv macro.                          @P8A*/ 00248000
*/* Add CnzConvRsn805_RsvSpaceNotZero.                           @02A*/ 00249000
*/* Improve comments for console status, console subtype, and    @02A*/ 00250000
*/*   console type.                                              @02A*/ 00251000
*/* Add ConVConRet28_IncorrectEnv.                               @L7A*/ 00252000
*/* Add SysCon, SysLog, and OperLog SubTypes                     @L8A*/ 00253000
*/* Remove SysLog and OperLog SubTypes                           @L9A*/ 00254000
*/* Add a subtype of HMCS                                        @LAA*/ 00255000
*/**END OF SPECIFICATIONS*********************************************/ 00256000
*% /*                                                                   00257000
.P0                   ANOP                                              00258000
                      AIF   ('&ZCBPRINT' EQ 'NO').P1                    00259000
                      AIF   ('&LIST' EQ 'YES').P2                       00260000
.P1                   ANOP                                              00261000
                      PUSH  PRINT                                       00262000
                      PRINT OFF                                         00263000
.P2                   ANOP                                              00264000
                      AIF   ('&CONV' EQ 'NO').L0002                     00265000
                      AIF   ('&DSECT' EQ 'YES').L0003                   00266000
                      AIF   ('&CONV' NE 'YES').L0002                    00267000
.L0003                ANOP                                              00268000
*                                                                       00269000
* ********************************************************************  00270000
* *                                                                  *  00271000
* * The ConVCon macro uses the CONV mapping as an input parameter    *  00272000
* * list. The CONV parameter list will NOT be enhanced.              *  00273000
* *                                                                     00274000
* ********************************************************************  00275000
* ********************************************************************  00276000
* *                                                                  *  00277000
* * ConVCon parameter list (CONV)                                    *  00278000
* *                                                                     00279000
* ********************************************************************  00280000
*                                                                       00281000
*                                                                       00282000
                      AIF   ('&DSECT' EQ 'YES').L0004                   00283000
CONV                  DS    0F     CONV parameter list                  00284000
                      AGO   .L0005                                      00285000
.L0004                ANOP                                              00286000
CONV                  DSECT        CONV parameter list                  00287000
.L0005                ANOP                                              00288000
CONVACRO              DS    CL4    Acronym - 'CONV'                     00289000
CONVVRSN              DS    X      Version level                        00290000
CONVFLGS              DS    B      Communication flags                  00291000
*  Bit definitions:                                                     00292000
CONVPFLD              EQU   X'80'  ON - indicates process CONVFLD       00293000
CONVPID               EQU   X'40'  ON - indicates process CONVID        00294000
CONVRSV1              DS    BL2    Reserved                             00295000
CONVFLD               DS    CL10   EBCDIC input field                   00296000
CONVAREA              DS    CL1    Area ID                              00297000
CONVRSN               DS    CL1    Reason Code                          00298000
CONVNAME              DS    CL8    Console name                         00299000
CONVID                DS    F      Console Id                           00300000
                      ORG   CONVID                                      00301000
CONVCLAS              DS    X      Console Class                        00302000
CONVCNUM              DS    FL3    Console number                       00303000
CONVGFLG              DS    B      General Flags                        00304000
*  Bit definitions:                                                     00305000
CONVNPAR              EQU   X'80'  ON - indicates do not process area  *00306000
                                   id                                   00307000
CONVSMCS              EQU   X'40'  ON indicates SMCS Console            00308000
CONVRSV3              DS    CL7    Reserved                             00309000
CONVSYSN              DS    CL8    System name                          00310000
CONVPTR               DS    A      Pointer to conv                      00311000
CONVRID               EQU   2      Current version level                00312000
CONVPLEN              EQU   48     Length of the CONV parameter list    00313000
CONVCHRS              EQU   C'CONV' Characters for acronym              00314000
CONVSP41              EQU   1      Version level for SP                 00315000
CONV7730              EQU   2      Version level for HBB7730            00316000
*                                                                       00317000
*                                      CONVCON PROCESSOR entry point    00318000
*                                                                       00319000
*   CONVCON Return and Reason Code definitions                          00320000
*                                                                       00321000
*                                                                       00322000
ConVConRet0_ConsoleActive EQU 0    Meaning: The input console is       *00323000
                                   active. Action: Examine the reason  *00324000
                                   code to determine how to proceed.    00325000
ConVConRsn0_AreaIdValid EQU 0      Meaning: The area ID (if specified) *00326000
                                   is syntactically valid. Action:     *00327000
                                   None.                                00328000
ConVConRsnC_AreaIdInvalid EQU 12   Meaning: Program error. The area id *00329000
                                   specified is not syntactically      *00330000
                                   valid. Action: Correct the area ID  *00331000
                                   specification. The area ID must be  *00332000
                                   a letter between A-K or Z.           00333000
ConVConRsn10_AreaIdWrongLength EQU 16                                   00334000
*                                                                       00335000
*                                      Meaning: Program error. The      00336000
*                                      area ID was either not           00337000
*                                      specified after the dash or      00338000
*                                      additional non-blank             00339000
*                                      characters were specified        00340000
*                                      after the area ID in CONVFLD.    00341000
*                                      Action: Correct the area ID      00342000
*                                      specification. The area ID       00343000
*                                      must be a letter between A-K     00344000
*                                      or Z.                            00345000
*                                                                       00346000
ConVConRet4_ConsoleInactive EQU 4  Meaning: The input console is       *00347000
                                   inactive. Action: Messages cannot   *00348000
                                   be sent to this console. You must   *00349000
                                   direct messages elsewhere. Examine  *00350000
                                   the reason code for additional      *00351000
                                   information.                         00352000
ConVConRet8_ConsoleNameNotFound EQU 8                                   00353000
*                                                                       00354000
*                                      Meaning: The input console       00355000
*                                      name was not found. Action:      00356000
*                                      Examine the reason code to       00357000
*                                      determine how to proceed.        00358000
*                                                                       00359000
ConVConRsn0_BadName   EQU   0      Meaning: Program error. The console *00360000
                                   name specified is not valid for one *00361000
                                   of the following reasons: (1) No    *00362000
                                   console with the specified name     *00363000
                                   exists. (2) You specified an area   *00364000
                                   ID with the console name, but you   *00365000
                                   also set the flag CONVNPAR in the   *00366000
                                   CONVFLGS field of the CONV          *00367000
                                   parameter list. (3) You specified a *00368000
                                   console name with more than 8        00369000
*                                  characters. Action: Take the action *00370000
                                   number corresponding to the meaning *00371000
                                   number. (1) Change the console name *00372000
                                   to one that is defined in the       *00373000
                                   sysplex. (2) Remove the area ID     *00374000
                                   after the console name, or turn off *00375000
                                   the CONVNPAR flag in the CONV       *00376000
                                   parameter list. (3) Correct the     *00377000
                                   console name.                        00378000
ConVConRsn8_InvalidSyntax EQU 8    Meaning: Program error. The console *00379000
                                   name specified contains invalid     *00380000
                                   syntax. Action: Correct the syntax  *00381000
                                   of the console name and resubmit    *00382000
                                   the request.                         00383000
ConVConRsnC_NameIsReserved EQU 12  Meaning: Program error. The console *00384000
                                   name specified is a reserved        *00385000
                                   console name. Action: Correct the   *00386000
                                   problem and resubmit the request.    00387000
ConVConRetC_IncorrectConsoleId EQU 12                                   00388000
*                                                                       00389000
*                                      Meaning: Program error. You      00390000
*                                      specified an incorrect console   00391000
*                                      ID on input. Action: Specify a   00392000
*                                      valid 4-byte console id.         00393000
*                                      Correct the problem and          00394000
*                                      resubmit the request.            00395000
*                                                                       00396000
ConVConRet10_NotAvailable EQU 16   Meaning: Environmental error. The   *00397000
                                   ConVCon service is not available    *00398000
                                   Action: Resubmit the request at a   *00399000
                                   later time.                          00400000
ConVConRet14_IBMDiagnostic EQU 20  Meaning: System error. These codes  *00401000
                                   are for IBM diagnostic purposes     *00402000
                                   only. Action: Supply the return     *00403000
                                   code, reason code, CNZ0001I         *00404000
                                   message, and the dump to the        *00405000
                                   appropriate IBM support personel.    00406000
ConVConRet18_NoInputSpecified EQU 24                                    00407000
*                                                                       00408000
*                                      Meaning: Program error.          00409000
*                                      CONVCON processing completed     00410000
*                                      unsuccessfully. You did not      00411000
*                                      specify whether a console name   00412000
*                                      or a console ID was being        00413000
*                                      supplied as input. Action:       00414000
*                                      Ensure that exactly one of the   00415000
*                                      console input flags in field     00416000
*                                      CONVFLGS is on and resubmit      00417000
*                                      the request.                     00418000
*                                                                       00419000
ConVConRet1C_TooMuchInput EQU 28   Meaning: Program error. CONVCON     *00420000
                                   processing completed                *00421000
                                   unsuccessfully. You specified both  *00422000
                                   the console name and console ID     *00423000
                                   values in CONVFLGS. Action: Ensure  *00424000
                                   that you only have one of the       *00425000
                                   console input flags in field        *00426000
                                   CONVFLGS is on and resubmit the     *00427000
                                   request.                             00428000
ConVConRet20_BadAcronym EQU 32     Meaning: Program error. CONVCON     *00429000
                                   processing completed                *00430000
                                   unsuccessfully. The CONV acronym    *00431000
                                   was missing in the CONV parameter   *00432000
                                   list. Action: Ensure that you are   *00433000
                                   correctly referencing the parameter *00434000
                                   list issuing CONVCON, and that the  *00435000
                                   parameter list is correct. Resubmit *00436000
                                   the request.                         00437000
ConVConRet24_HoldingLocks EQU 36   Meaning: Program error. CONVCON was *00438000
                                   called while holding a lock.        *00439000
                                   Action: Correct the program to      *00440000
                                   invoke CONVCON while no locks are   *00441000
                                   held.                                00442000
ConVConRet28_IncorrectEnv EQU 40   Meaning: The CONVCON service was    *00443000
                                   invoked in an incorrect             *00444000
                                   environment. Action: Invoke the     *00445000
                                   CONVCON service in a valid          *00446000
                                   environment.                         00447000
*                                                                       00448000
*   End of CONVCON Return and Reason Code definitions                   00449000
*                                                                       00450000
*    *****************************************************************  00451000
*    *                                                               *  00452000
*    * Console Types. A console type will be returned for any console*  00453000
*    * name                                                             00454000
*    * or console id query that completes successfully.                 00455000
*    *                                                                  00456000
*    *                                                               *  00457000
*    *****************************************************************  00458000
*                                                                       00459000
*                                                                       00460000
CnzConv_kType_MCS     EQU   1                                           00461000
CnzConv_kType_SMCS    EQU   2                                           00462000
CnzConv_kType_Subsys  EQU   3                                           00463000
CnzConv_kType_EMCS    EQU   4                                           00464000
CnzConv_kType_Special EQU   5                                           00465000
*                                                                       00466000
*    *****************************************************************  00467000
*    *                                                               *  00468000
*    * Console SubTypes Note: Subtypes Internal, Instream, Unknown,  *  00469000
*    * and JES3                                                         00470000
*    * will appear only with a console type of special.                 00471000
*    * Subtype SysCon will appear only with a console                   00472000
*    * type of EMCS.                                                    00473000
*    * Subtype HMCS will appear only with a console                     00474000
*    * type of MCS.                                                     00475000
*    * When no console subtype is associated with the                   00476000
*    * input console, the console subtype will be                       00477000
*    * binary zeros (N/A).                                              00478000
*    *                                                                  00479000
*    *                                                               *  00480000
*    *****************************************************************  00481000
*                                                                       00482000
*                                                                       00483000
CnzConv_kSubType_Internal EQU 1    Possible only for a console type of *00484000
                                   special                              00485000
CnzConv_kSubType_Instream EQU 2    Possible only for a console type of *00486000
                                   special                              00487000
CnzConv_kSubType_Unknown EQU 3     Possible only for a console type of *00488000
                                   special                              00489000
CnzConv_kSubType_JES3 EQU   4      Possible only for a console type of *00490000
                                   special                              00491000
CnzConv_kSubType_SysCon EQU 5      Possible only for a console type of *00492000
                                   EMCS                                 00493000
CnzConv_kSubType_HMCS EQU   6      Possible only for a console type of *00494000
                                   MCS                                  00495000
*                                                                       00496000
*    *****************************************************************  00497000
*    *                                                               *  00498000
*    * Console Status Note: The console status will be returned for a*  00499000
*    *                                                                  00500000
*    * console whose console type is one of the                         00501000
*    * following:                                                       00502000
*    * MCS                                                              00503000
*    * SMCS                                                             00504000
*    * SubSys                                                           00505000
*    * EMCS                                                             00506000
*    * When the input console has a console type of                     00507000
*    * Special, the console status will be binary zeros                 00508000
*    * (N/A).                                                           00509000
*    *                                                                  00510000
*    *                                                               *  00511000
*    *****************************************************************  00512000
*                                                                       00513000
*                                                                       00514000
CnzConv_kStatus_Inactive EQU 1                                          00515000
CnzConv_kStatus_Active EQU  2                                           00516000
*                                                                       00517000
* ********************************************************************  00518000
* *                                                                  *  00519000
* * Return and reason code definitions for CNZCONV                   *  00520000
* *                                                                     00521000
* ********************************************************************  00522000
* * CNZCONV Return and Reason Code definitions                       *  00523000
*                                                                       00524000
*                                                                       00525000
CnzConvRc0_Ok         EQU   X'00000000' Meaning: The input console     *00526000
                                   name or id was found and the        *00527000
                                   applicable requested data was       *00528000
                                   returned. Action: None required.     00529000
CnzConvRc4_ConditionallyOK EQU X'00000004' Meaning: The request        *00530000
                                   completed successfully with an      *00531000
                                   exception. Action: Examine the      *00532000
                                   reason code to determine how to     *00533000
                                   proceed.                             00534000
CnzConvRsn401_IdNotFound EQU X'00000401' Meaning: The console id in    *00535000
                                   InConsoleId is not associated with  *00536000
                                   any console. Action: Correct the    *00537000
                                   console id in InConsoleId to be the *00538000
                                   id of a defined console or take     *00539000
                                   appropriate action when the console *00540000
                                   id in InConsoleId was not found.     00541000
CnzConvRsn402_NameNotFound EQU X'00000402' Meaning: The console name   *00542000
                                   in InConsoleName is not associated  *00543000
                                   with any console. Action: Correct   *00544000
                                   the console name in InConsoleName   *00545000
                                   to be the name of a defined console *00546000
                                   or take appropriate action when the *00547000
                                   console name in InConsoleName was   *00548000
                                   not found.                           00549000
CnzConvRsn403_NameIsReserved EQU X'00000403' Meaning: The input        *00550000
                                   console name is a reserved console  *00551000
                                   name. Action: Correct the console   *00552000
                                   name in InConsoleName to be the     *00553000
                                   name of a defined console or take   *00554000
                                   appropriate action when the console *00555000
                                   name in InConsoleName is reserved.   00556000
CnzConvRc8_SpecificationError EQU X'00000008' Meaning: An error was    *00557000
                                   detected in the CnzConv parameter   *00558000
                                   list. None of the requested data    *00559000
                                   has been returned. Action: Correct  *00560000
                                   the CnzConv parameter list. Examine *00561000
                                   the reason code to determine how to *00562000
                                   proceed.                             00563000
CnzConvRsn801_BadPlistVer EQU X'00000801' Meaning: The PLISTVER in the *00564000
                                   CnzConv parameter list is           *00565000
                                   incorrect. Action: Correct the      *00566000
                                   PLISTVER in the CnzConv parameter   *00567000
                                   list.                                00568000
CnzConvRsn802_ExtraneousInput EQU X'00000802' Meaning: InConsoleName   *00569000
                                   and InConsoleId are mutually        *00570000
                                   exclusive keywords but both were    *00571000
                                   specified. Action: Specify one and  *00572000
                                   only one of the following keywords: *00573000
                                   InConsoleName or InConsoleId.        00574000
CnzConvRsn803_IncompleteArgs EQU X'00000803' Meaning: Neither          *00575000
                                   InConsoleName nor InConsoleId       *00576000
                                   keyword was specified. Action:      *00577000
                                   Specify one and only one of the     *00578000
                                   following keywords: InConsoleName   *00579000
                                   or InConsoleId.                      00580000
CnzConvRsn804_NameInvalidSyntax EQU X'00000804'                         00581000
*                                                                       00582000
*                                      Meaning: The console name in     00583000
*                                      InConsoleName is syntactically   00584000
*                                      invalid and cannot be a          00585000
*                                      console name. Action: Correct    00586000
*                                      the input console name.          00587000
*                                                                       00588000
CnzConvRsn805_RsvSpaceNotZero EQU X'00000805' Meaning: Reserved space  *00589000
                                   in the CnzConv parameter list is    *00590000
                                   not binary zeros. Action: Correct   *00591000
                                   the CnzConv parameter list so that  *00592000
                                   the reserved space contains binary  *00593000
                                   zeros.                               00594000
CnzConvRcC_Error      EQU   X'0000000C' Meaning: The request failed to *00595000
                                   complete successfully. None of the  *00596000
                                   requested data has been returned.   *00597000
                                   Action: Examine the reason code to  *00598000
                                   determine how to proceed.            00599000
CnzConvRsnC01_NotAvailable EQU X'00000C01' Meaning: The CnzConv        *00600000
                                   service is not available at this    *00601000
                                   time. This typically would not      *00602000
                                   occur after system initialization.  *00603000
                                   Action: Resubmit your request at a  *00604000
                                   later time.                          00605000
CnzConvRsnC02_IncorrectEnv EQU X'00000C02' Meaning: The CnzConv        *00606000
                                   service was invoked in an incorrect *00607000
                                   environment. Action: Invoke the     *00608000
                                   CnzConv service in the correct      *00609000
                                   environment.                         00610000
CnzConvRc10_UnexpectedError EQU X'00000010' Meaning: Unexpected        *00611000
                                   failure occurred. The outcome of    *00612000
                                   the request is unpredictable,       *00613000
                                   meaning that it may have completed  *00614000
                                   successfully, or partially, or not  *00615000
                                   at all. All, some, or none of the   *00616000
                                   data requested has been returned. A *00617000
                                   dump may have been taken. Action:   *00618000
                                   Examine the reason code to          *00619000
                                   determine how to proceed.            00620000
CnzConvRsn1001_SevereError EQU X'00001001' Meaning: The CnzConv        *00621000
                                   service was unable to complete your *00622000
                                   request due to an unexpected error  *00623000
                                   processing the CnzConv request.     *00624000
                                   Action: Supply the return code,     *00625000
                                   reason code, and the dump to the    *00626000
                                   appropriate IBM support personel.    00627000
CONVGLEN              EQU   *-CONV                                      00628000
.L0002                ANOP                                              00629000
                      AIF   ('&ZCBPRINT' EQ 'NO').P3                    00630000
                      AIF   ('&LIST' EQ 'YES').P4                       00631000
.P3                   ANOP                                              00632000
                      POP   PRINT                                       00633000
.P4                   ANOP                                              00634000
.P_EXIT               ANOP                                              00635000
                      MEND                                              00636000
**/ IEZVG200_2:;                                                        00637000
* %IEZVG200_INCLUDED = 'YES';                                           00638000
* %DCL ZCBPRINT CHAR EXT;                                               00639000
* %DEACTIVATE ZCBPRINT;                                                 00640000
* %DCL IEZVG200_LIST CHAR EXT;                                          00641000
* %DEACTIVATE IEZVG200_LIST;                                            00642000
* %IF IEZVG200_LIST ^= 'NO' &                                           00643000
*    ZCBPRINT ^= 'NO' %THEN                                             00644000
*   %GOTO IEZVG200_3;                                                   00645000
*   @LIST PUSH NOECHO;                                                  00646000
*   @LIST NOASSEMBLE NOECHO;                                            00647000
*   @LIST OFF C NOECHO;                                                 00648000
* %IEZVG200_3:;                                                         00649000
*/* Start of PL/X Source                                             */ 00650000
*%Dcl IEZVG200_Use_Types char ext;  /*                           @P8C*/ 00651000
*                                                                       00652000
*/********************************************************************/ 00653000
*/*                                                                  */ 00654000
*/* The ConVCon macro uses the CONV mapping as an input parameter    */ 00655000
*/* list. The CONV parameter list will NOT be enhanced.              */ 00656000
*/*                                                              @P7A*/ 00657000
*/********************************************************************/ 00658000
*                                                                       00659000
*/********************************************************************/ 00660000
*/*                                                                  */ 00661000
*/* ConVCon parameter list (CONV)                                    */ 00662000
*/*                                                              @P8A*/ 00663000
*/********************************************************************/ 00664000
*                                                                       00665000
* DECLARE                                                               00666000
*  %IF translate(CONVBASE) = 'NONE' %THEN %GOTO CONVPLS1;    /*  @L6C*/ 00667000
*  1 CONV BASED BDY(WORD),          /* CONV parameter list       @L6C*/ 00668000
*  %GOTO CONVPLS2;                                                      00669000
*%CONVPLS1: ;                                                           00670000
*  %IF CONVATTR = '' %THEN %CONVATTR='BDY(WORD)';                       00671000
*  1 CONV CONVATTR,                 /* CONV parameter list           */ 00672000
*%CONVPLS2: ;                                                           00673000
*   3 CONVACRO    CHAR(4),          /* Acronym - 'CONV'              */ 00674000
*   3 CONVVRSN    FIXED(8),         /* Version level                 */ 00675000
*   3 CONVFLGS     BIT(8),          /* Communication flags           */ 00676000
*    5 CONVPFLD    BIT(1),          /* ON - indicates process CONVFLD*/ 00677000
*    5 CONVPID     BIT(1),          /* ON - indicates process CONVID */ 00678000
*    5 *           BIT(5),          /* Reserved bits             @01C*/ 00679000
*    5 *           BIT(1),          /* Reserved - was CONVOK1B   @L5C*/ 00680000
*   3 CONVRSV1     BIT(16),         /* Reserved                      */ 00681000
*   3 CONVFLD     CHAR(10),         /* EBCDIC input field            */ 00682000
*   3 CONVAREA    CHAR(1),          /* Area ID                       */ 00683000
*   3 CONVRSN     CHAR(1),          /* Reason Code               @D1C*/ 00684000
*   3 CONVNAME    CHAR(8),          /* Console name                  */ 00685000
*   3 CONVID      FIXED(32),        /* Console Id                @P7C*/ 00686000
*    5 CONVCLAS   FIXED(8),         /* Console Class             @L2A*/ 00687000
*    5 CONVCNUM   FIXED(24),        /* Console number            @L5C*/ 00688000
*   3 CONVGFLG     BIT(8),          /* General Flags                 */ 00689000
*    5 CONVNPAR    BIT(1),          /* ON - indicates do not process    00690000
*                                       area id                  @D1A*/ 00691000
*    5 CONVSMCS    BIT(1),          /* ON indicates SMCS Console @L3A*/ 00692000
*    5 *           BIT(6),          /* Reserved                  @D1A*/ 00693000
*   3 CONVRSV3    CHAR(7),          /* Reserved                  @L5C*/ 00694000
*   3 CONVSYSN    CHAR(8),          /* System name               @P2A*/ 00695000
*                                                                       00696000
* %/*****************************************************************/; 00697000
* %/* The CONVPTR field is used exclusively by the ConVCon          */; 00698000
* %/* macro as a manner of setting up addressability. The ConVCon   */; 00699000
* %/* macro loads R1 with the address of CONVPTR, so that when      */; 00700000
* %/* the ConVCon service processor gets control addressability     */; 00701000
* %/* to the CONV parameter list can be setup normally              */; 00702000
* %/* (R1->CONVPTR->CONV).                                      @L6C*/; 00703000
* %/*****************************************************************/; 00704000
*                                                                       00705000
*   3 CONVPTR     PTR(31);          /* Pointer to conv           @P1C*/ 00706000
*                                                                       00707000
* DECLARE                                                               00708000
*  CONVRID  FIXED(8) CONSTANT(CONV7730), /* Current version level       00709000
*                                                                @P7C*/ 00710000
*  CONVPLEN Fixed(31) Constant(48),    /* Length of the CONV parameter  00711000
*                                      list                      @P8C*/ 00712000
*  CONVCHRS CHAR(4)  CONSTANT('CONV'), /* Characters for acronym @P7M*/ 00713000
*  CONVSP41 FIXED(8) CONSTANT(1),      /* Version level for SP410@P7M*/ 00714000
*  CONV7730 FIXED(8) CONSTANT(2);      /* Version level for HBB7730     00715000
*                                                                @P7A*/ 00716000
*                                                                       00717000
*DECLARE                                                                00718000
*  CONVCVT  PTR    LOCATION(16),    /* POINTER FROM PSA TO CVT       */ 00719000
*  CONVUCM  PTR    BASED(CONVCVT)                                       00720000
*                      POSITION(101), /* Pointer from CVT to UCM base*/ 00721000
*  CONVCONA PTR   BASED(CONVUCM)                                        00722000
*                      POSITION(305), /* UCM pointer to ConVCon         00723000
*                                        processor               @L6C*/ 00724000
*  CONVCON  ENTRY BASED(CONVCONA)                                       00725000
*                      VALUERANGE(*)                                    00726000
*                      OPTIONS(AMODE(*)); /* CONVCON PROCESSOR          00727000
*                                                        entry point */ 00728000
*                                                                       00729000
*%/******************************************************************/; 00730000
*%/*                                                                */; 00731000
*%/* These are constant declares for the return and reason codes    */; 00732000
*%/* returned by the ConVCon macro. Note that this list will not    */; 00733000
*%/* be enhanced. This is only included for PL/X callers.           */; 00734000
*%/*                                                            @P7A*/; 00735000
*%/******************************************************************/; 00736000
*                                                                       00737000
*%Dcl Asaxmac_IsItPLX Char Ext;     /* Variable set by AsaXMac   @P7A*/ 00738000
*  ?ASAXMAC IsItPLX;                                                    00739000
*%IF translate(Asaxmac_IsItPLX) = 'YES' %THEN /* Is PL/X?        @P7A*/ 00740000
*%DO;                               /* Yes, include return codes @P7A*/ 00741000
*                                                                       00742000
*/* CONVCON Return and Reason Code definitions                       */ 00743000
*DCL ConVConRet0_ConsoleActive Fixed(32) Constant('00000000'X) ; /*     00744000
*                        Meaning: The input console is active.          00745000
*                        Action: Examine the reason code to determine   00746000
*                        how to proceed.                             */ 00747000
*DCL ConVConRsn0_AreaIdValid Fixed(32) Constant('00000000'X) ; /*       00748000
*                        Meaning: The area ID (if specified) is         00749000
*                        syntactically valid.                           00750000
*                        Action: None.                               */ 00751000
*DCL ConVConRsnC_AreaIdInvalid Fixed(32) Constant('0000000C'X) ; /*     00752000
*                        Meaning: Program error. The area id specified  00753000
*                        is not syntactically valid.                    00754000
*                        Action: Correct the area ID specification. The 00755000
*                        area ID must be a letter between A-K or Z.  */ 00756000
*DCL ConVConRsn10_AreaIdWrongLength Fixed(32) Constant('00000010'X)     00757000
*                        ; /*                                           00758000
*                        Meaning: Program error. The area ID was either 00759000
*                        not specified after the dash or additional     00760000
*                        non-blank characters were specified after the  00761000
*                        area ID in CONVFLD.                            00762000
*                        Action: Correct the area ID specification. The 00763000
*                        area ID must be a letter between A-K or Z.  */ 00764000
*DCL ConVConRet4_ConsoleInactive Fixed(32) Constant('00000004'X) ; /*   00765000
*                        Meaning: The input console is inactive.        00766000
*                        Action: Messages cannot be sent to this        00767000
*                        console. You must direct messages elsewhere.   00768000
*                        Examine the reason code for additional         00769000
*                        information.                                */ 00770000
*DCL ConVConRet8_ConsoleNameNotFound Fixed(32) Constant('00000008'X)    00771000
*                        ; /*                                           00772000
*                        Meaning: The input console name was not found. 00773000
*                        Action: Examine the reason code to determine   00774000
*                        how to proceed.                             */ 00775000
*DCL ConVConRsn0_BadName Fixed(32) Constant('00000000'X) ; /*           00776000
*                        Meaning: Program error. The console name       00777000
*                        specified is not valid for one of the          00778000
*                        following reasons: (1) No console with the     00779000
*                        specified name exists. (2) You specified an    00780000
*                        area ID with the console name, but you also    00781000
*                        set the flag CONVNPAR in the CONVFLGS field of 00782000
*                        the CONV parameter list. (3) You specified a   00783000
*                        console name with more than 8 characters.      00784000
*                        Action: Take the action number corresponding   00785000
*                        to the meaning number. (1) Change the console  00786000
*                        name to one that is defined in the sysplex.    00787000
*                        (2) Remove the area ID after the console name, 00788000
*                        or turn off the CONVNPAR flag in the CONV      00789000
*                        parameter list. (3) Correct the console name.  00790000
*                                                                    */ 00791000
*DCL ConVConRsn8_InvalidSyntax Fixed(32) Constant('00000008'X) ; /*     00792000
*                        Meaning: Program error. The console name       00793000
*                        specified contains invalid syntax.             00794000
*                        Action: Correct the syntax of the console name 00795000
*                        and resubmit the request.                   */ 00796000
*DCL ConVConRsnC_NameIsReserved Fixed(32) Constant('0000000C'X) ; /*    00797000
*                        Meaning: Program error. The console name       00798000
*                        specified is a reserved console name.          00799000
*                        Action: Correct the problem and resubmit the   00800000
*                        request.                                    */ 00801000
*DCL ConVConRetC_IncorrectConsoleId Fixed(32) Constant('0000000C'X)     00802000
*                        ; /*                                           00803000
*                        Meaning: Program error. You specified an       00804000
*                        incorrect console ID on input.                 00805000
*                        Action: Specify a valid 4-byte console id.     00806000
*                        Correct the problem and resubmit the request.  00807000
*                                                                    */ 00808000
*DCL ConVConRet10_NotAvailable Fixed(32) Constant('00000010'X) ; /*     00809000
*                        Meaning: Environmental error. The ConVCon      00810000
*                        service is not available                       00811000
*                        Action: Resubmit the request at a later time.  00812000
*                                                                    */ 00813000
*DCL ConVConRet14_IBMDiagnostic Fixed(32) Constant('00000014'X) ; /*    00814000
*                        Meaning: System error. These codes are for IBM 00815000
*                        diagnostic purposes only.                      00816000
*                        Action: Supply the return code, reason code,   00817000
*                        CNZ0001I message, and the dump to the          00818000
*                        appropriate IBM support personel.           */ 00819000
*DCL ConVConRet18_NoInputSpecified Fixed(32) Constant('00000018'X) ; /* 00820000
*                        Meaning: Program error. CONVCON processing     00821000
*                        completed unsuccessfully. You did not specify  00822000
*                        whether a console name or a console ID was     00823000
*                        being supplied as input.                       00824000
*                        Action: Ensure that exactly one of the console 00825000
*                        input flags in field CONVFLGS is on and        00826000
*                        resubmit the request.                       */ 00827000
*DCL ConVConRet1C_TooMuchInput Fixed(32) Constant('0000001C'X) ; /*     00828000
*                        Meaning: Program error. CONVCON processing     00829000
*                        completed unsuccessfully. You specified both   00830000
*                        the console name and console ID values in      00831000
*                        CONVFLGS.                                      00832000
*                        Action: Ensure that you only have one of the   00833000
*                        console input flags in field CONVFLGS is on    00834000
*                        and resubmit the request.                   */ 00835000
*DCL ConVConRet20_BadAcronym Fixed(32) Constant('00000020'X) ; /*       00836000
*                        Meaning: Program error. CONVCON processing     00837000
*                        completed unsuccessfully. The CONV acronym was 00838000
*                        missing in the CONV parameter list.            00839000
*                        Action: Ensure that you are correctly          00840000
*                        referencing the parameter list issuing         00841000
*                        CONVCON, and that the parameter list is        00842000
*                        correct. Resubmit the request.              */ 00843000
*DCL ConVConRet24_HoldingLocks Fixed(32) Constant('00000024'X) ; /*     00844000
*                        Meaning: Program error. CONVCON was called     00845000
*                        while holding a lock.                          00846000
*                        Action: Correct the program to invoke CONVCON  00847000
*                        while no locks are held.                    */ 00848000
*DCL ConVConRet28_IncorrectEnv Fixed(32) Constant('00000028'X) ; /*     00849000
*                        Meaning: The CONVCON service was invoked in an 00850000
*                        incorrect environment.                         00851000
*                        Action: Invoke the CONVCON service in a valid  00852000
*                        environment.                                */ 00853000
*/* End of CONVCON Return and Reason Code definitions                */ 00854000
*%End;                              /* End include return codes  @P7A*/ 00855000
*                                                                       00856000
*%/******************************************************************/; 00857000
*%/*                                                                */; 00858000
*%/* CnzConv declares begin here:                                   */; 00859000
*%/*                                                            @P8A*/; 00860000
*%/******************************************************************/; 00861000
*                                                                       00862000
*%/******************************************************************/; 00863000
*%/*                                                                */; 00864000
*%/* The console type, subtype, and status constants are            */; 00865000
*%/* defined below. They will be defined as types or as plain       */; 00866000
*%/* constants depending on IEZVG200_Use_Types's value.             */; 00867000
*%/*                                                            @P8A*/; 00868000
*%/******************************************************************/; 00869000
*                                                                       00870000
*%If translate(IEZVG200_Use_Types) ^= 'CNZ' %Then /* Anything except    00871000
*                                      CNZ types?                @P8A*/ 00872000
* %Do;                              /* Yes, include CnzConv             00873000
*                                      constants                 @P8A*/ 00874000
*                                                                       00875000
*  %/****************************************************************/; 00876000
*  %/*                                                              */; 00877000
*  %/* Whenever a new type must be declared in this                 */; 00878000
*  %/* parameter list, a macrotime variable for the suffix must     */; 00879000
*  %/* be declared here.                                            */; 00880000
*  %/*                                                          @P8A*/; 00881000
*  %/****************************************************************/; 00882000
*                                                                       00883000
*  %Dcl CnzConv_kType_MCS_Suf char  /* Type MCS suffix           @P8A*/ 00884000
*      ,CnzConv_kType_SMCS_Suf char /* Type SMCS suffix          @P8A*/ 00885000
*      ,CnzConv_kType_Subsys_Suf char /* Type subsys suffix      @P8A*/ 00886000
*      ,CnzConv_kType_EMCS_Suf char /* Type EMCS suffix          @P8A*/ 00887000
*      ,CnzConv_kType_Special_Suf char /* Type special suffix    @P8A*/ 00888000
*      ,CnzConv_kSubType_Internal_Suf char /* Subtype internal          00889000
*                                      suffix                    @P8A*/ 00890000
*      ,CnzConv_kSubType_Instream_Suf char /* Subtype instream          00891000
*                                      suffix                    @P8A*/ 00892000
*      ,CnzConv_kSubType_Unknown_Suf char /* Subtype unknown            00893000
*                                      suffix                    @P8A*/ 00894000
*      ,CnzConv_kSubType_JES3_Suf char /* Subtype JES3 suffix    @02A*/ 00895000
*      ,CnzConv_kSubType_SysCon_Suf char /* Subtype SysCon suffix       00896000
*                                                                @L8A*/ 00897000
*      ,CnzConv_kSubType_HMCS_Suf char /* Subtype HMCS suffix    @LAA*/ 00898000
*      ,CnzConv_kStatus_InActive_Suf char /* Console Status Inactive    00899000
*                                      suffix                    @P8A*/ 00900000
*      ,CnzConv_kStatus_Active_Suf char /* Console Status Active        00901000
*                                      suffix                    @P8A*/ 00902000
*      ;                                                                00903000
*                                                                       00904000
*  %/****************************************************************/; 00905000
*  %/*                                                              */; 00906000
*  %/* Check if any types were requested. If so, set the macrotime  */; 00907000
*  %/* suffixes appropriately.                                      */; 00908000
*  %/*                                                          @P8A*/; 00909000
*  %/****************************************************************/; 00910000
*                                                                       00911000
*  %If translate(IEZVG200_Use_Types) = 'YES' %Then /* Were regular      00912000
*                                      types requested           @P8A*/ 00913000
*  %Do;                             /* Yes, types were requested @P8A*/ 00914000
*                                                                       00915000
*    %CnzConv_kType_MCS_Suf =                                           00916000
*           "constant(1) isa(CnzConv_tType)"; /* Set the                00917000
*                                      type suffix for a primary        00918000
*                                      type of MCS               @P8A*/ 00919000
*    %CnzConv_kType_SMCS_Suf =                                          00920000
*           "constant(2) isa(CnzConv_tType)"; /* Set the                00921000
*                                      type suffix for a primary        00922000
*                                      type of SMCS              @P8A*/ 00923000
*    %CnzConv_kType_Subsys_Suf =                                        00924000
*           "constant(3) isa(CnzConv_tType)"; /* Set the                00925000
*                                      type suffix for a primary        00926000
*                                      type of subsystem         @P8A*/ 00927000
*    %CnzConv_kType_EMCS_Suf =                                          00928000
*           "constant(4) isa(CnzConv_tType)"; /* Set the                00929000
*                                      type suffix for a primary        00930000
*                                      type of EMCS              @P8A*/ 00931000
*    %CnzConv_kType_Special_Suf =                                       00932000
*           "constant(5) isa(CnzConv_tType)"; /* Set the                00933000
*                                      type suffix for a primary        00934000
*                                      type of special           @P8A*/ 00935000
*    %CnzConv_kSubType_Internal_Suf =                                   00936000
*           "constant(1) isa(CnzConv_tSubType)"; /* Set the             00937000
*                                      type suffix for                  00938000
*                                      a subtype of internal     @P8A*/ 00939000
*    %CnzConv_kSubType_Instream_Suf =                                   00940000
*           "constant(2) isa(CnzConv_tSubType)"; /* Set the             00941000
*                                      type suffix for                  00942000
*                                      a subtype of instream     @P8A*/ 00943000
*    %CnzConv_kSubType_Unknown_Suf =                                    00944000
*           "constant(3) isa(CnzConv_tSubType)"; /* Set the             00945000
*                                      type suffix for                  00946000
*                                      a subtype of unknown      @P8A*/ 00947000
*    %CnzConv_kSubType_JES3_Suf =                                       00948000
*           "constant(4) isa(CnzConv_tSubType)"; /* Set the             00949000
*                                      type suffix for                  00950000
*                                      a subtype of JES3         @02A*/ 00951000
*    %CnzConv_kSubType_SysCon_Suf =                                     00952000
*           "constant(5) isa(CnzConv_tSubType)"; /* Set the             00953000
*                                      type suffix for                  00954000
*                                      a subtype of SysCon       @L8A*/ 00955000
*    %CnzConv_kSubType_HMCS_Suf =                                       00956000
*           "constant(6) isa(CnzConv_tSubType)"; /* Set the             00957000
*                                      type suffix for                  00958000
*                                      a subtype of HMCS         @LAA*/ 00959000
*    %CnzConv_kStatus_InActive_Suf=                                     00960000
*           "constant(1) isa(CnzConv_tStatus)"; /* Set the type status  00961000
*                                      suffix for inactive       @P8A*/ 00962000
*    %CnzConv_kStatus_Active_Suf =                                      00963000
*           "constant(2) isa(CnzConv_tStatus)"; /* Set the type status  00964000
*                                      suffix for active         @P8A*/ 00965000
*  %End;                            /* End types were requested  @P8A*/ 00966000
*  %Else                            /* Else no types requested   @P8A*/ 00967000
*  %Do;                             /* No types requested        @P8A*/ 00968000
*                                                                       00969000
*    %CnzConv_kType_MCS_Suf = "constant(1) fixed(8)"; /*                00970000
*                                      Set the non-type suffix for      00971000
*                                      a type of MCS             @P8A*/ 00972000
*    %CnzConv_kType_SMCS_Suf = "constant(2) fixed(8)"; /*               00973000
*                                      Set the non-type suffix for      00974000
*                                      a type of SMCS            @P8A*/ 00975000
*    %CnzConv_kType_Subsys_Suf = "constant(3) fixed(8)"; /*             00976000
*                                      Set the non-type suffix for      00977000
*                                      a type of subsystem       @P8A*/ 00978000
*    %CnzConv_kType_EMCS_Suf = "constant(4) fixed(8)"; /*               00979000
*                                      Set the non-type suffix for      00980000
*                                      a type of EMCS            @P8A*/ 00981000
*    %CnzConv_kType_Special_Suf = "constant(5) fixed(8)"; /*            00982000
*                                      Set the non-type suffix for      00983000
*                                      a type of Special         @P8A*/ 00984000
*    %CnzConv_kSubType_Internal_Suf = "constant(1) fixed(8)"; /*        00985000
*                                      Set the non-type suffix for      00986000
*                                      a subtype of internal     @P8A*/ 00987000
*    %CnzConv_kSubType_Instream_Suf = "constant(2) fixed(8)"; /*        00988000
*                                      Set the non-type suffix for      00989000
*                                      a subtype of instream     @P8A*/ 00990000
*    %CnzConv_kSubType_Unknown_Suf = "constant(3) fixed(8)"; /*         00991000
*                                      Set the non-type suffix for      00992000
*                                      a subtype of unknown      @P8A*/ 00993000
*    %CnzConv_kSubType_JES3_Suf = "constant(4) fixed(8)"; /*            00994000
*                                      Set the non-type suffix for      00995000
*                                      a subtype of JES3         @02A*/ 00996000
*    %CnzConv_kSubType_SysCon_Suf = "constant(5) fixed(8)"; /*          00997000
*                                      Set the non-type suffix for      00998000
*                                      a subtype of SysCon       @L8A*/ 00999000
*    %CnzConv_kSubType_HMCS_Suf   = "constant(6) fixed(8)"; /*          01000000
*                                      Set the non-type suffix for      01001000
*                                      a subtype of HMCS         @LAA*/ 01002000
*    %CnzConv_kStatus_InActive_Suf = "constant(1) Fixed(8)"; /* Set     01003000
*                                      the non-type status              01004000
*                                      suffix for inactive       @P8A*/ 01005000
*    %CnzConv_kStatus_Active_Suf = "constant(2) Fixed(8)"; /* Set       01006000
*                                      the non-type status              01007000
*                                      suffix for active         @P8A*/ 01008000
*                                                                       01009000
*  %End;                            /* End no types requested    @P8A*/ 01010000
*                                                                       01011000
*   /****************************************************************/  01012000
*   /*                                                              */  01013000
*   /* Console Types.                                               */  01014000
*   /*                                                              */  01015000
*   /* A console type will be returned for any console name     @02A*/  01016000
*   /* or console id query that completes successfully.         @02A*/  01017000
*   /*                                                              */  01018000
*  %/*                                                              */; 01019000
*  %/* Any console type updates will require changes be             */; 01020000
*  %/* made to the console types defined in CNZMXCNS. Conversely,   */; 01021000
*  %/* any updates made to the console types in CNZMXCNS may need   */; 01022000
*  %/* to be reflected below.                                       */; 01023000
*   /*                                                          @P8A*/  01024000
*   /****************************************************************/  01025000
*                                                                       01026000
*  %If translate(IEZVG200_Use_Types) = 'YES' %Then /* Were regular      01027000
*                                        types requested?        @P8A*/ 01028000
*  %Do;                             /* Yes, use regular types    @P8A*/ 01029000
*                                                                       01030000
*      Dcl CnzConv_tType fixed(8) type, /*                       @P8A*/ 01031000
*  %End;                              /* Endif use regular types @P8A*/ 01032000
*  %Else                              /* Else no types requested @P8A*/ 01033000
*  %Do;                               /* No types requested      @P8A*/ 01034000
*      Dcl                                                              01035000
*  %End;                              /* End no types requested  @P8A*/ 01036000
*                                                                       01037000
*                                                                       01038000
*      CnzConv_kType_MCS        CnzConv_kType_MCS_Suf                   01039000
*     ,CnzConv_kType_SMCS       CnzConv_kType_SMCS_Suf                  01040000
*     ,CnzConv_kType_Subsys     CnzConv_kType_Subsys_Suf                01041000
*     ,CnzConv_kType_EMCS       CnzConv_kType_EMCS_Suf                  01042000
*     ,CnzConv_kType_Special    CnzConv_kType_Special_Suf               01043000
*     ;                               /*                         @P8A*/ 01044000
*                                                                       01045000
*   /****************************************************************/  01046000
*   /*                                                              */  01047000
*   /* Console SubTypes                                             */  01048000
*   /*                                                              */  01049000
*   /* Note: Subtypes Internal, Instream, Unknown, and JES3     @L8C*/  01050000
*   /*       will appear only with a console type of special.   @L8C*/  01051000
*   /*       Subtype SysCon will appear only with a console     @L9C*/  01052000
*   /*       type of EMCS.                                      @L9C*/  01053000
*   /*       Subtype HMCS will appear only with a console       @LAA*/  01054000
*   /*       type of MCS.                                       @LAA*/  01055000
*   /*       When no console subtype is associated with the     @L8C*/  01056000
*   /*       input console, the console subtype will be         @L8C*/  01057000
*   /*       binary zeros (N/A).                                @L8C*/  01058000
*  %/*                                                              */; 01059000
*  %/* Any console SubType updates will require changes be made to  */; 01060000
*  %/* the console types defined in CNZMXCNS. Conversely, any       */; 01061000
*  %/* updates made to the console types in CNZMXCNS may need to be */; 01062000
*  %/* reflected below.                                             */; 01063000
*   /*                                                          @P8A*/  01064000
*   /****************************************************************/  01065000
*                                                                       01066000
*  %If translate(IEZVG200_Use_Types) = 'YES' %Then /* Were regular      01067000
*                                        types requested?        @P8A*/ 01068000
*  %Do;                               /* Yes, use regular types  @P8A*/ 01069000
*                                                                       01070000
*       Dcl CnzConv_tSubType fixed(8) type, /*                   @P8A*/ 01071000
*  %End;                              /* Endif use regular types @P8A*/ 01072000
*  %Else                              /* Else no types requested @P8A*/ 01073000
*  %Do;                               /* No types requested      @P8A*/ 01074000
*       Dcl                                                             01075000
*  %End;                              /* End no types requested  @P8A*/ 01076000
*                                                                       01077000
*       CnzConv_kSubType_Internal   CnzConv_kSubType_Internal_Suf /*    01078000
*                                      Possible only for a console type 01079000
*                                      of special                @P8A*/ 01080000
*      ,CnzConv_kSubType_Instream   CnzConv_kSubType_Instream_Suf /*    01081000
*                                      Possible only for a console type 01082000
*                                      of special                @P8A*/ 01083000
*      ,CnzConv_kSubType_Unknown    CnzConv_kSubType_Unknown_Suf /*     01084000
*                                      Possible only for a console type 01085000
*                                      of special                @P8A*/ 01086000
*      ,CnzConv_kSubType_JES3       CnzConv_kSubType_JES3_Suf /*        01087000
*                                      Possible only for a console type 01088000
*                                      of special                @02A*/ 01089000
*      ,CnzConv_kSubType_SysCon     CnzConv_kSubType_SysCon_Suf /*      01090000
*                                      Possible only for a console type 01091000
*                                      of EMCS                   @L8A*/ 01092000
*      ,CnzConv_kSubType_HMCS       CnzConv_kSubType_HMCS_Suf /*        01093000
*                                      Possible only for a console type 01094000
*                                      of MCS                    @LAA*/ 01095000
*      ;                            /*                           @P8A*/ 01096000
*                                                                       01097000
*                                                                       01098000
*   /****************************************************************/  01099000
*   /*                                                              */  01100000
*   /* Console Status                                               */  01101000
*   /*                                                              */  01102000
*   /* Note: The console status will be returned for a          @02A*/  01103000
*   /*       console whose console type is one of the           @02A*/  01104000
*   /*       following:                                         @02A*/  01105000
*   /*                                                              */  01106000
*   /*         MCS                                              @02A*/  01107000
*   /*         SMCS                                             @02A*/  01108000
*   /*         SubSys                                           @02A*/  01109000
*   /*         EMCS                                             @02A*/  01110000
*   /*                                                              */  01111000
*   /*       When the input console has a console type of       @02A*/  01112000
*   /*       Special, the console status will be binary zeros   @02A*/  01113000
*   /*       (N/A).                                             @02A*/  01114000
*  %/*                                                              */; 01115000
*  %/* Any console status updates will require changes be made to   */; 01116000
*  %/* the console statuses defined in CNZMXCNS. Conversely, any    */; 01117000
*  %/* updates made to the console types in CNZMXCNS may need       */; 01118000
*  %/* to be reflected below.                                       */; 01119000
*   /*                                                          @P8A*/  01120000
*   /****************************************************************/  01121000
*                                                                       01122000
*  %If translate(IEZVG200_Use_Types) = 'YES' %Then /* Were regular      01123000
*                                        types requested?        @P8A*/ 01124000
*  %Do;                               /* Yes, use regular types  @P8A*/ 01125000
*                                                                       01126000
*       Dcl CnzConv_tStatus fixed(8) type, /*                    @P8A*/ 01127000
*  %End;                              /* Endif use regular types @P8A*/ 01128000
*  %Else                              /* Else no types requested @P8A*/ 01129000
*  %Do;                               /* No types requested      @P8A*/ 01130000
*       Dcl                                                             01131000
*  %End;                              /* End no types requested  @P8A*/ 01132000
*                                                                       01133000
*       CnzConv_kStatus_Inactive   CnzConv_kStatus_Inactive_Suf         01134000
*      ,CnzConv_kStatus_Active     CnzConv_kStatus_Active_Suf           01135000
*      ;                            /*                           @P8A*/ 01136000
* %End;                             /* End include CnzConv constants    01137000
*                                                                @P8A*/ 01138000
*                                                                       01139000
*/********************************************************************/ 01140000
*/*                                                                  */ 01141000
*/* Return and reason code definitions for CNZCONV                   */ 01142000
*/*                                                              @P8A*/ 01143000
*/********************************************************************/ 01144000
*                                                                       01145000
*                                                                       01146000
*/* CNZCONV Return and Reason Code definitions                       */ 01147000
*DCL CnzConvRc0_Ok BIT(32) Constant('00000000'X) ; /*                   01148000
*                        Meaning: The input console name or id was      01149000
*                        found and the applicable requested data was    01150000
*                        returned.                                      01151000
*                        Action: None required.                      */ 01152000
*DCL CnzConvRc4_ConditionallyOK BIT(32) Constant('00000004'X) ; /*      01153000
*                        Meaning: The request completed successfully    01154000
*                        with an exception.                             01155000
*                        Action: Examine the reason code to determine   01156000
*                        how to proceed.                             */ 01157000
*DCL CnzConvRsn401_IdNotFound BIT(32) Constant('00000401'X) ; /*        01158000
*                        Meaning: The console id in InConsoleId is not  01159000
*                        associated with any console.                   01160000
*                        Action: Correct the console id in InConsoleId  01161000
*                        to be the id of a defined console or take      01162000
*                        appropriate action when the console id in      01163000
*                        InConsoleId was not found.                  */ 01164000
*DCL CnzConvRsn402_NameNotFound BIT(32) Constant('00000402'X) ; /*      01165000
*                        Meaning: The console name in InConsoleName is  01166000
*                        not associated with any console.               01167000
*                        Action: Correct the console name in            01168000
*                        InConsoleName to be the name of a defined      01169000
*                        console or take appropriate action when the    01170000
*                        console name in InConsoleName was not found.   01171000
*                                                                    */ 01172000
*DCL CnzConvRsn403_NameIsReserved BIT(32) Constant('00000403'X) ; /*    01173000
*                        Meaning: The input console name is a reserved  01174000
*                        console name.                                  01175000
*                        Action: Correct the console name in            01176000
*                        InConsoleName to be the name of a defined      01177000
*                        console or take appropriate action when the    01178000
*                        console name in InConsoleName is reserved.  */ 01179000
*DCL CnzConvRc8_SpecificationError BIT(32) Constant('00000008'X) ; /*   01180000
*                        Meaning: An error was detected in the CnzConv  01181000
*                        parameter list. None of the requested data has 01182000
*                        been returned.                                 01183000
*                        Action: Correct the CnzConv parameter list.    01184000
*                        Examine the reason code to determine how to    01185000
*                        proceed.                                    */ 01186000
*DCL CnzConvRsn801_BadPlistVer BIT(32) Constant('00000801'X) ; /*       01187000
*                        Meaning: The PLISTVER in the CnzConv parameter 01188000
*                        list is incorrect.                             01189000
*                        Action: Correct the PLISTVER in the CnzConv    01190000
*                        parameter list.                             */ 01191000
*DCL CnzConvRsn802_ExtraneousInput BIT(32) Constant('00000802'X) ; /*   01192000
*                        Meaning: InConsoleName and InConsoleId are     01193000
*                        mutually exclusive keywords but both were      01194000
*                        specified.                                     01195000
*                        Action: Specify one and only one of the        01196000
*                        following keywords: InConsoleName or           01197000
*                        InConsoleId.                                */ 01198000
*DCL CnzConvRsn803_IncompleteArgs BIT(32) Constant('00000803'X) ; /*    01199000
*                        Meaning: Neither InConsoleName nor InConsoleId 01200000
*                        keyword was specified.                         01201000
*                        Action: Specify one and only one of the        01202000
*                        following keywords: InConsoleName or           01203000
*                        InConsoleId.                                */ 01204000
*DCL CnzConvRsn804_NameInvalidSyntax BIT(32) Constant('00000804'X) ; /* 01205000
*                        Meaning: The console name in InConsoleName is  01206000
*                        syntactically invalid and cannot be a console  01207000
*                        name.                                          01208000
*                        Action: Correct the input console name.     */ 01209000
*DCL CnzConvRsn805_RsvSpaceNotZero BIT(32) Constant('00000805'X) ; /*   01210000
*                        Meaning: Reserved space in the CnzConv         01211000
*                        parameter list is not binary zeros.            01212000
*                        Action: Correct the CnzConv parameter list so  01213000
*                        that the reserved space contains binary zeros. 01214000
*                                                                    */ 01215000
*DCL CnzConvRcC_Error BIT(32) Constant('0000000C'X) ; /*                01216000
*                        Meaning: The request failed to complete        01217000
*                        successfully. None of the requested data has   01218000
*                        been returned.                                 01219000
*                        Action: Examine the reason code to determine   01220000
*                        how to proceed.                             */ 01221000
*DCL CnzConvRsnC01_NotAvailable BIT(32) Constant('00000C01'X) ; /*      01222000
*                        Meaning: The CnzConv service is not available  01223000
*                        at this time. This typically would not occur   01224000
*                        after system initialization.                   01225000
*                        Action: Resubmit your request at a later time. 01226000
*                                                                    */ 01227000
*DCL CnzConvRsnC02_IncorrectEnv BIT(32) Constant('00000C02'X) ; /*      01228000
*                        Meaning: The CnzConv service was invoked in an 01229000
*                        incorrect environment.                         01230000
*                        Action: Invoke the CnzConv service in the      01231000
*                        correct environment.                        */ 01232000
*DCL CnzConvRc10_UnexpectedError BIT(32) Constant('00000010'X) ; /*     01233000
*                        Meaning: Unexpected failure occurred. The      01234000
*                        outcome of the request is unpredictable,       01235000
*                        meaning that it may have completed             01236000
*                        successfully, or partially, or not at all.     01237000
*                        All, some, or none of the data requested has   01238000
*                        been returned. A dump may have been taken.     01239000
*                        Action: Examine the reason code to determine   01240000
*                        how to proceed.                             */ 01241000
*DCL CnzConvRsn1001_SevereError BIT(32) Constant('00001001'X) ; /*      01242000
*                        Meaning: The CnzConv service was unable to     01243000
*                        complete your request due to an unexpected     01244000
*                        error processing the CnzConv request.          01245000
*                        Action: Supply the return code, reason code,   01246000
*                        and the dump to the appropriate IBM support    01247000
*                        personel.                                   */ 01248000
*/* End of CNZCONV Return and Reason Code definitions                */ 01249000
*@LOGIC;                                                                01250000
*#PRAGMA TOOL=CBGEN.                                                    01251000
*#USEORG.                                                               01252000
*#ALIGNOP.                                                              01253000
*#NOTUPPER.                                                             01254000
*#LENGTHSUFFIX.GLEN                                                     01255000
*#EPRAGMA.                                                              01256000
*@ENDLOGIC;                                                             01257000
*/* End of PL/X Source                                               */ 01258000
* %IF IEZVG200_LIST ^= 'NO' &                                           01259000
*    ZCBPRINT ^= 'NO' %THEN                                             01260000
*   %GOTO IEZVG200_4;                                                   01261000
*   @LIST POP NOECHO;                                                   01262000
* %IEZVG200_4:;                                                         01263000
* %END;                                                                 01264000
