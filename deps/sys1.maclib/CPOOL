* %       GOTO PLSSKIP;                                                 00010000
*/********************************************************************/ 00020000
*/*                                                                  */ 00030000
*/* MACRO: CPOOL                                                     */ 00040000
*/*                                                                  */ 00050000
*/* COPYRIGHT =                                                      */ 00060000
*/*          LICENSED MATERIALS - PROPERTY OF IBM                    */ 00070000
*/*          5650-ZOS                                                */ 00080000
*/*          COPYRIGHT IBM CORP. 1981, 2019                          */ 00090000
*/*                                                                  */ 00100000
*/* STATUS:  HBB77C0                                                 */ 00110000
*/*                                                                  */ 00120000
*/*01* EXTERNAL CLASSIFICATION: PI                                   */ 00130000
*/*01* END OF EXTERNAL CLASSIFICATION:                               */ 00140000
*/*                                                                  */ 00150000
*/* FUNCTION: INTERFACE TO CPOOL ROUTINES                            */ 00160000
*/*                                                                  */ 00170000
*/* SYNTAX: CPOOL  BUILD!GET!FREE!DELETE!LIST!CONTRACT           @L8C*/ 00180000
*/*                                          <,U><,UNCOND><,C><,COND>*/ 00181000
*/*                <,LINKAGE=SYSTEM!BRANCH>                          */ 00190000
*/*                <,REGS=SAVE!USE>                                  */ 00200000
*/*                <,LOC=(RES!24!31<,31!64!PAGEFRAMESIZE1MB>)!       */ 00210000
*/*                                        RES!31!24>            @L7C*/ 00211000
*/*                <,PCELLCT=SYMBOL1>                                */ 00220000
*/*                <,SCELLCT=SYMBOL1>                                */ 00230000
*/*                <,MAXCELLS=SYMBOL1>                           @L5A*/ 00231000
*/*                <,CSIZE=SYMBOL1>                                  */ 00240000
*/*                <,SP=SYMBOL1>                                     */ 00250000
*/*                <,CPID=SYMBOL2>                                   */ 00260000
*/*                <,CELL=SYMBOL2>                                   */ 00270000
*/*                <,KEY=SYMBOL1>                                    */ 00280000
*/*                <,TCB=SYMBOL2>                                    */ 00290000
*/*                <,HDR=SYMBOL3>                                    */ 00300000
*/*                <,MF=L!(E,SYMBOL2)>                               */ 00310000
*/*                <,WORKAREA=(SYMBOL2,SYMBOL1)>                     */ 00320000
*/*                <,VERIFY=(YES!NO)>                                */ 00330000
*/*                <,OWNER=HOME!PRIMARY!SYSTEM>                  @D2C*/ 00340000
*/*                <,BNDRY=DWORD!QWORD>                          @L3C*/ 00350000
*/*                <,PRESERVE=NO!YES>                            @P4A*/ 00360000
*/*                <,MULTIHDR=NO!YES!COND)                       @L8C*/ 00370000
*/*                  <,CELLSHARE=NO!YES>                         @L8C*/ 00380000
*/*                <,CONTRACTIBLE=NO!COND>                       @L8A*/ 00381000
*/*                 <,AUTOCONTRACT=YES!NO>                       @L8A*/ 00381100
*/*                  <,FREECELLS=SYMBOL4>                        @L8A*/ 00382000
*/*                  <,FREECELLSDIVISOR=SYMBOL4>                 @L8A*/ 00382100
*/*                  <,FREECELLSPERCPU=(NO,ALL,STANDARD,ZCBP,ZAAP,   */ 00382200
*/*                                        ZIIP)>                @L9C*/ 00382300
*/*                  <,CONTINTVL=SYMBOL4>                        @L8A*/ 00382400
*/*                <,PLISTVER= 0 ! 1 ! IMPLIED_VERSION           @L8A*/ 00383000
*/*                                                                  */ 00390000
*/*                                                                  */ 00400000
*/*           SYMBOL1 = SYMBOL, DECIMAL DIGIT, OR                    */ 00410000
*/*                     REGISTER (0),(2)-(12)                        */ 00420000
*/*                                                                  */ 00430000
*/*           SYMBOL2 = RX-TYPE ADDRESS OR                           */ 00440000
*/*                     REGISTER (0),(2)-(12)                        */ 00450000
*/*                                                                  */ 00460000
*/*           SYMBOL3 = RX-TYPE ADDRESS OR                           */ 00470000
*/*                     REGISTER (0),(2)-(12) OR                     */ 00480000
*/*                     CHARACTER STRING IN QUOTES                   */ 00490000
*/*                                                                  */ 00500000
*/*           SYMBOL4 = DECIMAL DIGITS, RX-TYPE Address, or      @L8A*/ 00501000
*/*                     REGISTER (0),(2)-(12)                    @L8A*/ 00502000
*/*                                                                  */ 00503000
*/* SYNTAX: CPOOL  (BUILD!GET!FREE!DELETE!LIST!CONTRACT)         @L8C*/ 00510000
*/*                <U> <UNCOND> <C> <COND>                           */ 00520000
*/*                <LINKAGE(SYSTEM!BRANCH)>                          */ 00530000
*/*                <REGS(SAVE!USE)>                                  */ 00540000
*/*                <LOC(RES!24!31<,31!64!PAGEFRAMESIZE1MB>)>     @L7C*/ 00550000
*/*                <PCELLCT(SYMBOL1)>                                */ 00560000
*/*                <SCELLCT(SYMBOL1)>                                */ 00570000
*/*                <MAXCELLS(SYMBOL1)>                           @L5A*/ 00571000
*/*                <CELLSPERCPU(SYMBOL1)>                        @L5A*/ 00572000
*/*                <CSIZE(SYMBOL1)>                                  */ 00573000
*/*                <SP(SYMBOL1)>                                     */ 00574000
*/*                <CPID(SYMBOL2)>                                   */ 00575000
*/*                <CELL(SYMBOL2)>                                   */ 00576000
*/*                <CELL((SYMBOL3))>                                 */ 00577000
*/*                <KEY(SYMBOL1)>                                    */ 00578000
*/*                <TCB(SYMBOL2)>                                    */ 00579000
*/*                <TCB((SYMBOL3))>                                  */ 00580000
*/*                <HDR(SYMBOL2)>                                    */ 00590000
*/*                <HDR((SYMBOL3))>                                  */ 00600000
*/*                <MF(E!L!M,SYMBOL2<,COMPLETE>)>                    */ 00610000
*/*                <WORKAREA(SYMBOL2,SYMBOL1)>                       */ 00620000
*/*                <VERIFY(YES!NO)>                                  */ 00630000
*/*                <OWNER(HOME!PRIMARY!SYSTEM)>                  @D2C*/ 00640000
*/*                <BNDRY(DWORD!QWORD)>                          @L3C*/ 00650000
*/*                <PRESERVE(NO!YES)>                            @P4A*/ 00660000
*/*                <MULTIHDR(NO!YES!COND)>                       @L8C*/ 00670000
*/*                  <CELLSHARE(NO!YES)>                         @L6A*/ 00671000
*/*                <CONTRACTIBLE(NO!COND)>                       @L8A*/ 00671100
*/*                 <AUTOCONTRACT(YES ! NO)>                     @L8A*/ 00671200
*/*                  <FREECELLS(SYMBOL1)>                        @L8A*/ 00671300
*/*                  <FREECELLSDIVISOR(SYMBOL1)>                 @L8A*/ 00671400
*/*                  <FREECELLSPERCPU(NO,ALL,STANDARD,ZCBP,ZAAP,     */ 00671500
*/*                                        ZIIP)>                @L9C*/ 00671600
*/*                  <CONTINTVL(SYMBOL1)>                        @L8A*/ 00671700
*/*                <PLISTVER( 0 ! 1 ! IMPLIED_VERSION)           @L8A*/ 00671800
*/*                                                                  */ 00672000
*/*           SYMBOL1 = CONSTANT, DECIMAL DIGITS, OR VARIABLE        */ 00673000
*/*                                                                  */ 00674000
*/*           SYMBOL2 = VARIABLE REPRESNTING DESIRED INFORMATION     */ 00675000
*/*                                                                  */ 00676000
*/*           SYMBOL3 = VARIABLE CONTAINING ADDRESS OF DESIRED       */ 00677000
*/*                     INFORMATION                                  */ 00678000
*/*                                                                  */ 00679000
*/*                                                                  */ 00680000
*/* NOTE: THE DEFAULT FOR THE LINKAGE OPERAND IS 'SYSTEM'            */ 00690000
*/*       THE DEFAULT FOR THE REGS OPERAND IS 'SAVE'                 */ 00700000
*/*       THE DEFAULT FOR THE U/UNCOND/C/COND IS 'UNCOND'            */ 00710000
*/*       The default for VERIFY is 'NO'                             */ 00720000
*/*       The default for MULTIHDR is 'NO'                       @L6A*/ 00730000
*/*       The default for CELLSHARE is 'NO'                      @L6A*/ 00740000
*/*       The default for CONTRACTIBLE is 'NO'                   @L8A*/ 00741000
*/*                                                                  */ 00750000
*/*                                                                  */ 00760000
*/*            !   !   !   !   !   ! C !                             */ 00770000
*/*            !   !   !   !   !   ! O !                             */ 00771000
*/*            !   !   !   ! D !   ! N !                             */ 00772000
*/*            ! B !   !   ! E !   ! T !                             */ 00780000
*/*            ! U !   ! F ! L ! L ! R !                             */ 00790000
*/*            ! I ! G ! R ! E ! I ! A !                             */ 00800000
*/*            ! L ! E ! E ! T ! S ! C !                             */ 00810000
*/*            ! D ! T ! E ! E ! T ! T !                             */ 00820000
*/*------------+---+---+---+---+---+---+                             */ 00830000
*/* PCELLCT    ! R ! E ! E ! E ! E ! E !                             */ 00840000
*/*------------+---+---+---+---+---+---+                             */ 00850000
*/* SCELLCT    ! O ! E ! E ! E ! E ! E !                             */ 00860000
*/*------------+---+---+---+---+---+---+                             */ 00870000
*/* MAXCELLS   ! O ! E ! E ! E ! E ! E !                         @L5A*/ 00880000
*/*------------+---+---+---+---+---+---+                             */ 00890000
*/* CELLSPERCPU! O ! E ! E ! E ! E ! E !                         @L5A*/ 00900000
*/*------------+---+---+---+---+---+---+                             */ 00910000
*/* CSIZE      ! R ! E ! E ! E ! E ! E !                             */ 00920000
*/*------------+---+---+---+---+---+---+                             */ 00930000
*/* SP         ! O ! E ! E ! E ! E ! E !                             */ 00940000
*/*------------+---+---+---+---+---+---+                             */ 00950000
*/* LOC        ! O ! E ! E ! E ! E ! E !                             */ 00960000
*/*------------+---+---+---+---+---+---+                             */ 00970000
*/* CPID       ! O ! N ! N ! N ! N ! N !                             */ 00980000
*/*------------+---+---+---+---+---+---+                             */ 00990000
*/* CELL       ! E ! O ! N ! E ! E ! E !                             */ 01000000
*/*------------+---+---+---+---+---+---+                             */ 01010000
*/* KEY        ! O ! E ! E ! E ! E ! E !                             */ 01020000
*/*------------+---+---+---+---+---+---+                             */ 01030000
*/* TCB        ! O ! E ! E ! E ! E ! E !                             */ 01040000
*/*------------+---+---+---+---+---+---+                             */ 01050000
*/* HDR        ! O ! E ! E ! E ! E ! E !                             */ 01060000
*/*------------+---+---+---+---+---+---+                             */ 01070000
*/* LINKAGE    ! O ! O ! E ! O ! E ! E !                             */ 01080000
*/*------------+---+---+---+---+---+---+                             */ 01090000
*/* U/C        ! E ! O ! E ! E ! E ! E !                             */ 01100000
*/*------------+---+---+---+---+---+---+                             */ 01110000
*/* MF         ! O ! E ! E ! E ! E ! E !                             */ 01120000
*/*------------+---+---+---+---+---+---+                             */ 01130000
*/* REGS       ! E ! O ! O ! E ! E ! E !                             */ 01140000
*/*------------+---+---+---+---+---+---+                             */ 01150000
*/* WORKAREA   ! E ! E ! E ! E ! N ! E !                             */ 01160000
*/*------------+---+---+---+---+---+---+                             */ 01170000
*/* VERIFY     ! E ! E ! E ! E ! N ! E !                             */ 01180000
*/*------------+---+---+---+---+---+---+                             */ 01190000
*/* OWNER      ! O ! E ! E ! E ! E ! E !                         @L2A*/ 01200000
*/*------------+---+---+---+---+---+---+                             */ 01210000
*/* BNDRY      ! O ! E ! E ! E ! E ! E !                         @L3A*/ 01220000
*/*------------+---+---+---+---+---+---+                             */ 01230000
*/* PRESERVE   ! O ! E ! E ! E ! E ! E !                         @P4A*/ 01240000
*/*------------+---+---+---+---+---+---+                             */ 01250000
*/* MULTIHDR   ! O ! O ! O ! E ! E ! E !                         @L5A*/ 01260000
*/*------------+---+---+---+---+---+---+                             */ 01270000
*/* CELLSHARE  ! O ! E ! E ! E ! E ! E !                         @L6A*/ 01280000
*/*------------+---+---+---+---+---+---+                             */ 01290000
*/* CONTRACT   ! O ! O ! O ! E ! E ! E !                         @L8A*/ 01291000
*/* IBLE       !   !   !   !   !   !   !                             */ 01291100
*/*------------+---+---+---+---+---+---+                             */ 01292000
*/* FREECELLS  ! O ! E ! E ! E ! E ! R !                         @L8A*/ 01293000
*/*------------+---+---+---+---+---+---+                             */ 01294000
*/* FREECELLS  ! O ! E ! E ! E ! E ! E !                         @L8A*/ 01295000
*/* PERCPU     !   !   !   !   !   !   !                             */ 01295100
*/*------------+---+---+---+---+---+---+                             */ 01295200
*/* FREECELLS  ! O ! E ! E ! E ! E ! E !                         @L8A*/ 01295300
*/* DIVISOR    !   !   !   !   !   !   !                             */ 01295400
*/*------------+---+---+---+---+---+---+                             */ 01295500
*/* CONTINTVL  ! O ! E ! E ! E ! E ! E !                         @L8A*/ 01295600
*/*------------+---+---+---+---+---+---+                             */ 01296000
*/* PLISTVER   ! O ! E ! E ! E ! E ! E !                         @L8A*/ 01297000
*/*------------+---+---+---+---+---+---+                             */ 01298000
*/*                                                                  */ 01300000
*/*                                                                  */ 01310000
*/*            R = REQUIRED FOR STANDARD FORM BUILD, OPTIONAL FOR    */ 01320000
*/*                OTHER BUILD FORMS                                 */ 01330000
*/*            N = MUST BE SPECIFIED                                 */ 01340000
*/*            E = ERROR IF SPECIFIED                                */ 01350000
*/*            O = OPTIONAL                                          */ 01360000
*/*                                                                  */ 01370000
*/*                                                                  */ 01380000
*/* MACROS: AHACPOOL (PLS ONLY)                                      */ 01390000
*/*                                                                  */ 01400000
*/* EXTERNAL MACRO VARIABLES : EHAREGS (PLS ONLY)                    */ 01410000
*/*                            EHAMAXLEN (PLS ONLY)                  */ 01420000
*/*                                                                  */ 01430000
*/* CHANGE ACTIVITY: OZ92248 - TCB INCORRECTLY STORED IN PARMLIST    */ 01440000
*/*                  WHEN USING EXECUTE FORM OF CPOOL BUILD MACRO    */ 01450000
*/*                                                          @ZA92248*/ 01460000
*/*                                                                  */ 01470000
*/* $D1=DCR44,HBB3310,861028,PDT6:  Support for CPOOL LIST       @D1A*/ 01480000
*/*                                                                  */ 01490000
*/* $L1=PROD310,HBB3310,870603,PDF5:  Copyright changes          @L1A*/ 01500000
*/*                                                                  */ 01510000
*/* $P1=PC41615,HBB3310,871130,PDT6:  Change lower case letters      */ 01520000
*/*                                   in messages to upper case  @P1A*/ 01530000
*/* $L2=TCSAU,HBB4430,911003,PDXB:  OWNER                            */ 01540000
*/* $D2=DKB0028,HBB4430,920318, PDXB: no Owner=Secondary             */ 01550000
*/* $L3=64BITVSM HBB7703 980101 PD00XB: 64-bit real,BNDRY            */ 01560000
*/* $L4=LXREU    HBB7709 030801 PD00XB: ASN-and-LX-Reuse Facility    */ 01570000
*/* $P2=PXD0857  HBB7703 991203 PD00XB: Initialize &IB64             */ 01580000
*/* $01=OW45854  HBB7703 000831 PD00LI: Correct errors in MNOTEs @01A*/ 01590000
*/* $P3=PX00196  HBB7705 010503 PD00SE: Delete Index Register        */ 01600000
*/* $P4=PJK0520  HBB7709 030613 PD00XB: PRESERVE                     */ 01610000
*/* $02=OA07028  HBB7707 040325 PD00XB: LOC=(xx,64) correction       */ 01620000
*/* $L5=DCRB165  HBB7740 060425 PD00I6: MULTIHDR CPOOL Support       */ 01630000
*/* $P5=ME07273  HBB7740 060720 PD00I6: Report error for MULTIHDR=YES*/ 01640000
*/*                                     and PCELLCT or SCELLCT       */ 01650000
*/* $P6=ME08906  HBB7740 070103 PD00I6: Fix Nocode bug for REGS=USE  */ 01660000
*/*                                     LINKAGE=SYSTEM on GET        */ 01670000
*/* $L6=VSMCPS   HBB7750 070207 PD00JI: MULTIHDR CPOOL cell sharing  */ 01680000
*/*                                     (ME09896)                    */ 01681000
*/* $03=OA17409  HBB7709 070930 PD00B6: Unable to set BNDRY(QWORD)   */ 01682000
*/*                                     or PRESERVE(YES) on execute  */ 01683000
*/*                                     form of macro.               */ 01684000
*/* $L7=LRGPGSUP JBB778H 110610 PD00B6: LOC(xx,PAGEFRAMESIZE1MB)     */ 01684100
*/*                                     support                      */ 01684200
*/* $P7=ME22620  JBB778H 110927 PD00B6: Initialize &IBPGFMSZ         */ 01684300
*/* $P8=ME23569  HBB77A0 111115 PD00XB: Std form: MAXCELLS in reg    */ 01684400
*/* $L8=CONMHCP  HBB77A0 120210 PD00XB: Contractible CPOOL           */ 01684500
*/* $P9=ME26230  HBB77A0 130506 PD00XB: Avoid hard-coded length      */ 01684600
*/* $04=OA47797  HBB77A0 150704 PD00XB: Avoid setting PLISTVER=1     */ 01684700
*/*                                     flags if PLISTVER=0 is       */ 01684800
*/*                                     specified                    */ 01684900
*/* $L9=zCBP     HBB77C0 180425 PD00NJ: zCBP                         */ 01685000
*/* $05=OA62798  HBB77B0 220430 PD00VE: Correct handling of TCB parm */ 01685100
*/*                                     for Build req and MF=E and   */ 01685200
*/*                                     when not in reg              */ 01685300
*/*                                                                  */ 01686000
*/********************************************************************/ 01687000
*/* A - 000000-999999                                        @G860P1B*/ 01688000
*/********************************************************************/ 01689000
*/*     EXPECTED RESULTS:                                            */ 01690000
*/*        * GET U LINKAGE=SYSTEM                                    */ 01700000
*/*          R1 = CPID                                               */ 01710000
*/*          R15 = ENTRY ADDRESS IN CVTCPGUP (MODULE IGVCPGUP)       */ 01720000
*/*          BASR TO IGVCPGUP                                        */ 01730000
*/*                                                                  */ 01740000
*/*        * GET U LINKAGE=BRANCH                                    */ 01750000
*/*          R1 = CPID                                               */ 01760000
*/*          R15 = ENTRY ADDRESS IN CVTCPGUB (MODULE IGVCPGUB)       */ 01770000
*/*          BASR TO IGVCPGUB                                        */ 01780000
*/*                                                                  */ 01790000
*/*        * GET C                                                   */ 01800000
*/*          R1 = CPID                                               */ 01810000
*/*          R15 = ENTRY ADDRESS IN CVTCPGTC (MODULE IGVCPGTC)       */ 01820000
*/*          BASR TO IGVCPGTC                                        */ 01830000
*/*                                                                  */ 01840000
*/*        * GET C MULTIHDR=YES                                      */ 01850000
*/*          R1 = CPID                                               */ 01860000
*/*          R15 = ENTRY ADDRESS IN ECVTCPGCM (MODULE IGVCPGCM)  @L5A*/ 01870000
*/*          BASR TO IGVCPGCM                                        */ 01880000
*/*                                                                  */ 01890000
*/*        * GET U MULTIHDR=YES                                      */ 01900000
*/*          R1 = CPID                                               */ 01910000
*/*          R15 = ENTRY ADDRESS IN ECVTCPGUM (MODULE IGVCPGUM)  @L5A*/ 01920000
*/*          BASR TO IGVCPGUM                                        */ 01921000
*/*                                                                  */ 01922000
*/*        * GET C MULTIHDR=YES,CONTRACTIBLE=COND                    */ 01922100
*/*          R1 = CPID                                               */ 01922200
*/*          R15 = ENTRY ADDRESS IN ECVTCPGCC (MODULE IGVCPOOL)  @L8A*/ 01922300
*/*          BASR TO IGVCPGCC                                        */ 01922400
*/*                                                                  */ 01922500
*/*        * GET U MULTIHDR=YES,CONTRACTIBLE=COND                    */ 01922600
*/*          R1 = CPID                                               */ 01922700
*/*          R15 = ENTRY ADDRESS IN ECVTCPGUC (MODULE IGVCPOOL)  @L8A*/ 01922800
*/*          BASR TO IGVCPGUC                                        */ 01922900
*/*                                                                  */ 01923000
*/*        * FREE                                                    */ 01923100
*/*          R0 = CELL ADDRESS                                       */ 01924000
*/*          R1 = CPID                                               */ 01925000
*/*          R15 = ENTRY ADDRESS IN CVTCPFRE (MODULE IGVCPFRE)       */ 01926000
*/*          BASR TO IGVCPFRE                                        */ 01927000
*/*                                                                  */ 01928000
*/*        * FREE MULTIHDR=YES                                       */ 01929000
*/*          R0 = CELL ADDRESS                                       */ 01930000
*/*          R1 = CPID                                               */ 01940000
*/*          R15 = ENTRY ADDRESS IN ECVTCPFRM (MODULE IGVCPFRM)  @L5A*/ 01950000
*/*          BASR TO IGVCPFRM                                        */ 01960000
*/*                                                                  */ 01970000
*/*        * FREE MULTIHDR=YES,CONTRACTIBLE=COND                     */ 01971000
*/*          R0 = CELL ADDRESS                                       */ 01972000
*/*          R1 = CPID                                               */ 01973000
*/*          R15 = ENTRY ADDRESS IN ECVTCPFRC (MODULE IGVCPOOL)  @L8A*/ 01974000
*/*          BASR TO IGVCPFRC                                        */ 01975000
*/*                                                                  */ 01976000
*/*        * DELETE LINKAGE=SYSTEM                                   */ 01980000
*/*          SAVE REGS 2-12                                          */ 01981000
*/*          R1 = CPID                                               */ 01982000
*/*          PC TO 'IGVCPDLP'                                        */ 01983000
*/*          RESTORE REGISTERS 2-12                                  */ 01984000
*/*                                                                  */ 01985000
*/*        * DELETE LINKAGE=BRANCH                                   */ 01986000
*/*          R1 = CPID                                               */ 01987000
*/*          R15 = ENTRY ADDRESS IN CVTCPDLB (MODULE IGVCPDLB)       */ 01988000
*/*          BASR TO IGVCPDLB                                        */ 01989000
*/*                                                                  */ 01990000
*/*        * BUILD  LINKAGE=SYSTEM                                   */ 02000000
*/*          SAVE REGS 2-12                                          */ 02010000
*/*          R1 = ADDRESS OF PARAMETER LIST                          */ 02020000
*/*          PC TO 'IGVCPBDP'                                        */ 02030000
*/*          RESTORE REGISTERS 2-12                                  */ 02040000
*/*                                                                  */ 02050000
*/*        * BUILD  LINKAGE=BRANCH                                   */ 02060000
*/*          R1 = ADDRESS OF PARAMETER LIST                          */ 02070000
*/*          R15 = ENTRY ADDRESS IN CVTCPBDB (MODULE IGVCPBDB)       */ 02080000
*/*          BASR TO IGVCPBDB                                        */ 02090000
*/*                                                                  */ 02100000
*/*        * LIST                                                    */ 02110000
*/*          R1  = Address of a pointer to the work area             */ 02120000
*/*          R15 = Entry address of module IGVCPLST                  */ 02130000
*/*          Fields in the work area should be set                   */ 02140000
*/*          BASSM to IGVCPLST                                       */ 02150000
*/*                                                                  */ 02160000
*/*        * CONTRACT                                            @L8A*/ 02161000
*/*          R0  = FREECELLS                                     @L8A*/ 02162000
*/*          R1  = CPID                                          @L8A*/ 02162100
*/*          PC to IGVCPCON                                      @L8A*/ 02165000
*/*                                                                  */ 02166000
*/*                                                                  */ 02170000
*/*        WHERE THE PARAMETER LIST FOR BUILD IS AS FOLLOWS:         */ 02180000
*/*        BYTES 0-3       PRIMARY CELL COUNT                        */ 02190000
*/*        BYTES 4-7       SECONDARY CELL COUNT                      */ 02200000
*/*        BYTES 8-11      CELL SIZE                                 */ 02210000
*/*        BYTE  12        SUBPOOL ID                                */ 02220000
*/*        BYTE  13        KEY                                       */ 02230000
*/*        BYTE  14        FLAGS                                     */ 02240000
*/*              BIT 0    1=> 31 REAL OPTION OF LOC WAS SPECIFIED    */ 02250000
*/*                       0=> 31 REAL OPTION OF LOC WAS NOT          */ 02260000
*/*                            SPECIFIED                             */ 02270000
*/*              BITS 1-2  LOC OPTION FOR VIRTUAL AS FOLLOWS:        */ 02280000
*/*                        00=> RES                                  */ 02290000
*/*                        01=> 24                                   */ 02300000
*/*                        11=> 31                                   */ 02310000
*/*              BIT 3     1=> TCB WAS SPECIFIED                     */ 02320000
*/*                        0=> TCB WAS NOT SPECIFIED                 */ 02330000
*/*              BIT 4     1=> KEY WAS SPECIFIED                     */ 02340000
*/*                        0=> KEY WAS NOT SPECIFIED                 */ 02350000
*/*              BIT 5     1=> HDR WAS SPECIFIED                     */ 02360000
*/*                        0=> HDR WAS NOT SPECIFIED                 */ 02370000
*/*              BITS 6-7  00 => OWNER=HOME                      @L2A*/ 02380000
*/*                        01 => OWNER=PRIMARY                   @L2A*/ 02390000
*/*                        11 => OWNER=SYSTEM                    @L2A*/ 02400000
*/*        BYTE  15                                              @L3C*/ 02410000
*/*              BIT 0     1=> 64 REAL option                    @L3A*/ 02420000
*/*                        0=> 64 REAL option not specified      @L3A*/ 02430000
*/*              BIT 1     1=> BNDRY=QWORD                       @L3A*/ 02440000
*/*                        0=> BNDRY=DWORD                       @L3A*/ 02450000
*/*              BIT 2     1=> PRESERVE=YES                      @P4A*/ 02460000
*/*                        0=> PRESERVE=NO                       @P4A*/ 02470000
*/*              BIT 3     1=> MULTIHDR=YES                      @P4A*/ 02480000
*/*                        0=> MULTIHDR=NO                       @P4A*/ 02490000
*/*              BIT 4     1=> CELLSHARE=YES                     @L6A*/ 02500000
*/*                        0=> CELLSHARE=NO                      @L6A*/ 02510000
*/*              BIT 5     1=> PAGEFRAMESIZE1MB LOC Option       @L7A*/ 02511000
*/*                        0=> NOT PAGEFRAMESIZE1MB LOC Option   @L7A*/ 02512000
*/*              BIT 6     1=> CONTRACTIBLE=COND                 @L8A*/ 02513000
*/*                        0=> CONTRACTIBLE=NO                   @L8A*/ 02514000
*/*              BIT 7     1=> PLISTVER > 0                      @L8A*/ 02520000
*/*                        0=> PLISTVER = 0                      @L8A*/ 02521000
*/*        BYTES 16-19     TCB ADDRESS                               */ 02530000
*/*        BYTES 20-43     HEADER                                    */ 02540000
*/*      PLISTVER=1                                                  */ 02541000
*/*        BYTES 44-47     FREECELLS                             @L8A*/ 02542000
*/*        BYTES 48-51     FREECELLSDIVISOR                      @L8A*/ 02542100
*/*        BYTES 52-55     CONTINTVL                             @L8A*/ 02542200
*/*        BYTE  56        Flags                                 @L8A*/ 02543000
*/*              BIT 0     1=> FREECELLSPERCPU Standard          @L8A*/ 02543100
*/*              BIT 1     1=> FREECELLSPERCPU zAAP              @L8A*/ 02543200
*/*              BIT 1     1=> FREECELLSPERCPU zCBP              @L9C*/ 02543300
*/*              BIT 2     1=> FREECELLSPERCPU zIIP              @L8A*/ 02543400
*/*              BIT 3     1=> AUTOCONTRACT=NO                   @L8A*/ 02543500
*/*        BYTES 57-59     Reserved                              @L8A*/ 02544000
*/*                                                                  */ 02550000
*/*                                                                  */ 02560000
*/*    ASM  DEFINITION:                                              */ 02570000
*/*                                                                  */ 02580000
*/*     ASM   RESTRICTIONS:                                          */ 02590000
*/*           BUILD FUNCTION-                                        */ 02600000
*/*               1.  IN THE LIST FORM, THE TCB, AND THE HEADER      */ 02610000
*/*                   CANNOT BE SPECIFIED AS VARIABLES CONTAINING    */ 02620000
*/*                   THE ADDRESS OF THE TCB, OR THE HEADER.         */ 02630000
*/*               2.  CPID CANNOT BE SPECIFIED WITH THE LIST         */ 02640000
*/*                   FORM OF BUILD.  WITH THE OTHER FORMS THE       */ 02650000
*/*                   CPID RETURNED FROM BUILD IS PLACED IN THE      */ 02660000
*/*                   VARIABLE SPECIFIED AS ARG1.                    */ 02670000
*/*           GET FUNCTION -                                         */ 02680000
*/*               1.  WHEN SPECIFYING THE KEYWORD CELL, UPON         */ 02690000
*/*                   RETURN FROM THE GET FUNCTION THE ADDRESS       */ 02700000
*/*                   OF THE CELL OBTAINED WILL BE IN THE            */ 02710000
*/*                   REGISTER SPECIFIED.                            */ 02720000
*/*                                                                  */ 02730000
*/*                                                                  */ 02740000
*/*    ASM  DEFINITION:                                              */ 02750000
*/*                                                                  */ 02760000
*/*      U/UNCOND SPECIFIES A UNCONDITIONAL GETMAIN IS TO BE         */ 02770000
*/*               PERFORMED                                          */ 02780000
*/*      C/COND   SPECIFIES A CONDITIONAL GETMAIN IS TO BE           */ 02790000
*/*               PERFORMED                                          */ 02800000
*/*       PCELLCT=ARG1                                               */ 02810000
*/*               WHERE ARG1 IS THE PRIMARY CELL COUNT,              */ 02820000
*/*               SYMBOL, DECIMAL DIGIT, OR REGISTER (0),            */ 02830000
*/*               (2)-(12)                                           */ 02840000
*/*       SCELLCT=ARG1                                               */ 02850000
*/*               WHERE ARG1 IS THE SECONDARY CELL COUNT,            */ 02860000
*/*               SYMBOL, DECIMAL DIGIT, OR REGISTER (0),            */ 02870000
*/*               (2)-(12)                                           */ 02880000
*/*       MAXCELLS=ARG1                                              */ 02890000
*/*               WHERE ARG1 IS THE MAXIMUM NUMBER OF CELLS FOR THE  */ 02900000
*/*               CPOOL THAT IS ALLOWED TO BE ALLOCATED.  CONDITIONAL*/ 02910000
*/*               GET REQUESTS WILL FAIL WHEN THIS MAXIMUM IS REACHED*/ 02920000
*/*               A CONSTANT, DECIMAL DIGITS, OR VARIABLE        @L5A*/ 02930000
*/*               CONTAINING THE COUNT                               */ 02940000
*/*       CELLSPERCPU=ARG1                                           */ 02950000
*/*               WHERE ARG1 IS THE NUMBER OF CELLS FOR A CPU TO BE  */ 02960000
*/*               OBTAINED AT EXPANSION TIME.                        */ 02961000
*/*               A CONSTANT, DECIMAL DIGITS, OR VARIABLE            */ 02962000
*/*               CONTAINING THE COUNT                           @L5A*/ 02963000
*/*       CSIZE=ARG1                                                 */ 02964000
*/*               WHERE ARG1 IS THE CELL SIZE,                       */ 02965000
*/*               SYMBOL, DECIMAL DIGIT, OR REGISTER (0),            */ 02966000
*/*               (2)-(12)                                           */ 02967000
*/*       SP=ARG1                                                    */ 02968000
*/*               WHERE ARG1 IS THE SUBPOOL ID,                      */ 02969000
*/*               SYMBOL OR DECIMAL DIGIT(0-255), OR REGISTER        */ 02970000
*/*               (0), (2)-(12), DEFAULT SP(0).                      */ 02980000
*/*       LOC=(ARG1,ARG2)                                            */ 02990000
*/*               WHERE ARG1 IS EITHER 'RES', '24', OR '31'          */ 03000000
*/*               WHEN ARG1 IS '31'                                  */ 03000100
*/*                ARG2 IS OPTIONAL AND MAY BE '31' OR '64' OR       */ 03000200
*/*                'PAGEFRAMESIZE1MB'                            @L7C*/ 03000300
*/*               WHEN ARG1 IS 'RES'                                 */ 03001000
*/*                ARG2 IS OPTIONAL AND MAY BE '31' OR '64'          */ 03010000
*/*               THE DEFAULT IN THE LIST FORM IS 'RES'              */ 03020000
*/*       CPID=ARG1                                                  */ 03030000
*/*               WHERE ARG1 IS THE CELL POOL ID,                    */ 03040000
*/*               RX-TYPE ADDRESS (VARIABLE CONTAINING POOL ID) OR   */ 03050000
*/*               REGISTER (0)-(12).                                 */ 03060000
*/*       CELL=ARG1                                                  */ 03070000
*/*               WHERE ARG1 IS A VARIABLE CONTAINING THE ADDRESS    */ 03080000
*/*               OF THE CELL, OR REGISTER (0), (2)-(12).            */ 03090000
*/*       KEY=ARG1                                                   */ 03100000
*/*               WHERE ARG1 IS THE KEY,                             */ 03110000
*/*               DECIMAL DIGITS (0-15) OR REGISTER (0), (2)-(12).   */ 03120000
*/*       TCB=ARG1                                                   */ 03130000
*/*               WHERE ARG1 IS A VARIABLE CONTAINING THE ADDRESS    */ 03140000
*/*               OF THE TCB, OR REGISTER (0), (2)-(12).             */ 03150000
*/*       HDR=ARG1                                                   */ 03160000
*/*               WHERE ARG1 IS THE RX-TYPE ADDRESS REPRESENTING     */ 03170000
*/*               THE HEADER, OR A CHARACTER STRING IN QUOTES, OR    */ 03180000
*/*               REGISTER (0), (2)-(12).                            */ 03190000
*/*       LINKAGE=ARG1                                               */ 03200000
*/*               WHERE ARG1 IS EITHER 'SYSTEM' OR 'BRANCH'          */ 03210000
*/*               THE DEFAULT IS 'SYSTEM'                            */ 03220000
*/*       REGS=ARG1                                                  */ 03230000
*/*               WHERE ARG1 IS EITHER 'USE' OR 'SAVE'               */ 03240000
*/*               THE DEFAULT IS 'SAVE'                              */ 03250000
*/*       MF=(ARG1,ARG2)                                             */ 03260000
*/*               WHERE ARG1 IS EITHER 'L', OR 'E'                   */ 03270000
*/*               WHERE ARG2 IS A PARAMETER LIST NAME ( FOR EXECUTE  */ 03280000
*/*               FORM ONLY), I.E., THE RX-TYPE ADDRESS REPRESENTING */ 03290000
*/*               THE PARAMETER LIST, OR REGISTER (0), (2)-(12)      */ 03300000
*/*       WORKAREA=(ARG1,ARG2)                                       */ 03310000
*/*               Where ARG1 is either an RX-type address of a       */ 03320000
*/*               pointer to the work area or a register containing  */ 03330000
*/*               the address of a pointer to the work area; and     */ 03340000
*/*               ARG2 is a symbol or constant with a value equal to */ 03350000
*/*               the length of the work area, or a register         */ 03360000
*/*               containing the length of the work area.            */ 03370000
*/*       VERIFY=(YES!NO)                                            */ 03380000
*/*               Specifies whether the Cell Pool List service       */ 03390000
*/*               should issue LRA instructions to verify that the   */ 03400000
*/*               Cell Pool control blocks are accessible before     */ 03410000
*/*               trying to access them.                             */ 03420000
*/*       OWNER=HOME!PRIMARY!SYSTEM                                  */ 03430000
*/*               For a common area CPOOL, indicates to whom         */ 03440000
*/*               ownership of the storage is to be                  */ 03450000
*/*               attributed.                                    @D2C*/ 03460000
*/*       BNDRY=DWORD!QWORD                                          */ 03470000
*/*               Boundary alignment for each cell               @L3A*/ 03480000
*/*       PRESERVE=NO!YES                                            */ 03490000
*/*               Preserve contents of cell, except for first    @P4A*/ 03500000
*/*                16 bytes                                      @P4A*/ 03510000
*/*               initialize entire extent when obtained         @P4A*/ 03520000
*/*       MULTIHDR=NO!YES!COND                                   @L8C*/ 03530000
*/*               YES = Indicates that a MULTIHDR CPOOL is to    @L5A*/ 03540000
*/*               created or used by BUILD, GET or FREE          @L5A*/ 03550000
*/*               COND = (requires CONTRACTIBLE=COND) Indicates  @L8A*/ 03551000
*/*               that the GET or FREE is to use                 @L8A*/ 03552000
*/*               CONTRACTIBLE=COND if that functionality is     @L8A*/ 03553000
*/*               available or non-multihdr if not.              @L8A*/ 03554000
*/*       CELLSHARE=NO!YES                                       @L6A*/ 03560000
*/*               YES = sharing of cells between CPUs is             */ 03570000
*/*               permitted for the MULTIHDR CPOOL. This may         */ 03580000
*/*               result in better cell storage utilization,         */ 03581000
*/*               especially for large cell pools without            */ 03582000
*/*               specifying MAXCELLS.                           @L6A*/ 03583000
*/*       CONTRACTIBLE=NO!COND                                   @L5A*/ 03583100
*/*               COND = Indicates that a contractible MULTIHDR  @L8A*/ 03583200
*/*               CPOOL is to be created or used by BUILD,       @L8A*/ 03583300
*/*               GET or FREE                                    @L8A*/ 03583400
*/*               No cell will be available prior to PC/AUTH     @L8A*/ 03583500
*/*               availability.                                  @L8A*/ 03583600
*/*       FREECELLS=ARG1                                         @L8A*/ 03583800
*/*               Where ARG1 is the maximum number of free cells @L8A*/ 03583900
*/*               to remain upon completion of CONTRACT.         @L8A*/ 03584000
*/*               SYMBOL, DECIMAL DIGITS, OR REGISTER (0),       @L8A*/ 03584100
*/*               (2)-(12)                                       @L8A*/ 03584200
*/*       FREECELLSDIVISOR=ARG1                                  @L8A*/ 03584300
*/*               Where ARG1 is the divisor used when            @L8A*/ 03584400
*/*               calculating the target number of free cells    @L8A*/ 03584500
*/*               upon completion of CONTRACT.                   @L8A*/ 03584600
*/*               SYMBOL, DECIMAL DIGITS, OR REGISTER (0),       @L8A*/ 03584700
*/*               (2)-(12)                                       @L8A*/ 03584800
*/*       CONTINTVL=ARG1                                         @L8A*/ 03584900
*/*               Where ARG1 is the contract interval in         @L8A*/ 03585000
*/*               seconds.                                       @L8A*/ 03585100
*/*               SYMBOL, DECIMAL DIGITS, OR REGISTER (0),       @L8A*/ 03585200
*/*               (2)-(12)                                       @L8A*/ 03585300
*/*       PLISTVER=0!1!IMPLIED_VERSION                           @L8A*/ 03585400
*/*       FREECELLSPERCPU=(NO!ALL!STANDARD!ZCBP!ZAAP!ZIIP)       @L9C*/ 03585500
*/*       AUTOCONTRACT=YES!NO                                    @L8A*/ 03585600
*/*                                                                  */ 03585700
*/* Note:                                                            */ 03585800
*/*                                                                  */ 03586000
*/*  -- Because IGVCPLST uses standard entry linkage (with register  */ 03587000
*/*     1 pointing to the parameter list -- a list of address of the */ 03588000
*/*     parameters), we require that the first operand of WORKAREA   */ 03589000
*/*     for CPOOL LIST be a pointer to the work area; or, if it's    */ 03590000
*/*     a register, a pointer to a pointer to the work area.         */ 03600000
*/*     That way, we avoid making the user code both a list and an   */ 03610000
*/*     execute form of the macro, since the parameter list pointed  */ 03620000
*/*     to by register 1 must be set up at run time.                 */ 03630000
*/*                                                                     03640000
         MACRO                                                          03650000
&LABEL   CPOOL  &TYPE,&UC,&PCELLCT=,&SCELLCT=,&MAXCELLS=,&CELLSPERCPU=,+03660000
               &CSIZE=,&SP=,&LOC=,&CPID=,&CELL=,&KEY=,&TCB=,&HDR=,     +03670000
               &LINKAGE=,&MF=,&REGS=,&WORKAREA=,&VERIFY=,         @D1C +03680000
               &OWNER=,&BNDRY=,&PRESERVE=,&MULTIHDR=,&CELLSHARE=,  @L6C+03690000
               &CONTRACTIBLE=,&FREECELLS=,&FREECELLSDIVISOR=,          +03691000
               &CONTINTVL=,&PLISTVER=,&FREECELLSPERCPU=,               +03692000
               &AUTOCONTRACT=                                      @L8C 03693000
         GBLC  &SYSOSREL                                           @L4A 03700000
         GBLC  &SYSOSREL_ZOSV1R6                                   @L4A 03710000
         GBLC  &SYSOSREL_ZOSV2R2                                   @L8A 03711000
         SYSSTATE TEST                                             @L4A 03720000
.*  LCLC VARIABLE ARE INITIALIZED TO '' AND LCLA VARIABLES ARE          03730000
.*  INITIALIZED TO ZERO                                                 03740000
         LCLC   &IFUNC             FUNCTION SPECIFIED                   03750000
         LCLC   &IUC               U OR C FOR U/UNCOND OR C/COND        03760000
         LCLC   &OIUC              Original IUC (so that it mnotes     *03761000
                                   match what was specified        @L8A 03762000
         LCLC   &IPCELL            PRIMARY CELL COUNT                   03770000
         LCLC   &ISCELL            SECONDARY CELL COUNT                 03780000
         LCLC   &IMAXCEL           MAXCELLS                        @L5A 03790000
         LCLC   &IFREECELLS        FREECELLS                       @L8A 03791000
         LCLC   &IFREECELLSDIV     FREECELLSDIVISOR                @L8A 03792000
         LCLC   &ICONTINTVL        CONTINTVL                       @L8A 03792100
         LCLC   &IPLISTVER         PLISTVER                        @L8A 03793000
         LCLC   &ICELPER           CELLSPERCPU                     @L5A 03800000
         LCLC   &ICSIZE            CELL SIZE                            03810000
         LCLC   &ISP               SUBPOOL                              03820000
         LCLC   &ILOC1             FIRST LOC ARGUMENT                   03830000
         LCLC   &ILOC2             SECOND LOC ARGUMENT                  03840000
         LCLC   &ICPID             CELL POOL ID                         03850000
         LCLC   &ICELL             CELL                                 03860000
         LCLC   &IKEY              KEY                                  03870000
         LCLC   &ITCB              TCB                                  03880000
         LCLC   &IHDR              HEADER                               03890000
         LCLC   &ILINK             LINKAGE EITHER SYSTEM OR BRANCH      03900000
         LCLC   &IMULTIHDR         MULTIHDR YES, NO, COND          @L8C 03910000
         LCLC   &ICONTRACTIBLE     CONTRACTIBLE EITHER NO OR COND  @L8A 03911000
         LCLC   &IREGS             USE OR SAVE REGISTERS                03920000
         LCLC   &IMF               EITHER '' OR 'E' OR 'L'              03930000
         LCLC   &IMF2              PARAMETER LIST NAME                  03940000
         LCLC   &IBHDR             INDICATOR IF HEADER SPECIFIED        03950000
         LCLC   &IBTCB             INDICATOR IF TCB SPECIFIED           03960000
         LCLC   &IBKEY             INDICATOR IF KEY SPECIFIED           03961000
         LCLC   &IBANY             INDICATOR IF 31 REAL SPECIFIED       03962000
         LCLC   &IB64              INDICATOR IF 64 REAL            @L3A 03963000
         LCLC   &IBPGFMSZ          INDICATOR IF PAGEFRAMESIZE1MB   @L7A 03963100
         LCLC   &IBLOC           00 FOR RES, 01 FOR 24, 11 FOR 31       03964000
         LCLC   &IBBNDRY           BNDRY bit                       @L3C 03965000
         LCLC   &IBPRESERVE        PRESERVE bit                    @P4C 03966000
         LCLC   &IBPLISTVER        PLISTVER bit                    @L8A 03966100
         LCLC   &IBMULTIHDR        MULTIHDR bit                    @L5A 03967000
         LCLC   &IBCONTRACTIBLE    CONTRACTIBLE bit                @L8A 03967100
         LCLC   &IBAUTOCONTRACTNO  AutoContract=No                 @L8A 03967200
         LCLC   &IBSHARE           CELLSHARE bit                   @L6A 03968000
         LCLC   &IBOWN             Owner bits                      @L2A 03969000
         LCLC   &IOWNER            Owner                           @L2A 03970000
         LCLC   &IBFLAG            ONE BYTE OF FLAGS                    03980000
         LCLC   &IBFLAGA           2nd byte of flags               @L3A 03990000
         LCLC   &IBFLAG2           TWO BYTES OF FLAGS                   04000000
         LCLC   &IBPLV1FlagsOff    PLISTVER=1 flags                @L8A 04001000
         LCLC   &IBPLV1FlagsOn     PLISTVER=1 flags                @L8A 04002000
         LCLC   &INAME             INVOCATION MACRO NAME                04010000
         LCLC   &IWORK1            First argument with WORKAREA   @D1A  04020000
         LCLC   &IWORK2            Second argument with WORKAREA  @D1A  04030000
         LCLA   &ERROR             ERROR INDICATOR                      04040000
         LCLA   &FALSE             FALSE value for flags          @D1A  04050000
         LCLA   &TRUE              TRUE value for flags           @D1A  04060000
         LCLA   &CTR               Loop variable                  @L8A  04061000
         LCLC   &ARGWITH           Used in error messages         @D1A  04070000
         LCLC   &ARG1WITH          Used in error messages         @D1A  04080000
         LCLC   &ARG2WITH          Used in error messages         @D1A  04090000
         LCLC   &IINVAL            INVALID MESSAGE TEXT                 04100000
         LCLC   &IREQ              Required-with text             @L8A  04101000
         LCLC   &IMULTYES          INVALID WITH MULTIHDR=YES MSG  @L5A  04110100
         LCLC   &IMULTNO           INVALID WITH MULTIHDR=NO MSG   @L8A  04110200
         LCLC   &ICONTRACTIBLENO   INVALID WITH CONTRACTIBLE=NO   @L8A  04112000
         LCLC   &SUPPLY            INVALID MESSAGE TEXT                 04120000
         LCLC   &NOTEXT            INVALID MESSAGE TEST                 04130000
         LCLC   &TOLONG            INVALID MESSAGE TEST                 04140000
         LCLC   &NOTALL            INVALID MESSAGE TEST                 04150000
         LCLC   &NOTSUP            INVALID MESSAGE TEST                 04160000
         LCLC   &NOTSPE            INVALID MESSAGE TEST                 04170000
         LCLC   &NOTWLIST          Text used in error messages   @D1A   04180000
         LCLC   &NTAG              Blank tag for error messages  @D1A   04190000
         LCLC   &TAG               Tag for error messages        @D1A   04200000
         LCLC   &TOOMANY           Used in error messages        @D1A   04210000
         LCLC   &TRUNC             Used in error messages        @D1A   04220000
         LCLC   &WRKAREG           Name of a register that       @D1A   04230000
.*                                 points to a pointer to a work area   04240000
         LCLC   &WRKLREG           Name of a register that       @D1A   04250000
.*                                 contains the length of a work area   04260000
         LCLC  &L,&BASR,&LR                                        @L4A 04270000
         GBLC  &SYSAM64                                            @L4A 04280000
         SYSSTATE TEST                                             @L4A 04290000
         AIF   ('&SYSAM64' EQ 'YES').AM641                         @L4A 04300000
&L       SETC  'L'                                                 @L4A 04310000
&LR      SETC  'LR'                                                @L4A 04320000
&BASR    SETC  'BASR'                                              @L4A 04330000
         AGO   .AM31641                                            @L4A 04340000
.AM641   ANOP                                                      @L4A 04350000
&L       SETC  'LLGT'                                              @L4A 04360000
&LR      SETC  'LGR'                                               @L4A 04370000
&BASR    SETC  'BASSM'                                             @L4A 04380000
.AM31641 ANOP                                                      @L4A 04390000
.*                                                                      04400000
&TRUE     SETA  1                                                @D1A   04410000
&FALSE    SETA  0                                                @D1A   04420000
&ARGWITH  SETC  'THE ARGUMENT SPECIFIED WITH'                    @P1C   04430000
&ARG1WITH SETC  'THE FIRST ARGUMENT SPECIFIED WITH'              @P1C   04440000
&ARG2WITH SETC  'THE SECOND ARGUMENT SPECIFIED WITH'             @P1C   04450000
&NOTSPE  SETC   ' IS NOT SPECIFIED BUT MAY BE REQUIRED.'                04460000
&NOTSUP  SETC   ' IS REQUIRED BUT IS NOT SUPPLIED.'                     04470000
&NOTALL  SETC   ' IS NOT ALLOWED. IT IS IGNORED.'                       04480000
&TOLONG  SETC   'IS TOO LONG. ARGUMENTS ARE IGNORED AFTER '             04490000
&IINVAL  SETC   ' IS INVALID WITH '                                     04500000
&IREQ    SETC   ' IS REQUIRED WITH '                             @L8A   04501000
&IMULTYES SETC  ' MULTIHDR=YES '                                 @L5A   04511000
&IMULTNO  SETC  ' MULTIHDR=NO '                                  @P5A   04520000
&ICONTRACTIBLENO SETC 'CONTRACTIBLE=NO'                          @L8A   04522000
&SUPPLY  SETC   ' SUPPLIED WITH '                                       04530000
&NOTEXT  SETC   ' NO TEXT IS GENERATED.'                                04540000
&NOTWLIST SETC  'CANNOT BE SPECIFIED WITH LIST'                  @P1C   04550000
&NTAG     SETC  '       '                                        @D1A   04560000
&TAG      SETC  ' ERROR '                                        @D1A   04570000
&TOOMANY  SETC  'TOO MANY ARGUMENTS SPECIFIED WITH THE'          @P1C   04580000
&TRUNC    SETC  'HAS BEEN TRUNCATED TO'                          @P1C   04590000
.********************************************************************** 04600000
.*                                                                      04610000
.*       CHECK VALIDITY OF MACRO OPERANDS                               04620000
.*                                                                      04630000
.********************************************************************** 04640000
&INAME   SETC   '&LABEL'           INTERNAL MACRO LABEL                 04650000
.********************************************************************** 04660000
.* CHECK FIRST POSITIONAL PARAMETER FOR BUILD, GET, FREE, DELETE,       04670000
.* CONTRACT                                                             04671000
.********************************************************************** 04680000
.*                                                                      04690000
.* The following is checked before the check for LIST in order          04700000
.* to avoid duplicating the checking in 2 paths.                   @L2A 04710000
.*                                                                      04720000
         AIF ('&OWNER' EQ '' OR '&TYPE(1)' EQ 'BUILD').OWNER0      @L2A 04730000
     MNOTE  12,'IHB343 ''OWNER'' MAY ONLY BE SPECIFIED WITH BUILD' @L2A 04740000
&ERROR   SETA   12                 ERROR                           @L2A 04750000
.OWNER0  ANOP                                                      @L2A 04760000
         AIF ('&BNDRY' EQ '' OR '&TYPE(1)' EQ 'BUILD').BNDRY0      @L3A 04770000
     MNOTE  12,'IHB343 ''BNDRY'' MAY ONLY BE SPECIFIED WITH BUILD' @L3A 04780000
&ERROR   SETA   12                 ERROR                           @L3A 04790000
.BNDRY0  ANOP                                                      @L3A 04800000
        AIF ('&PRESERVE' EQ '' OR '&TYPE(1)' EQ 'BUILD').PRESERVE0 @P4A 04810000
  MNOTE  12,'IHB343 ''PRESERVE'' MAY ONLY BE SPECIFIED WITH BUILD' @P4A 04820000
&ERROR   SETA   12                 ERROR                           @P4A 04830000
.PRESERVE0 ANOP                                                    @P4A 04840000
        AIF ('&FREECELLSDIVISOR' EQ '').FREECELLSDIVISOR0          @L8A 04840100
        AIF ('&TYPE(1)' EQ 'BUILD').FREECELLSDIVISOR0              @L8A 04840200
       MNOTE 12,'IHB343 ''FREECELLSDIVISOR'' MAY ONLY BE SPECIFIED WITH+04840300
               BUILD'                                              @L8A 04840400
&ERROR   SETA   12                 ERROR                           @L8A 04840500
.FREECELLSDIVISOR0 ANOP                                            @L8A 04840600
        AIF ('&CONTINTVL' EQ '').CONTINTVL0                        @L8A 04840700
        AIF ('&TYPE(1)' EQ 'BUILD').CONTINTVL0                     @L8A 04840800
              MNOTE 12,'IHB343 ''CONTINTVL'' MAY ONLY BE SPECIFIED WITH+04840900
               BUILD'                                              @L8A 04841000
&ERROR   SETA   12                 ERROR                           @L8A 04841100
.CONTINTVL0 ANOP                                                   @L8A 04841200
        AIF ('&FREECELLSPERCPU' EQ '').FREECELLSPERCPU0            @L8A 04841300
        AIF ('&TYPE(1)' EQ 'BUILD').FREECELLSPERCPU0               @L8A 04841400
        MNOTE 12,'IHB343 ''FREECELLSPERCPU'' MAY ONLY BE SPECIFIED WITH'04841500
               BUILD'                                              @L8A 04841600
&ERROR   SETA   12                 ERROR                           @L8A 04841700
.FREECELLSPERCPU0 ANOP                                             @L8A 04841800
        AIF ('&AUTOCONTRACT' EQ '').AUTOCONTRACT0                  @L8A 04841900
        AIF ('&TYPE(1)' EQ 'BUILD').AUTOCONTRACT0                  @L8A 04842000
        MNOTE 12,'IHB343 ''AUTOCONTRACT'' MAY ONLY BE SPECIFIED WITH BU'04842100
               ILD'                                                @L8A 04842200
&ERROR   SETA   12                 ERROR                           @L8A 04842300
.AUTOCONTRACT0 ANOP                                                @L8A 04842400
        AIF ('&PLISTVER' EQ '' OR '&TYPE(1)' EQ 'BUILD').PLISTVER0 @L8A 04842500
  MNOTE  12,'IHB343 ''PLISTVER'' MAY ONLY BE SPECIFIED WITH BUILD' @L8A 04842600
&ERROR   SETA   12                 ERROR                           @L8A 04843000
.PLISTVER0 ANOP                                                    @L8A 04844000
        AIF   ('&PLISTVER' EQ '0').PLVER0                          @L8A 04845000
        AIF   ('&PLISTVER' EQ '1').PLVER1                          @L8A 04845200
        AIF   ('&PLISTVER' EQ 'IMPLIED_VERSION').PLVERIV           @L8A 04845400
        AIF   ('&PLISTVER' EQ '').PLVERIV                          @L8A 04845500
        MNOTE 12,'IHB343 ''PLISTVER'' MUST BE ONE OF ''0'', ''1'', ''IM*04845600
               PLIED_VERSION'''                                    @L8A 04845700
        AGO   .PLVEREND                                            @L8A 04846000
.PLVERIV ANOP                                                      @L8A 04847000
        AIF   ('&CONTRACTIBLE' EQ 'COND').PLVER1                   @L8A 04847100
        AIF   ('&FREECELLS' NE '').PLVER1                          @L8A 04847200
        AIF   ('&FREECELLSPERCPU' NE '').PLVER1                    @L8A 04847300
        AIF   ('&AUTOCONTRACT' NE '').PLVER1                       @L8A 04847400
        AIF   ('&FREECELLSDIVISOR' NE '').PLVER1                   @L8A 04847500
        AIF   ('&CONTINTVL' NE '').PLVER1                          @L8A 04847600
        AGO   .PLVER0                                              @L8A 04847700
.PLVER1 ANOP                                                       @L8A 04847800
&IPLISTVER SETC '1'                                                @L8A 04847900
&IBPLISTVER SETC '1'                                               @L8A 04848000
        AGO   .PLVEREND                                            @L8A 04848100
.PLVER0 ANOP                                                       @L8A 04848200
&IPLISTVER SETC '0'                                                @L8A 04848300
&IBPLISTVER SETC '0'                                               @L8A 04848400
        AIF   ('&CONTRACTIBLE' EQ 'COND').PLVER0E                  @L8A 04848500
        AIF   ('&FREECELLS' NE '').PLVER0E                         @L8A 04848600
        AIF   ('&FREECELLSPERCPU' NE '').PLVER0E                   @L8A 04848700
        AIF   ('&AUTOCONTRACT' NE '').PLVER0E                      @L8A 04848800
        AIF   ('&FREECELLSDIVISOR' NE '').PLVER0E                  @L8A 04848900
        AIF   ('&CONTINTVL' NE '').PLVER0E                         @L8A 04849000
        AGO   .PLVEREND                                            @L8A 04849100
.PLVER0E ANOP                                                      @L8A 04849200
        MNOTE 12,'IHB343 ''PLISTVER=0'' IS NOT VALID WITH ''CONTRACTIBL*04849300
               E=COND'', ''FREECELLS'', ''FREECELLSPERCPU'', ''FREECELL*04849400
               SDIVISOR'', ''CONTINTVL'', ''AUTOCONTRACT'''        @L8A 04849500
        AGO   .PLVEREND                                            @L8A 04849600
.PLVEREND ANOP                                                     @L8A 04849700
        AIF ('&MULTIHDR' EQ '' OR '&TYPE(1)' EQ 'BUILD').MULTIHDR0 @L5A 04850000
        AIF ('&MULTIHDR' EQ '' OR '&TYPE(1)' EQ 'GET').MULTIHDR0   @L5A 04860000
        AIF ('&MULTIHDR' EQ '' OR '&TYPE(1)' EQ 'FREE').MULTIHDR0  @L5A 04870000
   MNOTE  12,'IHB343 ''MULTIHDR'' MAY ONLY BE SPECIFIED WITH ''BUILD'',+04880000
               '' GET'', OR ''FREE'' '                             @L5A 04890000
&ERROR   SETA   12                 ERROR                           @P4A 04900000
.MULTIHDR0 ANOP                                                    @P4A 04910000
        AIF ('&CELLSHARE' EQ '' OR '&TYPE(1)' EQ 'BUILD').SHARE0   @L6A 04920000
  MNOTE  12,'IHB343 ''CELLSHARE'' MAY ONLY BE SPECIFIED WITH ''BUILD'' +04930000
               AND ''MULTIHDR=YES'''                               @L8C 04940000
&ERROR   SETA   12                 ERROR                           @L6A 04950000
.SHARE0  ANOP                                                      @L6A 04951000
    AIF ('&CONTRACTIBLE' EQ '' OR '&TYPE(1)' EQ 'BUILD').CONTR0    @L8A 04951100
    AIF ('&CONTRACTIBLE' EQ '' OR '&TYPE(1)' EQ 'GET').CONTR0      @L8A 04951200
    AIF ('&CONTRACTIBLE' EQ '' OR '&TYPE(1)' EQ 'FREE').CONTR0     @L8A 04951300
   MNOTE  12,'IHB343 ''CONTRACTIBLE'' MAY ONLY BE SPECIFIED WITH ''BUIL+04951400
               D'', ''GET'', OR ''FREE'' '                         @L8A 04951500
&ERROR   SETA   12                 ERROR                           @L8A 04951600
.CONTR0 ANOP                                                       @L8A 04951700
        AIF ('&FREECELLS' EQ '').FC0                               @L8C 04951800
        AIF ('&TYPE(1)' EQ 'BUILD').FC0                            @L8A 04952000
        AIF ('&TYPE(1)' EQ 'CONTRACT').FC0                         @L8C 04952100
  MNOTE  12,'IHB343 ''FREECELLS'' MAY ONLY BE SPECIFIED WITH ''BUILD'' +04952200
               AND ''CONTRACT'''                                   @L8C 04952300
&ERROR   SETA   12                 ERROR                           @L8A 04952400
.FC0     ANOP                                                      @L8A 04952500
         AIF ('&TYPE(1)' EQ 'LIST').CPLIST Handle a LIST request  @D1A  04952600
         AIF (N'&SYSLIST LE 2).CHECK   TOO MANY POSITIONAL PARMS        04953000
         MNOTE  4,'IHB331 MACLIST &TOLONG''&SYSLIST(2)''.'              04954000
.CHECK   ANOP                                                           04955000
         AIF ('&TYPE(1)' NE '').FUNC    IF NO TYPE SPECIFIED            04956000
         MNOTE  12,'IHB323 CPOOL FUNCTION&NOTSUP.&NOTEXT'               04957000
&IFUNC   SETC   ''                 NO FUNCTION SPECIFIED                04958000
&ERROR   SETA   12                 ERROR                                04959000
         AGO    .NOFUNC            CHECK REST OF KEYWORDS   @D1C        04960000
.FUNC    ANOP                                                           04970000
         AIF (N'&TYPE  LT 2).FUNC1   IF TOO MANY SUBFIELDS              04980000
         MNOTE  4,'IHB331 ''&TYPE'' &TOLONG''&TYPE(1)''.'               04990000
.FUNC1   ANOP                                                           05000000
&IFUNC   SETC   ''                 NO FUNCTION SPECIFIED                05010000
         AIF ('&TYPE(1)' NE 'BUILD').NBUILD  IF BUILD NOT SPECIFIED     05020000
&IFUNC   SETC   'BUILD'            BUILD FUNCTION SPECIFIED             05030000
         AGO    .FUNCOK                                                 05040000
.NBUILD  ANOP                                                           05050000
     AIF ('&TYPE(1)' NE 'CONTRACT').NCONTRACT Not CONTRACT         @L8A 05060000
&IFUNC   SETC   'CONTRACT'         CONTRACT FUNCTION SPECIFIED     @L8A 05070000
         AGO    .FUNCOK                                            @L8A 05080000
.NCONTRACT ANOP                                                    @L8A 05090000
         AIF ('&TYPE(1)' NE 'DELETE').NDELETE  IF DELETE NOT SPECIFIED  05101000
&IFUNC   SETC   'DELETE'           DELETE FUNCTION SPECIFIED            05102000
         AGO    .FUNCOK                                                 05103000
.NDELETE ANOP                                                           05104000
         AIF ('&TYPE(1)' NE 'FREE').NFREE  IF FREE NOT SPECIFIED        05105000
&IFUNC   SETC   'FREE'             FREE FUNCTION SPECIFIED              05110000
         AGO    .FUNCOK                                                 05120000
.NFREE   ANOP                                                           05130000
         AIF ('&TYPE(1)' NE 'GET').FUNCER IF GET NOT SPECIFIED          05140000
&IFUNC   SETC   'GET'              GET FUNCTION SPECIFIED               05150000
         AGO    .FUNCOK                                                 05160000
.FUNCER  ANOP                Bad function type                     @L8C 05170000
&ERROR   SETA   12           INDICATE ERROR                             05180000
         MNOTE  12,'IHB343 POSITIONAL PARAMETER ''&TYPE(1)'' MUST BE ''+05190000
               BUILD'', ''GET'', ''FREE'', ''DELETE'', ''CONTRACT'', OR+05200000
                ''LIST''.&NOTEXT'                                  @L8C 05201000
.FUNCOK  ANOP                                                           05220000
.*       &IFUNC = 'BUILD'  IF BUILD SPECIFIED                           05230000
.*       &IFUNC = 'CONTRACT' IF CONTRACT SPECIFIED                 @L8A 05240000
.*       &IFUNC = 'DELETE' IF DELETE SPECIFIED                          05241000
.*       &IFUNC = 'FREE' IF FREE SPECIFIED                              05250000
.*       &IFUNC = 'GET' IF GET SPECIFIED                                05260000
.********************************************************************** 05270000
.*                                                                      05280000
         AGO    .NOLISTK     Make sure none of the LIST keywords        05290000
.*                           were specified                     @D1A    05300000
.RNOLIST ANOP                Return point for NOLISTK           @D1A    05310000
.*                                                                      05320000
.NOFUNC  ANOP   Here if no function was specified (&IFUNC='') @D1A      05330000
.*                                                                      05340000
.* CHECK U/UNCOND AND C/COND KEYWORDS.  ONLY ONE CAN BE SPECIFIED,      05350000
.*                                                                      05360000
&IUC     SETC   '&UC(1)'            COND OR UNCOND POSITIONAL           05370000
&OIUC    SETC   '&UC(1)'            COND OR UNCOND POSITIONAL      @L8A 05371000
         AIF (N'&UC  LT 2).UNCOND  UNCOND/COND SPECIFIED                05380000
         MNOTE  4,'IHB331 ''&UC'' &TOLONG''&UC(1)''.'                   05390000
.UNCOND  ANOP                                                           05400000
         AIF ('&IUC' EQ '').PCELL   UNCOND/COND NOT SPECIFIED           05410000
         AIF ('&IUC' EQ 'U' OR '&IUC' EQ 'UNCOND').U1                   05420000
         AIF ('&IUC' EQ 'C' OR '&IUC' EQ 'COND').C1                     05430000
&ERROR   SETA   12                                                      05440000
&IUC     SETC   ''                                                      05450000
         MNOTE  12,'IHB343 POSITIONAL PARAMETER ''&UC(1)'' MUST BE ''U'+05460000
               ', ''UNCOND'', ''C'', OR ''COND''.&NOTEXT'               05470000
         AGO   .PCELL                                                   05480000
.U1      ANOP                                                           05490000
&IUC     SETC   'U'                UNCONDITIONAL GETMAIN SPECIFIED      05500000
         AGO    .PCELL                                                  05510000
.C1      ANOP                                                           05520000
&IUC     SETC   'C'                                                     05530000
.********************************************************************** 05540000
.* CHECK KEYWORDS AND THEIR ARGUMENTS                                   05550000
.********************************************************************** 05560000
.********************************************************************** 05570000
.*                                                                      05580000
.* CHECK KEYWORD FOR THE PRIMARY CELL COUNT                             05590000
.*                                                                      05600000
.********************************************************************** 05610000
.PCELL   ANOP                                                           05620000
         AIF ('&PCELLCT' EQ '').SCELL   IF NO PCELLCT SPECIFIED         05630000
         AIF (N'&PCELLCT   LT 2).PCELL1   MORE THAN 1 OPERAND SPECIFIED 05640000
         MNOTE  4,'IHB331 ''PCELLCT=&PCELLCT'' &TOLONG''&PCELLCT(1)''.' 05650000
&IPCELL  SETC   '&PCELLCT(1)'      SAVE PCELLCT SPECIFICATION           05660000
         AGO    .SCELL                                                  05670000
.PCELL1  ANOP                                                           05680000
&IPCELL  SETC   '&PCELLCT'      SAVE PCELLCT SPECIFICATION              05690000
.********************************************************************** 05700000
.*                                                                      05710000
.* CHECK KEYWORD FOR THE SECONDARY CELL COUNT                           05720000
.*                                                                      05730000
.********************************************************************** 05740000
.SCELL   ANOP                                                           05750000
         AIF ('&SCELLCT' EQ '').MAXCELL    IF NO SCELLCT SPECIFIED @L5A 05760000
         AIF (N'&SCELLCT   LT 2).SCELL1   MORE THAN 1 OPERAND SPECIFIED 05770000
         MNOTE  4,'IHB331 ''SCELLCT=&SCELLCT'' &TOLONG''&SCELLCT(1)''.' 05780000
&ISCELL  SETC   '&SCELLCT(1)'      SAVE SCELLCT SPECIFICATION           05790000
         AGO    .MAXCELL                                                05800000
.SCELL1  ANOP                                                           05810000
&ISCELL  SETC   '&SCELLCT'      SAVE SCELLCT SPECIFICATION              05820000
.********************************************************************** 05830000
.*                                                                      05840000
.* CHECK KEYWORD FOR THE MAXCELLS KEYWORD                               05850000
.*                                                                 @L5A 05860000
.********************************************************************** 05870000
.MAXCELL ANOP                                                           05880000
         AIF ('&MAXCELLS' EQ '').MAXCEL2  IF NO MAXCELLS SPECIFIED @L8C 05890000
         AIF (N'&MAXCELLS  LT 2).MAXCEL1  MORE THAN 1 OPERAND SPECIFIED 05900000
      MNOTE  4,'IHB331 ''MAXCELLS=&MAXCELLS'' &TOLONG''&MAXCELLS(1)''.' 05910000
&IMAXCEL SETC   '&MAXCELLS(1)'     SAVE MAXCELLS SPECIFICATION          05920000
         AGO    .MAXCEL2                                           @L8C 05930000
.MAXCEL1 ANOP                                                           05940000
&IMAXCEL SETC   '&MAXCELLS'     SAVE MAXCELLS SPECIFICATION             05950000
.MAXCEL2 ANOP                                                      @L8A 05950100
.********************************************************************** 05951000
.*                                                                      05952000
.* CHECK KEYWORD FOR THE FREECELLS KEYWORD                              05953000
.*                                                                 @L8A 05954000
.********************************************************************** 05955000
.FREECELLS ANOP                                                         05956000
   AIF ('&FREECELLS' EQ '').FREECELLS2 IF NO FREECELLS SPECIFIED   @L8A 05957000
  AIF (N'&FREECELLS LT 2).FREECELLS1 MORE THAN 1 OPERAND SPECIFIED @L8A 05958000
   MNOTE  4,'IHB331 ''FREECELLS=&FREECELLS'' &TOLONG''&FREECELLS(1)''.'+05959000
                                                                   @L8A 05959100
&IFREECELLS SETC '&FREECELLS(1)'   SAVE FREECELLS SPECIFICATION    @L8A 05959200
         AGO    .FREECELLS2                                        @L8A 05959300
.FREECELLS1 ANOP                                                   @L8A 05959400
&IFREECELLS SETC '&FREECELLS'   SAVE FREECELLS SPECIFICATION       @L8A 05959500
.FREECELLS2 ANOP                                                   @L8A 05959600
.********************************************************************** 05959700
.*                                                                      05959800
.* CHECK KEYWORD FOR THE FREECELLSDIVISOR KEYWORD                       05959900
.*                                                                 @L8A 05960000
.********************************************************************** 05960100
.FREECELLSDIVISOR ANOP                                                  05960200
         AIF   ('&FREECELLSDIVISOR' EQ '').FREECELLSDIV2           @L8A 05960300
         AIF   (N'&FREECELLSDIVISOR LT 2).FREECELLSDIV1 > 1        @L8A 05960400
         MNOTE 4,'IHB331 ''FREECELLSDIVISOR=&FREECELLSDIVISOR'' &TOLONG*05960500
               ''&FREECELLSDIVISOR(1)''.'                          @L8A 05960600
&IFREECELLSDIV SETC '&FREECELLSDIVISOR(1)'                         @L8A 05960800
         AGO    .FREECELLSDIV2                                     @L8A 05960900
.FREECELLSDIV1 ANOP                                                @L8A 05961000
&IFREECELLSDIV SETC '&FREECELLSDIVISOR'                            @L8A 05961100
.FREECELLSDIV2 ANOP                                                @L8A 05961200
.********************************************************************** 05961300
.*                                                                      05961400
.* CHECK KEYWORD FOR THE CONTINTVL KEYWORD                              05961500
.*                                                                 @L8A 05961600
.********************************************************************** 05961700
.CONTINTVL ANOP                                                         05961800
         AIF   ('&CONTINTVL' EQ '').CONTINTVL2                     @L8A 05961900
         AIF   (N'&CONTINTVL LT 2).CONTINTVL1 > 1                  @L8A 05962000
         MNOTE 4,'IHB331 ''CONTINTVL=&CONTINTVL'' &TOLONG.''&CONTINTVL'*05962100
               '.'                                                 @L8A 05962200
&ICONTINTVL SETC '&CONTINTVL(1)'                                   @L8A 05962400
         AGO    .CONTINTVL2                                        @L8A 05962500
.CONTINTVL1 ANOP                                                   @L8A 05962600
&ICONTINTVL SETC '&CONTINTVL'                                      @L8A 05962700
.CONTINTVL2 ANOP                                                   @L8A 05962800
.********************************************************************** 05963000
.*                                                                      05970000
.* CHECK KEYWORD FOR THE CELLSPERCPU KEYWORD                            05980000
.*                                                                 @L5A 05990000
.********************************************************************** 06000000
.CELPER  ANOP                                                           06010000
         AIF ('&CELLSPERCPU' EQ '').CSIZE  IF NO CELLSPERCPU SPECIFIED  06020000
      AIF (N'&CELLSPERCPU LT 2).CELPER1 MORE THAN 1 OPERAND SPECIFIED   06030000
                MNOTE  4,'IHB331 ''CELLSPERCPU=&CELLSPERCPU'' &TOLONG''+06040000
                      &CELLSPERCPU(1)''.'                               06050000
&ICELPER SETC   '&CELLSPERCPU(1)'  SAVE CELLSPERCPU SPECIFICATION       06060000
         AGO    .CSIZE                                                  06070000
.CELPER1 ANOP                                                           06080000
&ICELPER SETC   '&CELLSPERCPU'  SAVE CELLSPERCPU SPECIFICATION          06090000
.********************************************************************** 06100000
.*                                                                      06110000
.* CHECK KEYWORD FOR THE CELL SIZE                                      06120000
.*                                                                      06130000
.********************************************************************** 06140000
.CSIZE   ANOP                                                           06150000
         AIF ('&CSIZE' EQ '').SP        IF NO CSIZE SPECIFIED           06160000
         AIF (N'&CSIZE  LT 2).CSIZE1   MORE THAN 1 OPERAND SPECIFIED    06170000
         MNOTE  4,'IHB331 ''CSIZE=&CSIZE'' &TOLONG''&CSIZE(1)''.'       06180000
&ICSIZE  SETC   '&CSIZE(1)'        SAVE CSIZE SPECIFICATION             06190000
         AGO    .SP                                                     06200000
.CSIZE1  ANOP                                                           06210000
&ICSIZE  SETC   '&CSIZE'        SAVE CSIZE SPECIFICATION                06220000
.********************************************************************** 06230000
.*                                                                      06240000
.* CHECK KEYWORD FOR THE SUBPOOL                                        06250000
.*                                                                      06260000
.********************************************************************** 06270000
.SP      ANOP                                                           06280000
         AIF ('&SP' EQ '').LOC       IF NO SP SPECIFIED                 06290000
         AIF (N'&SP  LT 2).SP1   MORE THAN 1 OPERAND SPECIFIED          06300000
         MNOTE  4,'IHB331 ''SP=&SP'' &TOLONG''&SP(1)''.'                06310000
&ISP     SETC   '&SP(1)'           SAVE SP SPECIFICATION                06320000
         AGO    .SP2                                                    06330000
.SP1     ANOP                                                           06340000
&ISP     SETC   '&SP'           SAVE SP SPECIFICATION                   06350000
.SP2     ANOP                   SUBPOOL SPECIFIED                       06360000
         AIF (T'&ISP NE 'N').LOC  NOT SPECIFIED AS A CONSTANT           06370000
         AIF (&ISP LE 255).LOC    VALUE LESS THAT OR EQUAL 255          06380000
&ERROR   SETA   12                NOTE ERROR                            06390000
         MNOTE  12,'IHB343 ''&ISP'' IN ''SP=&ISP'' MUST BE LESS THAN 25+06400000
               6.&NOTEXT'                                               06410000
.********************************************************************** 06420000
.*                                                                      06430000
.* CHECK KEYWORD FOR THE LOCATION SPECIFICATION.  THERE MAY BE EITHER   06440000
.* ONE OR TWO ARGUMENTS.  THE FIRST STANDS FOR THE VIRTUAL STORAGE AND  06450000
.* MAY BE EITHER 'RES', '24', OR '31'. THE SECOND ARGUMENT STANDS FOR   06451000
.* REAL STORAGE. IF THE FIRST ARGUMENT IS 24, NO SECOND ARGUMENT IS     06452000
.* SUPPORTED.  IF THE FIRST ARGUMENT IS 31, THE SECOND ARGUMENT MAY BE  06460000
.* '31', '64' or 'PAGEFRAMESIZE1MB'.  IF THE FIRST ARGUMENT IS RES, THE 06461000
.* SECOND ARGUMENT MAY BE '31' or '64'.                            @L7C 06462000
.*                                                                      06480000
.********************************************************************** 06490000
.LOC     ANOP                                                           06500000
&IBLOC   SETC   '00'               ASSUME RES LOCATION                  06510000
&IBANY   SETC   '0'                INITIALIZE ANY INDICATOR             06520000
&IB64    SETC   '0'                INITIALIZE LOC=64               @P2A 06521000
&IBPGFMSZ SETC   '0'               INITIALIZE LOC=PAGEFRAMESIZE1MB @P7A 06530000
         AIF ('&LOC' EQ '').CPID      IF NO LOC SPECIFIED               06540000
         AIF (N'&LOC  LT 3).LOC1  MORE THAN 2 OPERANDS SPECIFIED        06550000
         MNOTE  4,'IHB331 ''LOC=&LOC'' &TOLONG''&LOC(1)''.'             06560000
.LOC1    ANOP                                                           06570000
&ILOC1   SETC   '&LOC(1)'                                               06580000
&ILOC2   SETC   '&LOC(2)'                                               06590000
         AIF ('&ILOC1' EQ 'RES').LOC2    RES LOCATION                   06600000
         AIF ('&ILOC1' EQ 'BELOW').LOC3  BELOW LOCATION                 06610000
         AIF ('&ILOC1' EQ '24').LOC3     24 LOCATION                    06620000
         AIF ('&ILOC1' EQ 'ANY').LOC4    31 LOCATION                    06630000
         AIF ('&ILOC1' EQ '31').LOC4     31 LOCATION                    06640000
         MNOTE  12,'IHB343 ''&ILOC1'' IN ''LOC=&LOC'' MUST BE ''RES'', +06650000
               ''24'', OR ''31''.&NOTEXT'                          @02C 06660000
&ERROR   SETA   12                 ERROR                                06670000
.LOC2    ANOP                      RES LOCATION                         06680000
&IBLOC   SETC   '00'                                                    06690000
         AGO    .LOC5              CHECK SECOND OPERAND                 06700000
.LOC3    ANOP                      24 LOCATION                          06710000
&IBLOC   SETC   '01'                                                    06720000
         AGO    .LOC5              CHECK SECOND OPERAND                 06730000
.LOC4    ANOP                      31 LOCATION                          06740000
&IBLOC   SETC   '11'                                                    06750000
         AIF ('&ILOC2' EQ '').CPID  NO SECOND OPERAND                   06751000
         AIF ('&ILOC2' EQ 'ANY').LOC6   31 LOCATION                     06752000
         AIF ('&ILOC2' EQ '31').LOC6 31 LOCATION                        06753000
         AIF ('&ILOC2' EQ '64').LOC64 64 LOCATION                  @02C 06754000
         AIF ('&ILOC2' EQ 'PAGEFRAMESIZE1MB').LOCPGFM  PAGEFRAMESZ @L7A 06755000
         AGO    .LOCERRM           GOTO LOC ERROR Message          @L7A 06756000
.LOC5    ANOP                      CHECK SECOND OPERAND                 06760000
         AIF ('&ILOC2' EQ '').CPID  NO SECOND OPERAND                   06770000
         AIF ('&ILOC2' EQ 'ANY').LOC6   31 LOCATION                     06780000
         AIF ('&ILOC2' EQ '31').LOC6 31 LOCATION                        06790000
         AIF ('&ILOC2' EQ '64').LOC64 64 LOCATION                  @02C 06800000
.LOCERRM ANOP                      LOC ERROR MESSAGE LABEL         @L7C 06802000
         MNOTE  12,'IHB343 ''&ILOC2'' IN ''LOC=&LOC'' MUST BE ''31'' OR+06810000
                ''64''.&NOTEXT'                                    @02C 06820000
&ERROR   SETA   12                 ERROR                                06830000
         AGO    .CPID                                                   06840000
.LOC6    ANOP                      31 SPECIFIED AS SECOND OPERAND       06850000
&IBANY   SETC   '1'                                                     06860000
         AGO    .CPID                                                   06870000
.LOC64   ANOP                      64                              @02C 06880000
&IBANY   SETC   '1'                                                @L3A 06890000
&IB64 SETC      '1'                                                @L3A 06900000
         AGO    .CPID                                              @L3A 06910000
.LOCPGFM ANOP                      PAGEFRAMESIZE1MB                @L7A 06911000
&IBANY   SETC   '1'                                                @L7A 06912000
&IBPGFMSZ SETC      '1'                                            @L7A 06913000
         AGO    .CPID                                              @L7A 06914000
.********************************************************************** 06920000
.*                                                                      06930000
.* CHECK KEYWORD FOR THE CELL POOL ID                                   06940000
.*                                                                      06950000
.********************************************************************** 06960000
.CPID    ANOP                                                           06970000
         AIF ('&CPID' EQ '').CELL      IF NO CPID SPECIFIED             06980000
         AIF (N'&CPID  LT 2).CPID1  MORE THAN 1 OPERAND SPECIFIED       06990000
         MNOTE  4,'IHB331 ''CPID=&CPID'' &TOLONG''&CPID(1)''.'          07000000
&ICPID   SETC   '&CPID(1)'         SAVE CPID SPECIFICATION              07010000
         AGO    .CELL                                                   07020000
.CPID1   ANOP                                                           07030000
&ICPID   SETC   '&CPID'         SAVE CPID SPECIFICATION                 07040000
.********************************************************************** 07050000
.*                                                                      07060000
.* CHECK KEYWORD FOR THE CELL ADDRESS                                   07070000
.*                                                                      07080000
.********************************************************************** 07090000
.CELL    ANOP                                                           07100000
         AIF ('&CELL' EQ '').KEY       IF NO CELL SPECIFIED             07110000
         AIF (N'&CELL  LT 2).CELL1  MORE THAN 1 OPERAND SPECIFIED       07120000
         MNOTE  4,'IHB331 ''CELL=&CELL'' &TOLONG''&CELL(1)''.'          07130000
&ICELL   SETC   '&CELL(1)'         SAVE CELL SPECIFICATION              07140000
         AGO    .KEY                                                    07150000
.CELL1   ANOP                                                           07160000
&ICELL   SETC   '&CELL'         SAVE CELL SPECIFICATION                 07170000
.********************************************************************** 07180000
.*                                                                      07190000
.* CHECK KEYWORD FOR THE KEY NUMBER                                     07200000
.*                                                                      07210000
.********************************************************************** 07220000
.KEY     ANOP                                                           07230000
&IBKEY   SETC   '0'                ASSUME NO KEY SPECIFIED              07240000
         AIF ('&KEY' EQ '').TCB       IF NO KEY SPECIFIED               07250000
         AIF (N'&KEY  LT 2).KEY1  MORE THAN 1 OPERAND SPECIFIED         07260000
         MNOTE  4,'IHB331 ''KEY=&KEY'' &TOLONG''&KEY(1)''.'             07270000
&IBKEY   SETC   '1'                KEY SPECIFIED                        07280000
&IKEY    SETC   '&KEY(1)'          SAVE KEY SPECIFICATION               07290000
         AGO    .KEY2                                                   07300000
.KEY1    ANOP                                                           07310000
&IBKEY   SETC   '1'                KEY SPECIFIED                        07320000
&IKEY    SETC   '&KEY'          SAVE KEY SPECIFICATION                  07330000
.KEY2    ANOP                   KEY SPECIFIED                           07340000
         AIF (T'&IKEY NE 'N').TCB  NOT SPECIFIED AS A CONSTANT          07350000
         AIF (&IKEY LT 16).TCB    VALUE LESS THAN OR EQUAL 15           07360000
&ERROR   SETA   12               NOTE ERROR                             07370000
         MNOTE  12,'IHB343 ''&IKEY'' IN ''KEY=&IKEY'' MUST BE LESS THAN+07380000
                16.&NOTEXT'                                             07390000
.********************************************************************** 07400000
.*                                                                      07410000
.* CHECK KEYWORD FOR THE TCB ADDRESS                                    07420000
.*                                                                      07430000
.********************************************************************** 07440000
.TCB     ANOP                                                           07450000
&IBTCB   SETC   '0'                ASSUME NO TCB SPECIFIED              07460000
         AIF ('&TCB' EQ '').HDR       IF NO TCB SPECIFIED               07470000
         AIF (N'&TCB  LT 2).TCB1  MORE THAN 1 OPERAND SPECIFIED         07480000
         MNOTE  4,'IHB331 ''TCB=&TCB'' &TOLONG''&TCB(1)''.'             07490000
&IBTCB   SETC   '1'                TCB SPECIFIED                        07500000
&ITCB    SETC   '&TCB(1)'          SAVE TCB SPECIFICATION               07510000
         AGO    .HDR                                                    07520000
.TCB1    ANOP                                                           07530000
&IBTCB   SETC   '1'                TCB SPECIFIED                        07540000
&ITCB    SETC   '&TCB'          SAVE TCB SPECIFICATION                  07550000
.********************************************************************** 07560000
.*                                                                      07570000
.* CHECK KEYWORD FOR THE HEADER                                         07580000
.*                                                                      07590000
.********************************************************************** 07600000
.HDR     ANOP                                                           07610000
&IBHDR   SETC   '0'                ASSUME NO HEADER SPECIFIED           07620000
         AIF ('&HDR' EQ '').LINK      IF NO HDR SPECIFIED               07630000
         AIF (N'&HDR  LT 2).HDR1      ONE OPERAND SPECIFIED             07640000
         MNOTE  4,'IHB331 ''HDR=&HDR'' &TOLONG''&HDR(1)''.'             07650000
&IBHDR   SETC   '1'                HEADER SPECIFIED                     07660000
&IHDR    SETC   '&HDR(1)'          SAVE HDR SPECIFICATION               07670000
         AGO    .LINK                                                   07680000
.HDR1    ANOP                                                           07690000
&IBHDR   SETC   '1'                HEADER SPECIFIED                     07700000
&IHDR    SETC   '&HDR'          SAVE HDR SPECIFICATION                  07710000
.********************************************************************** 07720000
.*                                                                      07730000
.* CHECK KEYWORD FOR THE LINKAGE.  ARGUMENT ONE CAN BE EITHER 'SYSTEM'  07740000
.* OR 'BRANCH'                                                          07750000
.*                                                                      07760000
.********************************************************************** 07770000
.LINK    ANOP                                                           07780000
         AIF ('&LINKAGE' EQ '').REGS     IF NO LINKAGE SPECIFIED        07790000
         AIF (N'&LINKAGE  LT 2).LINK1  MORE THAN 1 OPERAND SPECIFIED    07800000
         MNOTE  4,'IHB331 ''LINKAGE=&LINKAGE'' &TOLONG''&LINKAGE(1)''.' 07810000
.LINK1   ANOP                                                           07820000
&ILINK   SETC   '&LINKAGE(1)'      SAVE LINKAGE SPECIFICATION           07830000
         AIF ('&ILINK' EQ 'SYSTEM' OR '&ILINK' EQ 'BRANCH').REGS        07840000
         MNOTE  12,'IHB343 ''&LINKAGE(1)'' IN ''LINKAGE=&LINKAGE'' MUST+07850000
                BE ''SYSTEM'' OR ''BRANCH''.&NOTEXT'                    07860000
&ERROR   SETA   12                 ERROR                                07870000
&ILINK   SETC   'SYSTEM'           ASSUME SYSTEM LINKAGE                07880000
.********************************************************************** 07890000
.*                                                                      07900000
.* CHECK KEYWORD FOR THE REGISTER USAGE.  ARGUMENT ONE CAN BE EITHER    07910000
.* 'USE' OR 'SAVE'.                                                     07920000
.*                                                                      07930000
.********************************************************************** 07940000
.REGS    ANOP                                                           07950000
         AIF ('&REGS' EQ '').OWNER    IF NO REGS SPECIFIED         @L2A 07960000
         AIF (N'&REGS LT 2).REGS1  MORE THAN 1 OPERAND SPECIFIED        07970000
         MNOTE  4,'IHB331 ''REGS=&REGS'' &TOLONG''&REGS(1)''.'          07980000
.REGS1   ANOP                                                           07990000
&IREGS   SETC   '&REGS(1)'         SAVE REGS SPECIFICATION              08000000
         AIF ('&IREGS' EQ 'USE' OR '&IREGS' EQ 'SAVE').OWNER       @L2A 08010000
         MNOTE  12,'IHB343 ''&REGS(1)'' IN ''REGS=&REGS'' MUST BE ''SAV+08020000
               E'' OR ''USE''.&NOTEXT'                                  08030000
&ERROR   SETA   12                 ERROR                                08040000
&IREGS   SETC   'SAVE'             ASSUME SAVE REGISTERS                08050000
.********************************************************************** 08060000
.*                                                                      08070000
.* CHECK KEYWORD FOR THE OWNER. MUST BE 'HOME', 'PRIMARY',              08080000
.* OR 'SYSTEM'.                                                    @D2C 08090000
.*                                                                      08100000
.********************************************************************** 08110000
.OWNER   ANOP                                                      @L2A 08120000
&IBOWN   SETC '00'                    Owner=Home                   @L2A 08130000
         AIF ('&OWNER' EQ '').OWNER6  IF NO OWNER SPECIFIED        @L2A 08140000
         AIF (N'&OWNER LT 2).OWNER1 ONLY 1 OPERAND SPECIFIED       @L2A 08150000
         MNOTE  4,'IHB331 ''OWNER=&OWNER'' &TOLONG''&OWNER(1)''.'  @L2A 08160000
.OWNER1  ANOP                                                      @L2A 08170000
&IOWNER  SETC   '&OWNER(1)'        SAVE OWNER SPECIFICATION        @L2A 08180000
         AIF ('&IOWNER' NE 'HOME').OWNER2                          @L2A 08190000
&IBOWN   SETC '00'                    Owner=Home                   @L2A 08200000
         AGO   .OWNER6                                             @L2A 08210000
.OWNER2  ANOP                                                      @L2A 08220000
         AIF ('&IOWNER' NE 'PRIMARY').OWNER4                       @L2A 08230000
&IBOWN   SETC '01'                    Owner=Primary                @L2A 08240000
         AGO   .OWNER6                                             @L2A 08250000
.OWNER4  ANOP                                                      @L2A 08260000
         AIF ('&IOWNER' NE 'SYSTEM').OWNER5                        @L2A 08270000
&IBOWN   SETC '11'                    Owner=System                 @L2A 08280000
         AGO   .OWNER6                                             @L2A 08290000
.OWNER5  ANOP                                                      @L2A 08300000
         MNOTE  12,'IHB343 ''&OWNER(1)'' IN ''OWNER=&OWNER'' MUST BE ''+08310000
               HOME'', ''PRIMARY'', OR ''SYSTEM''.&NOTEXT'         @D2C 08320000
&ERROR   SETA   12                 ERROR                           @L2A 08330000
.OWNER6  ANOP                                                      @L2A 08340000
.********************************************************************** 08350000
.*                                                                      08360000
.* CHECK KEYWORD FOR BNDRY. MUST BE 'DWORD' OR 'QWORD'             @L3A 08370000
.*                                                                      08380000
.********************************************************************** 08390000
.BNDRY   ANOP                                                      @L3A 08400000
&IBBNDRY SETC '0'                     BNDRY=DWORD                  @L3A 08410000
         AIF ('&BNDRY' EQ '').BNDRY6  IF NO BNDRY SPECIFIED        @L3A 08420000
         AIF (N'&BNDRY LT 2).BNDRY1 ONLY 1 OPERAND SPECIFIED       @L3A 08430000
         MNOTE  4,'IHB331 ''BNDRY=&BNDRY'' &TOLONG''&BNDRY(1)''.'  @L3A 08440000
.BNDRY1  ANOP                                                      @L3A 08450000
         AIF ('&BNDRY(1)' NE 'DWORD').BNDRY2                       @L3A 08460000
&IBBNDRY SETC '0'                     BNDRY=DWORD                  @L3A 08470000
         AGO   .BNDRY6                                             @L3A 08480000
.BNDRY2  ANOP                                                      @L3A 08490000
         AIF ('&BNDRY(1)' NE 'QWORD').BNDRY5                       @L3A 08500000
&IBBNDRY SETC '1'                     BNDRY=QWORD                  @L3A 08510000
         AGO   .BNDRY6                                             @L3A 08520000
.BNDRY5  ANOP                                                      @L3A 08530000
         MNOTE  12,'IHB343 ''&BNDRY(1)'' IN ''BNDRY=&BNDRY'' MUST BE ''+08540000
               DWORD'' OR ''QWORD''.&NOTEXT'                       @L3A 08550000
&ERROR   SETA   12                 ERROR                           @L3A 08560000
.BNDRY6  ANOP                                                      @L3A 08570000
.********************************************************************** 08580000
.*                                                                      08590000
.* CHECK KEYWORD FOR PRESERVE. MUST BE 'NO' or 'YES'               @P4A 08600000
.*                                                                      08610000
.********************************************************************** 08620000
.PRESERVE ANOP                                                     @P4A 08630000
&IBPRESERVE SETC '0'                  PRESERVE=NO                  @P4A 08640000
        AIF ('&PRESERVE' EQ '').PRESERVE6 IF NO PRESERVE SPECIFIED @P4A 08650000
         AIF (N'&PRESERVE LT 2).PRESERVE1 ONLY 1 OPERAND SPECIFIED @P4A 08660000
 MNOTE  4,'IHB331 ''PRESERVE=&PRESERVE'' &TOLONG''&PRESERVE(1)''.' @P4A 08670000
.PRESERVE1 ANOP                                                    @P4A 08680000
         AIF ('&PRESERVE(1)' NE 'NO').PRESERVE2                    @P4A 08690000
&IBPRESERVE SETC '0'                  PRESERVE=NO                  @P4A 08700000
         AGO   .PRESERVE6                                          @P4A 08710000
.PRESERVE2 ANOP                                                    @P4A 08720000
         AIF ('&PRESERVE(1)' NE 'YES').PRESERVE5                   @P4A 08730000
&IBPRESERVE SETC '1'                  PRESERVE=YES                 @P4A 08740000
         AGO   .PRESERVE6                                          @P4A 08750000
.PRESERVE5 ANOP                                                    @P4A 08760000
 MNOTE  12,'IHB343 ''&PRESERVE(1)'' IN ''PRESERVE=&PRESERVE'' MUST BE''+08770000
                NO'' OR ''YES''.&NOTEXT'                           @P4A 08780000
&ERROR   SETA   12                 ERROR                           @P4A 08790000
.PRESERVE6 ANOP                                                    @P4A 08800000
.********************************************************************** 08811000
.*                                                                      08820000
.* CHECK KEYWORD FOR MULTIHDR. MUST BE 'NO' or 'YES' or 'COND'     @L8C 08830000
.*                                                                      08840000
.********************************************************************** 08850000
.MULTIHDR ANOP                                                     @L5A 08860000
&IBMULTIHDR SETC '0'                  MULTIHDR=NO                  @L5A 08870000
        AIF ('&MULTIHDR' EQ '').MULTIHDR6 IF NO MULTIHDR SPECIFIED @L5A 08880000
         AIF (N'&MULTIHDR LT 2).MULTIHDR1 ONLY 1 OPERAND SPECIFIED @L5A 08890000
 MNOTE  4,'IHB331 ''MULTIHDR=&MULTIHDR'' &TOLONG''&MULTIHDR(1)''.' @L5A 08900000
.MULTIHDR1 ANOP                                                    @L5A 08910000
         AIF ('&MULTIHDR(1)' NE 'NO').MULTIHDR2                    @L5A 08920000
&IBMULTIHDR SETC '0'                  MULTIHDR=NO                  @L5A 08930000
&IMULTIHDR SETC   '&MULTIHDR(1)'      SAVE MULTIHDR SPECIFICATION  @L5A 08940000
         AGO   .MULTIHDR6                                          @L5A 08950000
.MULTIHDR2 ANOP                                                    @L5A 08960000
         AIF ('&MULTIHDR(1)' NE 'YES').MULTIHDR5                   @L5A 08970000
&IBMULTIHDR SETC '1'                  MULTIHDR=YES                 @L5A 08980000
&IMULTIHDR SETC   '&MULTIHDR(1)'      SAVE MULTIHDR SPECIFICATION  @L5A 08990000
         AGO   .MULTIHDR6                                          @L5A 09000000
.MULTIHDR5 ANOP                                                    @L5A 09010000
         AIF ('&MULTIHDR(1)' NE 'COND').MULTIHDR7                  @L8A 09010100
&IMULTIHDR SETC   '&MULTIHDR(1)'      SAVE MULTIHDR SPECIFICATION  @L8A 09010200
         AIF ('&CONTRACTIBLE(1)' NE 'COND').MULTIHDR6A             @L8A 09010300
         AIF ('&IFUNC' EQ 'GET' OR '&IFUNC' EQ 'FREE').MULTIHDR6   @L8A 09010400
.MULTIHDR6A ANOP                                                   @L8A 09010500
         MNOTE  12,'IHB343 MULTIHDR=COND REQUIRES CONTRACTIBLE=COND AND+09010600
                IS ALLOWED ON GET AND FREE ONLY'                   @L8A 09010700
&ERROR   SETA   12                 ERROR                           @L8A 09010800
         AGO   .MULTIHDR6                                          @L8A 09010900
.MULTIHDR7 ANOP                                                    @L8A 09011000
 MNOTE  12,'IHB343 ''&MULTIHDR(1)'' IN ''MULTIHDR=&MULTIHDR'' MUST BE''+09020000
                NO'', ''YES'', OR ''COND''.&NOTEXT'                @L8C 09030000
&ERROR   SETA   12                 ERROR                           @L5A 09040000
.MULTIHDR6 ANOP                                                    @L5A 09050000
.********************************************************************** 09060000
.*                                                                      09070000
.* CHECK KEYWORD FOR CELLSHARE. MUST BE 'NO' or 'YES'              @L6A 09080000
.*                                                                      09090000
.********************************************************************** 09100000
.SHARE ANOP                                                        @L6A 09110000
&IBSHARE SETC '0'                     CELLSHARE=NO                 @L6A 09120000
        AIF ('&CELLSHARE' EQ '').SHARE6 IF NO CELLSHARE SPECIFIED  @L6A 09130000
         AIF (N'&CELLSHARE LT 2).SHARE1 ONLY 1 OPERAND SPECIFIED   @L6A 09131000
 MNOTE  4,'IHB331 ''CELLSHARE=&CELLSHARE'' &TOLONG''&CELLSHARE(1)''.'   09132000
.*                                                                 @L6A 09133000
.SHARE1 ANOP                                                       @L6A 09134000
         AIF ('&CELLSHARE(1)' NE 'NO').SHARE2                      @L6A 09135000
&IBSHARE SETC '0'                     CELLSHARE=NO                 @L6A 09136000
         AGO   .SHARE6                                             @L6A 09137000
.SHARE2 ANOP                                                       @L6A 09138000
         AIF ('&CELLSHARE(1)' NE 'YES').SHARE5                     @L6A 09139000
&IBSHARE SETC '1'                     CELLSHARE=YES                @L6A 09139100
         AGO   .SHARE6                                             @L6A 09139200
.SHARE5 ANOP                                                       @L6A 09139300
 MNOTE  12,'IHB343 ''&CELLSHARE(1)'' IN ''CELLSHARE=&CELLSHARE'' MUST B+09139400
               E ''NO'' OR ''YES''.&NOTEXT'                        @L6A 09139500
&ERROR   SETA   12                 ERROR                           @L6A 09139600
.SHARE6 ANOP                                                       @L6A 09139700
.********************************************************************** 09139800
.*                                                                      09139900
.* CHECK KEYWORD FOR AUTOCONTRACT.                                 @L8A 09140000
.* NO or YES                                                       @L8A 09140100
.*                                                                      09140200
.********************************************************************** 09140300
.AUTOCONTRACT ANOP                                                 @L8A 09140400
&IBAUTOCONTRACTNO SETC '0'                                         @L8A 09140500
         AIF  ('&AUTOCONTRACT' EQ '').AUTOCONTRACT99               @L8A 09141100
 AIF (N'&AUTOCONTRACT LT 2).AUTOCONTRACTLT2                        @L8A 09141200
 MNOTE  4,'IHB331 ''AUTOCONTRACT=&AUTOCONTRACT'' &TOLONG''&AUTOCONTRACT+09141300
               (1)''.'                                             @L8A 09141400
.AUTOCONTRACTLT2 ANOP                                              @L8A 09141500
         AIF ('&AUTOCONTRACT(1)' NE 'NO').AUTOCONTRACT2            @L8A 09141600
&IBAUTOCONTRACTNO SETC '1'                                         @L8A 09141700
         AGO   .AUTOCONTRACT99                                     @L8A 09141800
.AUTOCONTRACT2 ANOP                                                @L8A 09141900
         AIF ('&AUTOCONTRACT(1)' NE 'YES').AUTOCONTRACT3           @L8A 09142000
&IBAUTOCONTRACTNO SETC '0'                                         @L8A 09142100
         AGO   .AUTOCONTRACT99                                     @L8A 09142200
.AUTOCONTRACT3 ANOP                                                @L8A 09142300
     MNOTE 12,'IHB343 ''&AUTOCONTRACT(1)'' IN ''AUTOCONTRACT=&AUTOCONTR+09142400
               ACT'' MUST BE ''NO'' OR ''YES''.&NOTEXT'            @L8A 09142500
&ERROR   SETA   12                 ERROR                           @L8A 09142600
.AUTOCONTRACT99 ANOP                                               @L8A 09142700
.********************************************************************** 09142800
.*                                                                      09142900
.* CHECK KEYWORD FOR CONTRACTIBLE. MUST BE 'NO' or 'COND'          @L8A 09143000
.*                                                                      09143100
.********************************************************************** 09143200
.CONTRACTIBLE ANOP                                                 @L8A 09143300
&IBCONTRACTIBLE SETC '0'              CONTRACTIBLE=NO              @L8A 09143400
    AIF ('&CONTRACTIBLE' EQ '').CONTRACTIBLE6 No contractible      @L8A 09143500
 AIF (N'&CONTRACTIBLE LT 2).CONTRACTIBLE1 ONLY 1 OPERAND SPECIFIED @L8A 09143600
 MNOTE  4,'IHB331 ''CONTRACTIBLE=&CONTRACTIBLE'' &TOLONG''&CONTRACTIBLE+09143700
               (1)''.'                                             @L8A 09143800
.CONTRACTIBLE1 ANOP                                                @L8A 09143900
         AIF ('&CONTRACTIBLE(1)' NE 'NO').CONTRACTIBLE2            @L8A 09144000
&IBCONTRACTIBLE SETC '0'              CONTRACTIBLE=NO              @L8A 09144100
&ICONTRACTIBLE SETC '&CONTRACTIBLE(1)' SAVE CONTRACTIBLE           @L8A 09144200
         AGO   .CONTRACTIBLE6                                      @L8A 09144300
.CONTRACTIBLE2 ANOP                                                @L8A 09144400
         AIF ('&CONTRACTIBLE(1)' NE 'COND').CONTRACTIBLE5          @L8A 09144500
&IBCONTRACTIBLE SETC '1'              CONTRACTIBLE=COND            @L8A 09144600
&ICONTRACTIBLE SETC '&CONTRACTIBLE(1)' SAVE CONTRACTIBLE           @L8A 09144700
         AIF   ('&IMULTIHDR' EQ 'YES').CONTRACTIBLEC1              @L8C 09144800
         AIF   ('&IMULTIHDR' EQ 'COND').CONTRACTIBLEC1             @L8A 09144900
 MNOTE 12,'IHB343 CONTRACTIBLE=COND REQUIRES MULTIHDR=YES OR MULTIHDR=C*09145100
               OND.&NOTEXT'                                        @L8A 09145200
&ERROR   SETA   12                 ERROR                           @L8A 09145300
         AGO   .CONTRACTIBLE6                                      @L8A 09145400
.CONTRACTIBLEC1 ANOP                                               @L8A 09145500
         AIF   ('&IFUNC' NE 'BUILD').CONTRACTIBLE6                 @L8C 09145600
         AIF   ('&IBAUTOCONTRACTNO' EQ '1').CONTRACTIBLE6          @L8C 09145700
         AIF   ('&AUTOCONTRACT' NE '').CONTRACTIBLEC2              @L8A 09145800
 MNOTE 12,'IHB343 CONTRACTIBLE=COND ON BUILD REQUIRES AUTOCONTRACT.&NOT*09145900
               EXT'                                                @L8A 09146000
&ERROR   SETA   12                 ERROR                           @L8A 09146100
.CONTRACTIBLEC2 ANOP                                               @L8A 09146200
         AIF   ('&IFREECELLS' NE '').CONTRACTIBLEC3                @L8C 09146300
 MNOTE 12,'IHB343 CONTRACTIBLE=COND,AUTOCONTRACT=YES ON BUILD REQUIRES *09146400
               FREECELLS.&NOTEXT'                                  @L8C 09146500
&ERROR   SETA   12                 ERROR                           @L8A 09146600
.CONTRACTIBLEC3 ANOP                                               @L8A 09146700
         AIF   ('&IFREECELLSDIV' NE '').CONTRACTIBLEC4             @L8A 09146800
 MNOTE 12,'IHB343 CONTRACTIBLE=COND,AUTOCONTRACT=YES ON BUILD REQUIRES *09146900
               FREECELLSDIVISOR.&NOTEXT'                           @L8C 09147000
&ERROR   SETA   12                 ERROR                           @L8A 09147200
.CONTRACTIBLEC4 ANOP                                               @L8A 09147300
         AIF   ('&FREECELLSPERCPU' NE '').CONTRACTIBLEC5           @L8A 09147400
 MNOTE 12,'IHB343 CONTRACTIBLE=COND,AUTOCONTRACT=YES ON BUILD REQUIRES *09147500
               FREECELLSPERCPU.&NOTEXT'                            @L8C 09147600
&ERROR   SETA   12                 ERROR                           @L8A 09147900
.CONTRACTIBLEC5 ANOP                                               @L8A 09148000
         AIF   ('&ICONTINTVL' NE '').CONTRACTIBLEC6                @L8A 09148100
 MNOTE 12,'IHB343 CONTRACTIBLE=COND,AUTOCONTRACT=YES ON BUILD REQUIRES *09148200
               CONTINTVL.&NOTEXT'                                  @L8C 09148300
&ERROR   SETA   12                 ERROR                           @L8A 09148600
.CONTRACTIBLEC6 ANOP                                               @L8A 09148700
         AGO   .CONTRACTIBLE6                                      @L8A 09148800
.CONTRACTIBLE5 ANOP                                                @L8A 09148900
 MNOTE  12,'IHB343 ''&CONTRACTIBLE(1)'' IN ''CONTRACTIBLE=&CONTRACTIBLE+09149000
                '' MUST BE ''NO'' OR ''COND''.&NOTEXT'             @L8A 09149100
&ERROR   SETA   12                 ERROR                           @L8A 09149200
.CONTRACTIBLE6 ANOP                                                @L8A 09149300
.********************************************************************** 09149400
.*                                                                      09149500
.* CHECK KEYWORD FOR FREECELLSPERCPU.                              @L8A 09149600
.* Multiple arguments: NO, ALL, STANDARD, ZCBP, ZAAP, ZIIP         @L9C 09149700
.*                                                                      09149800
.********************************************************************** 09149900
.FREECELLSPERCPU ANOP                                              @L8A 09150000
&IBFREECELLSPERCPUSTANDARD SETC '0'                                @L8A 09150100
&IBFREECELLSPERCPUZCBP SETC '0'                                    @L9C 09150200
&IBFREECELLSPERCPUZIIP SETC '0'                                    @L8A 09150300
         AIF   ('&FREECELLSPERCPU' EQ '').FREECELLSPERCPU99        @L8A 09150400
         AIF   ('&ICONTRACTIBLE' EQ 'COND').FREECELLSPERCPUC1      @L8C 09150500
 MNOTE 12,'IHB343 FREECELLSPERCPU REQUIRES CONTRACTIBLE=COND.&NOTEXT'  *09150600
                                                                   @L8A 09150700
&ERROR   SETA   12                 ERROR                           @L8A 09150800
.FREECELLSPERCPUC1 ANOP                                            @L8A 09150900
 AIF (N'&FREECELLSPERCPU LT 6).FREECELLSPERCPULT6                  @L8A 09151000
 MNOTE  4,'IHB331 ''FREECELLSPERCPU=&FREECELLSPERCPU'' &TOLONG''&FREECE+09151100
               LLSPERCPU(5)''.'                                    @L8A 09151200
.FREECELLSPERCPULT6 ANOP                                           @L8A 09151300
&CTR     SETA   0                                                  @L8A 09151400
.FREECELLSPERCPULOOP ANOP                                          @L8A 09151500
&CTR     SETA   &CTR+1                                             @L8A 09151600
         AIF   (&CTR GT N'&FREECELLSPERCPU).FREECELLSPERCPU99      @L8A 09151700
         AIF   (&CTR GT 5).FREECELLSPERCPU99                       @L8A 09151800
         AIF ('&FREECELLSPERCPU(&CTR)' NE 'NO').FREECELLSPERCPU2   @L8A 09151900
&IBFREECELLSPERCPUSTANDARD SETC '0'                                @L8A 09152000
&IBFREECELLSPERCPUZCBP SETC '0'                                    @L9C 09152100
&IBFREECELLSPERCPUZIIP SETC '0'                                    @L8A 09152200
         AGO   .FREECELLSPERCPULOOP                                @L8A 09152300
.FREECELLSPERCPU2 ANOP                                             @L8A 09152400
         AIF ('&FREECELLSPERCPU(&CTR)' NE 'ALL').FREECELLSPERCPU3  @L8A 09152500
&IBFREECELLSPERCPUSTANDARD SETC '1'                                @L8A 09152600
&IBFREECELLSPERCPUZCBP SETC '1'                                    @L9C 09152700
&IBFREECELLSPERCPUZIIP SETC '1'                                    @L8A 09152800
         AGO   .FREECELLSPERCPULOOP                                @L8A 09152900
.FREECELLSPERCPU3 ANOP                                             @L8A 09153000
     AIF ('&FREECELLSPERCPU(&CTR)' NE 'STANDARD').FREECELLSPERCPU4 @L8A 09153100
&IBFREECELLSPERCPUSTANDARD SETC '1'                                @L8A 09153200
         AGO   .FREECELLSPERCPULOOP                                @L8A 09153300
.FREECELLSPERCPU4 ANOP                                             @L8A 09153400
         AIF ('&FREECELLSPERCPU(&CTR)' EQ 'ZCBP').FREECELLSPERCPUT @L9C 09153500
         AIF ('&FREECELLSPERCPU(&CTR)' NE 'ZAAP').FREECELLSPERCPU5 @L8A 09153600
.FREECELLSPERCPUT ANOP                                             @L9C 09153700
&IBFREECELLSPERCPUZCBP SETC '1'                                    @L9C 09153800
         AGO   .FREECELLSPERCPULOOP                                @L8A 09153900
.FREECELLSPERCPU5 ANOP                                             @L8A 09154000
         AIF ('&FREECELLSPERCPU(&CTR)' NE 'ZIIP').FREECELLSPERCPU6 @L8A 09154100
&IBFREECELLSPERCPUZIIP SETC '1'                                    @L8A 09154200
         AGO   .FREECELLSPERCPULOOP                                @L8A 09154300
.FREECELLSPERCPU6 ANOP                                             @L8A 09154400
        MNOTE 12,'IHB343 ''&FREECELLSPERCPU(&CTR)'' IN ''FREECELLSPERCP+09154500
               U=&FREECELLSPERCPU'' MUST BE ''NO'', ''ALL'', ''STANDARD+09154600
               '', ''ZCBP'', ''ZAAP'', OR ''ZIIP''.&NOTEXT'        @L9C 09154700
&ERROR   SETA   12                 ERROR                           @L8A 09154800
         AGO   .FREECELLSPERCPULOOP                                @L8A 09154900
.FREECELLSPERCPU99 ANOP                                            @L8A 09155000
.********************************************************************** 09155100
.*                                                                      09155200
.* CHECK AUTOCONTRACT w/o CONTRACTIBLE                             @L8A 09155300
.*                                                                      09155400
.********************************************************************** 09155500
         AIF   ('&AUTOCONTRACT' EQ '').AUTOCONTRACT99A             @L8A 09155600
         AIF   ('&ICONTRACTIBLE' EQ 'COND').AUTOCONTRACT99A        @L8C 09155700
 MNOTE 12,'IHB343 AUTOCONTRACT REQUIRES CONTRACTIBLE=COND.&NOTEXT' @L8A 09155800
&ERROR   SETA   12                 ERROR                           @L8A 09155900
.AUTOCONTRACT99A ANOP                                              @L8A 09158300
.********************************************************************** 09158400
.*                                                                      09158500
.* CHECK KEYWORD FOR THE FORM OF THE FUNCTION.  ARGUMENT ONE CAN        09158600
.* EITHER BE 'L' FOR THE LIST FORM, OR 'E' FOR THE EXECUTE FORM.        09159000
.*                                                                      09160000
.********************************************************************** 09170000
.MF      ANOP                                                           09180000
&IMF     SETC   '&MF(1)'                                                09190000
&IMF2    SETC   '&MF(2)'                                                09200000
         AIF ('&MF' EQ '').SEMAN    IF NO MF SPECIFIED                  09210000
.MF1     ANOP                                                           09220000
         AIF ('&IMF' EQ 'L' OR '&IMF' EQ 'E').MF2                       09230000
         MNOTE  12,'IHB343 ''&MF(1)'' IN ''MF=&MF'' MUST BE ''L'' OR ''+09240000
               E''.&NOTEXT'                                             09250000
&ERROR   SETA   12                 NOTE ERROR                           09260000
         AGO    .SEMAN                                                  09270000
.MF2     ANOP                                                           09280000
         AIF ('&IMF' EQ 'E').MF4 EXECUTE FORM                           09290000
.*      LIST FORM  CANNOT HAVE A SECOND SPECIFICATION                   09300000
         AIF (N'&MF EQ 1).SEMAN                                         09310000
         MNOTE  4,'IHB331 ''MF=&MF'' &TOLONG''&MF(1)''.'                09320000
         AGO    .SEMAN                                                  09330000
.MF4     ANOP                      EXECUTE FORM                         09340000
         AIF (N'&MF LT 3).MF5  2 OR LESS OPERANDS SPECIFIED             09350000
         MNOTE  4,'IHB331 ''MF=&MF'' &TOLONG''&MF(2)''.'                09360000
         AGO    .SEMAN                                                  09370000
.MF5     ANOP                                                           09380000
         AIF (N'&MF EQ 2).SEMAN     2 OPERANDS SPECIFIED FOR MF         09390000
         MNOTE  12,'IHB343 SECOND ''MF'' SPECIFICATION&NOTSUP.&NOTEXT'  09400000
&ERROR   SETA   12                 NOTE ERROR                           09410000
.********************************************************************** 09420000
.SEMAN   ANOP                                                           09430000
.********************************************************************** 09440000
.*       CHECK SEMANTICS                                                09450000
.********************************************************************** 09460000
         AIF ('&IFUNC' EQ '').SEMEND    NO FUNCTION SPECIFIED           09470000
         AIF ('&IFUNC' EQ 'BUILD').SBUILD   IF BUILD FUNCTION           09480000
.********************************************************************** 09490000
.*                                                                      09500000
.*       CHECK SEMANTICS FOR GET, FREE, DELETE, CONTRACT.               09510000
.*    .  CPID MUST BE SPECIFIED WITH GET, FREE, DELETE, CONTRACT.       09520000
.*    .  PCELLCT, SCELLCT, CSIZE, SP, LOC, KEY, TCB, HDR, MF, MAXCELLS  09530000
.*       AND CELLSPERCPU CANNOT BE SPECIFIED WITH GET, FREE, DELETE     09540000
.*       CONTRACT.                                                 @L5A 09550000
.*    .  U/UNCOND, OR C/COND CAN ONLY BE SPECIFIED WITH GET.            09560000
.*    .  FREE CANNOT HAVE LINKAGE, IT MUST HAVE CELL, AND REGS          09570000
.*       IS OPTIONAL.                                                   09580000
.*    .  DELETE CANNOT HAVE CELL, REGS IS IGNORED, AND LINKAGE          09590000
.*       IS OPTIONAL.                                                   09600000
.*    .  CONTRACT CANNOT HAVE CELL                                 @L8A 09601000
.*    .  LINKAGE AND REGS ARE OPTIONAL WITH GET.                        09610000
.*                                                                      09620000
.********************************************************************** 09630000
         AIF ('&ICPID' NE '').SEMAN1    CPID NEEDED                     09640000
         MNOTE  12,'IHB313 ''CPID''&NOTSUP.&NOTEXT'                     09650000
&ERROR   SETA   12                                                      09660000
.SEMAN1  ANOP                                                           09670000
         AIF ('&IPCELL' EQ '').SEMAN1A                                  09680000
         MNOTE  12,'IHB323 ''PCELLCT''&IINVAL''&IFUNC''.&NOTEXT'        09690000
&ERROR   SETA   12                                                      09700000
.SEMAN1A ANOP                                                           09710000
         AIF ('&ISCELL' EQ '').SEMAN1B                                  09720000
         MNOTE  12,'IHB323 ''SCELLCT''&IINVAL''&IFUNC''.&NOTEXT'        09730000
&ERROR   SETA   12                                                      09740000
.SEMAN1B ANOP                                                           09750000
         AIF ('&ICSIZE' EQ '').SEMAN1C                                  09760000
         MNOTE  12,'IHB323 ''CSIZE''&IINVAL''&IFUNC''.&NOTEXT'          09770000
&ERROR   SETA   12                                                      09780000
.SEMAN1C ANOP                                                           09790000
         AIF ('&ISP' EQ '').SEMAN1D                                     09800000
         MNOTE  12,'IHB323 ''SP''&IINVAL''&IFUNC''.&NOTEXT'             09810000
&ERROR   SETA   12                                                      09820000
.SEMAN1D ANOP                                                           09830000
         AIF ('&ILOC1' EQ '' AND '&ILOC2' EQ '').SEMAN1E                09840000
         MNOTE  12,'IHB323 ''LOC''&IINVAL''&IFUNC''.&NOTEXT'            09850000
&ERROR   SETA   12                                                      09860000
.SEMAN1E ANOP                                                           09870000
         AIF ('&IKEY' EQ '').SEMAN1F                                    09880000
         MNOTE  12,'IHB323 ''KEY''&IINVAL''&IFUNC''.&NOTEXT'            09890000
&ERROR   SETA   12                                                      09900000
.SEMAN1F ANOP                                                           09910000
         AIF ('&ITCB' EQ '').SEMAN1G                                    09920000
         MNOTE  12,'IHB323 ''TCB''&IINVAL''&IFUNC''.&NOTEXT'            09930000
&ERROR   SETA   12                                                      09940000
.SEMAN1G ANOP                                                           09950000
         AIF ('&IHDR' EQ '').SEMAN1H                                    09960000
         MNOTE  12,'IHB323 ''HDR''&IINVAL''&IFUNC''.&NOTEXT'            09970000
&ERROR   SETA   12                                                      09980000
.SEMAN1H ANOP                                                           09990000
         AIF ('&IMF' EQ '').SEMAN1I                                @L5A 10000000
         MNOTE  12,'IHB323 ''MF''&IINVAL''&IFUNC''.&NOTEXT'             10010000
&ERROR   SETA   12                                                      10020000
.SEMAN1I ANOP                                                      @L5A 10030000
         AIF ('&IMAXCEL' EQ '').SEMAN1J                                 10040000
         MNOTE  12,'IHB323 ''MAXCELLS''&IINVAL''&IFUNC''.&NOTEXT'       10050000
&ERROR   SETA   12                                                      10060000
.SEMAN1J ANOP                                                      @L5A 10070000
         AIF ('&ICELPER' EQ '').SEMAN2                                  10080000
         MNOTE  12,'IHB323 ''CELLSPERCPU''&IINVAL''&IFUNC''.&NOTEXT'    10090000
&ERROR   SETA   12                                                      10100000
.SEMAN2  ANOP                                                           10110000
         AIF ('&IFREECELLSDIV' EQ '').SEMANFCDE                    @L8A 10111000
       MNOTE  12,'IHB323 ''FREECELLSDIVISOR''&IINVAL''&IFUNC''.&NOTEXT'*10112000
                                                                   @L8A 10113000
&ERROR   SETA   12                                                 @L8A 10113100
.SEMANFCDE ANOP                                                    @L8A 10114000
         AIF ('&ICONTINTVL' EQ '').SEMANCIE                        @L8A 10114100
       MNOTE  12,'IHB323 ''CONTINTVL''&IINVAL''&IFUNC''.&NOTEXT'   @L8A 10114200
&ERROR   SETA   12                                                 @L8A 10114400
.SEMANCIE ANOP                                                     @L8A 10114500
         AIF ('&FREECELLSPERCPU' EQ '').SEMANFCPCE                 @L8A 10115000
        MNOTE  12,'IHB323 ''FREECELLSPERCPU''&IINVAL''&IFUNC''.&NOTEXT'*10116000
                                                                   @L8A 10117000
&ERROR   SETA   12                                                 @L8A 10118000
.SEMANFCPCE ANOP                                                   @L8A 10119000
         AIF ('&AUTOCONTRACT' EQ '').SEMANACE                      @L8A 10119100
        MNOTE  12,'IHB323 ''AUTOCONTRACT''&IINVAL''&IFUNC''.&NOTEXT'   +10119200
                                                                   @L8A 10119300
&ERROR   SETA   12                                                 @L8A 10119400
.SEMANACE ANOP                                                     @L8A 10119500
         AIF ('&IFUNC' NE 'FREE').SEMAN3     NOT THE FREE FUNCTION      10120000
.********************************************************************** 10130000
.*                                                                      10140000
.*    THE FREE FUNCTION, MUST HAVE CELL, CANNOT HAVE LINKAGE AND        10150000
.*    UNCOND OR COND, AND REGS IS OPTIONAL                              10160000
.*                                                                      10170000
.********************************************************************** 10180000
         AIF ('&OIUC' EQ '').SEMF0         U/C NOT SPECIFIED       @L8C 10190000
         MNOTE  12,'IHB323 ''&OIUC''&IINVAL''&IFUNC''.&NOTEXT'     @L8C 10200000
&ERROR   SETA   12                                                      10210000
.SEMF0   ANOP                                                           10220000
         AIF ('&ILINK' EQ '').SEMF1       LINK NOT SPECIFIED            10230000
         MNOTE  12,'IHB323 ''LINKAGE''&IINVAL''FREE''.&NOTEXT'          10240000
&ERROR   SETA   12                                                      10250000
.SEMF1   ANOP                                                           10260000
         AIF ('&ICELL' NE '').SEMF2       CELL SPECIFIED                10270000
         MNOTE  12,'IHB313 ''CELL''&NOTSUP.&NOTEXT'                     10280000
&ERROR   SETA   12                                                      10290000
.SEMF2   ANOP                                                           10300000
         AIF ('&IREGS' NE '').SEMEND      REGS IS SPECIFIED             10310000
&IREGS   SETC   'SAVE'                    DEFAULT IS TO SAVE REGS       10320000
         AGO    .SEMEND                   FINISHED SEMANTIC CHECK       10330000
.SEMAN3  ANOP                                                           10340000
         AIF ('&IFUNC' NE 'DELETE').SEMAN5                         @L8C 10350000
.********************************************************************** 10360000
.*                                                                      10370000
.*       THE DELETE FUNCTION CHECKS THAT CELL IS NOT SPECIFIED AND      10380000
.*       IF THE LINKAGE IS NOT SPECIFIED THE DEFAULT IS SET TO          10390000
.*       SYSTEM, AND IT CANNOT HAVE REGS OR U/C.                        10400000
.*                                                                      10410000
.********************************************************************** 10420000
         AIF ('&OIUC' EQ '').SEMF01        U/C NOT SPECIFIED       @L8C 10430000
         MNOTE  12,'IHB323 ''&OIUC''&IINVAL''&IFUNC''.&NOTEXT'     @L8C 10440000
&ERROR   SETA   12                                                      10450000
.SEMF01  ANOP                                                           10460000
         AIF ('&ICELL' EQ '').SEMAN4                                    10470000
         MNOTE  12,'IHB323 ''CELL''&IINVAL''&IFUNC''.&NOTEXT'           10480000
&ERROR   SETA   12                                                      10490000
.*                                                                      10500000
.SEMAN4  ANOP                                                           10510000
         AIF ('&IREGS' EQ '').SEMAN4A                                   10520000
&ERROR   SETA   12                                                      10530000
         MNOTE  12,'IHB323 ''REGS''&IINVAL''&IFUNC''.&NOTEXT'           10540000
.SEMAN4A ANOP                                                           10550000
&IREGS   SETC   'USE'              IGNORE REGS SPECIFICATION            10560000
.*                                                                      10570000
         AIF ('&ILINK' EQ 'BRANCH' OR '&ILINK' EQ 'SYSTEM').SEMEND      10580000
&ILINK   SETC   'SYSTEM'           ASSUME SYSTEM LINKAGE                10590000
         AGO    .SEMEND                                                 10600000
.*                                                                      10610000
.SEMAN5  ANOP                                                           10620000
.********************************************************************** 10621000
.*                                                                      10622000
.*       The CONTRACT function checks that                              10623000
.*       - FREECELLS is specified                                       10623100
.*       - CELL is not specified                                        10623200
.*       - REGS is not specified                                        10623300
.*       - LINKAGE is not specified                                     10623400
.*       - COND/UNCOND is not specified                                 10623500
.*                                                                      10623600
.********************************************************************** 10623700
         AIF   ('&IFUNC' NE 'CONTRACT').SEMANC_END                 @L8A 10623800
         AIF   ('&IFREECELLS' NE '').SEMANC_ENDFREECELLS           @L8A 10623900
         MNOTE 12,'IHB323 ''FREECELLS''&IREQ''&IFUNC''.&NOTEXT'    @L8A 10624000
&ERROR   SETA   12                                                 @L8A 10624100
.SEMANC_ENDFREECELLS ANOP                                          @L8A 10624200
         AIF ('&ICELL' EQ '').SEMANC_ENDCELL                       @L8A 10624300
         MNOTE  12,'IHB323 ''CELL''&IINVAL''&IFUNC''.&NOTEXT'      @L8A 10624400
&ERROR   SETA   12                                                 @L8A 10624500
.*                                                                 @L8A 10624600
.SEMANC_ENDCELL ANOP                                               @L8A 10624700
         AIF ('&IREGS' EQ '').SEMANC_ENDREGS                       @L8A 10624800
         MNOTE  12,'IHB323 ''REGS''&IINVAL''&IFUNC''.&NOTEXT'      @L8A 10624900
&ERROR   SETA   12                                                 @L8A 10625000
.*                                                                 @L8A 10625100
.SEMANC_ENDREGS ANOP                                               @L8A 10625200
         AIF ('&ILINK' EQ '').SEMANC_ENDLINK                       @L8A 10625300
         MNOTE  12,'IHB323 ''LINKAGE''&IINVAL''&IFUNC''.&NOTEXT'   @L8A 10625400
&ERROR   SETA   12                                                 @L8A 10625500
.*                                                                 @L8A 10625600
.SEMANC_ENDLINK ANOP                                               @L8A 10625700
         AIF ('&OIUC' EQ '').SEMANC_ENDUC                          @L8A 10625800
         MNOTE  12,'IHB323 ''&OIUC''&IINVAL''&IFUNC''.&NOTEXT'     @L8A 10625900
&ERROR   SETA   12                                                 @L8A 10626100
.*                                                                 @L8A 10626200
.SEMANC_ENDUC ANOP                                                 @L8A 10626300
.SEMANC_END ANOP                                                   @L8A 10626400
         AIF ('&IFUNC' NE 'GET').SEMEND                            @L8A 10627000
.********************************************************************** 10630000
.*                                                                      10640000
.*       THE GET FUNCTION CHECKS THAT LINKAGE IS NOT SPECIFIED          10650000
.*       WITH THE GET CONDITIONAL, AND MULTIHDR=YES KEYWORDS.      @L5A 10660000
.*       AND REGS AND U/C ARE OPTIONAL.                                 10670000
.*                                                                      10680000
.********************************************************************** 10690000
         AIF ('&IUC' NE '').SEMAN6   C OR U SPECIFIED                   10700000
&IUC     SETC   'U'                  DEFAULT IS UNCONDITIONAL           10710000
.*                                                                      10720000
.SEMAN6  ANOP                                                           10730000
         AIF ('&IREGS' NE '').SEMAN7      REGS SPECIFICATION            10740000
&IREGS   SETC   'SAVE'             ASSUME REGISTERS ARE TO BE SAVED     10750000
.*                                                                      10760000
.SEMAN7  ANOP                                                           10770000
         AIF ('&ILINK' NE '').SEMAN8                                    10780000
&ILINK   SETC   'SYSTEM'           ASSUME SYSTEM LINKAGE                10790000
         AGO    .SEMEND                                                 10800000
.SEMAN8  ANOP                      LINKAGE SPECIFIED                    10810000
         AIF ('&IUC' NE 'C').SEMAN9                                @L5C 10820000
         MNOTE  12,'IHB323 ''LINKAGE''&IINVAL''&IFUNC C''.&NOTEXT'      10830000
&ERROR   SETA   12                                                 @P6M 10840000
.SEMAN9  ANOP                                                      @L5A 10850000
     AIF ('&IMULTIHDR' NE 'YES' AND '&IMULTIHDR' NE 'COND').SEMEND @L8C 10860000
         AIF ('&ILINK' EQ '').SEMEND                                    10870000
  MNOTE 12,'IHB323 ''LINKAGE''&IINVAL''&IFUNC MULTIHDR=&IMULTIHDR.''.&N+10880000
               OTEXT'                                              @L8C 10890000
&ERROR   SETA   12                                                 @P6A 10891000
         AGO    .SEMEND                                                 10892000
.********************************************************************** 10893000
.********************************************************************** 10894000
.*                                                                      10895000
.*    SEMANTICS CHECK FOR BUILD                                         10896000
.*                                                                      10897000
.********************************************************************** 10898000
.SBUILD  ANOP                                                           10899000
.********************************************************************** 10900000
.*                                                                      10910000
.*       COND AND UNCOND ARE INVALID WITH THE BUILD FUNCTION.           10920000
.*       CELL AND REGS CANNOT BE SPECIFIED WITH BUILD                   10930000
.*       PCELLCT AND SCELLCT CANNOT BE SPECIFIED WITH BUILD,            10940000
.*       MULTIHDR=YES                                              @L5A 10950000
.*       CELLSPERCPU AND MAXCELLS CANNOT BE SPECIFIED WITH BUILD,       10960000
.*       MULTIHDR=NO                                               @P5A 10961000
.*       FREECELLS cannot be specified with BUILD,CONTRACTIBLE=NO  @L8A 10961100
.*                                                                      10962000
.********************************************************************** 10963000
         AIF ('&OIUC' EQ '').SBCELL  C OR U NOT SPECIFIED          @L8C 10964000
         MNOTE  12,'IHB323 ''&OIUC''&IINVAL''&IFUNC''.&NOTEXT'     @L8C 10965000
&ERROR   SETA   12                                                      10966000
.*                                                                      10967000
.SBCELL  AIF ('&ICELL' EQ '').SBREGS  CELL NOT SPECIFIED                10968000
         MNOTE  12,'IHB323 ''CELL''&IINVAL''BUILD''.&NOTEXT'            10969000
&ERROR   SETA   12                                                      10970000
.SBREGS  AIF ('&IREGS' EQ '').SBUIL01                              @L5A 10980000
&ERROR   SETA   12                                                      10990000
         MNOTE  12,'IHB323 ''REGS''&IINVAL''BUILD''.&NOTEXT'            11000000
.SBUIL01 ANOP                                                      @L5A 11010000
&IREGS   SETC   'USE'                                                   11020000
         AIF ('&IPCELL' EQ '').SBUIL02                             @L5A 11030000
         AIF ('&MULTIHDR' NE 'YES').SBUIL02                             11040000
         MNOTE  12,'IHB323 ''PCELLCT''&IINVAL''&IMULTYES''.&NOTEXT'     11050000
&ERROR   SETA   12                                                      11060000
.SBUIL02 ANOP                                                      @L5A 11070000
         AIF ('&ISCELL' EQ '').SBUIL03                                  11080000
         AIF ('&MULTIHDR' NE 'YES').SBUIL03                             11090000
         MNOTE  12,'IHB323 ''SCELLCT''&IINVAL''&IMULTYES''.&NOTEXT'     11100000
&ERROR   SETA   12                                                      11110000
.*                                                                      11120000
.SBUIL03 ANOP                                                      @P5A 11130000
         AIF ('&IMAXCEL' EQ '').SBUIL04                                 11140000
         AIF ('&MULTIHDR' EQ 'YES').SBUIL04                             11150000
         MNOTE  12,'IHB323 ''MAXCELLS''&IINVAL''&IMULTNO''.&NOTEXT'     11160000
&ERROR   SETA   12                                                      11170000
.*                                                                      11180000
.SBUIL04 ANOP                                                      @P5A 11190000
         AIF ('&ICELPER' EQ '').SBUILD1                                 11200000
         AIF ('&MULTIHDR' EQ 'YES').SBUILD1                             11201000
         MNOTE  12,'IHB323 ''CELLSPERCPU''&IINVAL''&IMULTNO''.&NOTEXT'  11202000
&ERROR   SETA   12                                                      11203000
.*                                                                      11204000
.SBUILD1 ANOP                                                           11205000
.*                                                                      11205700
.*                                                                      11206000
.*       CELLSHARE CANNOT BE SPECIFIED WITH MULTIHDR=NO            @L6A 11207000
.*                                                                      11208000
         AIF ('&CELLSHARE' EQ '').SBUIL1X                          @L6A 11209000
         AIF ('&MULTIHDR' EQ 'YES').SBUIL1X                        @L6A 11210000
         AIF ('&CELLSHARE' EQ 'NO').SBUIL1X                        @L6A 11211000
         MNOTE  12,'IHB323 ''CELLSHARE''&IINVAL''&IMULTNO''.&NOTEXT'    11212000
.*                                                                 @L6A 11213000
&ERROR   SETA   12                                                 @L6A 11213100
.SBUIL1X ANOP                                                      @L6A 11213200
         AIF ('&IFREECELLS' EQ '').SBUIL05                         @L8A 11213300
         AIF ('&CONTRACTIBLE' EQ 'COND').SBUIL05                   @L8A 11213400
            MNOTE  12,'IHB323 ''FREECELLS''&IINVAL''&ICONTRACTIBLENO''.*11213500
                &NOTEXT.'                                          @L8A 11213600
&ERROR   SETA   12                                                 @L8A 11213700
.SBUIL05 ANOP                                                      @L8A 11213800
         AIF ('&IFREECELLSDIV' EQ '').SBUIL06                      @L8A 11213900
         AIF ('&CONTRACTIBLE' EQ 'COND').SBUIL06                   @L8A 11214000
         MNOTE 12,'IHB323 ''FREECELLSDIVISOR''&IINVAL''&ICONTRACTIBLENO*11214100
               ''.&NOTEXT.'                                        @L8A 11214200
&ERROR   SETA   12                                                 @L8A 11214300
.SBUIL06 ANOP                                                      @L8A 11214400
         AIF ('&ICONTINTVL' EQ '').SBUIL07                         @L8A 11214500
         AIF ('&CONTRACTIBLE' EQ 'COND').SBUIL07A                  @L8A 11214600
         MNOTE 12,'IHB323 ''CONTINTVL''&IINVAL''&ICONTRACTIBLENO''.&NOT*11214700
               EXT.'                                               @L8A 11214800
&ERROR   SETA   12                                                 @L8A 11214900
.SBUIL07A ANOP                                                     @L8A 11215000
         AIF ('&AUTOCONTRACT' NE 'NO').SBUIL07B                    @L8A 11215100
         MNOTE  12,'IHB323 ''CONTINTVL''&IINVAL''AUTOCONTRACT=NO''.&NOT*11215200
               EXT.'                                               @L8A 11215300
&ERROR   SETA   12                                                 @L8A 11215400
.SBUIL07B ANOP                                                     @L8A 11215500
.SBUIL07 ANOP                                                      @L8A 11215600
         AIF ('&FREECELLSPERCPU' EQ '').SBUIL08                    @L8A 11215700
         AIF ('&CONTRACTIBLE' EQ 'COND').SBUIL08                   @L8A 11215800
         MNOTE  12,'IHB323 ''FREECELLSPERCPU''&IINVAL''&ICONTRACTIBLENO*11215900
               ''.&NOTEXT.'                                        @L8A 11216000
&ERROR   SETA   12                                                 @L8A 11216100
.SBUIL08 ANOP                                                      @L8A 11216200
         AIF ('&AUTOCONTRACT' EQ '').SBUIL09                       @L8A 11216300
         AIF ('&CONTRACTIBLE' EQ 'COND').SBUIL09                   @L8A 11216400
         MNOTE  12,'IHB323 ''AUTOCONTRACT''&IINVAL''&ICONTRACTIBLENO''.*11216500
               &NOTEXT.'                                           @L8A 11216600
&ERROR   SETA   12                                                 @L8A 11216700
.SBUIL09 ANOP                                                      @L8A 11216800
         AIF ('&IMF' NE 'L').SBUILDX                                    11216900
.********************************************************************** 11217000
.*                                                                      11217100
.*       LIST FORM OF BUILD CANNOT HAVE CPID AND TCB SPECIFIED.         11217200
.*       ALSO HDR, PCELLCT, SCELLCT, CSIZE, SP, MAXCELLS, CELLSPERCPU   11217300
.*       AND CELL SPECIFIED AS REGISTERS.                          @L5A 11217400
.*                                                                      11217500
.********************************************************************** 11217600
         AIF ('&ICPID' EQ '').SBUILD2                                   11217700
         MNOTE  12,'IHB323 ''CPID''&IINVAL''BUILD MF=L''.&NOTEXT'       11217800
&ERROR   SETA   12                                                      11217900
.*                                                                      11218000
.SBUILD2 ANOP                                                           11219000
         AIF ('&IKEY' EQ '').SBUILD3            KEY NOT SPECIFIED       11220000
         AIF ('&IKEY'(1,1) NE '(').SBUILD3      KEY NOT A REGISTER      11230000
         MNOTE  12,'IHB351 ''KEY'' SPECIFIED AS A REGISTER IS INVALID.&+11240000
               NOTEXT'                                                  11250000
&ERROR   SETA   12                                                      11260000
.*                                                                      11270000
.SBUILD3 ANOP                                                           11280000
         AIF ('&ITCB' EQ '').SBUILD4            TCB NOT SPECIFIED       11290000
         MNOTE  12,'IHB323 ''TCB''&IINVAL''BUILD MF=L''.&NOTEXT'        11300000
&ERROR   SETA   12                                                      11310000
.*                                                                      11320000
.SBUILD4 ANOP                                                           11330000
         AIF ('&IHDR' EQ '').SBUILD5            HDR NOT SPECIFIED       11340000
         AIF ('&IHDR'(1,1) EQ '''').SBUILD5     HDR A CHAR STRING       11350000
         MNOTE  12,'IHB351 ''HDR'' NOT SPECIFIED AS A CHARACTER STRING +11360000
               IS INVALID.&NOTEXT'                                      11370000
&ERROR   SETA   12                                                      11380000
.*                                                                      11390000
.SBUILD5 ANOP                                                           11400000
         AIF ('&IPCELL' EQ '').SBUILD6          PCELL NOT SPECIFIED     11410000
         AIF ('&IPCELL'(1,1) NE '(').SBUILD6    PCELL NOT A REGISTER    11420000
         MNOTE  12,'IHB351 ''PCELLCT'' SPECIFIED AS A REGISTER IS INVAL+11430000
               ID.&NOTEXT'                                              11440000
&ERROR   SETA   12                                                      11450000
.*                                                                      11460000
.SBUILD6 ANOP                                                           11470000
         AIF ('&ISCELL' EQ '').SBUILD7          SCELL NOT SPECIFIED     11480000
         AIF ('&ISCELL'(1,1) NE '(').SBUILD7    SCELL NOT A REGISTER    11490000
         MNOTE  12,'IHB351 ''SCELLCT'' SPECIFIED AS A REGISTER IS INVAL+11500000
               ID.&NOTEXT'                                              11510000
&ERROR   SETA   12                                                      11520000
.*                                                                      11530000
.SBUILD7 ANOP                                                           11540000
         AIF ('&ICSIZE' EQ '').SBUILD8          CSIZE NOT SPECIFIED     11550000
         AIF ('&ICSIZE'(1,1) NE '(').SBUILD8    CSIZE NOT A REGISTER    11560000
         MNOTE  12,'IHB351 ''CSIZE'' SPECIFIED AS A REGISTER IS INVALID+11570000
               .&NOTEXT'                                                11580000
&ERROR   SETA   12                                                      11590000
.*                                                                      11600000
.SBUILD8 ANOP                                                           11610000
         AIF ('&IMAXCEL' EQ '').SBUILD9         MAXCELLS NOT SPECIFIED  11620000
         AIF ('&IMAXCEL'(1,1) NE '(').SBUILD9   MAXCELLS NOT A REGISTER 11630000
         MNOTE  12,'IHB351 ''MAXCELLS'' SPECIFIED AS A REGISTER IS INVA+11640000
               LID.&NOTEXT'                                             11650000
&ERROR   SETA   12                                                      11660000
.*                                                                 @L5A 11670000
.SBUILD9 ANOP                                                           11680000
         AIF ('&ICELPER' EQ '').SBUIL10  CELLSPERCPU NOT SPECIFIED @L5A 11690000
         AIF ('&ICELPER'(1,1) NE '(').SBUIL10  CELLSPERCPU NOT REG @L5A 11700000
         MNOTE  12,'IHB351 ''CELLSPERCPU'' SPECIFIED AS A REGISTER IS I+11710000
               NVALID.&NOTEXT'                                          11720000
&ERROR   SETA   12                                                      11730000
.*                                                                 @L5A 11740000
.SBUIL10 ANOP                                                      @L5A 11750000
         AIF ('&IFREECELLS' EQ '').SBUIL11      FREECELLS NOT SPECIFIED*11751000
                                                                   @L8A 11751100
         AIF ('&IFREECELLS'(1,1) NE '(').SBUIL11 FREECELLS NOT A REG   *11752000
                                                                   @L8A 11752100
        MNOTE  12,'IHB351 ''FREECELLS'' SPECIFIED AS A REGISTER IS INVA+11753000
               LID.&NOTEXT'                                        @L8A 11754000
&ERROR   SETA   12                                                 @L8A 11755000
.SBUIL11 ANOP                                                      @L8A 11755100
         AIF ('&IFREECELLSDIV' EQ '').SBUIL12   FREECELLS divisor not  *11755200
                                        specified                  @L8A 11755300
         AIF ('&IFREECELLSDIV'(1,1) NE '(').SBUIL12 FREECELLS divisor  *11755400
                                        not a reg                  @L8A 11755500
        MNOTE  12,'IHB351 ''FREECELLSDIVISOR'' SPECIFIED AS A REGISTER +11755600
               IS INVALID.&NOTEXT'                                 @L8A 11755700
&ERROR   SETA   12                                                 @L8A 11755800
.SBUIL12 ANOP                                                      @L8A 11755900
         AIF ('&ICONTINTVL' EQ '').SBUIL13      CONTINTVL not          *11756000
                                        specified                  @L8A 11756100
         AIF ('&ICONTINTVL'(1,1) NE '(').SBUIL13 CONTINTVL             *11756200
                                        not a reg                  @L8A 11756300
        MNOTE  12,'IHB351 ''CONTINTVL'' SPECIFIED AS A REGISTER IS INVA+11756400
               LID.&NOTEXT'                                        @L8A 11756500
&ERROR   SETA   12                                                 @L8A 11756600
.SBUIL13 ANOP                                                      @L8A 11756700
.*                                                                 @L5A 11757000
         AIF ('&ISP' EQ '').SBUILDB             SP NOT SPECIFIED        11760000
         AIF ('&ISP'(1,1) NE '(').SBUILDB       SP NOT A REGISTER       11770000
         MNOTE  12,'IHB351 ''SP'' SPECIFIED AS A REGISTER IS INVALID,&N+11780000
               OTEXT'                                                   11790000
&ERROR   SETA   12                                                      11800000
         AGO    .SBUILDB                                                11810000
.*                                                                      11820000
.SBUILDX ANOP                                                           11830000
         AIF ('&IMF' NE '').SBUILDB                                     11840000
.********************************************************************** 11850000
.*                                                                      11860000
.*       BUILD IN THE STANDARD FORM IS SPECIFIED.  CSIZE                11870000
.*       MUST BE SPECIFIED AND PCELLCT MUST BE SPECIFED IF MULTIHDR=YES 11880000
.*       IS NOT SPECIFIED.                                         @L5A 11890000
.*                                                                      11900000
.********************************************************************** 11910000
         AIF ('&IPCELL' NE '').SBUILDY                                  11920000
         AIF ('&MULTIHDR(1)' EQ '').SBUILDZ                        @L5A 11930000
         AIF ('&MULTIHDR(1)' EQ 'YES').SBUILDY                     @L5A 11940000
.SBUILDZ ANOP                                                      @L5A 11950000
         MNOTE  12,'IHB313 ''PCELLCT''&NOTSUP.&NOTEXT'                  11960000
&ERROR   SETA   12                                                      11970000
.SBUILDY ANOP                                                           11980000
         AIF ('&ICSIZE' NE '').SBUILDB                                  11990000
         MNOTE  12,'IHB313 ''CSIZE''&NOTSUP.&NOTEXT'                    12000000
&ERROR   SETA   12                                                      12010000
.*                                                                      12020000
.SBUILDB ANOP                                                           12030000
.********************************************************************** 12041000
.*                                                                      12050000
.*       IF NO ERRORS WERE ENCOUNTERED SO FAR, BUILD UP THE BIT         12060000
.*       INDICATORS NEEDED FOR BUILD.                                   12070000
.*                                                                      12080000
.********************************************************************** 12090000
         AIF (&ERROR  NE  0 ).SEMEND                                    12100000
.********************************************************************** 12110000
.*       BUILD UP THE BIT INDICATORS                                    12120000
.********************************************************************** 12130000
&IBFLAG  SETC   ''''.'&IBANY'.'&IBLOC'.'&IBTCB'.'&IBKEY'.'&IBHDR'.'&IBO+12140000
               WN'.''''                                            @L2A 12150000
&IBFLAGA SETC   '''&IB64.&IBBNDRY.&IBPRESERVE.&IBMULTIHDR.&IBSHARE.&IBP+12160000
               GFMSZ.&IBCONTRACTIBLE.&IBPLISTVER'''                @L8C 12161000
&IBFLAG2 SETC   ''''.'&IBANY'.'&IBLOC'.'&IBTCB'.'&IBKEY'.'&IBHDR'.'&IBO+12180000
               WN'.'&IB64.&IBBNDRY.&IBPRESERVE.&IBMULTIHDR.&IBSHARE.&IB+12190000
               PGFMSZ.&IBCONTRACTIBLE.&IBPLISTVER'''               @L8C 12191000
&IBPLV1FlagsOn SETC '''&IBFREECELLSPERCPUSTANDARD.&IBFREECELLSPERCPUZCB+12192000
               P.&IBFREECELLSPERCPUZIIP.&IBAUTOCONTRACTNO.0000'''  @L9C 12193000
&IBPLV1FlagsOff SETC '''00000000'''                                @L8A 12194000
.SEMEND  ANOP                                                           12210000
.********************************************************************** 12220000
.GENTEXT ANOP                                                           12230000
.********************************************************************** 12240000
.*       GENERATE ASSEMBLER CODE                                        12250000
.********************************************************************** 12260000
         AIF (&ERROR EQ 0).GEN1                                         12270000
         MEXIT                                                          12280000
.GEN1    ANOP                                                           12290000
         AIF ('&INAME' EQ '').GEN1A        NO LABEL TO BE GENERATED     12300000
&INAME   DS     0H                                                      12310000
.GEN1A   ANOP                                                           12320000
         AIF ('&IFUNC' EQ 'BUILD').GBUILD  IS THIS THE BUILD FUNCTION   12330000
.********************************************************************** 12340000
.*                                                                      12350000
.*       NOT THE BUILD FUNCTION, I.E., GET, DELETE, FREE, CONTRACT      12360000
.*                                                                      12370000
.********************************************************************** 12380000
         AIF ('&IFUNC' EQ 'DELETE' AND '&ILINK' NE 'BRANCH').GEN2       12390000
       AIF ('&IFUNC' EQ 'CONTRACT' AND '&ILINK' NE 'BRANCH').GEN2  @L8A 12391000
         AIF ('&IREGS' EQ 'USE').GGDF   REGISTERS ARE TO BE USED        12400000
.********************************************************************** 12410000
.*       SAVE THE REGISTERS PRIOR TO USE                                12420000
.********************************************************************** 12430000
.GEN2    ANOP                                                           12440000
         AIF ('&IFUNC' EQ 'CONTRACT').GGDF ?? Contract??           @L8A 12450000
         AIF ('&IFUNC' NE 'DELETE').GEN3 NOT THE DELETE LINKAGE(SYSTEM) 12451000
         AIF  (&SYSOSREL GE &SYSOSREL_ZOSV1R6).ITISR6A             @L4A 12460000
         ESAR   15                .SAVE SECONDARY ASN                   12470000
         STM    15,12,16(13)      .SAVE REGISTERS                       12480000
.ITISR6A ANOP                                                      @L4A 12490000
         AGO    .GGDF                                                   12500000
.GEN3    ANOP                                                           12510000
         STM    15,12,16(13)      .SAVE REGISTERS                       12520000
.GGDF    ANOP                      ASSIGN CELL POOL ADDRESS TO REG 1    12530000
.********************************************************************** 12540000
.*                                                                      12550000
.*     CPID CAN EITHER BE A RX-TYPE ADDRESS CONTAINING THE CELL POOL    12560000
.*     ID, OR A REGISTER CONTAINING THE CELL POOL ID                    12570000
.*                                                                      12580000
.********************************************************************** 12590000
         AIF ('&ICPID'(1,1) EQ '(').GGDF1 REGISTER SPECIFICATION        12600000
         L      1,&ICPID          .CELL POOL ID                         12610000
         AGO    .GGDF2             CONTINUE PROCESSING                  12620000
.GGDF1   ANOP                      CELL POOL ADDRESS IS IN A REGISTER   12630000
&ICPID   SETC   '&ICPID'(2,K'&ICPID-2)  STRIP PARENS                    12640000
         AIF ('&ICPID' EQ '1').GGDF2 REGISTER SPECIFICATION IS 1        12650000
         LR     1,&ICPID          .CELL POOL ID                         12660000
.*                                                                      12670000
.GGDF2   ANOP                                                           12680000
         AIF ('&IFUNC' EQ 'CONTRACT').GCONTRACT                    @L8A 12690000
         AIF ('&IFUNC' EQ 'DELETE').GDELETE THE DELETE FUNCTION         12691000
         AIF ('&IFUNC' EQ 'FREE').GFREE     THE FREE FUNCTION           12700000
.GET     ANOP                               THE GET FUNCTION            12710000
.********************************************************************** 12720000
.*                                                                      12730000
.*       GET FUNCTION WAS SPECIFIED                                     12740000
.*                                                                      12750000
.********************************************************************** 12760000
         AIF ('&IUC' EQ 'U').GGET1     A UNCONDITIONAL REQUEST          12770000
.********************************************************************** 12780000
.*       GET CONDTIONAL FUNCTION WAS SPECIFIED                          12790000
.*       ADDRESS IS IN CVTCPGTC                                         12800000
.********************************************************************** 12810000
         &L     15,16(0,0)        .ADDRESS OF CVT POINTER FIELD         12820000
         AIF ('&MULTIHDR' EQ 'YES').GGETM   GET MULTIHDR=YES COND  @L5A 12830000
         AIF ('&MULTIHDR' EQ 'COND').GGETMC GET MULTIHDR=COND      @L8A 12831000
         L      15,1132(0,15)     .ADDRESS OF GET CONDITIONAL ROUTINE   12840000
         AGO    .GGETA                                             @L5A 12850000
.GGETM   ANOP                                                      @L5A 12860000
       AIF ('&CONTRACTIBLE' EQ 'COND').GGETC GET CONTRACTIBLE COND @L8A 12861000
**********************************************************************  12870000
.*       GET MULTIHDR=YES CONDITIONAL FUNCTION WAS SPECIFIED            12880000
.*       ADDRESS IS IN ECVTCPGCM (IGVCPGCM)                        @L5A 12890000
.********************************************************************** 12900000
         L      15,140(0,15)      .ADDRESS OF ECVT                 @L5A 12910000
         L      15,780(0,15)      .ADDRESS OF GET MULTIHDR COND    @L5A 12920000
         AGO    .GGETA                                             @L8A 12921000
.GGETC   ANOP                                                      @L8A 12922000
**********************************************************************  12923000
.*       GET CONTRACTIBLE=COND CONDITIONAL FUNCTION WAS SPECIFIED       12924000
.*       ADDRESS IS IN ECVTCPGCC (IGVCPGCC)                        @L8A 12925000
.********************************************************************** 12926000
         L      15,140(0,15)      .ADDRESS OF ECVT                 @L8A 12927000
         L      15,X'3A8'(0,15)   .GET CONTRACTIBLE COND           @L8A 12928000
         AGO    .GGETA                                             @L8A 12929000
.GGETMC ANOP                                                       @L8A 12929100
         TM     X'240'(0),X'04'   .PSATXC within PSAFLAGS          @L8A 12929200
         JZ     TX_&SYSNDX.A                                       @L8A 12929300
         AIF  (&SYSOSREL GE &SYSOSREL_ZOSV2R2).ITISV2R2A           @L8A 12929400
         TM     X'4F6'(15),x'40'  .CVTZOS_V2R2 in CVTOSLV6         @L8A 12929500
         JZ     TX_&SYSNDX.A                                       @L8A 12929600
.ITISV2R2A ANOP                                                    @L8A 12929700
.********************************************************************** 12929800
.*       TX available, CONTRACTIBLE=COND applies                   @L8A 12929900
.*       ADDRESS IS IN ECVTCPFRM (IGVCPFRM)                        @L8A 12930000
.********************************************************************** 12930100
         L      15,140(0,15)      .ADDRESS OF ECVT                 @L8A 12930200
         L      15,X'3A8'(0,15)   .GET CONTRACTIBLE COND           @L8A 12930300
         J      TX_&SYSNDX.B                                       @L8A 12930400
TX_&SYSNDX.A DS 0H                                                 @L8A 12930500
         L      15,1132(0,15)     .ADDRESS OF GET CONDITIONAL      @L8A 12930600
TX_&SYSNDX.B DS 0H                                                 @L8A 12930700
.GGETA   ANOP                                                      @L8A 12931000
         &BASR  14,15             .GET CONDITIONAL REQUEST IGVCPGTC@L4A 12940000
         AGO    .GGET3                                                  12950000
.GGET1   ANOP                                                           12960000
.********************************************************************** 12970000
.*       GET UNCONDTIONAL FUNCTION WAS SPECIFIED                        12980000
.*       TEST IS SYSTEM LINKAGE IS TO BE USED                           12990000
.********************************************************************** 13000000
         AIF ('&ILINK' EQ 'SYSTEM' OR '&ILINK' EQ '').GGET2             13010000
.********************************************************************** 13020000
.*       GET UNCONDITIONAL FUNCTION USING BRANCH LINKAGE                13030000
.*       ADDRESS IS IN CVTCPGUB                                         13040000
.********************************************************************** 13050000
         &L     15,16(0,0)        .ADDRESS OF CVT POINTER FIELD    @L4A 13060000
         L      15,1124(0,15)     .ADDRESS OF GET UNCOND ROUTINE        13070000
         &BASR  14,15             .GET UNCOND REQUEST IGVCPGUB     @L4C 13080000
         AGO    .GGET3                                                  13090000
.*                                                                      13100000
.GGET2   ANOP                                                           13110000
.********************************************************************** 13120000
.*       GET UNCONDTIONAL FUNCTION WITH SYSTEM LINKAGE                  13130000
.*       ADDRESS IS IN CVTCPGUP                                         13140000
.********************************************************************** 13150000
         &L     15,16(0,0)        .ADDRESS OF CVT POINTER FIELD3   @L4C 13160000
         AIF ('&MULTIHDR' EQ 'YES').GGET2M  GET MULTIHDR=YES UNCON @L5A 13170000
         AIF ('&MULTIHDR' EQ 'COND').GGET2MC GET MULTIHDR=COND     @L8A 13171000
         AIF ('&IREGS' EQ 'USE').GGET2A                                 13180000
         L      15,1172(0,15)     .ADDRESS OF GET UNCOND ROUTINE        13190000
         AGO    .GGET2B                                                 13200000
.GGET2M  ANOP                                                      @L5A 13201000
      AIF ('&CONTRACTIBLE' EQ 'COND').GGET2C GET CONTRACTIBLE COND @L8A 13202000
.********************************************************************** 13210000
.*       GET MULTIHDR=YES UNCONDITIONAL FUNCTION WAS SPECIFIED          13220000
.*       ADDRESS IS IN ECVTCPGUM (IGVCPGUM)                        @L5A 13230000
.********************************************************************** 13240000
         L      15,140(0,15)      .ADDRESS OF ECVT                 @L5A 13260000
         L      15,772(0,15)      .ADDRESS OF GET MULTIHDR UNCOND  @L5A 13270000
         AGO    .GGET2B                                                 13280000
.GGET2C  ANOP                                                      @L8A 13282000
.********************************************************************** 13282100
.*       GET CONTRACTIBLE=COND UNCONDITIONAL FUNCTION WAS SPECIFIED     13282200
.*       ADDRESS IS IN ECVTCPGUC (IGVCPGUC)                        @L8A 13282300
.********************************************************************** 13282400
         L      15,140(0,15)      .ADDRESS OF ECVT                 @L5A 13282500
         L      15,X'3A0'(0,15)   .ADDRESS OF GET MULTIHDR UNCOND  @L8A 13282600
         AGO    .GGET2B                                            @L8A 13283000
.GGET2A  ANOP                                                           13290000
         L      15,1128(0,15)     .ADDRESS OF GET UNCOND ROUTINE        13300000
         AGO    .GGET2B                                            @L8A 13301000
.GGET2MC ANOP                                                      @L8A 13302000
         TM     X'240'(0),X'04'   .PSATXC within PSAFLAGS          @L8A 13303000
         JZ     TX_&SYSNDX.A                                       @L8A 13304000
         AIF  (&SYSOSREL GE &SYSOSREL_ZOSV2R2).ITISV2R2B           @L8A 13304100
         TM     X'4F6'(15),x'40'  .CVTZOS_V2R2 in CVTOSLV6         @L8A 13304200
         JZ     TX_&SYSNDX.A                                       @L8A 13304300
.ITISV2R2B ANOP                                                    @L8A 13304400
.********************************************************************** 13305000
.*       TX available, CONTRACTIBLE=COND applies                   @L8A 13306000
.*       ADDRESS IS IN ECVTCPFRM (IGVCPFRM)                        @L8A 13307000
.********************************************************************** 13308000
         L      15,140(0,15)      .ADDRESS OF ECVT                 @L8A 13309000
         L      15,X'3A0'(0,15)   .ADDRESS OF GET CONTRACTIBLE     @L8A 13309100
         J      TX_&SYSNDX.B                                       @L8A 13309200
TX_&SYSNDX.A DS 0H                                                 @L8A 13309300
         AIF ('&IREGS' EQ 'USE').GGET2MCA                          @L8A 13309400
         L      15,1172(0,15)     .ADDRESS OF GET UNCOND ROUTINE   @L8A 13309500
         AGO    .GGET2MCB                                          @L8A 13309600
.GGET2MCA ANOP                                                     @L8A 13309700
         L      15,1128(0,15)     .ADDRESS OF GET UNCOND ROUTINE   @L8A 13309800
.GGET2MCB ANOP                                                     @L8A 13309900
TX_&SYSNDX.B DS 0H                                                 @L8A 13310000
.GGET2B  ANOP                                                           13311000
         &BASR  14,15             .GET UNCOND REQUEST IGVCPGUP     @L4A 13320000
.GGET3   ANOP                                                           13330000
         AIF ('&IREGS' EQ 'USE').GGET4   REGISTERS ARE TO BE USED       13340000
.********************************************************************** 13350000
.*       RESTORE THE REGISTERS                                          13360000
.********************************************************************** 13370000
         AIF ('&IREGS' EQ 'USE').GGET4   REGISTERS ARE TO BE USED       13380000
         LM     2,12,28(13)       .RESTORE REGISTERS                    13390000
.********************************************************************** 13400000
.* SAVE CELL ADDRESS IF NECESSARY, CELL MUST HAVE BEEN SPECIFIED        13410000
.* AS A REGISTER.                                                       13420000
.********************************************************************** 13430000
.GGET4   ANOP                                                           13440000
         AIF ('&ICELL' EQ '').GGET6  DO NOT SAVE CELL ADDRESS           13450000
         AIF ('&ICELL'(1,1) NE '(').GGET5   NOT A REGISTER              13460000
&ICELL   SETC   '&ICELL'(2,K'&ICELL-2)  STRIP PARENS                    13470000
         AIF ('&ICELL' EQ '1').GGET6  PUT VALUE IN REGISTER 1           13480000
         LR     &ICELL,1          .SAVE ADDRESS OF CELL OBTAINED        13490000
.GGET6   ANOP                                                           13500000
         MEXIT                     DONE WITH PROCESSING                 13510000
.GGET5   ANOP                                                           13520000
         ST     1,&ICELL          .SAVE ADDRESS OF CELL OBTAINED        13530000
         MEXIT                     DONE WITH PROCESSING                 13540000
.*                                                                      13550000
.GFREE   ANOP FREE FUNCTION                                             13560000
.********************************************************************** 13570000
.*                                                                      13580000
.* FREE FUNCTION - SET UP IN REGISTER 1 THE ADDRESS OF THE CELL TO      13590000
.* BE FREED AND THEN CALL THE FREE ROUTINE.                             13600000
.* ADDRESS IS IN CVTCPFRE                                               13610000
.*                                                                      13620000
.********************************************************************** 13630000
         AIF ('&ICELL'(1,1) EQ '(').GFREE1 REGISTER SPECIFICATION       13640000
         L      0,&ICELL          .ADDRESS OF CELL TO BE FREED          13650000
         AGO    .GFREE2            CONTINUE PROCESSING                  13660000
.*                                                                      13670000
.GFREE1  ANOP                       CELL ADDRESS IS IN A REGISTER       13680000
&ICELL   SETC   '&ICELL'(2,K'&ICELL-2)  STRIP PARENS                    13690000
         AIF ('&ICELL' EQ '0').GFREE2 REG SPECIFICATION IS 0            13700000
         LR     0,&ICELL          .ADDRESS OF CELL TO BE FREED          13710000
.*                                                                      13720000
.GFREE2  ANOP                      CALL THE FREE ROUTINE                13730000
         &L     15,16(0,0)        .ADDRESS OF CVT POINTER FIELD    @L4C 13740000
         AIF ('&MULTIHDR' EQ 'YES').GFREE2M  FREE MULTIHDR         @L5A 13750000
         AIF ('&MULTIHDR' EQ 'COND').GFREE2MC FREE MULTIHDR=COND   @L8A 13751000
         L      15,1136(0,15)     .ADDRESS OF IGVCPFRE             @L5A 13760000
         AGO    .GFREE2A          GOTO CALL OF FREE ROUTINE        @L5A 13770000
.GFREE2M ANOP                      CALL THE FREE MULTIHDR ROUTINE  @L5A 13771000
       AIF ('&CONTRACTIBLE' EQ 'COND').GFREE2C FREE CONTRACTIBLE   @L8A 13772000
.********************************************************************** 13780000
.*       FREE MULTIHDR=YES FUNCTION WAS SPECIFIED                       13790000
.*       ADDRESS IS IN ECVTCPFRM (IGVCPFRM)                        @L5A 13800000
.********************************************************************** 13810000
         L      15,140(0,15)      .ADDRESS OF ECVT                 @L5A 13830000
         L      15,776(0,15)      .ADDRESS OF FREE MULTIHDR        @L5A 13840000
         AGO    .GFREE2A                                           @L8A 13841000
.GFREE2C ANOP                      CALL FREE CONTRACTIBLE ROUTINE  @L8A 13842000
.********************************************************************** 13843000
.*       FREE CONTRACTIBLE=COND FUNCTION WAS SPECIFIED                  13844000
.*       ADDRESS IS IN ECVTCPFRM (IGVCPFRM)                        @L8A 13845000
.********************************************************************** 13846000
         L      15,140(0,15)      .ADDRESS OF ECVT                 @L8A 13847000
         L      15,X'3A4'(0,15)   .ADDRESS OF FREE CONTRACTIBLE    @L8A 13848000
         AGO    .GFREE2A                                           @L8A 13849000
.GFREE2MC ANOP                                                     @L8A 13850000
         TM     X'240'(0),X'04'   .PSATXC within PSAFLAGS          @L8A 13850100
         JZ     TX_&SYSNDX.A                                       @L8A 13850200
         AIF  (&SYSOSREL GE &SYSOSREL_ZOSV2R2).ITISV2R2C           @L8A 13850300
         TM     X'4F6'(15),x'40'  .CVTZOS_V2R2 in CVTOSLV6         @L8A 13850400
         JZ     TX_&SYSNDX.A                                       @L8A 13850500
.ITISV2R2C ANOP                                                    @L8A 13850600
.********************************************************************** 13850700
.*       TX available, CONTRACTIBLE=COND applies                   @L8A 13850800
.*       ADDRESS IS IN ECVTCPFRM (IGVCPFRM)                        @L8A 13850900
.********************************************************************** 13851000
         L      15,140(0,15)      .ADDRESS OF ECVT                 @L8A 13851100
         L      15,X'3A4'(0,15)   .ADDRESS OF FREE CONTRACTIBLE    @L8A 13851200
         J      TX_&SYSNDX.B                                       @L8A 13851300
TX_&SYSNDX.A DS 0H                                                 @L8A 13851400
         L      15,1136(0,15)     .ADDRESS OF IGVCPFRE             @L8A 13851500
TX_&SYSNDX.B DS 0H                                                 @L8A 13851600
.GFREE2A ANOP                                                      @L5A 13852000
         &BASR  14,15             .FREE REQUEST                    @L4C 13860000
         AGO    .DONE                                                   13870000
.********************************************************************** 13880000
.*                                                                      13890000
.* DELETE FUNCTION                                                      13900000
.*                                                                      13910000
.********************************************************************** 13920000
.GDELETE ANOP              DELETE FUNCTION                              13930000
         AIF ('&ILINK' NE 'BRANCH').GDEL1     SYSTEM LINKAGE            13940000
.********************************************************************** 13950000
.*       DELETE FUNCTION WITH BRANCH LINKAGE                            13960000
.*       ADDRESS IS IN CVTCPDLB                                         13970000
.********************************************************************** 13980000
         &L     15,16(0,0)        .ADDRESS OF CVT POINTER FIELD    @L4C 13990000
         L      15,1156(0,15)     .ADDRESS OF DELETE ROUTINE            14000000
         &BASR  14,15             .DELETE REQUEST IGVCPDLB         @L4C 14010000
.DONE    ANOP                                                           14020000
         AIF ('&IREGS' EQ 'USE').GDONE   REGISTERS ARE TO BE USED       14030000
.********************************************************************** 14040000
.*       RESTORE THE REGISTERS                                          14050000
.********************************************************************** 14060000
         LM     2,12,28(13)        .RESTORE REGISTERS                   14070000
.GDONE   ANOP                                                           14080000
         MEXIT                     MACRO IS COMPLETE                    14090000
.*                                                                      14100000
.GDEL1   ANOP              DELETE SYSTEM LINKAGE                        14110000
.********************************************************************** 14120000
.*       DELETE FUNCTION WITH SYSTEM LINKAGE                            14130000
.********************************************************************** 14140000
      AIF       ('&SYSAM64' NE 'YES').AM642                        @L4A 14150000
      MNOTE 8,'CPOOL ---> DELETE IS NOT VALID IN AMODE 64'         @L4A 14160000
.AM642   ANOP                                                      @L4A 14170000
         L      15,16(0,0)        .CVT ADDRESS                          14180000
         L      15,772(,15)       .ADDRESS SYSTEM LINKAGE TABLE         14190000
         L      15,84(,15)        .OBTAIN PC NUMBER                     14200000
         PC     0(15)             .PC TO IGVCPDLP                       14210000
         AIF  (&SYSOSREL GE &SYSOSREL_ZOSV1R6).ITISR6B             @L4A 14220000
         L      2,16(0,13)        .RESTORE SECONDARY ASN                14230000
         SSAR   2                 .RESTORE SECONDARY ASN                14240000
         LM     2,12,28(13)       .RESTORE REGISTERS                    14250000
.ITISR6B ANOP                                                      @L4A 14260000
         MEXIT                     MACRO IS COMPLETE                    14270000
.********************************************************************** 14271000
.*                                                                      14272000
.* CONTRACT FUNCTION                                               @L8A 14273000
.*                                                                      14274000
.********************************************************************** 14275000
.GCONTRACT ANOP            CONTRACT FUNCTION                       @L8A 14276000
         AIF ('&IFREECELLS'(1,1) EQ '(').GCONTRACTFCC Register     @L8A 14276100
         AIF ('&IFREECELLS' EQ 'CPOOL_BUILD').GCONTRACTFCD         @L8A 14276200
         AIF (T'&IFREECELLS NE 'N').GCONTRACTFCB NOT A NUMBER      @L8A 14276300
         AIF (&IFREECELLS GT 32767).GCONTRACTFCA > 32767           @L8A 14276400
.*                                 Small number                         14276500
         LHI    0,&IFREECELLS     .Target free cells               @L8A 14276600
         AGO    .GCONTR2           CONTINUE PROCESSING             @L8A 14276700
.GCONTRACTFCA ANOP                 Big number                      @L8A 14277100
         L      0,=A(&IFREECELLS) .Target free cells               @L8A 14277200
         AGO    .GCONTR2           CONTINUE PROCESSING             @L8A 14277300
.GCONTRACTFCB ANOP                 Not a number                    @L8A 14277400
         L      0,&IFREECELLS     .Target free cells               @L8A 14277500
         AGO    .GCONTR2           CONTINUE PROCESSING             @L8A 14277600
.GCONTRACTFCC ANOP                 A register                      @L8A 14278000
&IFREECELLS SETC '&IFREECELLS'(2,K'&IFREECELLS-2) STRIP PARENS     @L8A 14278200
         AIF ('&IFREECELLS' EQ '0').GCONTR2 REG SPECIFICATION IS 0 @L8A 14278300
         LR     0,&IFREECELLS     .Target free cells               @L8A 14278400
         AGO    .GCONTR2           CONTINUE PROCESSING             @L8A 14278500
.GCONTRACTFCD ANOP                                                 @L8A 14278600
         LHI    0,-1               Use CPOOL BUILD data            @L8A 14278700
.GCONTR2 ANOP                      Call the CONTRACT function      @L8A 14279000
      AIF       ('&SYSAM64' NE 'YES').AM64C2                       @L8A 14280900
      MNOTE 8,'CPOOL ---> CONTRACT IS NOT VALID IN AMODE 64'       @L8A 14281000
.AM64C2  ANOP                                                      @L8A 14281100
         L      15,16(0,0)        .CVT address                     @L8A 14281200
         L      15,772(,15)       .System Function Table           @L8A 14281300
         L      15,628(,15)       .Obtain PC number                @L8A 14281400
         PC     0(15)             .PC to CONTRACT routine          @L8A 14281500
         MEXIT                     MACRO IS COMPLETE               @L8A 14282100
.********************************************************************** 14283000
.*                                                                      14290000
.GBUILD  ANOP         ******BUILD FUNCTION ******                       14300000
.*                                                                      14310000
.********************************************************************** 14320000
         AIF ('&IMF' EQ 'E').GEXEC       EXECUTE FORM OF BUILD          14330000
         AIF ('&IMF' EQ 'L').GBDCL       LIST FORM OF BUILD             14340000
.GBSTD   ANOP                      STANDARD FORM OF BUILD               14350000
.********************************************************************** 14360000
.*                                                                      14370000
.*       STANDARD FORM OF BUILD- DECLARE, INITIALIZE AND INVOKE         14380000
.*                                                                      14390000
.********************************************************************** 14400000
.GBSTD1  ANOP                                                           14410000
         BAS    1,CPOOL_BUILD_&SYSNDX  Branch around parm list     @P9C 14420000
.GBDCL   ANOP                      LIST FORM OF BUILD                   14430000
.********************************************************************** 14440000
.*       LIST FORM OF BUILD - BUILD THE DECLARE                         14450000
.*       AND STANDARD FORM OF THE DECLARE                               14460000
.********************************************************************** 14470000
         AIF ('&IPCELL' EQ '').GBLISTA   PRIMARY CELL CT NOT SPECIFIED  14480000
         AIF ('&IPCELL'(1,1) NE '(').GBLIST1 NOT A REGISTER             14490000
.GBLISTA ANOP                                                           14500000
         AIF ('&MULTIHDR' EQ 'YES').GBLISTM MULTIHDR=YES, TRY MAXCELLS  14510000
         DC     AL4(0)            .PRIMARY CELL COUNT                   14520000
         AGO    .GBLISTB                                                14530000
.GBLISTM ANOP                                                           14540000
         AIF ('&IMAXCEL' EQ '').GBLISTN  MAXCELLS NOT SPECIFIED         14550000
         AIF ('&IMAXCEL'(1,1) EQ '(').GBLISTN a reg                @P8A 14551000
         DC     AL4(&IMAXCEL)     .MAXCELLS VALUE                       14560000
         AGO    .GBLISTB                                                14570000
.GBLISTN ANOP                                                           14580000
         DC     AL4(0)            .ZERO MAXCELLS VALUE             @L5A 14590000
         AGO    .GBLISTB                                                14600000
.GBLIST1 ANOP                                                           14610000
         DC     AL4(&IPCELL)      .PRIMARY CELL COUNT                   14620000
.*                                                                      14630000
.GBLISTB ANOP                                                           14640000
         AIF ('&ISCELL' EQ '').GBLISTC  SECONDARY CELL CT NOT SPECIFIED 14650000
         AIF ('&ISCELL'(1,1) NE '(').GBLIST2 NOT A REGISTER             14660000
.GBLISTC ANOP                                                           14670000
         AIF ('&MULTIHDR' EQ 'YES').GBLISTP MULTIHDR=YES, TRY CELLSPER  14680000
         DC     AL4(0)            .SECONDARY CELL COUNT                 14690000
         AGO    .GBLISTD                                                14700000
.GBLISTP ANOP                                                           14710000
         AIF ('&ICELPER' EQ '').GBLISTQ  CELLSPERCPU NOT SPECIFIED      14720000
         AIF ('&ICELPER'(1,1) EQ '(').GBLISTQ a reg                @P8A 14721000
         DC     AL4(&ICELPER)     .CELLSPERCPU VALUE                    14730000
         AGO    .GBLISTD                                                14740000
.GBLISTQ ANOP                                                           14750000
         DC     AL4(0)            .ZERO CELLSPERCPU VALUE          @L5A 14760000
         AGO    .GBLISTD                                                14770000
.GBLIST2 ANOP                                                           14771000
         DC     AL4(&ISCELL)      .SECONDARY CELL COUNT                 14772000
.*                                                                      14773000
.GBLISTD ANOP                                                           14774000
         AIF ('&ICSIZE' EQ '').GBLISTZ   CELL SIZE NOT SPECIFIED        14775000
         AIF ('&ICSIZE'(1,1) NE '(').GBLIST3     NOT A REGISTER         14776000
.GBLISTZ ANOP                                                           14777000
         DC     AL4(0)            .CELL SIZE                            14778000
         AGO    .GBLISTE                                                14779000
.GBLIST3 ANOP                                                           14780000
         DC     AL4(&ICSIZE)      .CELL SIZE                            14790000
.*                                                                      14800000
.GBLISTE ANOP                                                           14810000
         AIF ('&ISP' EQ '').GBLISTF   SUBPOOL NOTSPECIFIED              14820000
         AIF ('&ISP'(1,1) NE '(').GBLIST4     NOT A REGISTER            14830000
.GBLISTF ANOP                                                           14840000
         DC     AL1(0)            .SUBPOOL ID                           14850000
         AGO   .GBLISTG                                                 14860000
.GBLIST4 ANOP                                                           14870000
         DC     AL1(&ISP)         .SUBPOOL ID                           14880000
.*                                                                      14890000
.GBLISTG ANOP                                                           14900000
         AIF ('&IKEY' EQ '').GBLISTH   KEY NOT SPECIFIED                14910000
         AIF ('&IKEY'(1,1) NE '(').GBLIST5 NOT A REGISTER               14920000
.GBLISTH ANOP                                                           14930000
         DC     AL1(0)            .KEY                                  14940000
         DC     BL2&IBFLAG2       .FLAGS                                14950000
         AGO    .GBLISTI                                                14960000
.GBLIST5 ANOP                                                           14970000
         DC     AL1(&IKEY)        .KEY                                  14980000
         DC     BL2&IBFLAG2       .FLAGS                                14990000
.*                                                                      15000000
.GBLISTI ANOP                                                           15010000
         DC     AL4(0)            .TCB ADDRESS                          15020000
.*                                                                      15030000
.GBLISTK ANOP                                                           15040000
         AIF ('&IHDR' EQ '').GBLIST8   HDR NOT SPECIFIED                15050000
         AIF ('&IHDR'(1,1) EQ '''').GBLIST7     A CHAR CONSTANT         15060000
.GBLIST8 ANOP                                                           15070000
         DC     XL24'00'          .HEADER                               15080000
.*                                                                      15090000
         AGO    .GDCLEND                                                15100000
.GBLIST7 ANOP                                                           15110000
         DC     CL24&IHDR         .HEADER                               15120000
.*                                                                      15130000
.GDCLEND ANOP                                                           15140000
         AIF ('&IPLISTVER' EQ '0').GBLISTPLV0                      @L8A 15141000
         AIF ('&IFREECELLS' EQ '').GBLISTF1 no freecells           @L8A 15141100
         AIF ('&IFREECELLS'(1,1) EQ '(').GBLISTF1 a reg            @L8A 15141200
         DC     AL4(&IFREECELLS)  .FREECELLS VALUE                 @L8A 15142000
         AGO    .GBLISTF2                                          @L8A 15143000
.GBLISTF1 ANOP                                                     @L8A 15144000
         DC     AL4(0)            .ZERO FREECELLS Value            @L8A 15145000
.GBLISTF2 ANOP                                                     @L8A 15145100
         AIF ('&IFREECELLSDIV' EQ '').GBLISTFD1 no freecells div   @L8A 15145200
         AIF ('&IFREECELLSDIV'(1,1) EQ '(').GBLISTFD1 a reg        @L8A 15145300
         DC     AL4(&IFREECELLSDIV) .FREECELLS divisor value       @L8A 15145400
         AGO    .GBLISTFD2                                         @L8A 15145500
.GBLISTFD1 ANOP                                                    @L8A 15145600
         DC     AL4(0)            .ZERO FREECELLS divisor value    @L8A 15145700
.GBLISTFD2 ANOP                                                    @L8A 15145800
         AIF ('&ICONTINTVL' EQ '').GBLISTCI1 no contintvl          @L8A 15145900
         AIF ('&ICONTINTVL'(1,1) EQ '(').GBLISTCI1 a reg           @L8A 15146000
         DC     AL4(&ICONTINTVL) .CONTINTVL value                  @L8A 15146100
         AGO    .GBLISTCI2                                         @L8A 15146200
.GBLISTCI1 ANOP                                                    @L8A 15146300
         DC     AL4(0)            .ZERO CONTINTVL value            @L8A 15146400
.GBLISTCI2 ANOP                                                    @L8A 15146500
         DC     BL1&IBPLV1FlagsOn .Plistver=1 flags                @L8A 15146600
         DC     AL3(0)            .Reserved                        @L8A 15146700
.GBLISTPLV0 ANOP                                                   @L8A 15146800
CPOOL_BUILD_&SYSNDX DS 0H                                          @P9A 15146900
.* End of list generation                                          @L8A 15147000
.********************************************************************** 15150000
.*                                                                      15160000
.*       LIST FORM OF THE DECLARE ONLY REQUIRES THE DECLARE TO BE       15170000
.*       GENERATED                                                      15180000
.*                                                                      15190000
.********************************************************************** 15200000
         AIF ('&IMF' EQ 'L').GDONE       LIST FORM OF BUILD             15210000
.********************************************************************** 15220000
.*                                                                      15230000
.*       THE STANDARD FORM OF BUILD HAS GOT REGISTER 1 ALREADY          15240000
.*       POINTING TO THE PARAMETER LIST.  NEXT INITIALIZE THE           15250000
.*       LIST AND CALL THE APPROPRIATE ROUTINE                          15260000
.*                                                                      15270000
.********************************************************************** 15280000
.LSAVE   ANOP                                                           15290000
         AIF ('&IPCELL' EQ '').SINIT2                                   15300000
         AIF ('&IPCELL'(1,1) NE '(').SINIT2                             15310000
.*       MUST BE A REGISTER                                             15320000
&IPCELL  SETC   '&IPCELL'(2,K'&IPCELL-2)  STRIP PARENS                  15330000
         ST     &IPCELL,0(0,1) .MOVE PRIMARY CELL COUNT TO PARMLIST     15340000
.*                                                                      15350000
.SINIT2  ANOP                                                           15360000
         AIF ('&IMAXCEL' EQ '').SINIT12                            @P8A 15361000
         AIF ('&IMAXCEL'(1,1) NE '(').SINIT12                      @P8A 15362000
.*       MUST BE A REGISTER                                        @P8A 15363000
&IMAXCEL SETC '&IMAXCEL'(2,K'&IMAXCEL-2) STRIP PARENS              @P8A 15364000
         ST     &IMAXCEL,0(0,1) .SET MAXCELLS                      @P8A 15365000
.*                                                                 @P8A 15366000
.SINIT12 ANOP                                                      @P8A 15367000
         AIF ('&ISCELL' EQ '').SINIT3                                   15370000
         AIF ('&ISCELL'(1,1) NE '(').SINIT3                             15380000
.*       MUST BE A REGISTER                                             15390000
&ISCELL  SETC   '&ISCELL'(2,K'&ISCELL-2)  STRIP PARENS                  15400000
         ST     &ISCELL,4(0,1) .MOVE SECONDARY COUNT TO PARMLIST        15410000
.*                                                                      15420000
.SINIT3  ANOP                                                           15430000
         AIF ('&ICELPER' EQ '').SINIT13                            @P8A 15438000
         AIF ('&ICELPER'(1,1) NE '(').SINIT13                      @P8A 15439000
.*       MUST BE A REGISTER                                        @P8A 15439100
&ICELPER SETC '&ICELPER'(2,K'&ICELPER-2) STRIP PARENS              @P8A 15439200
         ST     &ICELPER,4(0,1) .SET CELLSPERCPU                   @P8A 15439300
.*                                                                 @P8A 15439400
.SINIT13 ANOP                                                      @P8A 15439500
         AIF ('&ICSIZE' EQ '').SINIT4                                   15440000
         AIF ('&ICSIZE'(1,1) NE '(').SINIT4                             15450000
.*       MUST BE A REGISTER                                             15460000
&ICSIZE  SETC   '&ICSIZE'(2,K'&ICSIZE-2)  STRIP PARENS                  15470000
         ST     &ICSIZE,8(0,1) .MOVE CELL SIZE TO PARMLIST              15480000
.*                                                                      15490000
.SINIT4  ANOP                                                           15500000
.*                                                                      15510000
.*       CHECK  SUBPOOL AND KEY PROCESSING                              15520000
.*       MUST BE A REGISTER FOR ANY WORK TO BE DONE.  NO FLAG           15530000
.*       PROCESSING IS NECESSARY SINCE IT WAS DONE IN THE DECLARE.      15540000
.*                                                                      15550000
         AIF ('&ISP' EQ '').SINITB1        SP NOT SPECIFIED             15560000
         AIF ('&ISP'(1,1) NE '(').SINITB1  NOT IN A REGISTER            15570000
.*                                                                      15580000
.*                  SUBPOOL CHANGE REQUIRED                             15590000
.*                                                                      15600000
&ISP     SETC   '&ISP'(2,K'&ISP-2)  STRIP PARENS                        15610000
         STC    &ISP,12(0,1)      .STORE SUBPOOL ID IN PARMLIST         15620000
.SINITB1 ANOP                                                           15630000
         AIF ('&IKEY' EQ '').SINIT5      KEY NOT SPECIFIED              15640000
         AIF ('&IKEY'(1,1) NE '(').SINIT5  NOT A REGISTER               15650000
.*                                                                      15660000
.*                  KEY  CHANGE REQUIRED                                15670000
.*                                                                      15680000
&IKEY    SETC   '&IKEY'(2,K'&IKEY-2)  STRIP PARENS                      15690000
         STC    &IKEY,13(0,1)      .STORE KEY IN PARMLIST               15700000
.*                                                                      15710000
.SINIT5  ANOP                      CHECK TCB PARAMETER                  15720000
         AIF ('&ITCB' EQ '').SINIT6 TCB NOT SPECIFIED                   15730000
         AIF ('&ITCB'(1,1) NE '(').SINIT51  NOT A REGISTER              15740000
.*       A REGISTER                                                     15750000
&ITCB    SETC   '&ITCB'(2,K'&ITCB-2)  STRIP PARENS                      15760000
         ST     &ITCB,16(0,1) .MOVE TCB ADDR TO PARMLIST                15770000
         AGO    .SINIT6                                                 15780000
.SINIT51 ANOP                      NOT A REGISTER                       15790000
         L      14,&ITCB     .TCB ADDRESS                               15800000
         ST     14,16(0,1)   .MOVE TCB ADDR TO PARMLIST                 15810000
.*                                                                      15820000
.SINIT6  ANOP                                                           15830000
.*                                                                      15840000
.*       SET UP HEADER IF SPECIFIED                                     15850000
.*                                                                      15860000
         AIF ('&IHDR' EQ '').SINIT8         NO HEADER INFORMATION  @L8A 15870000
         AIF ('&IHDR'(1,1) EQ '''').SINIT8 CHARACTER CONSTANT HEADER   *15880000
                                                                   @L8A 15881000
         AIF ('&IHDR'(1,1) EQ '(').SINIT7  HDR ADDRESS IN A REGISTER    15890000
.*                                                                      15900000
.* RX-TYPE ADDRESS REPRESENTING THE HEADER                              15910000
.*                                                                      15920000
         MVC    20(24,1),&IHDR    .MOVE HEADER TO PARAMETER LIST        15930000
         AGO    .SINIT8            On to next keyword              @L8A 15940000
.*                                                                      15950000
.SINIT7  ANOP HEADER ADDRESS IN A REGISTER                              15960000
.*                                                                      15970000
         MVC    20(24,1),0&IHDR   .MOVE HEADER TO PARAMETER LIST        15980000
.SINIT8  ANOP                                                      @L8A 15981000
         AIF ('&IFREECELLS' EQ '').SINIT9                          @L8A 15982000
         AIF ('&IFREECELLS'(1,1) NE '(').SINIT9                    @L8A 15983000
.*       MUST BE A REGISTER                                        @L8A 15984000
&IFREECELLS SETC '&IFREECELLS'(2,K'&IFREECELLS-2) STRIP PARENS     @L8A 15985000
         ST     &IFREECELLS,44(0,1) .SET FREECELLS                 @L8A 15986000
.*                                                                 @L8A 15987000
.SINIT9  ANOP                                                      @L8A 15988000
         AIF ('&IFREECELLSDIV' EQ '').SINIT10                      @L8A 15989000
         AIF ('&IFREECELLSDIV'(1,1) NE '(').SINIT10                @L8A 15989100
.*       MUST BE A REGISTER                                        @L8A 15989200
&IFREECELLSDIV SETC '&IFREECELLSDIV'(2,K'&IFREECELLSDIV-2)         @L8A 15989300
         ST     &IFREECELLSDIV,48(0,1) .SET FREECELLSDIVISOR       @L8A 15989400
.*                                                                 @L8A 15989500
.SINIT10 ANOP                                                      @L8A 15989600
         AIF ('&ICONTINTVL' EQ '').SINIT11                         @L8A 15989700
         AIF ('&ICONTINTVL'(1,1) NE '(').SINIT11                   @L8A 15989800
.*       MUST BE A REGISTER                                        @L8A 15989900
&ICONTINTVL SETC '&ICONTINTVL'(2,K'&ICONTINTVL-2) STRIP PARENS     @L8A 15990000
         ST     &ICONTINTVL,52(0,1) .SET CONTINTVL                 @L8A 15990100
.*                                                                 @L8A 15990200
.SINIT11 ANOP                                                      @L8A 15990300
         AGO    .GCALL             GENERATE CALL TO ROUTINE             15992000
.*                                                                      16000000
.GEXEC   ANOP                                                           16010000
.********************************************************************** 16020000
.*                                                                      16030000
.* EXECUTE FORM OF BUILD                                                16040000
.*                                                                      16050000
.********************************************************************** 16060000
         AIF ('&IMF2'(1,1) EQ '(').GEXEC2                               16070000
         LA     1,&IMF2           .PARAMETER LIST ADDRESS               16080000
         AGO    .GINIT1                                                 16090000
.GEXEC2  ANOP                      PARAMETER LIST ADDRESS IN A REG      16100000
&IMF2    SETC   '&IMF2'(2,K'&IMF2-2)  STRIP PARENS                      16110000
         AIF ('&IMF2' EQ '1').GINIT1 ALREADY IN REGISTER 1              16120000
         &LR    1,&IMF2           .PARAMETER LIST ADDRESS          @L4C 16130000
.GINIT1  ANOP                                                           16140000
.GEXEC1  ANOP                                                           16150000
.*                                                                      16160000
.*     GENERATE CODE TO SET UP THE PRIMARY CELL COUNT, IF NECESSARY     16170000
.*                                                                      16180000
         AIF ('&IPCELL' EQ '').GINITA                              @L5A 16190000
         AIF ('&IPCELL'(1,1) EQ '(').GINIT1B  A REGISTER                16200000
         AIF (T'&IPCELL NE 'N').GINIT1A       NOT A NUMBER              16210000
         AIF (&IPCELL LE 4095).GINIT1C        LESS THAN 4095            16220000
.GINIT1A ANOP                      NOT A NUMBER                         16230000
         L      14,=A(&IPCELL)    .PRIMARY CELL COUNT                   16240000
         ST     14,0(0,1)         .MOVE COUNT IN PARM LIST              16250000
         AGO    .GINITA            CONTINUE INITIALIZATION         @L5A 16260000
.GINIT1B ANOP                      A REGISTER                           16270000
&IPCELL  SETC   '&IPCELL'(2,K'&IPCELL-2)  STRIP PARENS                  16280000
         ST     &IPCELL,0(0,1) .MOVE PRIMARY CELL COUNT TO PARMLIST     16290000
         AGO    .GINIT2            CONTINUE INITIALIZATION              16300000
.GINIT1C ANOP                      A NUMBER LESS THAN 4095              16310000
         LA     14,&IPCELL.(0,0)  .MOVE PRIMARY CELL COUNT              16320000
         ST     14,0(0,1)         .MOVE PRIMARY CELL COUNT TO PARMLIST  16330000
.*                                                                      16340000
.*     GENERATE CODE TO SET UP THE MAX CELLS COUNT, IF NECESSARY   @L5A 16350000
.*                                                                      16360000
.GINITA  ANOP                      MAXCELLS SPECIFIED CHECK        @L5A 16370000
         AIF ('&IMAXCEL' EQ '').GINIT2                                  16380000
         AIF ('&IMAXCEL'(1,1) EQ '(').GINITAB  A REGISTER               16390000
         AIF (T'&IMAXCEL NE 'N').GINITAA       NOT A NUMBER             16400000
         AIF (&IMAXCEL LE 4095).GINITAC        LESS THAN 4095           16410000
.GINITAA ANOP                      NOT A NUMBER                         16420000
         L      14,=A(&IMAXCEL)    .MAX CELLS COUNT                     16430000
         ST     14,0(0,1)         .MOVE COUNT IN PARM LIST              16440000
         AGO    .GINIT2            CONTINUE INITIALIZATION              16450000
.GINITAB ANOP                      A REGISTER                           16460000
&IMAXCEL  SETC   '&IMAXCEL'(2,K'&IMAXCEL-2)  STRIP PARENS               16470000
         ST     &IMAXCEL,0(0,1) .MOVE MAX CELLS COUNT TO PARMLIST       16480000
         AGO    .GINIT2            CONTINUE INITIALIZATION              16490000
.GINITAC ANOP                      MAX CELLS OK                         16500000
         LA     14,&IMAXCEL.(0,0)  .MOVE MAX CELLS COUNT                16510000
         ST     14,0(0,1)         .MOVE MAX CELLS COUNT TO PARMLIST     16520000
.*                                                                      16530000
.*     GENERATE CODE TO SET UP THE SECONDARY CELL COUNT, IF NECESSARY   16540000
.*                                                                      16550000
.GINIT2  ANOP                                                           16560000
         AIF ('&ISCELL' EQ '').GINITB  SCELLCT NOT SPECIFIED       @L5A 16570000
         AIF ('&ISCELL'(1,1) EQ '(').GINIT2B  A REGISTER                16580000
         AIF (T'&ISCELL NE 'N').GINIT2A       NOT A NUMBER              16590000
         AIF (&ISCELL LE 4095).GINIT2C        LESS THAN 4095            16600000
.GINIT2A ANOP                      NOT A NUMBER                         16610000
         L      14,=A(&ISCELL)    .SECONDARY CELL COUNT                 16620000
         ST     14,4(0,1)         .MOVE COUNT IN PARM LIST              16630000
         AGO    .GINITB            CONTINUE INITIALIZATION         @L5A 16640000
.GINIT2B ANOP                      A REGISTER                           16650000
&ISCELL  SETC   '&ISCELL'(2,K'&ISCELL-2)  STRIP PARENS                  16660000
         ST     &ISCELL,4(0,1) .MOVE SECONDARY COUNT TO PARMLIST        16670000
         AGO    .GINITB            CONTINUE INITIALIZATION         @L5A 16680000
.GINIT2C ANOP                      A NUMBER LESS THAN 4095              16690000
         LA     14,&ISCELL.(0,0)  .MOVE SECONDARY CELL COUNT            16700000
         ST     14,4(0,1)         .MOVE SECONDARY COUNT TO PARMLIST     16710000
.*                                                                      16720000
.*     GENERATE CODE TO SET UP THE CELLSPERCPU PARM, IF NECESSARY  @L5A 16730000
.*                                                                      16740000
.GINITB  ANOP                                                           16750000
         AIF ('&ICELPER' EQ '').GINIT3 CELLSPERCPU NOT SPECIFIED        16760000
         AIF ('&ICELPER'(1,1) EQ '(').GINITBB A REGISTER                16770000
         AIF (T'&ICELPER NE 'N').GINITBA      NOT A NUMBER              16780000
         AIF (&ICELPER LE 4095).GINITBC       LESS THAN 4095            16790000
.GINITBA ANOP                      NOT A NUMBER                         16800000
         L      14,=A(&ICELPER)   .CELLS PER CPU COUNT                  16810000
         ST     14,4(0,1)         .MOVE COUNT IN PARM LIST              16820000
         AGO    .GINIT3            CONTINUE INITIALIZATION              16830000
.GINITBB ANOP                      A REGISTER                           16840000
&ICELPER SETC   '&ICELPER'(2,K'&ICELPER-2) STRIP PARENS                 16850000
         ST     &ICELPER,4(0,1) .MOVE CELLSPERCPU COUNT TO PARMLIST     16860000
         AGO    .GINIT3            CONTINUE INITIALIZATION              16870000
.GINITBC ANOP                      A NUMBER LESS THAN 4095              16880000
         LA     14,&ICELPER.(0,0) .MOVE CELLS PER CPU COUNT             16890000
         ST     14,4(0,1)         .MOVE CELLSPERCPU COUNT TO PARMLIST   16900000
.*                                                                      16910000
.*     GENERATE CODE TO SET UP THE CELL SIZE, IF NECESSARY              16920000
.*                                                                      16930000
.GINIT3  ANOP                                                           16940000
         AIF ('&ICSIZE' EQ '').GINIT4                                   16950000
         AIF ('&ICSIZE'(1,1) EQ '(').GINIT3B  A REGISTER                16960000
         AIF (T'&ICSIZE NE 'N').GINIT3A       NOT A NUMBER              16970000
         AIF (&ICSIZE LE 4095).GINIT3C        LESS THAN 4095            16980000
.GINIT3A ANOP                      NOT A NUMBER                         16990000
         L      14,=A(&ICSIZE)    .CELL SIZE                            17000000
         ST     14,8(0,1)         .MOVE SIZE IN PARM LIST               17010000
         AGO    .GINIT4            CONTINUE INITIALIZATION              17020000
.GINIT3B ANOP                      A REGISTER                           17030000
&ICSIZE  SETC   '&ICSIZE'(2,K'&ICSIZE-2)  STRIP PARENS                  17040000
         ST     &ICSIZE,8(0,1) .MOVE CELL SIZE TO PARMLIST              17050000
         AGO    .GINIT4            CONTINUE INITIALIZATION              17060000
.GINIT3C ANOP                      A NUMBER LESS THAN 4095              17070000
         LA     14,&ICSIZE.(0,0)  .MOVE CELL SIZE                       17080000
         ST     14,8(0,1)         .MOVE CELL SIZE TO PARMLIST           17090000
.*                                                                      17100000
.*     GENERATE CODE TO SET UP THE SUBPOOL NUMBER AND THE KEY NUMBER.   17110000
.*     IF NECESSARY.                                                    17120000
.*                                                                      17130000
.GINIT4  ANOP                                                           17140000
         AIF ('&ISP' EQ '').GINIT4Z        NO SUBPOOL SPECIFIED         17150000
         AIF ('&ISP'(1,1) EQ '(').GINIT4B  A REGISTER                   17160000
         AIF (T'&ISP EQ 'N').GINIT4C       A NUMBER                     17170000
.GINIT4A ANOP                      NOT A NUMBER                         17180000
         L      14,=A(&ISP)       .SUBPOOL                              17190000
         STC    14,12(0,1)        .MOVE SP IN PARM LIST                 17200000
         AGO    .GINIT4Z           CONTINUE INITIALIZATION              17210000
.GINIT4B ANOP                      A REGISTER                           17220000
&ISP     SETC   '&ISP'(2,K'&ISP-2)  STRIP PARENS                        17230000
         STC    &ISP,12(0,1)      .MOVE SP TO PARMLIST                  17240000
         AGO    .GINIT4Z           CONTINUE INITIALIZATION              17250000
.GINIT4C ANOP                      A NUMBER LESS THAN 256               17260000
         MVI    12(1),&ISP        .MOVE SP TO PARMLIST                  17270000
.GINIT4Z ANOP                                                           17280000
         AIF ('&IKEY' EQ '').GINIT42  NO SUBPOOL SPECIFIED              17290000
         AIF ('&IKEY'(1,1) EQ '(').GINIT4Y  A REGISTER                  17300000
         AIF (T'&IKEY EQ 'N').GINIT4W       A NUMBER LESS THAN 16       17310000
.GINIT4X ANOP                      NOT A NUMBER                         17320000
         L      14,=A(&IKEY)      .KEY                                  17330000
         STC    14,13(0,1)        .MOVE KEY IN PARM LIST                17340000
         AGO    .GINIT42           CONTINUE INITIALIZATION              17350000
.GINIT4Y ANOP                      A REGISTER                           17360000
&IKEY    SETC   '&IKEY'(2,K'&IKEY-2)  STRIP PARENS                      17370000
         STC    &IKEY,13(0,1)      .MOVE KEY TO PARMLIST                17380000
         AGO    .GINIT42           CONTINUE INITIALIZATION              17390000
.GINIT4W ANOP                      A NUMBER LESS THAN 4095              17400000
         MVI    13(1),&IKEY       .MOVE KEY TO PARMLIST                 17410000
.*                                                                      17420000
.*     GENERATE CODE TO SET UP THE FLAG INDICATORS, IF NECESSARY        17430000
.*                                                                      17440000
.GINIT42 ANOP SET UP FLAGS                                              17450000
         AIF ('&LOC' EQ '' AND '&ITCB' EQ '' AND '&IKEY' EQ '' AND     +17460000
               '&IBBNDRY' EQ '' AND '&IBPRESERVE' EQ '' AND            +17470000
               '&IHDR' EQ '' AND '&OWNER' EQ '').GINIT6 NO FLAG        +17480000
                                           CHANGES                 @03C 17490000
.*                                                                      17500000
.* If LOC or OWNER is specified (or BOTH), it may be necessary          17510000
.* to clear out portions of the parameter list prior to ORing in        17520000
.* the proper bits. When the OR value is represented by all 1's,        17530000
.* it is not necessary to AND out the bits. This is the case for        17540000
.* LOC=(31,31) or OWNER=SYSTEM. In those cases, the AND is not          17550000
.* done for those bits.                                                 17560000
.*                                                                      17570000
         AIF   ('&LOC' EQ '' AND '&OWNER' EQ '').GINIT44           @L2A 17580000
         AIF   ('&LOC' EQ '' OR '&OWNER' EQ '').GINIT46            @L2A 17590000
.*                                                                      17600000
.*     Both LOC and OWNER changed, so must zero out both in parmlist    17610000
.*     unless LOC(31,31) LOC(31,64) or OWNER(SYSTEM)                    17620000
.*                                                                      17630000
         AIF   ('&IBANY' EQ '1' AND '&IBLOC' EQ '11').GINIT46      @L2A 17640000
         AIF   ('&IBOWN' EQ '11').GINIT46                          @L2A 17650000
         NI    14(1),X'1C'        .ZERO OUT LOC and OWNER bits     @L2A 17660000
         AGO   .GINIT44            Turn on flags                   @L2A 17670000
.GINIT46 ANOP                      TEST FOR ONE FLAG ONLY               17680000
         AIF ('&LOC' EQ '').GINIT43        LOC NOT CHANGED              17690000
.*                                                                      17700000
.*     LOC changed so must zero it out in parmlist                      17710000
.*     if not LOC=(31,31) or LOC=(31,64)                                17720000
.*                                                                      17730000
         AIF ('&IBANY' EQ '1' AND '&IBLOC' EQ '11').GINIT43             17740000
         NI    14(1),X'1F'        .ZERO OUT LOC BITS               @L2A 17750000
.GINIT43 ANOP                      OR IN FLAGS                          17760000
         AIF ('&OWNER' EQ '').GINIT44        OWNER NOT CHANGED     @L2A 17770000
.*                                                                      17780000
.*   OWNER changed so must zero it out in parmlist if not OWNER=SYSTEM  17790000
.*                                                                      17800000
         AIF ('&IBOWN' EQ '11').GINIT44                            @L2A 17810000
         NI    14(1),X'FC'        .ZERO OUT OWNER BITS             @L2A 17820000
.GINIT44 ANOP                      OR IN FLAGS                     @L2A 17830000
         AIF   ('&IBFLAG'(2,9) EQ '00000000').GINIT5               @L2A 17840000
         OI    14(1),B&IBFLAG     .SET REQUIRED INDICATORS              17850000
         AGO    .GINIT5            CONTINUE INITIALIZATION              17860000
.*                                                                      17870000
.*     GENERATE CODE TO SET UP THE TCB ADDRESS, IF NECESSARY            17880000
.*                                                                      17890000
.GINIT5  ANOP                      SP NOT SPECIFIED                     17900000
         AIF   ('&IBFLAGA'(2,9) EQ '00000000').GINIT5A             @L3A 17910000
         OI    15(1),B&IBFLAGA    .SET REQUIRED INDICATORS         @L3A 17920000
         AGO    .GINIT5A           CONTINUE INITIALIZATION         @L3A 17930000
.GINIT5A ANOP                      No 2nd flags                    @L3A 17940000
         AIF ('&ITCB' EQ '').GINIT6                                     17950000
         AIF ('&ITCB'(1,1) EQ '(').GINIT5B  A REGISTER                  17960000
         L      14,&ITCB          .TCB ADDRESS                     @05C 17970000
         ST     14,16(0,1)        .MOVE TCB ADDR TO PARM LIST           17980000
.*                                                            @ZA92248  17990000
         AGO    .GINIT6            CONTINUE INITIALIZATION              18000000
.GINIT5B ANOP                      A REGISTER                           18010000
&ITCB    SETC   '&ITCB'(2,K'&ITCB-2)  STRIP PARENS                      18020000
         ST     &ITCB,16(0,1) .MOVE TCB ADDR TO PARMLIST                18030000
.*                                                                      18040000
.*     GENERATE CODE TO SET UP THE HEADER, IF NECESSARY                 18050000
.*                                                                      18060000
.GINIT6  ANOP                                                           18070000
.*                                                                      18080000
.*      PROCESS HEADER                                                  18090000
.*                                                                      18100000
         AIF ('&IHDR' EQ '').GINIT8E        NO HEADER INFORMATION  @L8C 18110000
         AIF ('&IHDR'(1,1) NE '''').GINIT7    NOT A CHARACTER CONSTANT  18120000
.*                                                                      18130000
.*      CHARACTER CONSTANT HEADER                                       18140000
.*                                                                      18150000
&IHDR    SETC   '&IHDR'(2,K'&IHDR-2)    STRIP QUOTES                    18160000
&IHDR    SETC   '&IHDR'.'                        '''                    18170000
&IHDR    SETC   ''''.'&IHDR'(1,24).''''                                 18180000
         MVC    20(24,1),=C&IHDR        .MOVE HDR TO PARMLIST           18190000
         AGO    .GINIT8E                                           @L8C 18200000
.GINIT7  ANOP                      NOT A CHARACTER CONSTANT             18210000
         AIF ('&IHDR'(1,1) EQ '(').GINIT8  HDR ADDR IN A REGISTER       18220000
.*                                                                      18230000
.*      RX-TYPE ADDRESS REPRESENTING THE HEADER                         18240000
.*                                                                      18250000
         MVC    20(24,1),&IHDR    .MOVE HEADER TO PARAMETER LIST        18260000
         AGO    .GINIT8E           GENERATE CALL TO ROUTINE        @L8C 18270000
.GINIT8  ANOP                      HDR ADDRESS IN A REGISTER            18280000
         MVC    20(24,1),0&IHDR   .MOVE HEADER TO PARAMETER LIST        18290000
.GINIT8E ANOP                                                      @L8C 18300000
         AIF ('&IFREECELLS' EQ '').GINITFCE                        @L8A 18301000
         AIF ('&IFREECELLS'(1,1) EQ '(').GINITFCC A REGISTER       @L8A 18302000
         AIF (T'&IFREECELLS NE 'N').GINITFCB   NOT A NUMBER        @L8A 18303000
         AIF (&IFREECELLS GT 32767).GINITFCA   > 32767             @L8A 18304000
.*                                 Small number                         18304100
         LHI    14,&IFREECELLS    .MOVE FREE CELLS COUNT           @L8A 18304200
         ST     14,44(0,1)        .MOVE FREE CELLS COUNT TO PARMLIST   *18304300
                                                                   @L8A 18304400
         AGO    .GINITFCE          CONTINUE INITIALIZATION         @L8A 18304500
.GINITFCA ANOP                     Big number                      @L8A 18305000
         L      14,=A(&IFREECELLS) .FREE CELLS COUNT               @L8A 18306000
         ST     14,44(0,1)        .MOVE COUNT IN PARM LIST         @L8A 18307000
         AGO    .GINITFCE          CONTINUE INITIALIZATION         @L8A 18308000
.GINITFCB ANOP                     NOT A NUMBER                    @L8A 18308100
         L      14,&IFREECELLS     .FREE CELLS COUNT               @L8A 18308200
         ST     14,44(0,1)        .MOVE COUNT IN PARM LIST         @L8A 18308300
         AGO    .GINITFCE          CONTINUE INITIALIZATION         @L8A 18308400
.GINITFCC ANOP                     A REGISTER                      @L8A 18309000
&IFREECELLS SETC '&IFREECELLS'(2,K'&IFREECELLS-2) STRIP PARENS     @L8A 18309100
         ST     &IFREECELLS,44(0,1) .MOVE FREE CELLS COUNT TO PARMLIST *18309200
                                                                   @L8A 18309300
.GINITFCE ANOP                                                     @L8A 18310400
         AIF ('&IFREECELLSDIV' EQ '').GINITFCDE                    @L8A 18310500
         AIF ('&IFREECELLSDIV'(1,1) EQ '(').GINITFCDC A REGISTER   @L8A 18310600
         AIF (T'&IFREECELLSDIV NE 'N').GINITFCDB NOT A NUMBER      @L8A 18310700
         AIF (&IFREECELLSDIV GT 32767).GINITFCDA > 32767           @L8A 18310800
.*                                 Small number                         18310900
         LHI    14,&IFREECELLSDIV .MOVE FREE CELLS DIVISOR COUNT   @L8A 18311000
         ST     14,48(0,1)        .MOVE FREE CELLS DIVISOR COUNT       *18311100
                                   TO PARMLIST                     @L8A 18311200
         AGO    .GINITFCDE         CONTINUE INITIALIZATION         @L8A 18311300
.GINITFCDA ANOP                    Big number                      @L8A 18311400
         L      14,=A(&IFREECELLSDIV) .FREE CELLS DIVISOR CUONT    @L8A 18311500
         ST     14,48(0,1)        .MOVE COUNT IN PARM LIST         @L8A 18311600
         AGO    .GINITFCDE         CONTINUE INITIALIZATION         @L8A 18311700
.GINITFCDB ANOP                    Not a number                    @L8A 18311800
         L      14,&IFREECELLSDIV .FREE CELLS DIVISOR CUONT        @L8A 18311900
         ST     14,48(0,1)        .MOVE COUNT IN PARM LIST         @L8A 18312000
         AGO    .GINITFCDE         CONTINUE INITIALIZATION         @L8A 18312100
.GINITFCDC ANOP                    A REGISTER                      @L8A 18312200
&IFREECELLSDIV SETC '&IFREECELLSDIV'(2,K'&IFREECELLSDIV-2) STRIP PARENS*18312300
                                                                   @L8A 18312400
         ST     &IFREECELLSDIV,48(0,1) .MOVE FREE CELLS DIVISOR COUNT  *18312500
                                   TO PARMLIST                     @L8A 18312600
.GINITFCDE ANOP                                                    @L8A 18312900
         AIF ('&ICONTINTVL' EQ '').GINITCIE                        @L8A 18313000
         AIF ('&ICONTINTVL'(1,1) EQ '(').GINITCIC A REGISTER       @L8A 18313100
         AIF (T'&ICONTINTVL NE 'N').GINITCIB NOT A NUMBER          @L8A 18313200
         AIF (&ICONTINTVL GT 32767).GINITCIA > 32767               @L8A 18313300
.*                                 Small number                         18313400
         LHI    14,&ICONTINTVL    .MOVE CONTINTVL value            @L8A 18313500
         ST     14,52(0,1)        .MOVE CONTINVL value to parmlist @L8A 18313600
         AGO    .GINITCIE          CONTINUE INITIALIZATION         @L8A 18313700
.GINITCIA ANOP                     Big number                      @L8A 18313800
         L      14,=A(&ICONTINTVL) .CONTINTVL value                @L8A 18313900
         ST     14,52(0,1)        .Save value in parm list         @L8A 18314000
         AGO    .GINITCIE          CONTINUE INITIALIZATION         @L8A 18314100
.GINITCIB ANOP                     NOT A NUMBER                    @L8A 18314200
         L      14,&ICONTINTVL    .CONTINTVL value                 @L8A 18314300
         ST     14,52(0,1)        .Save value in parm list         @L8A 18314400
         AGO    .GINITCIE          CONTINUE INITIALIZATION         @L8A 18314500
.GINITCIC ANOP                     A REGISTER                      @L8A 18314600
&ICONTINTVL SETC '&ICONTINTVL'(2,K'&ICONTINTVL-2) strip parens     @L8A 18314700
         ST     &ICONTINTVL,52(0,1) .Save CONTINTVL value          @L8A 18314800
.GINITCIE ANOP                                                     @L8A 18315000
         AIF   ('&IPLISTVER' EQ '0').GINITPV1FE                    @04A 18315100
         AIF   ('&IBPLV1FLAGSON'(2,5) EQ '1111').GINITPV1F_NoNI    @L8A 18315200
         NI     56(1),B&IBPLV1FLAGSOFF  .Clear indicators          @L8A 18315300
.GINITPV1FE_NoNI ANOP                                              @L8A 18315400
         AIF   ('&IBPLV1FLAGSON'(2,9) EQ '00000000').GINITPV1FE    @L8A 18315500
         OI     56(1),B&IBPLV1FLAGSON   .Set indicators            @L8A 18315600
.GINITPV1FE ANOP                                                   @L8A 18315700
         AGO   .GCALL                                              @L8A 18315800
.GCALL   ANOP                                                           18315900
.********************************************************************** 18316000
.*                                                                      18320000
.*   GENERATE CALL TO THE APPROPRIATE BUILD ROUTINE                     18330000
.*                                                                      18340000
.********************************************************************** 18350000
         AIF ('&ILINK' NE 'BRANCH').GCALL1   SYSTEM LINKAGE             18360000
.********************************************************************** 18370000
.*       BUILD  FUNCTION WITH BRANCH LINKAGE                            18380000
.*       ADDRESS IS IN CVTCPBDB                                         18390000
.********************************************************************** 18400000
         &L     15,16(0,0)        .ADDRESS OF CVT POINTER FIELD    @L4C 18410000
         L      15,1152(0,15)     .ADDRESS OF BUILD  ROUTINE            18420000
         &BASR  14,15             .BUILD  REQUEST                  @L4C 18430000
         AGO    .GCALL4                                                 18440000
.********************************************************************** 18450000
.GCALL1  ANOP              BUILD  SYSTEM LINKAGE                        18460000
.********************************************************************** 18470000
         AIF  (&SYSOSREL GE &SYSOSREL_ZOSV1R6).ITISR6C             @L4A 18480000
         ESAR   15                .SAVE SECONDARY ASN                   18490000
         STM    15,12,16(13)      .SAVE REGISTERS                       18500000
.ITISR6C ANOP                                                      @L4A 18510000
      AIF       ('&SYSAM64' NE 'YES').AM643                        @L4A 18520000
      MNOTE 8,'CPOOL ---> BUILD IS NOT VALID IN AMODE 64'          @L4A 18530000
.AM643   ANOP                                                      @L4A 18540000
         L      15,16(0,0)        .CVT ADDRESS                          18550000
         L      15,772(,15)       .ADDRESS SYSTEM LINKAGE TABLE         18560000
         L      15,76(,15)        .OBTAIN PC NUMBER                     18570000
         PC     0(15)             .PC TO IGVCPBDP                       18580000
         AIF  (&SYSOSREL GE &SYSOSREL_ZOSV1R6).ITISR6D             @L4A 18590000
         L      2,16(0,13)        .RESTORE SECONDARY ASN                18600000
         SSAR   2                 .RESTORE SECONDARY ASN                18610000
         LM     1,12,24(13)       .RESTORE REGISTERS                    18620000
.ITISR6D ANOP                                                      @L4A 18630000
.GCALL4  ANOP                                                           18640000
         AIF ('&ICPID' EQ '').GCALL3  DO NOT SAVE CELL POOL ID          18650000
         AIF ('&ICPID'(1,1) EQ '(').GCALL2 SPECIFIED AS A REGISTER      18660000
         ST     0,&ICPID          .SAVE CELL POOL ID                    18670000
         MEXIT                                                          18680000
.GCALL2  ANOP                                                           18690000
&ICPID   SETC   '&ICPID'(2,K'&ICPID-2)  STRIP PARENS                    18700000
         AIF ('&ICPID' EQ '0').GCALL3 SPECIFIED AS REGISTER 0           18710000
         LR     &ICPID,0          .SAVE CELL POOL ID                    18720000
         MEXIT                     MACRO IS COMPLETE                    18730000
.GCALL3  ANOP                                                           18740000
         MEXIT                     MACRO IS COMPLETE                    18750000
.*                                                                      18760000
.********************************************************************** 18770000
.*                                                                      18780000
.* This routine is called when the LIST function was not specified.     18790000
.* It makes sure that none of the keywords that are only allowed with   18800000
.* LIST have been specified.                                     @D1A   18810000
.*                                                                      18820000
.********************************************************************** 18830000
.*                                                                      18840000
.NOLISTK ANOP                      Entry to "subroutine"         @D1A   18850000
.*                                                                      18860000
         AIF ('&WORKAREA' EQ '').NOLIST1  Jump if WORKAREA not          18870000
.*                                        specified              @D1A   18880000
         MNOTE 12,'IHB323 ''WORKAREA''&IINVAL''&IFUNC''.&NOTEXT' @D1A   18890000
&ERROR   SETA  12                  Set error code                @D1A   18900000
.*                                                                      18910000
.NOLIST1 ANOP                      Here to check whether VERIFY         18920000
.*                                 was specified                 @D1A   18930000
         AIF ('&VERIFY' EQ '').NOLIST2    Jump if VERIFY not            18940000
.*                                        specified              @D1A   18950000
         MNOTE 12,'IHB323 ''VERIFY''&IINVAL''&IFUNC''.&NOTEXT'   @D1A   18960000
&ERROR   SETA  12                  Set error code                @D1A   18970000
.*                                                                      18980000
.NOLIST2 ANOP                                                    @D1A   18990000
         AGO .RNOLIST               Return                       @D1A   19000000
.*                                                                      19010000
.********************************************************************** 19020000
.*                                                                      19030000
.* This routine is called when the LIST parameter was specified.  It    19040000
.* takes care of all the processing for a CPOOL LIST request.    @D1A   19050000
.*                                                                      19060000
.********************************************************************** 19070000
.*                                                                      19080000
.CPLIST  ANOP                      Entry to "subroutine"         @D1A   19090000
.*                                                                      19100000
&IFUNC   SETC 'LIST'               Note that LIST was specified  @D1A   19110000
.*                                                                      19120000
.* Check to make sure that only the parameters allowed with LIST        19130000
.* are specified.                                                @D1A   19140000
.*                                                                      19150000
         AGO .LSTONLY                                                   19160000
.RLSTONL ANOP                      Return point for LSTONLY      @D1A   19170000
.*                                                                      19180000
.* Validate the LIST keywords.                                   @D1A   19190000
.*                                                                      19200000
         AGO .VALKEY                                                    19210000
.RVALKEY ANOP                      Return point for VALKEY       @D1A   19220000
.*                                                                      19230000
.* Generate code if there were no severe errors                  @D1A   19240000
.*                                                                      19250000
         AIF (&ERROR NE 0).CPLST1  Branch if there were errors   @D1A   19260000
         AGO .GENCDE                                                    19270000
.RGENCDE ANOP                      Return point for GENCDE       @D1A   19280000
.CPLST1  ANOP                                                           19290000
.*                                                                      19300000
         MEXIT                     We're all finished            @D1A   19310000
.*                                                                      19320000
.********************************************************************** 19330000
.*                                                                      19340000
.* This routine checks to make sure that only the parameters allowed    19350000
.* with LIST are specified.                                      @D1A   19360000
.*                                                                      19370000
.********************************************************************** 19380000
.*                                                                      19390000
.LSTONLY ANOP                      Entry to "subroutine"         @D1A   19400000
.*                                                                      19410000
         AIF (N'&SYSLIST LE 1 AND N'&TYPE LE 1).LSTONL1 Jump if not     19420000
.*                                     too many pos. parms       @D1A   19430000
         MNOTE 12,'&TAG TOO MANY POSITIONAL PARAMETERS SPECIFIED.' @P1C 19440000
&ERROR   SETA  12                  Set error code                @D1A   19450000
.*                                                                      19460000
.LSTONL1 ANOP                      See whether PCELLCT was spec. @D1A   19470000
         AIF ('&PCELLCT' EQ '').LSTONL2 Jump if PCELLCT not spec @D1A   19480000
.*                                                               @D1A   19490000
         MNOTE 12,'&TAG PCELLCT &NOTWLIST'                       @D1A   19500000
.*                                                                      19510000
&ERROR   SETA  12                  Set error code                @D1A   19520000
.*                                                                      19530000
.LSTONL2 ANOP                      See whether SCELLCT was spec. @D1A   19540000
         AIF ('&SCELLCT' EQ '').LSTONL3 Jump if SCELLCT not spec @D1A   19550000
.*                                                               @D1A   19560000
         MNOTE 12,'&TAG SCELLCT &NOTWLIST'                       @D1A   19570000
.*                                                                      19580000
&ERROR   SETA  12                  Set error code                @D1A   19590000
.*                                                                      19600000
.LSTONL3 ANOP                      See whether CSIZE was spec.   @D1A   19610000
         AIF ('&CSIZE' EQ '').LSTONL4 Jump if CSIZE not spec.    @D1A   19620000
.*                                                               @D1A   19630000
         MNOTE 12,'&TAG CSIZE &NOTWLIST'                         @D1A   19640000
.*                                                                      19650000
&ERROR   SETA  12                  Set error code                @D1A   19660000
.*                                                                      19670000
.LSTONL4 ANOP                      See whether SP was spec.      @D1A   19680000
         AIF ('&SP' EQ '').LSTONL5 Jump if SP not spec.          @D1A   19690000
.*                                                               @D1A   19700000
         MNOTE 12,'&TAG SP &NOTWLIST'                            @D1A   19710000
.*                                                                      19720000
&ERROR   SETA  12                  Set error code                @D1A   19730000
.*                                                                      19740000
.LSTONL5 ANOP                      See whether LOC was spec.     @D1A   19750000
         AIF ('&LOC' EQ '').LSTONL6 Jump if LOC not spec.        @D1A   19760000
.*                                                               @D1A   19770000
         MNOTE 12,'&TAG LOC &NOTWLIST'                           @D1A   19780000
.*                                                                      19790000
&ERROR   SETA  12                  Set error code                @D1A   19800000
.*                                                                      19810000
.LSTONL6 ANOP                      See whether CELL was spec.    @D1A   19820000
         AIF ('&CELL' EQ '').LSTONL7 Jump if CELL not spec.      @D1A   19830000
.*                                                               @D1A   19840000
         MNOTE 12,'&TAG CELL &NOTWLIST'                          @D1A   19850000
.*                                                                      19860000
&ERROR   SETA  12                  Set error code                @D1A   19870000
.*                                                                      19880000
.LSTONL7 ANOP                      See whether KEY was spec.     @D1A   19890000
         AIF ('&KEY' EQ '').LSTONL8 Jump if KEY not spec.        @D1A   19900000
.*                                                               @D1A   19910000
         MNOTE 12,'&TAG KEY &NOTWLIST'                           @D1A   19920000
.*                                                                      19930000
&ERROR   SETA  12                  Set error code                @D1A   19940000
.*                                                                      19950000
.LSTONL8 ANOP                      See whether TCB was spec.     @D1A   19960000
         AIF ('&TCB' EQ '').LSTONL9 Jump if TCB not spec.        @D1A   19970000
.*                                                               @D1A   19980000
         MNOTE 12,'&TAG TCB &NOTWLIST'                           @D1A   19990000
.*                                                                      20000000
&ERROR   SETA  12                  Set error code                @D1A   20010000
.*                                                                      20020000
.LSTONL9 ANOP                      See whether HDR was spec.     @D1A   20030000
         AIF ('&HDR' EQ '').LSTON10 Jump if HDR not spec.        @D1A   20040000
.*                                                               @D1A   20050000
         MNOTE 12,'&TAG HDR &NOTWLIST'                           @D1A   20060000
.*                                                                      20070000
&ERROR   SETA  12                  Set error code                @D1A   20080000
.*                                                                      20090000
.LSTON10 ANOP                      See whether LINKAGE was spec. @D1A   20100000
         AIF ('&LINKAGE' EQ '').LSTON11 Jump if LINKAGE not spec. @D1A  20110000
.*                                                               @D1A   20120000
         MNOTE 12,'&TAG LINKAGE &NOTWLIST'                       @D1A   20130000
.*                                                                      20140000
&ERROR   SETA  12                  Set error code                @D1A   20150000
.*                                                                      20160000
.LSTON11 ANOP                      See whether MF was spec.      @D1A   20170000
         AIF ('&MF' EQ '').LSTON12 Jump if MF not spec.          @D1A   20180000
.*                                                               @D1A   20190000
         MNOTE 12,'&TAG MF &NOTWLIST'                            @D1A   20200000
.*                                                                      20210000
&ERROR   SETA  12                  Set error code                @D1A   20220000
.*                                                                      20230000
.LSTON12 ANOP                      See whether REGS was spec.    @D1A   20240000
         AIF ('&REGS' EQ '').LSTON13 Jump if REGS not spec.      @D1A   20250000
.*                                                               @D1A   20260000
         MNOTE 12,'&TAG REGS &NOTWLIST'                          @D1A   20270000
.*                                                                      20280000
&ERROR   SETA  12                  Set error code                @D1A   20290000
.*                                                                      20300000
.LSTON13 ANOP                      See whether MAXCELLS was spec @L5A   20310000
         AIF ('&MAXCELLS' EQ '').LSTON14 Jump if MAXCELLS n/spec @L5A   20320000
.*                                                               @L5A   20330000
         MNOTE 12,'&TAG MAXCELLS &NOTWLIST'                      @L5A   20340000
.*                                                                      20350000
&ERROR   SETA  12                  Set error code                @L5A   20360000
.*                                                                      20370000
.LSTON14 ANOP                     See whether CELLSPERCPU was spec @L5A 20380000
         AIF ('&CELLSPERCPU' EQ '').LSTON15 Jump if not CELLSPERCPU     20390000
.*                                                               @L5A   20400000
         MNOTE 12,'&TAG CELLSPERCPU &NOTWLIST'                   @L5A   20410000
.*                                                                      20420000
&ERROR   SETA  12                  Set error code                @L5A   20430000
.*                                                                      20440000
.LSTON15 ANOP                                                    @L5A   20450000
         AIF ('&CONTRACTIBLE' EQ '').LSTON16                       @L8A 20451000
         MNOTE 12,'&TAG CONTRACTIBLE &NOTWLIST'                    @L8A 20453000
&ERROR   SETA  12                  Set error code                  @L8A 20455000
.LSTON16 ANOP                                                      @L8A 20457000
         AIF ('&FREECELLS' EQ '').LSTON17                          @L8A 20458000
         MNOTE 12,'&TAG FREECELLS &NOTWLIST'                       @L8A 20459000
&ERROR   SETA  12                  Set error code                  @L8A 20459100
.LSTON17 ANOP                                                      @L8A 20459200
         AIF ('&FREECELLSDIVISOR' EQ '').LSTON18                   @L8A 20459300
         MNOTE 12,'&TAG FREECELLSDIVISOR &NOTWLIST'                @L8A 20459400
&ERROR   SETA  12                  Set error code                  @L8A 20459500
.LSTON18 ANOP                                                      @L8A 20459600
         AIF ('&FREECELLSPERCPU' EQ '').LSTON19                    @L8A 20459700
         MNOTE 12,'&TAG FREECELLSPERCPU &NOTWLIST'                 @L8A 20459800
&ERROR   SETA  12                  Set error code                  @L8A 20459900
.LSTON19 ANOP                                                      @L8A 20460000
         AIF ('&CONTINTVL' EQ '').LSTON20                          @L8A 20460100
         MNOTE 12,'&TAG CONTINTVL &NOTWLIST'                       @L8A 20460200
&ERROR   SETA  12                  Set error code                  @L8A 20460300
.LSTON20 ANOP                                                      @L8A 20460400
         AIF ('&AUTOCONTRACT' EQ '').LSTON21                       @L8A 20460500
         MNOTE 12,'&TAG AUTOCONTRACT &NOTWLIST'                    @L8A 20460600
&ERROR   SETA  12                  Set error code                  @L8A 20460700
.LSTON21 ANOP                                                      @L8A 20460800
         AGO   .RLSTONL            Return                        @D1A   20461000
.*                                                                      20470000
.*                                                                      20480000
.********************************************************************** 20490000
.*                                                                      20500000
.* This routine validates the CPOOL LIST keywords and assigns their     20510000
.* values to the appropriate internal variables.  If an error is        20520000
.* detected, ERROR is set.                                       @D1A   20530000
.*                                                                      20540000
.********************************************************************** 20550000
.*                                                                      20560000
.VALKEY  ANOP                      Entry to "subroutine"         @D1A   20570000
.*                                                                      20580000
         AGO .CKCPID               Check the CPID keyword        @D1A   20590000
.RCKCPID ANOP                      Return point for CKCPID       @D1A   20600000
.*                                                                      20610000
         AGO .CKVER                Check the VERIFY keyword      @D1A   20620000
.RCKVER  ANOP                      Return point for CKVER        @D1A   20630000
.*                                                                      20640000
         AGO .CKWRK                Check the WORKAREA keyword    @D1A   20650000
.RCKWRK  ANOP                      Return point for CKWORK       @D1A   20660000
.*                                                                      20670000
         AGO .RVALKEY              Return                        @D1A   20680000
.*                                                                      20690000
.********************************************************************** 20700000
.*                                                                      20710000
.* This routine validates the CPID parameter.                    @D1A   20720000
.*                                                                      20730000
.********************************************************************** 20740000
.*                                                                      20750000
.CKCPID  ANOP                      Entry to "subroutine"         @D1A   20760000
.*                                                                      20770000
         AIF ('&CPID' EQ '').NOCPID Branch if CPID not specified @D1A   20780000
.*                                                                      20790000
.* If execution reaches this point, CPID was specified.                 20800000
.* Note that since we let the user specify the CPID in a register,      20810000
.* things get rather tricky here.  We have to allow the user to         20820000
.* specify the CPID in a register (e.g. "CPID=(2)"), and we don't       20830000
.* want to lose the outer parentheses when setting ICPID if that        20840000
.* is the case.  However, we don't want to be fooled by things like     20850000
.* "()", "(X,Y)", "(,Z)", and so forth.                                 20860000
.*                                                                      20870000
&ERRFLAG SETA &FALSE               Note no errors so far         @D1A   20880000
&ICPID   SETC '&CPID'              Get the CPID                  @D1A   20890000
         AIF ('&CPID(1)' NE '').CKCPID1 Branch if the first argument    20900000
.*                                      with CPID is not blank   @D1A   20910000
.*                                                                      20920000
.* Here if the first argument specified is blank                 @D1A   20930000
.*                                                                      20940000
&ERROR   SETA 12                   Set error code                @D1A   20950000
&ERRFLAG SETA &TRUE                Note error with CPID          @D1A   20960000
         AIF (N'&CPID GT 1).CKCPID2 Branch if more than one arg  @D1A   20970000
         MNOTE 12,'&TAG &ARGWITH CPID IS BLANK.'                 @P1C   20980000
         AGO  .CKCPID3             Branch around other MNOTE     @D1A   20990000
.CKCPID2 MNOTE 12,'&TAG &ARG1WITH CPID IS BLANK.'                @P1C   21000000
.*                                                                      21010000
.CKCPID3 ANOP                      Check for too many arguments  @D1A   21020000
.CKCPID1 ANOP                      Check for too many arguments  @D1A   21030000
         AIF (N'&CPID EQ 1).CKCPID4 Branch if not too many       @D1A   21040000
.*                                                                      21050000
.* Here if too many arguments were specified.                    @D1A   21060000
.*                                                                      21070000
         MNOTE 4,' &TAG &TOOMANY CPID PARAMETER.'                @P1C   21080000
         AIF (&ERRFLAG EQ &TRUE).CKCPID5 Branch if we had errors @D1A   21090000
.*                                                                      21100000
.* Here if the only error was too many arguments                 @D1A   21110000
.*                                                                      21120000
&ICPID   SETC '&CPID(1)'           Truncate                      @D1A   21130000
         MNOTE 4,'&NTAG  CPID &TRUNC CPID=&ICPID.'               @D1A   21140000
.CKCPID5 ANOP                                                    @D1A   21150000
.CKCPID4 ANOP                                                    @D1A   21160000
.*                                                                      21170000
.* If CPID was not completely blank, we'll end up here                  21180000
.* eventually.                                                   @D1A   21190000
.*                                                                      21200000
         AGO  .ECKCPID             Branch to end of routine      @D1A   21210000
.NOCPID  ANOP                      Here if no CPID specified     @D1A   21220000
         MNOTE 12,'&TAG CPID MUST BE SPECIFIED WITH LIST.'       @P1C   21230000
&ERROR   SETA 12                   Set error code                @D1A   21240000
.ECKCPID ANOP                      End of CKCPID                 @D1A   21250000
         AGO .RCKCPID              Return                        @D1A   21260000
.*                                                                      21270000
.********************************************************************** 21280000
.*                                                                      21290000
.* This routine validates the VERIFY parameter.                  @D1A   21300000
.*                                                                      21310000
.********************************************************************** 21320000
.*                                                                      21330000
.CKVER   ANOP                      Entry to "subroutine"         @D1A   21340000
.*                                                                      21350000
         AIF ('&VERIFY' EQ '').NOVER  Branch if VERIFY not spec    @D1A 21360000
.*                                                                      21370000
.* If execution reaches this point, VERIFY was specified.               21380000
.*                                                                      21390000
&ERRFLAG SETA &FALSE               Note no errors so far         @D1A   21400000
&IVERIFY SETC '&VERIFY(1)'         Get first argument            @D1A   21410000
         AIF ('&IVERIFY' NE '').CKVER3   Branch if arg not blank @D1A   21420000
.*                                                                      21430000
.* Here if the first argument specified is blank                 @D1A   21440000
.*                                                                      21450000
&ERROR   SETA 12                   Set error code                @D1A   21460000
&ERRFLAG SETA &TRUE                Note error with VERIFY        @D1A   21470000
         AIF (N'&VERIFY GT 1).CKVER2 Branch if more than one arg @D1A   21480000
         MNOTE 12,'&TAG &ARGWITH VERIFY IS BLANK.'               @P1C   21490000
         AGO  .CKVER3              Branch around other MNOTE     @D1A   21500000
.CKVER2 MNOTE 12,'&TAG &ARG1WITH VERIFY IS BLANK.'               @P1C   21510000
.*                                                                      21520000
.CKVER3 ANOP                       Check for YES or NO           @D1A   21530000
        AIF ('&IVERIFY' EQ 'YES').CKVER1 Branch if YES was given @D1A   21540000
        AIF ('&IVERIFY' EQ 'NO').CKVER1  Branch if NO was given  @D1A   21550000
.*                                                                      21560000
.* Here if the argument given with VERIFY was neither YES nor NO @D1A   21570000
.*                                                                      21580000
&ERROR   SETA 12                   Set error code                @D1A   21590000
&ERRFLAG SETA &TRUE                Note error with VERIFY        @D1A   21600000
         MNOTE 12,'&TAG VERIFY PARAMETER MUST BE YES OR NO.'     @P1C   21610000
.*                                                                      21620000
.CKVER1 ANOP                       Check for too many arguments  @D1A   21630000
         AIF (N'&VERIFY EQ 1).CKVER4 Branch if not too many      @D1A   21640000
.*                                                                      21650000
.* Here if too many arguments were specified.                    @D1A   21660000
.*                                                                      21670000
         MNOTE 4,' &TAG &TOOMANY VERIFY PARAMETER.'              @P1C   21680000
         AIF (&ERRFLAG EQ &TRUE).CKVER5 Branch if we had errors @D1A    21690000
.*                                                                      21700000
.* Here if the only error was too many arguments                 @D1A   21710000
.*                                                                      21720000
         MNOTE 4,'&NTAG  VERIFY &TRUNC VERIFY=&IVERIFY.'         @D1A   21730000
.CKVER5 ANOP                                                     @D1A   21740000
.CKVER4 ANOP                                                     @D1A   21750000
.*                                                                      21760000
.* If VERIFY was not completely blank, we'll end up here                21770000
.* eventually.                                                   @D1A   21780000
.*                                                                      21790000
         AGO  .ECKVER              Branch to end of routine      @D1A   21800000
.NOVER   ANOP                      Here if VERIFY not specified  @D1A   21810000
&IVERIFY SETC 'NO'                 Use the default               @D1A   21820000
.ECKVER ANOP                       End of CKVER                  @D1A   21830000
         AGO .RCKVER               Return                        @D1A   21840000
.*                                                                      21850000
.********************************************************************** 21860000
.*                                                                      21870000
.* This routine validates the WORKAREA parameter.                @D1A   21880000
.*                                                                      21890000
.********************************************************************** 21900000
.*                                                                      21910000
.CKWRK   ANOP                      Entry to "subroutine"         @D1A   21920000
.*                                                                      21930000
         AIF ('&WORKAREA' EQ '').NOWRK Branch if WORKAREA not spec @D1A 21940000
.*                                                                      21950000
.* If execution reaches this point, WORKAREA was specified.             21960000
.*                                                                      21970000
&ERRFLAG SETA &FALSE               Note no errors so far         @D1A   21980000
&IWORK1  SETC '&WORKAREA(1)'       Get first argument            @D1A   21990000
         AIF ('&IWORK1' NE '').CKWRK3    Branch if arg not blank @D1A   22000000
.*                                                                      22010000
.* Here if the first argument specified is blank                 @D1A   22020000
.*                                                                      22030000
&ERROR   SETA 12                   Set error code                @D1A   22040000
&ERRFLAG SETA &TRUE                Note error with WORKAREA      @D1A   22050000
         AIF (N'&WORKAREA GT 1).CKWRK2 Branch if more than one arg @D1A 22060000
         MNOTE 12,'&TAG &ARGWITH WORKAREA IS BLANK.'             @P1C   22070000
         AGO  .CKWRK3              Branch around other MNOTE     @D1A   22080000
.CKWRK2 MNOTE 12,'&TAG &ARG1WITH WORKAREA IS BLANK.'             @P1C   22090000
.*                                                                      22100000
.CKWRK3 ANOP                       Check for a second argument   @D1A   22110000
        AIF (N'&WORKAREA GT 1).CKWRK6 Branch if second arg.      @D1A   22120000
.*                                                                      22130000
.* Here if there is no second argument                           @D1A   22140000
.*                                                                      22150000
&ERROR   SETA 12                   Set error code                @D1A   22160000
&ERRFLAG SETA &TRUE                Note error with WORKAREA      @D1A   22170000
         MNOTE 12,'&TAG THE WORKAREA PARAMETER REQUIRES TWO ARGUMENTS, +22180000
               BUT ONLY ONE IS GIVEN.'                           @D1A   22190000
         AGO .CKWRK7                                             @D1A   22200000
.CKWRK6  ANOP                      Here to check second argument @D1A   22210000
&IWORK2  SETC '&WORKAREA(2)'       Get second argument           @D1A   22220000
         AIF ('&IWORK2' NE '').CKWRK8  Branch if arg not blank   @D1A   22230000
.*                                                                      22240000
.* Here if the second argument was blank                         @D1A   22250000
.*                                                                      22260000
&ERROR   SETA 12                   Set error code                @D1A   22270000
&ERRFLAG SETA &TRUE                Note error with WORKAREA      @D1A   22280000
         MNOTE 12,'&TAG &ARG2WITH WORKAREA IS BLANK.'            @P1C   22290000
.CKWRK8  ANOP                                                           22300000
.CKWRK1  ANOP                      Check for too many arguments  @D1A   22310000
         AIF (N'&WORKAREA EQ 2).CKWRK4 Branch if not too many    @D1A   22320000
.*                                                                      22330000
.* Here if too many arguments were specified.                    @D1A   22340000
.*                                                                      22350000
         MNOTE 4,' &TAG &TOOMANY WORKAREA PARAMETER.'            @P1C   22360000
         AIF (&ERRFLAG EQ &TRUE).CKWRK5 Branch if we had errors @D1A    22370000
.*                                                                      22380000
.* Here if the only error was too many arguments                 @D1A   22390000
.*                                                                      22400000
         MNOTE 4,'&NTAG  WORKAREA &TRUNC WORKAREA=(&IWORK1,&IWORK2).'   22410000
.*                                                               @D1A   22420000
.CKWRK5 ANOP                                                     @D1A   22430000
.CKWRK4 ANOP                                                     @D1A   22440000
.CKWRK7 ANOP                                                     @D1A   22450000
.*                                                                      22460000
.* If WORKAREA was not completely blank, we'll end up here              22470000
.* eventually.                                                   @D1A   22480000
.*                                                                      22490000
         AGO  .ECKWRK              Branch to end of routine      @D1A   22500000
.NOWRK   ANOP                      Here if WORKAREA not spec.    @D1A   22510000
         MNOTE 12,'&TAG WORKAREA MUST BE SPECIFIED WITH LIST.'   @P1C   22520000
&ERROR   SETA 12                   Set error code                @D1A   22530000
.ECKWRK ANOP                       End of CKWRK                  @D1A   22540000
         AGO .RCKWRK               Return                        @D1A   22550000
.*                                                                      22560000
.********************************************************************** 22570000
.*                                                                      22580000
.* This routine generates code for a CPOOL LIST invocation.      @D1A   22590000
.*                                                                      22600000
.********************************************************************** 22610000
.*                                                                      22620000
.GENCDE  ANOP                       Entry to "subroutine"        @D1A   22630000
.*                                                                      22640000
.* Generate code to get a pointer to the work area in                   22650000
.* register 14, and a pointer to the address of the work area in        22660000
.* register 1.                                                   @D1A   22670000
.*                                                                      22680000
         AIF ('&IWORK1'(1,1) EQ '(').GENCDE1 Branch if ptr to    @D1A   22690000
.*                                           work area address is in    22700000
.*                                           a register                 22710000
.*                                                                      22720000
.* Here if the pointer to the pointer to the work area is not in        22730000
.* a register.                                                   @D1A   22740000
.*                                                                      22750000
         LA     1,&IWORK1           Get address of ptr to work area     22760000
         &L    14,0(1)              Get address of work area       @L4C 22770000
         AGO  .GENCDE2                                                  22780000
.*                                                                      22790000
.GENCDE1 ANOP                                                           22800000
.*                                                                      22810000
.* Here if the pointer to the pointer to the work area is in            22820000
.* a register.                                                   @D1A   22830000
.*                                                                      22840000
&WRKAREG SETC '&IWORK1'(2,K'&IWORK1-2) Strip parens off reg name @D1A   22850000
         &LR    1,&WRKAREG          Point to parameter list        @L4C 22860000
         &L    14,0(1)              Get address of work area       @L4C 22870000
.*                                                                      22880000
.GENCDE2 ANOP                                                    @D1A   22890000
.*                                                                      22900000
.* Generate code to set the VERIFY flag.                         @D1A   22910000
.*                                                                      22920000
         AIF ('&IVERIFY' EQ 'NO').GENCDE3 Branch if VERIFY=NO    @D1A   22930000
         OI    16(14),X'80'           Turn on verify flag               22940000
         AGO .GENCDE4                                                   22950000
.GENCDE3 ANOP                       Here if VERIFY=NO                   22960000
         NI    16(14),X'7F'           Turn off verify flag              22970000
.*                                                                      22980000
.GENCDE4 ANOP                                                           22990000
.*                                                                      23000000
.* Generate code to put the CPID into the work area.             @D1A   23010000
.*                                                                      23020000
         AIF ('&ICPID'(1,1) EQ '(').GENCDE5 Branch if CPID in reg @D1A  23030000
.*                                                                      23040000
.* Here if the CPID is not in a register                                23050000
.*                                                                      23060000
         MVC   20(4,14),&ICPID        Put CPID in the work area         23070000
         AGO .GENCDE6                                                   23080000
.*                                                                      23090000
.GENCDE5 ANOP                                                           23100000
.*                                                                      23110000
.* Here if the CPID is in a register                                    23120000
.*                                                                      23130000
&ICPID   SETC '&ICPID'(2,K'&ICPID-2) Strip parens from CPID     @D1A    23140000
         ST    &ICPID,20(,14)        Put CPID in the work area          23150000
.*                                                                      23160000
.GENCDE6 ANOP                                                           23170000
         AIF ('&IWORK2'(1,1) EQ '(').GENCDE7 Branch if work area        23180000
.*                                           length is in a reg  @D1A   23190000
.*                                                                      23200000
.* Here if the work area length is not in a register             @D1A   23210000
.*                                                                      23220000
         AIF (T'&IWORK2 NE 'N').GENCDE9 Branch if not a number   @D1A   23230000
         AIF (&IWORK2 GT 4095).GENCDE9  Or if number but > 4095  @D1A   23240000
         LA    15,&IWORK2            Get length of work area            23250000
         ST    15,24(,14)            Save length of work area           23260000
         AGO   .GENCDE8                                                 23270000
.GENCDE9 ANOP                                                           23280000
         L     15,=A(&IWORK2)        Get length of work area            23290000
         ST    15,24(,14)            Save length of work area           23300000
         AGO .GENCDE8                                                   23310000
.*                                                                      23320000
.* Here if the work area length is in a register.                @D1A   23330000
.*                                                                      23340000
.GENCDE7 ANOP                                                    @D1A   23350000
&WRKLREG SETC '&IWORK2'(2,K'&IWORK2-2) Strip parens off reg name @D1A   23360000
         ST    &WRKLREG,24(,14)        Store length of work area @P3C   23370000
.*                                                                      23380000
.GENCDE8 ANOP                                                    @D1A   23390000
.*                                                                      23400000
.* Generate code for the call to IGVCPLST.                       @D1A   23410000
.*                                                                      23420000
         &L    15,16(0,0)           Get address of CVT             @L4C 23430000
         L     15,200(0,15)         Get address of SCVT                 23440000
         L     15,100(0,15)         Get addr of Cell Pool List routine  23450000
         BASSM 14,15                Branch to Cell Pool List routine    23460000
         AGO .RGENCDE               Return                       @D1A   23470000
.*                                                                      23480000
.*                                                                      23490000
.*                                                                      23500000
         MEND                                                           23510000
*      */                                                               23520000
* %PLSSKIP:  ;                                                          23530000
*%    CPOOL:                                                            23540000
* MACRO KEYS(U,UNCOND,                   /* UNCONDITIONAL GETMAIN    */ 23550000
*            C,COND,                     /* CONDITIONAL GETMAIN      */ 23560000
*            PCELLCT,                    /* PRIMARY CELL COUNT       */ 23570000
*            SCELLCT,                    /* SECONDARY CELL COUNT     */ 23580000
*            MAXCELLS,                   /* MAXIMUM CELLS        @L5A*/ 23590000
*            CELLSPERCPU,                /* CELLS PER CPU        @L5A*/ 23600000
*            CSIZE,                      /* CELL SIZE                */ 23610000
*            SP,                         /* SUBPOOL ID               */ 23620000
*            LOC,                        /* LOCATION                 */ 23630000
*            CPID,                       /* CELL POOL ID             */ 23640000
*            CELL,                       /* CELL ADDRESS             */ 23650000
*            KEY,                        /* KEY                      */ 23660000
*            TCB,                        /* TCB ADDRESS OR TCB       */ 23670000
*            HDR,                        /* HEADER OR HEADER ADDRESS */ 23680000
*            LINKAGE,                    /* SYSTEM OR BRANCH         */ 23690000
*            MF,                         /* LIST, EXECUTE, MODIFY, OR   23700000
*                                           STANDARD FORM            */ 23710000
*            REGS,                       /* SAVE OR USE REGS     @D1C*/ 23720000
*            WORKAREA,                   /* Work area for LIST   @D1A*/ 23730000
*            BNDRY,                      /* Boundary for GET     @P3A*/ 23740000
*            PRESERVE,                   /*                      @P4A*/ 23750000
*            MULTIHDR,                   /* Multi-header         @L5A*/ 23760000
*            CELLSHARE,                  /* Allows cell sharing  @L6A*/ 23770000
*            INLINE,                     /*                      @L5A*/ 23780000
*            VERIFY                      /* Use LRA to verify (for      23790000
*                                           LIST)                @D1A*/ 23800000
*           ,OWNER                       /* OWNER                @L2A*/ 23820000
*           ,CONTRACTIBLE                /* Contractible         @L8A*/ 23821000
*           ,FREECELLS                   /*                      @L8A*/ 23822000
*           ,FREECELLSDIVISOR            /*                      @L8A*/ 23823000
*           ,CONTINTVL                   /*                      @L8A*/ 23823100
*           ,FREECELLSPERCPU             /*                      @L8A*/ 23824000
*           ,AUTOCONTRACT                /*                      @L8A*/ 23825000
*           ,PLISTVER                    /*                      @L8A*/ 23826000
*            );                                                         23830000
*    ANS('?'!! MACLABEL !! 'CPOOLP' !! MACLIST !! ' '                   23840000
*                                              !! MACKEYS !! ';');      23841000
*%END CPOOL;                                                            23850000
