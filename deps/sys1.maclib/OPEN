*%/* Comment for all of assembler macro.                           @L2A 00010000
         MACRO                                                          00020000
&NAME    OPEN  &PAR1,&MF=I,&TYPE=,&MODE=                           @01C 00021900
.*                                                                      00023800
.*OPEN MACRO                                                       @L1A 00027600
.*                                                                 @L1A 00031400
.*$MAC(OPEN):                                                      @L1A 00035200
.*                                                                 @L1A 00039000
.*Function: Open one or more DCBs and/or ACBs.                     @L3A 00039100
.*Syntax: (label) OPEN (dcb/acb,(option1,option2),dcb/acb, etc),   @L3A 00039200
.*     TYPE=J              Optinal, defaults to not J              @L3A 00039300
.*     MODE={24!31}        Optional, defaults to 24-bit format     @L3A 00039400
.*        Each of the DCBs or ACBs and the options are a sublist   @L3A 00039500
.*     of one positional parameter.  That means that all of        @L3A 00039600
.*     them must be in a single pair of parentheses.               @L3A 00039700
.*                                                                 @L3A 00039800
.*PROPRIETARY V3 STATEMENT                                              00039900
.*LICENSED MATERIALS - PROPERTY OF IBM                                  00040800
.*"RESTRICTED MATERIALS OF IBM"                                         00041700
.*5695-DF1                                                              00042600
.*COPYRIGHT 1987, 2011 IBM CORP.                                        00043800
.*END PROPRIETARY V3 STATEMENT                                          00045000
.*                                                                 @L1A 00046600
.*STATUS = z/OS 1.13 DFSMS                                         @L3C 00047800
.*                                                                 @L1A 00049000
.*CHANGE ACTIVITY - AS FOLLOWS:                                    @L1A 00050400
.*                                                                 @L1A 00054200
.*$L1=ACB31BIT,HDP2230,STLSS:  O/C/E SUPPORT OF 31-BIT VSAM        @L1A 00056700
.*$01=OY07793,HDP2230,870720,STLSS:REMOVE SPLEVEL DEPENDENCE       @01A 00059200
.*$L2=PLX    ,JDZ1110,930930,SJPLMT: ADD PL/X SUPPORT              @L2A 00060500
.*$L3=64BIT,JDZ1D10,20101112,SVLWER: 64 bit message                @L3A 00061100
.*                                                                 @L1A 00061800
         GBLC  &SYSAM64    GLOBAL VARIABLE SET BY SYSSTATE MACRO   @L3A 00064500
         GBLC  &SYSASCE    GLOBAL VARIABLE SET BY SYSSTATE MACRO   @L3A 00067200
         GBLB  &IHBRDJ                  ON IF RDJFCB MACRO USED         00070000
.*                                                                 @01D 00085000
         LCLA  &ACTR,&ACTR2,&ASUM,&CTR,&CTR1,&LGTH,&NUMBER         @L1C 00100000
         LCLB  &MFESW,&MFISW,&MFI2SW,&B(12),&NULLSW,&OPT2SW,&MSW   @L1C 00120000
         LCLC  &PARA                                                    00140000
.*                                                                 @01D 00180000
         SYSSTATE TEST    TEST HOW MACROS ARE TO EXPAND            @L3A 00190000
         AIF   ('&SYSAM64' EQ 'YES').ERROR10    GO IF AMODE64=YES  @L3A 00200000
         AIF  (('&SYSASCE' NE '') AND ('&SYSASCE' NE 'P')).ERROR11 @L3A 00210000
&NUMBER  SETA  N'&PAR1                  Get number of positionals       00220000
.*                                                                 @01D 00230000
&CTR     SETA  1                        Start with first DCB or ACB     00248300
&CTR1    SETA  2                        Start with first option         00266600
         AIF   (N'&SYSLIST LE 1).TYPE   IF ONLY 1 (PARMLIST)     A45585 00285000
         IHBERMAC 238                   EXCESSIVE POS. PARMS     A45585 00290000
.TYPE    AIF   (T'&TYPE NE 'O' AND '&TYPE' NE 'J').ERROR8        A45585 00295000
         AIF   (T'&MODE EQ 'O').MFTEST                             @L1A 00298500
         AIF   ('&MODE' NE '31' AND '&MODE' NE '24').ERROR9        @L1A 00302000
         AIF   ('&MODE' EQ '31' AND '&TYPE' EQ 'J').ERROR7         @L1A 00305500
         AIF   ('&MODE' EQ '24').MFTEST                            @L1A 00309000
&MSW     SETB  1                        SET MODE=31 SWITCH         @L1A 00316700
.MFTEST  AIF   ('&MF' EQ 'L').RTEL      Go if list form            @L1C 00324400
         AIF   ('&MF' EQ 'I').TESTI     Go if standard form             00332100
         AIF   (N'&MF LE 1).ERROR3                                      00340000
         AIF   ('&MF(1)' NE 'E').ERROR3                                 00360000
&NAME    IHBINNRA &MF(2)                LOAD REG 1 WITH LIST ADDR       00380000
         AGO   .ISSSVC                  Go to handle execute form       00400000
.*--------------------------------------------------------------------- 00420000
.* Begin handling the list form (MF=L).                            @L3A 00440000
.RTEL    ANOP                                                           00460000
&NAME    DC    0F'0'                    ALIGN LIST TO WORD              00475000
         AIF   ('&PAR1' EQ '').ERROR5                                   00490000
.* Continue handling option for any form (list, standard, execute) @L3A 00508000
.CLRSW   ANOP                      Handle list or standard form.        00526000
&ASUM    SETA  0                        Clear the options code          00544000
         AIF   (&CTR1 GT &NUMBER).J     Go if we did all options        00562000
         AIF   ('&PAR1(&CTR1)' EQ '').DC1                               00580000
.* These are incomplete tests but we are stuck with them.          @L3A 00593300
         AIF   ('&PAR1(&CTR1)'(1,1) NE '(').NOPAREN  If not paren       00606600
&B(1)    SETB  ('&PAR1(&CTR1)'(2,5) EQ 'INPUT')                         00620000
&B(2)    SETB  ('&PAR1(&CTR1)'(2,6) EQ 'RDBACK')                        00640000
&B(3)    SETB  ('&PAR1(&CTR1)'(2,5) EQ 'INOUT')                         00660000
&B(4)    SETB  ('&PAR1(&CTR1)'(2,5) EQ 'UPDAT')                         00680000
&B(11)   SETB  ('&PAR1(&CTR1)'(2,6) EQ 'OUTINX')               @Z40JSGD 00690000
&B(5)    SETB  ('&PAR1(&CTR1)'(2,5) EQ 'OUTIN' AND NOT &B(11)) @Z40JSGD 00700000
&B(6)    SETB  ('&PAR1(&CTR1)'(2,6) EQ 'OUTPUT')                        00720000
&B(12)   SETB  ('&PAR1(&CTR1)'(2,6) EQ 'EXTEND')               @Z40JSGD 00730000
         AIF   (K'&PAR1(&CTR1) LE 8).STOPNOW                            00740000
&B(7)    SETB  ('&PAR1(&CTR1)'(8,4) EQ 'LEAV'  OR '&PAR1(&CTR1)'(9,4) EX00760000
               Q 'LEAV')                                                00780000
&B(8)    SETB  ('&PAR1(&CTR1)'(8,4) EQ 'RERE' OR '&PAR1(&CTR1)'(9,4) EQX00800000
                'RERE')                                                 00820000
&B(9)    SETB  ('&PAR1(&CTR1)'(8,4) EQ 'DISP' OR '&PAR1(&CTR1)'(9,4) EQX00840000
                'DISP')                                                 00860000
&B(10)   SETB  ('&PAR1(&CTR1)'(8,4) EQ 'IDLE' OR '&PAR1(&CTR1)'(9,4) EQX00880000
                'IDLE')                                                 00900000
&OPT2SW  SETB  1                        Remember we have two optons     00920000
         AIF   (&B(7)+&B(8)+&B(9)+&B(10) NE 1).ERROR1                   00940000
         AGO   .STOPNOW                                            @L3A 00980000
.NOPAREN ANOP                           Handle option in parens         01020000
&B(1)    SETB  ('&PAR1(&CTR1)' EQ 'INPUT')                              01060000
&B(2)    SETB  ('&PAR1(&CTR1)' EQ 'RDBACK')                             01080000
&B(3)    SETB  ('&PAR1(&CTR1)' EQ 'INOUT')                              01100000
&B(4)    SETB  ('&PAR1(&CTR1)' EQ 'UPDAT')                              01120000
&B(5)    SETB  ('&PAR1(&CTR1)' EQ 'OUTIN')                              01140000
&B(6)    SETB  ('&PAR1(&CTR1)' EQ 'OUTPUT')                             01160000
&B(11)   SETB  ('&PAR1(&CTR1)' EQ 'OUTINX')                    @Z40JSGD 01170000
&B(12)   SETB  ('&PAR1(&CTR1)' EQ 'EXTEND')                    @Z40JSGD 01172000
.STOPNOW AIF   (&B(1)+&B(2)+&B(3)+&B(4)+&B(5)+&B(6)+&B(11)+&B(12) NE 1)X01183300
               .ERROR1                                         @Z40JSGD 01194600
&ASUM    SETA  &B(2)+3*&B(3)+4*&B(4)+7*&B(5)+15*&B(6)+48*&B(7)+16*&B(8)X01205900
               +32*&B(10)+6*&B(11)+14*&B(12)                   @Z40JSGD 01217200
&B(7)    SETB  0                        Reset second option bits        01228500
&B(8)    SETB  0                                                        01240000
&B(10)   SETB  0                                                        01260000
.DC1     AIF   (&MFESW).ERTRTRN         Go to resume execute form       01280000
.* Continue the list or standard form.                             @L3A 01300000
         AIF   (&CTR1 LT &NUMBER).K     Go if not last option           01320000
.J       ANOP       Handle last option for list, execute or standard    01340000
&ASUM    SETA  &ASUM+128                Set "last option" flag          01360000
.K       AIF   (&MFI2SW).I2ROUT    Go if instruc. for standard form     01380000
         AIF   (&MFISW).IROUTRN    Go if list for standard form         01400000
.* Generate an entry in the list form.                             @L3A 01420000
         DC    AL1(&ASUM)               Option byte                     01440000
         AIF   (NOT &MSW).OLDPARM       Go if 24-bit form          @L1A 01460000
         DC    AL3(0)                   Reserved                   @L3C 01480000
         AIF   ('&PAR1(&CTR)' NE '').NOBLNK2                       @L1A 01500000
         DC    A(0)                     DCB or ACB address         @L1A 01510000
         AGO   .NOTLST                                             @L1A 01520000
.NOBLNK2 AIF   ('&PAR1(&CTR)'(1,1) EQ '(').ERROR6                  @L1A 01530000
         DC    A(&PAR1(&CTR))           DCB or ACB address         @L1A 01540000
         AGO   .NOTLST                                             @L1A 01550000
.OLDPARM AIF   ('&PAR1(&CTR)' NE '').NOBLANK                       @L1C 01560000
         DC    AL3(0)                   DCB or ACB address              01570000
         AGO   .NOTLST                                                  01580000
.NOBLANK AIF   ('&PAR1(&CTR)'(1,1) EQ '(').ERROR6                       01600000
         DC    AL3(&PAR1(&CTR))         DCB or ACB address              01620000
.NOTLST  AIF   (&CTR1 GE &NUMBER).FINI                                  01640000
&CTR     SETA  &CTR+2                                                   01660000
&CTR1    SETA  &CTR1+2                                                  01680000
         AGO   .CLRSW                   Go to analyze options           01700000
.*--------------------------------------------------------------------- 01720000
.* Begin handling standard form (list and instructions).           @L3A 01730900
.TESTI   CNOP  0,4                      Align list to word              01741800
&LGTH    SETA  ((&NUMBER+1)/2)*4+4      Set length for 24-bit           01752700
         AIF   (NOT &MSW).CONT          Branch if not MODE=31      @L3C 01763600
&LGTH    SETA  ((&NUMBER+1)/2)*8+4      Set length for 31-bit      @L1A 01774500
.CONT    ANOP                                                      @L3A 01785400
&NAME    BAS   1,*+&LGTH                Load reg 1 with list address    01796300
&MFISW   SETB  1                        MF=I SWITCH                @L1C 01807200
.* Loop for parameter list for standard form.                      @L3A 01818100
.RTEYE   AIF   ('&PAR1(&CTR)' EQ '').ERROR5   Go if null DCB or ACB     01829000
         AIF   ('&PAR1(&CTR)'(1,1) NE '(').CLRSW                        01840000
         AIF   (NOT &MSW).SPL1          Branch if 24-bit           @L1A 01845700
         DC    A(0)                     Option byte and reserved   @L1A 01851400
         DC    A(0)                     DCB or ACB address         @L1A 01857100
         AGO   .UPCTRS                                             @L1A 01862800
.SPL1    ANOP                           For MODE=24                @L1A 01868500
         DC    A(0)                     Opt byte & DCB or ACB addr      01874200
         AGO   .UPCTRS                                                  01880000
.* Generate an entry in the parameter list for standard form.      @L3A 01886800
.IROUTRN DC    AL1(&ASUM)               Option byte                     01893600
         AIF   (&MSW).IROUT3            Branch if 31-bit           @L1A 01900400
         DC    AL3(&PAR1(&CTR))         DCB or ACB address              01907200
         AGO   .UPCTRS                                             @L1A 01914000
.IROUT3  DC    AL3(0)                   Reserved                   @L1A 01922600
         DC    A(&PAR1(&CTR))           DCB or ACB address         @L1A 01931200
.UPCTRS  AIF   (&CTR1 GE &NUMBER).QUITS                                 01940000
&CTR     SETA  &CTR+2                                                   01960000
&CTR1    SETA  &CTR1+2                                                  01980000
         AGO   .RTEYE                                                   02000000
.QUITS   ANOP                 Handle end of list with standard form     02013900
&CTR     SETA  1                        Go back to first DCB or ACB     02027800
&CTR1    SETA  2                        Go back to first option         02041700
.* Loop to generate instructions at end of standard form.  Set     @L3A 02055600
.* DCB or ACB address if in a register.                            @L3A 02069500
.ILOOP2  AIF   ('&PAR1(&CTR)'(1,1) NE '(').UPCTR2  Go if not reg.       02083400
&LGTH    SETA  K'&PAR1(&CTR)-2          Count chars in parentheses      02097300
&PARA    SETC  '&PAR1(&CTR)'(2,&LGTH)   Remove parentheses              02111200
&MFI2SW  SETB  1                      Set switch for standard form @L3M 02125100
         AIF   (NOT &MSW).PARA2         Go if 24-bit form          @L1A 02139000
         ST    &PARA,&ACTR.+4(,1)       Store DCB or ACB addr      @L3C 02152900
         AGO   .CLRSW                                              @L3A 02166800
.PARA2   STCM  &PARA,B'0111',&ACTR.+1(1) Store DCB or ACB addr     @L3C 02180700
         AGO   .CLRSW                   Go to analyze options           02194600
.I2ROUT  ANOP            Continue instructions in standard form    @L1C 02208500
         AIF   (&ASUM EQ 0).UPCTR2                                 @L3C 02222400
         MVI   &ACTR.(1),&ASUM          Set option byte                 02236300
.UPCTR2  AIF   (&CTR1 GE &NUMBER).RGFLIP Escape if no more DCB/ACB @L3C 02250200
&CTR     SETA  &CTR+2                   Index to next DCB or ACB        02264100
&CTR1    SETA  &CTR1+2                  Index to next option            02278000
&ACTR    SETA  &ACTR+4                  Increase offset in list    @L3M 02291900
         AIF   (NOT &MSW).ILOOP2        Loop if 24-bit form        @L3C 02305800
&ACTR    SETA  &ACTR+4                  Increase offset for 31-bit @L3C 02319700
         AGO   .ILOOP2                                             @L1A 02335000
.*--------------------------------------------------------------------- 02340000
.* Begin handling execute form (instructions only).                @L3A 02355000
.ISSSVC  AIF   ('&PAR1' EQ '').RGFLIP   Go if no override          @L1C 02370000
.* Loop to cause null options at end to be ignored.                @L3A 02385000
.LOOPA   AIF   ('&PAR1(&NUMBER)' NE '').LOOPB                           02400000
&NUMBER  SETA  &NUMBER-1                Decrease number of options      02420000
         AIF   (&NUMBER EQ 0).RGFLIP    Escape if all are null          02440000
         AGO   .LOOPA                                                   02460000
.* Start loop to handle all DCB or ACB overrides.                  @L3A 02480000
.LOOPB   AIF   ('&PAR1(&CTR)' NE '').TESTCTR  Go if a DCB or ACB        02500000
&NULLSW  SETB  1                        Remember this DCB or ACB null   02520000
.TESTCTR AIF   (&CTR EQ &NUMBER).QUITNOW  Go if on last DCB or ACB      02540000
         AIF   ('&PAR1(&CTR1)' EQ '').NULLTWO  Go if no option          02560000
&MFESW   SETB  1                        Remember we are doing execute   02580000
         AGO   .CLRSW                   Go to analyze options           02600000
.* Continue execute form after analysing options.                  @L3A 02620000
.ERTRTRN AIF   (&CTR1 EQ &NUMBER).THRUNOW  Escape if on last DCB/ACB    02640000
         AIF   (&NULLSW).NOFIRST        Go if no DCB or ACB             02660000
.* DCB or ACB was coded with zero, one or both options.            @L3A 02680000
         AIF   ('&PAR1(&CTR)'(1,1) EQ '(').REGISTR                      02700000
         AIF   (NOT &OPT2SW).OPTA       Go if no or one option          02704700
         LA    14,&PAR1(&CTR)           Get DCB or ACB address     @L3C 02709400
         AIF   (NOT &MSW).MODE24        Go if 24-bit form          @L3M 02714100
         ST    14,&ACTR.+4(,1)          Store DCB or ACB address   @L3C 02718800
         AGO   .SHORTB                                             @L3A 02723500
.MODE24  STCM  14,B'0111',&ACTR.+1(1)   Store DCB or ACB address   @L3C 02728200
         AGO   .SHORTB                                             @L3A 02732900
.* DCB or ACB was omitted.                                         @L3A 02737600
.NOFIRST AIF   (NOT &OPT2SW).SHORTA1    Go if no or one option     @L3A 02742300
         AGO   .SHORTB                                             @L3A 02747000
.REGISTR ANOP                           DCB or ACB addr in register     02751700
&LGTH    SETA  K'&PAR1(&CTR)-2          Count chars in parentheses @L3M 02756400
&PARA    SETC  '&PAR1(&CTR)'(2,&LGTH)   Extract chars in parens    @L3M 02761100
         AIF   (NOT &OPT2SW).OPTB       Go if no or one option     @L3M 02765800
.* DCB or ACB in register and option 1 and option 2 coded.         @L3A 02770500
         AIF   (NOT &MSW).MODE24C       Go if 24-bit form          @L3M 02775200
         ST    &PARA,&ACTR.+4(,1)       Store DCB or ACB address   @L3M 02779900
         AGO   .SHORTB                                             @L3A 02784600
.MODE24C STCM  &PARA,B'0111',&ACTR.+1(1) Store DCB or ACB address  @L3M 02789300
.SHORTB  MVI   &ACTR.(1),&ASUM          Set option byte                 02794000
         AGO   .INCRMT                                                  02800000
.* Handle no or one option for execute form.  Don't set option 2.  @L3A 02808500
.OPTA    LA    0,&PAR1(&CTR)            Get DCB or ACB address          02817000
         AIF   (&MSW).MODE24B           Go if 31-bit form          @L1A 02825500
         STCM  0,B'0111',&ACTR.+1(1)    Store DCB or ACB address   @L3A 02834000
         AGO   .SHORTA1                                            @L3A 02842500
.MODE24B ST    0,&ACTR.+4(,1)           Store DCB or ACB address   @L3C 02851000
         AGO   .SHORTA1                                            @L3A 02859500
.* DCB or ACB in register but must save existing option 2, not 1.  @L3A 02868000
.OPTB    AIF   (&MSW).OPTB1             Branch if 31-bit form      @L3M 02876500
         STCM  &PARA,B'0111',&ACTR.+1(1) Store DCB or ACB address  @L3C 02885000
         AGO   .SHORTA1                                            @L3A 02893500
.OPTB1   ST    &PARA,&ACTR.+4(,1)       Store DCB or ACB address   @L3C 02902000
.SHORTA1 NI    &ACTR.(1),X'F0'          Clear option 1 bits             02910500
         AIF   (&ASUM EQ 0).INCRMT                                      02920000
         OI    &ACTR.(1),&ASUM          Set option 1 bits               02940000
         AGO   .INCRMT                                                  02960000
.* No option override coded.  Test for DCB or ACB override.        @L3A 03010000
.NULLTWO AIF   (&NULLSW).INCRMT         Go if no DCB or ACB             03060000
         AIF   ('&PAR1(&CTR)'(1,1) EQ '(').REGSTER                      03220000
         LA    0,&PAR1(&CTR)            Get DCB or ACB address          03234000
         AIF   (NOT &MSW).MODE24E       Go if 24-bit form          @L1A 03248000
         ST    0,&ACTR.+4(,1)           Store DCB or ACB address   @L3C 03262000
         AGO   .INCRMT                                             @L3A 03276000
.MODE24E STCM  0,B'0111',&ACTR.+1(1)    Store DCB or ACB address   @L3C 03290000
         AGO   .INCRMT                                             @L3A 03304000
.* Handle DCB or ACB address in register for execute form.         @L3A 03318000
.REGSTER ANOP                                                      @L3A 03332000
&LGTH    SETA  K'&PAR1(&CTR)-2          Count chars in parentheses @L3M 03346000
&PARA    SETC  '&PAR1(&CTR)'(2,&LGTH)   Extract characters         @L3M 03360000
         AIF   (&MSW).MODE24F           Go if doing 31-bit form    @L3M 03374000
         STCM  &PARA,B'0111',&ACTR.+1(1) Store DCB or ACB address  @L3A 03388000
         AGO   .INCRMT                                             @L3A 03402000
.MODE24F ST    &PARA,&ACTR.+4(,1)       Store DCB or ACB address   @L3C 03416000
.* Advance to next DCB or ACB and options for execute form.        @L3A 03430000
.INCRMT  ANOP                                                      @L3M 03444000
&CTR     SETA  &CTR+2                   Advance to next DCB or ACB @L3M 03458000
&CTR1    SETA  &CTR1+2                  Advance to next option     @L3M 03472000
&ACTR    SETA  &ACTR+4                  Advance list offset        @L3M 03486000
         AIF   (NOT &MSW).MODE24K       Go if 24-bit form          @L3M 03500000
&ACTR    SETA  &ACTR+4                Advance to next 31-bit entry @L3M 03514000
.MODE24K ANOP                                                      @L3M 03528000
&OPT2SW  SETB  0                        Reset switch for next time @L3M 03542000
&NULLSW  SETB  0                        Reset switch for next time @L3M 03556000
         AGO   .LOOPB                                              @L3M 03570000
.* Handle last DCB or ACB.  An option was coded for it.            @L3A 03584000
.THRUNOW AIF   (NOT &OPT2SW).OPTD       Go if no or one option     @L3M 03598000
         NI    &ACTR.(1),X'80'          CLEAR OPTION BITS          @L3M 03612000
         AGO   .SHORTE                                             @L3A 03626000
.OPTD    NI    &ACTR.(1),X'F0'          CLEAR OPTION 1 BITS        @L3M 03640000
.SHORTE  AIF   (&ASUM EQ 0).CONTA                                  @L3M 03654000
         OI    &ACTR.(1),&ASUM          INSERT OPTION BITS         @L3M 03668000
.CONTA   AIF   (&NULLSW).RGFLIP         Go if no DCB or ACB        @L3M 03682000
.* Handle last DCB or ACB.                                         @L3A 03696000
.QUITNOW AIF   ('&PAR1(&CTR)'(1,1) EQ '(').REGST                   @L1C 03710000
         LA    0,&PAR1(&CTR)            Get DCB or ACB address          03724000
         AIF   (&MSW).MODE24G           Go if 31-bit form          @L3A 03738000
         STCM  0,B'0111',&ACTR.+1(1)    Store DCB or ACB address   @L3A 03752000
         AGO   .RGFLIP                                             @L3A 03766000
.MODE24G ST    0,&ACTR.+4(,1)           Store DCB or ACB address   @L3C 03780000
         AGO   .RGFLIP                                             @L3A 03794000
.REGST   ANOP                 Last DCB or ACB address in register       03808000
&LGTH    SETA  K'&PAR1(&CTR)-2          Count chars in parentheses      03822000
&PARA    SETC  '&PAR1(&CTR)'(2,&LGTH)   Extract characters              03836000
         AIF   (&MSW).MODE24H           Go if 31-bit form          @L3C 03850000
         STCM  &PARA,B'0111',&ACTR.+1(1) Store DCB or ACB address  @L3C 03864000
         AGO   .RGFLIP                                             @L3A 03878000
.MODE24H ST    &PARA,&ACTR.+4(,1)       Store DCB or ACB address   @L3C 03892000
.RGFLIP  AIF   (NOT &MSW).SVCSVC        MODE=24....BRANCH          @L1A 03906000
         LR    0,1                      Set parameter list addr    @L3C 03920000
         SR    1,1                      Set indicator of 31-bit    @L1A 03934000
.*--------------------------------------------------------------------- 03950000
.SVCSVC  AIF   (&IHBRDJ).FINI           Go if called for RDJFCB SA51997 03965000
         AIF   ('&TYPE' EQ 'J').SVC22   IF TYPE=J                       03980000
         SVC   19                       Issue OPEN SVC                  04000000
         MEXIT                                                          04020000
.SVC22   SVC   22                       Issue OPEN TYPE=J SVC           04040000
         MEXIT                                                          04060000
.ERROR1  IHBERMAC 49,,&PAR1(&CTR1)  Invalid option operand              04070000
         MEXIT                                                          04080000
.ERROR3  IHBERMAC 35,,&MF     INVALID MF OPERAND SPECIFIED              04090000
         MEXIT                                                          04100000
.ERROR5  IHBERMAC 6           DCB missing                               04110000
         MEXIT                                                          04120000
.ERROR6  IHBERMAC 69          INVALID REG NOTATION W/MF=L               04122600
         MEXIT                                                     @L1A 04125200
.ERROR7  IGGERMAC 200         MODE=31 & TYPE=J combination invalid @L1A 04129100
         MEXIT                                                          04133000
.ERROR8  IHBERMAC 63,,&TYPE   INVALID TYPE OPERAND                M0626 04134700
         MEXIT                                                     @L1A 04136400
.ERROR9  IGGERMAC 201         INVALID MODE OPERAND                 @L1A 04137300
         MEXIT                                                     @L3A 04138200
.ERROR10 IGGERMAC 203,OPEN    THE OPEN MACRO DOES NOT SUPPORT      @L3A 04138300
         MEXIT                  SYSSTATE AMODE64=YES               @L3A 04138400
.ERROR11 IGGERMAC 204,OPEN    THE OPEN MACRO DOES NOT SUPPORT      @L3A 04138500
         MEXIT                  SYSSTATE ASCENV=AR OR ANY          @L3A 04138600
.*                                                           D 2   @01D 04139000
.FINI    MEND                                                           04140000
**/  OPEN: MACRO KEYS(DCB_NAME,DCB_ADDR,MODE,TYPE_J,RETCODE,   /*@L2A*/ 04190000
*             MF);                                             /*@L2A*/ 04240000
* ANS('? '!!MACLABEL!! ' OPENP '!!MACKEYS!!';') RESCAN SKIP;   /*@L2A*/ 04290000
*  %END OPEN;                                                  /*@L2A*/ 04340000
