*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IWM4MDEL                              -07/17/13-<0> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  Delete delay monitoring environment           * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5650-ZOS COPYRIGHT IBM CORP. 2013                               * 00001200
*                                                                     * 00001300
* STATUS= HBB7790                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      The purpose of this service is to delete a delay monitoring    * 00002100
*      environment, so that MVS state sampling will no longer monitor * 00002200
*      for new work requests to be associated with the input          * 00002300
*      monitoring token.                                              * 00002400
*                                                                     * 00002500
*      The Delete macro is provided in list, execute, and standard    * 00002600
*      form.  The list form accepts no variable parameters and is     * 00002700
*      used only to reserve space for the parameter list.  The        * 00002800
*      standard form is provided for use with routines which do not   * 00002900
*      require reentrant code.  The execute form is provided for use  * 00003000
*      with the list format for reentrant routines.  The Delete macro * 00003100
*      is provided in PL/AS and assembler formats.                    * 00003200
*                                                                     * 00003300
*      The parameter list must be in the caller's primary address     * 00003400
*      space.                                                         * 00003500
*                                                                     * 00003600
*01* EXTERNAL CLASSIFICATION:  PI                                     * 00003700
*                                                                     * 00003800
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00003900
*                                                                     * 00004000
*01* ENVIRONMENT:                                                     * 00004100
*                                                                     * 00004200
*                                                                     * 00004300
*      Dispatchable unit mode: Task or SRB mode.                      * 00004400
*                                                                     * 00004500
*      Minimum authorization: Supervisor state or program key mask    * 00004600
*                        (PKM) allowing keys 0-7.                     * 00004700
*                                                                     * 00004800
*      AMODE:            31- or 64-bit.  If in 64-Bit addressing      * 00004900
*                        mode, code SYSSTATE AMODE64=YES before       * 00005000
*                        invoking this macro.                         * 00005100
*                                                                     * 00005200
*      ASC mode:         Primary.                                     * 00005300
*                                                                     * 00005400
*      Cross Memory Mode: Any PASN, any HASN, any SASN.               * 00005500
*                                                                     * 00005600
*      Interrupt status: Enabled for I/O and external interrupts.     * 00005700
*                                                                     * 00005800
*      Locks:            Unlocked, but FRRs are allowed.              * 00005900
*                                                                     * 00006000
*      Control parameters: Control parameters must be in the primary  * 00006100
*                        address space.                               * 00006200
*                                                                     * 00006300
*01* RESTRICTIONS:                                                    * 00006400
*                                                                     * 00006500
*                                                                     * 00006600
*    1.  This macro may not be used prior to the completion of WLM    * 00006700
*        address space initialization                                 * 00006800
*                                                                     * 00006900
*    2.  If the key specified on IWM4MCRE was a user key (8-F), then  * 00007000
*        the following must ALL be true:                              * 00007100
*                                                                     * 00007200
*                                                                     * 00007300
*        o   caller must be in non-cross-memory mode (P=S=H). This    * 00007400
*            implies that the current primary must match the primary  * 00007500
*            at the time that IWM4MCRE was invoked.  Running in a     * 00007600
*            subspace is not supported.                               * 00007700
*                                                                     * 00007800
*        o   must be in TCB mode (not SRB)                            * 00007900
*                                                                     * 00008000
*        o   current TCB must match the TCB at the time that IWM4MCRE * 00008100
*            was invoked.                                             * 00008200
*                                                                     * 00008300
*                                                                     * 00008400
*                                                                     * 00008500
*    3.  The caller must serialize to prevent any delay monitoring    * 00008600
*        services from being invoked concurrently or subsequently for * 00008700
*        the environment represented by the monitoring token          * 00008800
*                                                                     * 00008900
*    4.  This service should not be invoked while in a RTM            * 00009000
*        termination routine (resource manager) for the TCB owning    * 00009100
*        the monitoring environment since MVS will have its own       * 00009200
*        resource cleanup routine and unpredictable results would     * 00009300
*        occur.  It is legitimate to use this service while in a      * 00009400
*        recovery routine, however, or in mainline processing.        * 00009500
*                                                                     * 00009600
*    5.  This macro may only be used on z/OS V2R1 or higher.          * 00009700
*                                                                     * 00009800
*                                                                     * 00009900
*                                                                     * 00010000
*01* INPUT REGISTER INFORMATION:                                      * 00010100
*    Before issuing the IWM4MDEL macro, the caller does not have to   * 00010200
*    place any information into any register unless using it in       * 00010300
*    register notation for a particular parameter, or using it as a   * 00010400
*    base register.                                                   * 00010500
*                                                                     * 00010600
*                                                                     * 00010700
*                                                                     * 00010800
*01* INPUT REGISTERS:  GR0-GR1     Reserved                           * 00010900
*                      GR2-GR13    Undefined                          * 00011000
*                      GR14-GR15   Reserved                           * 00011100
*                      AR0-AR1     Reserved                           * 00011200
*                      AR2-AR13    Undefined                          * 00011300
*                      AR14-AR15   Reserved                           * 00011400
*                                                                     * 00011500
*01* OUTPUT REGISTERS: GR0         Reason code if GR15 return code is * 00011600
*                                  non-zero                           * 00011700
*                      GR1         Used as a work register by the     * 00011800
*                                  macro                              * 00011900
*                      GR2-GR13    Unchanged                          * 00012000
*                      GR14        Used as a work register by the     * 00012100
*                                  macro                              * 00012200
*                      GR15        Return code                        * 00012300
*                      AR0-AR1     Used as a work register by the     * 00012400
*                                  macro                              * 00012500
*                      AR2-AR13    Unchanged                          * 00012600
*                      AR14-AR15   Used as a work register by the     * 00012700
*                                  macro                              * 00012800
*                                                                     * 00012900
*01* PERFORMANCE IMPLICATIONS:                                        * 00013000
*                                                                     * 00013100
*    None                                                             * 00013200
*                                                                     * 00013300
*01* SYNTAX:                                                          * 00013400
*                                                                     * 00013500
*Ýxlabel¨  IWM4MDEL  Ð  MONTKN=xmontkn                                * 00013600
*                    ¿ ,MONTKN64=xmontkn64                            * 00013700
*                     Ý,RETCODE=xretcode¨                             * 00013800
*                     Ý,RSNCODE=xrsncode¨                             * 00013900
*                     Ý,PLISTVER=»xplistver!IMPLIED_VERSIONº¨         * 00014000
*                    ÐÝ,MF=S¨                                         * 00014100
*                    ÔÝ,MF=(L,xmfctrl»,xmfattr!0Dº)¨                  * 00014200
*                    ¿Ý,MF=(E,xmfctrl»,COMPLETEº)¨                    * 00014300
*                                                                     * 00014400
*                                                                     * 00014500
*      Where:                                                         * 00014600
*                                                                     * 00014700
*                                                                     * 00014800
*      Ýxlabel¨                                                       * 00014900
*          is an optional symbol, starting in column 1, that is the   * 00015000
*          name on the IWM4MDEL macro invocation.  The name must      * 00015100
*          conform to the rules for an ordinary assembler language    * 00015200
*          symbol.                                                    * 00015300
*          DEFAULT: No name.                                          * 00015400
*                                                                     * 00015500
*                                                                     * 00015600
*                                                                     * 00015700
*                                                                     * 00015800
*      The following is a set of mutually exclusive keys.  This set   * 00015900
*      is required; only one key must be specified.                   * 00016000
*                                                                     * 00016100
*                                                                     * 00016200
*      MONTKN=xmontkn                                                 * 00016300
*          belongs to a set of mutually exclusive keys. It is the     * 00016400
*          name (RS-type), or address in register (2)-(12), of a 32   * 00016500
*          bit input which contains the delay monitoring token for    * 00016600
*          the environment to be deleted.                             * 00016700
*                                                                     * 00016800
*      MONTKN64=xmontkn64                                             * 00016900
*          belongs to a set of mutually exclusive keys. It is the     * 00017000
*          name (RS-type), or address in register (2)-(12), of a 64   * 00017100
*          bit input which contains the long delay monitoring token   * 00017200
*          for the environment to be deleted.                         * 00017300
*                                                                     * 00017400
*                                                                     * 00017500
*                                                                     * 00017600
*      End of a set of mutually exclusive required keys.              * 00017700
*                                                                     * 00017800
*                                                                     * 00017900
*                                                                     * 00018000
*      ÝRETCODE=xretcode¨                                             * 00018100
*          is the name (RS-type) of an optional fullword output       * 00018200
*          variable, or register (2)-(12) or (15), into which the     * 00018300
*          return code is to be copied from GPR 15.  If you specify   * 00018400
*          15, GPR15, REG15, or R15 (within or without parentheses),  * 00018500
*          the value will be left in GPR 15.                          * 00018600
*                                                                     * 00018700
*                                                                     * 00018800
*                                                                     * 00018900
*                                                                     * 00019000
*      ÝRSNCODE=xrsncode¨                                             * 00019100
*          is the name (RS-type) of an optional fullword output       * 00019200
*          variable into which the reason code is to be copied from   * 00019300
*          GPR 0.  If you specify 0, 00, GPR0, GPR00, REG0, REG00, or * 00019400
*          R0 (within or without parentheses), the value will be left * 00019500
*          in GPR 0.                                                  * 00019600
*                                                                     * 00019700
*                                                                     * 00019800
*                                                                     * 00019900
*                                                                     * 00020000
*      ÝPLISTVER=»xplistver!IMPLIED_VERSIONº¨                         * 00020100
*          is an optional byte input decimal value in the "0-0" range * 00020200
*          that specifies the macro version.  PLISTVER is the only    * 00020300
*          key allowed on the list form of MF and determines which    * 00020400
*          parameter list is generated.  Note that MAX may be         * 00020500
*          specified instead of a number, and the parameter list will * 00020600
*          be of the largest size currently supported. This size may  * 00020700
*          grow from release to release (thus possibly affecting the  * 00020800
*          amount of storage needed by your program).  If your        * 00020900
*          program can tolerate this, IBM recommends that you always  * 00021000
*          specify MAX when creating the list form parameter list as  * 00021100
*          that will ensure that the list form parameter list is      * 00021200
*          always long enough to hold whatever parameters might be    * 00021300
*          specified on the execute form.                             * 00021400
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00021500
*          default is the lowest version which allows all of the      * 00021600
*          parameters specified on the invocation to be processed.    * 00021700
*                                                                     * 00021800
*                                                                     * 00021900
*                                                                     * 00022000
*                                                                     * 00022100
*      ÝMF=»S!L!Eº¨                                                   * 00022200
*          is an optional keyword input which specifies the macro     * 00022300
*          form.                                                      * 00022400
*          DEFAULT: S                                                 * 00022500
*                                                                     * 00022600
*                                                                     * 00022700
*          ÝMF=S¨                                                     * 00022800
*              specifies the standard form of the macro.  The "S"     * 00022900
*              form generates code to put the parameters into an      * 00023000
*              in-line parameter list and invoke the desired service. * 00023100
*              Full checking for required macro keys is done along    * 00023200
*              with supplying defaults for omitted optional           * 00023300
*              parameters.                                            * 00023400
*                                                                     * 00023500
*          ÝMF=(L,xmfctrl»,xmfattr!0Dº)¨                              * 00023600
*              specifies the list form of the macro.  The "L" form    * 00023700
*              defines an area to be used for the parameter list.     * 00023800
*              Only the PLISTVER key may be specified on the          * 00023900
*              invocation.  All other macro parameters are flagged as * 00024000
*              errors.  If PLISTVER is not specified, the original    * 00024100
*              parameter list definition is used.                     * 00024200
*                                                                     * 00024300
*            ,xmfctrl                                                 * 00024400
*              is a required input.  It is the name of a storage area * 00024500
*              for the parameter list.                                * 00024600
*                                                                     * 00024700
*            »,xmfattr!0Dº                                            * 00024800
*              is an optional 60 character input string that varies   * 00024900
*              from 1 to 60 characters. Use it to force boundary      * 00025000
*              alignment of the parameter list. Use only 0F or 0D.    * 00025100
*              DEFAULT: 0D which forces the parameter list to a       * 00025200
*              doubleword boundary.                                   * 00025300
*                                                                     * 00025400
*          ÝMF=(E,xmfctrl»,COMPLETEº)¨                                * 00025500
*              specifies the execute form of the macro.  The "E" form * 00025600
*              generates code to put the parameters into the          * 00025700
*              parameter list specified by xmfctrl and provides full  * 00025800
*              syntax checking with default setting.                  * 00025900
*                                                                     * 00026000
*            ,xmfctrl                                                 * 00026100
*              is a required input.  It is the name (RS-type), or     * 00026200
*              address in register (1)-(12), of a storage area for    * 00026300
*              the parameter list.                                    * 00026400
*                                                                     * 00026500
*            »,COMPLETEº                                              * 00026600
*              is an optional keyword input which specifies the       * 00026700
*              degree of macro parameter syntax checking.             * 00026800
*              DEFAULT: COMPLETE                                      * 00026900
*                                                                     * 00027000
*                                                                     * 00027100
*              COMPLETE                                               * 00027200
*                  Checking for required macro keys is done and       * 00027300
*                  defaults are supplied for omitted optional         * 00027400
*                  parameters.                                        * 00027500
*                                                                     * 00027600
*                                                                     * 00027700
*                                                                     * 00027800
*                                                                     * 00027900
*                                                                     * 00028000
*                                                                     * 00028100
*                                                                     * 00028200
*01* ABEND CODES:  None.                                              * 00028300
*                                                                     * 00028400
*01* RETURN CODES:                                                    * 00028500
*                                                                     * 00028600
*                                                                     * 00028700
*            0    IwmRetCodeOk:  Successful completion.               * 00028800
*                                                                     * 00028900
*            4    IwmRetCodeWarning:  Successful completion, unusual  * 00029000
*                 conditions noted.                                   * 00029100
*                                                                     * 00029200
*                 HEX REASON   MEANING                                * 00029300
*                 CODE                                                * 00029400
*                                                                     * 00029500
*                                                                     * 00029600
*                 xxxx0402    IwmRsnCodeNoMonEnv:  Input monitoring   * 00029700
*                             token indicates no monitoring           * 00029800
*                             environment was established.            * 00029900
*                                                                     * 00030000
*                 xxxx0403    IwmRsnCodeMonEnvNotAlloc:  Input        * 00030100
*                             monitoring token does not reflect an    * 00030200
*                             allocated monitoring environment owned  * 00030300
*                             by the current home address space.      * 00030400
*                                                                     * 00030500
*                                                                     * 00030600
*                                                                     * 00030700
*                                                                     * 00030800
*            8    IwmRetCodeInvocError:  Invalid invocation           * 00030900
*                 environment or parameters                           * 00031000
*                                                                     * 00031100
*                 HEX REASON  MEANING                                 * 00031200
*                 CODE                                                * 00031300
*                                                                     * 00031400
*                                                                     * 00031500
*                 xxxx0802    IwmRsnCodeXmemUserKeyTkn:  Caller is in * 00031600
*                             cross-memory mode while the token was   * 00031700
*                             obtained in user key.                   * 00031800
*                                                                     * 00031900
*                 xxxx0803    IwmRsnCodeDisabled:  Caller is          * 00032000
*                             disabled.                               * 00032100
*                                                                     * 00032200
*                 xxxx0804    IwmRsnCodeLocked:  Caller is locked.    * 00032300
*                                                                     * 00032400
*                 xxxx0805    IwmRsnCodeMonEnvSwitchCont:  Input      * 00032500
*                             monitor token reflects a switch         * 00032600
*                             continuation                            * 00032700
*                                                                     * 00032800
*                 xxxx0806    IwmRsnCodeMonEnvParent:  Input          * 00032900
*                             monitoring token reflects a             * 00033000
*                             continuation to a dependent monitoring  * 00033100
*                             environment.                            * 00033200
*                                                                     * 00033300
*                 xxxx0808    IwmRsnCodeMonEnvDepCont:  Input         * 00033400
*                             monitoring token reflects a             * 00033500
*                             continuation from a parent monitoring   * 00033600
*                             environment.                            * 00033700
*                                                                     * 00033800
*                 xxxx0809    IwmRsnCodeSrbUserKeyTkn:  Caller is in  * 00033900
*                             SRB mode, while the token was obtained  * 00034000
*                             in a user key (8-F).                    * 00034100
*                                                                     * 00034200
*                 xxxx080A    IwmRsnCodeTcbNotOwnerUserKeyTkn:        * 00034300
*                             Current TCB is not the current owner,   * 00034400
*                             while the token was obtained in a user  * 00034500
*                             key (8-F).                              * 00034600
*                                                                     * 00034700
*                 xxxx080B    IwmRsnCodeBadPl:  Error accessing       * 00034800
*                             parameter list.                         * 00034900
*                                                                     * 00035000
*                 xxxx0823    IwmRsnCodeDatoff:  Caller invoked       * 00035100
*                             service while DATOFF                    * 00035200
*                                                                     * 00035300
*                 xxxx0824    IwmRsnCodeAmode24:  Caller invoked      * 00035400
*                             service but was was in 24 bit           * 00035500
*                             addressing mode.                        * 00035600
*                                                                     * 00035700
*                 xxxx0825    IwmRsnCodeAscModeNotPrimary:  Caller    * 00035800
*                             invoked service but was not DAT on      * 00035900
*                             Primary ASC mode.                       * 00036000
*                                                                     * 00036100
*                 xxxx0826    IwmRsnCodeTaskTerm:  Caller invoked     * 00036200
*                             service while task termination is in    * 00036300
*                             progress for the TCB associated with    * 00036400
*                             the owner.                              * 00036500
*                                                                     * 00036600
*                 xxxx0827    IwmRsnCodeRsvdNot0:  Reserved field in  * 00036700
*                             parameter list was non-zero             * 00036800
*                                                                     * 00036900
*                 xxxx0828    IwmRsnCodeBadVersion:  Version number   * 00037000
*                             in parameter list is not valid.         * 00037100
*                                                                     * 00037200
*                 xxxx082A    IwmRsnCodeMonEnvRelated:  Input monitor * 00037300
*                             token is related to a parent monitoring * 00037400
*                             environment                             * 00037500
*                                                                     * 00037600
*                                                                     * 00037700
*                                                                     * 00037800
*                                                                     * 00037900
*            10   IwmRetCodeCompError:  Component error               * 00038000
*                                                                     * 00038100
*                                                                     * 00038200
*                                                                     * 00038300
*                                                                     * 00038400
*01* REASON CODES:                                                    * 00038500
*                                                                     * 00038600
*       A unique reason code will be returned whenever the return     * 00038700
*       code is non-zero.  Reason codes, as appropriate, are defined  * 00038800
*       under their corresponding return code.  Reason code and       * 00038900
*       return code constants are defined within IWMYCON.  Note that  * 00039000
*       the high order halfword of register 0, and the reason code    * 00039100
*       variable when specified, may be non-zero and represents       * 00039200
*       diagnostic data which is NOT part of the external interface.  * 00039300
*       The high order halfword should thus be excluded from          * 00039400
*       comparison with the reason code values described above.  The  * 00039500
*       constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may be    * 00039600
*       used for this purpose.                                        * 00039700
*                                                                     * 00039800
*01* MODULE TYPE:  ASSEM MACRO                                        * 00039900
*                                                                     * 00040000
*02*   PROCESSOR:  ASSEM                                              * 00040100
*                                                                     * 00040200
*01* COMPONENT:  SCWLM                                                * 00040300
*                                                                     * 00040400
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00040500
*                                                                     * 00040600
*01* MACRO USAGE NOTES:                                               * 00040700
*                                                                     * 00040800
*                                                                     * 00040900
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00041000
*        global macro variable.  Any value other than 'NO' will       * 00041100
*        result in the macro expansion being printed.  The default is * 00041200
*        'YES'.  The following examples illustrate how the ZPRINT     * 00041300
*        variable should be set.                                      * 00041400
*                                                                     * 00041500
*                    GBLC &ZPRINT                                     * 00041600
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00041700
*                                                                     * 00041800
*                                                                     * 00041900
*    2.  All   keys   currently   contained  in  the  IWM4MDEL  macro * 00042000
*        correspond  to  version  0.   If you specify PLISTVER, use a * 00042100
*        value of 0 or MAX.                                           * 00042200
*                                                                     * 00042300
*                                                                     * 00042400
*    3.  The macro CVT must be included to use this macro.            * 00042500
*                                                                     * 00042600
*    4.  The macro IWMYCON must be included to use this macro.        * 00042700
*                                                                     * 00042800
*    5.  The  macro IWMPB must be in the library concatenation, since * 00042900
*        it is included by IWMYCON.                                   * 00043000
*                                                                     * 00043100
*    6.  Note  that  the  high  order halfword of register 0, and the * 00043200
*        reason  code  variable  when  specified, may be non-zero and * 00043300
*        represents diagnostic data which is NOT part of the external * 00043400
*        interface.   The high order halfword should thus be excluded * 00043500
*        from comparison with the reason code values described above. * 00043600
*        The  constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may * 00043700
*        be used for this purpose.                                    * 00043800
*                                                                     * 00043900
*                                                                     * 00044000
*                                                                     * 00044100
*01* CHANGE ACTIVITY:                                                 * 00044200
*                                                                     * 00044300
*   Flag LineItem  FMID    Date   ID    Comment                       * 00044400
*                                                                     * 00044500
*    $L0=LPBABV   HBB7790 111017 3241AH:  Initial version PB above 2G * 00044600
*    $P1=ME24623  HBB7790 120820 3241AH:  KEYUSED_MONTKN64            * 00044700
****** END OF SPECIFICATIONS *****************************************/ 00044800
*/********************************************************************* 00044900
         MACRO                                                          00045000
&XLABEL  IWM4MDEL &MONTKN=,&MONTKN64=,&RETCODE=,&RSNCODE=,&PLISTVER=,  *00045100
               &MF=                                                     00045200
.*                                                                      00045300
*              MACDATE -07/17/13-<0>                                    00045400
.*                                                                      00045500
.*******************************************************************    00045600
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00045700
.*******************************************************************    00045800
              GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                   00045900
              GBLC  &ZTEST      YES=TEST NO=NO TEST                     00046000
              GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX             00046100
.*                                                                      00046200
              GBLC  &ZIWM4MDEL  YES=MACRO USED AT LEAST ONCE            00046300
.*******************************************************************    00046400
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00046500
.*******************************************************************    00046600
              LCLC  &ZMS        ERROR MESSAGE WORK AREA                 00046700
              LCLC  &ZCNDX      SYSNDX CHARACTERS                       00046800
              LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED              00046900
              LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR             00047000
              LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE             00047100
              LCLA  &ZAWRK      USED AS A WORK AREA                     00047200
              LCLA  &ZASIZ      USED FOR SIZE OF VALUE                  00047300
              LCLA  &ZN         NUMERIC WORK VARIABLE                   00047400
              LCLC  &ZC         CHARACTER WORK VARIABLE                 00047500
              LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE             00047600
              LCLA  &ZTLA       VALUE TOO LONG VARIABLE                 00047700
              LCLC  &ZMAC_G     "G" or null                             00047800
&ZMAC_G       SETC  ''                                                  00047900
              LCLC  &ZMAC_LR                                            00048000
&ZMAC_LR      SETC  'LR'                                                00048100
              LCLC  &ZMAC_L                                             00048200
&ZMAC_L       SETC  'L'                                                 00048300
              LCLC  &ZMAC_ST                                            00048400
&ZMAC_ST      SETC  'ST'                                                00048500
              LCLC  &ZMAC_LLGT                                          00048600
&ZMAC_LLGT    SETC  'L'                                                 00048700
              LCLC  &ZMAC_LGR                                           00048800
&ZMAC_LGR     SETC  'LR'                                                00048900
              LCLC  &ZMAC_LG                                            00049000
&ZMAC_LG      SETC  'L'                                                 00049100
              LCLC  &ZMAC_STG                                           00049200
&ZMAC_STG     SETC  'ST'                                                00049300
              LCLA  &ZMACRET    MACRO RETURN CODE                       00049400
&ZMACRET      SETA  0           ASSUME NO ERRORS                        00049500
.*                                                                      00049600
              LCLC  &ZCSYSLIST(255)             NONXKEY, POS ARRAY      00049700
              LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()              00049800
              LCLA  &ZPLLEN     PARAMETER LIST LENGTH                   00049900
              LCLC  &ZENDBASEPL                 End of base PL          00050000
              LCLA  &ZPLWORKA   PARAMETER LIST LENGTH                   00050100
.*******************************************************************    00050200
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00050300
.*******************************************************************    00050400
              LCLA  &ZI         INDEX FOR ARRAY                         00050500
              LCLA  &ZJ         INDEX FOR PARMS                         00050600
              LCLA  &ZK         INDEX FOR PARSE                         00050700
              LCLA  &ZLO        LOW RANGE VALUE                         00050800
              LCLA  &ZHI        HIGH RANGE VALUE                        00050900
              LCLC  &ZW         WORK AREA FOR PARM                      00051000
.********************************************************************   00051100
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00051200
.********************************************************************   00051300
              GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL                 00051400
              GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE          00051500
              GBLA  &SYSALVL    SYSSTATE ARCHLVL                        00051600
              GBLC  &SYSAM64    SYSSTATE AMODE64                        00051700
.*                                                                      00051800
              AIF   (K'&SYSASCE GT 0).ZSYS4     SYS STATE DEFINED       00051900
              AIF   (K'&SYSSPLV GT 0).ZSYS2     SP LEVEL DEFINED        00052000
              SPLEVEL  TEST                                             00052100
.ZSYS2        ANOP  ,                                                   00052200
              AIF   ('&SYSSPLV' EQ '1').ZSYS3   PRE SP 3.1              00052300
              AIF   ('&SYSSPLV' EQ '2').ZSYS3   PRE SP 3.1              00052400
              SYSSTATE TEST                                             00052500
              AGO   .ZSYS4                                              00052600
.ZSYS3        ANOP  ,                                                   00052700
&SYSASCE      SETC  'P'         ASSUME SYSSTATE PRIMARY                 00052800
.ZSYS4        ANOP  ,                                                   00052900
              AIF   ('&SYSAM64' NE 'YES').ZSYSN64                       00053000
&ZMAC_LLGT    SETC 'LLGT'                                               00053100
&ZMAC_LGR     SETC 'LGR'                                                00053200
&ZMAC_LG      SETC 'LG'                                                 00053300
&ZMAC_STG     SETC 'STG'                                                00053400
.ZSYSN64      ANOP  ,                                                   00053500
&ZMAC_G       SETC 'G'                                                  00053600
&ZMAC_LR      SETC 'LGR'                                                00053700
&ZMAC_L       SETC 'LG'                                                 00053800
&ZMAC_ST      SETC 'STG'                                                00053900
.*******************************************************************    00054000
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00054100
.*******************************************************************    00054200
              LCLC  &XUSEDMONTKNKEY             ++ NAME                 00054300
              LCLC  &XMONTKN    ++ NAME                                 00054400
              LCLC  &XMONTKN64  ++ NAME                                 00054500
              LCLC  &XRETCODE   ++ NAME                                 00054600
              LCLC  &XRSNCODE   ++ NAME                                 00054700
              LCLA  &XPLISTVER  ++ VALUE                                00054800
              LCLC  &XMF        ++ VALUE                                00054900
              LCLC  &XMFCTRL    ++ NAME                                 00055000
              LCLC  &XMFATTR    ++ VALUE                                00055100
              LCLC  &XMFSCK     ++ VALUE                                00055200
.*******************************************************************    00055300
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00055400
.*******************************************************************    00055500
              LCLC  &ZXUSEDMONTKNKEY            ++ INPUT NAME           00055600
              LCLC  &ZXMONTKN   ++ INPUT NAME                           00055700
              LCLC  &ZXMONTKN64                 ++ INPUT NAME           00055800
              LCLC  &ZXRETCODE  ++ OUTPUT NAME                          00055900
              LCLC  &ZXRSNCODE  ++ OUTPUT NAME                          00056000
              LCLC  &ZXPLISTVER                 ++ INPUT VALUE          00056100
              LCLC  &ZXMF       ++ INPUT VALUE                          00056200
              LCLC  &ZXMFCTRL   ++ INPUT NAME                           00056300
              LCLC  &ZXMFATTR   ++ INPUT VALUE                          00056400
              LCLC  &ZXMFSCK    ++ INPUT VALUE                          00056500
.********************************************************************   00056600
.***AC.PLV01  PROCESS PLISTVER                                      *   00056700
.********************************************************************   00056800
&XPLISTVER      SETA  0                                                 00056900
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00057000
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00057100
&XPLISTVER      SETA  0                                                 00057200
.ZPLV0          ANOP  ,                                                 00057300
.*                                                                      00057400
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00057500
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00057600
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00057700
.*-------------------------------------------------------------------   00057800
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00057900
&ZMS            SETC  '"PLISTVER='                                      00058000
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00058100
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00058200
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00058300
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00058400
                AGO   .ZPVCK2                                           00058500
.ZPVCK3         ANOP  ,                                                 00058600
.*-------------------------------------------------------------------   00058700
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00058800
&ZMS            SETC  '"PLISTVER='                                      00058900
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00059000
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00059100
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00059200
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00059300
                AGO   .ZPVCKE                                           00059400
.ZPVCK2         ANOP  ,                                                 00059500
.*-------------------------------------------------------------------   00059600
&ZCVAL          SETC  '&PLISTVER(1)'                                    00059700
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00059800
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00059900
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00060000
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00060100
                AIF   (&ZN LE 0).ZPVCK4A   NOT HIGH                     00060200
.ZPVCK6         ANOP  ,                                                 00060300
&ZMS            SETC  '"PLISTVER='                                      00060400
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00060500
&ZMS            SETC  '&ZMS THE RANGE IS "0-0"'                         00060600
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00060700
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00060800
&XPLISTVER      SETA  0                                                 00060900
                AGO   .ZPVCKE                                           00061000
.*-------------------------------------------------------------------   00061100
.ZPVCK4A        ANOP  ,                                                 00061200
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00061300
&ZMS            SETC  'PLISTVER='                                       00061400
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00061500
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00061600
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00061700
                MNOTE 8,' &ZMS IS REQUIRED.'                            00061800
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00061900
                AGO   .ZPVCK5                                           00062000
.ZPVCK4         ANOP  ,                                                 00062100
&XPLISTVER      SETA  &PLISTVER(1)                                      00062200
.ZPVCK5         ANOP  ,                                                 00062300
.ZPVCKE         ANOP  ,                                                 00062400
.********************************************************************   00062500
.***AG.MF01 PROCESS MF MACRO FORMS                                      00062600
.********************************************************************   00062700
              ACTR  10000                                               00062800
.*------------------------------------------------------------------    00062900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00063000
&XMF          SETC  ''          INITIALIZE XVARIABLE                    00063100
.*-------------------------------------------------------------------   00063200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00063300
.ZG16         ANOP  ,                                                   00063400
&ZTLC         SETC 'S'                                                  00063500
              AIF   ('&MF(1)' NE '&ZTLC').ZG17                          00063600
&XMF          SETC  'S'         SET KEYWORD                             00063700
              AIF   (N'&MF LE 1).ZG16A          CK NUM                  00063800
&ZMS          SETC  '"MF='                                              00063900
&ZMS          SETC  '&ZMS.&MF"'                                         00064000
&ZMS          SETC  '&ZMS "MF"'                                         00064100
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00064200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00064300
.ZG16A        ANOP  ,                                                   00064400
.*-------------------------------------------------------------------   00064500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00064600
.ZG17         ANOP  ,                                                   00064700
&ZTLC         SETC 'L'                                                  00064800
              AIF   ('&MF(1)' NE '&ZTLC').ZG24                          00064900
&XMF          SETC  'L'         SET KEYWORD                             00065000
              AIF   (N'&MF LE 3).ZG17A          CK NUM                  00065100
&ZMS          SETC  '"MF='                                              00065200
&ZMS          SETC  '&ZMS.&MF"'                                         00065300
&ZMS          SETC  '&ZMS "MF"'                                         00065400
              MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'                00065500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00065600
.ZG17A        ANOP  ,                                                   00065700
.*-------------------------------------------------------------------   00065800
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00065900
              AIF   (N'&SYSLIST NE 0).ZG17B     POSITIONALS?            00066000
              AIF   ('&MONTKN' NE '').ZG17B     KEYS?                   00066100
              AIF   ('&MONTKN64' NE '').ZG17B   KEYS?                   00066200
              AIF   ('&RETCODE' NE '').ZG17B    KEYS?                   00066300
              AIF   ('&RSNCODE' NE '').ZG17B    KEYS?                   00066400
              AGO    .ZG17C     INVOCATION OKAY                         00066500
.ZG17B        ANOP  ,                                                   00066600
&ZMS          SETC  'THE "L" FORM OF "MF"'                              00066700
&ZMS          SETC  '&ZMS CAN ONLY HAVE'                                00066800
&ZMS          SETC  '&ZMS THE "PLISTVER" KEY'                           00066900
              MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'              00067000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00067100
.ZG17C        ANOP  ,                                                   00067200
.*-------------------------------------------------------------------   00067300
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00067400
&ZXMFCTRL     SETC  'INPUT'     SET IN/OUTPUT                           00067500
&XMFCTRL      SETC  '&MF(2,1)'  SET XVARIABLE                           00067600
              AIF   (N'&MF(2) GT 1).ZG19B       MULTI                   00067700
&XMFCTRL      SETC  '&MF(2)'    SET XVARIABLE                           00067800
.ZG19B        AIF   (K'&MF(2) GT 0).ZG19C                               00067900
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         00068000
&ZMS          SETC  'WHEN "L" IS SPECIFIED'                             00068100
&ZMS          SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'                 00068200
              MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                        00068300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00068400
.ZG19C        ANOP  ,                                                   00068500
.*-------------------------------------------------------------------   00068600
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00068700
              AIF   (K'&ZXMFCTRL LE 0).ZG19P    NOT I/O                 00068800
              AIF   ('&XMFCTRL'(1,1) NE '(').ZG19P                      00068900
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         00069000
&ZMS          SETC  '"MF='                                              00069100
&ZMS          SETC  '&ZMS.&MF"'                                         00069200
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           00069300
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'                   00069400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00069500
.ZG19P        ANOP  ,                                                   00069600
.*-------------------------------------------------------------------   00069700
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00069800
&ZXMFATTR     SETC  'INPUT'     SET IN/OUTPUT                           00069900
&XMFATTR      SETC  '0D'                                                00070000
              AIF   (K'&MF(3) LE 0).ZG22B       PARM                    00070100
&XMFATTR      SETC  '&MF(3,1)'  SET XVARIABLE                           00070200
              AIF   (N'&MF(3) GT 1).ZG22B       MULTI                   00070300
&XMFATTR      SETC  '&MF(3)'    SET XVARIABLE                           00070400
.ZG22B        ANOP  ,                                                   00070500
.*-------------------------------------------------------------------   00070600
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00070700
              AIF   (K'&ZXMFATTR LE 0).ZG22P    NOT I/O                 00070800
              AIF   ('&XMFATTR'(1,1) NE '(').ZG22P                      00070900
&ZXMFATTR     SETC  ''          RESET IN/OUTPUT                         00071000
&ZMS          SETC  '"MF='                                              00071100
&ZMS          SETC  '&ZMS.&MF"'                                         00071200
&ZMS          SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'           00071300
              MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'                   00071400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00071500
.ZG22P        ANOP  ,                                                   00071600
.*-------------------------------------------------------------------   00071700
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00071800
              AIF   (K'&ZXMFATTR LE 0).ZG22S    NOT I/O                 00071900
              AIF   (K'&XMFATTR LE 60).ZG22S    LNG OK                  00072000
&ZXMFATTR     SETC  ''          RESET IN/OUTPUT                         00072100
&ZMS          SETC  '"MF='                                              00072200
&ZMS          SETC  '&ZMS.&MF"'                                         00072300
&ZMS          SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'               00072400
              MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'                  00072500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00072600
.ZG22S        ANOP  ,                                                   00072700
.*-------------------------------------------------------------------   00072800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00072900
.ZG24         ANOP  ,                                                   00073000
&ZTLC         SETC 'E'                                                  00073100
              AIF   ('&MF(1)' NE '&ZTLC').ZG32                          00073200
&XMF          SETC  'E'         SET KEYWORD                             00073300
              AIF   (N'&MF LE 3).ZG24A          CK NUM                  00073400
&ZMS          SETC  '"MF='                                              00073500
&ZMS          SETC  '&ZMS.&MF"'                                         00073600
&ZMS          SETC  '&ZMS "MF"'                                         00073700
              MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'                00073800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00073900
.ZG24A        ANOP  ,                                                   00074000
.*-------------------------------------------------------------------   00074100
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00074200
&ZXMFCTRL     SETC  'INPUT'     SET IN/OUTPUT                           00074300
&XMFCTRL      SETC  '&MF(2,1)'  SET XVARIABLE                           00074400
              AIF   (N'&MF(2) GT 1).ZG26B       MULTI                   00074500
&XMFCTRL      SETC  '&MF(2)'    SET XVARIABLE                           00074600
.ZG26B        AIF   (K'&MF(2) GT 0).ZG26C                               00074700
&ZXMFCTRL     SETC  ''          RESET IN/OUTPUT                         00074800
&ZMS          SETC  'WHEN "E" IS SPECIFIED'                             00074900
&ZMS          SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'                 00075000
              MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                        00075100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00075200
.ZG26C        ANOP  ,                                                   00075300
.*-------------------------------------------------------------------   00075400
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00075500
              AIF   (K'&ZXMFCTRL LE 0).ZG26R    NOT I/O                 00075600
              AIF   ('&XMFCTRL'(1,1) NE '(').ZG26R                      00075700
&ZCGPR        SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                          00075800
              AIF   ('&ZCGPR'(1,1) NE '0').ZG26P                        00075900
              AIF   (K'&ZCGPR GT 2).ZG26Q                               00076000
              AIF   ('&ZCGPR' EQ '0').ZG26Q                             00076100
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00076200
              AIF   (T'&ZCGPR NE 'N').ZG26Q     INVALID REG NAME        00076300
.ZG26P        ANOP  ,                                                   00076400
              AIF   (T'&ZCGPR NE 'N').ZG26R     NON NUMERIC             00076500
              AIF   ('&ZCGPR' LT '1').ZG26Q                             00076600
              AIF   ('&ZCGPR' LE '12').ZG26R                            00076700
.ZG26Q        ANOP  ,                                                   00076800
&ZMS          SETC  '"MF='                                              00076900
&ZMS          SETC  '&ZMS.&MF"'                                         00077000
&ZMS          SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'           00077100
              MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                    00077200
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00077300
.ZG26R        ANOP  ,                                                   00077400
.*-------------------------------------------------------------------   00077500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00077600
&XMFSCK       SETC  ''          INITIALIZE XVARIABLE                    00077700
.ZG30A   AIF   ('&MF(3)' NE 'COMPLETE').ZG31A                           00077800
&XMFSCK       SETC  'COMPLETE'  SET KEYWORD                             00077900
.*-------------------------------------------------------------------   00078000
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00078100
.ZG31A        AIF   (K'&XMFSCK GT 0).ZG31C      KEYWORD                 00078200
              AIF   (K'&MF(3) LE 0).ZG31B                               00078300
&ZMS          SETC  '"MF='                                              00078400
&ZMS          SETC  '&ZMS.&MF"'                                         00078500
&ZMS          SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '           00078600
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00078700
&ZMS          SETC  '&ZMS "COMPLETE".'                                  00078800
              MNOTE 8,' &ZMS '                                          00078900
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00079000
.ZG31B        ANOP  ,                                                   00079100
&XMFSCK       SETC  'COMPLETE'  SET DEFAULT KEYWORD                     00079200
.ZG31C        ANOP  ,                                                   00079300
&ZXMFSCK      SETC  'INPUT'     SET IN/OUTPUT                           00079400
.*------------------------------------------------------------------    00079500
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00079600
.ZG32         ANOP  ,                                                   00079700
&ZXMF         SETC  'INPUT'     SET IN/OUTPUT                           00079800
              AIF   (K'&XMF GT 0).ZG32E         VALID ARG               00079900
              AIF   (T'&MF EQ 'O').ZG32D        OMITTED                 00080000
&ZASYSLNDX    SETA  0                                                   00080100
.ZG32A        ANOP  ,           POSITIONAL MACRO KEY                    00080200
&ZASYSLNDX    SETA  &ZASYSLNDX+1                                        00080300
              AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG32C                    00080400
&ZTLC         SETC 'MF'                                                 00080500
              AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG32A           00080600
.ZG32B        ANOP  ,                                                   00080700
&ZXMF         SETC  ''          RESET IN/OUTPUT                         00080800
&ZMS          SETC  'THE "MF" KEY'                                      00080900
&ZMS          SETC  '&ZMS MUST CONTAIN ONE'                             00081000
              MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                    00081100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00081200
              AGO   .ZG32E                                              00081300
.ZG32C        ANOP  ,                                                   00081400
&ZXMF         SETC  ''          RESET IN/OUTPUT                         00081500
&ZMS          SETC  '"MF='                                              00081600
&ZMS          SETC  '&ZMS.&MF"'                                         00081700
&ZMS          SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '           00081800
&ZMS          SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'                 00081900
&ZMS          SETC  '&ZMS "S",'                                         00082000
&ZMS          SETC  '&ZMS "L",'                                         00082100
&ZMS          SETC  '&ZMS OR "E".'                                      00082200
              MNOTE 8,' &ZMS '                                          00082300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00082400
              AGO   .ZG32E                                              00082500
.ZG32D        ANOP  ,                                                   00082600
&XMF          SETC  'S'         SET DEFAULT KEYWORD                     00082700
&XMFSCK       SETC  'COMPLETE'  COMPLETE CHECKING                       00082800
.ZG32E        ANOP  ,                                                   00082900
.********************************************************************   00083000
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00083100
.********************************************************************   00083200
              ACTR  10000                                               00083300
.*-------------------------------------------------------------------   00083400
.***AG.MF03 MF=(SLE)                                                    00083500
              AIF   ('&XMF' EQ 'L').ZGMFX                               00083600
.*----------------------------------------------------------------***   00083700
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00083800
&XUSEDMONTKNKEY                 SETC  ''        INITIALIZE XVARIABLE    00083900
              AIF   (K'&MONTKN LE 0).ZG2C                               00084000
&ZXUSEDMONTKNKEY                SETC  'INPUT'   SET IN/OUTPUT           00084100
&XUSEDMONTKNKEY                 SETC  'MONTKN'  SET XVARIABLE           00084200
&ZXMONTKN     SETC  'INPUT'     SET IN/OUTPUT                           00084300
&XMONTKN      SETC  '&MONTKN(1)'                SET XVARIABLE PARM      00084400
              AIF   (N'&MONTKN GT 1).ZG2A                               00084500
&XMONTKN      SETC  '&MONTKN'   SET XVARIABLE PARM                      00084600
.ZG2A         AIF   (N'&MONTKN LE 1).ZG2B       CK NUM                  00084700
&ZMS          SETC  '"MONTKN='                                          00084800
&ZMS          SETC  '&ZMS.&MONTKN"'                                     00084900
&ZMS          SETC  '&ZMS "MONTKN"'                                     00085000
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00085100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00085200
.ZG2B         AIF   (K'&XMONTKN GT 0).ZG2C      ONE PARM                00085300
&ZXUSEDMONTKNKEY                SETC  ''        RESET IN/OUTPUT         00085400
&ZXMONTKN     SETC  ''          RESET IN/OUTPUT                         00085500
&ZMS          SETC  ' '                                                 00085600
&ZMS          SETC  '&ZMS "MONTKN" KEY AND ITS'                         00085700
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00085800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00085900
.ZG2C         ANOP  ,                                                   00086000
.*----------------------------------------------------------------***   00086100
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00086200
              AIF   (K'&MONTKN64 LE 0).ZG3D     NO ME KEY               00086300
              AIF   (N'&MONTKN64 LE 1).ZG3A     CK NUM                  00086400
&ZMS          SETC  '"MONTKN64='                                        00086500
&ZMS          SETC  '&ZMS.&MONTKN64"'                                   00086600
&ZMS          SETC  '&ZMS "MONTKN64"'                                   00086700
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00086800
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00086900
.ZG3A         AIF   (K'&XUSEDMONTKNKEY LE 0).ZG3B                       00087000
&ZMS          SETC  '"MONTKN64'                                         00087100
&ZMS          SETC  '&ZMS.=&MONTKN64"'                                  00087200
&ZMS          SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'               00087300
&ZMS          SETC  '&ZMS "&XUSEDMONTKNKEY"'                            00087400
              MNOTE 8,' &ZMS KEY.'                                      00087500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00087600
              AGO   .ZG3D                                               00087700
.*                                                                      00087800
.ZG3B         ANOP  ,                                                   00087900
&ZXUSEDMONTKNKEY                SETC  'INPUT'   SET IN/OUTPUT           00088000
&XUSEDMONTKNKEY                 SETC  'MONTKN64'  SET XVARIABLE         00088100
&ZXMONTKN64   SETC  'INPUT'     SET IN/OUTPUT                           00088200
&XMONTKN64    SETC  '&MONTKN64(1)'              SET XVARIABLE PARM      00088300
              AIF   (N'&MONTKN64 GT 1).ZG3C                             00088400
&XMONTKN64    SETC  '&MONTKN64'                 SET XVARIABLE PARM      00088500
.ZG3C         AIF   (K'&XMONTKN64 GT 0).ZG3D    ONE PARM                00088600
&ZXUSEDMONTKNKEY                SETC  ''        RESET IN/OUTPUT         00088700
&ZXMONTKN64   SETC  ''          RESET IN/OUTPUT                         00088800
&ZMS          SETC  ' '                                                 00088900
&ZMS          SETC  '&ZMS "MONTKN64" KEY AND ITS'                       00089000
              MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                    00089100
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00089200
.ZG3D         ANOP  ,                                                   00089300
.*------------------------------------------------------------------    00089400
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           00089500
              AIF   (K'&XUSEDMONTKNKEY GT 0).ZG4B                       00089600
&ZXUSEDMONTKNKEY                SETC  ''        RESET IN/OUTPUT         00089700
&ZXMONTKN     SETC  ''          RESET IN/OUTPUT                         00089800
&XUSEDMONTKNKEY                 SETC  ''        ENSURE NULL             00089900
&XMONTKN      SETC  ''          ENSURE NULL                             00090000
&ZMS          SETC  'ONE OF THE FOLLOWING'                              00090100
&ZMS          SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'                 00090200
&ZMS          SETC  '&ZMS REQUIRED:'                                    00090300
&ZMS          SETC  '&ZMS "MONTKN"'             VALID ME KEY            00090400
&ZMS          SETC  '&ZMS OR "MONTKN64".'       VALID ME KEY            00090500
              MNOTE 8,' &ZMS '                                          00090600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00090700
.ZG4B         ANOP  ,                                                   00090800
.*-------------------------------------------------------------------   00090900
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00091000
.ZG2ZY  AIF    ('&XUSEDMONTKNKEY' NE 'MONTKN').ZG3ZY                    00091100
.*-------------------------------------------------------------------   00091200
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00091300
              AIF   (K'&ZXMONTKN LE 0).ZG2R     NOT I/O                 00091400
              AIF   ('&XMONTKN'(1,1) NE '(').ZG2R                       00091500
&ZCGPR        SETC  '&XMONTKN'(2,K'&XMONTKN-2)                          00091600
              AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                         00091700
              AIF   (K'&ZCGPR GT 2).ZG2Q                                00091800
              AIF   ('&ZCGPR' EQ '0').ZG2Q                              00091900
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00092000
              AIF   (T'&ZCGPR NE 'N').ZG2Q      INVALID REG NAME        00092100
.ZG2P         ANOP  ,                                                   00092200
              AIF   (T'&ZCGPR NE 'N').ZG2R      NON NUMERIC             00092300
              AIF   ('&ZCGPR' LT '2').ZG2Q                              00092400
              AIF   ('&ZCGPR' LE '12').ZG2R                             00092500
.ZG2Q         ANOP  ,                                                   00092600
&ZMS          SETC  '"MONTKN='                                          00092700
&ZMS          SETC  '&ZMS.&MONTKN"'                                     00092800
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00092900
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00093000
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00093100
.ZG2R         ANOP  ,                                                   00093200
.*-------------------------------------------------------------------   00093300
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00093400
.ZG3ZY  AIF    ('&XUSEDMONTKNKEY' NE 'MONTKN64').ZG4ZY                  00093500
.*-------------------------------------------------------------------   00093600
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00093700
              AIF   (K'&ZXMONTKN64 LE 0).ZG3R   NOT I/O                 00093800
              AIF   ('&XMONTKN64'(1,1) NE '(').ZG3R                     00093900
&ZCGPR        SETC  '&XMONTKN64'(2,K'&XMONTKN64-2)                      00094000
              AIF   ('&ZCGPR'(1,1) NE '0').ZG3P                         00094100
              AIF   (K'&ZCGPR GT 2).ZG3Q                                00094200
              AIF   ('&ZCGPR' EQ '0').ZG3Q                              00094300
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00094400
              AIF   (T'&ZCGPR NE 'N').ZG3Q      INVALID REG NAME        00094500
.ZG3P         ANOP  ,                                                   00094600
              AIF   (T'&ZCGPR NE 'N').ZG3R      NON NUMERIC             00094700
              AIF   ('&ZCGPR' LT '2').ZG3Q                              00094800
              AIF   ('&ZCGPR' LE '12').ZG3R                             00094900
.ZG3Q         ANOP  ,                                                   00095000
&ZMS          SETC  '"MONTKN64='                                        00095100
&ZMS          SETC  '&ZMS.&MONTKN64"'                                   00095200
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00095300
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                    00095400
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00095500
.ZG3R         ANOP  ,                                                   00095600
.*-------------------------------------------------------------------   00095700
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            00095800
.ZG4ZY        ANOP ,            END MUTUALLY EXCLUSIVE KEYS             00095900
.*----------------------------------------------------------------***   00096000
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00096100
              AIF   (N'&RETCODE LE 1).ZG6A      CK NUM                  00096200
&ZMS          SETC  '"RETCODE='                                         00096300
&ZMS          SETC  '&ZMS.&RETCODE"'                                    00096400
&ZMS          SETC  '&ZMS "RETCODE"'                                    00096500
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00096600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00096700
.ZG6A         ANOP  ,                                                   00096800
.*-------------------------------------------------------------------   00096900
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00097000
              AIF   (K'&RETCODE(1) LE 0).ZG6C   NO PARM                 00097100
&ZXRETCODE    SETC  'OUTPUT'    SET OUTPUT                              00097200
&XRETCODE     SETC  '&RETCODE(1)'               SET XVARIABLE           00097300
              AIF   (N'&RETCODE GT 1).ZG6C                              00097400
&XRETCODE     SETC  '&RETCODE'  SET XVARIABLE                           00097500
.ZG6C         ANOP  ,                                                   00097600
.*-------------------------------------------------------------------   00097700
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00097800
              AIF   (K'&ZXRETCODE LE 0).ZG6R    NOT I/O                 00097900
              AIF   ('&XRETCODE'(1,1) NE '(').ZG6R                      00098000
&ZCGPR        SETC  '&XRETCODE'(2,K'&XRETCODE-2)                        00098100
              AIF   ('&ZCGPR'(1,1) NE '0').ZG6P                         00098200
              AIF   (K'&ZCGPR GT 2).ZG6Q                                00098300
              AIF   ('&ZCGPR' EQ '0').ZG6Q                              00098400
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00098500
              AIF   (T'&ZCGPR NE 'N').ZG6Q      INVALID REG NAME        00098600
.ZG6P         ANOP  ,                                                   00098700
              AIF   (T'&ZCGPR NE 'N').ZG6R      NON NUMERIC             00098800
              AIF   ('&ZCGPR' EQ '15').ZG6R                             00098900
              AIF   ('&ZCGPR' LT '2').ZG6Q                              00099000
              AIF   ('&ZCGPR' LE '12').ZG6R                             00099100
.ZG6Q         ANOP  ,                                                   00099200
&ZMS          SETC  '"RETCODE='                                         00099300
&ZMS          SETC  '&ZMS.&RETCODE"'                                    00099400
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00099500
              MNOTE 8,' &ZMS IN THE RANGE (2)-(12) OR (15).'            00099600
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00099700
.ZG6R         ANOP  ,                                                   00099800
.*----------------------------------------------------------------***   00099900
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00100000
              AIF   (N'&RSNCODE LE 1).ZG9A      CK NUM                  00100100
&ZMS          SETC  '"RSNCODE='                                         00100200
&ZMS          SETC  '&ZMS.&RSNCODE"'                                    00100300
&ZMS          SETC  '&ZMS "RSNCODE"'                                    00100400
              MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'                 00100500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00100600
.ZG9A         ANOP  ,                                                   00100700
.*-------------------------------------------------------------------   00100800
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00100900
              AIF   (K'&RSNCODE(1) LE 0).ZG9C   NO PARM                 00101000
&ZXRSNCODE    SETC  'OUTPUT'    SET OUTPUT                              00101100
&XRSNCODE     SETC  '&RSNCODE(1)'               SET XVARIABLE           00101200
              AIF   (N'&RSNCODE GT 1).ZG9C                              00101300
&XRSNCODE     SETC  '&RSNCODE'  SET XVARIABLE                           00101400
.ZG9C         ANOP  ,                                                   00101500
.*-------------------------------------------------------------------   00101600
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00101700
              AIF   (K'&ZXRSNCODE LE 0).ZG9R    NOT I/O                 00101800
              AIF   ('&XRSNCODE'(1,1) NE '(').ZG9R                      00101900
&ZCGPR        SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                        00102000
              AIF   ('&ZCGPR'(1,1) NE '0').ZG9P                         00102100
              AIF   (K'&ZCGPR GT 2).ZG9Q                                00102200
              AIF   ('&ZCGPR' EQ '0').ZG9R                              00102300
&ZCGPR        SETC  '&ZCGPR'(2,1)                                       00102400
              AIF   (T'&ZCGPR NE 'N').ZG9Q      INVALID REG NAME        00102500
.ZG9P         ANOP  ,                                                   00102600
              AIF   (T'&ZCGPR NE 'N').ZG9R      NON NUMERIC             00102700
              AIF   ('&ZCGPR' EQ '0').ZG9R                              00102800
              AIF   ('&ZCGPR' LT '2').ZG9Q                              00102900
              AIF   ('&ZCGPR' LE '12').ZG9R                             00103000
.ZG9Q         ANOP  ,                                                   00103100
&ZMS          SETC  '"RSNCODE='                                         00103200
&ZMS          SETC  '&ZMS.&RSNCODE"'                                    00103300
&ZMS          SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'           00103400
              MNOTE 8,' &ZMS IN THE RANGE (0) OR (2)-(12).'             00103500
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00103600
.ZG9R         ANOP  ,                                                   00103700
.******************************************************************     00103800
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00103900
.******************************************************************     00104000
              ACTR  10000                                               00104100
.*----------------------------------------------------------------***   00104200
.***AH.P02 EXTRA POSITIONALS                                            00104300
              AIF   (N'&SYSLIST LE 0).ZGLISTX   NO EXTRAS               00104400
              AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL                00104500
              AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL            00104600
              AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL             00104700
.ZGLISTX1     ANOP  ,                                                   00104800
&ZCVAL        SETC  ''          ERROR FIELD                             00104900
&ZAWRK        SETA  0           POSITIONAL NUMBER                       00105000
.ZGLIST2      ANOP  ,                                                   00105100
&ZAWRK        SETA  &ZAWRK+1    NEXT POSITIONAL                         00105200
              AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE                00105300
&ZCVAL        SETC '&ZCVAL,&SYSLIST(&ZAWRK)'    EXTRA                   00105400
              AGO   .ZGLIST2                                            00105500
.*                                                                      00105600
.ZGLIST3      ANOP  ,                                                   00105700
&ZCVAL        SETC '&ZCVAL'(2,K'&ZCVAL-1)       STRIP COMMA             00105800
&ZMS          SETC  'POSITIONAL ARGUMENT(S),'                           00105900
&ZMS          SETC  '&ZMS "&ZCVAL"'                                     00106000
&ZMS          SETC  '&ZMS CANNOT BE USED.'                              00106100
&ZMS          SETC  '&ZMS NO POSITIONAL ARGUMENTS'                      00106200
              MNOTE 8,' &ZMS ARE ALLOWED.'                              00106300
&ZMACRET      SETA  8           SET MACRO ERROR RETURN CODE             00106400
.ZGLISTX      ANOP  ,                                                   00106500
&ZASYSLNDX    SETA  0                                                   00106600
.*-------------------------------------------------------------------   00106700
.***AG.MF04 MF=(SLE)                                                    00106800
.ZGMFX        ANOP  ,           END OF FULL SYNTAX CHECK                00106900
.*******************************************************************    00107000
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00107100
.*******************************************************************    00107200
              AIF   (&ZMACRET NE 0).ZLX2        ERROR DETECTED          00107300
.*******************************************************************    00107400
.***AE.01  START OF IWM4MDEL MACRO CODE                                 00107500
.*******************************************************************    00107600
              LCLC  &M0M0001                 NAME                       00107700
&M0M0001      SETC  '&XLABEL'                SET NAME                   00107800
              AIF   (K'&XLABEL NE 0).XLAB2                              00107900
&M0M0001      SETC  'M00M&SYSNDX'            DEFAULT NAME               00108000
.*                                                                      00108100
.XLAB2        ANOP  ,                                                   00108200
              AIF   ('&XMF' EQ 'L').XLAB3                               00108300
&M0M0001 DS    0H                             IWM4MDEL-0                00108400
.XLAB3        ANOP  ,                                                   00108500
.*******************************************************************    00108600
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00108700
.*******************************************************************    00108800
              PUSH  PRINT                                               00108900
              AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON          00109000
              PRINT OFF         ++ PR01                                 00109100
              AGO   .ZPRNTXX                                            00109200
.ZPRINTX      PRINT ON                                                  00109300
.ZPRNTXX      ANOP  ,                                                   00109400
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00109500
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00109600
.********************************************************************   00109700
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00109800
.********************************************************************   00109900
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00110000
                      LCLA  &ZOPN1         INVOCATION INDEX             00110100
                      LCLC  &ZOPL(4095)    LABEL                        00110200
                      LCLC  &ZOPO(4095)    OPERATION                    00110300
                      LCLC  &ZOPV(4095)    VALUE                        00110400
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00110500
.*                                                                      00110600
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00110700
.******************************************************************     00110800
.***AL.L10 IWM4MDEL FMT=LIST MF=S!L PARAMETERS                          00110900
.******************************************************************     00111000
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00111100
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00111200
&XMFCTRL              SETC  '#Z'.'&SYSNDX'.'A'                          00111300
&XMFATTR              SETC  '0D'                                        00111400
.*                                                                      00111500
&ZOPN                 SETA  &ZOPN+1                                     00111600
&ZOPL(&ZOPN)          SETC  ' '                                         00111700
&ZOPO(&ZOPN)          SETC  'CNOP'                                      00111800
&ZOPV(&ZOPN)          SETC  '4,8'                                       00111900
&ZOPN                 SETA  &ZOPN+1                                     00112000
&ZOPL(&ZOPN)          SETC  ' '                                         00112100
&ZOPO(&ZOPN)          SETC  'BRAS'                                      00112200
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              00112300
&ZOPD(&ZOPN)          SETC  '++ IWM4MDEL ARG PARMS'                     00112400
.*                                                                      00112500
&ZOPN                 SETA  &ZOPN+1                                     00112600
&ZOPL(&ZOPN)          SETC  ' '                                         00112700
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00112800
&ZOPV(&ZOPN)          SETC  '1'                                         00112900
&ZOPD(&ZOPN)          SETC  ' '                                         00113000
.*                                                                      00113100
.ZLMFSL2              ANOP  ,                                           00113200
.*-------------------------------------------------------------------   00113300
.***AM.L00  IWM4MDEL FMT=LIST name                                      00113400
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00113500
&ZOPN                 SETA &ZOPN+1                                      00113600
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00113700
&ZOPO(&ZOPN)          SETC 'EQU'                                        00113800
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00113900
&ZOPD(&ZOPN)          SETC '++ IWM4MDEL NAME'                           00114000
.ZLMFSL2M             ANOP  ,                                           00114100
.*-------------------------------------------------------------------   00114200
.***AM.L01  IWM4MDEL FMT=LIST PARAMETERS                                00114300
&ZOPN                 SETA &ZOPN+1                                      00114400
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00114500
&ZOPO(&ZOPN)          SETC 'DS'                                         00114600
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00114700
&ZOPD(&ZOPN)          SETC '++ IWM4MDEL PARM LIST'                      00114800
.*-------------------------------------------------------------------   00114900
.***AM.L02 XVERSION XL1                                                 00115000
&ZOPN                 SETA &ZOPN+1                                      00115100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00115200
&ZOPO(&ZOPN)          SETC 'DS'                                         00115300
&ZOPV(&ZOPN)          SETC 'XL1'                                        00115400
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00115500
.*-------------------------------------------------------------------   00115600
.***AM.L03 XOPTIONS BL.8                                                00115700
&ZOPN                 SETA &ZOPN+1                                      00115800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XOPTIONS'                         00115900
&ZOPO(&ZOPN)          SETC 'DS'                                         00116000
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00116100
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00116200
.*                                                                      00116300
&ZOPN                 SETA  &ZOPN+1                                     00116400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_MONTKN64'                00116500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00116600
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             00116700
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00116800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).MONTKN64'                     00116900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00117000
.*                                                                      00117100
&ZOPN                 SETA  &ZOPN+1                                     00117200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._IWM4MDEL'                        00117300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00117400
&ZOPV(&ZOPN)          SETC  'B''00000001'''                             00117500
&ZOPD(&ZOPN)          SETC  '++ MACUSED.'                               00117600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).IWM4MDEL'                     00117700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00117800
.*-------------------------------------------------------------------   00117900
.***AM.L09  XRSV0002 CL2                                                00118000
&ZOPN                 SETA &ZOPN+1                                      00118100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0002'                         00118200
&ZOPO(&ZOPN)          SETC 'DS'                                         00118300
&ZOPV(&ZOPN)          SETC 'CL2'                                        00118400
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00118500
.*-------------------------------------------------------------------   00118600
.***AM.L09  XMONTKN BL.32                                               00118700
&ZOPN                 SETA &ZOPN+1                                      00118800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMONTKN'                          00118900
&ZOPO(&ZOPN)          SETC 'DS'                                         00119000
&ZOPV(&ZOPN)          SETC 'BL.32'                                      00119100
&ZOPD(&ZOPN)          SETC '++ &ZXMONTKN '                              00119200
.*-------------------------------------------------------------------   00119300
.***AM.L09  XRSV0008 CL4                                                00119400
&ZOPN                 SETA &ZOPN+1                                      00119500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0008'                         00119600
&ZOPO(&ZOPN)          SETC 'DS'                                         00119700
&ZOPV(&ZOPN)          SETC 'CL4'                                        00119800
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00119900
.*-------------------------------------------------------------------   00120000
.***AM.L09  XMONTKN64 BL.64                                             00120100
&ZOPN                 SETA &ZOPN+1                                      00120200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMONTKN64'                        00120300
&ZOPO(&ZOPN)          SETC 'DS'                                         00120400
&ZOPV(&ZOPN)          SETC 'BL.64'                                      00120500
&ZOPD(&ZOPN)          SETC '++ &ZXMONTKN64 '                            00120600
.*-------------------------------------------------------------------   00120700
.***AM.L10 END OF IWM4MDEL LIST PARAMETERS                              00120800
&ZOPN                 SETA &ZOPN+1                                      00120900
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00121000
&ZOPO(&ZOPN)          SETC 'EQU'                                        00121100
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00121200
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00121300
.*                                                                      00121400
&ZOPN                 SETA &ZOPN+1                                      00121500
&ZOPL(&ZOPN)          SETC ' '                                          00121600
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00121700
&ZOPV(&ZOPN)          SETC '1'                                          00121800
&ZOPD(&ZOPN)          SETC ' '                                          00121900
.*-------------------------------------------------------------------   00122000
.***AL.L12 IWM4MDEL FMT=LIST MF=S!L PARAMETERS                          00122100
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00122200
.*                                                                      00122300
&ZOPN                 SETA  &ZOPN+1                                     00122400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00122500
&ZOPO(&ZOPN)          SETC  'DC'                                        00122600
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00122700
&ZOPD(&ZOPN)          SETC  '++ IWM4MDEL ARG PARMS'                     00122800
.*                                                                      00122900
.ZLMFSLX              ANOP  ,                                           00123000
.*-------------------------------------------------------------------   00123100
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00123200
&ZPLLEN               SETA 20                                           00123300
.*                                                                      00123400
.******************************************************************     00123500
.***AI.L01 IWM4MDEL FMT=LIST FILL IN PARAMETER AREA                     00123600
.******************************************************************     00123700
                      ACTR  10000                                       00123800
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00123900
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00124000
&ZCVAL                SETC  'LAE'          XAX MODE                     00124100
.ZIMFXA               ANOP ,                                            00124200
.*                                                                      00124300
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00124400
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00124500
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00124600
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00124700
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00124800
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00124900
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00125000
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00125100
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00125200
&ZOPN                 SETA  &ZOPN+1                                     00125300
&ZOPL(&ZOPN)          SETC  ' '                                         00125400
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00125500
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00125600
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00125700
                      AGO   .ZIMFNX                                     00125800
.*                                                                      00125900
.ZIMFN2               ANOP ,                                            00126000
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     00126100
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  00126200
&ZOPN                 SETA  &ZOPN+1                                     00126300
&ZOPL(&ZOPN)          SETC  ' '                                         00126400
&ZOPO(&ZOPN)          SETC  'LAE'                                       00126500
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  00126600
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00126700
                      AGO   .ZIMFNX                                     00126800
.ZIMFNX1              ANOP ,                                            00126900
&ZOPN                 SETA  &ZOPN+1                                     00127000
&ZOPL(&ZOPN)          SETC  ' '                                         00127100
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00127200
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00127300
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00127400
.ZIMFNX               ANOP ,                                            00127500
.********************************************************************   00127600
.***AI.L02 IWM4MDEL FMT=LIST INITIALIZE PARAMETER AREA                  00127700
.********************************************************************   00127800
.***AI.L03 MF=(SLE)                                                     00127900
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00128000
.*                                                                      00128100
&ZOPN                 SETA  &ZOPN+1                                     00128200
&ZOPL(&ZOPN)          SETC  ' '                                         00128300
&ZOPO(&ZOPN)          SETC  'XC'                                        00128400
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00128500
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00128600
.ZIMFLX               ANOP  ,                                           00128700
.*-------------------------------------------------------------------   00128800
.***AI.L05 XOPTIONS BL1                                                 00128900
&ZW                   SETC  ''                                          00129000
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00129100
.*-------------------------------------------------------------------   00129200
.***AI.L08 XOPTIONS "MONTKN64"                                          00129300
.***      BL1'XXXXXX1X'                                                 00129400
         AIF   ('&MONTKN64' EQ '').ZI3A                                 00129500
&ZW                   SETC  '&ZW.0000001'                               00129600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00129700
                      AGO   .ZI3C                                       00129800
.*                                                                      00129900
.ZI3A                 ANOP  ,                                           00130000
&ZW                   SETC  '&ZW.0000000'                               00130100
.ZI3C                 ANOP  ,                                           00130200
.*-------------------------------------------------------------------   00130300
.***AI.L08 XOPTIONS "IWM4MDEL"                                          00130400
.***      BL1'XXXXXXX1'                                                 00130500
&ZW                   SETC  '&ZW.1'                                     00130600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00130700
.*-------------------------------------------------------------------   00130800
.***AI.L11 XOPTIONS BL1                                                 00130900
                      AIF   ('&ZCLNG' NE 'YES').ZI4E  ALL ZERO BITS     00131000
&ZOPN                 SETA  &ZOPN+1                                     00131100
&ZOPL(&ZOPN)          SETC  ' '                                         00131200
&ZOPO(&ZOPN)          SETC  'OI'                                        00131300
&ZOPV(&ZOPN)          SETC  '1(1),B''&ZW'''                             00131400
&ZOPD(&ZOPN)          SETC  '++ 32 BL1'                                 00131500
.ZI4E                 ANOP  ,                                           00131600
.*-------------------------------------------------------------------   00131700
.***AI.L25  XMONTKN XL4                                                 00131800
                      AIF   ('&ZXMONTKN' EQ '').ZI6E                    00131900
                      AIF   ('&ZXMONTKN' EQ 'OUTPUT').ZI6E              00132000
&ZCGPR                SETC  '&XMONTKN'                                  00132100
.*                                                                      00132200
                      AIF   ('&XMONTKN'(1,1) NE '(').ZI6B               00132300
&ZCGPR   SETC  '0('.'&XMONTKN'(2,K'&XMONTKN-2).')'                      00132400
                      AGO   .ZI6D                                       00132500
.ZI6B                 ANOP  ,                                           00132600
.*                                                                      00132700
&ZC                   SETC  '&XMONTKN'(1,1)                             00132800
                      AIF   (T'&ZC NE 'N').ZI6D                         00132900
&ZC                   SETC  '&XMONTKN'                                  00133000
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI6D                00133100
&ZCGPR                SETC  '=BL4''&XMONTKN'''                          00133200
.*                                                                      00133300
.ZI6D                 ANOP  ,                                           00133400
.*                                                                      00133500
&ZOPN                 SETA  &ZOPN+1                                     00133600
&ZOPL(&ZOPN)          SETC  ' '                                         00133700
&ZOPO(&ZOPN)          SETC  'MVC'                                       00133800
&ZOPV(&ZOPN)          SETC  '4(4,1),&ZCGPR'                             00133900
&ZOPD(&ZOPN)          SETC  '++ &ZXMONTKN XMONTKN'                      00134000
.*                                                                      00134100
.ZI6E                 ANOP  ,                                           00134200
.*-------------------------------------------------------------------   00134300
.***AI.L25  XMONTKN64 XL8                                               00134400
                      AIF   ('&ZXMONTKN64' EQ '').ZI8E                  00134500
                      AIF   ('&ZXMONTKN64' EQ 'OUTPUT').ZI8E            00134600
&ZCGPR                SETC  '&XMONTKN64'                                00134700
.*                                                                      00134800
                      AIF   ('&XMONTKN64'(1,1) NE '(').ZI8B             00134900
&ZCGPR   SETC  '0('.'&XMONTKN64'(2,K'&XMONTKN64-2).')'                  00135000
                      AGO   .ZI8D                                       00135100
.ZI8B                 ANOP  ,                                           00135200
.*                                                                      00135300
&ZC                   SETC  '&XMONTKN64'(1,1)                           00135400
                      AIF   (T'&ZC NE 'N').ZI8D                         00135500
&ZC                   SETC  '&XMONTKN64'                                00135600
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI8D                00135700
&ZCGPR                SETC  '=BL8''&XMONTKN64'''                        00135800
.*                                                                      00135900
.ZI8D                 ANOP  ,                                           00136000
.*                                                                      00136100
&ZOPN                 SETA  &ZOPN+1                                     00136200
&ZOPL(&ZOPN)          SETC  ' '                                         00136300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00136400
&ZOPV(&ZOPN)          SETC  '12(8,1),&ZCGPR'                            00136500
&ZOPD(&ZOPN)          SETC  '++ &ZXMONTKN64 XMONTKN64'                  00136600
.*                                                                      00136700
.ZI8E                 ANOP  ,                                           00136800
.*-------------------------------------------------------------------   00136900
&ZOPN1                SETA &ZOPN                                        00137000
.*******************************************************************    00137100
.***  PROCESS IWM4MDEL OUTPUT PARAMETERS                                00137200
.*******************************************************************    00137300
                      ACTR  10000                                       00137400
.*******************************************************************    00137500
.***AO.X02  RETURN CODE PROCESSING                                      00137600
.*******************************************************************    00137700
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00137800
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00137900
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00138000
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00138100
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00138200
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00138300
&ZOPN                 SETA  &ZOPN+1                                     00138400
&ZOPL(&ZOPN)          SETC  ' '                                         00138500
&ZOPO(&ZOPN)          SETC  'ST'                                        00138600
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00138700
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00138800
                      AGO   .ZMRETX                                     00138900
.*                                                                      00139000
.ZMRET2               ANOP  ,                                           00139100
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00139200
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00139300
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00139400
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00139500
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00139600
&ZOPN                 SETA  &ZOPN+1                                     00139700
&ZOPL(&ZOPN)          SETC  ' '                                         00139800
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00139900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00140000
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00140100
.ZMRETX               ANOP  ,                                           00140200
.*******************************************************************    00140300
.***AO.X03  REASON CODE PROCESSING                                      00140400
.*******************************************************************    00140500
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00140600
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00140700
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00140800
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00140900
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00141000
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00141100
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00141200
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00141300
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00141400
&ZOPN                 SETA  &ZOPN+1                                     00141500
&ZOPL(&ZOPN)          SETC  ' '                                         00141600
&ZOPO(&ZOPN)          SETC  'ST'                                        00141700
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00141800
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00141900
                      AGO   .ZMRSNX                                     00142000
.*                                                                      00142100
.ZMRSN2               ANOP  ,                                           00142200
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00142300
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00142400
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00142500
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00142600
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00142700
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00142800
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00142900
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00143000
&ZOPN                 SETA  &ZOPN+1                                     00143100
&ZOPL(&ZOPN)          SETC  ' '                                         00143200
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00143300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00143400
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00143500
.ZMRSNX               ANOP  ,                                           00143600
.*******************************************************************    00143700
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00143800
.*******************************************************************    00143900
.ZMFLX                ANOP  ,              MF=L PROCESSING              00144000
.*******************************************************************    00144100
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00144200
.*******************************************************************    00144300
                      ACTR  10000                                       00144400
.*                                                                      00144500
                      LCLA  &ZLC           COLUMN POSITION              00144600
                      LCLA  &ZOPX          LIST TABLE INDEX             00144700
                      LCLC  &ZLL           LABEL                        00144800
                      LCLC  &ZLOP          OPERATION                    00144900
                      LCLC  &ZLV           VALUE                        00145000
                      LCLC  &ZLD           DESCRIPTION                  00145100
.*                                                                      00145200
&ZOPX                 SETA  1                                           00145300
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00145400
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00145500
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00145600
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00145700
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00145800
                      AIF   (K'&ZLD LE 0).ZL5                           00145900
&ZLC                  SETA  35             COMMENT COLUMN               00146000
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00146100
&ZLC                  SETA  33             COMMMENT COLUMN              00146200
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00146300
&ZLV                  SETC  '&ZLV'.' '                                  00146400
                      AGO   .ZL3                                        00146500
.*                                                                      00146600
.ZL4                  ANOP  ,                                           00146700
&ZLV                  SETC  '&ZLV'.' '                                  00146800
.ZL5                  ANOP  ,                                           00146900
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00147000
.*                                                                      00147100
&ZLL     &ZLOP &ZLV                                                     00147200
.*                                                                      00147300
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00147400
                      AGO   .ZL2           CONTINUE LOOPING             00147500
.*                                                                      00147600
.ZLX                  ANOP  ,                                           00147700
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00147800
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00147900
         LLGT  14,16(0,0)              GET CVT ADDRESS                  00148000
         TM    CVTOSLV6-CVT(14),CVTH7790   TEST FOR HBB7790             00148100
         JO    WLM&SYSNDX              BRANCH WHEN LVL IS PRESENT       00148200
         LA    0,IWMRSNCODEBADVERSION  HBB7790 IS REQUIRED              00148300
         LA    15,IWMRETCODEINVOCERROR SET RETURN CODE                  00148400
         J     END&SYSNDX              BRANCH TO END LABEL              00148500
WLM&SYSNDX DS    0H                    BRANCH LABEL FOR WLM PRESENT     00148600
         L     14,772(14,0)            GET SFT ADDRESS                  00148700
         L     14,380(14,0)            GET LX FOR SERVICE ROUTINE       00148800
         LA    15,2                    GET EX FOR SERVICE ROUTINE       00148900
         OR    14,15                   GET PC NUMBER                    00149000
         PC    0(14)                                                    00149100
END&SYSNDX DS    0H                    END LABEL                        00149200
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00149300
.ZLINKX               ANOP  ,                                           00149400
.*******************************************************************    00149500
.***AP.X01  FORMAT GENERATED CODE                                       00149600
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00149700
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00149800
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00149900
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00150000
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00150100
                      AIF   (K'&ZLD LE 0).ZL51                          00150200
&ZLC                  SETA  35             COMMENT COLUMN               00150300
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00150400
&ZLC                  SETA  33             COMMENT COLUMN               00150500
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00150600
&ZLV                  SETC  '&ZLV'.' '                                  00150700
                      AGO   .ZL31                                       00150800
.*                                                                      00150900
.ZL41                 ANOP  ,                                           00151000
&ZLV                  SETC  '&ZLV'.' '                                  00151100
.ZL51                 ANOP  ,                                           00151200
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00151300
.*                                                                      00151400
&ZLL     &ZLOP &ZLV                                                     00151500
.*                                                                      00151600
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00151700
                      AGO   .ZL21          CONTINUE LOOPING             00151800
.*                                                                      00151900
.ZLX1                 ANOP  ,                                           00152000
.*******************************************************************    00152100
.***AP.X02  END OF IWM4MDEL MACRO                                       00152200
&ZIWM4MDEL            SETC  'YES'          SET IWM4MDEL USED            00152300
         POP   PRINT                                                    00152400
*                                            IWM4MDEL-0                 00152500
         SPACE 1                                                        00152600
.ZLX2                 ANOP  ,                                           00152700
         MEND                                                           00152800
**********************************************************************/ 00152900
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00153000
*%IWM4MDEL: MACRO KEYS(MONTKN,MONTKN64,RETCODE,RSNCODE,PLISTVER,MF);    00153100
*  ANS('?'!!MACLABEL!!' '!!'IWM4MDEP '!!MACLIST!!                       00153200
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              00153300
*%END IWM4MDEL;                                                         00153400
