*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  ISGENQ                                -01/23/13-<2> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  Global Resource Serialization ENQ Service     * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5650-ZOS COPYRIGHT IBM CORP. 2004, 2013                         * 00001200
*                                                                     * 00001300
* STATUS= HBB7790                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      Interface for Global Resource Serialization ENQ OBTAIN and     * 00002100
*      RELEASE requests.                                              * 00002200
*                                                                     * 00002300
*      The GRS ENQ service routine is given control from the ISGENQ   * 00002400
*      macro to:                                                      * 00002500
*                                                                     * 00002600
*                                                                     * 00002700
*      o   Obtain a single or multiple ENQs with or without           * 00002800
*          associated device reserves.                                * 00002900
*                                                                     * 00003000
*      o   Change a single or multiple existing ENQs.                 * 00003100
*                                                                     * 00003200
*      o   Release a single or multiple ENQs.                         * 00003300
*                                                                     * 00003400
*      o   Test an obtain request.                                    * 00003500
*                                                                     * 00003600
*                                                                     * 00003700
*      This service is intended to replace ENQ, DEQ, and RESERVE.     * 00003800
*                                                                     * 00003900
*01* EXTERNAL CLASSIFICATION:  PI                                     * 00004000
*                                                                     * 00004100
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00004200
*                                                                     * 00004300
*01* ENVIRONMENT:                                                     * 00004400
*                                                                     * 00004500
*                                                                     * 00004600
*      Minimum authorization: Problem state.  Any PSW key.            * 00004700
*                                                                     * 00004800
*                        To use OWNINGTTOKEN, ENQMAX, or when the     * 00004900
*                        specified QNAME is one of the authorized     * 00005000
*                        QNAMEs, authorization must be one of the     * 00005100
*                        following: Supervisor state, PSW key 0-7, or * 00005200
*                        APF authorized.                              * 00005300
*                                                                     * 00005400
*                        Note: When an authorized caller issues an    * 00005500
*                        OBTAIN request with an unauthorized QNAME,   * 00005600
*                        if COND=YES, the request is granted, but a   * 00005700
*                        warning return code and the reason           * 00005800
*                        ISGENQRsn_UnprotectedQName are given.  This  * 00005900
*                        is to warn that an unauthorized caller may   * 00006000
*                        block the ENQ, or even release the ENQ if    * 00006100
*                        running under the owning task.  If COND=NO,  * 00006200
*                        authorized callers cannot obtain an ENQ on   * 00006300
*                        an unprotected resource.                     * 00006400
*                                                                     * 00006500
*                            The base authorized QNAMEs are:          * 00006600
*                                                                     * 00006700
*                        o   ADRDFRAG                                 * 00006800
*                                                                     * 00006900
*                        o   ADRDSN                                   * 00007000
*                                                                     * 00007100
*                        o   ARCENQG                                  * 00007200
*                                                                     * 00007300
*                        o   BWODSN                                   * 00007400
*                                                                     * 00007500
*                        o   SYSCTLG                                  * 00007600
*                                                                     * 00007700
*                        o   SYSDSN                                   * 00007800
*                                                                     * 00007900
*                        o   SYSIEA01                                 * 00008000
*                                                                     * 00008100
*                        o   SYSIEECT                                 * 00008200
*                                                                     * 00008300
*                        o   SYSIEFSD                                 * 00008400
*                                                                     * 00008500
*                        o   SYSIGGV1                                 * 00008600
*                                                                     * 00008700
*                        o   SYSIGGV2                                 * 00008800
*                                                                     * 00008900
*                        o   SYSPSWRD                                 * 00009000
*                                                                     * 00009100
*                        o   SYSVSAM                                  * 00009200
*                                                                     * 00009300
*                        o   SYSVTOC                                  * 00009400
*                                                                     * 00009500
*                        o   SYSZ*                                    * 00009600
*                                                                     * 00009700
*                                                                     * 00009800
*                        It is possible for the installation to       * 00009900
*                        require authorization for additional QNAMEs  * 00010000
*                        via the AUTHQLVL setting.  See z/OS MVS      * 00010100
*                        Planning: Global Resource Serialization for  * 00010200
*                        more information.                            * 00010300
*                                                                     * 00010400
*      Dispatchable unit mode: Task mode.                             * 00010500
*                                                                     * 00010600
*      Cross Memory Mode: Any PASN, any HASN, any SASN.  Note: The    * 00010700
*                        resulting ENQ is associated with the owning  * 00010800
*                        task in the home address space.              * 00010900
*                                                                     * 00011000
*      AMODE:            31- or 64-bit.                               * 00011100
*                                                                     * 00011200
*                        If in AMODE 64, specify SYSSTATE AMODE64=YES * 00011300
*                        before invoking this macro.                  * 00011400
*                                                                     * 00011500
*      ASC mode:         Primary or Access Register.                  * 00011600
*                                                                     * 00011700
*                        If in access register ASC mode, specify      * 00011800
*                        SYSSTATE ASCENV=AR before invoking this      * 00011900
*                        macro.                                       * 00012000
*                                                                     * 00012100
*      Interrupt status: Enabled for I/O and external interrupts.     * 00012200
*                                                                     * 00012300
*      Locks:            The caller must not be locked.               * 00012400
*                                                                     * 00012500
*      Control parameters: Control parameters must be in the primary  * 00012600
*                        address space or, for AR-mode callers, must  * 00012700
*                        be in an address/data space that is          * 00012800
*                        addressable through a public entry on the    * 00012900
*                        caller's dispatchable unit access list       * 00013000
*                        (DU-AL).                                     * 00013100
*                                                                     * 00013200
*                        The control parameters must be in the same   * 00013300
*                        key as the caller.                           * 00013400
*                                                                     * 00013500
*                        The ECB specified must be in the caller's    * 00013600
*                        home address space or in common.             * 00013700
*                                                                     * 00013800
*                        The TCB of the owning task (the current task * 00013900
*                        or specified by OWNINGTTOKEN) must be in the * 00014000
*                        caller's home address space.                 * 00014100
*                                                                     * 00014200
*                        If a captured UCB address is specified, the  * 00014300
*                        captured UCB must be in the caller's home    * 00014400
*                        address space.                               * 00014500
*                                                                     * 00014600
*                                                                     * 00014700
*                                                                     * 00014800
*01* PROGRAMMING REQUIREMENTS:                                        * 00014900
*                                                                     * 00015000
*    The caller must include the ISGYCON macro to get the return and  * 00015100
*    reason codes.                                                    * 00015200
*                                                                     * 00015300
*    The caller must include the ISGYENQ macro to get the mappings    * 00015400
*    for the ISGYENQAA, ISGYENQRES, ISGYENQTOKEN, and ISGYENQRETURN   * 00015500
*    tables.                                                          * 00015600
*                                                                     * 00015700
*    See "Avoiding Interlock" in  z/OS MVS Programming: Assembler     * 00015800
*    Services Guide to ensure that you are following the required     * 00015900
*    protocols to prevent the interlock.                              * 00016000
*                                                                     * 00016100
*01* RESTRICTIONS:                                                    * 00016200
*                                                                     * 00016300
*    The caller must not have functional recovery routines (FRRs)     * 00016400
*    established.                                                     * 00016500
*                                                                     * 00016600
*01* INPUT REGISTER INFORMATION:                                      * 00016700
*                                                                     * 00016800
*    Before issuing the ISGENQ macro, the caller does not have to     * 00016900
*    place any information into any general purpose register (GPR) or * 00017000
*    access register (AR) unless using it in register notation for a  * 00017100
*    particular parameter, or using it as a base register.            * 00017200
*                                                                     * 00017300
*01* OUTPUT REGISTER INFORMATION:                                     * 00017400
*                                                                     * 00017500
*    When control returns to the caller, the GPRs contain:            * 00017600
*                                                                     * 00017700
*                                                                     * 00017800
*    REGISTER    CONTENTS                                             * 00017900
*                                                                     * 00018000
*    0           Reason code if GPR15 is not 0                        * 00018100
*                                                                     * 00018200
*    1           Used as a work register by the system                * 00018300
*                                                                     * 00018400
*    2-13        Unchanged                                            * 00018500
*                                                                     * 00018600
*    14          Used as a work register by the system                * 00018700
*                                                                     * 00018800
*    15          Return code                                          * 00018900
*                                                                     * 00019000
*                                                                     * 00019100
*                                                                     * 00019200
*    When control returns to the caller, the ARs contain:             * 00019300
*                                                                     * 00019400
*                                                                     * 00019500
*    REGISTER    CONTENTS                                             * 00019600
*                                                                     * 00019700
*    0-1         Used as work registers by the system                 * 00019800
*                                                                     * 00019900
*    2-13        Unchanged                                            * 00020000
*                                                                     * 00020100
*    14-15       Used as work registers by the system                 * 00020200
*                                                                     * 00020300
*                                                                     * 00020400
*                                                                     * 00020500
*    Some callers depend on register contents remaining the same      * 00020600
*    before and after issuing a service.  If the system changes the   * 00020700
*    contents of registers on which the caller depends, the caller    * 00020800
*    must save them before issuing the service, and restore them      * 00020900
*    after the system returns control.                                * 00021000
*                                                                     * 00021100
*01* PERFORMANCE IMPLICATIONS:                                        * 00021200
*    None.                                                            * 00021300
*                                                                     * 00021400
*01* SYNTAX:                                                          * 00021500
*                                                                     * 00021600
*Ýxlabel¨  ISGENQ  Ð  REQUEST=OBTAIN                                  * 00021700
*                  !   ÐÝ,TEST=NO                                     * 00021800
*                  !   !   ÐÝ,CONTENTIONACT=WAIT                      * 00021900
*                  !   !   !   ÐÝ,WAITTYPE=SUSPEND¨                   * 00022000
*                  !   !   !   ¿Ý,WAITTYPE=ECB                        * 00022100
*                  !   !   !         ,ECB@=xecb@                      * 00022200
*                  !   !   !        Ý,OWNINGTTOKEN                    * 00022300
*                  !   !   !                       =»xowningttoken!CU * 00022400
*                  !   !   !                       RRENT_TASKº¨¨¨     * 00022500
*                  !   !   ¿Ý,CONTENTIONACT=FAIL                      * 00022600
*                  !   !        Ý,OWNINGTTOKEN                        * 00022700
*                  !   !                       =»xowningttoken!CURREN * 00022800
*                  !   !                       T_TASKº¨¨              * 00022900
*                  !   !   ÐÝ,ENQMAX=YES¨                             * 00023000
*                  !   !   ¿Ý,ENQMAX=NO¨                              * 00023100
*                  !   !    Ý,USERDATA=»xuserdata!NO_USERDATAº¨¨      * 00023200
*                  !   ¿Ý,TEST=YES                                    * 00023300
*                  !        Ý,ANSAREA=xansarea¨                       * 00023400
*                  !        Ý,ANSLEN=»xanslen!NO_ANSLENº¨             * 00023500
*                  !        Ý,OWNINGTTOKEN                            * 00023600
*                  !                       =»xowningttoken!CURRENT_TA * 00023700
*                  !                       SKº¨¨                      * 00023800
*                  !   ÐÝ,RESLIST=NO                                  * 00023900
*                  !   !     ,QNAME=xqname                            * 00024000
*                  !   !     ,RNAME=xrname                            * 00024100
*                  !   !     ,RNAMELEN=xrnamelen                      * 00024200
*                  !   !   Ð ,CONTROL=EXCLUSIVE                       * 00024300
*                  !   !   Ô ,CONTROL=SHARED                          * 00024400
*                  !   !   ¿ ,CONTROL=VALUE                           * 00024500
*                  !   !         ,CONTROLVAL=xcontrolval              * 00024600
*                  !   !   ÐÝ,RESERVEVOLUME=NO                        * 00024700
*                  !   !   !   Ð ,SCOPE=STEP                          * 00024800
*                  !   !   !   Ô ,SCOPE=SYSTEM                        * 00024900
*                  !   !   !   Ô ,SCOPE=SYSTEMS                       * 00025000
*                  !   !   !   Ô ,SCOPE=SYSPLEX                       * 00025100
*                  !   !   !   ¿ ,SCOPE=VALUE                         * 00025200
*                  !   !   !         ,SCOPEVAL=xscopeval              * 00025300
*                  !   !   !    Ý,RNL=»YES!NOº¨¨                      * 00025400
*                  !   !   ¿Ý,RESERVEVOLUME=YES                       * 00025500
*                  !   !         ,UCB@=xucb@                          * 00025600
*                  !   !        Ý,SYNCHRES=»SYSTEM!YES!NOº¨¨          * 00025700
*                  !   !     ,ENQTOKEN=xenqtoken¨                     * 00025800
*                  !   ¿Ý,RESLIST=YES                                 * 00025900
*                  !         ,NUMRES=xnumres                          * 00026000
*                  !         ,RESTABLE=xrestable                      * 00026100
*                  !         ,ENQTOKENTBL=xenqtokentbl                * 00026200
*                  !        Ý,RETURNTABLE=xreturntable¨               * 00026300
*                  !        Ý,QNAME=»xqname!DO_NOT_OVERRIDEº¨         * 00026400
*                  !        Ý,RNAME=»xrname!DO_NOT_OVERRIDEº¨         * 00026500
*                  !        Ý,RNAMELEN=»xrnamelen!DO_NOT_OVERRIDEº¨   * 00026600
*                  !        Ý,CONTROL=»DO_NOT_OVERRIDE!EXCLUSIVE!     * 00026700
*                  !                   SHAREDº¨                       * 00026800
*                  !       ÐÝ,SCOPE=DO_NOT_OVERRIDE¨                  * 00026900
*                  !       ÔÝ,SCOPE=STEP¨                             * 00027000
*                  !       ÔÝ,SCOPE=SYSTEM¨                           * 00027100
*                  !       ÔÝ,SCOPE=SYSTEMS¨                          * 00027200
*                  !       ¿Ý,SCOPE=SYSPLEX¨                          * 00027300
*                  !        Ý,RNL=»DO_NOT_OVERRIDE!YES!NOº¨           * 00027400
*                  !        Ý,UCB@=»xucb@!DO_NOT_OVERRIDEº¨           * 00027500
*                  !        Ý,SYNCHRES=»DO_NOT_OVERRIDE!SYSTEM!YES!   * 00027600
*                  !                    NOº¨¨                         * 00027700
*                  Ô ,REQUEST=CHANGE                                  * 00027800
*                  !   ÐÝ,RESLIST=NO                                  * 00027900
*                  !   !     ,ENQTOKEN=xenqtoken¨                     * 00028000
*                  !   ¿Ý,RESLIST=YES                                 * 00028100
*                  !         ,NUMRES=xnumres                          * 00028200
*                  !         ,ENQTOKENTBL=xenqtokentbl                * 00028300
*                  !        Ý,RETURNTABLE=xreturntable¨¨              * 00028400
*                  !    Ý,OWNINGTTOKEN=»xowningttoken!CURRENT_TASKº¨  * 00028500
*                  !   ÐÝ,CONTROL=EXCLUSIVE¨                          * 00028600
*                  !   ¿Ý,CONTROL=SHARED¨                             * 00028700
*                  ¿ ,REQUEST=RELEASE                                 * 00028800
*                      ÐÝ,RESLIST=NO                                  * 00028900
*                      !     ,ENQTOKEN=xenqtoken¨                     * 00029000
*                      ¿Ý,RESLIST=YES                                 * 00029100
*                            ,NUMRES=xnumres                          * 00029200
*                            ,ENQTOKENTBL=xenqtokentbl                * 00029300
*                           Ý,RETURNTABLE=xreturntable¨¨              * 00029400
*                       Ý,OWNINGTTOKEN=»xowningttoken!CURRENT_TASKº¨  * 00029500
*                  ÐÝ,COND=NO¨                                        * 00029600
*                  ¿Ý,COND=YES¨                                       * 00029700
*                   Ý,RETCODE=xretcode¨                               * 00029800
*                   Ý,RSNCODE=xrsncode¨                               * 00029900
*                   Ý,PLISTVER=»xplistver!IMPLIED_VERSIONº¨           * 00030000
*                  ÐÝ,MF=S¨                                           * 00030100
*                  ÔÝ,MF=(L,xmfctrl»,xmfattr!0Dº)¨                    * 00030200
*                  ¿Ý,MF=(E,xmfctrl»,COMPLETEº)¨                      * 00030300
*                                                                     * 00030400
*                                                                     * 00030500
*      Where:                                                         * 00030600
*                                                                     * 00030700
*                                                                     * 00030800
*      Ýxlabel¨                                                       * 00030900
*          is an optional symbol, starting in column 1, that is the   * 00031000
*          name on the ISGENQ macro invocation.  The name must        * 00031100
*          conform to the rules for an ordinary assembler language    * 00031200
*          symbol.                                                    * 00031300
*          DEFAULT: No name.                                          * 00031400
*                                                                     * 00031500
*                                                                     * 00031600
*                                                                     * 00031700
*                                                                     * 00031800
*      REQUEST=»OBTAIN!CHANGE!RELEASEº                                * 00031900
*          is a required keyword input that indicates the type of     * 00032000
*          ISGENQ request.                                            * 00032100
*                                                                     * 00032200
*                                                                     * 00032300
*          REQUEST=OBTAIN                                             * 00032400
*              Indicates a request to obtain an ENQ for a resource.   * 00032500
*                                                                     * 00032600
*                                                                     * 00032700
*              ÝTEST=»NO!YESº¨                                        * 00032800
*                  is an optional keyword input                       * 00032900
*                  DEFAULT: NO                                        * 00033000
*                                                                     * 00033100
*                                                                     * 00033200
*                  ÝTEST=NO                                           * 00033300
*                      Indicates this is not a test request.  The ENQ * 00033400
*                      must be obtained.                              * 00033500
*                                                                     * 00033600
*                                                                     * 00033700
*                      ÝCONTENTIONACT=»WAIT!FAILº¨                    * 00033800
*                          is an optional keyword input that          * 00033900
*                          indicates the action that should be taken  * 00034000
*                          if there is contention for the requested   * 00034100
*                          resource.                                  * 00034200
*                                                                     * 00034300
*                          Note that a reserve request (where UCB@ is * 00034400
*                          specified) that is not converted to only a * 00034500
*                          global ENQ (Systems) will consist of an    * 00034600
*                          ENQ resource and a hardware reserve.  See  * 00034700
*                          the SYNCHRES keyword for more information  * 00034800
*                          on reserve processing.                     * 00034900
*                          DEFAULT: WAIT                              * 00035000
*                                                                     * 00035100
*                                                                     * 00035200
*                          ÝCONTENTIONACT=WAIT                        * 00035300
*                              Indicates that the caller waits until  * 00035400
*                              the ENQ resource is available and, if  * 00035500
*                              applicable, the synchronous reserve    * 00035600
*                              I/O (see SYNCHRES) is complete.        * 00035700
*                                                                     * 00035800
*                                                                     * 00035900
*                              ÝWAITTYPE=»SUSPEND!ECBº¨               * 00036000
*                                  is an optional keyword input that  * 00036100
*                                  indicates the method by which the  * 00036200
*                                  caller waits.                      * 00036300
*                                  DEFAULT: SUSPEND                   * 00036400
*                                                                     * 00036500
*                                                                     * 00036600
*                                  ÝWAITTYPE=SUSPEND¨                 * 00036700
*                                      Indicates that the current     * 00036800
*                                      task is suspended until the    * 00036900
*                                      entire request is completed.   * 00037000
*                                                                     * 00037100
*                                  ÝWAITTYPE=ECB                      * 00037200
*                                      Indicates that if contention   * 00037300
*                                      for the ENQ resource exists or * 00037400
*                                      the device reserve is done     * 00037500
*                                      synchronously (see SYNCHRES),  * 00037600
*                                      return to the caller, and post * 00037700
*                                      the ECB when the request is    * 00037800
*                                      complete.                      * 00037900
*                                                                     * 00038000
*                                      Mutually exclusive with        * 00038100
*                                      COND=NO.                       * 00038200
*                                                                     * 00038300
*                                      WAITTYPE=ECB in combination    * 00038400
*                                      with setting a timer with ECB  * 00038500
*                                      can be used to control the     * 00038600
*                                      amount of time that you are    * 00038700
*                                      willing to wait for either ENQ * 00038800
*                                      contention or a synchronous    * 00038900
*                                      reserve to complete. If the    * 00039000
*                                      request does not complete      * 00039100
*                                      before the time expires you    * 00039200
*                                      can do the following actions.  * 00039300
*                                                                     * 00039400
*                                                                     * 00039500
*                                      o   You can use the the ISGECA * 00039600
*                                          and ISGQUERY services to   * 00039700
*                                          interrogate the overall    * 00039800
*                                          state of the request and   * 00039900
*                                          associated resource.       * 00040000
*                                                                     * 00040100
*                                      o   You can back out of the    * 00040200
*                                          request using an ISGENQ    * 00040300
*                                          REQUEST=RELEASE request."  * 00040400
*                                                                     * 00040500
*                                                                     * 00040600
*                                                                     * 00040700
*                                                                     * 00040800
*                                      ECB@=xecb@                     * 00040900
*                                          is the name (RS-type), or  * 00041000
*                                          address in register        * 00041100
*                                          (2)-(12), of a required 4  * 00041200
*                                          byte input that contains   * 00041300
*                                          the address of the ECB to  * 00041400
*                                          be posted when the         * 00041500
*                                          requested resource(s)      * 00041600
*                                          is/are obtained.           * 00041700
*                                                                     * 00041800
*                                          The ECB must be in one of  * 00041900
*                                          the following locations:   * 00042000
*                                                                     * 00042100
*                                                                     * 00042200
*                                          1.  the home address space * 00042300
*                                              of the caller.         * 00042400
*                                                                     * 00042500
*                                          2.  in common storage.     * 00042600
*                                                                     * 00042700
*                                          3.  for unauthorized       * 00042800
*                                              requesters, in same    * 00042900
*                                              storage key as the     * 00043000
*                                              requester's PSW        * 00043100
*                                              storage key.           * 00043200
*                                                                     * 00043300
*                                                                     * 00043400
*                                                                     * 00043500
*                                          When the ISGENQ service    * 00043600
*                                          returns to the caller, the * 00043700
*                                          return and reason codes    * 00043800
*                                          specify for each resource  * 00043900
*                                          whether the task has been  * 00044000
*                                          given control of the       * 00044100
*                                          resource or needs to wait  * 00044200
*                                          for the ECB to be posted.  * 00044300
*                                                                     * 00044400
*                                          When the ECB is posted, it * 00044500
*                                          contains a return/reason   * 00044600
*                                          code pair.  Bits 8-23      * 00044700
*                                          contain the low-order      * 00044800
*                                          halfword of the reason     * 00044900
*                                          code and bits 24-31        * 00045000
*                                          contain the low-order byte * 00045100
*                                          of the return code.  For a * 00045200
*                                          RESLIST=NO request, the    * 00045300
*                                          ECB contains the return    * 00045400
*                                          and reason code for the    * 00045500
*                                          request. For a RESLIST=YES * 00045600
*                                          request, the ECB contains  * 00045700
*                                          an overall return code.    * 00045800
*                                                                     * 00045900
*                                                                     * 00046000
*                                                                     * 00046100
*                                                                     * 00046200
*                                      ÝOWNINGTTOKEN=»xowningttoken!C * 00046300
*                                          URRENT_TASKº¨¨¨            * 00046400
*                                          is the name (RS-type), or  * 00046500
*                                          address in register        * 00046600
*                                          (2)-(12), of an optional   * 00046700
*                                          16 character input that is * 00046800
*                                          the task token (TToken) of * 00046900
*                                          the task on whose behalf   * 00047000
*                                          the ENQ is to be obtained. * 00047100
*                                          The TToken must specify a  * 00047200
*                                          task in the caller's home  * 00047300
*                                          address space.             * 00047400
*                                                                     * 00047500
*                                          Note: Mutually exclusive   * 00047600
*                                          with RESERVEVOLUME=YES.    * 00047700
*                                          DEFAULT: CURRENT_TASK      * 00047800
*                                                                     * 00047900
*                                                                     * 00048000
*                                                                     * 00048100
*                                                                     * 00048200
*                                                                     * 00048300
*                                                                     * 00048400
*                                                                     * 00048500
*                          ÝCONTENTIONACT=FAIL                        * 00048600
*                              Indicates that if contention for the   * 00048700
*                              ENQ resource exists to cancel the ENQ  * 00048800
*                              obtain request and return to the       * 00048900
*                              caller.                                * 00049000
*                                                                     * 00049100
*                              Notes:                                 * 00049200
*                                                                     * 00049300
*                                                                     * 00049400
*                                  See CONTENTIONACT=WAIT with ECB@   * 00049500
*                                  as a means of timing the overall   * 00049600
*                                  request.                           * 00049700
*                                                                     * 00049800
*                                  For a reserve request (where UCB@  * 00049900
*                                  is specified), the ENQ resource is * 00050000
*                                  always obtained first.  As such,   * 00050100
*                                  CONTENTIONACT=FAIL indicates to    * 00050200
*                                  cancel the entire request when     * 00050300
*                                  there is contention on the ENQ     * 00050400
*                                  resource.  However, it does not    * 00050500
*                                  apply to contention on the         * 00050600
*                                  hardware reserve. See              * 00050700
*                                  CONTENTIONACT=WAIT with            * 00050800
*                                  WAITTYPE=ECB for information on    * 00050900
*                                  how to manage or time hardware     * 00051000
*                                  reserve contention.                * 00051100
*                                                                     * 00051200
*                                                                     * 00051300
*                                                                     * 00051400
*                                                                     * 00051500
*                              ÝOWNINGTTOKEN=»xowningttoken!CURRENT_T * 00051600
*                                  ASKº¨¨                             * 00051700
*                                  is the name (RS-type), or address  * 00051800
*                                  in register (2)-(12), of an        * 00051900
*                                  optional 16 character input that   * 00052000
*                                  is the task token (TToken) of the  * 00052100
*                                  task on whose behalf the ENQ is to * 00052200
*                                  be obtained.  The TToken must      * 00052300
*                                  specify a task in the caller's     * 00052400
*                                  home address space.                * 00052500
*                                                                     * 00052600
*                                  Note: Mutually exclusive with      * 00052700
*                                  RESERVEVOLUME=YES.                 * 00052800
*                                  DEFAULT: CURRENT_TASK              * 00052900
*                                                                     * 00053000
*                                                                     * 00053100
*                                                                     * 00053200
*                                                                     * 00053300
*                                                                     * 00053400
*                                                                     * 00053500
*                                                                     * 00053600
*                                                                     * 00053700
*                      ÝENQMAX=»YES!NOº¨                              * 00053800
*                          is an optional keyword input that          * 00053900
*                          indicates whether ENQMAX checking should   * 00054000
*                          be done.  This keyword tells global        * 00054100
*                          resource serialization whether or not a    * 00054200
*                          check is to be made to see if the limit    * 00054300
*                          for the number of concurrent resource      * 00054400
*                          requests has been exceeded.                * 00054500
*                          DEFAULT: YES                               * 00054600
*                                                                     * 00054700
*                                                                     * 00054800
*                          ÝENQMAX=YES¨                               * 00054900
*                              Indicates ENQMAX checking should be    * 00055000
*                              done.  IBM suggests that you use the   * 00055100
*                              default, ENQMAX=YES, to allow global   * 00055200
*                              resource serialization to perform this * 00055300
*                              processing.  See z/OS MVS Planning:    * 00055400
*                              Global Resource Serialization for more * 00055500
*                              information.                           * 00055600
*                                                                     * 00055700
*                          ÝENQMAX=NO¨                                * 00055800
*                              Indicates that ENQMAX checking should  * 00055900
*                              not be used.  Use ENQMAX=NO when you   * 00056000
*                              have a system-critical ENQ request     * 00056100
*                              that should be honored regardless of   * 00056200
*                              the concurrent number of resource      * 00056300
*                              requests made from the home address    * 00056400
*                              space.  Note that this can only be     * 00056500
*                              specified by an authorized requester   * 00056600
*                              and therefore can only override the    * 00056700
*                              maximum for authorized requesters.     * 00056800
*                              See z/OS MVS Planning: Global Resource * 00056900
*                              Serialization for more information.    * 00057000
*                                                                     * 00057100
*                                                                     * 00057200
*                                                                     * 00057300
*                                                                     * 00057400
*                                                                     * 00057500
*                                                                     * 00057600
*                      ÝUSERDATA=»xuserdata!NO_USERDATAº¨¨            * 00057700
*                          is the name (RS-type), or address in       * 00057800
*                          register (2)-(12), of an optional 32       * 00057900
*                          character input that contains the userdata * 00058000
*                          to be associated with this request. See    * 00058100
*                          ISGQUERY for information regarding using   * 00058200
*                          userdata as a filter, or making ISGQUERY   * 00058300
*                          return userdata for requests.              * 00058400
*                                                                     * 00058500
*                          Note: GRS has no interest in the contents  * 00058600
*                          of the USERDATA. Unlike the QNAME, RNAME,  * 00058700
*                          and SCOPE parameters, USERDATA has no      * 00058800
*                          meaning in the definition of the logically * 00058900
*                          serialized resource identity. For example, * 00059000
*                          exclusive requests with different Userdata * 00059100
*                          and the same QNAME, RNAME, and SCOPE       * 00059200
*                          contend with each other.                   * 00059300
*                                                                     * 00059400
*                          This request requires a version 2          * 00059500
*                          parameter list.                            * 00059600
*                          DEFAULT: NO_USERDATA                       * 00059700
*                                                                     * 00059800
*                                                                     * 00059900
*                                                                     * 00060000
*                  ÝTEST=YES                                          * 00060100
*                      Indicates to test the request. The ENQ must    * 00060200
*                      not be obtained.  This parameter setting can   * 00060300
*                      be used to obtain information about how the    * 00060400
*                      given obtain request is processed and how a    * 00060500
*                      resource is currently held by the current task * 00060600
*                      or one specified by OWNINGTTOKEN.              * 00060700
*                                                                     * 00060800
*                      Mutually exclusive with COND=NO.               * 00060900
*                                                                     * 00061000
*                      For existing requests from the same task,      * 00061100
*                      which match the specified resource, the        * 00061200
*                      ENQToken of that request is returned.          * 00061300
*                                                                     * 00061400
*                      See ISGQUERY SEARCH=BY_ENQTOKEN for            * 00061500
*                      information about outstanding ENQ requests.    * 00061600
*                                                                     * 00061700
*                      The following return and reason codes can be   * 00061800
*                      used to determine if the resource is available * 00061900
*                      and how it might be held by the OWNINGTTOKEN   * 00062000
*                      task:                                          * 00062100
*                                                                     * 00062200
*                                                                     * 00062300
*                          ISGENQRc_ok                                * 00062400
*                                                                     * 00062500
*                          ISGENQRsn_NotImmediatelyAvailable          * 00062600
*                                                                     * 00062700
*                          ISGENQRsn_TaskOwnsExclusive                * 00062800
*                                                                     * 00062900
*                          ISGENQRsn_TaskOwnsShared                   * 00063000
*                                                                     * 00063100
*                          ISGENQRsn_TaskWaiting                      * 00063200
*                                                                     * 00063300
*                                                                     * 00063400
*                                                                     * 00063500
*                                                                     * 00063600
*                      ÝANSAREA=xansarea¨                             * 00063700
*                          is the name (RS-type), or address in       * 00063800
*                          register (2)-(12), of an optional          * 00063900
*                          character output which contains the        * 00064000
*                          returned information.  The area is a list  * 00064100
*                          of records mapped by ISGYENQAA in the      * 00064200
*                          ISGYENQ macro.  For RESLIST=YES, the       * 00064300
*                          records are in the same order as the       * 00064400
*                          requests in the RESTABLE.  ANSLEN is       * 00064500
*                          required if ANSAREA is specified.          * 00064600
*                                                                     * 00064700
*                          Note: The answer area is returned only     * 00064800
*                          when RC=0 or RC=4.                         * 00064900
*                                                                     * 00065000
*                                                                     * 00065100
*                                                                     * 00065200
*                                                                     * 00065300
*                      ÝANSLEN=»xanslen!NO_ANSLENº¨                   * 00065400
*                          is the name (RS-type), or address in       * 00065500
*                          register (2)-(12), of an optional fullword * 00065600
*                          input that is the length of the answer     * 00065700
*                          area provided.  The answer area should be  * 00065800
*                          large enough to hold a ISGYENQAA record    * 00065900
*                          and an RNAME for each request (specified   * 00066000
*                          by NUMRES, or one if RESLIST=NO).  The     * 00066100
*                          maximum size area needed to contain one    * 00066200
*                          RNAME is 256 bytes.  ANSAREA is required   * 00066300
*                          if ANSLEN is specified.                    * 00066400
*                          DEFAULT: NO_ANSLEN                         * 00066500
*                                                                     * 00066600
*                                                                     * 00066700
*                                                                     * 00066800
*                                                                     * 00066900
*                      ÝOWNINGTTOKEN=»xowningttoken!CURRENT_TASKº¨¨   * 00067000
*                                                                     * 00067100
*                          is the name (RS-type), or address in       * 00067200
*                          register (2)-(12), of an optional 16       * 00067300
*                          character input that is the task token     * 00067400
*                          (TToken) of the task on whose behalf the   * 00067500
*                          test request is to be performed.  The      * 00067600
*                          TToken must specify a task in the caller's * 00067700
*                          home address space.                        * 00067800
*                                                                     * 00067900
*                          Note: Mutually exclusive with              * 00068000
*                          RESERVEVOLUME=YES.                         * 00068100
*                          DEFAULT: CURRENT_TASK                      * 00068200
*                                                                     * 00068300
*                                                                     * 00068400
*                                                                     * 00068500
*                                                                     * 00068600
*                                                                     * 00068700
*                                                                     * 00068800
*                                                                     * 00068900
*                                                                     * 00069000
*              ÝRESLIST=»NO!YESº                                      * 00069100
*                  is an optional keyword input                       * 00069200
*                  DEFAULT: NO                                        * 00069300
*                                                                     * 00069400
*                                                                     * 00069500
*                  ÝRESLIST=NO                                        * 00069600
*                      Indicates to obtain an ENQ for a single        * 00069700
*                      resource.                                      * 00069800
*                                                                     * 00069900
*                                                                     * 00070000
*                      QNAME=xqname                                   * 00070100
*                          is the name (RS-type), or address in       * 00070200
*                          register (2)-(12), of a required 8         * 00070300
*                          character input that is the QNAME of the   * 00070400
*                          resource.  The QNAME can contain any       * 00070500
*                          character from X'00' to X'FF'. However, a  * 00070600
*                          unique readable value that identifies the  * 00070700
*                          functional area or a high level of what is * 00070800
*                          being serialized is preferred.  Every      * 00070900
*                          program issuing a request for a serially   * 00071000
*                          reusable resource must use the same QNAME, * 00071100
*                          RNAME, and Scope to represent the          * 00071200
*                          resource.  Some names, such as those       * 00071300
*                          beginning with certain letter combinations * 00071400
*                          (SYSZ for example), are used to protect    * 00071500
*                          system resources by requiring that the     * 00071600
*                          issuing program be in supervisor state, or * 00071700
*                          system key, or APF-authorized. Authorized  * 00071800
*                          programs must use a restricted QNAME (as   * 00071900
*                          described under Minimum authorization in   * 00072000
*                          the Environment section for this service ) * 00072100
*                          to prevent interference from unauthorized  * 00072200
*                          programs.                                  * 00072300
*                                                                     * 00072400
*                          Note: See z/OS MVS Diagnosis: Reference    * 00072500
*                          for a list of QNAME (also known as major   * 00072600
*                          name) and RNAME (also known as minor name) * 00072700
*                          ENQ/DEQ names and the resources that issue * 00072800
*                          the ENQ/DEQ.                               * 00072900
*                                                                     * 00073000
*                                                                     * 00073100
*                                                                     * 00073200
*                                                                     * 00073300
*                      RNAME=xrname                                   * 00073400
*                          is the name (RS-type), or address in       * 00073500
*                          register (2)-(12), of a required character * 00073600
*                          input that is the RNAME for the resource.  * 00073700
*                          The RNAME must be from 1 to 255 bytes      * 00073800
*                          long, and can contain any hexadecimal      * 00073900
*                          character from X'00' to X'FF'.             * 00074000
*                                                                     * 00074100
*                                                                     * 00074200
*                                                                     * 00074300
*                                                                     * 00074400
*                      RNAMELEN=xrnamelen                             * 00074500
*                          is the name (RS-type), or address in       * 00074600
*                          register (2)-(12), of a required byte      * 00074700
*                          input that is the length of the given      * 00074800
*                          RNAME.  The specified length can be in the * 00074900
*                          range of 1 to 255.                         * 00075000
*                                                                     * 00075100
*                                                                     * 00075200
*                                                                     * 00075300
*                                                                     * 00075400
*                      CONTROL=»EXCLUSIVE!SHARED!VALUEº               * 00075500
*                          is a required keyword input that is the    * 00075600
*                          control type of the ENQ to be obtained.    * 00075700
*                          If the resource is modified while under    * 00075800
*                          control of the task, the request must be   * 00075900
*                          for exclusive control. If the resource is  * 00076000
*                          not modified, the request should be for    * 00076100
*                          shared control.                            * 00076200
*                                                                     * 00076300
*                                                                     * 00076400
*                          CONTROL=EXCLUSIVE                          * 00076500
*                              Indicates that the request is for      * 00076600
*                              exclusive control of the resource.     * 00076700
*                                                                     * 00076800
*                          CONTROL=SHARED                             * 00076900
*                              Indicates that the request is for      * 00077000
*                              shared control of the resource.        * 00077100
*                                                                     * 00077200
*                          CONTROL=VALUE                              * 00077300
*                              the user provides a value, through the * 00077400
*                              CONTROLVAL keyword, indicating the     * 00077500
*                              requested control.                     * 00077600
*                                                                     * 00077700
*                                                                     * 00077800
*                              CONTROLVAL=xcontrolval                 * 00077900
*                                  is the name (RS-type), or address  * 00078000
*                                  in register (2)-(12), of a         * 00078100
*                                  required byte input that contains  * 00078200
*                                  a value indicating the desired     * 00078300
*                                  control.  The value provided must  * 00078400
*                                  be equivalent to the constants     * 00078500
*                                  provided in the ISGYENQ macro      * 00078600
*                                  indicating the control. (See the   * 00078700
*                                  ISGYENQ_kControl constants in the  * 00078800
*                                  ISGYENQ macro for more             * 00078900
*                                  information.)                      * 00079000
*                                                                     * 00079100
*                                                                     * 00079200
*                                                                     * 00079300
*                                                                     * 00079400
*                                                                     * 00079500
*                                                                     * 00079600
*                                                                     * 00079700
*                                                                     * 00079800
*                      ÝRESERVEVOLUME=»NO!YESº¨                       * 00079900
*                          is an optional keyword input               * 00080000
*                          DEFAULT: NO                                * 00080100
*                                                                     * 00080200
*                                                                     * 00080300
*                          ÝRESERVEVOLUME=NO                          * 00080400
*                              Indicates to issue a normal ENQ obtain * 00080500
*                              and not a reserve.                     * 00080600
*                                                                     * 00080700
*                                                                     * 00080800
*                              SCOPE=»STEP!SYSTEM!SYSTEMS!SYSPLEX!VAL * 00080900
*                                  UEº                                * 00081000
*                                  is a required keyword input that   * 00081100
*                                  is the scope of the resource.      * 00081200
*                                                                     * 00081300
*                                                                     * 00081400
*                                  SCOPE=STEP                         * 00081500
*                                      Indicates that the resource is * 00081600
*                                      serialized only within an      * 00081700
*                                      address space.  If STEP is     * 00081800
*                                      specified, a request for the   * 00081900
*                                      same QNAME and RNAME from a    * 00082000
*                                      program in another address     * 00082100
*                                      space denotes a different      * 00082200
*                                      resource.                      * 00082300
*                                                                     * 00082400
*                                  SCOPE=SYSTEM                       * 00082500
*                                      Indicates that the resource is * 00082600
*                                      serialized across all address  * 00082700
*                                      spaces in a system.            * 00082800
*                                                                     * 00082900
*                                  SCOPE=SYSTEMS                      * 00083000
*                                      Indicates that the resource is * 00083100
*                                      serialized across all systems  * 00083200
*                                      in a GRS Star or GRS Ring      * 00083300
*                                      complex.                       * 00083400
*                                                                     * 00083500
*                                  SCOPE=SYSPLEX                      * 00083600
*                                      Indicates that the resource is * 00083700
*                                      serialized across all systems  * 00083800
*                                      in a GRS Star sysplex or GRS   * 00083900
*                                      ring. (Same as scope SYSTEMS.) * 00084000
*                                                                     * 00084100
*                                  SCOPE=VALUE                        * 00084200
*                                      the user provides a value,     * 00084300
*                                      through the SCOPEVAL keyword,  * 00084400
*                                      indicating the requested       * 00084500
*                                      scope.                         * 00084600
*                                                                     * 00084700
*                                                                     * 00084800
*                                      SCOPEVAL=xscopeval             * 00084900
*                                          is the name (RS-type), or  * 00085000
*                                          address in register        * 00085100
*                                          (2)-(12), of a required    * 00085200
*                                          byte input that contains a * 00085300
*                                          value indicating the       * 00085400
*                                          desired scope.  The value  * 00085500
*                                          provided must be           * 00085600
*                                          equivalent to the          * 00085700
*                                          constants provided in the  * 00085800
*                                          ISGYENQ macro indicating   * 00085900
*                                          the scope. (See the        * 00086000
*                                          ISGYENQ_ constants in the  * 00086100
*                                          ISGYENQ macro for more     * 00086200
*                                          information.)              * 00086300
*                                                                     * 00086400
*                                                                     * 00086500
*                                                                     * 00086600
*                                                                     * 00086700
*                                                                     * 00086800
*                                                                     * 00086900
*                                                                     * 00087000
*                                                                     * 00087100
*                              ÝRNL=»YES!NOº¨¨                        * 00087200
*                                  is an optional keyword input that  * 00087300
*                                  indicates whether the scope can be * 00087400
*                                  changed by global resource         * 00087500
*                                  serialization resource name list   * 00087600
*                                  (RNL) processing or the dynamic    * 00087700
*                                  exits.                             * 00087800
*                                  DEFAULT: YES                       * 00087900
*                                                                     * 00088000
*                                                                     * 00088100
*                                  RNL=YES                            * 00088200
*                                      Indicates that global resource * 00088300
*                                      serialization RNL processing   * 00088400
*                                      should be used, which can      * 00088500
*                                      cause the scope of a resource  * 00088600
*                                      to change.  IBM suggests that  * 00088700
*                                      you use the default, RNL=YES,  * 00088800
*                                      to allow global resource       * 00088900
*                                      serialization to perform RNL   * 00089000
*                                      processing.                    * 00089100
*                                                                     * 00089200
*                                  RNL=NO                             * 00089300
*                                      Indicates that global resource * 00089400
*                                      serialization RNL processing   * 00089500
*                                      should not be used.  The scope * 00089600
*                                      of the resource is not changed * 00089700
*                                      by the RNLs nor any dynamic    * 00089800
*                                      exits.  Use RNL=NO when you    * 00089900
*                                      are sure that you want the     * 00090000
*                                      request to be processed only   * 00090100
*                                      by global resource             * 00090200
*                                      serialization using only the   * 00090300
*                                      specified scope.  When RNL=NO  * 00090400
*                                      is specified, the ENQ request  * 00090500
*                                      can be ignored by alternative  * 00090600
*                                      serialization products.        * 00090700
*                                                                     * 00090800
*                                                                     * 00090900
*                                                                     * 00091000
*                                                                     * 00091100
*                                                                     * 00091200
*                          ÝRESERVEVOLUME=YES                         * 00091300
*                              Indicates that after the ENQ resource  * 00091400
*                              is obtained that a reserve for the     * 00091500
*                              given device (shared DASD) is to be    * 00091600
*                              issued.                                * 00091700
*                                                                     * 00091800
*                              Note: RESERVEVOLUME=YES is mutually    * 00091900
*                              exclusive with OWNINGTTOKEN.           * 00092000
*                                                                     * 00092100
*                                                                     * 00092200
*                              UCB@=xucb@                             * 00092300
*                                  is the name (RS-type), or address  * 00092400
*                                  in register (2)-(12), of a         * 00092500
*                                  required 4 byte input that         * 00092600
*                                  contains the address of the UCB    * 00092700
*                                  for the device to be reserved.     * 00092800
*                                  For unauthorized callers, the UCB  * 00092900
*                                  must be allocated to the job step  * 00093000
*                                  before ISGENQ RESERVEVOLUME(YES)   * 00093100
*                                  is issued.                         * 00093200
*                                                                     * 00093300
*                                  Note: Authorized callers do not    * 00093400
*                                  need to allocate the UCB to the    * 00093500
*                                  job step before invoking ISGENQ,   * 00093600
*                                  but the caller must serialize the  * 00093700
*                                  UCB against dynamic I/O            * 00093800
*                                  reconfiguration requests.  The     * 00093900
*                                  caller can accomplish this         * 00094000
*                                  serialization by allocating or     * 00094100
*                                  pinning the UCB.  Such             * 00094200
*                                  serialization ensures that a       * 00094300
*                                  dynamic I/O reconfiguration        * 00094400
*                                  request does not delete or reuse   * 00094500
*                                  the UCB before the ISGENQ macro    * 00094600
*                                  uses the address.                  * 00094700
*                                                                     * 00094800
*                                                                     * 00094900
*                                                                     * 00095000
*                                                                     * 00095100
*                              ÝSYNCHRES=»SYSTEM!YES!NOº¨¨            * 00095200
*                                  is an optional keyword input that  * 00095300
*                                  specifies whether the request      * 00095400
*                                  should issue a synchronous         * 00095500
*                                  reserve.  A synchronous reserve    * 00095600
*                                  immediately reserves the volume    * 00095700
*                                  instead of waiting for the first   * 00095800
*                                  use.                               * 00095900
*                                                                     * 00096000
*                                  Note that an RC=4 (ISGENQRc_Warn), * 00096100
*                                  RSC=0403                           * 00096200
*                                  (ISGENQRsn_ECBWillBePosted) is     * 00096300
*                                  presented for CONTENTIONACT=WAIT,  * 00096400
*                                  WAITTYPE=ECB, reserve requests     * 00096500
*                                  (where UCB@ is specified) when     * 00096600
*                                  there is contention on the ENQ     * 00096700
*                                  resource or there was no           * 00096800
*                                  contention on the resource, and    * 00096900
*                                  the reserve I/O was done           * 00097000
*                                  synchronously.                     * 00097100
*                                  DEFAULT: SYSTEM                    * 00097200
*                                                                     * 00097300
*                                                                     * 00097400
*                                  SYNCHRES=SYSTEM                    * 00097500
*                                      Indicates that the             * 00097600
*                                      installation system default    * 00097700
*                                      SYNCHRES setting should be     * 00097800
*                                      used.                          * 00097900
*                                                                     * 00098000
*                                  SYNCHRES=YES                       * 00098100
*                                      Indicates to issue a           * 00098200
*                                      synchronous reserve. In cases  * 00098300
*                                      where the hardware reserve is  * 00098400
*                                      performed (it was not          * 00098500
*                                      converted to a Global/Systems  * 00098600
*                                      ENQ), the caller is ensured    * 00098700
*                                      that the reserve I/O is        * 00098800
*                                      complete when the ISGENQ       * 00098900
*                                      request has successfully       * 00099000
*                                      completed.                     * 00099100
*                                                                     * 00099200
*                                  SYNCHRES=NO                        * 00099300
*                                      Indicates that a synchronous   * 00099400
*                                      reserve should be avoided when * 00099500
*                                      possible. Some devices require * 00099600
*                                      that the reserve must be done  * 00099700
*                                      synchronously regardless of    * 00099800
*                                      this setting. If the reserve   * 00099900
*                                      I/O is not done synchronously, * 00100000
*                                      the reservce is done when the  * 00100100
*                                      first I/O is done to the       * 00100200
*                                      device after the reserve       * 00100300
*                                      request is issued.  See z/OS   * 00100400
*                                      MVS Planning: Global Resource  * 00100500
*                                      Serialization for more         * 00100600
*                                      information.                   * 00100700
*                                                                     * 00100800
*                                                                     * 00100900
*                                                                     * 00101000
*                                                                     * 00101100
*                                                                     * 00101200
*                                                                     * 00101300
*                                                                     * 00101400
*                                                                     * 00101500
*                                                                     * 00101600
*                                                                     * 00101700
*                      ENQTOKEN=xenqtoken¨                            * 00101800
*                          is the name (RS-type), or address in       * 00101900
*                          register (2)-(12), of a required 32        * 00102000
*                          character output that is a token that      * 00102100
*                          uniquely identifies the ENQ.  The ENQTOKEN * 00102200
*                          is used on subsequent REQUEST=RELEASE or   * 00102300
*                          CHANGE invocations to release or change    * 00102400
*                          the ENQ request.                           * 00102500
*                                                                     * 00102600
*                                                                     * 00102700
*                                                                     * 00102800
*                  ÝRESLIST=YES                                       * 00102900
*                      Indicates to obtain ENQs for multiple          * 00103000
*                      resources specified in a resource table.       * 00103100
*                      Specifying multiple requests in a list ensures * 00103200
*                      that they are processed atomically with        * 00103300
*                      respect to other ISGENQ requests.  However,    * 00103400
*                      the order in which the requests are processed  * 00103500
*                      is unpredictable.  Each request is treated as  * 00103600
*                      a separate request, and if COND=YES is         * 00103700
*                      specified, then the return code for each       * 00103800
*                      request should be checked.                     * 00103900
*                                                                     * 00104000
*                      Note: An easy way to release a list of ENQs is * 00104100
*                      to use the output ENQTOKEN table from the      * 00104200
*                      OBTAIN request as input to a RELEASE request.  * 00104300
*                                                                     * 00104400
*                                                                     * 00104500
*                      NUMRES=xnumres                                 * 00104600
*                          is the name (RS-type), or address in       * 00104700
*                          register (2)-(12), of a required halfword  * 00104800
*                          input that is the number of resource       * 00104900
*                          entries in the resource table.  The        * 00105000
*                          specified value can be in the range of 1   * 00105100
*                          to 2µ16-1 (65535).                         * 00105200
*                                                                     * 00105300
*                                                                     * 00105400
*                                                                     * 00105500
*                                                                     * 00105600
*                      RESTABLE=xrestable                             * 00105700
*                          is the name (RS-type), or address in       * 00105800
*                          register (2)-(12), of a required character * 00105900
*                          input that is a table specifying multiple  * 00106000
*                          ENQ requests.  The resource table is       * 00106100
*                          mapped by ISGYENQRes in the ISGYENQ macro. * 00106200
*                                                                     * 00106300
*                                                                     * 00106400
*                                                                     * 00106500
*                                                                     * 00106600
*                      ENQTOKENTBL=xenqtokentbl                       * 00106700
*                          is the name (RS-type), or address in       * 00106800
*                          register (2)-(12), of a required character * 00106900
*                          output that is a table of ENQ tokens.      * 00107000
*                          Mapped by ISGYENQToken in the ISGYENQ      * 00107100
*                          macro.  To easily release any ENQs         * 00107200
*                          obtained by a REQUEST=OBTAIN use the same  * 00107300
*                          ENQToken table as input to a               * 00107400
*                          REQUEST=RELEASE.                           * 00107500
*                                                                     * 00107600
*                                                                     * 00107700
*                                                                     * 00107800
*                                                                     * 00107900
*                      ÝRETURNTABLE=xreturntable¨                     * 00108000
*                          is the name (RS-type), or address in       * 00108100
*                          register (2)-(12), of an optional          * 00108200
*                          character output that is a table that      * 00108300
*                          contains the return and reason codes.      * 00108400
*                          Mapped by ISGYENQReturn in the ISGYENQ     * 00108500
*                          macro.  The return table is only valid     * 00108600
*                          when ISGENQRsn_NonZeroReturnCodes is       * 00108700
*                          returned in the RSNCODE.  Mutually         * 00108800
*                          exclusive with COND=NO.                    * 00108900
*                                                                     * 00109000
*                                                                     * 00109100
*                                                                     * 00109200
*                                                                     * 00109300
*                      ÝQNAME=»xqname!DO_NOT_OVERRIDEº¨               * 00109400
*                          is the name (RS-type), or address in       * 00109500
*                          register (2)-(12), of an optional 8        * 00109600
*                          character input that is a common QNAME to  * 00109700
*                          be used for all resources in the resource  * 00109800
*                          table.  This overrides any QNAMEs          * 00109900
*                          specified in the resource table.  The      * 00110000
*                          QNAME can contain any character from X'00' * 00110100
*                          to X'FF'. However, a unique readable value * 00110200
*                          that identifies the functional area or a   * 00110300
*                          high level of what is being serialized is  * 00110400
*                          preferred.  Every program issuing a        * 00110500
*                          request for a serially reusable resource   * 00110600
*                          must use the same QNAME, RNAME, and Scope  * 00110700
*                          to represent the resource.  Some names,    * 00110800
*                          such as those beginning with certain       * 00110900
*                          letter combinations (SYSZ for example),    * 00111000
*                          are used to protect system resources by    * 00111100
*                          requiring that the issuing program be in   * 00111200
*                          supervisor state, or system key, or        * 00111300
*                          APF-authorized. Authorized programs must   * 00111400
*                          use a restricted QNAME (as described under * 00111500
*                          Minimum authorization in the Environment   * 00111600
*                          section for this service ) to prevent      * 00111700
*                          interference from unauthorized programs.   * 00111800
*                                                                     * 00111900
*                          Note: See z/OS MVS Diagnosis: Reference    * 00112000
*                          for a list of QNAME (also known as major   * 00112100
*                          name) and RNAME (also known as minor name) * 00112200
*                          ENQ/DEQ names and the resources that issue * 00112300
*                          the ENQ/DEQ.                               * 00112400
*                          DEFAULT: DO_NOT_OVERRIDE                   * 00112500
*                                                                     * 00112600
*                                                                     * 00112700
*                                                                     * 00112800
*                                                                     * 00112900
*                      ÝRNAME=»xrname!DO_NOT_OVERRIDEº¨               * 00113000
*                          is the name (RS-type), or address in       * 00113100
*                          register (2)-(12), of an optional          * 00113200
*                          character input that is the common RNAME   * 00113300
*                          to be used for all resources in the        * 00113400
*                          resource table.  This overrides any RNAMEs * 00113500
*                          specified in the resource table.  The      * 00113600
*                          RNAME must be from 1 to 255 bytes long,    * 00113700
*                          and can contain any hexadecimal character  * 00113800
*                          from X'00' to X'FF'.                       * 00113900
*                          DEFAULT: DO_NOT_OVERRIDE                   * 00114000
*                                                                     * 00114100
*                                                                     * 00114200
*                                                                     * 00114300
*                                                                     * 00114400
*                      ÝRNAMELEN=»xrnamelen!DO_NOT_OVERRIDEº¨         * 00114500
*                          is the name (RS-type), or address in       * 00114600
*                          register (2)-(12), of an optional byte     * 00114700
*                          input that is a common length to be used   * 00114800
*                          for all RNAMEs in the resource table, or   * 00114900
*                          if a common RNAME is specified, it is the  * 00115000
*                          length of the common RNAME.  The specified * 00115100
*                          length can be in the range of 1 to 255.    * 00115200
*                          This overrides any RNAMEs lengths          * 00115300
*                          specified in the resource table.           * 00115400
*                          DEFAULT: DO_NOT_OVERRIDE                   * 00115500
*                                                                     * 00115600
*                                                                     * 00115700
*                                                                     * 00115800
*                                                                     * 00115900
*                      ÝCONTROL=»DO_NOT_OVERRIDE!EXCLUSIVE!SHAREDº¨   * 00116000
*                                                                     * 00116100
*                          is an optional keyword input that is the   * 00116200
*                          type of control to be used for all         * 00116300
*                          resources specified in the resource table. * 00116400
*                          This overrides any control specified in    * 00116500
*                          the resource table.  If the resource is    * 00116600
*                          modified while under control of the task,  * 00116700
*                          the request must be for exclusive control. * 00116800
*                          If the resource is not modified, the       * 00116900
*                          request should be for shared control.      * 00117000
*                          DEFAULT: DO_NOT_OVERRIDE                   * 00117100
*                                                                     * 00117200
*                                                                     * 00117300
*                          CONTROL=DO_NOT_OVERRIDE                    * 00117400
*                              Indicates that the control specified   * 00117500
*                              in the resource table should be used.  * 00117600
*                                                                     * 00117700
*                          CONTROL=EXCLUSIVE                          * 00117800
*                              Indicates that all requests are for    * 00117900
*                              exclusive control of the resources.    * 00118000
*                                                                     * 00118100
*                          CONTROL=SHARED                             * 00118200
*                              Indicates that all requests are for    * 00118300
*                              shared control of the resources.       * 00118400
*                                                                     * 00118500
*                                                                     * 00118600
*                                                                     * 00118700
*                                                                     * 00118800
*                                                                     * 00118900
*                                                                     * 00119000
*                      ÝSCOPE=»DO_NOT_OVERRIDE!STEP!SYSTEM!SYSTEMS!SY * 00119100
*                          SPLEXº¨                                    * 00119200
*                          is an optional keyword input that is the   * 00119300
*                          scope to be used for all resources in the  * 00119400
*                          resource table.  This overrides any scopes * 00119500
*                          specified in the resource table.           * 00119600
*                          DEFAULT: DO_NOT_OVERRIDE                   * 00119700
*                                                                     * 00119800
*                                                                     * 00119900
*                          ÝSCOPE=DO_NOT_OVERRIDE¨                    * 00120000
*                              Indicates that the scope specified in  * 00120100
*                              the resource table should be used.     * 00120200
*                                                                     * 00120300
*                          ÝSCOPE=STEP¨                               * 00120400
*                              Indicates that the resource is         * 00120500
*                              serialized only within an address      * 00120600
*                              space.  If STEP is specified, a        * 00120700
*                              request for the same QNAME and RNAME   * 00120800
*                              from a program in another address      * 00120900
*                              space denotes a different resource.    * 00121000
*                                                                     * 00121100
*                          ÝSCOPE=SYSTEM¨                             * 00121200
*                              Indicates that the resource is         * 00121300
*                              serialized across all address spaces   * 00121400
*                              in a system.                           * 00121500
*                                                                     * 00121600
*                          ÝSCOPE=SYSTEMS¨                            * 00121700
*                              Indicates that the resource is         * 00121800
*                              serialized across all systems in a GRS * 00121900
*                              Star or GRS Ring complex.              * 00122000
*                                                                     * 00122100
*                          ÝSCOPE=SYSPLEX¨                            * 00122200
*                              Indicates that the resource is         * 00122300
*                              serialized across all systems in a GRS * 00122400
*                              Star sysplex or GRS ring. (Same as     * 00122500
*                              scope SYSTEMS.)                        * 00122600
*                                                                     * 00122700
*                                                                     * 00122800
*                                                                     * 00122900
*                                                                     * 00123000
*                                                                     * 00123100
*                                                                     * 00123200
*                      ÝRNL=»DO_NOT_OVERRIDE!YES!NOº¨                 * 00123300
*                          is an optional keyword input that          * 00123400
*                          indicates whether the scope can be changed * 00123500
*                          by global resource serialization resource  * 00123600
*                          name list (RNL) processing or the dynamic  * 00123700
*                          exits.  This overrides any RNL processing  * 00123800
*                          specified in the resource table.           * 00123900
*                          DEFAULT: DO_NOT_OVERRIDE                   * 00124000
*                                                                     * 00124100
*                                                                     * 00124200
*                          RNL=DO_NOT_OVERRIDE                        * 00124300
*                              Indicates that the RNL specifications  * 00124400
*                              in the resource table should be used.  * 00124500
*                                                                     * 00124600
*                          RNL=YES                                    * 00124700
*                              Indicates that global resource         * 00124800
*                              serialization RNL processing should be * 00124900
*                              used, which can cause the scope of a   * 00125000
*                              resource to change.  IBM suggests that * 00125100
*                              you use the default, RNL=YES, to allow * 00125200
*                              global resource serialization to       * 00125300
*                              perform RNL processing.                * 00125400
*                                                                     * 00125500
*                          RNL=NO                                     * 00125600
*                              Indicates that global resource         * 00125700
*                              serialization RNL processing should    * 00125800
*                              not be used.  The scope of the         * 00125900
*                              resource cannot be changed by the RNLs * 00126000
*                              or any dynamic exits.  Use RNL=NO when * 00126100
*                              you are sure that you want the request * 00126200
*                              to be processed only by global         * 00126300
*                              resource serialization using only the  * 00126400
*                              specified scope.  When RNL=NO is       * 00126500
*                              specified, the ENQ request is ignored  * 00126600
*                              by alternative serialization products. * 00126700
*                                                                     * 00126800
*                                                                     * 00126900
*                                                                     * 00127000
*                                                                     * 00127100
*                                                                     * 00127200
*                                                                     * 00127300
*                      ÝUCB@=»xucb@!DO_NOT_OVERRIDEº¨                 * 00127400
*                          is the name (RS-type), or address in       * 00127500
*                          register (2)-(12), of an optional 4 byte   * 00127600
*                          input that contains the address of the     * 00127700
*                          UCB@ for the device to be reserved for all * 00127800
*                          resources in the resource table.  This     * 00127900
*                          overrides any UCB addresses specified in   * 00128000
*                          the resource table.                        * 00128100
*                          DEFAULT: DO_NOT_OVERRIDE                   * 00128200
*                                                                     * 00128300
*                                                                     * 00128400
*                                                                     * 00128500
*                                                                     * 00128600
*                      ÝSYNCHRES=»DO_NOT_OVERRIDE!SYSTEM!YES!NOº¨¨    * 00128700
*                          is an optional keyword input that          * 00128800
*                          specifies whether all requests specified   * 00128900
*                          in the resource table should issue a       * 00129000
*                          synchronous reserve.  This overrides any   * 00129100
*                          SYNCHRES specified in the resource table.  * 00129200
*                          A synchronous reserve immediately reserves * 00129300
*                          the volume instead of waiting for the      * 00129400
*                          first use.                                 * 00129500
*                          DEFAULT: DO_NOT_OVERRIDE                   * 00129600
*                                                                     * 00129700
*                                                                     * 00129800
*                          SYNCHRES=DO_NOT_OVERRIDE                   * 00129900
*                              Indicates that the SYNCHRES specified  * 00130000
*                              in the resource table should be used.  * 00130100
*                                                                     * 00130200
*                          SYNCHRES=SYSTEM                            * 00130300
*                              Indicates that the system default      * 00130400
*                              setting should be used.                * 00130500
*                                                                     * 00130600
*                          SYNCHRES=YES                               * 00130700
*                              Indicates to issue a synchronous       * 00130800
*                              reserve. In cases where the the        * 00130900
*                              hardware reserve is performed (it was  * 00131000
*                              not converted to a Global/Systems      * 00131100
*                              ENQ), the caller is ensured that the   * 00131200
*                              reserve I/O is complete when the       * 00131300
*                              request has successfully completed.    * 00131400
*                                                                     * 00131500
*                          SYNCHRES=NO                                * 00131600
*                              Indicates that a synchronous reserve   * 00131700
*                              should be avoided when possible. Some  * 00131800
*                              devices require that the reserve must  * 00131900
*                              be done synchronously regardless of    * 00132000
*                              this setting. If the reserve I/O is    * 00132100
*                              not done synchronously, the reserve is * 00132200
*                              done when the first I/O is done to the * 00132300
*                              device after the reserve request is    * 00132400
*                              issued.  See z/OS MVS Planning: Global * 00132500
*                              Resource Serialization for more        * 00132600
*                              information.                           * 00132700
*                                                                     * 00132800
*                                                                     * 00132900
*                                                                     * 00133000
*                                                                     * 00133100
*                                                                     * 00133200
*                                                                     * 00133300
*                                                                     * 00133400
*                                                                     * 00133500
*                                                                     * 00133600
*          REQUEST=CHANGE                                             * 00133700
*              Indicates a request to change the status an ENQ to the * 00133800
*              specified control.                                     * 00133900
*                                                                     * 00134000
*                                                                     * 00134100
*              ÝRESLIST=»NO!YESº¨                                     * 00134200
*                  is an optional keyword input                       * 00134300
*                  DEFAULT: NO                                        * 00134400
*                                                                     * 00134500
*                                                                     * 00134600
*                  ÝRESLIST=NO                                        * 00134700
*                      Indicates to change the control of a single    * 00134800
*                      ENQ.                                           * 00134900
*                                                                     * 00135000
*                                                                     * 00135100
*                      ENQTOKEN=xenqtoken¨                            * 00135200
*                          is the name (RS-type), or address in       * 00135300
*                          register (2)-(12), of a required 32        * 00135400
*                          character input that is an ENQ Token of    * 00135500
*                          the ENQ to be changed.                     * 00135600
*                                                                     * 00135700
*                                                                     * 00135800
*                                                                     * 00135900
*                  ÝRESLIST=YES                                       * 00136000
*                      Indicates to change the control for multiple   * 00136100
*                      ENQs.                                          * 00136200
*                                                                     * 00136300
*                                                                     * 00136400
*                      NUMRES=xnumres                                 * 00136500
*                          is the name (RS-type), or address in       * 00136600
*                          register (2)-(12), of a required halfword  * 00136700
*                          input that is the number of ENQ tokens in  * 00136800
*                          the ENQ token table.  The specified value  * 00136900
*                          can be in the range of 1 to 2µ16-1         * 00137000
*                          (65535).                                   * 00137100
*                                                                     * 00137200
*                                                                     * 00137300
*                                                                     * 00137400
*                                                                     * 00137500
*                      ENQTOKENTBL=xenqtokentbl                       * 00137600
*                          is the name (RS-type), or address in       * 00137700
*                          register (2)-(12), of a required character * 00137800
*                          input that is a table of ENQ Tokens.       * 00137900
*                          Mapped by ISGYENQToken in the ISGYENQ      * 00138000
*                          macro.                                     * 00138100
*                                                                     * 00138200
*                                                                     * 00138300
*                                                                     * 00138400
*                                                                     * 00138500
*                      ÝRETURNTABLE=xreturntable¨¨                    * 00138600
*                          is the name (RS-type), or address in       * 00138700
*                          register (2)-(12), of an optional          * 00138800
*                          character output that is a table that      * 00138900
*                          contains the return and reason codes.      * 00139000
*                          Mapped by ISGYENQReturn in the ISGYENQ     * 00139100
*                          macro.  The return table is only valid     * 00139200
*                          when ISGENQRsn_NonZeroReturnCodes is       * 00139300
*                          returned in the RSNCODE.  Mutually         * 00139400
*                          exclusive with COND=NO.                    * 00139500
*                                                                     * 00139600
*                                                                     * 00139700
*                                                                     * 00139800
*                                                                     * 00139900
*                                                                     * 00140000
*                                                                     * 00140100
*                                                                     * 00140200
*                                                                     * 00140300
*              ÝOWNINGTTOKEN=»xowningttoken!CURRENT_TASKº¨            * 00140400
*                  is the name (RS-type), or address in register      * 00140500
*                  (2)-(12), of an optional 16 character input that   * 00140600
*                  is the task token (TToken) of the task that owns   * 00140700
*                  the ENQ that is to be changed.  The TToken must    * 00140800
*                  specify a task in the caller's home address space. * 00140900
*                  DEFAULT: CURRENT_TASK                              * 00141000
*                                                                     * 00141100
*                                                                     * 00141200
*                                                                     * 00141300
*                                                                     * 00141400
*              ÝCONTROL=»EXCLUSIVE!SHAREDº¨                           * 00141500
*                  is an optional keyword input that is the control   * 00141600
*                  type to which the ENQ is to be changed.  If the    * 00141700
*                  resource is modified while under control of the    * 00141800
*                  task, the request must be for exclusive control.   * 00141900
*                  If the resource is not modified, the request       * 00142000
*                  should be for shared control.                      * 00142100
*                  DEFAULT: EXCLUSIVE                                 * 00142200
*                                                                     * 00142300
*                                                                     * 00142400
*                  ÝCONTROL=EXCLUSIVE¨                                * 00142500
*                      Indicates that the request is to change to     * 00142600
*                      exclusive control of the resource.             * 00142700
*                                                                     * 00142800
*                  ÝCONTROL=SHARED¨                                   * 00142900
*                      Indicates that the request is to change to     * 00143000
*                      shared control of the resource.                * 00143100
*                                                                     * 00143200
*                                                                     * 00143300
*                                                                     * 00143400
*                                                                     * 00143500
*                                                                     * 00143600
*          REQUEST=RELEASE                                            * 00143700
*              Indicates a request to release (dequeue) the ENQ for a * 00143800
*              resource.                                              * 00143900
*                                                                     * 00144000
*                                                                     * 00144100
*              ÝRESLIST=»NO!YESº¨                                     * 00144200
*                  is an optional keyword input                       * 00144300
*                  DEFAULT: NO                                        * 00144400
*                                                                     * 00144500
*                                                                     * 00144600
*                  ÝRESLIST=NO                                        * 00144700
*                      Indicates to single ENQ RELEASE request.       * 00144800
*                                                                     * 00144900
*                                                                     * 00145000
*                      ENQTOKEN=xenqtoken¨                            * 00145100
*                          is the name (RS-type), or address in       * 00145200
*                          register (2)-(12), of a required 32        * 00145300
*                          character input that is an ENQ Token of    * 00145400
*                          the ENQ to be released.                    * 00145500
*                                                                     * 00145600
*                                                                     * 00145700
*                                                                     * 00145800
*                  ÝRESLIST=YES                                       * 00145900
*                      Indicates to change the disposition for        * 00146000
*                      multiple ENQs.                                 * 00146100
*                                                                     * 00146200
*                      Note: A easy way to release a list of ENQs is  * 00146300
*                      to use the output ENQTOKEN table from the      * 00146400
*                      OBTAIN request as input to a RELEASE request.  * 00146500
*                                                                     * 00146600
*                                                                     * 00146700
*                      NUMRES=xnumres                                 * 00146800
*                          is the name (RS-type), or address in       * 00146900
*                          register (2)-(12), of a required halfword  * 00147000
*                          input that is the number of ENQ tokens in  * 00147100
*                          the ENQ Token Table.  The specified value  * 00147200
*                          can be in the range of 1 to 2µ16-1         * 00147300
*                          (65535).                                   * 00147400
*                                                                     * 00147500
*                                                                     * 00147600
*                                                                     * 00147700
*                                                                     * 00147800
*                      ENQTOKENTBL=xenqtokentbl                       * 00147900
*                          is the name (RS-type), or address in       * 00148000
*                          register (2)-(12), of a required character * 00148100
*                          input that is a table of ENQ Tokens.       * 00148200
*                          Mapped by ISGYENQToken in the ISGYENQ      * 00148300
*                          macro.                                     * 00148400
*                                                                     * 00148500
*                                                                     * 00148600
*                                                                     * 00148700
*                                                                     * 00148800
*                      ÝRETURNTABLE=xreturntable¨¨                    * 00148900
*                          is the name (RS-type), or address in       * 00149000
*                          register (2)-(12), of an optional          * 00149100
*                          character output that is a table that      * 00149200
*                          contains the return and reason codes.      * 00149300
*                          Mapped by ISGYENQReturn in the ISGYENQ     * 00149400
*                          macro.  The return table is only valid     * 00149500
*                          when ISGENQRsn_NonZeroReturnCodes is       * 00149600
*                          returned in the RSNCODE.  Mutually         * 00149700
*                          exclusive with COND=NO.                    * 00149800
*                                                                     * 00149900
*                                                                     * 00150000
*                                                                     * 00150100
*                                                                     * 00150200
*                                                                     * 00150300
*                                                                     * 00150400
*                                                                     * 00150500
*                                                                     * 00150600
*              ÝOWNINGTTOKEN=»xowningttoken!CURRENT_TASKº¨            * 00150700
*                  is the name (RS-type), or address in register      * 00150800
*                  (2)-(12), of an optional 16 character input that   * 00150900
*                  is the task token (TToken) of the task that owns   * 00151000
*                  the ENQs that are to be released.  The TToken must * 00151100
*                  specify a task in the caller's home address space. * 00151200
*                  DEFAULT: CURRENT_TASK                              * 00151300
*                                                                     * 00151400
*                                                                     * 00151500
*                                                                     * 00151600
*                                                                     * 00151700
*                                                                     * 00151800
*                                                                     * 00151900
*                                                                     * 00152000
*                                                                     * 00152100
*      ÝCOND=»NO!YESº¨                                                * 00152200
*          is an optional keyword input that indicates how the        * 00152300
*          request is handled for unsuccessful processing.            * 00152400
*          DEFAULT: NO                                                * 00152500
*                                                                     * 00152600
*                                                                     * 00152700
*          ÝCOND=NO¨                                                  * 00152800
*              Indicates that if the request is not successful, then  * 00152900
*              ISGENQ should ABEND the caller.  COND=NO is mutually   * 00153000
*              exclusive with RETCODE, RSNCODE, RETURNTABLE,          * 00153100
*              WAITTYPE=ECB, and with TEST=YES.                       * 00153200
*                                                                     * 00153300
*          ÝCOND=YES¨                                                 * 00153400
*              Indicates that ISGENQ should always return to the      * 00153500
*              caller and indicate via return and reason codes        * 00153600
*              whether the request was successful.  If COND=YES is    * 00153700
*              specified, RETCODE and RSNCODE (and RETURNTABLE, if    * 00153800
*              RESLIST=YES) are required keywords.                    * 00153900
*                                                                     * 00154000
*              Note: When COND=YES, ISGENQ tries to provide return    * 00154100
*              and reason codes for the errors occurred during the    * 00154200
*              process, though in some cases abends might be issued.  * 00154300
*                                                                     * 00154400
*                                                                     * 00154500
*                                                                     * 00154600
*                                                                     * 00154700
*                                                                     * 00154800
*                                                                     * 00154900
*      ÝRETCODE=xretcode¨                                             * 00155000
*          is the name (RS-type) of an optional fullword output       * 00155100
*          variable, or register (2)-(12) or (15), into which the     * 00155200
*          return code is to be copied from GPR 15.  If you specify   * 00155300
*          15, GPR15, REG15, or R15 (within or without parentheses),  * 00155400
*          the value will be left in GPR 15.                          * 00155500
*                                                                     * 00155600
*                                                                     * 00155700
*                                                                     * 00155800
*                                                                     * 00155900
*      ÝRSNCODE=xrsncode¨                                             * 00156000
*          is the name (RS-type) of an optional fullword output       * 00156100
*          variable into which the reason code is to be copied from   * 00156200
*          GPR 0.  If you specify 0, 00, GPR0, GPR00, REG0, REG00, or * 00156300
*          R0 (within or without parentheses), the value will be left * 00156400
*          in GPR 0.                                                  * 00156500
*                                                                     * 00156600
*                                                                     * 00156700
*                                                                     * 00156800
*                                                                     * 00156900
*      ÝPLISTVER=»xplistver!IMPLIED_VERSIONº¨                         * 00157000
*          is an optional byte input decimal value in the "1-2" range * 00157100
*          that specifies the macro version.  PLISTVER is the only    * 00157200
*          key allowed on the list form of MF and determines which    * 00157300
*          parameter list is generated.  The macro keys associated    * 00157400
*          with each supported version of the macro are listed in     * 00157500
*          MACRO USAGE NOTE 2.  Note that MAX may be specified        * 00157600
*          instead of a number, and the parameter list will be of the * 00157700
*          largest size currently supported. This size may grow from  * 00157800
*          release to release (thus possibly affecting the amount of  * 00157900
*          storage needed by your program).  If your program can      * 00158000
*          tolerate this, IBM recommends that you always specify MAX  * 00158100
*          when creating the list form parameter list as that will    * 00158200
*          ensure that the list form parameter list is always long    * 00158300
*          enough to hold whatever parameters might be specified on   * 00158400
*          the execute form.                                          * 00158500
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00158600
*          default is the lowest version which allows all of the      * 00158700
*          parameters specified on the invocation to be processed.    * 00158800
*                                                                     * 00158900
*                                                                     * 00159000
*                                                                     * 00159100
*                                                                     * 00159200
*      ÝMF=»S!L!Eº¨                                                   * 00159300
*          is an optional keyword input which specifies the macro     * 00159400
*          form.                                                      * 00159500
*          DEFAULT: S                                                 * 00159600
*                                                                     * 00159700
*                                                                     * 00159800
*          ÝMF=S¨                                                     * 00159900
*              specifies the standard form of the macro.  The "S"     * 00160000
*              form generates code to put the parameters into an      * 00160100
*              in-line parameter list and invoke the desired service. * 00160200
*              Full checking for required macro keys is done along    * 00160300
*              with supplying defaults for omitted optional           * 00160400
*              parameters.                                            * 00160500
*                                                                     * 00160600
*          ÝMF=(L,xmfctrl»,xmfattr!0Dº)¨                              * 00160700
*              specifies the list form of the macro.  The "L" form    * 00160800
*              defines an area to be used for the parameter list.     * 00160900
*              Only the PLISTVER key may be specified on the          * 00161000
*              invocation.  All other macro parameters are flagged as * 00161100
*              errors.  If PLISTVER is not specified, the original    * 00161200
*              parameter list definition is used.                     * 00161300
*                                                                     * 00161400
*            ,xmfctrl                                                 * 00161500
*              is a required input.  It is the name of a storage area * 00161600
*              for the parameter list.                                * 00161700
*                                                                     * 00161800
*            »,xmfattr!0Dº                                            * 00161900
*              is an optional 60 character input string that varies   * 00162000
*              from 1 to 60 characters. Use it to force boundary      * 00162100
*              alignment of the parameter list. Use only 0F or 0D.    * 00162200
*              DEFAULT: 0D which forces the parameter list to a       * 00162300
*              doubleword boundary.                                   * 00162400
*                                                                     * 00162500
*          ÝMF=(E,xmfctrl»,COMPLETEº)¨                                * 00162600
*              specifies the execute form of the macro.  The "E" form * 00162700
*              generates code to put the parameters into the          * 00162800
*              parameter list specified by xmfctrl and provides full  * 00162900
*              syntax checking with default setting.                  * 00163000
*                                                                     * 00163100
*            ,xmfctrl                                                 * 00163200
*              is a required input.  It is the name (RS-type), or     * 00163300
*              address in register (1)-(12), of a storage area for    * 00163400
*              the parameter list.                                    * 00163500
*                                                                     * 00163600
*            »,COMPLETEº                                              * 00163700
*              is an optional keyword input which specifies the       * 00163800
*              degree of macro parameter syntax checking.             * 00163900
*              DEFAULT: COMPLETE                                      * 00164000
*                                                                     * 00164100
*                                                                     * 00164200
*              COMPLETE                                               * 00164300
*                  Checking for required macro keys is done and       * 00164400
*                  defaults are supplied for omitted optional         * 00164500
*                  parameters.                                        * 00164600
*                                                                     * 00164700
*                                                                     * 00164800
*                                                                     * 00164900
*                                                                     * 00165000
*                                                                     * 00165100
*                                                                     * 00165200
*                                                                     * 00165300
*01* RETURN CODES:                                                    * 00165400
*                                                                     * 00165500
*                                                                     * 00165600
*                 Macro ISGYCON provides equate symbols for the       * 00165700
*                 return and reason codes.                            * 00165800
*                                                                     * 00165900
*       00        Name: ISGENQRc_OK                                   * 00166000
*                                                                     * 00166100
*                 Meaning:  ISGENQ request successful.  Depending on  * 00166200
*                 the type of request, the ENQ was successfully       * 00166300
*                 obtained, changed to the specified control, or      * 00166400
*                 released.  If RESLIST=YES was specified, all ENQ    * 00166500
*                 obtain/change/release requests were successful.     * 00166600
*                 For REQUEST=OBTAIN, TEST=YES, the resource is       * 00166700
*                 immediately available.                              * 00166800
*                                                                     * 00166900
*                 Action: None required.                              * 00167000
*                                                                     * 00167100
*                                                                     * 00167200
*       04        Name: ISGENQRc_Warn                                 * 00167300
*                                                                     * 00167400
*                 Meaning: Warning                                    * 00167500
*                                                                     * 00167600
*                 Action: Refer to action under the individual reason * 00167700
*                 code.                                               * 00167800
*                                                                     * 00167900
*                                                                     * 00168000
*                 HEX REASON  MEANING/ACTION                          * 00168100
*                 CODE                                                * 00168200
*                                                                     * 00168300
*                 xxxx0401    Name: ISGENQRsn_NonZeroReturnCodes      * 00168400
*                                                                     * 00168500
*                             Meaning: A non-zero return code was     * 00168600
*                             issued for one or more entries in a     * 00168700
*                             RESLIST=YES request. The return table   * 00168800
*                             has the return and reason codes for     * 00168900
*                             each of the requests in the list.       * 00169000
*                                                                     * 00169100
*                             Action: See the return and reason codes * 00169200
*                             returned in the RETURNTABLE.            * 00169300
*                                                                     * 00169400
*                 xxxx0402    Name: ISGENQRsn_RequestNotProcessed     * 00169500
*                                                                     * 00169600
*                             Meaning: For RESLIST=YES requests.  One * 00169700
*                             of the other requests in the RESTABLE   * 00169800
*                             failed such that this request was       * 00169900
*                             prevented from being processed.  Note   * 00170000
*                             that requests in a RESTABLE are not     * 00170100
*                             necessarily processed in the order they * 00170200
*                             appear in the RESTABLE.  Note: This     * 00170300
*                             reason code returned only in the        * 00170400
*                             RETURNTABLE, not through the RSNCODE    * 00170500
*                             keyword.                                * 00170600
*                                                                     * 00170700
*                             Action: Check the return and reason     * 00170800
*                             codes for all other requests in the     * 00170900
*                             RETURNTABLE to identify the problem.    * 00171000
*                                                                     * 00171100
*                 xxxx0403    Name: ISGENQRsn_ECBWillBePosted         * 00171200
*                                                                     * 00171300
*                             Meaning: For REQUEST=OBTAIN             * 00171400
*                             CONTENTIONACT=WAIT WAITTYPE=ECB, the    * 00171500
*                             OBTAIN request was successful, but the  * 00171600
*                             ENQ resource was not immediately        * 00171700
*                             available or the reserve I/O needed to  * 00171800
*                             be done synchronously (SYNCHRES).  The  * 00171900
*                             ECB is posted when all requested        * 00172000
*                             resources are owned by the specified    * 00172100
*                             task, or when an error has occurred.    * 00172200
*                             The ENQToken for the request has been   * 00172300
*                             returned.                               * 00172400
*                                                                     * 00172500
*                             Action: Wait on the ECB and check the   * 00172600
*                             return code in the ECB before using the * 00172700
*                             requested resources.                    * 00172800
*                                                                     * 00172900
*                 xxxx0404    Name: ISGENQRsn_NotImmediatelyAvailable * 00173000
*                                                                     * 00173100
*                             Meaning: The ENQ of the resource was    * 00173200
*                             not immediately available.  For         * 00173300
*                             REQUEST=OBTAIN CONTENTIONACT=FAIL, the  * 00173400
*                             requested resource is not obtained.     * 00173500
*                             For REQUEST=OBTAIN TEST=YES, the holder * 00173600
*                             is a task other than OWNINGTTOKEN.      * 00173700
*                                                                     * 00173800
*                             Action: No action required.             * 00173900
*                                                                     * 00174000
*                 xxxx0405    Name: ISGENQRsn_TaskOwnsExclusive       * 00174100
*                                                                     * 00174200
*                             Meaning: For REQUEST=OBTAIN, including  * 00174300
*                             TEST=YES, the given task specified by   * 00174400
*                             OWNINGTTOKEN already owns the specified * 00174500
*                             resource exclusively.  The ENQToken for * 00174600
*                             the owning request has been returned.   * 00174700
*                                                                     * 00174800
*                             Action: No action required.             * 00174900
*                                                                     * 00175000
*                 xxxx0406    Name: ISGENQRsn_TaskOwnsShared          * 00175100
*                                                                     * 00175200
*                             Meaning: For a REQUEST=OBTAIN,          * 00175300
*                             including TEST=YES, the given task      * 00175400
*                             specified by OWNINGTTOKEN already owns  * 00175500
*                             the specified resource shared.  The     * 00175600
*                             ENQToken for the owning request has     * 00175700
*                             been returned.                          * 00175800
*                                                                     * 00175900
*                             Action: No action required.             * 00176000
*                                                                     * 00176100
*                 xxxx0407    Name: ISGENQRsn_TaskWaiting             * 00176200
*                                                                     * 00176300
*                             Meaning: For a REQUEST=OBTAIN,          * 00176400
*                             including TEST=YES, the given task      * 00176500
*                             specified by OWNINGTTOKEN is already    * 00176600
*                             waiting for control of the specified    * 00176700
*                             resource.  The ENQToken for the waiting * 00176800
*                             request has been returned.              * 00176900
*                                                                     * 00177000
*                             Action: No action required.             * 00177100
*                                                                     * 00177200
*                 xxxx0409    Name: ISGENQRsn_OtherSharedOwners       * 00177300
*                                                                     * 00177400
*                             Meaning: For REQUEST=CHANGE. The        * 00177500
*                             control cannot be changed to exclusive. * 00177600
*                             There are other shared owners of the    * 00177700
*                             resource.                               * 00177800
*                                                                     * 00177900
*                             Action: No action required.             * 00178000
*                                                                     * 00178100
*                 xxxx040A    Name: ISGENQRsn_TaskDoesNotOwn          * 00178200
*                                                                     * 00178300
*                             Meaning: For REQUEST=CHANGE. The        * 00178400
*                             control cannot be changed to the        * 00178500
*                             specified value. The task does not yet  * 00178600
*                             own the resource.                       * 00178700
*                                                                     * 00178800
*                             Action: No action required.             * 00178900
*                                                                     * 00179000
*                 xxxx040B    Name:                                   * 00179100
*                             ISGENQRsn_TaskSuspendedForResource      * 00179200
*                                                                     * 00179300
*                             Meaning: For REQUEST=RELEASE. The task  * 00179400
*                             that requested the ENQ obtain has not   * 00179500
*                             yet been assigned control of the        * 00179600
*                             resource The task continues waiting and * 00179700
*                             the resource is not released.  (This    * 00179800
*                             reason code might result in an exit     * 00179900
*                             routine, which received control because * 00180000
*                             of an interruption, issued a RELEASE    * 00180100
*                             reqquest on behalf of the task.)        * 00180200
*                                                                     * 00180300
*                             Action: Correct the program so that the * 00180400
*                             ISGENQ RELEASE request is issued only   * 00180500
*                             after the ISGENQ OBTAIN request has     * 00180600
*                             returned to the task.  If possible,     * 00180700
*                             avoid issuing the RELEASE request in    * 00180800
*                             the exit routine.                       * 00180900
*                                                                     * 00181000
*                 xxxx040D    Name: ISGENQRsn_UnprotectedQName        * 00181100
*                                                                     * 00181200
*                             Meaning: For REQUEST=OBTAIN.  An        * 00181300
*                             authorized caller requested an ENQ with * 00181400
*                             an unauthorized QNAME.                  * 00181500
*                                                                     * 00181600
*                             For TEST=NO,COND=YES, the OBTAIN        * 00181700
*                             request completed successfully, an      * 00181800
*                             unauthorized caller under the same      * 00181900
*                             owning task might release the ENQ. The  * 00182000
*                             ENQToken has been returned.             * 00182100
*                                                                     * 00182200
*                             For TEST=NO, COND=NO, the requester was * 00182300
*                             abended with a X'438' abend. The        * 00182400
*                             request might not have completed        * 00182500
*                             successfully                            * 00182600
*                                                                     * 00182700
*                             For TEST=YES requests, the resource is  * 00182800
*                             currently available.                    * 00182900
*                                                                     * 00183000
*                             Action: No action required.  If the ENQ * 00183100
*                             needs to be protected from unauthorized * 00183200
*                             RELEASE requests or from unauthorized   * 00183300
*                             callers obtaining an ENQ to block this  * 00183400
*                             request, specifiy one of the authorized * 00183500
*                             QNAMEs for the resource.                * 00183600
*                                                                     * 00183700
*                 xxxx040E    Name: ISGENQRsn_UnprotectedExitQNAME    * 00183800
*                                                                     * 00183900
*                             Meaning: For REQUEST=OBTAIN.  An        * 00184000
*                             authorized caller requested an ENQ with * 00184100
*                             a QNAME that a dynamic exit changed to  * 00184200
*                             an unauthorized QNAME.  For TEST=NO,    * 00184300
*                             the OBTAIN request completed            * 00184400
*                             successfully, an unauthorized caller    * 00184500
*                             under the same owning task might        * 00184600
*                             release the ENQ.  The ENQToken has been * 00184700
*                             returned.  For TEST=YES requests, the   * 00184800
*                             resource is currently available but the * 00184900
*                             QNAME was changed by a dynamic exit to  * 00185000
*                             an unprotected QNAME.                   * 00185100
*                                                                     * 00185200
*                             Action: No action required.  Contact    * 00185300
*                             the system programmer, if the ENQ needs * 00185400
*                             to be protected from unauthorized       * 00185500
*                             RELEASE requests or from unauthorized   * 00185600
*                             callers obtaining an ENQ to block this  * 00185700
*                             request.  The system programmer should  * 00185800
*                             check the ISGNQXIT installation exits   * 00185900
*                             to ensure that they are not coded to    * 00186000
*                             specify an unauthorized QNAME for       * 00186100
*                             authorized requests.                    * 00186200
*                                                                     * 00186300
*                 xxxx040F    Name:                                   * 00186400
*                             ISGENQRsn_ECBAtleastOneRequestFailed    * 00186500
*                                                                     * 00186600
*                             Meaning: For REQUEST=OBTAIN RESLIST=Yes * 00186700
*                             with ECB@, at least one request failed  * 00186800
*                             to be processed. Some requests might    * 00186900
*                             have been processed unsuccessfully. The * 00187000
*                             system might not backout any            * 00187100
*                             successfully processed requests.        * 00187200
*                                                                     * 00187300
*                             Note: This reason code is returned in a * 00187400
*                             posted ECB, not through the RSNCODE or  * 00187500
*                             RETURNTABLE keywords.                   * 00187600
*                                                                     * 00187700
*                             Action: The user should issue an        * 00187800
*                             ISGQUERY on the ENQTOKENs to see if     * 00187900
*                             they were obtained and take appropriate * 00188000
*                             action. Alternately, the user can       * 00188100
*                             release all the ENQs with a ISGENQ      * 00188200
*                             REQUEST=RELEASE with ENQTOKENTBL and    * 00188300
*                             reissue the ISGENQ OBTAIN request.      * 00188400
*                                                                     * 00188500
*                                                                     * 00188600
*                                                                     * 00188700
*                                                                     * 00188800
*       08        Name: ISGENQRc_ParmError                            * 00188900
*                                                                     * 00189000
*                 Meaning:  ISGENQ request specified parameters in    * 00189100
*                 error.                                              * 00189200
*                                                                     * 00189300
*                 Action: Refer to action under the individual reason * 00189400
*                 code.                                               * 00189500
*                                                                     * 00189600
*                                                                     * 00189700
*                 HEX REASON  MEANING/ACTION                          * 00189800
*                 CODE                                                * 00189900
*                                                                     * 00190000
*                 xxxx0801    Name: ISGENQRsn_BadPlistAddress         * 00190100
*                                                                     * 00190200
*                             Meaning: Unable to access parameter     * 00190300
*                             list.                                   * 00190400
*                                                                     * 00190500
*                             Action: Check that the entire parameter * 00190600
*                             list is addressable.  If in AR-mode,    * 00190700
*                             check that the ALET of the parameter    * 00190800
*                             list is correct.  Note that if this     * 00190900
*                             macro is issued in AR-mode, SYSSTATE    * 00191000
*                             ASCENV=AR must be issued before this    * 00191100
*                             macro.  Ensure that the storage is in   * 00191200
*                             the same key as the caller.             * 00191300
*                                                                     * 00191400
*                 xxxx0802    Name: ISGENQRsn_BadPlistALET            * 00191500
*                                                                     * 00191600
*                             Meaning: Bad parameter list ALET.  The  * 00191700
*                             ALET is neither zero nor is it          * 00191800
*                             associated with a valid public entry on * 00191900
*                             the caller's Dispatchable Unit Access   * 00192000
*                             List (DU-AL), nor a valid entry for a   * 00192100
*                             common area data space.                 * 00192200
*                                                                     * 00192300
*                             Action: Ensure that the ALET of the     * 00192400
*                             parameter list is valid.  Its access    * 00192500
*                             register may not have been set up       * 00192600
*                             properly.                               * 00192700
*                                                                     * 00192800
*                 xxxx0803    Name: ISGENQRsn_BadPlistVersion         * 00192900
*                                                                     * 00193000
*                             Meaning: Bad parameter list version     * 00193100
*                             number.  The service level of GRS on    * 00193200
*                             which the caller is running does not    * 00193300
*                             support this version of the ISGENQ      * 00193400
*                             service, or the ISGENQ parameter list   * 00193500
*                             version is lower than the minimum       * 00193600
*                             required for parameters that were       * 00193700
*                             specified.                              * 00193800
*                                                                     * 00193900
*                             Action: Check for possible storage      * 00194000
*                             overlay of the parameter list.  Retry   * 00194100
*                             the request with the correct version    * 00194200
*                             number.  Verify that your program was   * 00194300
*                             assembled with the correct macro        * 00194400
*                             library for the release of MVS on which * 00194500
*                             your program is running.                * 00194600
*                                                                     * 00194700
*                 xxxx0804    Name: ISGENQRsn_ReservedFieldNotNull    * 00194800
*                                                                     * 00194900
*                             Meaning: A reserved field in the        * 00195000
*                             parameter list is non-zero.             * 00195100
*                                                                     * 00195200
*                             Action: Check for possible storage      * 00195300
*                             overlay of the parameter list.          * 00195400
*                                                                     * 00195500
*                 xxxx0805    Name: ISGENQRsn_MutuallyExclusive       * 00195600
*                                                                     * 00195700
*                             Meaning: Mutually exclusive keywords    * 00195800
*                             were specified.                         * 00195900
*                                                                     * 00196000
*                             Action: Check for a possible storage    * 00196100
*                             overlay of the parameter list.          * 00196200
*                                                                     * 00196300
*                 xxxx0806    Name: ISGENQRsn_BadRequest              * 00196400
*                                                                     * 00196500
*                             Meaning: Bad REQUEST parameter.         * 00196600
*                                                                     * 00196700
*                             Action:  IBM suggests that the ISGENQ   * 00196800
*                             macro is used when invoking the ISGENQ  * 00196900
*                             service.                                * 00197000
*                                                                     * 00197100
*                 xxxx0807    Name: ISGENQRsn_BadContentionAct        * 00197200
*                                                                     * 00197300
*                             Meaning: Bad CONTENTIONACT parameter.   * 00197400
*                                                                     * 00197500
*                             Action: Check for possible storage      * 00197600
*                             overlay of the parameter list.          * 00197700
*                                                                     * 00197800
*                 xxxx0808    Name: ISGENQRsn_BadOwningTToken         * 00197900
*                                                                     * 00198000
*                             Meaning: The specified TToken does not  * 00198100
*                             represent a valid task.                 * 00198200
*                                                                     * 00198300
*                             Action: Ensure that the task token      * 00198400
*                             (TToken) represents a valid task.       * 00198500
*                                                                     * 00198600
*                 xxxx0809    Name: ISGENQRsn_BadAnsAreaAddress       * 00198700
*                                                                     * 00198800
*                             Meaning: Unable to access the answer    * 00198900
*                             area.                                   * 00199000
*                                                                     * 00199100
*                             Action: Ensure that the entire answer   * 00199200
*                             area is addressable.  If in AR-mode,    * 00199300
*                             this field is accessed via its address  * 00199400
*                             and ALET, check that both these values  * 00199500
*                             are correct.  Check that the specified  * 00199600
*                             answer area length is correct.  Ensure  * 00199700
*                             that the storage is in the same key as  * 00199800
*                             the caller.                             * 00199900
*                                                                     * 00200000
*                 xxxx080A    Name: ISGENQRsn_BadAnsAreaALET          * 00200100
*                                                                     * 00200200
*                             Meaning: Bad answer area ALET.  The     * 00200300
*                             ALET is neither zero nor is it          * 00200400
*                             associated with a valid public entry on * 00200500
*                             the caller's Dispatchable Unit Access   * 00200600
*                             List (DU-AL), nor a valid entry for a   * 00200700
*                             common area data space.                 * 00200800
*                                                                     * 00200900
*                             Action: Ensure that the ALET of the     * 00201000
*                             answer area is valid.  Its access       * 00201100
*                             register may not have been set up       * 00201200
*                             properly.                               * 00201300
*                                                                     * 00201400
*                 xxxx080B    Name: ISGENQRsn_AnsLenTooSmall          * 00201500
*                                                                     * 00201600
*                             Meaning: The specified answer area      * 00201700
*                             length was too small to return the      * 00201800
*                             requested information.                  * 00201900
*                                                                     * 00202000
*                             Action: Invoke ISGENQ again with a      * 00202100
*                             larger answer area.  The answer area    * 00202200
*                             length needed is dependent on the       * 00202300
*                             number of resource requests specified   * 00202400
*                             in NUMRES.                              * 00202500
*                                                                     * 00202600
*                 xxxx080C    Name: ISGENQRsn_BadRNameAddress         * 00202700
*                                                                     * 00202800
*                             Meaning: Unable to access the RNAME.    * 00202900
*                                                                     * 00203000
*                             Action: Ensure that the entire RNAME is * 00203100
*                             addressable.  If in AR-mode, this field * 00203200
*                             is accessed via its address and ALET,   * 00203300
*                             check that both these values are        * 00203400
*                             correct.  Check that the specified      * 00203500
*                             RNAME length is correct.  Ensure that   * 00203600
*                             the storage is in the same key as the   * 00203700
*                             caller.                                 * 00203800
*                                                                     * 00203900
*                 xxxx080D    Name: ISGENQRsn_BadRnameALET            * 00204000
*                                                                     * 00204100
*                             Meaning: Bad RNAME ALET.  The ALET is   * 00204200
*                             neither zero nor is it associated with  * 00204300
*                             a valid public entry on the caller's    * 00204400
*                             Dispatchable Unit Access List (DU-AL),  * 00204500
*                             nor a valid entry for a common area     * 00204600
*                             data space.                             * 00204700
*                                                                     * 00204800
*                             Action: Ensure that the ALET of the     * 00204900
*                             RNAME is valid.  Its access register    * 00205000
*                             may not have been set up properly.      * 00205100
*                                                                     * 00205200
*                 xxxx080E    Name: ISGENQRsn_BadRNameLen             * 00205300
*                                                                     * 00205400
*                             Meaning: The RNAME length specified is  * 00205500
*                             not valid.                              * 00205600
*                                                                     * 00205700
*                             Action: Ensure the RNAME length field   * 00205800
*                             contains a number in the range of       * 00205900
*                             1-255.                                  * 00206000
*                                                                     * 00206100
*                 xxxx080F    Name: ISGENQRsn_BadScope                * 00206200
*                                                                     * 00206300
*                             Meaning: Bad SCOPE keyword parameter.   * 00206400
*                                                                     * 00206500
*                             Action: Check for possible storage      * 00206600
*                             overlay of the parameter list.          * 00206700
*                                                                     * 00206800
*                 xxxx0810    Name: ISGENQRsn_BadUCB@                 * 00206900
*                                                                     * 00207000
*                             Meaning: The storage specified by the   * 00207100
*                             UCB@ keyword does not map to a valid    * 00207200
*                             UCB.                                    * 00207300
*                                                                     * 00207400
*                             Action: Ensure that the UCB@ points to  * 00207500
*                             a valid UCB.                            * 00207600
*                                                                     * 00207700
*                 xxxx0811    Name: ISGENQRsn_BadCond                 * 00207800
*                                                                     * 00207900
*                             Meaning: Bad COND keyword parameter.    * 00208000
*                                                                     * 00208100
*                             Action:  IBM suggests that the ISGENQ   * 00208200
*                             macro is used when invoking the ISGENQ  * 00208300
*                             service.                                * 00208400
*                                                                     * 00208500
*                 xxxx0812    Name: ISGENQRsn_BadSynchRes             * 00208600
*                                                                     * 00208700
*                             Meaning: Bad SYNCHRES keyword           * 00208800
*                             parameter.                              * 00208900
*                                                                     * 00209000
*                             Action: Check for possible storage      * 00209100
*                             overlay of the parameter list.          * 00209200
*                                                                     * 00209300
*                 xxxx0813    Name: ISGENQRsn_BadENQTokenAddress      * 00209400
*                                                                     * 00209500
*                             Meaning: Unable to access the ENQToken. * 00209600
*                                                                     * 00209700
*                             Action: Ensure that the entire ENQToken * 00209800
*                             is addressable.  If in AR-mode, this    * 00209900
*                             field is accessed via its address and   * 00210000
*                             ALET, check that both these values are  * 00210100
*                             correct.  Ensure that the storage is in * 00210200
*                             the same key as the caller.  Note: The  * 00210300
*                             ISGENQ request might not have           * 00210400
*                             completed.                              * 00210500
*                                                                     * 00210600
*                 xxxx0814    Name: ISGENQRsn_BadENQTokenALET         * 00210700
*                                                                     * 00210800
*                             Meaning: Bad ENQToken ALET.  The ALET   * 00210900
*                             is neither zero nor is it associated    * 00211000
*                             with a valid public entry on the        * 00211100
*                             caller's Dispatchable Unit Access List  * 00211200
*                             (DU-AL), nor a valid entry for a common * 00211300
*                             area data space.                        * 00211400
*                                                                     * 00211500
*                             Action: Ensure that the ALET of the     * 00211600
*                             ENQToken is valid.  Its access register * 00211700
*                             may not have been set up properly.      * 00211800
*                             Note: The ISGENQ request might not have * 00211900
*                             completed.                              * 00212000
*                                                                     * 00212100
*                 xxxx0815    Name: ISGENQRsn_BadENQToken             * 00212200
*                                                                     * 00212300
*                             Meaning: For REQUEST=RELEASE or         * 00212400
*                             REQUEST=CHANGE, the specified ENQToken  * 00212500
*                             does not represent an ENQ for the given * 00212600
*                             task (current task or specified by      * 00212700
*                             OWNINGTTOKEN).                          * 00212800
*                                                                     * 00212900
*                             Action: Ensure that the specified       * 00213000
*                             ENQToken is from a previous request for * 00213100
*                             the given task, that has not been       * 00213200
*                             subsequently released.                  * 00213300
*                                                                     * 00213400
*                 xxxx0816    Name: ISGENQRsn_BadNumRes               * 00213500
*                                                                     * 00213600
*                             Meaning: The NUMRES specified is not    * 00213700
*                             valid.                                  * 00213800
*                                                                     * 00213900
*                             Action: Ensure the NUMRES field         * 00214000
*                             contains a number in the range of       * 00214100
*                             1-65535 (2µ16-1)                        * 00214200
*                                                                     * 00214300
*                 xxxx0817    Name: ISGENQRsn_BadResTableAddress      * 00214400
*                                                                     * 00214500
*                             Meaning: Unable to access the resource  * 00214600
*                             table.                                  * 00214700
*                                                                     * 00214800
*                             Action: Ensure that the entire resource * 00214900
*                             table is addressable.  If in AR-mode,   * 00215000
*                             this field is accessed via its address  * 00215100
*                             and ALET, check that both these values  * 00215200
*                             are correct.  Check that the resource   * 00215300
*                             table length is correct.  Ensure that   * 00215400
*                             the storage is in the same key as the   * 00215500
*                             caller.                                 * 00215600
*                                                                     * 00215700
*                 xxxx0818    Name: ISGENQRsn_BadResTableALET         * 00215800
*                                                                     * 00215900
*                             Meaning: Bad resource table ALET.  The  * 00216000
*                             ALET is neither zero nor is it          * 00216100
*                             associated with a valid public entry on * 00216200
*                             the caller's Dispatchable Unit Access   * 00216300
*                             List (DU-AL), nor a valid entry for a   * 00216400
*                             common area data space.                 * 00216500
*                                                                     * 00216600
*                             Action: Ensure that the ALET of the     * 00216700
*                             resource table is valid.  Its access    * 00216800
*                             register may not have been set up       * 00216900
*                             properly.                               * 00217000
*                                                                     * 00217100
*                 xxxx0819    Name: ISGENQRsn_BadResTable             * 00217200
*                                                                     * 00217300
*                             Meaning: The RESTABLE specified is not  * 00217400
*                             valid.                                  * 00217500
*                                                                     * 00217600
*                             Action: Ensure that the resource table  * 00217700
*                             does not specify mutually exclusive     * 00217800
*                             parameters.                             * 00217900
*                                                                     * 00218000
*                 xxxx081A    Name: ISGENQRsn_BadENQTokenTblAddress   * 00218100
*                                                                     * 00218200
*                             Meaning: Unable to access the ENQToken  * 00218300
*                             table.                                  * 00218400
*                                                                     * 00218500
*                             Action: Ensure that the entire ENQToken * 00218600
*                             table is addressable.  If in AR-mode,   * 00218700
*                             this field is accessed via its address  * 00218800
*                             and ALET, check that both these values  * 00218900
*                             are correct.  Check that the ENQToken   * 00219000
*                             table length is correct.  Ensure that   * 00219100
*                             the storage is in the same key as the   * 00219200
*                             caller.  Note: The ISGENQ request might * 00219300
*                             not have completed.                     * 00219400
*                                                                     * 00219500
*                 xxxx081B    Name: ISGENQRsn_BadENQTokenTblALET      * 00219600
*                                                                     * 00219700
*                             Meaning: Bad ENQToken table ALET.  The  * 00219800
*                             ALET is neither zero nor is it          * 00219900
*                             associated with a valid public entry on * 00220000
*                             the caller's Dispatchable Unit Access   * 00220100
*                             List (DU-AL), nor a valid entry for a   * 00220200
*                             common area data space.                 * 00220300
*                                                                     * 00220400
*                             Action: Ensure that the ALET of the     * 00220500
*                             ENQToken table is valid.  Its access    * 00220600
*                             register may not have been set up       * 00220700
*                             properly.  Note: The ISGENQ request     * 00220800
*                             might not have completed.               * 00220900
*                                                                     * 00221000
*                 xxxx081C    Name: ISGENQRsn_BadReturnTableAddress   * 00221100
*                                                                     * 00221200
*                             Meaning: Unable to access the return    * 00221300
*                             table.                                  * 00221400
*                                                                     * 00221500
*                             Action: Ensure that the entire return   * 00221600
*                             table is addressable.  If in AR-mode,   * 00221700
*                             this field is accessed via its address  * 00221800
*                             and ALET, check that both these values  * 00221900
*                             are correct.  Check that the return     * 00222000
*                             table length is correct.  Ensure that   * 00222100
*                             the storage is in the same key as the   * 00222200
*                             caller.  Note: The ISGENQ request might * 00222300
*                             not have completed.                     * 00222400
*                                                                     * 00222500
*                 xxxx081D    Name: ISGENQRsn_BadReturnTableALET      * 00222600
*                                                                     * 00222700
*                             Meaning: Bad return table ALET.  The    * 00222800
*                             ALET is neither zero nor is it          * 00222900
*                             associated with a valid public entry on * 00223000
*                             the caller's Dispatchable Unit Access   * 00223100
*                             List (DU-AL), nor a valid entry for a   * 00223200
*                             common area data space.                 * 00223300
*                                                                     * 00223400
*                             Action: Ensure that the ALET of the     * 00223500
*                             return table is valid.  Its access      * 00223600
*                             register may not have been set up       * 00223700
*                             properly.  Note: The ISGENQ request     * 00223800
*                             might not have completed.               * 00223900
*                                                                     * 00224000
*                 xxxx081E    Name: ISGENQRsn_NotAuthorizedForQName   * 00224100
*                                                                     * 00224200
*                             Meaning: For REQUEST=OBTAIN.  An        * 00224300
*                             unauthorized caller specified an        * 00224400
*                             authorized QNAME.                       * 00224500
*                                                                     * 00224600
*                             Action: Unauthorized callers must avoid * 00224700
*                             specifying the authorized QNAMEs listed * 00224800
*                             in the ISGENQ macro prologue.           * 00224900
*                                                                     * 00225000
*                 xxxx081F    Name:                                   * 00225100
*                             ISGENQRsn_NotAuthorizedForExitQname     * 00225200
*                                                                     * 00225300
*                             Meaning: For REQUEST=OBTAIN.  An        * 00225400
*                             ISGNQXIT exit specified an authorized   * 00225500
*                             QNAME for an unauthorized OBTAIN        * 00225600
*                             request.                                * 00225700
*                                                                     * 00225800
*                             Action: Contact your system programmer. * 00225900
*                             The system programmer should check the  * 00226000
*                             ISGNQXIT installation exits to ensure   * 00226100
*                             they are not coded to specify an        * 00226200
*                             authorized QNAME for unauthorized       * 00226300
*                             requests.                               * 00226400
*                                                                     * 00226500
*                 xxxx0820    Name: ISGENQRsn_NotAuthorizedForECB     * 00226600
*                                                                     * 00226700
*                             Meaning: This reason code is no not     * 00226800
*                             used.  Prior to v1r12, this reason code * 00226900
*                             indicated that the caller was not       * 00227000
*                             authorized to specify WAITTYPE=ECB.     * 00227100
*                             From v1r12, support is provided for     * 00227200
*                             unauthorized callers who specify        * 00227300
*                             WAITTYPE=ECB.                           * 00227400
*                                                                     * 00227500
*                             Action: NA - no longer used.            * 00227600
*                                                                     * 00227700
*                 xxxx0821    Name:                                   * 00227800
*                             ISGENQRsn_NotAuthorizedForOWNINGTTOKEN  * 00227900
*                                                                     * 00228000
*                             Meaning: An unauthorized caller         * 00228100
*                             specified OWNINGTTOKEN.                 * 00228200
*                                                                     * 00228300
*                             Action: Unauthorized callers should     * 00228400
*                             avoid specifying OWNINGTTOKEN.          * 00228500
*                                                                     * 00228600
*                 xxxx0822    Name: ISGENQRsn_BadUserDataAddress      * 00228700
*                                                                     * 00228800
*                             Meaning: Unable to access the USERDATA. * 00228900
*                                                                     * 00229000
*                             Action: Ensure that the entire USERDATA * 00229100
*                             is addressable.  If in AR-mode, this    * 00229200
*                             field is accessed via its address and   * 00229300
*                             ALET, check that both these values are  * 00229400
*                             correct.  Ensure that the storage is in * 00229500
*                             the same key as the caller.             * 00229600
*                                                                     * 00229700
*                 xxxx0823    Name: ISGENQRsn_BadUserDataAlet         * 00229800
*                                                                     * 00229900
*                             Meaning: Bad UserData ALET.  The ALET   * 00230000
*                             is neither zero nor is it associated    * 00230100
*                             with a valid public entry on the        * 00230200
*                             caller's Dispatchable Unit Access List  * 00230300
*                             (DU-AL), nor a valid entry for a common * 00230400
*                             area data space.                        * 00230500
*                                                                     * 00230600
*                             Action: Ensure that the ALET of the     * 00230700
*                             userdata is valid.  Its access register * 00230800
*                             may not have been set up properly.      * 00230900
*                                                                     * 00231000
*                 xxxx0824    Name: ISGENQRsn_DeviceNotAllocated      * 00231100
*                                                                     * 00231200
*                             Meaning: For REQUEST=OBTAIN with        * 00231300
*                             RESERVEVOLUME=YES.  An unauthorized     * 00231400
*                             caller specified a device that is not   * 00231500
*                             allocated to the requesting task.       * 00231600
*                                                                     * 00231700
*                             Action: Unauthorized callers should     * 00231800
*                             allocate the UCB to the job step before * 00231900
*                             ISGENQ RESERVEVOLUME(YES) is issued.    * 00232000
*                                                                     * 00232100
*                 xxxx0825    Name: ISGENQRsn_ExitDeviceNotAllocated  * 00232200
*                                                                     * 00232300
*                             Meaning: For REQUEST=OBTAIN.  An        * 00232400
*                             ISGNQXIT exit specified a UCB for a     * 00232500
*                             device that is not allocated to the     * 00232600
*                             requesting, unauthorized task.          * 00232700
*                                                                     * 00232800
*                             Action: Contact your system programmer. * 00232900
*                             The system programmer should ensure     * 00233000
*                             that the installation exits do not      * 00233100
*                             modify the UCB to specify one that is   * 00233200
*                             not allocated to an unauthorized        * 00233300
*                             requests.                               * 00233400
*                                                                     * 00233500
*                 xxxx0826    Name: ISGENQRsn_BadControl              * 00233600
*                                                                     * 00233700
*                             Meaning: Bad CONTROL keyword parameter. * 00233800
*                                                                     * 00233900
*                             Action: Check for possible storage      * 00234000
*                             overlay of the parameter list.          * 00234100
*                                                                     * 00234200
*                 xxxx0827    Name: ISGENQRsn_BadExitUCB@             * 00234300
*                                                                     * 00234400
*                             Meaning: The storage pointed to by the  * 00234500
*                             UCB address changed by a dynamic exit   * 00234600
*                             does not map to a valid UCB.            * 00234700
*                                                                     * 00234800
*                             Action: Contact your system programmer. * 00234900
*                             The system programmer should ensure     * 00235000
*                             that the installation exits do not      * 00235100
*                             specify a bad UCB address.              * 00235200
*                                                                     * 00235300
*                 xxxx0828    Name: ISGENQRsn_NotAuthorizedForENQMAX  * 00235400
*                                                                     * 00235500
*                             Meaning: For REQUEST=OBTAIN.  An        * 00235600
*                             unauthorized caller specified           * 00235700
*                             ENQMAX=NO.                              * 00235800
*                                                                     * 00235900
*                             Action: Unauthorized callers should     * 00236000
*                             avoid specifying ENQMAX=NO.             * 00236100
*                                                                     * 00236200
*                                                                     * 00236300
*                                                                     * 00236400
*                                                                     * 00236500
*       0C        Name: ISGENQRc_EnvError                             * 00236600
*                                                                     * 00236700
*                 Meaning:  ISGENQ request has an environment error.  * 00236800
*                                                                     * 00236900
*                 Action: Refer to action under the individual reason * 00237000
*                 code.                                               * 00237100
*                                                                     * 00237200
*                                                                     * 00237300
*                 HEX REASON  MEANING/ACTION                          * 00237400
*                 CODE                                                * 00237500
*                                                                     * 00237600
*                 xxxx0C01    Name: ISGENQRsn_RequestLimitExceeded    * 00237700
*                                                                     * 00237800
*                             Meaning: For REQUEST=OBTAIN, the limit  * 00237900
*                             for the number of concurrent resource   * 00238000
*                             requests has been reached. The task     * 00238100
*                             does not have control of the resource   * 00238200
*                             unless some previous ENQ or RESERVE     * 00238300
*                             request caused the task to obtain       * 00238400
*                             control of the resource.                * 00238500
*                                                                     * 00238600
*                             Action: Retry the request one or more   * 00238700
*                             times.  If the problem persists,        * 00238800
*                             consult your system programmer.  See    * 00238900
*                             z/OS MVS Planning:  Global Resource     * 00239000
*                             Serialization for more information on   * 00239100
*                             concurrent count limits and how the     * 00239200
*                             system can be tuned when necessary.     * 00239300
*                                                                     * 00239400
*                 xxxx0C05    Name: ISGENQRsn_AbendInExit             * 00239500
*                                                                     * 00239600
*                             Meaning: One of the GRS dynamic exits   * 00239700
*                             abended.                                * 00239800
*                                                                     * 00239900
*                             Action: Retry the request one or more   * 00240000
*                             times.  Contact your system programmer. * 00240100
*                                                                     * 00240200
*                 xxxx0C0A    Name: ISGENQRsn_TaskEnding              * 00240300
*                                                                     * 00240400
*                             Meaning: The task represented by the    * 00240500
*                             specified TToken was ending.  The point * 00240600
*                             was reached in task termination after   * 00240700
*                             which no ENQs can be obtained.          * 00240800
*                                                                     * 00240900
*                             Action: Determine why the task          * 00241000
*                             identified by the TToken was ending.    * 00241100
*                             Correct that error and retry the        * 00241200
*                             request.                                * 00241300
*                                                                     * 00241400
*                 xxxx0C0B    Name: ISGENQRsn_FRRHeld                 * 00241500
*                                                                     * 00241600
*                             Meaning: The caller issued ISGENQ when  * 00241700
*                             an FRR was established.                 * 00241800
*                                                                     * 00241900
*                             Action: Avoid issuing ISGENQ when using * 00242000
*                             functional recovery routines.           * 00242100
*                                                                     * 00242200
*                 xxxx0C0C    Name: ISGENQRsn_LockHeld                * 00242300
*                                                                     * 00242400
*                             Meaning: A lock was held upon entry.    * 00242500
*                             No locks can be held when calling       * 00242600
*                             ISGENQ.                                 * 00242700
*                                                                     * 00242800
*                             Action: Avoid using ISGENQ when locks   * 00242900
*                             are held.                               * 00243000
*                                                                     * 00243100
*                 xxxx0C0D    Name: ISGENQRsn_SrbMode                 * 00243200
*                                                                     * 00243300
*                             Meaning: ISGENQ was issued while in SRB * 00243400
*                             mode.                                   * 00243500
*                                                                     * 00243600
*                             Action: Avoid using ISGENQ in SRB mode. * 00243700
*                                                                     * 00243800
*                 xxxx0C0E    Name: ISGENQRsn_NotEnabled              * 00243900
*                                                                     * 00244000
*                             Meaning: ISGENQ was issued while not    * 00244100
*                             enabled.                                * 00244200
*                                                                     * 00244300
*                             Action: Avoid using ISGENQ when not     * 00244400
*                             enabled.                                * 00244500
*                                                                     * 00244600
*                 xxxx0C0F    Name: ISGENQRsn_MasidTarget             * 00244700
*                                                                     * 00244800
*                             Meaning: The requester to be released   * 00244900
*                             is still the target of an ENQ with the  * 00245000
*                             MASID and MTCB options specified.  The  * 00245100
*                             release does complete and the resource  * 00245200
*                             might be damaged.                       * 00245300
*                                                                     * 00245400
*                             Action: The task that issued the ENQ    * 00245500
*                             macro instruction with MASID and MTCB   * 00245600
*                             should issue the DEQ before this        * 00245700
*                             requester does so.                      * 00245800
*                                                                     * 00245900
*                 xxxx0C10    Name: ISGENQRsn_UnsupportedMode         * 00246000
*                                                                     * 00246100
*                             Meaning: The current GRS mode does not  * 00246200
*                             support this specific request           * 00246300
*                                                                     * 00246400
*                             Action: Defer the usage of this         * 00246500
*                             particular type of request.             * 00246600
*                                                                     * 00246700
*                 xxxx0C11    Name: ISGENQRsn_MasidNotSupported       * 00246800
*                                                                     * 00246900
*                             Meaning: The resource that was the      * 00247000
*                             target of this REQUEST=CHANGE,          * 00247100
*                             CONTROL=SHARED request currently or at  * 00247200
*                             one time contained MASID users.         * 00247300
*                             REQUEST=CHANGE,CONTROL=SHARED is not    * 00247400
*                             supported for resources that involve    * 00247500
*                             MASID requestors.                       * 00247600
*                                                                     * 00247700
*                             Action: Do not use                      * 00247800
*                             REQUEST=CHANGE,CONTROL=SHARED on        * 00247900
*                             resources that involve MASID            * 00248000
*                             requestors.                             * 00248100
*                                                                     * 00248200
*                                                                     * 00248300
*                                                                     * 00248400
*                                                                     * 00248500
*       10        Name: ISGENQRc_CompError                            * 00248600
*                                                                     * 00248700
*                 Meaning: Component Error.                           * 00248800
*                                                                     * 00248900
*                 Action: Contact the IBM Support Center.             * 00249000
*                                                                     * 00249100
*                 Reason code that are not defined below contain      * 00249200
*                 internal diagnostic information.                    * 00249300
*                                                                     * 00249400
*                                                                     * 00249500
*                 HEX REASON  MEANING/ACTION                          * 00249600
*                 CODE                                                * 00249700
*                                                                     * 00249800
*                 xxxx1002    Name: ISGENQRsn_CannotObtainHomeStorage * 00249900
*                                                                     * 00250000
*                             Meaning: ISGENQ processing could not    * 00250100
*                             obtain storage in the home address      * 00250200
*                             space.                                  * 00250300
*                                                                     * 00250400
*                 xxxx1003    Name:                                   * 00250500
*                             ISGENQRsn_CannotObtainCommonStorage     * 00250600
*                                                                     * 00250700
*                             Meaning: ISGENQ processing could not    * 00250800
*                             obtain storage in the common area.      * 00250900
*                                                                     * 00251000
*                 xxxx1004    Name: ISGENQRsn_CannotObtainPrimaryAlet * 00251100
*                                                                     * 00251200
*                             Meaning: ISGENQ processing could not    * 00251300
*                             obtain the ALET of the caller's primary * 00251400
*                             address space.                          * 00251500
*                                                                     * 00251600
*                 xxxx1006    Name: ISGENQRsn_SynchResFlushFailed     * 00251700
*                                                                     * 00251800
*                             Meaning: For REQUEST=OBTAIN, a          * 00251900
*                             synchronous reserve failed device state * 00252000
*                             transition flushing.                    * 00252100
*                                                                     * 00252200
*                 xxxx1007    Name: ISGENQRsn_ReserveStartFailed      * 00252300
*                                                                     * 00252400
*                             Meaning: For REQUEST=OBTAIN, reserve    * 00252500
*                             start processing failed.                * 00252600
*                                                                     * 00252700
*                 xxxx1008    Name: ISGENQRsn_ReserveCountOverflow    * 00252800
*                                                                     * 00252900
*                             Meaning: For REQUEST=OBTAIN, reserve    * 00253000
*                             processing detected an overflow when    * 00253100
*                             updating the reserve count.             * 00253200
*                                                                     * 00253300
*                 xxxx1009    Name: ISGENQRsn_CannotObtainDSQE        * 00253400
*                                                                     * 00253500
*                             Meaning: ISGENQ processing could not    * 00253600
*                             obtain a DSQE to suspend a request      * 00253700
*                             during an RNL change.                   * 00253800
*                                                                     * 00253900
*                 xxxx100A    Name: ISGENQRsn_ReserveDoneFailed       * 00254000
*                                                                     * 00254100
*                             Meaning: For REQUEST=OBTAIN,            * 00254200
*                             synchronous reserve back end processing * 00254300
*                             has failed; therefore, the reserve was  * 00254400
*                             never completed.                        * 00254500
*                                                                     * 00254600
*                 xxxx100B    Name:                                   * 00254700
*                             ISGENQRsn_CannotObtainPrimaryStorage    * 00254800
*                                                                     * 00254900
*                             Meaning: ENQ/DEQ processing could not   * 00255000
*                             obtain storage in the primary address   * 00255100
*                             space.                                  * 00255200
*                                                                     * 00255300
*                                                                     * 00255400
*                                                                     * 00255500
*                                                                     * 00255600
*                                                                     * 00255700
*01* REASON CODES:                                                    * 00255800
*                                                                     * 00255900
*       Reason codes, as appropriate, are defined under their         * 00256000
*       corresponding return code.                                    * 00256100
*                                                                     * 00256200
*01* MODULE TYPE:  ASSEM MACRO                                        * 00256300
*                                                                     * 00256400
*02*   PROCESSOR:  ASSEM                                              * 00256500
*                                                                     * 00256600
*01* COMPONENT:  SCSDS                                                * 00256700
*                                                                     * 00256800
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00256900
*                                                                     * 00257000
*01* ABEND CODES:                                                     * 00257100
*                                                                     * 00257200
*                 For REQUEST=OBTAIN and REQUEST=CHANGE requests the  * 00257300
*                 caller might encounter abend codes X'138', X'238',  * 00257400
*                 X'338', X'438', X'538', X'638', X'738', X'838',     * 00257500
*                 X'938'.                                             * 00257600
*                                                                     * 00257700
*                 For REQUEST=RELEASE requests the caller might       * 00257800
*                 encounter abend codes X'130', X'230', X'330',       * 00257900
*                 X'430', X'530', X'630', X'730', X'830', X'930'.     * 00258000
*                                                                     * 00258100
*                 See z/OS MVS System Codes for explanations and      * 00258200
*                 responses for these codes.                          * 00258300
*                                                                     * 00258400
*                                                                     * 00258500
*                                                                     * 00258600
*01* EXAMPLES:                                                        * 00258700
*                                                                     * 00258800
*01* MACRO USAGE NOTES:                                               * 00258900
*                                                                     * 00259000
*                                                                     * 00259100
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00259200
*        global macro variable.  Any value other than 'NO' will       * 00259300
*        result in the macro expansion being printed.  The default is * 00259400
*        'YES'.  The following examples illustrate how the ZPRINT     * 00259500
*        variable should be set.                                      * 00259600
*                                                                     * 00259700
*                    GBLC &ZPRINT                                     * 00259800
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00259900
*                                                                     * 00260000
*                                                                     * 00260100
*    2.  The  ISGENQ  macro supports multiple versions. The macro key * 00260200
*        list  below  contains the version level in which the key was * 00260300
*        first  introduced.  Positionals  are  identified by the word * 00260400
*        'Positional'  followed by the numeric value of its position. * 00260500
*        Nested  positionals  are  preceded  by their outer key.  The * 00260600
*        lowest value represents the original version and the highest * 00260700
*        value  represents  the  most  recent  version  of the ISGENQ * 00260800
*        macro.    When  specifying  PLISTVER,  be sure that it is at * 00260900
*        least  as high as the highest version number of all the keys * 00261000
*        being used.                                                  * 00261100
*                                                                     * 00261200
*        VERSION   KEY                                                * 00261300
*                                                                     * 00261400
*              1      ANSAREA                                         * 00261500
*                     ANSLEN                                          * 00261600
*                     COND                                            * 00261700
*                     CONTENTIONACT                                   * 00261800
*                     CONTROL                                         * 00261900
*                     CONTROLVAL                                      * 00262000
*                     ECB@                                            * 00262100
*                     ENQMAX                                          * 00262200
*                     ENQTOKEN                                        * 00262300
*                     ENQTOKENTBL                                     * 00262400
*                     NUMRES                                          * 00262500
*                     OWNINGTTOKEN                                    * 00262600
*                     QNAME                                           * 00262700
*                     REQUEST                                         * 00262800
*                     RESERVEVOLUME                                   * 00262900
*                     RESLIST                                         * 00263000
*                     RESTABLE                                        * 00263100
*                     RETURNTABLE                                     * 00263200
*                     RNAME                                           * 00263300
*                     RNAMELEN                                        * 00263400
*                     RNL                                             * 00263500
*                     SCOPE                                           * 00263600
*                     SCOPEVAL                                        * 00263700
*                     SYNCHRES                                        * 00263800
*                     TEST                                            * 00263900
*                     UCB@                                            * 00264000
*                     WAITTYPE                                        * 00264100
*              2      USERDATA                                        * 00264200
*                                                                     * 00264300
*                                                                     * 00264400
*                                                                     * 00264500
*01* CHANGE ACTIVITY:                                                 * 00264600
*                                                                     * 00264700
*   Flag LineItem  FMID    Date   ID    Comment                       * 00264800
*                                                                     * 00264900
*    $L0=64GRS    HBB7709 030226 PDFX:  Introduce ISGENQ service with * 00265000
*                                         64 bit parameter list       * 00265100
*                                         support.                    * 00265200
*    $L1=64GRS    HBB7709 030526 PDCJ:  Added                         * 00265300
*                                         ISGENQRsn_ECBAtleastOneReqe * 00265400
*                                         ustFailed reason code and   * 00265500
*                                         updated ECB@ posting        * 00265600
*                                         description.                * 00265700
*    $P1=PJK0687  HBB7709 030731 PDFX:  Fix checking of error for     * 00265800
*                                         ANSAREA and ASNLEN          * 00265900
*                                         requiring each other        * 00266000
*    $P2=PJK0695  HBB7709 030731 PDFX:  Separate the COND=NO with     * 00266100
*                                         TEST=YES and WAITTYPE=ECB   * 00266200
*                                         error messages              * 00266300
*    $P3=PJK0823  HBB7709 030828 PDFX:  Pass request type in register * 00266400
*                                         R0.                         * 00266500
*    $P4=PJK0797  HBB7709 030828 PDFX:  Add OWNINGTTOKEN to CHANGE    * 00266600
*                                         and RELEASE.                * 00266700
*    $P5=PJK0901  HBB7709 030911 PDFX:  Update task waiting rsn code. * 00266800
*    $P6=PJK0888  HBB7709 030911 PDFX:  Add unprotected QNAME for     * 00266900
*                                         exit rsn.                   * 00267000
*    $P7=PJK0906  HBB7709 030912 PDFX:  Add rsn for bad UCB@          * 00267100
*                                         specified by exit.          * 00267200
*    $P8=PJK0925  HBB7709 030917 PDFX:  Add macalvl=1 so 64-bit       * 00267300
*                                         registers are used when     * 00267400
*                                         &SYSALVL>=2.                * 00267500
*    $P9=PJK0942  HBB7709 030919 PDFX:  Add check for mutually        * 00267600
*                                         exclusive OWNINGTTOKEN and  * 00267700
*                                         RESERVEVOLUME=YES           * 00267800
*    $PA=PJK0961  HBB7709 030924 PDFX:  Correct check for             * 00267900
*                                         OWNINGTTOKEN and            * 00268000
*                                         RESERVEVOLUME=YES           * 00268100
*    $PB=PJK1044  HBB7709 031022 PDFX:  Remove SYNCHRES disabled      * 00268200
*                                         reason code                 * 00268300
*    $PC=PJK0875  HBB7709 031106 PDFX:  Remove unneeded Release       * 00268400
*                                         options                     * 00268500
*    $PD=PJK0745  HBB7709 031106 PDFX:  General documentation updates * 00268600
*    $PE=PJK1524  HBB7709 040223 PDFX:  Post review documentation     * 00268700
*                                         updates                     * 00268800
*    $01=OA05793  HBB7709 040610 PDFX:  Correctly load CVT address    * 00268900
*                                         for AMODE 64 callers        * 00269000
*    $PF=ME01844  HBB7720 041001 PDGA:  Prevent truncation of SYSNDX  * 00269100
*    $PG=ME04401  HBB7730 050921 PDBC:  Reason code 0C01 explanation  * 00269200
*                                         update.                     * 00269300
*    $L2=GRSTOR2  HBB7740 060613 PDCJ:  Reason code 040D explanation  * 00269400
*                                         correction.                 * 00269500
*    $L3=GRSTOR2  HBB7740 060615 PDBC:  Reason code 0C0F added.       * 00269600
*    $L4=IOSHPF   HBB7740 061015 PDCJ:  Updated comments for ECB      * 00269700
*                                         processing to correctly     * 00269800
*                                         reflect SYNCHRES            * 00269900
*                                         processing.                 * 00270000
*    $PH=ME08780  HBB7740 061211 PDBC:  Updated various comments.     * 00270100
*    $PI=ME09364  HBB7740 070220 PDRY:  Retransmit for metadata       * 00270200
*                                         change.                     * 00270300
*    $L5=GRSUDATA HBB7750 070103 PDFY:  Userdata keyword, version 2   * 00270400
*                                         of plist.                   * 00270500
*    $PJ=ME10829  HBB7750 070807 PDCJ:  Updated description for QNAME * 00270600
*                                         and picked up AMG updates   * 00270700
*                                         for RETCODE/RSNCODE         * 00270800
*                                         handling and associated     * 00270900
*                                         description updates.        * 00271000
*    $L6=GRSUDATA HBB7750 071128 PDCJ:  Updates for AMGTOPUB tool     * 00271100
*    $L7=GRSUDATA HBB7750 080120 PDCJ:  Updates for AMGTOPUB tool -   * 00271200
*                                         use RR tracks               * 00271300
*    $PK=ME12166  HBB7760 080623 PDBC:  Add ENQMAX                    * 00271400
*    $L8=ENQECBU  HBB7770 090716 PDCJ:  Doc updates                   * 00271500
*    $L9=AUTHQN   HBB7780 100903 PDFY:  Authorized QNAME              * 00271600
*                                         documentation               * 00271700
*    $LA=GRSCHNG  HBB7790 110204 PDFY:  ISGENQ                        * 00271800
*                                         REQUEST=CHANGE,CONTROL=SHAR * 00271900
*                                         ED                          * 00272000
*    $PL=ME21647  HBB7790 110503 PDFY:  ISGENQ                        * 00272100
*                                         REQUEST=CHANGE,CONTROL=SHAR * 00272200
*                                         ED new bit for compat       * 00272300
*    $PM=ME23469  HBB7790 120126 PDFY:  Only set the new bit for      * 00272400
*                                         REQUEST=CHANGE              * 00272500
****** END OF SPECIFICATIONS *****************************************/ 00272600
*/********************************************************************* 00272700
         MACRO                                                          00272800
&XLABEL  ISGENQ &REQUEST=,&TEST=,&CONTENTIONACT=,&WAITTYPE=,&ECB@=,    *00272900
               &OWNINGTTOKEN=,&ENQMAX=,&USERDATA=,&ANSAREA=,&ANSLEN=,  *00273000
               &RESLIST=,&QNAME=,&RNAME=,&RNAMELEN=,&CONTROL=,         *00273100
               &CONTROLVAL=,&RESERVEVOLUME=,&SCOPE=,&SCOPEVAL=,&RNL=,  *00273200
               &UCB@=,&SYNCHRES=,&ENQTOKEN=,&NUMRES=,&RESTABLE=,       *00273300
               &ENQTOKENTBL=,&RETURNTABLE=,&COND=,&RETCODE=,&RSNCODE=, *00273400
               &PLISTVER=,&MF=                                          00273500
.*                                                                      00273600
*                     MACDATE -01/23/13-<2>                             00273700
.*                                                                      00273800
.*******************************************************************    00273900
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00274000
.*******************************************************************    00274100
                     GBLC  &ZPRINT     YES=PRINT NO=NO PRINT            00274200
                     GBLC  &ZTEST      YES=TEST NO=NO TEST              00274300
                     GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX      00274400
.*                                                                      00274500
                     GBLC  &ZISGENQ    YES=MACRO USED AT LEAST ONCE     00274600
.*******************************************************************    00274700
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00274800
.*******************************************************************    00274900
                     LCLC  &ZMS        ERROR MESSAGE WORK AREA          00275000
                     LCLC  &ZCNDX      SYSNDX CHARACTERS                00275100
                     LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED       00275200
                     LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR      00275300
                     LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE      00275400
                     LCLA  &ZAWRK      USED AS A WORK AREA              00275500
                     LCLA  &ZASIZ      USED FOR SIZE OF VALUE           00275600
                     LCLA  &ZN         NUMERIC WORK VARIABLE            00275700
                     LCLC  &ZC         CHARACTER WORK VARIABLE          00275800
                     LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE      00275900
                     LCLA  &ZTLA       VALUE TOO LONG VARIABLE          00276000
                     LCLC  &ZMAC_G     "G" or null                      00276100
&ZMAC_G              SETC  ''                                           00276200
                     LCLC  &ZMAC_LR                                     00276300
&ZMAC_LR             SETC  'LR'                                         00276400
                     LCLC  &ZMAC_L                                      00276500
&ZMAC_L              SETC  'L'                                          00276600
                     LCLC  &ZMAC_ST                                     00276700
&ZMAC_ST             SETC  'ST'                                         00276800
                     LCLC  &ZMAC_LLGT                                   00276900
&ZMAC_LLGT           SETC  'L'                                          00277000
                     LCLC  &ZMAC_LGR                                    00277100
&ZMAC_LGR            SETC  'LR'                                         00277200
                     LCLC  &ZMAC_LG                                     00277300
&ZMAC_LG             SETC  'L'                                          00277400
                     LCLC  &ZMAC_STG                                    00277500
&ZMAC_STG            SETC  'ST'                                         00277600
                     LCLA  &ZMACRET    MACRO RETURN CODE                00277700
&ZMACRET             SETA  0           ASSUME NO ERRORS                 00277800
.*                                                                      00277900
                     LCLC  &ZCSYSLIST(255)      NONXKEY, POS ARRAY      00278000
                     LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()       00278100
                     LCLA  &ZPLLEN     PARAMETER LIST LENGTH            00278200
                     LCLC  &ZENDBASEPL          End of base PL          00278300
                     LCLA  &ZPLWORKA   PARAMETER LIST LENGTH            00278400
.*******************************************************************    00278500
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00278600
.*******************************************************************    00278700
                     LCLA  &ZI         INDEX FOR ARRAY                  00278800
                     LCLA  &ZJ         INDEX FOR PARMS                  00278900
                     LCLA  &ZK         INDEX FOR PARSE                  00279000
                     LCLA  &ZLO        LOW RANGE VALUE                  00279100
                     LCLA  &ZHI        HIGH RANGE VALUE                 00279200
                     LCLC  &ZW         WORK AREA FOR PARM               00279300
.********************************************************************   00279400
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00279500
.********************************************************************   00279600
                     GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL          00279700
                     GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE   00279800
                     GBLA  &SYSALVL    SYSSTATE ARCHLVL                 00279900
                     GBLC  &SYSAM64    SYSSTATE AMODE64                 00280000
.*                                                                      00280100
                     AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED   00280200
                     AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED    00280300
                     SPLEVEL  TEST                                      00280400
.ZSYS2               ANOP  ,                                            00280500
                     AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1        00280600
                     AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1        00280700
                     SYSSTATE TEST                                      00280800
                     AGO   .ZSYS4                                       00280900
.ZSYS3               ANOP  ,                                            00281000
&SYSASCE             SETC  'P'         ASSUME SYSSTATE PRIMARY          00281100
.ZSYS4               ANOP  ,                                            00281200
                     AIF   ('&SYSAM64' NE 'YES').ZSYSN64                00281300
&ZMAC_LLGT           SETC 'LLGT'                                        00281400
&ZMAC_LGR            SETC 'LGR'                                         00281500
&ZMAC_LG             SETC 'LG'                                          00281600
&ZMAC_STG            SETC 'STG'                                         00281700
.ZSYSN64             ANOP  ,                                            00281800
                     AIF   (&SYSALVL LE 1).ZSYS4A                       00281900
&ZMAC_G              SETC 'G'                                           00282000
&ZMAC_LR             SETC 'LGR'                                         00282100
&ZMAC_L              SETC 'LG'                                          00282200
&ZMAC_ST             SETC 'STG'                                         00282300
.ZSYS4A              ANOP  ,                                            00282400
.*******************************************************************    00282500
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00282600
.*******************************************************************    00282700
                     LCLC  &XREQUEST   ++ VALUE                         00282800
                     LCLC  &XTEST      ++ VALUE                         00282900
                     LCLC  &XCONTENTIONACT      ++ VALUE                00283000
                     LCLC  &XWAITTYPE  ++ VALUE                         00283100
                     LCLC  &XECB@      ++ NAME                          00283200
                     LCLC  &XOWNINGTTOKEN       ++ NAME                 00283300
                     LCLC  &XENQMAX    ++ VALUE                         00283400
                     LCLC  &XUSERDATA  ++ NAME                          00283500
                     LCLC  &XANSAREA   ++ NAME                          00283600
                     LCLC  &XANSLEN    ++ NAME                          00283700
                     LCLC  &XRESLIST   ++ VALUE                         00283800
                     LCLC  &XQNAME     ++ NAME                          00283900
                     LCLC  &XRNAME     ++ NAME                          00284000
                     LCLC  &XRNAMELEN  ++ NAME                          00284100
                     LCLC  &XCONTROL   ++ VALUE                         00284200
                     LCLC  &XCONTROLVAL         ++ NAME                 00284300
                     LCLC  &XRESERVEVOLUME      ++ VALUE                00284400
                     LCLC  &XSCOPE     ++ VALUE                         00284500
                     LCLC  &XSCOPEVAL  ++ NAME                          00284600
                     LCLC  &XRNL       ++ VALUE                         00284700
                     LCLC  &XUCB@      ++ NAME                          00284800
                     LCLC  &XSYNCHRES  ++ VALUE                         00284900
                     LCLC  &XENQTOKEN  ++ NAME                          00285000
                     LCLC  &XNUMRES    ++ NAME                          00285100
                     LCLC  &XRESTABLE  ++ NAME                          00285200
                     LCLC  &XENQTOKENTBL        ++ NAME                 00285300
                     LCLC  &XRETURNTABLE        ++ NAME                 00285400
                     LCLC  &XCOND      ++ VALUE                         00285500
                     LCLC  &XRETCODE   ++ NAME                          00285600
                     LCLC  &XRSNCODE   ++ NAME                          00285700
                     LCLA  &XPLISTVER  ++ VALUE                         00285800
                     LCLC  &XMF        ++ VALUE                         00285900
                     LCLC  &XMFCTRL    ++ NAME                          00286000
                     LCLC  &XMFATTR    ++ VALUE                         00286100
                     LCLC  &XMFSCK     ++ VALUE                         00286200
.*******************************************************************    00286300
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00286400
.*******************************************************************    00286500
                     LCLC  &ZXREQUEST  ++ INPUT VALUE                   00286600
                     LCLC  &ZXTEST     ++ INPUT VALUE                   00286700
                     LCLC  &ZXCONTENTIONACT     ++ INPUT VALUE          00286800
                     LCLC  &ZXWAITTYPE          ++ INPUT VALUE          00286900
                     LCLC  &ZXECB@     ++ INPUT NAME                    00287000
                     LCLC  &ZXOWNINGTTOKEN      ++ INPUT NAME           00287100
                     LCLC  &ZXENQMAX   ++ INPUT VALUE                   00287200
                     LCLC  &ZXUSERDATA          ++ INPUT NAME           00287300
                     LCLC  &ZXANSAREA  ++ OUTPUT NAME                   00287400
                     LCLC  &ZXANSLEN   ++ INPUT NAME                    00287500
                     LCLC  &ZXRESLIST  ++ INPUT VALUE                   00287600
                     LCLC  &ZXQNAME    ++ INPUT NAME                    00287700
                     LCLC  &ZXRNAME    ++ INPUT NAME                    00287800
                     LCLC  &ZXRNAMELEN          ++ INPUT NAME           00287900
                     LCLC  &ZXCONTROL  ++ INPUT VALUE                   00288000
                     LCLC  &ZXCONTROLVAL        ++ INPUT NAME           00288100
                     LCLC  &ZXRESERVEVOLUME     ++ INPUT VALUE          00288200
                     LCLC  &ZXSCOPE    ++ INPUT VALUE                   00288300
                     LCLC  &ZXSCOPEVAL          ++ INPUT NAME           00288400
                     LCLC  &ZXRNL      ++ INPUT VALUE                   00288500
                     LCLC  &ZXUCB@     ++ INPUT NAME                    00288600
                     LCLC  &ZXSYNCHRES          ++ INPUT VALUE          00288700
                     LCLC  &ZXENQTOKEN          ++ OUTPUT NAME          00288800
                     LCLC  &ZXNUMRES   ++ INPUT NAME                    00288900
                     LCLC  &ZXRESTABLE          ++ INPUT NAME           00289000
                     LCLC  &ZXENQTOKENTBL       ++ OUTPUT NAME          00289100
                     LCLC  &ZXRETURNTABLE       ++ OUTPUT NAME          00289200
                     LCLC  &ZXCOND     ++ INPUT VALUE                   00289300
                     LCLC  &ZXRETCODE  ++ OUTPUT NAME                   00289400
                     LCLC  &ZXRSNCODE  ++ OUTPUT NAME                   00289500
                     LCLC  &ZXPLISTVER          ++ INPUT VALUE          00289600
                     LCLC  &ZXMF       ++ INPUT VALUE                   00289700
                     LCLC  &ZXMFCTRL   ++ INPUT NAME                    00289800
                     LCLC  &ZXMFATTR   ++ INPUT VALUE                   00289900
                     LCLC  &ZXMFSCK    ++ INPUT VALUE                   00290000
.********************************************************************   00290100
.***AC.PLV01  PROCESS PLISTVER                                      *   00290200
.********************************************************************   00290300
&XPLISTVER      SETA  1                                                 00290400
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00290500
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00290600
&XPLISTVER      SETA  2                                                 00290700
.ZPLV0          ANOP  ,                                                 00290800
.*                                                                      00290900
                AIF   ('&USERDATA' EQ '').ZPLV1E                        00291000
                AIF   (&XPLISTVER GE 2).ZPLV1E                          00291100
&XPLISTVER      SETA  2                                                 00291200
.ZPLV1E         ANOP  ,                                                 00291300
.*                                                                      00291400
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00291500
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00291600
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00291700
.*-------------------------------------------------------------------   00291800
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00291900
&ZMS            SETC  '"PLISTVER='                                      00292000
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00292100
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00292200
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00292300
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00292400
                AGO   .ZPVCK2                                           00292500
.ZPVCK3         ANOP  ,                                                 00292600
.*-------------------------------------------------------------------   00292700
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00292800
&ZMS            SETC  '"PLISTVER='                                      00292900
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00293000
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00293100
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00293200
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00293300
                AGO   .ZPVCKE                                           00293400
.ZPVCK2         ANOP  ,                                                 00293500
.*-------------------------------------------------------------------   00293600
&ZCVAL          SETC  '&PLISTVER(1)'                                    00293700
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00293800
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00293900
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00294000
                AIF   (&ZN LT 1).ZPVCK6    TOO LOW                      00294100
                AIF   (&ZN LE 2).ZPVCK4A   NOT HIGH                     00294200
.ZPVCK6         ANOP  ,                                                 00294300
&ZMS            SETC  '"PLISTVER='                                      00294400
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00294500
&ZMS            SETC  '&ZMS THE RANGE IS "1-2"'                         00294600
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00294700
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00294800
&XPLISTVER      SETA  2                                                 00294900
                AGO   .ZPVCKE                                           00295000
.*-------------------------------------------------------------------   00295100
.ZPVCK4A        ANOP  ,                                                 00295200
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00295300
&ZMS            SETC  'PLISTVER='                                       00295400
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00295500
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00295600
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00295700
                MNOTE 8,' &ZMS IS REQUIRED.'                            00295800
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00295900
                AGO   .ZPVCK5                                           00296000
.ZPVCK4         ANOP  ,                                                 00296100
&XPLISTVER      SETA  &PLISTVER(1)                                      00296200
.ZPVCK5         ANOP  ,                                                 00296300
.ZPVCKE         ANOP  ,                                                 00296400
.********************************************************************   00296500
.***AG.MF01 PROCESS MF MACRO FORMS                                      00296600
.********************************************************************   00296700
                     ACTR  10000                                        00296800
.*------------------------------------------------------------------    00296900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00297000
&XMF                 SETC  ''          INITIALIZE XVARIABLE             00297100
.*-------------------------------------------------------------------   00297200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00297300
.ZG216               ANOP  ,                                            00297400
&ZTLC                SETC 'S'                                           00297500
                     AIF   ('&MF(1)' NE '&ZTLC').ZG217                  00297600
&XMF                 SETC  'S'         SET KEYWORD                      00297700
                     AIF   (N'&MF LE 1).ZG216A  CK NUM                  00297800
&ZMS                 SETC  '"MF='                                       00297900
&ZMS                 SETC  '&ZMS.&MF"'                                  00298000
&ZMS                 SETC  '&ZMS "MF"'                                  00298100
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00298200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00298300
.ZG216A              ANOP  ,                                            00298400
.*-------------------------------------------------------------------   00298500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00298600
.ZG217               ANOP  ,                                            00298700
&ZTLC                SETC 'L'                                           00298800
                     AIF   ('&MF(1)' NE '&ZTLC').ZG224                  00298900
&XMF                 SETC  'L'         SET KEYWORD                      00299000
                     AIF   (N'&MF LE 3).ZG217A  CK NUM                  00299100
&ZMS                 SETC  '"MF='                                       00299200
&ZMS                 SETC  '&ZMS.&MF"'                                  00299300
&ZMS                 SETC  '&ZMS "MF"'                                  00299400
                     MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'         00299500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00299600
.ZG217A              ANOP  ,                                            00299700
.*-------------------------------------------------------------------   00299800
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00299900
                     AIF   (N'&SYSLIST NE 0).ZG217B  POSITIONALS?       00300000
                     AIF   ('&REQUEST' NE '').ZG217B  KEYS?             00300100
                     AIF   ('&TEST' NE '').ZG217B  KEYS?                00300200
                     AIF   ('&CONTENTIONACT' NE '').ZG217B  KEYS?       00300300
                     AIF   ('&WAITTYPE' NE '').ZG217B  KEYS?            00300400
                     AIF   ('&ECB@' NE '').ZG217B  KEYS?                00300500
                     AIF   ('&OWNINGTTOKEN' NE '').ZG217B  KEYS?        00300600
                     AIF   ('&ENQMAX' NE '').ZG217B  KEYS?              00300700
                     AIF   ('&USERDATA' NE '').ZG217B  KEYS?            00300800
                     AIF   ('&ANSAREA' NE '').ZG217B  KEYS?             00300900
                     AIF   ('&ANSLEN' NE '').ZG217B  KEYS?              00301000
                     AIF   ('&RESLIST' NE '').ZG217B  KEYS?             00301100
                     AIF   ('&QNAME' NE '').ZG217B  KEYS?               00301200
                     AIF   ('&RNAME' NE '').ZG217B  KEYS?               00301300
                     AIF   ('&RNAMELEN' NE '').ZG217B  KEYS?            00301400
                     AIF   ('&CONTROL' NE '').ZG217B  KEYS?             00301500
                     AIF   ('&CONTROLVAL' NE '').ZG217B  KEYS?          00301600
                     AIF   ('&RESERVEVOLUME' NE '').ZG217B  KEYS?       00301700
                     AIF   ('&SCOPE' NE '').ZG217B  KEYS?               00301800
                     AIF   ('&SCOPEVAL' NE '').ZG217B  KEYS?            00301900
                     AIF   ('&RNL' NE '').ZG217B  KEYS?                 00302000
                     AIF   ('&UCB@' NE '').ZG217B  KEYS?                00302100
                     AIF   ('&SYNCHRES' NE '').ZG217B  KEYS?            00302200
                     AIF   ('&ENQTOKEN' NE '').ZG217B  KEYS?            00302300
                     AIF   ('&NUMRES' NE '').ZG217B  KEYS?              00302400
                     AIF   ('&RESTABLE' NE '').ZG217B  KEYS?            00302500
                     AIF   ('&ENQTOKENTBL' NE '').ZG217B  KEYS?         00302600
                     AIF   ('&RETURNTABLE' NE '').ZG217B  KEYS?         00302700
                     AIF   ('&COND' NE '').ZG217B  KEYS?                00302800
                     AIF   ('&RETCODE' NE '').ZG217B  KEYS?             00302900
                     AIF   ('&RSNCODE' NE '').ZG217B  KEYS?             00303000
                     AGO    .ZG217C    INVOCATION OKAY                  00303100
.ZG217B              ANOP  ,                                            00303200
&ZMS                 SETC  'THE "L" FORM OF "MF"'                       00303300
&ZMS                 SETC  '&ZMS CAN ONLY HAVE'                         00303400
&ZMS                 SETC  '&ZMS THE "PLISTVER" KEY'                    00303500
                     MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'       00303600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00303700
.ZG217C              ANOP  ,                                            00303800
.*-------------------------------------------------------------------   00303900
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00304000
&ZXMFCTRL            SETC  'INPUT'     SET IN/OUTPUT                    00304100
&XMFCTRL             SETC  '&MF(2,1)'  SET XVARIABLE                    00304200
                     AIF   (N'&MF(2) GT 1).ZG219B  MULTI PARMS          00304300
&XMFCTRL             SETC  '&MF(2)'    SET XVARIABLE                    00304400
.ZG219B              AIF   (K'&MF(2) GT 0).ZG219C                       00304500
&ZXMFCTRL            SETC  ''          RESET IN/OUTPUT                  00304600
&ZMS                 SETC  'WHEN "L" IS SPECIFIED'                      00304700
&ZMS                 SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'          00304800
                     MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                 00304900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00305000
.ZG219C              ANOP  ,                                            00305100
.*-------------------------------------------------------------------   00305200
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00305300
                     AIF   (K'&ZXMFCTRL LE 0).ZG219P  NOT I/O           00305400
                     AIF   ('&XMFCTRL'(1,1) NE '(').ZG219P              00305500
&ZXMFCTRL            SETC  ''          RESET IN/OUTPUT                  00305600
&ZMS                 SETC  '"MF='                                       00305700
&ZMS                 SETC  '&ZMS.&MF"'                                  00305800
&ZMS                 SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'    00305900
                     MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'            00306000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00306100
.ZG219P              ANOP  ,                                            00306200
.*-------------------------------------------------------------------   00306300
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00306400
&ZXMFATTR            SETC  'INPUT'     SET IN/OUTPUT                    00306500
&XMFATTR             SETC  '0D'                                         00306600
                     AIF   (K'&MF(3) LE 0).ZG222B  PARM                 00306700
&XMFATTR             SETC  '&MF(3,1)'  SET XVARIABLE                    00306800
                     AIF   (N'&MF(3) GT 1).ZG222B  MULTI                00306900
&XMFATTR             SETC  '&MF(3)'    SET XVARIABLE                    00307000
.ZG222B              ANOP  ,                                            00307100
.*-------------------------------------------------------------------   00307200
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00307300
                     AIF   (K'&ZXMFATTR LE 0).ZG222P  NOT I/O           00307400
                     AIF   ('&XMFATTR'(1,1) NE '(').ZG222P              00307500
&ZXMFATTR            SETC  ''          RESET IN/OUTPUT                  00307600
&ZMS                 SETC  '"MF='                                       00307700
&ZMS                 SETC  '&ZMS.&MF"'                                  00307800
&ZMS                 SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'    00307900
                     MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'            00308000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00308100
.ZG222P              ANOP  ,                                            00308200
.*-------------------------------------------------------------------   00308300
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00308400
                     AIF   (K'&ZXMFATTR LE 0).ZG222S  NOT I/O           00308500
                     AIF   (K'&XMFATTR LE 60).ZG222S  LNG OK            00308600
&ZXMFATTR            SETC  ''          RESET IN/OUTPUT                  00308700
&ZMS                 SETC  '"MF='                                       00308800
&ZMS                 SETC  '&ZMS.&MF"'                                  00308900
&ZMS                 SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'        00309000
                     MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'           00309100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00309200
.ZG222S              ANOP  ,                                            00309300
.*-------------------------------------------------------------------   00309400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00309500
.ZG224               ANOP  ,                                            00309600
&ZTLC                SETC 'E'                                           00309700
                     AIF   ('&MF(1)' NE '&ZTLC').ZG232                  00309800
&XMF                 SETC  'E'         SET KEYWORD                      00309900
                     AIF   (N'&MF LE 3).ZG224A  CK NUM                  00310000
&ZMS                 SETC  '"MF='                                       00310100
&ZMS                 SETC  '&ZMS.&MF"'                                  00310200
&ZMS                 SETC  '&ZMS "MF"'                                  00310300
                     MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'         00310400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00310500
.ZG224A              ANOP  ,                                            00310600
.*-------------------------------------------------------------------   00310700
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00310800
&ZXMFCTRL            SETC  'INPUT'     SET IN/OUTPUT                    00310900
&XMFCTRL             SETC  '&MF(2,1)'  SET XVARIABLE                    00311000
                     AIF   (N'&MF(2) GT 1).ZG226B  MULTI PARMS          00311100
&XMFCTRL             SETC  '&MF(2)'    SET XVARIABLE                    00311200
.ZG226B              AIF   (K'&MF(2) GT 0).ZG226C                       00311300
&ZXMFCTRL            SETC  ''          RESET IN/OUTPUT                  00311400
&ZMS                 SETC  'WHEN "E" IS SPECIFIED'                      00311500
&ZMS                 SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'          00311600
                     MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                 00311700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00311800
.ZG226C              ANOP  ,                                            00311900
.*-------------------------------------------------------------------   00312000
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00312100
                     AIF   (K'&ZXMFCTRL LE 0).ZG226R  NOT I/O           00312200
                     AIF   ('&XMFCTRL'(1,1) NE '(').ZG226R              00312300
&ZCGPR               SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                   00312400
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG226P                00312500
                     AIF   (K'&ZCGPR GT 2).ZG226Q                       00312600
                     AIF   ('&ZCGPR' EQ '0').ZG226Q                     00312700
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00312800
                     AIF   (T'&ZCGPR NE 'N').ZG226Q  INVALID REG NAME   00312900
.ZG226P              ANOP  ,                                            00313000
                     AIF   (T'&ZCGPR NE 'N').ZG226R  NON NUMERIC        00313100
                     AIF   ('&ZCGPR' LT '1').ZG226Q                     00313200
                     AIF   ('&ZCGPR' LE '12').ZG226R                    00313300
.ZG226Q              ANOP  ,                                            00313400
&ZMS                 SETC  '"MF='                                       00313500
&ZMS                 SETC  '&ZMS.&MF"'                                  00313600
&ZMS                 SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'    00313700
                     MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'             00313800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00313900
.ZG226R              ANOP  ,                                            00314000
.*-------------------------------------------------------------------   00314100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00314200
&XMFSCK              SETC  ''          INITIALIZE XVARIABLE             00314300
.ZG230A   AIF   ('&MF(3)' NE 'COMPLETE').ZG231A                         00314400
&XMFSCK              SETC  'COMPLETE'  SET KEYWORD                      00314500
.*-------------------------------------------------------------------   00314600
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00314700
.ZG231A              AIF   (K'&XMFSCK GT 0).ZG231C  KEYWORD             00314800
                     AIF   (K'&MF(3) LE 0).ZG231B                       00314900
&ZMS                 SETC  '"MF='                                       00315000
&ZMS                 SETC  '&ZMS.&MF"'                                  00315100
&ZMS                 SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '    00315200
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00315300
&ZMS                 SETC  '&ZMS "COMPLETE".'                           00315400
                     MNOTE 8,' &ZMS '                                   00315500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00315600
.ZG231B              ANOP  ,                                            00315700
&XMFSCK              SETC  'COMPLETE'  SET DEFAULT KEYWORD              00315800
.ZG231C              ANOP  ,                                            00315900
&ZXMFSCK             SETC  'INPUT'     SET IN/OUTPUT                    00316000
.*------------------------------------------------------------------    00316100
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00316200
.ZG232               ANOP  ,                                            00316300
&ZXMF                SETC  'INPUT'     SET IN/OUTPUT                    00316400
                     AIF   (K'&XMF GT 0).ZG232E  VALID ARG              00316500
                     AIF   (T'&MF EQ 'O').ZG232D  OMITTED               00316600
&ZASYSLNDX           SETA  0                                            00316700
.ZG232A              ANOP  ,           POSITIONAL MACRO KEY             00316800
&ZASYSLNDX           SETA  &ZASYSLNDX+1                                 00316900
                     AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG232C            00317000
&ZTLC                SETC 'MF'                                          00317100
                     AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG232A   00317200
.ZG232B              ANOP  ,                                            00317300
&ZXMF                SETC  ''          RESET IN/OUTPUT                  00317400
&ZMS                 SETC  'THE "MF" KEY'                               00317500
&ZMS                 SETC  '&ZMS MUST CONTAIN ONE'                      00317600
                     MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'             00317700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00317800
                     AGO   .ZG232E                                      00317900
.ZG232C              ANOP  ,                                            00318000
&ZXMF                SETC  ''          RESET IN/OUTPUT                  00318100
&ZMS                 SETC  '"MF='                                       00318200
&ZMS                 SETC  '&ZMS.&MF"'                                  00318300
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00318400
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00318500
&ZMS                 SETC  '&ZMS "S",'                                  00318600
&ZMS                 SETC  '&ZMS "L",'                                  00318700
&ZMS                 SETC  '&ZMS OR "E".'                               00318800
                     MNOTE 8,' &ZMS '                                   00318900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00319000
                     AGO   .ZG232E                                      00319100
.ZG232D              ANOP  ,                                            00319200
&XMF                 SETC  'S'         SET DEFAULT KEYWORD              00319300
&XMFSCK              SETC  'COMPLETE'  COMPLETE CHECKING                00319400
.ZG232E              ANOP  ,                                            00319500
.********************************************************************   00319600
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00319700
.********************************************************************   00319800
                     ACTR  10000                                        00319900
.*-------------------------------------------------------------------   00320000
.***AG.MF03 MF=(SLE)                                                    00320100
                     AIF   ('&XMF' EQ 'L').ZGMFX                        00320200
.*------------------------------------------------------------------    00320300
.***AG.KKCTL01 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00320400
&XREQUEST            SETC  ''          INITIALIZE XVARIABLE             00320500
.*-------------------------------------------------------------------   00320600
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00320700
.ZG3                 ANOP  ,                                            00320800
                     AIF   (K'&REQUEST(1) LE 0).ZG3A                    00320900
&ZTLC                SETC 'OBTAIN'                                      00321000
                     AIF   ('&REQUEST(1)' NE '&ZTLC').ZG152             00321100
&XREQUEST            SETC  'OBTAIN'    SET KEYWORD                      00321200
                     AIF   (N'&REQUEST LE 1).ZG3A  CK NUM               00321300
&ZMS                 SETC  '"REQUEST='                                  00321400
&ZMS                 SETC  '&ZMS.&REQUEST"'                             00321500
&ZMS                 SETC  '&ZMS "REQUEST"'                             00321600
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00321700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00321800
.ZG3A                ANOP  ,                                            00321900
.*------------------------------------------------------------------    00322000
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00322100
&XTEST               SETC  ''          INITIALIZE XVARIABLE             00322200
.*-------------------------------------------------------------------   00322300
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00322400
.ZG6                 ANOP  ,                                            00322500
                     AIF   (K'&TEST(1) LE 0).ZG6A                       00322600
&ZTLC                SETC 'NO'                                          00322700
                     AIF   ('&TEST(1)' NE '&ZTLC').ZG34                 00322800
&XTEST               SETC  'NO'        SET KEYWORD                      00322900
                     AIF   (N'&TEST LE 1).ZG6A  CK NUM                  00323000
&ZMS                 SETC  '"TEST='                                     00323100
&ZMS                 SETC  '&ZMS.&TEST"'                                00323200
&ZMS                 SETC  '&ZMS "TEST"'                                00323300
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00323400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00323500
.ZG6A                ANOP  ,                                            00323600
.*------------------------------------------------------------------    00323700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00323800
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00323900
.ZG6A0               AIF   (K'&ANSAREA LE 0).ZG6A1  OK                  00324000
&ZCVAL               SETC '&ZCVAL ANSAREA'      INCORRECT KEY USED      00324100
.ZG6A1               AIF   (K'&ANSLEN LE 0).ZG6A2  OK                   00324200
&ZCVAL               SETC '&ZCVAL ANSLEN'       INCORRECT KEY USED      00324300
.ZG6A2               AIF   (K'&ZCVAL LE 0).ZG6A3  OK                    00324400
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00324500
&ZMS                 SETC  '"TEST'                                      00324600
&ZMS                 SETC  '&ZMS.=&TEST"'                               00324700
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00324800
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00324900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00325000
.ZG6A3               ANOP  ,                                            00325100
.*------------------------------------------------------------------    00325200
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00325300
&XCONTENTIONACT      SETC  ''          INITIALIZE XVARIABLE             00325400
.*-------------------------------------------------------------------   00325500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00325600
.ZG9                 ANOP  ,                                            00325700
                     AIF   (K'&CONTENTIONACT(1) LE 0).ZG9A              00325800
&ZTLC                SETC 'WAIT'                                        00325900
                     AIF   ('&CONTENTIONACT(1)' NE '&ZTLC').ZG21        00326000
&XCONTENTIONACT      SETC  'WAIT'      SET KEYWORD                      00326100
                     AIF   (N'&CONTENTIONACT LE 1).ZG9A  CK NUM         00326200
&ZMS                 SETC  '"CONTENTIONACT='                            00326300
&ZMS                 SETC  '&ZMS.&CONTENTIONACT"'                       00326400
&ZMS                 SETC  '&ZMS "CONTENTIONACT"'                       00326500
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00326600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00326700
.ZG9A                ANOP  ,                                            00326800
.*------------------------------------------------------------------    00326900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00327000
&XWAITTYPE           SETC  ''          INITIALIZE XVARIABLE             00327100
.*-------------------------------------------------------------------   00327200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00327300
.ZG12                ANOP  ,                                            00327400
                     AIF   (K'&WAITTYPE(1) LE 0).ZG12A                  00327500
&ZTLC                SETC 'SUSPEND'                                     00327600
                     AIF   ('&WAITTYPE(1)' NE '&ZTLC').ZG13             00327700
&XWAITTYPE           SETC  'SUSPEND'   SET KEYWORD                      00327800
                     AIF   (N'&WAITTYPE LE 1).ZG12A  CK NUM             00327900
&ZMS                 SETC  '"WAITTYPE='                                 00328000
&ZMS                 SETC  '&ZMS.&WAITTYPE"'                            00328100
&ZMS                 SETC  '&ZMS "WAITTYPE"'                            00328200
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00328300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00328400
.ZG12A               ANOP  ,                                            00328500
.*------------------------------------------------------------------    00328600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00328700
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00328800
.ZG12A0              AIF   (K'&ECB@ LE 0).ZG12A1  OK                    00328900
&ZCVAL               SETC '&ZCVAL ECB@'         INCORRECT KEY USED      00329000
.ZG12A1              AIF   (K'&OWNINGTTOKEN LE 0).ZG12A2  OK            00329100
&ZCVAL               SETC '&ZCVAL OWNINGTTOKEN'  INCORRECT KEY USED     00329200
.ZG12A2              AIF   (K'&ZCVAL LE 0).ZG12A3  OK                   00329300
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00329400
&ZMS                 SETC  '"WAITTYPE'                                  00329500
&ZMS                 SETC  '&ZMS.=&WAITTYPE"'                           00329600
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00329700
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00329800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00329900
.ZG12A3              ANOP  ,                                            00330000
.*-------------------------------------------------------------------   00330100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00330200
.ZG13                ANOP  ,                                            00330300
&ZTLC                SETC 'ECB'                                         00330400
                     AIF   ('&WAITTYPE(1)' NE '&ZTLC').ZG20             00330500
&XWAITTYPE           SETC  'ECB'       SET KEYWORD                      00330600
                     AIF   (N'&WAITTYPE LE 1).ZG13A  CK NUM             00330700
&ZMS                 SETC  '"WAITTYPE='                                 00330800
&ZMS                 SETC  '&ZMS.&WAITTYPE"'                            00330900
&ZMS                 SETC  '&ZMS "WAITTYPE"'                            00331000
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00331100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00331200
.ZG13A               ANOP  ,                                            00331300
.*----------------------------------------------------------------***   00331400
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00331500
                     AIF   (N'&ECB@ LE 1).ZG15A  CK NUM                 00331600
&ZMS                 SETC  '"ECB@='                                     00331700
&ZMS                 SETC  '&ZMS.&ECB@"'                                00331800
&ZMS                 SETC  '&ZMS "ECB@"'                                00331900
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00332000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00332100
.ZG15A               ANOP  ,                                            00332200
.*-------------------------------------------------------------------   00332300
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00332400
&ZXECB@              SETC  'INPUT'     SET IN/OUTPUT                    00332500
&XECB@               SETC  '&ECB@(1)'  SET XVARIABLE                    00332600
                     AIF   (N'&ECB@ GT 1).ZG15B  MULTI PARMS            00332700
&XECB@               SETC  '&ECB@'     SET XVARIABLE                    00332800
.ZG15B               AIF   (K'&ECB@(1) GT 0).ZG15C                      00332900
&ZXECB@              SETC  ''          RESET IN/OUTPUT                  00333000
&ZMS                 SETC  'WHEN "ECB" IS SPECIFIED'                    00333100
&ZMS                 SETC  '&ZMS , "ECB@" KEY AND ITS'                  00333200
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00333300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00333400
.ZG15C               ANOP  ,                                            00333500
.*-------------------------------------------------------------------   00333600
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00333700
                     AIF   (K'&ZXECB@ LE 0).ZG15R  NOT I/O              00333800
                     AIF   ('&XECB@'(1,1) NE '(').ZG15R                 00333900
&ZCGPR               SETC  '&XECB@'(2,K'&XECB@-2)                       00334000
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG15P                 00334100
                     AIF   (K'&ZCGPR GT 2).ZG15Q                        00334200
                     AIF   ('&ZCGPR' EQ '0').ZG15Q                      00334300
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00334400
                     AIF   (T'&ZCGPR NE 'N').ZG15Q  INVALID REG NAME    00334500
.ZG15P               ANOP  ,                                            00334600
                     AIF   (T'&ZCGPR NE 'N').ZG15R  NON NUMERIC         00334700
                     AIF   ('&ZCGPR' LT '2').ZG15Q                      00334800
                     AIF   ('&ZCGPR' LE '12').ZG15R                     00334900
.ZG15Q               ANOP  ,                                            00335000
&ZMS                 SETC  '"ECB@='                                     00335100
&ZMS                 SETC  '&ZMS.&ECB@"'                                00335200
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00335300
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00335400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00335500
.ZG15R               ANOP  ,                                            00335600
.*----------------------------------------------------------------***   00335700
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00335800
                     AIF   (N'&OWNINGTTOKEN LE 1).ZG18A  CK NUM         00335900
&ZMS                 SETC  '"OWNINGTTOKEN='                             00336000
&ZMS                 SETC  '&ZMS.&OWNINGTTOKEN"'                        00336100
&ZMS                 SETC  '&ZMS "OWNINGTTOKEN"'                        00336200
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00336300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00336400
.ZG18A               ANOP  ,                                            00336500
.*-------------------------------------------------------------------   00336600
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00336700
&ZXOWNINGTTOKEN      SETC  'INPUT'     SET IN/OUTPUT                    00336800
&XOWNINGTTOKEN       SETC  'CURRENT_TASK'                               00336900
                     AIF   (K'&OWNINGTTOKEN(1) LE 0).ZG18B  PARM        00337000
&XOWNINGTTOKEN       SETC  '&OWNINGTTOKEN(1)'   SET XVARIABLE           00337100
                     AIF   (N'&OWNINGTTOKEN GT 1).ZG18B  MULTI          00337200
&XOWNINGTTOKEN       SETC  '&OWNINGTTOKEN'      SET XVARIABLE           00337300
.ZG18B               ANOP  ,                                            00337400
.*-------------------------------------------------------------------   00337500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00337600
                     AIF   (K'&ZXOWNINGTTOKEN LE 0).ZG18R  NOT I/O      00337700
         AIF   ('&XOWNINGTTOKEN' EQ 'CURRENT_TASK').ZG18R               00337800
                     AIF   ('&XOWNINGTTOKEN'(1,1) NE '(').ZG18R         00337900
&ZCGPR               SETC  '&XOWNINGTTOKEN'(2,K'&XOWNINGTTOKEN-2)       00338000
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG18P                 00338100
                     AIF   (K'&ZCGPR GT 2).ZG18Q                        00338200
                     AIF   ('&ZCGPR' EQ '0').ZG18Q                      00338300
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00338400
                     AIF   (T'&ZCGPR NE 'N').ZG18Q  INVALID REG NAME    00338500
.ZG18P               ANOP  ,                                            00338600
                     AIF   (T'&ZCGPR NE 'N').ZG18R  NON NUMERIC         00338700
                     AIF   ('&ZCGPR' LT '2').ZG18Q                      00338800
                     AIF   ('&ZCGPR' LE '12').ZG18R                     00338900
.ZG18Q               ANOP  ,                                            00339000
&ZMS                 SETC  '"OWNINGTTOKEN='                             00339100
&ZMS                 SETC  '&ZMS.&OWNINGTTOKEN"'                        00339200
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00339300
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00339400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00339500
.ZG18R               ANOP  ,                                            00339600
.*------------------------------------------------------------------    00339700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00339800
.ZG20                ANOP  ,                                            00339900
&ZXWAITTYPE          SETC  'INPUT'     SET IN/OUTPUT                    00340000
                     AIF   (K'&XWAITTYPE GT 0).ZG20E  VALID ARG         00340100
                     AIF   (T'&WAITTYPE EQ 'O').ZG20D  OMITTED          00340200
&ZASYSLNDX           SETA  0                                            00340300
.ZG20A               ANOP  ,           POSITIONAL MACRO KEY             00340400
&ZASYSLNDX           SETA  &ZASYSLNDX+1                                 00340500
                     AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG20C             00340600
&ZTLC                SETC 'WAITTYPE'                                    00340700
                     AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG20A    00340800
.ZG20B               ANOP  ,                                            00340900
&ZXWAITTYPE          SETC  ''          RESET IN/OUTPUT                  00341000
&ZMS                 SETC  'THE "WAITTYPE" KEY'                         00341100
&ZMS                 SETC  '&ZMS MUST CONTAIN ONE'                      00341200
                     MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'             00341300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00341400
                     AGO   .ZG20E                                       00341500
.ZG20C               ANOP  ,                                            00341600
&ZXWAITTYPE          SETC  ''          RESET IN/OUTPUT                  00341700
&ZMS                 SETC  '"WAITTYPE='                                 00341800
&ZMS                 SETC  '&ZMS.&WAITTYPE"'                            00341900
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00342000
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00342100
&ZMS                 SETC  '&ZMS "SUSPEND"'                             00342200
&ZMS                 SETC  '&ZMS OR "ECB".'                             00342300
                     MNOTE 8,' &ZMS '                                   00342400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00342500
                     AGO   .ZG20E                                       00342600
.ZG20D               ANOP  ,                                            00342700
&XWAITTYPE           SETC  'SUSPEND'   SET DEFAULT KEYWORD              00342800
.ZG20E               ANOP  ,                                            00342900
.*-------------------------------------------------------------------   00343000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00343100
.ZG21                ANOP  ,                                            00343200
&ZTLC                SETC 'FAIL'                                        00343300
                     AIF   ('&CONTENTIONACT(1)' NE '&ZTLC').ZG25        00343400
&XCONTENTIONACT      SETC  'FAIL'      SET KEYWORD                      00343500
                     AIF   (N'&CONTENTIONACT LE 1).ZG21A  CK NUM        00343600
&ZMS                 SETC  '"CONTENTIONACT='                            00343700
&ZMS                 SETC  '&ZMS.&CONTENTIONACT"'                       00343800
&ZMS                 SETC  '&ZMS "CONTENTIONACT"'                       00343900
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00344000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00344100
.ZG21A               ANOP  ,                                            00344200
.*------------------------------------------------------------------    00344300
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00344400
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00344500
.ZG21A0              AIF   (K'&WAITTYPE LE 0).ZG21A1  OK                00344600
&ZCVAL               SETC '&ZCVAL WAITTYPE'     INCORRECT KEY USED      00344700
.ZG21A1              AIF   (K'&ECB@ LE 0).ZG21A2  OK                    00344800
&ZCVAL               SETC '&ZCVAL ECB@'         INCORRECT KEY USED      00344900
.ZG21A2              AIF   (K'&ZCVAL LE 0).ZG21A3  OK                   00345000
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00345100
&ZMS                 SETC  '"CONTENTIONACT'                             00345200
&ZMS                 SETC  '&ZMS.=&CONTENTIONACT"'                      00345300
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00345400
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00345500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00345600
.ZG21A3              ANOP  ,                                            00345700
.*----------------------------------------------------------------***   00345800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00345900
                     AIF   (N'&OWNINGTTOKEN LE 1).ZG23A  CK NUM         00346000
&ZMS                 SETC  '"OWNINGTTOKEN='                             00346100
&ZMS                 SETC  '&ZMS.&OWNINGTTOKEN"'                        00346200
&ZMS                 SETC  '&ZMS "OWNINGTTOKEN"'                        00346300
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00346400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00346500
.ZG23A               ANOP  ,                                            00346600
.*-------------------------------------------------------------------   00346700
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00346800
&ZXOWNINGTTOKEN      SETC  'INPUT'     SET IN/OUTPUT                    00346900
&XOWNINGTTOKEN       SETC  'CURRENT_TASK'                               00347000
                     AIF   (K'&OWNINGTTOKEN(1) LE 0).ZG23B  PARM        00347100
&XOWNINGTTOKEN       SETC  '&OWNINGTTOKEN(1)'   SET XVARIABLE           00347200
                     AIF   (N'&OWNINGTTOKEN GT 1).ZG23B  MULTI          00347300
&XOWNINGTTOKEN       SETC  '&OWNINGTTOKEN'      SET XVARIABLE           00347400
.ZG23B               ANOP  ,                                            00347500
.*-------------------------------------------------------------------   00347600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00347700
                     AIF   (K'&ZXOWNINGTTOKEN LE 0).ZG23R  NOT I/O      00347800
         AIF   ('&XOWNINGTTOKEN' EQ 'CURRENT_TASK').ZG23R               00347900
                     AIF   ('&XOWNINGTTOKEN'(1,1) NE '(').ZG23R         00348000
&ZCGPR               SETC  '&XOWNINGTTOKEN'(2,K'&XOWNINGTTOKEN-2)       00348100
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG23P                 00348200
                     AIF   (K'&ZCGPR GT 2).ZG23Q                        00348300
                     AIF   ('&ZCGPR' EQ '0').ZG23Q                      00348400
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00348500
                     AIF   (T'&ZCGPR NE 'N').ZG23Q  INVALID REG NAME    00348600
.ZG23P               ANOP  ,                                            00348700
                     AIF   (T'&ZCGPR NE 'N').ZG23R  NON NUMERIC         00348800
                     AIF   ('&ZCGPR' LT '2').ZG23Q                      00348900
                     AIF   ('&ZCGPR' LE '12').ZG23R                     00349000
.ZG23Q               ANOP  ,                                            00349100
&ZMS                 SETC  '"OWNINGTTOKEN='                             00349200
&ZMS                 SETC  '&ZMS.&OWNINGTTOKEN"'                        00349300
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00349400
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00349500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00349600
.ZG23R               ANOP  ,                                            00349700
.*------------------------------------------------------------------    00349800
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00349900
.ZG25                ANOP  ,                                            00350000
&ZXCONTENTIONACT     SETC  'INPUT'     SET IN/OUTPUT                    00350100
                     AIF   (K'&XCONTENTIONACT GT 0).ZG25E  VALID ARG    00350200
                     AIF   (T'&CONTENTIONACT EQ 'O').ZG25D  OMITTED     00350300
&ZASYSLNDX           SETA  0                                            00350400
.ZG25A               ANOP  ,           POSITIONAL MACRO KEY             00350500
&ZASYSLNDX           SETA  &ZASYSLNDX+1                                 00350600
                     AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG25C             00350700
&ZTLC                SETC 'CONTENTIONACT'                               00350800
                     AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG25A    00350900
.ZG25B               ANOP  ,                                            00351000
&ZXCONTENTIONACT     SETC  ''          RESET IN/OUTPUT                  00351100
&ZMS                 SETC  'THE "CONTENTIONACT" KEY'                    00351200
&ZMS                 SETC  '&ZMS MUST CONTAIN ONE'                      00351300
                     MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'             00351400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00351500
                     AGO   .ZG25E                                       00351600
.ZG25C               ANOP  ,                                            00351700
&ZXCONTENTIONACT     SETC  ''          RESET IN/OUTPUT                  00351800
&ZMS                 SETC  '"CONTENTIONACT='                            00351900
&ZMS                 SETC  '&ZMS.&CONTENTIONACT"'                       00352000
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00352100
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00352200
&ZMS                 SETC  '&ZMS "WAIT"'                                00352300
&ZMS                 SETC  '&ZMS OR "FAIL".'                            00352400
                     MNOTE 8,' &ZMS '                                   00352500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00352600
                     AGO   .ZG25E                                       00352700
.ZG25D               ANOP  ,                                            00352800
&XCONTENTIONACT      SETC  'WAIT'      SET DEFAULT KEYWORD              00352900
.ZG25E               ANOP  ,                                            00353000
.*------------------------------------------------------------------    00353100
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00353200
&XENQMAX             SETC  ''          INITIALIZE XVARIABLE             00353300
.*-------------------------------------------------------------------   00353400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00353500
.ZG28                ANOP  ,                                            00353600
                     AIF   (K'&ENQMAX(1) LE 0).ZG28A                    00353700
&ZTLC                SETC 'YES'                                         00353800
                     AIF   ('&ENQMAX(1)' NE '&ZTLC').ZG29               00353900
&XENQMAX             SETC  'YES'       SET KEYWORD                      00354000
                     AIF   (N'&ENQMAX LE 1).ZG28A  CK NUM               00354100
&ZMS                 SETC  '"ENQMAX='                                   00354200
&ZMS                 SETC  '&ZMS.&ENQMAX"'                              00354300
&ZMS                 SETC  '&ZMS "ENQMAX"'                              00354400
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00354500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00354600
.ZG28A               ANOP  ,                                            00354700
.*-------------------------------------------------------------------   00354800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00354900
.ZG29                ANOP  ,                                            00355000
&ZTLC                SETC 'NO'                                          00355100
                     AIF   ('&ENQMAX(1)' NE '&ZTLC').ZG30               00355200
&XENQMAX             SETC  'NO'        SET KEYWORD                      00355300
                     AIF   (N'&ENQMAX LE 1).ZG29A  CK NUM               00355400
&ZMS                 SETC  '"ENQMAX='                                   00355500
&ZMS                 SETC  '&ZMS.&ENQMAX"'                              00355600
&ZMS                 SETC  '&ZMS "ENQMAX"'                              00355700
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00355800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00355900
.ZG29A               ANOP  ,                                            00356000
.*------------------------------------------------------------------    00356100
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00356200
.ZG30                ANOP  ,                                            00356300
&ZXENQMAX            SETC  'INPUT'     SET IN/OUTPUT                    00356400
                     AIF   (K'&XENQMAX GT 0).ZG30E  VALID ARG           00356500
                     AIF   (T'&ENQMAX EQ 'O').ZG30D  OMITTED            00356600
&ZASYSLNDX           SETA  0                                            00356700
.ZG30A               ANOP  ,           POSITIONAL MACRO KEY             00356800
&ZASYSLNDX           SETA  &ZASYSLNDX+1                                 00356900
                     AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG30C             00357000
&ZTLC                SETC 'ENQMAX'                                      00357100
                     AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG30A    00357200
.ZG30B               ANOP  ,                                            00357300
&ZXENQMAX            SETC  ''          RESET IN/OUTPUT                  00357400
&ZMS                 SETC  'THE "ENQMAX" KEY'                           00357500
&ZMS                 SETC  '&ZMS MUST CONTAIN ONE'                      00357600
                     MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'             00357700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00357800
                     AGO   .ZG30E                                       00357900
.ZG30C               ANOP  ,                                            00358000
&ZXENQMAX            SETC  ''          RESET IN/OUTPUT                  00358100
&ZMS                 SETC  '"ENQMAX='                                   00358200
&ZMS                 SETC  '&ZMS.&ENQMAX"'                              00358300
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00358400
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00358500
&ZMS                 SETC  '&ZMS "YES"'                                 00358600
&ZMS                 SETC  '&ZMS OR "NO".'                              00358700
                     MNOTE 8,' &ZMS '                                   00358800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00358900
                     AGO   .ZG30E                                       00359000
.ZG30D               ANOP  ,                                            00359100
&XENQMAX             SETC  'YES'       SET DEFAULT KEYWORD              00359200
.ZG30E               ANOP  ,                                            00359300
.*----------------------------------------------------------------***   00359400
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00359500
                     AIF   (N'&USERDATA LE 1).ZG32A  CK NUM             00359600
&ZMS                 SETC  '"USERDATA='                                 00359700
&ZMS                 SETC  '&ZMS.&USERDATA"'                            00359800
&ZMS                 SETC  '&ZMS "USERDATA"'                            00359900
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00360000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00360100
.ZG32A               ANOP  ,                                            00360200
.*-------------------------------------------------------------------   00360300
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00360400
&ZXUSERDATA          SETC  'INPUT'     SET IN/OUTPUT                    00360500
&XUSERDATA           SETC  'NO_USERDATA'                                00360600
                     AIF   (K'&USERDATA(1) LE 0).ZG32B  PARM            00360700
&XUSERDATA           SETC  '&USERDATA(1)'       SET XVARIABLE           00360800
                     AIF   (N'&USERDATA GT 1).ZG32B  MULTI              00360900
&XUSERDATA           SETC  '&USERDATA'          SET XVARIABLE           00361000
.ZG32B               ANOP  ,                                            00361100
.*-------------------------------------------------------------------   00361200
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00361300
                     AIF   (K'&ZXUSERDATA LE 0).ZG32R  NOT I/O          00361400
         AIF   ('&XUSERDATA' EQ 'NO_USERDATA').ZG32R                    00361500
                     AIF   ('&XUSERDATA'(1,1) NE '(').ZG32R             00361600
&ZCGPR               SETC  '&XUSERDATA'(2,K'&XUSERDATA-2)               00361700
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG32P                 00361800
                     AIF   (K'&ZCGPR GT 2).ZG32Q                        00361900
                     AIF   ('&ZCGPR' EQ '0').ZG32Q                      00362000
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00362100
                     AIF   (T'&ZCGPR NE 'N').ZG32Q  INVALID REG NAME    00362200
.ZG32P               ANOP  ,                                            00362300
                     AIF   (T'&ZCGPR NE 'N').ZG32R  NON NUMERIC         00362400
                     AIF   ('&ZCGPR' LT '2').ZG32Q                      00362500
                     AIF   ('&ZCGPR' LE '12').ZG32R                     00362600
.ZG32Q               ANOP  ,                                            00362700
&ZMS                 SETC  '"USERDATA='                                 00362800
&ZMS                 SETC  '&ZMS.&USERDATA"'                            00362900
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00363000
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00363100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00363200
.ZG32R               ANOP  ,                                            00363300
.*-------------------------------------------------------------------   00363400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00363500
.ZG34                ANOP  ,                                            00363600
&ZTLC                SETC 'YES'                                         00363700
                     AIF   ('&TEST(1)' NE '&ZTLC').ZG44                 00363800
&XTEST               SETC  'YES'       SET KEYWORD                      00363900
                     AIF   (N'&TEST LE 1).ZG34A  CK NUM                 00364000
&ZMS                 SETC  '"TEST='                                     00364100
&ZMS                 SETC  '&ZMS.&TEST"'                                00364200
&ZMS                 SETC  '&ZMS "TEST"'                                00364300
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00364400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00364500
.ZG34A               ANOP  ,                                            00364600
.*------------------------------------------------------------------    00364700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00364800
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00364900
.ZG34A0              AIF   (K'&CONTENTIONACT LE 0).ZG34A1  OK           00365000
&ZCVAL               SETC '&ZCVAL CONTENTIONACT'  INCORRECT KEY USED    00365100
.ZG34A1              AIF   (K'&WAITTYPE LE 0).ZG34A2  OK                00365200
&ZCVAL               SETC '&ZCVAL WAITTYPE'     INCORRECT KEY USED      00365300
.ZG34A2              AIF   (K'&ECB@ LE 0).ZG34A3  OK                    00365400
&ZCVAL               SETC '&ZCVAL ECB@'         INCORRECT KEY USED      00365500
.ZG34A3              AIF   (K'&ENQMAX LE 0).ZG34A4  OK                  00365600
&ZCVAL               SETC '&ZCVAL ENQMAX'       INCORRECT KEY USED      00365700
.ZG34A4              AIF   (K'&USERDATA LE 0).ZG34A5  OK                00365800
&ZCVAL               SETC '&ZCVAL USERDATA'     INCORRECT KEY USED      00365900
.ZG34A5              AIF   (K'&ZCVAL LE 0).ZG34A6  OK                   00366000
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00366100
&ZMS                 SETC  '"TEST'                                      00366200
&ZMS                 SETC  '&ZMS.=&TEST"'                               00366300
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00366400
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00366500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00366600
.ZG34A6              ANOP  ,                                            00366700
.*----------------------------------------------------------------***   00366800
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00366900
                     AIF   (N'&ANSAREA LE 1).ZG36A  CK NUM              00367000
&ZMS                 SETC  '"ANSAREA='                                  00367100
&ZMS                 SETC  '&ZMS.&ANSAREA"'                             00367200
&ZMS                 SETC  '&ZMS "ANSAREA"'                             00367300
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00367400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00367500
.ZG36A               ANOP  ,                                            00367600
.*-------------------------------------------------------------------   00367700
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00367800
                     AIF   (K'&ANSAREA(1) LE 0).ZG36C  NO PARM          00367900
&ZXANSAREA           SETC  'OUTPUT'    SET OUTPUT                       00368000
&XANSAREA            SETC  '&ANSAREA(1)'        SET XVARIABLE           00368100
                     AIF   (N'&ANSAREA GT 1).ZG36C                      00368200
&XANSAREA            SETC  '&ANSAREA'  SET XVARIABLE                    00368300
.ZG36C               ANOP  ,                                            00368400
.*-------------------------------------------------------------------   00368500
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00368600
                     AIF   (K'&ZXANSAREA LE 0).ZG36R  NOT I/O           00368700
                     AIF   ('&XANSAREA'(1,1) NE '(').ZG36R              00368800
&ZCGPR               SETC  '&XANSAREA'(2,K'&XANSAREA-2)                 00368900
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG36P                 00369000
                     AIF   (K'&ZCGPR GT 2).ZG36Q                        00369100
                     AIF   ('&ZCGPR' EQ '0').ZG36Q                      00369200
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00369300
                     AIF   (T'&ZCGPR NE 'N').ZG36Q  INVALID REG NAME    00369400
.ZG36P               ANOP  ,                                            00369500
                     AIF   (T'&ZCGPR NE 'N').ZG36R  NON NUMERIC         00369600
                     AIF   ('&ZCGPR' LT '2').ZG36Q                      00369700
                     AIF   ('&ZCGPR' LE '12').ZG36R                     00369800
.ZG36Q               ANOP  ,                                            00369900
&ZMS                 SETC  '"ANSAREA='                                  00370000
&ZMS                 SETC  '&ZMS.&ANSAREA"'                             00370100
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00370200
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00370300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00370400
.ZG36R               ANOP  ,                                            00370500
.*----------------------------------------------------------------***   00370600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00370700
                     AIF   (N'&ANSLEN LE 1).ZG39A  CK NUM               00370800
&ZMS                 SETC  '"ANSLEN='                                   00370900
&ZMS                 SETC  '&ZMS.&ANSLEN"'                              00371000
&ZMS                 SETC  '&ZMS "ANSLEN"'                              00371100
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00371200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00371300
.ZG39A               ANOP  ,                                            00371400
.*-------------------------------------------------------------------   00371500
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00371600
&ZXANSLEN            SETC  'INPUT'     SET IN/OUTPUT                    00371700
&XANSLEN             SETC  'NO_ANSLEN'                                  00371800
                     AIF   (K'&ANSLEN(1) LE 0).ZG39B  PARM              00371900
&XANSLEN             SETC  '&ANSLEN(1)'         SET XVARIABLE           00372000
                     AIF   (N'&ANSLEN GT 1).ZG39B  MULTI                00372100
&XANSLEN             SETC  '&ANSLEN'   SET XVARIABLE                    00372200
.ZG39B               ANOP  ,                                            00372300
.*-------------------------------------------------------------------   00372400
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00372500
                     AIF   (K'&ZXANSLEN LE 0).ZG39R  NOT I/O            00372600
         AIF   ('&XANSLEN' EQ 'NO_ANSLEN').ZG39R                        00372700
                     AIF   ('&XANSLEN'(1,1) NE '(').ZG39R               00372800
&ZCGPR               SETC  '&XANSLEN'(2,K'&XANSLEN-2)                   00372900
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG39P                 00373000
                     AIF   (K'&ZCGPR GT 2).ZG39Q                        00373100
                     AIF   ('&ZCGPR' EQ '0').ZG39Q                      00373200
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00373300
                     AIF   (T'&ZCGPR NE 'N').ZG39Q  INVALID REG NAME    00373400
.ZG39P               ANOP  ,                                            00373500
                     AIF   (T'&ZCGPR NE 'N').ZG39R  NON NUMERIC         00373600
                     AIF   ('&ZCGPR' LT '2').ZG39Q                      00373700
                     AIF   ('&ZCGPR' LE '12').ZG39R                     00373800
.ZG39Q               ANOP  ,                                            00373900
&ZMS                 SETC  '"ANSLEN='                                   00374000
&ZMS                 SETC  '&ZMS.&ANSLEN"'                              00374100
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00374200
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00374300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00374400
.ZG39R               ANOP  ,                                            00374500
.*----------------------------------------------------------------***   00374600
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00374700
                     AIF   (N'&OWNINGTTOKEN LE 1).ZG42A  CK NUM         00374800
&ZMS                 SETC  '"OWNINGTTOKEN='                             00374900
&ZMS                 SETC  '&ZMS.&OWNINGTTOKEN"'                        00375000
&ZMS                 SETC  '&ZMS "OWNINGTTOKEN"'                        00375100
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00375200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00375300
.ZG42A               ANOP  ,                                            00375400
.*-------------------------------------------------------------------   00375500
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00375600
&ZXOWNINGTTOKEN      SETC  'INPUT'     SET IN/OUTPUT                    00375700
&XOWNINGTTOKEN       SETC  'CURRENT_TASK'                               00375800
                     AIF   (K'&OWNINGTTOKEN(1) LE 0).ZG42B  PARM        00375900
&XOWNINGTTOKEN       SETC  '&OWNINGTTOKEN(1)'   SET XVARIABLE           00376000
                     AIF   (N'&OWNINGTTOKEN GT 1).ZG42B  MULTI          00376100
&XOWNINGTTOKEN       SETC  '&OWNINGTTOKEN'      SET XVARIABLE           00376200
.ZG42B               ANOP  ,                                            00376300
.*-------------------------------------------------------------------   00376400
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00376500
                     AIF   (K'&ZXOWNINGTTOKEN LE 0).ZG42R  NOT I/O      00376600
         AIF   ('&XOWNINGTTOKEN' EQ 'CURRENT_TASK').ZG42R               00376700
                     AIF   ('&XOWNINGTTOKEN'(1,1) NE '(').ZG42R         00376800
&ZCGPR               SETC  '&XOWNINGTTOKEN'(2,K'&XOWNINGTTOKEN-2)       00376900
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG42P                 00377000
                     AIF   (K'&ZCGPR GT 2).ZG42Q                        00377100
                     AIF   ('&ZCGPR' EQ '0').ZG42Q                      00377200
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00377300
                     AIF   (T'&ZCGPR NE 'N').ZG42Q  INVALID REG NAME    00377400
.ZG42P               ANOP  ,                                            00377500
                     AIF   (T'&ZCGPR NE 'N').ZG42R  NON NUMERIC         00377600
                     AIF   ('&ZCGPR' LT '2').ZG42Q                      00377700
                     AIF   ('&ZCGPR' LE '12').ZG42R                     00377800
.ZG42Q               ANOP  ,                                            00377900
&ZMS                 SETC  '"OWNINGTTOKEN='                             00378000
&ZMS                 SETC  '&ZMS.&OWNINGTTOKEN"'                        00378100
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00378200
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00378300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00378400
.ZG42R               ANOP  ,                                            00378500
.*------------------------------------------------------------------    00378600
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00378700
.ZG44                ANOP  ,                                            00378800
&ZXTEST              SETC  'INPUT'     SET IN/OUTPUT                    00378900
                     AIF   (K'&XTEST GT 0).ZG44E  VALID ARG             00379000
                     AIF   (T'&TEST EQ 'O').ZG44D  OMITTED              00379100
&ZASYSLNDX           SETA  0                                            00379200
.ZG44A               ANOP  ,           POSITIONAL MACRO KEY             00379300
&ZASYSLNDX           SETA  &ZASYSLNDX+1                                 00379400
                     AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG44C             00379500
&ZTLC                SETC 'TEST'                                        00379600
                     AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG44A    00379700
.ZG44B               ANOP  ,                                            00379800
&ZXTEST              SETC  ''          RESET IN/OUTPUT                  00379900
&ZMS                 SETC  'THE "TEST" KEY'                             00380000
&ZMS                 SETC  '&ZMS MUST CONTAIN ONE'                      00380100
                     MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'             00380200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00380300
                     AGO   .ZG44E                                       00380400
.ZG44C               ANOP  ,                                            00380500
&ZXTEST              SETC  ''          RESET IN/OUTPUT                  00380600
&ZMS                 SETC  '"TEST='                                     00380700
&ZMS                 SETC  '&ZMS.&TEST"'                                00380800
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00380900
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00381000
&ZMS                 SETC  '&ZMS "NO"'                                  00381100
&ZMS                 SETC  '&ZMS OR "YES".'                             00381200
                     MNOTE 8,' &ZMS '                                   00381300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00381400
                     AGO   .ZG44E                                       00381500
.ZG44D               ANOP  ,                                            00381600
&XTEST               SETC  'NO'        SET DEFAULT KEYWORD              00381700
.ZG44E               ANOP  ,                                            00381800
.*------------------------------------------------------------------    00381900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00382000
&XRESLIST            SETC  ''          INITIALIZE XVARIABLE             00382100
.*-------------------------------------------------------------------   00382200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00382300
.ZG47                ANOP  ,                                            00382400
                     AIF   (K'&RESLIST(1) LE 0).ZG47A                   00382500
&ZTLC                SETC 'NO'                                          00382600
                     AIF   ('&RESLIST(1)' NE '&ZTLC').ZG99              00382700
&XRESLIST            SETC  'NO'        SET KEYWORD                      00382800
                     AIF   (N'&RESLIST LE 1).ZG47A  CK NUM              00382900
&ZMS                 SETC  '"RESLIST='                                  00383000
&ZMS                 SETC  '&ZMS.&RESLIST"'                             00383100
&ZMS                 SETC  '&ZMS "RESLIST"'                             00383200
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00383300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00383400
.ZG47A               ANOP  ,                                            00383500
.*------------------------------------------------------------------    00383600
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00383700
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00383800
.ZG47A0              AIF   (K'&NUMRES LE 0).ZG47A1  OK                  00383900
&ZCVAL               SETC '&ZCVAL NUMRES'       INCORRECT KEY USED      00384000
.ZG47A1              AIF   (K'&RESTABLE LE 0).ZG47A2  OK                00384100
&ZCVAL               SETC '&ZCVAL RESTABLE'     INCORRECT KEY USED      00384200
.ZG47A2              AIF   (K'&ENQTOKENTBL LE 0).ZG47A3  OK             00384300
&ZCVAL               SETC '&ZCVAL ENQTOKENTBL'  INCORRECT KEY USED      00384400
.ZG47A3              AIF   (K'&RETURNTABLE LE 0).ZG47A4  OK             00384500
&ZCVAL               SETC '&ZCVAL RETURNTABLE'  INCORRECT KEY USED      00384600
.ZG47A4              AIF   (K'&ZCVAL LE 0).ZG47A5  OK                   00384700
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00384800
&ZMS                 SETC  '"RESLIST'                                   00384900
&ZMS                 SETC  '&ZMS.=&RESLIST"'                            00385000
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00385100
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00385200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00385300
.ZG47A5              ANOP  ,                                            00385400
.*----------------------------------------------------------------***   00385500
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00385600
                     AIF   (N'&QNAME LE 1).ZG49A  CK NUM                00385700
&ZMS                 SETC  '"QNAME='                                    00385800
&ZMS                 SETC  '&ZMS.&QNAME"'                               00385900
&ZMS                 SETC  '&ZMS "QNAME"'                               00386000
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00386100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00386200
.ZG49A               ANOP  ,                                            00386300
.*-------------------------------------------------------------------   00386400
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00386500
&ZXQNAME             SETC  'INPUT'     SET IN/OUTPUT                    00386600
&XQNAME              SETC  '&QNAME(1)'          SET XVARIABLE           00386700
                     AIF   (N'&QNAME GT 1).ZG49B  MULTI PARMS           00386800
&XQNAME              SETC  '&QNAME'    SET XVARIABLE                    00386900
.ZG49B               AIF   (K'&QNAME(1) GT 0).ZG49C                     00387000
&ZXQNAME             SETC  ''          RESET IN/OUTPUT                  00387100
&ZMS                 SETC  ' '                                          00387200
&ZMS                 SETC  '&ZMS "QNAME" KEY AND ITS'                   00387300
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00387400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00387500
.ZG49C               ANOP  ,                                            00387600
.*-------------------------------------------------------------------   00387700
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00387800
                     AIF   (K'&ZXQNAME LE 0).ZG49R  NOT I/O             00387900
                     AIF   ('&XQNAME'(1,1) NE '(').ZG49R                00388000
&ZCGPR               SETC  '&XQNAME'(2,K'&XQNAME-2)                     00388100
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG49P                 00388200
                     AIF   (K'&ZCGPR GT 2).ZG49Q                        00388300
                     AIF   ('&ZCGPR' EQ '0').ZG49Q                      00388400
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00388500
                     AIF   (T'&ZCGPR NE 'N').ZG49Q  INVALID REG NAME    00388600
.ZG49P               ANOP  ,                                            00388700
                     AIF   (T'&ZCGPR NE 'N').ZG49R  NON NUMERIC         00388800
                     AIF   ('&ZCGPR' LT '2').ZG49Q                      00388900
                     AIF   ('&ZCGPR' LE '12').ZG49R                     00389000
.ZG49Q               ANOP  ,                                            00389100
&ZMS                 SETC  '"QNAME='                                    00389200
&ZMS                 SETC  '&ZMS.&QNAME"'                               00389300
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00389400
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00389500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00389600
.ZG49R               ANOP  ,                                            00389700
.*----------------------------------------------------------------***   00389800
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00389900
                     AIF   (N'&RNAME LE 1).ZG52A  CK NUM                00390000
&ZMS                 SETC  '"RNAME='                                    00390100
&ZMS                 SETC  '&ZMS.&RNAME"'                               00390200
&ZMS                 SETC  '&ZMS "RNAME"'                               00390300
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00390400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00390500
.ZG52A               ANOP  ,                                            00390600
.*-------------------------------------------------------------------   00390700
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00390800
&ZXRNAME             SETC  'INPUT'     SET IN/OUTPUT                    00390900
&XRNAME              SETC  '&RNAME(1)'          SET XVARIABLE           00391000
                     AIF   (N'&RNAME GT 1).ZG52B  MULTI PARMS           00391100
&XRNAME              SETC  '&RNAME'    SET XVARIABLE                    00391200
.ZG52B               AIF   (K'&RNAME(1) GT 0).ZG52C                     00391300
&ZXRNAME             SETC  ''          RESET IN/OUTPUT                  00391400
&ZMS                 SETC  ' '                                          00391500
&ZMS                 SETC  '&ZMS "RNAME" KEY AND ITS'                   00391600
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00391700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00391800
.ZG52C               ANOP  ,                                            00391900
.*-------------------------------------------------------------------   00392000
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00392100
                     AIF   (K'&ZXRNAME LE 0).ZG52R  NOT I/O             00392200
                     AIF   ('&XRNAME'(1,1) NE '(').ZG52R                00392300
&ZCGPR               SETC  '&XRNAME'(2,K'&XRNAME-2)                     00392400
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG52P                 00392500
                     AIF   (K'&ZCGPR GT 2).ZG52Q                        00392600
                     AIF   ('&ZCGPR' EQ '0').ZG52Q                      00392700
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00392800
                     AIF   (T'&ZCGPR NE 'N').ZG52Q  INVALID REG NAME    00392900
.ZG52P               ANOP  ,                                            00393000
                     AIF   (T'&ZCGPR NE 'N').ZG52R  NON NUMERIC         00393100
                     AIF   ('&ZCGPR' LT '2').ZG52Q                      00393200
                     AIF   ('&ZCGPR' LE '12').ZG52R                     00393300
.ZG52Q               ANOP  ,                                            00393400
&ZMS                 SETC  '"RNAME='                                    00393500
&ZMS                 SETC  '&ZMS.&RNAME"'                               00393600
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00393700
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00393800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00393900
.ZG52R               ANOP  ,                                            00394000
.*----------------------------------------------------------------***   00394100
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00394200
                     AIF   (N'&RNAMELEN LE 1).ZG55A  CK NUM             00394300
&ZMS                 SETC  '"RNAMELEN='                                 00394400
&ZMS                 SETC  '&ZMS.&RNAMELEN"'                            00394500
&ZMS                 SETC  '&ZMS "RNAMELEN"'                            00394600
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00394700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00394800
.ZG55A               ANOP  ,                                            00394900
.*-------------------------------------------------------------------   00395000
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00395100
&ZXRNAMELEN          SETC  'INPUT'     SET IN/OUTPUT                    00395200
&XRNAMELEN           SETC  '&RNAMELEN(1)'       SET XVARIABLE           00395300
                     AIF   (N'&RNAMELEN GT 1).ZG55B  MULTI PARMS        00395400
&XRNAMELEN           SETC  '&RNAMELEN'          SET XVARIABLE           00395500
.ZG55B               AIF   (K'&RNAMELEN(1) GT 0).ZG55C                  00395600
&ZXRNAMELEN          SETC  ''          RESET IN/OUTPUT                  00395700
&ZMS                 SETC  ' '                                          00395800
&ZMS                 SETC  '&ZMS "RNAMELEN" KEY AND ITS'                00395900
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00396000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00396100
.ZG55C               ANOP  ,                                            00396200
.*-------------------------------------------------------------------   00396300
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00396400
                     AIF   (K'&ZXRNAMELEN LE 0).ZG55R  NOT I/O          00396500
                     AIF   ('&XRNAMELEN'(1,1) NE '(').ZG55R             00396600
&ZCGPR               SETC  '&XRNAMELEN'(2,K'&XRNAMELEN-2)               00396700
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG55P                 00396800
                     AIF   (K'&ZCGPR GT 2).ZG55Q                        00396900
                     AIF   ('&ZCGPR' EQ '0').ZG55Q                      00397000
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00397100
                     AIF   (T'&ZCGPR NE 'N').ZG55Q  INVALID REG NAME    00397200
.ZG55P               ANOP  ,                                            00397300
                     AIF   (T'&ZCGPR NE 'N').ZG55R  NON NUMERIC         00397400
                     AIF   ('&ZCGPR' LT '2').ZG55Q                      00397500
                     AIF   ('&ZCGPR' LE '12').ZG55R                     00397600
.ZG55Q               ANOP  ,                                            00397700
&ZMS                 SETC  '"RNAMELEN='                                 00397800
&ZMS                 SETC  '&ZMS.&RNAMELEN"'                            00397900
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00398000
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00398100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00398200
.ZG55R               ANOP  ,                                            00398300
.*------------------------------------------------------------------    00398400
.***AG.KKCTL01 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00398500
&XCONTROL            SETC  ''          INITIALIZE XVARIABLE             00398600
.*-------------------------------------------------------------------   00398700
.***AG.KKCTL02 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00398800
.ZG59                ANOP  ,                                            00398900
                     AIF   (K'&CONTROL(1) LE 0).ZG59A                   00399000
&ZTLC                SETC 'EXCLUSIVE'                                   00399100
                     AIF   ('&CONTROL(1)' NE '&ZTLC').ZG60              00399200
&XCONTROL            SETC  'EXCLUSIVE'          SET KEYWORD             00399300
                     AIF   (N'&CONTROL LE 1).ZG59A  CK NUM              00399400
&ZMS                 SETC  '"CONTROL='                                  00399500
&ZMS                 SETC  '&ZMS.&CONTROL"'                             00399600
&ZMS                 SETC  '&ZMS "CONTROL"'                             00399700
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00399800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00399900
.ZG59A               ANOP  ,                                            00400000
.*------------------------------------------------------------------    00400100
.***AG.KKCTL03 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00400200
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00400300
.ZG59A0              AIF   (K'&CONTROLVAL LE 0).ZG59A1  OK              00400400
&ZCVAL               SETC '&ZCVAL CONTROLVAL'   INCORRECT KEY USED      00400500
.ZG59A1              AIF   (K'&ZCVAL LE 0).ZG59A2  OK                   00400600
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00400700
&ZMS                 SETC  '"CONTROL'                                   00400800
&ZMS                 SETC  '&ZMS.=&CONTROL"'                            00400900
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00401000
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00401100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00401200
.ZG59A2              ANOP  ,                                            00401300
.*-------------------------------------------------------------------   00401400
.***AG.KKCTL02 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00401500
.ZG60                ANOP  ,                                            00401600
&ZTLC                SETC 'SHARED'                                      00401700
                     AIF   ('&CONTROL(1)' NE '&ZTLC').ZG61              00401800
&XCONTROL            SETC  'SHARED'    SET KEYWORD                      00401900
                     AIF   (N'&CONTROL LE 1).ZG60A  CK NUM              00402000
&ZMS                 SETC  '"CONTROL='                                  00402100
&ZMS                 SETC  '&ZMS.&CONTROL"'                             00402200
&ZMS                 SETC  '&ZMS "CONTROL"'                             00402300
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00402400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00402500
.ZG60A               ANOP  ,                                            00402600
.*------------------------------------------------------------------    00402700
.***AG.KKCTL03 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00402800
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00402900
.ZG60A0              AIF   (K'&CONTROLVAL LE 0).ZG60A1  OK              00403000
&ZCVAL               SETC '&ZCVAL CONTROLVAL'   INCORRECT KEY USED      00403100
.ZG60A1              AIF   (K'&ZCVAL LE 0).ZG60A2  OK                   00403200
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00403300
&ZMS                 SETC  '"CONTROL'                                   00403400
&ZMS                 SETC  '&ZMS.=&CONTROL"'                            00403500
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00403600
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00403700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00403800
.ZG60A2              ANOP  ,                                            00403900
.*-------------------------------------------------------------------   00404000
.***AG.KKCTL02 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00404100
.ZG61                ANOP  ,                                            00404200
&ZTLC                SETC 'VALUE'                                       00404300
                     AIF   ('&CONTROL(1)' NE '&ZTLC').ZG65              00404400
&XCONTROL            SETC  'VALUE'     SET KEYWORD                      00404500
                     AIF   (N'&CONTROL LE 1).ZG61A  CK NUM              00404600
&ZMS                 SETC  '"CONTROL='                                  00404700
&ZMS                 SETC  '&ZMS.&CONTROL"'                             00404800
&ZMS                 SETC  '&ZMS "CONTROL"'                             00404900
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00405000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00405100
.ZG61A               ANOP  ,                                            00405200
.*----------------------------------------------------------------***   00405300
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00405400
                     AIF   (N'&CONTROLVAL LE 1).ZG63A  CK NUM           00405500
&ZMS                 SETC  '"CONTROLVAL='                               00405600
&ZMS                 SETC  '&ZMS.&CONTROLVAL"'                          00405700
&ZMS                 SETC  '&ZMS "CONTROLVAL"'                          00405800
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00405900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00406000
.ZG63A               ANOP  ,                                            00406100
.*-------------------------------------------------------------------   00406200
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00406300
&ZXCONTROLVAL        SETC  'INPUT'     SET IN/OUTPUT                    00406400
&XCONTROLVAL         SETC  '&CONTROLVAL(1)'     SET XVARIABLE           00406500
                     AIF   (N'&CONTROLVAL GT 1).ZG63B  MULTI PARMS      00406600
&XCONTROLVAL         SETC  '&CONTROLVAL'        SET XVARIABLE           00406700
.ZG63B               AIF   (K'&CONTROLVAL(1) GT 0).ZG63C                00406800
&ZXCONTROLVAL        SETC  ''          RESET IN/OUTPUT                  00406900
&ZMS                 SETC  ' '                                          00407000
&ZMS                 SETC  '&ZMS "CONTROLVAL" KEY AND ITS'              00407100
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00407200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00407300
.ZG63C               ANOP  ,                                            00407400
.*-------------------------------------------------------------------   00407500
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00407600
                     AIF   (K'&ZXCONTROLVAL LE 0).ZG63R  NOT I/O        00407700
                     AIF   ('&XCONTROLVAL'(1,1) NE '(').ZG63R           00407800
&ZCGPR               SETC  '&XCONTROLVAL'(2,K'&XCONTROLVAL-2)           00407900
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG63P                 00408000
                     AIF   (K'&ZCGPR GT 2).ZG63Q                        00408100
                     AIF   ('&ZCGPR' EQ '0').ZG63Q                      00408200
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00408300
                     AIF   (T'&ZCGPR NE 'N').ZG63Q  INVALID REG NAME    00408400
.ZG63P               ANOP  ,                                            00408500
                     AIF   (T'&ZCGPR NE 'N').ZG63R  NON NUMERIC         00408600
                     AIF   ('&ZCGPR' LT '2').ZG63Q                      00408700
                     AIF   ('&ZCGPR' LE '12').ZG63R                     00408800
.ZG63Q               ANOP  ,                                            00408900
&ZMS                 SETC  '"CONTROLVAL='                               00409000
&ZMS                 SETC  '&ZMS.&CONTROLVAL"'                          00409100
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00409200
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00409300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00409400
.ZG63R               ANOP  ,                                            00409500
.*------------------------------------------------------------------    00409600
.***AG.KKCTL04 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00409700
.ZG65                ANOP  ,                                            00409800
&ZXCONTROL           SETC  'INPUT'     SET IN/OUTPUT                    00409900
                     AIF   (K'&XCONTROL GT 0).ZG65E  VALID ARG          00410000
                     AIF   (T'&CONTROL EQ 'O').ZG65D  OMITTED           00410100
&ZASYSLNDX           SETA  0                                            00410200
.ZG65A               ANOP  ,           POSITIONAL MACRO KEY             00410300
&ZASYSLNDX           SETA  &ZASYSLNDX+1                                 00410400
                     AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG65C             00410500
&ZTLC                SETC 'CONTROL'                                     00410600
                     AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG65A    00410700
.ZG65B               ANOP  ,                                            00410800
&ZXCONTROL           SETC  ''          RESET IN/OUTPUT                  00410900
&ZMS                 SETC  'THE "CONTROL" KEY'                          00411000
&ZMS                 SETC  '&ZMS MUST CONTAIN ONE'                      00411100
                     MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'             00411200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00411300
                     AGO   .ZG65E                                       00411400
.ZG65C               ANOP  ,                                            00411500
&ZXCONTROL           SETC  ''          RESET IN/OUTPUT                  00411600
&ZMS                 SETC  '"CONTROL='                                  00411700
&ZMS                 SETC  '&ZMS.&CONTROL"'                             00411800
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00411900
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00412000
&ZMS                 SETC  '&ZMS "EXCLUSIVE",'                          00412100
&ZMS                 SETC  '&ZMS "SHARED",'                             00412200
&ZMS                 SETC  '&ZMS OR "VALUE".'                           00412300
                     MNOTE 8,' &ZMS '                                   00412400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00412500
                     AGO   .ZG65E                                       00412600
.ZG65D               ANOP  ,                                            00412700
&XCONTROL            SETC  'EXCLUSIVE'          SET DEFAULT KEYWORD     00412800
.ZG65E               ANOP  ,                                            00412900
.*------------------------------------------------------------------    00413000
.***AG.KKCTL05 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00413100
                     AIF   (K'&CONTROL(1) GT 0).ZG65F  PARM             00413200
&XCONTROL            SETC  ''          ENSURE NULL KEYWORD              00413300
&ZXCONTROL           SETC  ''          RESET IN/OUTPUT                  00413400
&ZMS                 SETC  'THE'                                        00413500
&ZMS                 SETC  '&ZMS "CONTROL" KEY AND ITS'                 00413600
&ZMS                 SETC  '&ZMS ARGUMENT ARE REQUIRED.'                00413700
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00413800
&ZMS                 SETC  '&ZMS "EXCLUSIVE",'                          00413900
&ZMS                 SETC  '&ZMS "SHARED",'                             00414000
&ZMS                 SETC  '&ZMS OR "VALUE".'                           00414100
                     MNOTE 8,' &ZMS '                                   00414200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00414300
.ZG65F               ANOP  ,                                            00414400
.*------------------------------------------------------------------    00414500
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00414600
&XRESERVEVOLUME      SETC  ''          INITIALIZE XVARIABLE             00414700
.*-------------------------------------------------------------------   00414800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00414900
.ZG68                ANOP  ,                                            00415000
                     AIF   (K'&RESERVEVOLUME(1) LE 0).ZG68A             00415100
&ZTLC                SETC 'NO'                                          00415200
                     AIF   ('&RESERVEVOLUME(1)' NE '&ZTLC').ZG85        00415300
&XRESERVEVOLUME      SETC  'NO'        SET KEYWORD                      00415400
                     AIF   (N'&RESERVEVOLUME LE 1).ZG68A  CK NUM        00415500
&ZMS                 SETC  '"RESERVEVOLUME='                            00415600
&ZMS                 SETC  '&ZMS.&RESERVEVOLUME"'                       00415700
&ZMS                 SETC  '&ZMS "RESERVEVOLUME"'                       00415800
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00415900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00416000
.ZG68A               ANOP  ,                                            00416100
.*------------------------------------------------------------------    00416200
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00416300
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00416400
.ZG68A0              AIF   (K'&UCB@ LE 0).ZG68A1  OK                    00416500
&ZCVAL               SETC '&ZCVAL UCB@'         INCORRECT KEY USED      00416600
.ZG68A1              AIF   (K'&SYNCHRES LE 0).ZG68A2  OK                00416700
&ZCVAL               SETC '&ZCVAL SYNCHRES'     INCORRECT KEY USED      00416800
.ZG68A2              AIF   (K'&ZCVAL LE 0).ZG68A3  OK                   00416900
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00417000
&ZMS                 SETC  '"RESERVEVOLUME'                             00417100
&ZMS                 SETC  '&ZMS.=&RESERVEVOLUME"'                      00417200
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00417300
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00417400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00417500
.ZG68A3              ANOP  ,                                            00417600
.*------------------------------------------------------------------    00417700
.***AG.KKCTL01 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00417800
&XSCOPE              SETC  ''          INITIALIZE XVARIABLE             00417900
.*-------------------------------------------------------------------   00418000
.***AG.KKCTL02 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00418100
.ZG71                ANOP  ,                                            00418200
                     AIF   (K'&SCOPE(1) LE 0).ZG71A                     00418300
&ZTLC                SETC 'STEP'                                        00418400
                     AIF   ('&SCOPE(1)' NE '&ZTLC').ZG72                00418500
&XSCOPE              SETC  'STEP'      SET KEYWORD                      00418600
                     AIF   (N'&SCOPE LE 1).ZG71A  CK NUM                00418700
&ZMS                 SETC  '"SCOPE='                                    00418800
&ZMS                 SETC  '&ZMS.&SCOPE"'                               00418900
&ZMS                 SETC  '&ZMS "SCOPE"'                               00419000
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00419100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00419200
.ZG71A               ANOP  ,                                            00419300
.*------------------------------------------------------------------    00419400
.***AG.KKCTL03 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00419500
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00419600
.ZG71A0              AIF   (K'&SCOPEVAL LE 0).ZG71A1  OK                00419700
&ZCVAL               SETC '&ZCVAL SCOPEVAL'     INCORRECT KEY USED      00419800
.ZG71A1              AIF   (K'&ZCVAL LE 0).ZG71A2  OK                   00419900
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00420000
&ZMS                 SETC  '"SCOPE'                                     00420100
&ZMS                 SETC  '&ZMS.=&SCOPE"'                              00420200
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00420300
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00420400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00420500
.ZG71A2              ANOP  ,                                            00420600
.*-------------------------------------------------------------------   00420700
.***AG.KKCTL02 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00420800
.ZG72                ANOP  ,                                            00420900
&ZTLC                SETC 'SYSTEM'                                      00421000
                     AIF   ('&SCOPE(1)' NE '&ZTLC').ZG73                00421100
&XSCOPE              SETC  'SYSTEM'    SET KEYWORD                      00421200
                     AIF   (N'&SCOPE LE 1).ZG72A  CK NUM                00421300
&ZMS                 SETC  '"SCOPE='                                    00421400
&ZMS                 SETC  '&ZMS.&SCOPE"'                               00421500
&ZMS                 SETC  '&ZMS "SCOPE"'                               00421600
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00421700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00421800
.ZG72A               ANOP  ,                                            00421900
.*------------------------------------------------------------------    00422000
.***AG.KKCTL03 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00422100
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00422200
.ZG72A0              AIF   (K'&SCOPEVAL LE 0).ZG72A1  OK                00422300
&ZCVAL               SETC '&ZCVAL SCOPEVAL'     INCORRECT KEY USED      00422400
.ZG72A1              AIF   (K'&ZCVAL LE 0).ZG72A2  OK                   00422500
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00422600
&ZMS                 SETC  '"SCOPE'                                     00422700
&ZMS                 SETC  '&ZMS.=&SCOPE"'                              00422800
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00422900
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00423000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00423100
.ZG72A2              ANOP  ,                                            00423200
.*-------------------------------------------------------------------   00423300
.***AG.KKCTL02 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00423400
.ZG73                ANOP  ,                                            00423500
&ZTLC                SETC 'SYSTEMS'                                     00423600
                     AIF   ('&SCOPE(1)' NE '&ZTLC').ZG74                00423700
&XSCOPE              SETC  'SYSTEMS'   SET KEYWORD                      00423800
                     AIF   (N'&SCOPE LE 1).ZG73A  CK NUM                00423900
&ZMS                 SETC  '"SCOPE='                                    00424000
&ZMS                 SETC  '&ZMS.&SCOPE"'                               00424100
&ZMS                 SETC  '&ZMS "SCOPE"'                               00424200
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00424300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00424400
.ZG73A               ANOP  ,                                            00424500
.*------------------------------------------------------------------    00424600
.***AG.KKCTL03 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00424700
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00424800
.ZG73A0              AIF   (K'&SCOPEVAL LE 0).ZG73A1  OK                00424900
&ZCVAL               SETC '&ZCVAL SCOPEVAL'     INCORRECT KEY USED      00425000
.ZG73A1              AIF   (K'&ZCVAL LE 0).ZG73A2  OK                   00425100
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00425200
&ZMS                 SETC  '"SCOPE'                                     00425300
&ZMS                 SETC  '&ZMS.=&SCOPE"'                              00425400
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00425500
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00425600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00425700
.ZG73A2              ANOP  ,                                            00425800
.*-------------------------------------------------------------------   00425900
.***AG.KKCTL02 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00426000
.ZG74                ANOP  ,                                            00426100
&ZTLC                SETC 'SYSPLEX'                                     00426200
                     AIF   ('&SCOPE(1)' NE '&ZTLC').ZG75                00426300
&XSCOPE              SETC  'SYSPLEX'   SET KEYWORD                      00426400
                     AIF   (N'&SCOPE LE 1).ZG74A  CK NUM                00426500
&ZMS                 SETC  '"SCOPE='                                    00426600
&ZMS                 SETC  '&ZMS.&SCOPE"'                               00426700
&ZMS                 SETC  '&ZMS "SCOPE"'                               00426800
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00426900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00427000
.ZG74A               ANOP  ,                                            00427100
.*------------------------------------------------------------------    00427200
.***AG.KKCTL03 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00427300
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00427400
.ZG74A0              AIF   (K'&SCOPEVAL LE 0).ZG74A1  OK                00427500
&ZCVAL               SETC '&ZCVAL SCOPEVAL'     INCORRECT KEY USED      00427600
.ZG74A1              AIF   (K'&ZCVAL LE 0).ZG74A2  OK                   00427700
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00427800
&ZMS                 SETC  '"SCOPE'                                     00427900
&ZMS                 SETC  '&ZMS.=&SCOPE"'                              00428000
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00428100
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00428200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00428300
.ZG74A2              ANOP  ,                                            00428400
.*-------------------------------------------------------------------   00428500
.***AG.KKCTL02 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00428600
.ZG75                ANOP  ,                                            00428700
&ZTLC                SETC 'VALUE'                                       00428800
                     AIF   ('&SCOPE(1)' NE '&ZTLC').ZG79                00428900
&XSCOPE              SETC  'VALUE'     SET KEYWORD                      00429000
                     AIF   (N'&SCOPE LE 1).ZG75A  CK NUM                00429100
&ZMS                 SETC  '"SCOPE='                                    00429200
&ZMS                 SETC  '&ZMS.&SCOPE"'                               00429300
&ZMS                 SETC  '&ZMS "SCOPE"'                               00429400
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00429500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00429600
.ZG75A               ANOP  ,                                            00429700
.*----------------------------------------------------------------***   00429800
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00429900
                     AIF   (N'&SCOPEVAL LE 1).ZG77A  CK NUM             00430000
&ZMS                 SETC  '"SCOPEVAL='                                 00430100
&ZMS                 SETC  '&ZMS.&SCOPEVAL"'                            00430200
&ZMS                 SETC  '&ZMS "SCOPEVAL"'                            00430300
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00430400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00430500
.ZG77A               ANOP  ,                                            00430600
.*-------------------------------------------------------------------   00430700
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00430800
&ZXSCOPEVAL          SETC  'INPUT'     SET IN/OUTPUT                    00430900
&XSCOPEVAL           SETC  '&SCOPEVAL(1)'       SET XVARIABLE           00431000
                     AIF   (N'&SCOPEVAL GT 1).ZG77B  MULTI PARMS        00431100
&XSCOPEVAL           SETC  '&SCOPEVAL'          SET XVARIABLE           00431200
.ZG77B               AIF   (K'&SCOPEVAL(1) GT 0).ZG77C                  00431300
&ZXSCOPEVAL          SETC  ''          RESET IN/OUTPUT                  00431400
&ZMS                 SETC  ' '                                          00431500
&ZMS                 SETC  '&ZMS "SCOPEVAL" KEY AND ITS'                00431600
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00431700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00431800
.ZG77C               ANOP  ,                                            00431900
.*-------------------------------------------------------------------   00432000
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00432100
                     AIF   (K'&ZXSCOPEVAL LE 0).ZG77R  NOT I/O          00432200
                     AIF   ('&XSCOPEVAL'(1,1) NE '(').ZG77R             00432300
&ZCGPR               SETC  '&XSCOPEVAL'(2,K'&XSCOPEVAL-2)               00432400
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG77P                 00432500
                     AIF   (K'&ZCGPR GT 2).ZG77Q                        00432600
                     AIF   ('&ZCGPR' EQ '0').ZG77Q                      00432700
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00432800
                     AIF   (T'&ZCGPR NE 'N').ZG77Q  INVALID REG NAME    00432900
.ZG77P               ANOP  ,                                            00433000
                     AIF   (T'&ZCGPR NE 'N').ZG77R  NON NUMERIC         00433100
                     AIF   ('&ZCGPR' LT '2').ZG77Q                      00433200
                     AIF   ('&ZCGPR' LE '12').ZG77R                     00433300
.ZG77Q               ANOP  ,                                            00433400
&ZMS                 SETC  '"SCOPEVAL='                                 00433500
&ZMS                 SETC  '&ZMS.&SCOPEVAL"'                            00433600
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00433700
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00433800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00433900
.ZG77R               ANOP  ,                                            00434000
.*------------------------------------------------------------------    00434100
.***AG.KKCTL04 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00434200
.ZG79                ANOP  ,                                            00434300
&ZXSCOPE             SETC  'INPUT'     SET IN/OUTPUT                    00434400
                     AIF   (K'&XSCOPE GT 0).ZG79E  VALID ARG            00434500
                     AIF   (T'&SCOPE EQ 'O').ZG79D  OMITTED             00434600
&ZASYSLNDX           SETA  0                                            00434700
.ZG79A               ANOP  ,           POSITIONAL MACRO KEY             00434800
&ZASYSLNDX           SETA  &ZASYSLNDX+1                                 00434900
                     AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG79C             00435000
&ZTLC                SETC 'SCOPE'                                       00435100
                     AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG79A    00435200
.ZG79B               ANOP  ,                                            00435300
&ZXSCOPE             SETC  ''          RESET IN/OUTPUT                  00435400
&ZMS                 SETC  'THE "SCOPE" KEY'                            00435500
&ZMS                 SETC  '&ZMS MUST CONTAIN ONE'                      00435600
                     MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'             00435700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00435800
                     AGO   .ZG79E                                       00435900
.ZG79C               ANOP  ,                                            00436000
&ZXSCOPE             SETC  ''          RESET IN/OUTPUT                  00436100
&ZMS                 SETC  '"SCOPE='                                    00436200
&ZMS                 SETC  '&ZMS.&SCOPE"'                               00436300
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00436400
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00436500
&ZMS                 SETC  '&ZMS "STEP",'                               00436600
&ZMS                 SETC  '&ZMS "SYSTEM",'                             00436700
&ZMS                 SETC  '&ZMS "SYSTEMS",'                            00436800
&ZMS                 SETC  '&ZMS "SYSPLEX",'                            00436900
&ZMS                 SETC  '&ZMS OR "VALUE".'                           00437000
                     MNOTE 8,' &ZMS '                                   00437100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00437200
                     AGO   .ZG79E                                       00437300
.ZG79D               ANOP  ,                                            00437400
&XSCOPE              SETC  'STEP'      SET DEFAULT KEYWORD              00437500
.ZG79E               ANOP  ,                                            00437600
.*------------------------------------------------------------------    00437700
.***AG.KKCTL05 VALUE, OPT RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL       00437800
                     AIF   (K'&SCOPE(1) GT 0).ZG79F  PARM               00437900
&XSCOPE              SETC  ''          ENSURE NULL KEYWORD              00438000
&ZXSCOPE             SETC  ''          RESET IN/OUTPUT                  00438100
&ZMS                 SETC  'THE'                                        00438200
&ZMS                 SETC  '&ZMS "SCOPE" KEY AND ITS'                   00438300
&ZMS                 SETC  '&ZMS ARGUMENT ARE REQUIRED.'                00438400
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00438500
&ZMS                 SETC  '&ZMS "STEP",'                               00438600
&ZMS                 SETC  '&ZMS "SYSTEM",'                             00438700
&ZMS                 SETC  '&ZMS "SYSTEMS",'                            00438800
&ZMS                 SETC  '&ZMS "SYSPLEX",'                            00438900
&ZMS                 SETC  '&ZMS OR "VALUE".'                           00439000
                     MNOTE 8,' &ZMS '                                   00439100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00439200
.ZG79F               ANOP  ,                                            00439300
.*----------------------------------------------------------------***   00439400
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00439500
                     AIF   (N'&RNL LE 1).ZG81A  CK NUM                  00439600
&ZMS                 SETC  '"RNL='                                      00439700
&ZMS                 SETC  '&ZMS.&RNL"'                                 00439800
&ZMS                 SETC  '&ZMS "RNL"'                                 00439900
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00440000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00440100
.ZG81A               ANOP  ,                                            00440200
.*-------------------------------------------------------------------   00440300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00440400
&XRNL                SETC  ''          INITIALIZE XVARIABLE             00440500
.ZG82A   AIF   ('&RNL(1)' NE 'YES').ZG83A                               00440600
&XRNL                SETC  'YES'       SET KEYWORD                      00440700
.*-------------------------------------------------------------------   00440800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00440900
.ZG83A   AIF   ('&RNL(1)' NE 'NO').ZG84A                                00441000
&XRNL                SETC  'NO'        SET KEYWORD                      00441100
.*-------------------------------------------------------------------   00441200
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00441300
.ZG84A               AIF   (K'&XRNL GT 0).ZG84C  KEYWORD                00441400
                     AIF   (K'&RNL(1) LE 0).ZG84B                       00441500
&ZMS                 SETC  '"RNL='                                      00441600
&ZMS                 SETC  '&ZMS.&RNL"'                                 00441700
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00441800
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00441900
&ZMS                 SETC  '&ZMS "YES"'                                 00442000
&ZMS                 SETC  '&ZMS OR "NO".'                              00442100
                     MNOTE 8,' &ZMS '                                   00442200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00442300
.ZG84B               ANOP  ,                                            00442400
&XRNL                SETC  'YES'       SET DEFAULT KEYWORD              00442500
.ZG84C               ANOP  ,                                            00442600
&ZXRNL               SETC  'INPUT'     SET IN/OUTPUT                    00442700
.*-------------------------------------------------------------------   00442800
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00442900
.ZG85                ANOP  ,                                            00443000
&ZTLC                SETC 'YES'                                         00443100
                     AIF   ('&RESERVEVOLUME(1)' NE '&ZTLC').ZG95        00443200
&XRESERVEVOLUME      SETC  'YES'       SET KEYWORD                      00443300
                     AIF   (N'&RESERVEVOLUME LE 1).ZG85A  CK NUM        00443400
&ZMS                 SETC  '"RESERVEVOLUME='                            00443500
&ZMS                 SETC  '&ZMS.&RESERVEVOLUME"'                       00443600
&ZMS                 SETC  '&ZMS "RESERVEVOLUME"'                       00443700
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00443800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00443900
.ZG85A               ANOP  ,                                            00444000
.*------------------------------------------------------------------    00444100
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00444200
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00444300
.ZG85A0              AIF   (K'&SCOPE LE 0).ZG85A1  OK                   00444400
&ZCVAL               SETC '&ZCVAL SCOPE'        INCORRECT KEY USED      00444500
.ZG85A1              AIF   (K'&SCOPEVAL LE 0).ZG85A2  OK                00444600
&ZCVAL               SETC '&ZCVAL SCOPEVAL'     INCORRECT KEY USED      00444700
.ZG85A2              AIF   (K'&RNL LE 0).ZG85A3  OK                     00444800
&ZCVAL               SETC '&ZCVAL RNL'          INCORRECT KEY USED      00444900
.ZG85A3              AIF   (K'&ZCVAL LE 0).ZG85A4  OK                   00445000
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00445100
&ZMS                 SETC  '"RESERVEVOLUME'                             00445200
&ZMS                 SETC  '&ZMS.=&RESERVEVOLUME"'                      00445300
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00445400
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00445500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00445600
.ZG85A4              ANOP  ,                                            00445700
.*----------------------------------------------------------------***   00445800
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00445900
                     AIF   (N'&UCB@ LE 1).ZG87A  CK NUM                 00446000
&ZMS                 SETC  '"UCB@='                                     00446100
&ZMS                 SETC  '&ZMS.&UCB@"'                                00446200
&ZMS                 SETC  '&ZMS "UCB@"'                                00446300
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00446400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00446500
.ZG87A               ANOP  ,                                            00446600
.*-------------------------------------------------------------------   00446700
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00446800
&ZXUCB@              SETC  'INPUT'     SET IN/OUTPUT                    00446900
&XUCB@               SETC  '&UCB@(1)'  SET XVARIABLE                    00447000
                     AIF   (N'&UCB@ GT 1).ZG87B  MULTI PARMS            00447100
&XUCB@               SETC  '&UCB@'     SET XVARIABLE                    00447200
.ZG87B               AIF   (K'&UCB@(1) GT 0).ZG87C                      00447300
&ZXUCB@              SETC  ''          RESET IN/OUTPUT                  00447400
&ZMS                 SETC  ' '                                          00447500
&ZMS                 SETC  '&ZMS "UCB@" KEY AND ITS'                    00447600
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00447700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00447800
.ZG87C               ANOP  ,                                            00447900
.*-------------------------------------------------------------------   00448000
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00448100
                     AIF   (K'&ZXUCB@ LE 0).ZG87R  NOT I/O              00448200
                     AIF   ('&XUCB@'(1,1) NE '(').ZG87R                 00448300
&ZCGPR               SETC  '&XUCB@'(2,K'&XUCB@-2)                       00448400
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG87P                 00448500
                     AIF   (K'&ZCGPR GT 2).ZG87Q                        00448600
                     AIF   ('&ZCGPR' EQ '0').ZG87Q                      00448700
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00448800
                     AIF   (T'&ZCGPR NE 'N').ZG87Q  INVALID REG NAME    00448900
.ZG87P               ANOP  ,                                            00449000
                     AIF   (T'&ZCGPR NE 'N').ZG87R  NON NUMERIC         00449100
                     AIF   ('&ZCGPR' LT '2').ZG87Q                      00449200
                     AIF   ('&ZCGPR' LE '12').ZG87R                     00449300
.ZG87Q               ANOP  ,                                            00449400
&ZMS                 SETC  '"UCB@='                                     00449500
&ZMS                 SETC  '&ZMS.&UCB@"'                                00449600
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00449700
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00449800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00449900
.ZG87R               ANOP  ,                                            00450000
.*----------------------------------------------------------------***   00450100
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00450200
                     AIF   (N'&SYNCHRES LE 1).ZG90A  CK NUM             00450300
&ZMS                 SETC  '"SYNCHRES='                                 00450400
&ZMS                 SETC  '&ZMS.&SYNCHRES"'                            00450500
&ZMS                 SETC  '&ZMS "SYNCHRES"'                            00450600
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00450700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00450800
.ZG90A               ANOP  ,                                            00450900
.*-------------------------------------------------------------------   00451000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00451100
&XSYNCHRES           SETC  ''          INITIALIZE XVARIABLE             00451200
.ZG91A   AIF   ('&SYNCHRES(1)' NE 'SYSTEM').ZG92A                       00451300
&XSYNCHRES           SETC  'SYSTEM'    SET KEYWORD                      00451400
.*-------------------------------------------------------------------   00451500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00451600
.ZG92A   AIF   ('&SYNCHRES(1)' NE 'YES').ZG93A                          00451700
&XSYNCHRES           SETC  'YES'       SET KEYWORD                      00451800
.*-------------------------------------------------------------------   00451900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00452000
.ZG93A   AIF   ('&SYNCHRES(1)' NE 'NO').ZG94A                           00452100
&XSYNCHRES           SETC  'NO'        SET KEYWORD                      00452200
.*-------------------------------------------------------------------   00452300
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00452400
.ZG94A               AIF   (K'&XSYNCHRES GT 0).ZG94C  KEYWORD           00452500
                     AIF   (K'&SYNCHRES(1) LE 0).ZG94B                  00452600
&ZMS                 SETC  '"SYNCHRES='                                 00452700
&ZMS                 SETC  '&ZMS.&SYNCHRES"'                            00452800
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00452900
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00453000
&ZMS                 SETC  '&ZMS "SYSTEM",'                             00453100
&ZMS                 SETC  '&ZMS "YES",'                                00453200
&ZMS                 SETC  '&ZMS OR "NO".'                              00453300
                     MNOTE 8,' &ZMS '                                   00453400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00453500
.ZG94B               ANOP  ,                                            00453600
&XSYNCHRES           SETC  'SYSTEM'    SET DEFAULT KEYWORD              00453700
.ZG94C               ANOP  ,                                            00453800
&ZXSYNCHRES          SETC  'INPUT'     SET IN/OUTPUT                    00453900
.*------------------------------------------------------------------    00454000
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00454100
.ZG95                ANOP  ,                                            00454200
&ZXRESERVEVOLUME     SETC  'INPUT'     SET IN/OUTPUT                    00454300
                     AIF   (K'&XRESERVEVOLUME GT 0).ZG95E  VALID ARG    00454400
                     AIF   (T'&RESERVEVOLUME EQ 'O').ZG95D  OMITTED     00454500
&ZASYSLNDX           SETA  0                                            00454600
.ZG95A               ANOP  ,           POSITIONAL MACRO KEY             00454700
&ZASYSLNDX           SETA  &ZASYSLNDX+1                                 00454800
                     AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG95C             00454900
&ZTLC                SETC 'RESERVEVOLUME'                               00455000
                     AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG95A    00455100
.ZG95B               ANOP  ,                                            00455200
&ZXRESERVEVOLUME     SETC  ''          RESET IN/OUTPUT                  00455300
&ZMS                 SETC  'THE "RESERVEVOLUME" KEY'                    00455400
&ZMS                 SETC  '&ZMS MUST CONTAIN ONE'                      00455500
                     MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'             00455600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00455700
                     AGO   .ZG95E                                       00455800
.ZG95C               ANOP  ,                                            00455900
&ZXRESERVEVOLUME     SETC  ''          RESET IN/OUTPUT                  00456000
&ZMS                 SETC  '"RESERVEVOLUME='                            00456100
&ZMS                 SETC  '&ZMS.&RESERVEVOLUME"'                       00456200
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00456300
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00456400
&ZMS                 SETC  '&ZMS "NO"'                                  00456500
&ZMS                 SETC  '&ZMS OR "YES".'                             00456600
                     MNOTE 8,' &ZMS '                                   00456700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00456800
                     AGO   .ZG95E                                       00456900
.ZG95D               ANOP  ,                                            00457000
&XRESERVEVOLUME      SETC  'NO'        SET DEFAULT KEYWORD              00457100
.ZG95E               ANOP  ,                                            00457200
.*----------------------------------------------------------------***   00457300
.***AG.KXVAR05 NAME, OPT RQD OUTPUT, KEYS -XVARIABLE KEY                00457400
                     AIF   (N'&ENQTOKEN LE 1).ZG97A  CK NUM             00457500
&ZMS                 SETC  '"ENQTOKEN='                                 00457600
&ZMS                 SETC  '&ZMS.&ENQTOKEN"'                            00457700
&ZMS                 SETC  '&ZMS "ENQTOKEN"'                            00457800
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00457900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00458000
.ZG97A               ANOP  ,                                            00458100
.*-------------------------------------------------------------------   00458200
.***AG.KXVAR06 NAME, OPT RQD OUTPUT, KEYS -XVARIABLE                    00458300
&ZXENQTOKEN          SETC  'OUTPUT'    SET IN/OUTPUT                    00458400
&XENQTOKEN           SETC  '&ENQTOKEN(1)'       SET XVARIABLE           00458500
                     AIF   (N'&ENQTOKEN GT 1).ZG97B  MULTI PARMS        00458600
&XENQTOKEN           SETC  '&ENQTOKEN'          SET XVARIABLE           00458700
.ZG97B               AIF   (K'&ENQTOKEN(1) GT 0).ZG97C                  00458800
&ZXENQTOKEN          SETC  ''          RESET IN/OUTPUT                  00458900
&ZMS                 SETC  ' '                                          00459000
&ZMS                 SETC  '&ZMS "ENQTOKEN" KEY AND ITS'                00459100
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00459200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00459300
.ZG97C               ANOP  ,                                            00459400
.*-------------------------------------------------------------------   00459500
.***AG.KCK02 NAME, OPT RQD OUTPUT, KEYS -GPR OUT OF RANGE               00459600
                     AIF   (K'&ZXENQTOKEN LE 0).ZG97R  NOT I/O          00459700
                     AIF   ('&XENQTOKEN'(1,1) NE '(').ZG97R             00459800
&ZCGPR               SETC  '&XENQTOKEN'(2,K'&XENQTOKEN-2)               00459900
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG97P                 00460000
                     AIF   (K'&ZCGPR GT 2).ZG97Q                        00460100
                     AIF   ('&ZCGPR' EQ '0').ZG97Q                      00460200
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00460300
                     AIF   (T'&ZCGPR NE 'N').ZG97Q  INVALID REG NAME    00460400
.ZG97P               ANOP  ,                                            00460500
                     AIF   (T'&ZCGPR NE 'N').ZG97R  NON NUMERIC         00460600
                     AIF   ('&ZCGPR' LT '2').ZG97Q                      00460700
                     AIF   ('&ZCGPR' LE '12').ZG97R                     00460800
.ZG97Q               ANOP  ,                                            00460900
&ZMS                 SETC  '"ENQTOKEN='                                 00461000
&ZMS                 SETC  '&ZMS.&ENQTOKEN"'                            00461100
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00461200
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00461300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00461400
.ZG97R               ANOP  ,                                            00461500
.*-------------------------------------------------------------------   00461600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00461700
.ZG99                ANOP  ,                                            00461800
&ZTLC                SETC 'YES'                                         00461900
                     AIF   ('&RESLIST(1)' NE '&ZTLC').ZG151             00462000
&XRESLIST            SETC  'YES'       SET KEYWORD                      00462100
                     AIF   (N'&RESLIST LE 1).ZG99A  CK NUM              00462200
&ZMS                 SETC  '"RESLIST='                                  00462300
&ZMS                 SETC  '&ZMS.&RESLIST"'                             00462400
&ZMS                 SETC  '&ZMS "RESLIST"'                             00462500
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00462600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00462700
.ZG99A               ANOP  ,                                            00462800
.*------------------------------------------------------------------    00462900
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00463000
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00463100
.ZG99A0              AIF   (K'&CONTROLVAL LE 0).ZG99A1  OK              00463200
&ZCVAL               SETC '&ZCVAL CONTROLVAL'   INCORRECT KEY USED      00463300
.ZG99A1              AIF   (K'&RESERVEVOLUME LE 0).ZG99A2  OK           00463400
&ZCVAL               SETC '&ZCVAL RESERVEVOLUME'  INCORRECT KEY USED    00463500
.ZG99A2              AIF   (K'&SCOPEVAL LE 0).ZG99A3  OK                00463600
&ZCVAL               SETC '&ZCVAL SCOPEVAL'     INCORRECT KEY USED      00463700
.ZG99A3              AIF   (K'&ENQTOKEN LE 0).ZG99A4  OK                00463800
&ZCVAL               SETC '&ZCVAL ENQTOKEN'     INCORRECT KEY USED      00463900
.ZG99A4              AIF   (K'&ZCVAL LE 0).ZG99A5  OK                   00464000
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00464100
&ZMS                 SETC  '"RESLIST'                                   00464200
&ZMS                 SETC  '&ZMS.=&RESLIST"'                            00464300
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00464400
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00464500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00464600
.ZG99A5              ANOP  ,                                            00464700
.*----------------------------------------------------------------***   00464800
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00464900
                     AIF   (N'&NUMRES LE 1).ZG101A  CK NUM              00465000
&ZMS                 SETC  '"NUMRES='                                   00465100
&ZMS                 SETC  '&ZMS.&NUMRES"'                              00465200
&ZMS                 SETC  '&ZMS "NUMRES"'                              00465300
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00465400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00465500
.ZG101A              ANOP  ,                                            00465600
.*-------------------------------------------------------------------   00465700
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00465800
&ZXNUMRES            SETC  'INPUT'     SET IN/OUTPUT                    00465900
&XNUMRES             SETC  '&NUMRES(1)'         SET XVARIABLE           00466000
                     AIF   (N'&NUMRES GT 1).ZG101B  MULTI PARMS         00466100
&XNUMRES             SETC  '&NUMRES'   SET XVARIABLE                    00466200
.ZG101B              AIF   (K'&NUMRES(1) GT 0).ZG101C                   00466300
&ZXNUMRES            SETC  ''          RESET IN/OUTPUT                  00466400
&ZMS                 SETC  ' '                                          00466500
&ZMS                 SETC  '&ZMS "NUMRES" KEY AND ITS'                  00466600
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00466700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00466800
.ZG101C              ANOP  ,                                            00466900
.*-------------------------------------------------------------------   00467000
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00467100
                     AIF   (K'&ZXNUMRES LE 0).ZG101R  NOT I/O           00467200
                     AIF   ('&XNUMRES'(1,1) NE '(').ZG101R              00467300
&ZCGPR               SETC  '&XNUMRES'(2,K'&XNUMRES-2)                   00467400
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG101P                00467500
                     AIF   (K'&ZCGPR GT 2).ZG101Q                       00467600
                     AIF   ('&ZCGPR' EQ '0').ZG101Q                     00467700
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00467800
                     AIF   (T'&ZCGPR NE 'N').ZG101Q  INVALID REG NAME   00467900
.ZG101P              ANOP  ,                                            00468000
                     AIF   (T'&ZCGPR NE 'N').ZG101R  NON NUMERIC        00468100
                     AIF   ('&ZCGPR' LT '2').ZG101Q                     00468200
                     AIF   ('&ZCGPR' LE '12').ZG101R                    00468300
.ZG101Q              ANOP  ,                                            00468400
&ZMS                 SETC  '"NUMRES='                                   00468500
&ZMS                 SETC  '&ZMS.&NUMRES"'                              00468600
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00468700
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00468800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00468900
.ZG101R              ANOP  ,                                            00469000
.*----------------------------------------------------------------***   00469100
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00469200
                     AIF   (N'&RESTABLE LE 1).ZG104A  CK NUM            00469300
&ZMS                 SETC  '"RESTABLE='                                 00469400
&ZMS                 SETC  '&ZMS.&RESTABLE"'                            00469500
&ZMS                 SETC  '&ZMS "RESTABLE"'                            00469600
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00469700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00469800
.ZG104A              ANOP  ,                                            00469900
.*-------------------------------------------------------------------   00470000
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00470100
&ZXRESTABLE          SETC  'INPUT'     SET IN/OUTPUT                    00470200
&XRESTABLE           SETC  '&RESTABLE(1)'       SET XVARIABLE           00470300
                     AIF   (N'&RESTABLE GT 1).ZG104B  MULTI PARMS       00470400
&XRESTABLE           SETC  '&RESTABLE'          SET XVARIABLE           00470500
.ZG104B              AIF   (K'&RESTABLE(1) GT 0).ZG104C                 00470600
&ZXRESTABLE          SETC  ''          RESET IN/OUTPUT                  00470700
&ZMS                 SETC  ' '                                          00470800
&ZMS                 SETC  '&ZMS "RESTABLE" KEY AND ITS'                00470900
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00471000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00471100
.ZG104C              ANOP  ,                                            00471200
.*-------------------------------------------------------------------   00471300
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00471400
                     AIF   (K'&ZXRESTABLE LE 0).ZG104R  NOT I/O         00471500
                     AIF   ('&XRESTABLE'(1,1) NE '(').ZG104R            00471600
&ZCGPR               SETC  '&XRESTABLE'(2,K'&XRESTABLE-2)               00471700
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG104P                00471800
                     AIF   (K'&ZCGPR GT 2).ZG104Q                       00471900
                     AIF   ('&ZCGPR' EQ '0').ZG104Q                     00472000
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00472100
                     AIF   (T'&ZCGPR NE 'N').ZG104Q  INVALID REG NAME   00472200
.ZG104P              ANOP  ,                                            00472300
                     AIF   (T'&ZCGPR NE 'N').ZG104R  NON NUMERIC        00472400
                     AIF   ('&ZCGPR' LT '2').ZG104Q                     00472500
                     AIF   ('&ZCGPR' LE '12').ZG104R                    00472600
.ZG104Q              ANOP  ,                                            00472700
&ZMS                 SETC  '"RESTABLE='                                 00472800
&ZMS                 SETC  '&ZMS.&RESTABLE"'                            00472900
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00473000
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00473100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00473200
.ZG104R              ANOP  ,                                            00473300
.*----------------------------------------------------------------***   00473400
.***AG.KXVAR05 NAME, OPT RQD OUTPUT, KEYS -XVARIABLE KEY                00473500
                     AIF   (N'&ENQTOKENTBL LE 1).ZG107A  CK NUM         00473600
&ZMS                 SETC  '"ENQTOKENTBL='                              00473700
&ZMS                 SETC  '&ZMS.&ENQTOKENTBL"'                         00473800
&ZMS                 SETC  '&ZMS "ENQTOKENTBL"'                         00473900
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00474000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00474100
.ZG107A              ANOP  ,                                            00474200
.*-------------------------------------------------------------------   00474300
.***AG.KXVAR06 NAME, OPT RQD OUTPUT, KEYS -XVARIABLE                    00474400
&ZXENQTOKENTBL       SETC  'OUTPUT'    SET IN/OUTPUT                    00474500
&XENQTOKENTBL        SETC  '&ENQTOKENTBL(1)'    SET XVARIABLE           00474600
                     AIF   (N'&ENQTOKENTBL GT 1).ZG107B  MULTI PARMS    00474700
&XENQTOKENTBL        SETC  '&ENQTOKENTBL'       SET XVARIABLE           00474800
.ZG107B              AIF   (K'&ENQTOKENTBL(1) GT 0).ZG107C              00474900
&ZXENQTOKENTBL       SETC  ''          RESET IN/OUTPUT                  00475000
&ZMS                 SETC  ' '                                          00475100
&ZMS                 SETC  '&ZMS "ENQTOKENTBL" KEY AND ITS'             00475200
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00475300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00475400
.ZG107C              ANOP  ,                                            00475500
.*-------------------------------------------------------------------   00475600
.***AG.KCK02 NAME, OPT RQD OUTPUT, KEYS -GPR OUT OF RANGE               00475700
                     AIF   (K'&ZXENQTOKENTBL LE 0).ZG107R  NOT I/O      00475800
                     AIF   ('&XENQTOKENTBL'(1,1) NE '(').ZG107R         00475900
&ZCGPR               SETC  '&XENQTOKENTBL'(2,K'&XENQTOKENTBL-2)         00476000
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG107P                00476100
                     AIF   (K'&ZCGPR GT 2).ZG107Q                       00476200
                     AIF   ('&ZCGPR' EQ '0').ZG107Q                     00476300
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00476400
                     AIF   (T'&ZCGPR NE 'N').ZG107Q  INVALID REG NAME   00476500
.ZG107P              ANOP  ,                                            00476600
                     AIF   (T'&ZCGPR NE 'N').ZG107R  NON NUMERIC        00476700
                     AIF   ('&ZCGPR' LT '2').ZG107Q                     00476800
                     AIF   ('&ZCGPR' LE '12').ZG107R                    00476900
.ZG107Q              ANOP  ,                                            00477000
&ZMS                 SETC  '"ENQTOKENTBL='                              00477100
&ZMS                 SETC  '&ZMS.&ENQTOKENTBL"'                         00477200
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00477300
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00477400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00477500
.ZG107R              ANOP  ,                                            00477600
.*----------------------------------------------------------------***   00477700
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00477800
                     AIF   (N'&RETURNTABLE LE 1).ZG110A  CK NUM         00477900
&ZMS                 SETC  '"RETURNTABLE='                              00478000
&ZMS                 SETC  '&ZMS.&RETURNTABLE"'                         00478100
&ZMS                 SETC  '&ZMS "RETURNTABLE"'                         00478200
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00478300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00478400
.ZG110A              ANOP  ,                                            00478500
.*-------------------------------------------------------------------   00478600
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00478700
                     AIF   (K'&RETURNTABLE(1) LE 0).ZG110C  NO PARM     00478800
&ZXRETURNTABLE       SETC  'OUTPUT'    SET OUTPUT                       00478900
&XRETURNTABLE        SETC  '&RETURNTABLE(1)'    SET XVARIABLE           00479000
                     AIF   (N'&RETURNTABLE GT 1).ZG110C                 00479100
&XRETURNTABLE        SETC  '&RETURNTABLE'       SET XVARIABLE           00479200
.ZG110C              ANOP  ,                                            00479300
.*-------------------------------------------------------------------   00479400
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00479500
                     AIF   (K'&ZXRETURNTABLE LE 0).ZG110R  NOT I/O      00479600
                     AIF   ('&XRETURNTABLE'(1,1) NE '(').ZG110R         00479700
&ZCGPR               SETC  '&XRETURNTABLE'(2,K'&XRETURNTABLE-2)         00479800
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG110P                00479900
                     AIF   (K'&ZCGPR GT 2).ZG110Q                       00480000
                     AIF   ('&ZCGPR' EQ '0').ZG110Q                     00480100
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00480200
                     AIF   (T'&ZCGPR NE 'N').ZG110Q  INVALID REG NAME   00480300
.ZG110P              ANOP  ,                                            00480400
                     AIF   (T'&ZCGPR NE 'N').ZG110R  NON NUMERIC        00480500
                     AIF   ('&ZCGPR' LT '2').ZG110Q                     00480600
                     AIF   ('&ZCGPR' LE '12').ZG110R                    00480700
.ZG110Q              ANOP  ,                                            00480800
&ZMS                 SETC  '"RETURNTABLE='                              00480900
&ZMS                 SETC  '&ZMS.&RETURNTABLE"'                         00481000
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00481100
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00481200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00481300
.ZG110R              ANOP  ,                                            00481400
.*----------------------------------------------------------------***   00481500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00481600
                     AIF   (N'&QNAME LE 1).ZG113A  CK NUM               00481700
&ZMS                 SETC  '"QNAME='                                    00481800
&ZMS                 SETC  '&ZMS.&QNAME"'                               00481900
&ZMS                 SETC  '&ZMS "QNAME"'                               00482000
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00482100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00482200
.ZG113A              ANOP  ,                                            00482300
.*-------------------------------------------------------------------   00482400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00482500
&ZXQNAME             SETC  'INPUT'     SET IN/OUTPUT                    00482600
&XQNAME              SETC  'DO_NOT_OVERRIDE'                            00482700
                     AIF   (K'&QNAME(1) LE 0).ZG113B  PARM              00482800
&XQNAME              SETC  '&QNAME(1)'          SET XVARIABLE           00482900
                     AIF   (N'&QNAME GT 1).ZG113B  MULTI                00483000
&XQNAME              SETC  '&QNAME'    SET XVARIABLE                    00483100
.ZG113B              ANOP  ,                                            00483200
.*-------------------------------------------------------------------   00483300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00483400
                     AIF   (K'&ZXQNAME LE 0).ZG113R  NOT I/O            00483500
         AIF   ('&XQNAME' EQ 'DO_NOT_OVERRIDE').ZG113R                  00483600
                     AIF   ('&XQNAME'(1,1) NE '(').ZG113R               00483700
&ZCGPR               SETC  '&XQNAME'(2,K'&XQNAME-2)                     00483800
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG113P                00483900
                     AIF   (K'&ZCGPR GT 2).ZG113Q                       00484000
                     AIF   ('&ZCGPR' EQ '0').ZG113Q                     00484100
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00484200
                     AIF   (T'&ZCGPR NE 'N').ZG113Q  INVALID REG NAME   00484300
.ZG113P              ANOP  ,                                            00484400
                     AIF   (T'&ZCGPR NE 'N').ZG113R  NON NUMERIC        00484500
                     AIF   ('&ZCGPR' LT '2').ZG113Q                     00484600
                     AIF   ('&ZCGPR' LE '12').ZG113R                    00484700
.ZG113Q              ANOP  ,                                            00484800
&ZMS                 SETC  '"QNAME='                                    00484900
&ZMS                 SETC  '&ZMS.&QNAME"'                               00485000
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00485100
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00485200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00485300
.ZG113R              ANOP  ,                                            00485400
.*----------------------------------------------------------------***   00485500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00485600
                     AIF   (N'&RNAME LE 1).ZG116A  CK NUM               00485700
&ZMS                 SETC  '"RNAME='                                    00485800
&ZMS                 SETC  '&ZMS.&RNAME"'                               00485900
&ZMS                 SETC  '&ZMS "RNAME"'                               00486000
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00486100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00486200
.ZG116A              ANOP  ,                                            00486300
.*-------------------------------------------------------------------   00486400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00486500
&ZXRNAME             SETC  'INPUT'     SET IN/OUTPUT                    00486600
&XRNAME              SETC  'DO_NOT_OVERRIDE'                            00486700
                     AIF   (K'&RNAME(1) LE 0).ZG116B  PARM              00486800
&XRNAME              SETC  '&RNAME(1)'          SET XVARIABLE           00486900
                     AIF   (N'&RNAME GT 1).ZG116B  MULTI                00487000
&XRNAME              SETC  '&RNAME'    SET XVARIABLE                    00487100
.ZG116B              ANOP  ,                                            00487200
.*-------------------------------------------------------------------   00487300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00487400
                     AIF   (K'&ZXRNAME LE 0).ZG116R  NOT I/O            00487500
         AIF   ('&XRNAME' EQ 'DO_NOT_OVERRIDE').ZG116R                  00487600
                     AIF   ('&XRNAME'(1,1) NE '(').ZG116R               00487700
&ZCGPR               SETC  '&XRNAME'(2,K'&XRNAME-2)                     00487800
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG116P                00487900
                     AIF   (K'&ZCGPR GT 2).ZG116Q                       00488000
                     AIF   ('&ZCGPR' EQ '0').ZG116Q                     00488100
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00488200
                     AIF   (T'&ZCGPR NE 'N').ZG116Q  INVALID REG NAME   00488300
.ZG116P              ANOP  ,                                            00488400
                     AIF   (T'&ZCGPR NE 'N').ZG116R  NON NUMERIC        00488500
                     AIF   ('&ZCGPR' LT '2').ZG116Q                     00488600
                     AIF   ('&ZCGPR' LE '12').ZG116R                    00488700
.ZG116Q              ANOP  ,                                            00488800
&ZMS                 SETC  '"RNAME='                                    00488900
&ZMS                 SETC  '&ZMS.&RNAME"'                               00489000
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00489100
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00489200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00489300
.ZG116R              ANOP  ,                                            00489400
.*----------------------------------------------------------------***   00489500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00489600
                     AIF   (N'&RNAMELEN LE 1).ZG119A  CK NUM            00489700
&ZMS                 SETC  '"RNAMELEN='                                 00489800
&ZMS                 SETC  '&ZMS.&RNAMELEN"'                            00489900
&ZMS                 SETC  '&ZMS "RNAMELEN"'                            00490000
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00490100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00490200
.ZG119A              ANOP  ,                                            00490300
.*-------------------------------------------------------------------   00490400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00490500
&ZXRNAMELEN          SETC  'INPUT'     SET IN/OUTPUT                    00490600
&XRNAMELEN           SETC  'DO_NOT_OVERRIDE'                            00490700
                     AIF   (K'&RNAMELEN(1) LE 0).ZG119B  PARM           00490800
&XRNAMELEN           SETC  '&RNAMELEN(1)'       SET XVARIABLE           00490900
                     AIF   (N'&RNAMELEN GT 1).ZG119B  MULTI             00491000
&XRNAMELEN           SETC  '&RNAMELEN'          SET XVARIABLE           00491100
.ZG119B              ANOP  ,                                            00491200
.*-------------------------------------------------------------------   00491300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00491400
                     AIF   (K'&ZXRNAMELEN LE 0).ZG119R  NOT I/O         00491500
         AIF   ('&XRNAMELEN' EQ 'DO_NOT_OVERRIDE').ZG119R               00491600
                     AIF   ('&XRNAMELEN'(1,1) NE '(').ZG119R            00491700
&ZCGPR               SETC  '&XRNAMELEN'(2,K'&XRNAMELEN-2)               00491800
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG119P                00491900
                     AIF   (K'&ZCGPR GT 2).ZG119Q                       00492000
                     AIF   ('&ZCGPR' EQ '0').ZG119Q                     00492100
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00492200
                     AIF   (T'&ZCGPR NE 'N').ZG119Q  INVALID REG NAME   00492300
.ZG119P              ANOP  ,                                            00492400
                     AIF   (T'&ZCGPR NE 'N').ZG119R  NON NUMERIC        00492500
                     AIF   ('&ZCGPR' LT '2').ZG119Q                     00492600
                     AIF   ('&ZCGPR' LE '12').ZG119R                    00492700
.ZG119Q              ANOP  ,                                            00492800
&ZMS                 SETC  '"RNAMELEN='                                 00492900
&ZMS                 SETC  '&ZMS.&RNAMELEN"'                            00493000
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00493100
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00493200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00493300
.ZG119R              ANOP  ,                                            00493400
.*----------------------------------------------------------------***   00493500
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00493600
                     AIF   (N'&CONTROL LE 1).ZG122A  CK NUM             00493700
&ZMS                 SETC  '"CONTROL='                                  00493800
&ZMS                 SETC  '&ZMS.&CONTROL"'                             00493900
&ZMS                 SETC  '&ZMS "CONTROL"'                             00494000
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00494100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00494200
.ZG122A              ANOP  ,                                            00494300
.*-------------------------------------------------------------------   00494400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00494500
&XCONTROL            SETC  ''          INITIALIZE XVARIABLE             00494600
.ZG123A   AIF   ('&CONTROL(1)' NE 'DO_NOT_OVERRIDE').ZG124A             00494700
&XCONTROL            SETC  'DO_NOT_OVERRIDE'    SET KEYWORD             00494800
.*-------------------------------------------------------------------   00494900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00495000
.ZG124A   AIF   ('&CONTROL(1)' NE 'EXCLUSIVE').ZG125A                   00495100
&XCONTROL            SETC  'EXCLUSIVE'          SET KEYWORD             00495200
.*-------------------------------------------------------------------   00495300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00495400
.ZG125A   AIF   ('&CONTROL(1)' NE 'SHARED').ZG126A                      00495500
&XCONTROL            SETC  'SHARED'    SET KEYWORD                      00495600
.*-------------------------------------------------------------------   00495700
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00495800
.ZG126A              AIF   (K'&XCONTROL GT 0).ZG126C  KEYWORD           00495900
                     AIF   (K'&CONTROL(1) LE 0).ZG126B                  00496000
&ZMS                 SETC  '"CONTROL='                                  00496100
&ZMS                 SETC  '&ZMS.&CONTROL"'                             00496200
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00496300
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00496400
&ZMS                 SETC  '&ZMS "DO_NOT_OVERRIDE",'                    00496500
&ZMS                 SETC  '&ZMS "EXCLUSIVE",'                          00496600
&ZMS                 SETC  '&ZMS OR "SHARED".'                          00496700
                     MNOTE 8,' &ZMS '                                   00496800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00496900
.ZG126B              ANOP  ,                                            00497000
&XCONTROL            SETC  'DO_NOT_OVERRIDE'    SET DEFAULT KEYWORD     00497100
.ZG126C              ANOP  ,                                            00497200
&ZXCONTROL           SETC  'INPUT'     SET IN/OUTPUT                    00497300
.*------------------------------------------------------------------    00497400
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00497500
&XSCOPE              SETC  ''          INITIALIZE XVARIABLE             00497600
.*-------------------------------------------------------------------   00497700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00497800
.ZG129               ANOP  ,                                            00497900
                     AIF   (K'&SCOPE(1) LE 0).ZG129A                    00498000
&ZTLC                SETC 'DO_NOT_OVERRIDE'                             00498100
                     AIF   ('&SCOPE(1)' NE '&ZTLC').ZG130               00498200
&XSCOPE              SETC  'DO_NOT_OVERRIDE'    SET KEYWORD             00498300
                     AIF   (N'&SCOPE LE 1).ZG129A  CK NUM               00498400
&ZMS                 SETC  '"SCOPE='                                    00498500
&ZMS                 SETC  '&ZMS.&SCOPE"'                               00498600
&ZMS                 SETC  '&ZMS "SCOPE"'                               00498700
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00498800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00498900
.ZG129A              ANOP  ,                                            00499000
.*-------------------------------------------------------------------   00499100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00499200
.ZG130               ANOP  ,                                            00499300
&ZTLC                SETC 'STEP'                                        00499400
                     AIF   ('&SCOPE(1)' NE '&ZTLC').ZG131               00499500
&XSCOPE              SETC  'STEP'      SET KEYWORD                      00499600
                     AIF   (N'&SCOPE LE 1).ZG130A  CK NUM               00499700
&ZMS                 SETC  '"SCOPE='                                    00499800
&ZMS                 SETC  '&ZMS.&SCOPE"'                               00499900
&ZMS                 SETC  '&ZMS "SCOPE"'                               00500000
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00500100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00500200
.ZG130A              ANOP  ,                                            00500300
.*-------------------------------------------------------------------   00500400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00500500
.ZG131               ANOP  ,                                            00500600
&ZTLC                SETC 'SYSTEM'                                      00500700
                     AIF   ('&SCOPE(1)' NE '&ZTLC').ZG132               00500800
&XSCOPE              SETC  'SYSTEM'    SET KEYWORD                      00500900
                     AIF   (N'&SCOPE LE 1).ZG131A  CK NUM               00501000
&ZMS                 SETC  '"SCOPE='                                    00501100
&ZMS                 SETC  '&ZMS.&SCOPE"'                               00501200
&ZMS                 SETC  '&ZMS "SCOPE"'                               00501300
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00501400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00501500
.ZG131A              ANOP  ,                                            00501600
.*-------------------------------------------------------------------   00501700
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00501800
.ZG132               ANOP  ,                                            00501900
&ZTLC                SETC 'SYSTEMS'                                     00502000
                     AIF   ('&SCOPE(1)' NE '&ZTLC').ZG133               00502100
&XSCOPE              SETC  'SYSTEMS'   SET KEYWORD                      00502200
                     AIF   (N'&SCOPE LE 1).ZG132A  CK NUM               00502300
&ZMS                 SETC  '"SCOPE='                                    00502400
&ZMS                 SETC  '&ZMS.&SCOPE"'                               00502500
&ZMS                 SETC  '&ZMS "SCOPE"'                               00502600
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00502700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00502800
.ZG132A              ANOP  ,                                            00502900
.*-------------------------------------------------------------------   00503000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00503100
.ZG133               ANOP  ,                                            00503200
&ZTLC                SETC 'SYSPLEX'                                     00503300
                     AIF   ('&SCOPE(1)' NE '&ZTLC').ZG134               00503400
&XSCOPE              SETC  'SYSPLEX'   SET KEYWORD                      00503500
                     AIF   (N'&SCOPE LE 1).ZG133A  CK NUM               00503600
&ZMS                 SETC  '"SCOPE='                                    00503700
&ZMS                 SETC  '&ZMS.&SCOPE"'                               00503800
&ZMS                 SETC  '&ZMS "SCOPE"'                               00503900
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00504000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00504100
.ZG133A              ANOP  ,                                            00504200
.*------------------------------------------------------------------    00504300
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00504400
.ZG134               ANOP  ,                                            00504500
&ZXSCOPE             SETC  'INPUT'     SET IN/OUTPUT                    00504600
                     AIF   (K'&XSCOPE GT 0).ZG134E  VALID ARG           00504700
                     AIF   (T'&SCOPE EQ 'O').ZG134D  OMITTED            00504800
&ZASYSLNDX           SETA  0                                            00504900
.ZG134A              ANOP  ,           POSITIONAL MACRO KEY             00505000
&ZASYSLNDX           SETA  &ZASYSLNDX+1                                 00505100
                     AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG134C            00505200
&ZTLC                SETC 'SCOPE'                                       00505300
                     AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG134A   00505400
.ZG134B              ANOP  ,                                            00505500
&ZXSCOPE             SETC  ''          RESET IN/OUTPUT                  00505600
&ZMS                 SETC  'THE "SCOPE" KEY'                            00505700
&ZMS                 SETC  '&ZMS MUST CONTAIN ONE'                      00505800
                     MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'             00505900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00506000
                     AGO   .ZG134E                                      00506100
.ZG134C              ANOP  ,                                            00506200
&ZXSCOPE             SETC  ''          RESET IN/OUTPUT                  00506300
&ZMS                 SETC  '"SCOPE='                                    00506400
&ZMS                 SETC  '&ZMS.&SCOPE"'                               00506500
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00506600
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00506700
&ZMS                 SETC  '&ZMS "DO_NOT_OVERRIDE",'                    00506800
&ZMS                 SETC  '&ZMS "STEP",'                               00506900
&ZMS                 SETC  '&ZMS "SYSTEM",'                             00507000
&ZMS                 SETC  '&ZMS "SYSTEMS",'                            00507100
&ZMS                 SETC  '&ZMS OR "SYSPLEX".'                         00507200
                     MNOTE 8,' &ZMS '                                   00507300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00507400
                     AGO   .ZG134E                                      00507500
.ZG134D              ANOP  ,                                            00507600
&XSCOPE              SETC  'DO_NOT_OVERRIDE'    SET DEFAULT KEYWORD     00507700
.ZG134E              ANOP  ,                                            00507800
.*----------------------------------------------------------------***   00507900
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00508000
                     AIF   (N'&RNL LE 1).ZG136A  CK NUM                 00508100
&ZMS                 SETC  '"RNL='                                      00508200
&ZMS                 SETC  '&ZMS.&RNL"'                                 00508300
&ZMS                 SETC  '&ZMS "RNL"'                                 00508400
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00508500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00508600
.ZG136A              ANOP  ,                                            00508700
.*-------------------------------------------------------------------   00508800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00508900
&XRNL                SETC  ''          INITIALIZE XVARIABLE             00509000
.ZG137A   AIF   ('&RNL(1)' NE 'DO_NOT_OVERRIDE').ZG138A                 00509100
&XRNL                SETC  'DO_NOT_OVERRIDE'    SET KEYWORD             00509200
.*-------------------------------------------------------------------   00509300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00509400
.ZG138A   AIF   ('&RNL(1)' NE 'YES').ZG139A                             00509500
&XRNL                SETC  'YES'       SET KEYWORD                      00509600
.*-------------------------------------------------------------------   00509700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00509800
.ZG139A   AIF   ('&RNL(1)' NE 'NO').ZG140A                              00509900
&XRNL                SETC  'NO'        SET KEYWORD                      00510000
.*-------------------------------------------------------------------   00510100
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00510200
.ZG140A              AIF   (K'&XRNL GT 0).ZG140C  KEYWORD               00510300
                     AIF   (K'&RNL(1) LE 0).ZG140B                      00510400
&ZMS                 SETC  '"RNL='                                      00510500
&ZMS                 SETC  '&ZMS.&RNL"'                                 00510600
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00510700
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00510800
&ZMS                 SETC  '&ZMS "DO_NOT_OVERRIDE",'                    00510900
&ZMS                 SETC  '&ZMS "YES",'                                00511000
&ZMS                 SETC  '&ZMS OR "NO".'                              00511100
                     MNOTE 8,' &ZMS '                                   00511200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00511300
.ZG140B              ANOP  ,                                            00511400
&XRNL                SETC  'DO_NOT_OVERRIDE'    SET DEFAULT KEYWORD     00511500
.ZG140C              ANOP  ,                                            00511600
&ZXRNL               SETC  'INPUT'     SET IN/OUTPUT                    00511700
.*----------------------------------------------------------------***   00511800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00511900
                     AIF   (N'&UCB@ LE 1).ZG142A  CK NUM                00512000
&ZMS                 SETC  '"UCB@='                                     00512100
&ZMS                 SETC  '&ZMS.&UCB@"'                                00512200
&ZMS                 SETC  '&ZMS "UCB@"'                                00512300
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00512400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00512500
.ZG142A              ANOP  ,                                            00512600
.*-------------------------------------------------------------------   00512700
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00512800
&ZXUCB@              SETC  'INPUT'     SET IN/OUTPUT                    00512900
&XUCB@               SETC  'DO_NOT_OVERRIDE'                            00513000
                     AIF   (K'&UCB@(1) LE 0).ZG142B  PARM               00513100
&XUCB@               SETC  '&UCB@(1)'  SET XVARIABLE                    00513200
                     AIF   (N'&UCB@ GT 1).ZG142B  MULTI                 00513300
&XUCB@               SETC  '&UCB@'     SET XVARIABLE                    00513400
.ZG142B              ANOP  ,                                            00513500
.*-------------------------------------------------------------------   00513600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00513700
                     AIF   (K'&ZXUCB@ LE 0).ZG142R  NOT I/O             00513800
         AIF   ('&XUCB@' EQ 'DO_NOT_OVERRIDE').ZG142R                   00513900
                     AIF   ('&XUCB@'(1,1) NE '(').ZG142R                00514000
&ZCGPR               SETC  '&XUCB@'(2,K'&XUCB@-2)                       00514100
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG142P                00514200
                     AIF   (K'&ZCGPR GT 2).ZG142Q                       00514300
                     AIF   ('&ZCGPR' EQ '0').ZG142Q                     00514400
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00514500
                     AIF   (T'&ZCGPR NE 'N').ZG142Q  INVALID REG NAME   00514600
.ZG142P              ANOP  ,                                            00514700
                     AIF   (T'&ZCGPR NE 'N').ZG142R  NON NUMERIC        00514800
                     AIF   ('&ZCGPR' LT '2').ZG142Q                     00514900
                     AIF   ('&ZCGPR' LE '12').ZG142R                    00515000
.ZG142Q              ANOP  ,                                            00515100
&ZMS                 SETC  '"UCB@='                                     00515200
&ZMS                 SETC  '&ZMS.&UCB@"'                                00515300
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00515400
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00515500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00515600
.ZG142R              ANOP  ,                                            00515700
.*----------------------------------------------------------------***   00515800
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00515900
                     AIF   (N'&SYNCHRES LE 1).ZG145A  CK NUM            00516000
&ZMS                 SETC  '"SYNCHRES='                                 00516100
&ZMS                 SETC  '&ZMS.&SYNCHRES"'                            00516200
&ZMS                 SETC  '&ZMS "SYNCHRES"'                            00516300
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00516400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00516500
.ZG145A              ANOP  ,                                            00516600
.*-------------------------------------------------------------------   00516700
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00516800
&XSYNCHRES           SETC  ''          INITIALIZE XVARIABLE             00516900
.ZG146A   AIF   ('&SYNCHRES(1)' NE 'DO_NOT_OVERRIDE').ZG147A            00517000
&XSYNCHRES           SETC  'DO_NOT_OVERRIDE'    SET KEYWORD             00517100
.*-------------------------------------------------------------------   00517200
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00517300
.ZG147A   AIF   ('&SYNCHRES(1)' NE 'SYSTEM').ZG148A                     00517400
&XSYNCHRES           SETC  'SYSTEM'    SET KEYWORD                      00517500
.*-------------------------------------------------------------------   00517600
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00517700
.ZG148A   AIF   ('&SYNCHRES(1)' NE 'YES').ZG149A                        00517800
&XSYNCHRES           SETC  'YES'       SET KEYWORD                      00517900
.*-------------------------------------------------------------------   00518000
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00518100
.ZG149A   AIF   ('&SYNCHRES(1)' NE 'NO').ZG150A                         00518200
&XSYNCHRES           SETC  'NO'        SET KEYWORD                      00518300
.*-------------------------------------------------------------------   00518400
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00518500
.ZG150A              AIF   (K'&XSYNCHRES GT 0).ZG150C  KEYWORD          00518600
                     AIF   (K'&SYNCHRES(1) LE 0).ZG150B                 00518700
&ZMS                 SETC  '"SYNCHRES='                                 00518800
&ZMS                 SETC  '&ZMS.&SYNCHRES"'                            00518900
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00519000
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00519100
&ZMS                 SETC  '&ZMS "DO_NOT_OVERRIDE",'                    00519200
&ZMS                 SETC  '&ZMS "SYSTEM",'                             00519300
&ZMS                 SETC  '&ZMS "YES",'                                00519400
&ZMS                 SETC  '&ZMS OR "NO".'                              00519500
                     MNOTE 8,' &ZMS '                                   00519600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00519700
.ZG150B              ANOP  ,                                            00519800
&XSYNCHRES           SETC  'DO_NOT_OVERRIDE'    SET DEFAULT KEYWORD     00519900
.ZG150C              ANOP  ,                                            00520000
&ZXSYNCHRES          SETC  'INPUT'     SET IN/OUTPUT                    00520100
.*------------------------------------------------------------------    00520200
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00520300
.ZG151               ANOP  ,                                            00520400
&ZXRESLIST           SETC  'INPUT'     SET IN/OUTPUT                    00520500
                     AIF   (K'&XRESLIST GT 0).ZG151E  VALID ARG         00520600
                     AIF   (T'&RESLIST EQ 'O').ZG151D  OMITTED          00520700
&ZASYSLNDX           SETA  0                                            00520800
.ZG151A              ANOP  ,           POSITIONAL MACRO KEY             00520900
&ZASYSLNDX           SETA  &ZASYSLNDX+1                                 00521000
                     AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG151C            00521100
&ZTLC                SETC 'RESLIST'                                     00521200
                     AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG151A   00521300
.ZG151B              ANOP  ,                                            00521400
&ZXRESLIST           SETC  ''          RESET IN/OUTPUT                  00521500
&ZMS                 SETC  'THE "RESLIST" KEY'                          00521600
&ZMS                 SETC  '&ZMS MUST CONTAIN ONE'                      00521700
                     MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'             00521800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00521900
                     AGO   .ZG151E                                      00522000
.ZG151C              ANOP  ,                                            00522100
&ZXRESLIST           SETC  ''          RESET IN/OUTPUT                  00522200
&ZMS                 SETC  '"RESLIST='                                  00522300
&ZMS                 SETC  '&ZMS.&RESLIST"'                             00522400
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00522500
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00522600
&ZMS                 SETC  '&ZMS "NO"'                                  00522700
&ZMS                 SETC  '&ZMS OR "YES".'                             00522800
                     MNOTE 8,' &ZMS '                                   00522900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00523000
                     AGO   .ZG151E                                      00523100
.ZG151D              ANOP  ,                                            00523200
&XRESLIST            SETC  'NO'        SET DEFAULT KEYWORD              00523300
.ZG151E              ANOP  ,                                            00523400
.*-------------------------------------------------------------------   00523500
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00523600
.ZG152               ANOP  ,                                            00523700
&ZTLC                SETC 'CHANGE'                                      00523800
                     AIF   ('&REQUEST(1)' NE '&ZTLC').ZG178             00523900
&XREQUEST            SETC  'CHANGE'    SET KEYWORD                      00524000
                     AIF   (N'&REQUEST LE 1).ZG152A  CK NUM             00524100
&ZMS                 SETC  '"REQUEST='                                  00524200
&ZMS                 SETC  '&ZMS.&REQUEST"'                             00524300
&ZMS                 SETC  '&ZMS "REQUEST"'                             00524400
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00524500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00524600
.ZG152A              ANOP  ,                                            00524700
.*------------------------------------------------------------------    00524800
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00524900
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00525000
.ZG152A0             AIF   (K'&TEST LE 0).ZG152A1  OK                   00525100
&ZCVAL               SETC '&ZCVAL TEST'         INCORRECT KEY USED      00525200
.ZG152A1             AIF   (K'&CONTENTIONACT LE 0).ZG152A2  OK          00525300
&ZCVAL               SETC '&ZCVAL CONTENTIONACT'  INCORRECT KEY USED    00525400
.ZG152A2             AIF   (K'&WAITTYPE LE 0).ZG152A3  OK               00525500
&ZCVAL               SETC '&ZCVAL WAITTYPE'     INCORRECT KEY USED      00525600
.ZG152A3             AIF   (K'&ECB@ LE 0).ZG152A4  OK                   00525700
&ZCVAL               SETC '&ZCVAL ECB@'         INCORRECT KEY USED      00525800
.ZG152A4             AIF   (K'&ENQMAX LE 0).ZG152A5  OK                 00525900
&ZCVAL               SETC '&ZCVAL ENQMAX'       INCORRECT KEY USED      00526000
.ZG152A5             AIF   (K'&USERDATA LE 0).ZG152A6  OK               00526100
&ZCVAL               SETC '&ZCVAL USERDATA'     INCORRECT KEY USED      00526200
.ZG152A6             AIF   (K'&ANSAREA LE 0).ZG152A7  OK                00526300
&ZCVAL               SETC '&ZCVAL ANSAREA'      INCORRECT KEY USED      00526400
.ZG152A7             AIF   (K'&ANSLEN LE 0).ZG152A8  OK                 00526500
&ZCVAL               SETC '&ZCVAL ANSLEN'       INCORRECT KEY USED      00526600
.ZG152A8             AIF   (K'&QNAME LE 0).ZG152A9  OK                  00526700
&ZCVAL               SETC '&ZCVAL QNAME'        INCORRECT KEY USED      00526800
.ZG152A9             AIF   (K'&RNAME LE 0).ZG152A10  OK                 00526900
&ZCVAL               SETC '&ZCVAL RNAME'        INCORRECT KEY USED      00527000
.ZG152A10            AIF   (K'&RNAMELEN LE 0).ZG152A11  OK              00527100
&ZCVAL               SETC '&ZCVAL RNAMELEN'     INCORRECT KEY USED      00527200
.ZG152A11            AIF   (K'&CONTROLVAL LE 0).ZG152A12  OK            00527300
&ZCVAL               SETC '&ZCVAL CONTROLVAL'   INCORRECT KEY USED      00527400
.ZG152A12            AIF   (K'&RESERVEVOLUME LE 0).ZG152A13  OK         00527500
&ZCVAL               SETC '&ZCVAL RESERVEVOLUME'  INCORRECT KEY USED    00527600
.ZG152A13            AIF   (K'&SCOPE LE 0).ZG152A14  OK                 00527700
&ZCVAL               SETC '&ZCVAL SCOPE'        INCORRECT KEY USED      00527800
.ZG152A14            AIF   (K'&SCOPEVAL LE 0).ZG152A15  OK              00527900
&ZCVAL               SETC '&ZCVAL SCOPEVAL'     INCORRECT KEY USED      00528000
.ZG152A15            AIF   (K'&RNL LE 0).ZG152A16  OK                   00528100
&ZCVAL               SETC '&ZCVAL RNL'          INCORRECT KEY USED      00528200
.ZG152A16            AIF   (K'&UCB@ LE 0).ZG152A17  OK                  00528300
&ZCVAL               SETC '&ZCVAL UCB@'         INCORRECT KEY USED      00528400
.ZG152A17            AIF   (K'&SYNCHRES LE 0).ZG152A18  OK              00528500
&ZCVAL               SETC '&ZCVAL SYNCHRES'     INCORRECT KEY USED      00528600
.ZG152A18            AIF   (K'&RESTABLE LE 0).ZG152A19  OK              00528700
&ZCVAL               SETC '&ZCVAL RESTABLE'     INCORRECT KEY USED      00528800
.ZG152A19            AIF   (K'&ZCVAL LE 0).ZG152A20  OK                 00528900
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00529000
&ZMS                 SETC  '"REQUEST'                                   00529100
&ZMS                 SETC  '&ZMS.=&REQUEST"'                            00529200
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00529300
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00529400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00529500
.ZG152A20            ANOP  ,                                            00529600
.*------------------------------------------------------------------    00529700
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00529800
&XRESLIST            SETC  ''          INITIALIZE XVARIABLE             00529900
.*-------------------------------------------------------------------   00530000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00530100
.ZG155               ANOP  ,                                            00530200
                     AIF   (K'&RESLIST(1) LE 0).ZG155A                  00530300
&ZTLC                SETC 'NO'                                          00530400
                     AIF   ('&RESLIST(1)' NE '&ZTLC').ZG159             00530500
&XRESLIST            SETC  'NO'        SET KEYWORD                      00530600
                     AIF   (N'&RESLIST LE 1).ZG155A  CK NUM             00530700
&ZMS                 SETC  '"RESLIST='                                  00530800
&ZMS                 SETC  '&ZMS.&RESLIST"'                             00530900
&ZMS                 SETC  '&ZMS "RESLIST"'                             00531000
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00531100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00531200
.ZG155A              ANOP  ,                                            00531300
.*------------------------------------------------------------------    00531400
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00531500
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00531600
.ZG155A0             AIF   (K'&NUMRES LE 0).ZG155A1  OK                 00531700
&ZCVAL               SETC '&ZCVAL NUMRES'       INCORRECT KEY USED      00531800
.ZG155A1             AIF   (K'&ENQTOKENTBL LE 0).ZG155A2  OK            00531900
&ZCVAL               SETC '&ZCVAL ENQTOKENTBL'  INCORRECT KEY USED      00532000
.ZG155A2             AIF   (K'&RETURNTABLE LE 0).ZG155A3  OK            00532100
&ZCVAL               SETC '&ZCVAL RETURNTABLE'  INCORRECT KEY USED      00532200
.ZG155A3             AIF   (K'&ZCVAL LE 0).ZG155A4  OK                  00532300
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00532400
&ZMS                 SETC  '"RESLIST'                                   00532500
&ZMS                 SETC  '&ZMS.=&RESLIST"'                            00532600
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00532700
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00532800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00532900
.ZG155A4             ANOP  ,                                            00533000
.*----------------------------------------------------------------***   00533100
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00533200
                     AIF   (N'&ENQTOKEN LE 1).ZG157A  CK NUM            00533300
&ZMS                 SETC  '"ENQTOKEN='                                 00533400
&ZMS                 SETC  '&ZMS.&ENQTOKEN"'                            00533500
&ZMS                 SETC  '&ZMS "ENQTOKEN"'                            00533600
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00533700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00533800
.ZG157A              ANOP  ,                                            00533900
.*-------------------------------------------------------------------   00534000
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00534100
&ZXENQTOKEN          SETC  'INPUT'     SET IN/OUTPUT                    00534200
&XENQTOKEN           SETC  '&ENQTOKEN(1)'       SET XVARIABLE           00534300
                     AIF   (N'&ENQTOKEN GT 1).ZG157B  MULTI PARMS       00534400
&XENQTOKEN           SETC  '&ENQTOKEN'          SET XVARIABLE           00534500
.ZG157B              AIF   (K'&ENQTOKEN(1) GT 0).ZG157C                 00534600
&ZXENQTOKEN          SETC  ''          RESET IN/OUTPUT                  00534700
&ZMS                 SETC  'WHEN "NO" IS SPECIFIED'                     00534800
&ZMS                 SETC  '&ZMS , "ENQTOKEN" KEY AND ITS'              00534900
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00535000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00535100
.ZG157C              ANOP  ,                                            00535200
.*-------------------------------------------------------------------   00535300
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00535400
                     AIF   (K'&ZXENQTOKEN LE 0).ZG157R  NOT I/O         00535500
                     AIF   ('&XENQTOKEN'(1,1) NE '(').ZG157R            00535600
&ZCGPR               SETC  '&XENQTOKEN'(2,K'&XENQTOKEN-2)               00535700
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG157P                00535800
                     AIF   (K'&ZCGPR GT 2).ZG157Q                       00535900
                     AIF   ('&ZCGPR' EQ '0').ZG157Q                     00536000
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00536100
                     AIF   (T'&ZCGPR NE 'N').ZG157Q  INVALID REG NAME   00536200
.ZG157P              ANOP  ,                                            00536300
                     AIF   (T'&ZCGPR NE 'N').ZG157R  NON NUMERIC        00536400
                     AIF   ('&ZCGPR' LT '2').ZG157Q                     00536500
                     AIF   ('&ZCGPR' LE '12').ZG157R                    00536600
.ZG157Q              ANOP  ,                                            00536700
&ZMS                 SETC  '"ENQTOKEN='                                 00536800
&ZMS                 SETC  '&ZMS.&ENQTOKEN"'                            00536900
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00537000
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00537100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00537200
.ZG157R              ANOP  ,                                            00537300
.*-------------------------------------------------------------------   00537400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00537500
.ZG159               ANOP  ,                                            00537600
&ZTLC                SETC 'YES'                                         00537700
                     AIF   ('&RESLIST(1)' NE '&ZTLC').ZG169             00537800
&XRESLIST            SETC  'YES'       SET KEYWORD                      00537900
                     AIF   (N'&RESLIST LE 1).ZG159A  CK NUM             00538000
&ZMS                 SETC  '"RESLIST='                                  00538100
&ZMS                 SETC  '&ZMS.&RESLIST"'                             00538200
&ZMS                 SETC  '&ZMS "RESLIST"'                             00538300
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00538400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00538500
.ZG159A              ANOP  ,                                            00538600
.*------------------------------------------------------------------    00538700
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00538800
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00538900
.ZG159A0             AIF   (K'&ENQTOKEN LE 0).ZG159A1  OK               00539000
&ZCVAL               SETC '&ZCVAL ENQTOKEN'     INCORRECT KEY USED      00539100
.ZG159A1             AIF   (K'&ZCVAL LE 0).ZG159A2  OK                  00539200
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00539300
&ZMS                 SETC  '"RESLIST'                                   00539400
&ZMS                 SETC  '&ZMS.=&RESLIST"'                            00539500
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00539600
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00539700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00539800
.ZG159A2             ANOP  ,                                            00539900
.*----------------------------------------------------------------***   00540000
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00540100
                     AIF   (N'&NUMRES LE 1).ZG161A  CK NUM              00540200
&ZMS                 SETC  '"NUMRES='                                   00540300
&ZMS                 SETC  '&ZMS.&NUMRES"'                              00540400
&ZMS                 SETC  '&ZMS "NUMRES"'                              00540500
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00540600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00540700
.ZG161A              ANOP  ,                                            00540800
.*-------------------------------------------------------------------   00540900
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00541000
&ZXNUMRES            SETC  'INPUT'     SET IN/OUTPUT                    00541100
&XNUMRES             SETC  '&NUMRES(1)'         SET XVARIABLE           00541200
                     AIF   (N'&NUMRES GT 1).ZG161B  MULTI PARMS         00541300
&XNUMRES             SETC  '&NUMRES'   SET XVARIABLE                    00541400
.ZG161B              AIF   (K'&NUMRES(1) GT 0).ZG161C                   00541500
&ZXNUMRES            SETC  ''          RESET IN/OUTPUT                  00541600
&ZMS                 SETC  'WHEN "YES" IS SPECIFIED'                    00541700
&ZMS                 SETC  '&ZMS , "NUMRES" KEY AND ITS'                00541800
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00541900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00542000
.ZG161C              ANOP  ,                                            00542100
.*-------------------------------------------------------------------   00542200
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00542300
                     AIF   (K'&ZXNUMRES LE 0).ZG161R  NOT I/O           00542400
                     AIF   ('&XNUMRES'(1,1) NE '(').ZG161R              00542500
&ZCGPR               SETC  '&XNUMRES'(2,K'&XNUMRES-2)                   00542600
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG161P                00542700
                     AIF   (K'&ZCGPR GT 2).ZG161Q                       00542800
                     AIF   ('&ZCGPR' EQ '0').ZG161Q                     00542900
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00543000
                     AIF   (T'&ZCGPR NE 'N').ZG161Q  INVALID REG NAME   00543100
.ZG161P              ANOP  ,                                            00543200
                     AIF   (T'&ZCGPR NE 'N').ZG161R  NON NUMERIC        00543300
                     AIF   ('&ZCGPR' LT '2').ZG161Q                     00543400
                     AIF   ('&ZCGPR' LE '12').ZG161R                    00543500
.ZG161Q              ANOP  ,                                            00543600
&ZMS                 SETC  '"NUMRES='                                   00543700
&ZMS                 SETC  '&ZMS.&NUMRES"'                              00543800
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00543900
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00544000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00544100
.ZG161R              ANOP  ,                                            00544200
.*----------------------------------------------------------------***   00544300
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00544400
                     AIF   (N'&ENQTOKENTBL LE 1).ZG164A  CK NUM         00544500
&ZMS                 SETC  '"ENQTOKENTBL='                              00544600
&ZMS                 SETC  '&ZMS.&ENQTOKENTBL"'                         00544700
&ZMS                 SETC  '&ZMS "ENQTOKENTBL"'                         00544800
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00544900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00545000
.ZG164A              ANOP  ,                                            00545100
.*-------------------------------------------------------------------   00545200
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00545300
&ZXENQTOKENTBL       SETC  'INPUT'     SET IN/OUTPUT                    00545400
&XENQTOKENTBL        SETC  '&ENQTOKENTBL(1)'    SET XVARIABLE           00545500
                     AIF   (N'&ENQTOKENTBL GT 1).ZG164B  MULTI PARMS    00545600
&XENQTOKENTBL        SETC  '&ENQTOKENTBL'       SET XVARIABLE           00545700
.ZG164B              AIF   (K'&ENQTOKENTBL(1) GT 0).ZG164C              00545800
&ZXENQTOKENTBL       SETC  ''          RESET IN/OUTPUT                  00545900
&ZMS                 SETC  'WHEN "YES" IS SPECIFIED'                    00546000
&ZMS                 SETC  '&ZMS , "ENQTOKENTBL" KEY AND ITS'           00546100
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00546200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00546300
.ZG164C              ANOP  ,                                            00546400
.*-------------------------------------------------------------------   00546500
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00546600
                     AIF   (K'&ZXENQTOKENTBL LE 0).ZG164R  NOT I/O      00546700
                     AIF   ('&XENQTOKENTBL'(1,1) NE '(').ZG164R         00546800
&ZCGPR               SETC  '&XENQTOKENTBL'(2,K'&XENQTOKENTBL-2)         00546900
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG164P                00547000
                     AIF   (K'&ZCGPR GT 2).ZG164Q                       00547100
                     AIF   ('&ZCGPR' EQ '0').ZG164Q                     00547200
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00547300
                     AIF   (T'&ZCGPR NE 'N').ZG164Q  INVALID REG NAME   00547400
.ZG164P              ANOP  ,                                            00547500
                     AIF   (T'&ZCGPR NE 'N').ZG164R  NON NUMERIC        00547600
                     AIF   ('&ZCGPR' LT '2').ZG164Q                     00547700
                     AIF   ('&ZCGPR' LE '12').ZG164R                    00547800
.ZG164Q              ANOP  ,                                            00547900
&ZMS                 SETC  '"ENQTOKENTBL='                              00548000
&ZMS                 SETC  '&ZMS.&ENQTOKENTBL"'                         00548100
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00548200
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00548300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00548400
.ZG164R              ANOP  ,                                            00548500
.*----------------------------------------------------------------***   00548600
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00548700
                     AIF   (N'&RETURNTABLE LE 1).ZG167A  CK NUM         00548800
&ZMS                 SETC  '"RETURNTABLE='                              00548900
&ZMS                 SETC  '&ZMS.&RETURNTABLE"'                         00549000
&ZMS                 SETC  '&ZMS "RETURNTABLE"'                         00549100
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00549200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00549300
.ZG167A              ANOP  ,                                            00549400
.*-------------------------------------------------------------------   00549500
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00549600
                     AIF   (K'&RETURNTABLE(1) LE 0).ZG167C  NO PARM     00549700
&ZXRETURNTABLE       SETC  'OUTPUT'    SET OUTPUT                       00549800
&XRETURNTABLE        SETC  '&RETURNTABLE(1)'    SET XVARIABLE           00549900
                     AIF   (N'&RETURNTABLE GT 1).ZG167C                 00550000
&XRETURNTABLE        SETC  '&RETURNTABLE'       SET XVARIABLE           00550100
.ZG167C              ANOP  ,                                            00550200
.*-------------------------------------------------------------------   00550300
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00550400
                     AIF   (K'&ZXRETURNTABLE LE 0).ZG167R  NOT I/O      00550500
                     AIF   ('&XRETURNTABLE'(1,1) NE '(').ZG167R         00550600
&ZCGPR               SETC  '&XRETURNTABLE'(2,K'&XRETURNTABLE-2)         00550700
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG167P                00550800
                     AIF   (K'&ZCGPR GT 2).ZG167Q                       00550900
                     AIF   ('&ZCGPR' EQ '0').ZG167Q                     00551000
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00551100
                     AIF   (T'&ZCGPR NE 'N').ZG167Q  INVALID REG NAME   00551200
.ZG167P              ANOP  ,                                            00551300
                     AIF   (T'&ZCGPR NE 'N').ZG167R  NON NUMERIC        00551400
                     AIF   ('&ZCGPR' LT '2').ZG167Q                     00551500
                     AIF   ('&ZCGPR' LE '12').ZG167R                    00551600
.ZG167Q              ANOP  ,                                            00551700
&ZMS                 SETC  '"RETURNTABLE='                              00551800
&ZMS                 SETC  '&ZMS.&RETURNTABLE"'                         00551900
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00552000
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00552100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00552200
.ZG167R              ANOP  ,                                            00552300
.*------------------------------------------------------------------    00552400
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00552500
.ZG169               ANOP  ,                                            00552600
&ZXRESLIST           SETC  'INPUT'     SET IN/OUTPUT                    00552700
                     AIF   (K'&XRESLIST GT 0).ZG169E  VALID ARG         00552800
                     AIF   (T'&RESLIST EQ 'O').ZG169D  OMITTED          00552900
&ZASYSLNDX           SETA  0                                            00553000
.ZG169A              ANOP  ,           POSITIONAL MACRO KEY             00553100
&ZASYSLNDX           SETA  &ZASYSLNDX+1                                 00553200
                     AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG169C            00553300
&ZTLC                SETC 'RESLIST'                                     00553400
                     AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG169A   00553500
.ZG169B              ANOP  ,                                            00553600
&ZXRESLIST           SETC  ''          RESET IN/OUTPUT                  00553700
&ZMS                 SETC  'THE "RESLIST" KEY'                          00553800
&ZMS                 SETC  '&ZMS MUST CONTAIN ONE'                      00553900
                     MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'             00554000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00554100
                     AGO   .ZG169E                                      00554200
.ZG169C              ANOP  ,                                            00554300
&ZXRESLIST           SETC  ''          RESET IN/OUTPUT                  00554400
&ZMS                 SETC  '"RESLIST='                                  00554500
&ZMS                 SETC  '&ZMS.&RESLIST"'                             00554600
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00554700
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00554800
&ZMS                 SETC  '&ZMS "NO"'                                  00554900
&ZMS                 SETC  '&ZMS OR "YES".'                             00555000
                     MNOTE 8,' &ZMS '                                   00555100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00555200
                     AGO   .ZG169E                                      00555300
.ZG169D              ANOP  ,                                            00555400
&XRESLIST            SETC  'NO'        SET DEFAULT KEYWORD              00555500
.ZG169E              ANOP  ,                                            00555600
.*----------------------------------------------------------------***   00555700
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00555800
                     AIF   (N'&OWNINGTTOKEN LE 1).ZG171A  CK NUM        00555900
&ZMS                 SETC  '"OWNINGTTOKEN='                             00556000
&ZMS                 SETC  '&ZMS.&OWNINGTTOKEN"'                        00556100
&ZMS                 SETC  '&ZMS "OWNINGTTOKEN"'                        00556200
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00556300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00556400
.ZG171A              ANOP  ,                                            00556500
.*-------------------------------------------------------------------   00556600
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00556700
&ZXOWNINGTTOKEN      SETC  'INPUT'     SET IN/OUTPUT                    00556800
&XOWNINGTTOKEN       SETC  'CURRENT_TASK'                               00556900
                     AIF   (K'&OWNINGTTOKEN(1) LE 0).ZG171B  PARM       00557000
&XOWNINGTTOKEN       SETC  '&OWNINGTTOKEN(1)'   SET XVARIABLE           00557100
                     AIF   (N'&OWNINGTTOKEN GT 1).ZG171B  MULTI         00557200
&XOWNINGTTOKEN       SETC  '&OWNINGTTOKEN'      SET XVARIABLE           00557300
.ZG171B              ANOP  ,                                            00557400
.*-------------------------------------------------------------------   00557500
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00557600
                     AIF   (K'&ZXOWNINGTTOKEN LE 0).ZG171R  NOT I/O     00557700
         AIF   ('&XOWNINGTTOKEN' EQ 'CURRENT_TASK').ZG171R              00557800
                     AIF   ('&XOWNINGTTOKEN'(1,1) NE '(').ZG171R        00557900
&ZCGPR               SETC  '&XOWNINGTTOKEN'(2,K'&XOWNINGTTOKEN-2)       00558000
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG171P                00558100
                     AIF   (K'&ZCGPR GT 2).ZG171Q                       00558200
                     AIF   ('&ZCGPR' EQ '0').ZG171Q                     00558300
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00558400
                     AIF   (T'&ZCGPR NE 'N').ZG171Q  INVALID REG NAME   00558500
.ZG171P              ANOP  ,                                            00558600
                     AIF   (T'&ZCGPR NE 'N').ZG171R  NON NUMERIC        00558700
                     AIF   ('&ZCGPR' LT '2').ZG171Q                     00558800
                     AIF   ('&ZCGPR' LE '12').ZG171R                    00558900
.ZG171Q              ANOP  ,                                            00559000
&ZMS                 SETC  '"OWNINGTTOKEN='                             00559100
&ZMS                 SETC  '&ZMS.&OWNINGTTOKEN"'                        00559200
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00559300
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00559400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00559500
.ZG171R              ANOP  ,                                            00559600
.*------------------------------------------------------------------    00559700
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00559800
&XCONTROL            SETC  ''          INITIALIZE XVARIABLE             00559900
.*-------------------------------------------------------------------   00560000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00560100
.ZG175               ANOP  ,                                            00560200
                     AIF   (K'&CONTROL(1) LE 0).ZG175A                  00560300
&ZTLC                SETC 'EXCLUSIVE'                                   00560400
                     AIF   ('&CONTROL(1)' NE '&ZTLC').ZG176             00560500
&XCONTROL            SETC  'EXCLUSIVE'          SET KEYWORD             00560600
                     AIF   (N'&CONTROL LE 1).ZG175A  CK NUM             00560700
&ZMS                 SETC  '"CONTROL='                                  00560800
&ZMS                 SETC  '&ZMS.&CONTROL"'                             00560900
&ZMS                 SETC  '&ZMS "CONTROL"'                             00561000
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00561100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00561200
.ZG175A              ANOP  ,                                            00561300
.*-------------------------------------------------------------------   00561400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00561500
.ZG176               ANOP  ,                                            00561600
&ZTLC                SETC 'SHARED'                                      00561700
                     AIF   ('&CONTROL(1)' NE '&ZTLC').ZG177             00561800
&XCONTROL            SETC  'SHARED'    SET KEYWORD                      00561900
                     AIF   (N'&CONTROL LE 1).ZG176A  CK NUM             00562000
&ZMS                 SETC  '"CONTROL='                                  00562100
&ZMS                 SETC  '&ZMS.&CONTROL"'                             00562200
&ZMS                 SETC  '&ZMS "CONTROL"'                             00562300
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00562400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00562500
.ZG176A              ANOP  ,                                            00562600
.*------------------------------------------------------------------    00562700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00562800
.ZG177               ANOP  ,                                            00562900
&ZXCONTROL           SETC  'INPUT'     SET IN/OUTPUT                    00563000
                     AIF   (K'&XCONTROL GT 0).ZG177E  VALID ARG         00563100
                     AIF   (T'&CONTROL EQ 'O').ZG177D  OMITTED          00563200
&ZASYSLNDX           SETA  0                                            00563300
.ZG177A              ANOP  ,           POSITIONAL MACRO KEY             00563400
&ZASYSLNDX           SETA  &ZASYSLNDX+1                                 00563500
                     AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG177C            00563600
&ZTLC                SETC 'CONTROL'                                     00563700
                     AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG177A   00563800
.ZG177B              ANOP  ,                                            00563900
&ZXCONTROL           SETC  ''          RESET IN/OUTPUT                  00564000
&ZMS                 SETC  'THE "CONTROL" KEY'                          00564100
&ZMS                 SETC  '&ZMS MUST CONTAIN ONE'                      00564200
                     MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'             00564300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00564400
                     AGO   .ZG177E                                      00564500
.ZG177C              ANOP  ,                                            00564600
&ZXCONTROL           SETC  ''          RESET IN/OUTPUT                  00564700
&ZMS                 SETC  '"CONTROL='                                  00564800
&ZMS                 SETC  '&ZMS.&CONTROL"'                             00564900
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00565000
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00565100
&ZMS                 SETC  '&ZMS "EXCLUSIVE"'                           00565200
&ZMS                 SETC  '&ZMS OR "SHARED".'                          00565300
                     MNOTE 8,' &ZMS '                                   00565400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00565500
                     AGO   .ZG177E                                      00565600
.ZG177D              ANOP  ,                                            00565700
&XCONTROL            SETC  'EXCLUSIVE'          SET DEFAULT KEYWORD     00565800
.ZG177E              ANOP  ,                                            00565900
.*-------------------------------------------------------------------   00566000
.***AG.KKCTL02 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00566100
.ZG178               ANOP  ,                                            00566200
&ZTLC                SETC 'RELEASE'                                     00566300
                     AIF   ('&REQUEST(1)' NE '&ZTLC').ZG199             00566400
&XREQUEST            SETC  'RELEASE'   SET KEYWORD                      00566500
                     AIF   (N'&REQUEST LE 1).ZG178A  CK NUM             00566600
&ZMS                 SETC  '"REQUEST='                                  00566700
&ZMS                 SETC  '&ZMS.&REQUEST"'                             00566800
&ZMS                 SETC  '&ZMS "REQUEST"'                             00566900
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00567000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00567100
.ZG178A              ANOP  ,                                            00567200
.*------------------------------------------------------------------    00567300
.***AG.KKCTL03 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00567400
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00567500
.ZG178A0             AIF   (K'&TEST LE 0).ZG178A1  OK                   00567600
&ZCVAL               SETC '&ZCVAL TEST'         INCORRECT KEY USED      00567700
.ZG178A1             AIF   (K'&CONTENTIONACT LE 0).ZG178A2  OK          00567800
&ZCVAL               SETC '&ZCVAL CONTENTIONACT'  INCORRECT KEY USED    00567900
.ZG178A2             AIF   (K'&WAITTYPE LE 0).ZG178A3  OK               00568000
&ZCVAL               SETC '&ZCVAL WAITTYPE'     INCORRECT KEY USED      00568100
.ZG178A3             AIF   (K'&ECB@ LE 0).ZG178A4  OK                   00568200
&ZCVAL               SETC '&ZCVAL ECB@'         INCORRECT KEY USED      00568300
.ZG178A4             AIF   (K'&ENQMAX LE 0).ZG178A5  OK                 00568400
&ZCVAL               SETC '&ZCVAL ENQMAX'       INCORRECT KEY USED      00568500
.ZG178A5             AIF   (K'&USERDATA LE 0).ZG178A6  OK               00568600
&ZCVAL               SETC '&ZCVAL USERDATA'     INCORRECT KEY USED      00568700
.ZG178A6             AIF   (K'&ANSAREA LE 0).ZG178A7  OK                00568800
&ZCVAL               SETC '&ZCVAL ANSAREA'      INCORRECT KEY USED      00568900
.ZG178A7             AIF   (K'&ANSLEN LE 0).ZG178A8  OK                 00569000
&ZCVAL               SETC '&ZCVAL ANSLEN'       INCORRECT KEY USED      00569100
.ZG178A8             AIF   (K'&QNAME LE 0).ZG178A9  OK                  00569200
&ZCVAL               SETC '&ZCVAL QNAME'        INCORRECT KEY USED      00569300
.ZG178A9             AIF   (K'&RNAME LE 0).ZG178A10  OK                 00569400
&ZCVAL               SETC '&ZCVAL RNAME'        INCORRECT KEY USED      00569500
.ZG178A10            AIF   (K'&RNAMELEN LE 0).ZG178A11  OK              00569600
&ZCVAL               SETC '&ZCVAL RNAMELEN'     INCORRECT KEY USED      00569700
.ZG178A11            AIF   (K'&CONTROL LE 0).ZG178A12  OK               00569800
&ZCVAL               SETC '&ZCVAL CONTROL'      INCORRECT KEY USED      00569900
.ZG178A12            AIF   (K'&CONTROLVAL LE 0).ZG178A13  OK            00570000
&ZCVAL               SETC '&ZCVAL CONTROLVAL'   INCORRECT KEY USED      00570100
.ZG178A13            AIF   (K'&RESERVEVOLUME LE 0).ZG178A14  OK         00570200
&ZCVAL               SETC '&ZCVAL RESERVEVOLUME'  INCORRECT KEY USED    00570300
.ZG178A14            AIF   (K'&SCOPE LE 0).ZG178A15  OK                 00570400
&ZCVAL               SETC '&ZCVAL SCOPE'        INCORRECT KEY USED      00570500
.ZG178A15            AIF   (K'&SCOPEVAL LE 0).ZG178A16  OK              00570600
&ZCVAL               SETC '&ZCVAL SCOPEVAL'     INCORRECT KEY USED      00570700
.ZG178A16            AIF   (K'&RNL LE 0).ZG178A17  OK                   00570800
&ZCVAL               SETC '&ZCVAL RNL'          INCORRECT KEY USED      00570900
.ZG178A17            AIF   (K'&UCB@ LE 0).ZG178A18  OK                  00571000
&ZCVAL               SETC '&ZCVAL UCB@'         INCORRECT KEY USED      00571100
.ZG178A18            AIF   (K'&SYNCHRES LE 0).ZG178A19  OK              00571200
&ZCVAL               SETC '&ZCVAL SYNCHRES'     INCORRECT KEY USED      00571300
.ZG178A19            AIF   (K'&RESTABLE LE 0).ZG178A20  OK              00571400
&ZCVAL               SETC '&ZCVAL RESTABLE'     INCORRECT KEY USED      00571500
.ZG178A20            AIF   (K'&ZCVAL LE 0).ZG178A21  OK                 00571600
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00571700
                     AIF  (K'&ZCVAL LE 160).ZG178A21A                   00571800
&ZCVAL               SETC '&ZCVAL'(1,160)                               00571900
&ZCVAL               SETC '&ZCVAL....'                                  00572000
.ZG178A21A           ANOP                                               00572100
&ZMS                 SETC  '"REQUEST'                                   00572200
&ZMS                 SETC  '&ZMS.=&REQUEST"'                            00572300
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00572400
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00572500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00572600
.ZG178A21            ANOP  ,                                            00572700
.*------------------------------------------------------------------    00572800
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00572900
&XRESLIST            SETC  ''          INITIALIZE XVARIABLE             00573000
.*-------------------------------------------------------------------   00573100
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00573200
.ZG181               ANOP  ,                                            00573300
                     AIF   (K'&RESLIST(1) LE 0).ZG181A                  00573400
&ZTLC                SETC 'NO'                                          00573500
                     AIF   ('&RESLIST(1)' NE '&ZTLC').ZG185             00573600
&XRESLIST            SETC  'NO'        SET KEYWORD                      00573700
                     AIF   (N'&RESLIST LE 1).ZG181A  CK NUM             00573800
&ZMS                 SETC  '"RESLIST='                                  00573900
&ZMS                 SETC  '&ZMS.&RESLIST"'                             00574000
&ZMS                 SETC  '&ZMS "RESLIST"'                             00574100
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00574200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00574300
.ZG181A              ANOP  ,                                            00574400
.*------------------------------------------------------------------    00574500
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00574600
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00574700
.ZG181A0             AIF   (K'&NUMRES LE 0).ZG181A1  OK                 00574800
&ZCVAL               SETC '&ZCVAL NUMRES'       INCORRECT KEY USED      00574900
.ZG181A1             AIF   (K'&ENQTOKENTBL LE 0).ZG181A2  OK            00575000
&ZCVAL               SETC '&ZCVAL ENQTOKENTBL'  INCORRECT KEY USED      00575100
.ZG181A2             AIF   (K'&RETURNTABLE LE 0).ZG181A3  OK            00575200
&ZCVAL               SETC '&ZCVAL RETURNTABLE'  INCORRECT KEY USED      00575300
.ZG181A3             AIF   (K'&ZCVAL LE 0).ZG181A4  OK                  00575400
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00575500
&ZMS                 SETC  '"RESLIST'                                   00575600
&ZMS                 SETC  '&ZMS.=&RESLIST"'                            00575700
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00575800
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00575900
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00576000
.ZG181A4             ANOP  ,                                            00576100
.*----------------------------------------------------------------***   00576200
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00576300
                     AIF   (N'&ENQTOKEN LE 1).ZG183A  CK NUM            00576400
&ZMS                 SETC  '"ENQTOKEN='                                 00576500
&ZMS                 SETC  '&ZMS.&ENQTOKEN"'                            00576600
&ZMS                 SETC  '&ZMS "ENQTOKEN"'                            00576700
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00576800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00576900
.ZG183A              ANOP  ,                                            00577000
.*-------------------------------------------------------------------   00577100
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00577200
&ZXENQTOKEN          SETC  'INPUT'     SET IN/OUTPUT                    00577300
&XENQTOKEN           SETC  '&ENQTOKEN(1)'       SET XVARIABLE           00577400
                     AIF   (N'&ENQTOKEN GT 1).ZG183B  MULTI PARMS       00577500
&XENQTOKEN           SETC  '&ENQTOKEN'          SET XVARIABLE           00577600
.ZG183B              AIF   (K'&ENQTOKEN(1) GT 0).ZG183C                 00577700
&ZXENQTOKEN          SETC  ''          RESET IN/OUTPUT                  00577800
&ZMS                 SETC  'WHEN "NO" IS SPECIFIED'                     00577900
&ZMS                 SETC  '&ZMS , "ENQTOKEN" KEY AND ITS'              00578000
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00578100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00578200
.ZG183C              ANOP  ,                                            00578300
.*-------------------------------------------------------------------   00578400
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00578500
                     AIF   (K'&ZXENQTOKEN LE 0).ZG183R  NOT I/O         00578600
                     AIF   ('&XENQTOKEN'(1,1) NE '(').ZG183R            00578700
&ZCGPR               SETC  '&XENQTOKEN'(2,K'&XENQTOKEN-2)               00578800
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG183P                00578900
                     AIF   (K'&ZCGPR GT 2).ZG183Q                       00579000
                     AIF   ('&ZCGPR' EQ '0').ZG183Q                     00579100
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00579200
                     AIF   (T'&ZCGPR NE 'N').ZG183Q  INVALID REG NAME   00579300
.ZG183P              ANOP  ,                                            00579400
                     AIF   (T'&ZCGPR NE 'N').ZG183R  NON NUMERIC        00579500
                     AIF   ('&ZCGPR' LT '2').ZG183Q                     00579600
                     AIF   ('&ZCGPR' LE '12').ZG183R                    00579700
.ZG183Q              ANOP  ,                                            00579800
&ZMS                 SETC  '"ENQTOKEN='                                 00579900
&ZMS                 SETC  '&ZMS.&ENQTOKEN"'                            00580000
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00580100
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00580200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00580300
.ZG183R              ANOP  ,                                            00580400
.*-------------------------------------------------------------------   00580500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00580600
.ZG185               ANOP  ,                                            00580700
&ZTLC                SETC 'YES'                                         00580800
                     AIF   ('&RESLIST(1)' NE '&ZTLC').ZG195             00580900
&XRESLIST            SETC  'YES'       SET KEYWORD                      00581000
                     AIF   (N'&RESLIST LE 1).ZG185A  CK NUM             00581100
&ZMS                 SETC  '"RESLIST='                                  00581200
&ZMS                 SETC  '&ZMS.&RESLIST"'                             00581300
&ZMS                 SETC  '&ZMS "RESLIST"'                             00581400
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00581500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00581600
.ZG185A              ANOP  ,                                            00581700
.*------------------------------------------------------------------    00581800
.***AG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00581900
&ZCVAL               SETC ''           CLEAR ERROR KEY ACCUMULATOR      00582000
.ZG185A0             AIF   (K'&ENQTOKEN LE 0).ZG185A1  OK               00582100
&ZCVAL               SETC '&ZCVAL ENQTOKEN'     INCORRECT KEY USED      00582200
.ZG185A1             AIF   (K'&ZCVAL LE 0).ZG185A2  OK                  00582300
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)                        00582400
&ZMS                 SETC  '"RESLIST'                                   00582500
&ZMS                 SETC  '&ZMS.=&RESLIST"'                            00582600
&ZMS                 SETC  '&ZMS DOES NOT ALLOW THE USE OF THE'         00582700
                     MNOTE 8,' &ZMS FOLLOWING KEY(S) "&ZCVAL".'         00582800
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00582900
.ZG185A2             ANOP  ,                                            00583000
.*----------------------------------------------------------------***   00583100
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00583200
                     AIF   (N'&NUMRES LE 1).ZG187A  CK NUM              00583300
&ZMS                 SETC  '"NUMRES='                                   00583400
&ZMS                 SETC  '&ZMS.&NUMRES"'                              00583500
&ZMS                 SETC  '&ZMS "NUMRES"'                              00583600
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00583700
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00583800
.ZG187A              ANOP  ,                                            00583900
.*-------------------------------------------------------------------   00584000
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00584100
&ZXNUMRES            SETC  'INPUT'     SET IN/OUTPUT                    00584200
&XNUMRES             SETC  '&NUMRES(1)'         SET XVARIABLE           00584300
                     AIF   (N'&NUMRES GT 1).ZG187B  MULTI PARMS         00584400
&XNUMRES             SETC  '&NUMRES'   SET XVARIABLE                    00584500
.ZG187B              AIF   (K'&NUMRES(1) GT 0).ZG187C                   00584600
&ZXNUMRES            SETC  ''          RESET IN/OUTPUT                  00584700
&ZMS                 SETC  'WHEN "YES" IS SPECIFIED'                    00584800
&ZMS                 SETC  '&ZMS , "NUMRES" KEY AND ITS'                00584900
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00585000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00585100
.ZG187C              ANOP  ,                                            00585200
.*-------------------------------------------------------------------   00585300
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00585400
                     AIF   (K'&ZXNUMRES LE 0).ZG187R  NOT I/O           00585500
                     AIF   ('&XNUMRES'(1,1) NE '(').ZG187R              00585600
&ZCGPR               SETC  '&XNUMRES'(2,K'&XNUMRES-2)                   00585700
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG187P                00585800
                     AIF   (K'&ZCGPR GT 2).ZG187Q                       00585900
                     AIF   ('&ZCGPR' EQ '0').ZG187Q                     00586000
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00586100
                     AIF   (T'&ZCGPR NE 'N').ZG187Q  INVALID REG NAME   00586200
.ZG187P              ANOP  ,                                            00586300
                     AIF   (T'&ZCGPR NE 'N').ZG187R  NON NUMERIC        00586400
                     AIF   ('&ZCGPR' LT '2').ZG187Q                     00586500
                     AIF   ('&ZCGPR' LE '12').ZG187R                    00586600
.ZG187Q              ANOP  ,                                            00586700
&ZMS                 SETC  '"NUMRES='                                   00586800
&ZMS                 SETC  '&ZMS.&NUMRES"'                              00586900
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00587000
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00587100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00587200
.ZG187R              ANOP  ,                                            00587300
.*----------------------------------------------------------------***   00587400
.***AG.KXVAR05 NAME, OPT RQD INPUT, KEYS -XVARIABLE KEY                 00587500
                     AIF   (N'&ENQTOKENTBL LE 1).ZG190A  CK NUM         00587600
&ZMS                 SETC  '"ENQTOKENTBL='                              00587700
&ZMS                 SETC  '&ZMS.&ENQTOKENTBL"'                         00587800
&ZMS                 SETC  '&ZMS "ENQTOKENTBL"'                         00587900
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00588000
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00588100
.ZG190A              ANOP  ,                                            00588200
.*-------------------------------------------------------------------   00588300
.***AG.KXVAR06 NAME, OPT RQD INPUT, KEYS -XVARIABLE                     00588400
&ZXENQTOKENTBL       SETC  'INPUT'     SET IN/OUTPUT                    00588500
&XENQTOKENTBL        SETC  '&ENQTOKENTBL(1)'    SET XVARIABLE           00588600
                     AIF   (N'&ENQTOKENTBL GT 1).ZG190B  MULTI PARMS    00588700
&XENQTOKENTBL        SETC  '&ENQTOKENTBL'       SET XVARIABLE           00588800
.ZG190B              AIF   (K'&ENQTOKENTBL(1) GT 0).ZG190C              00588900
&ZXENQTOKENTBL       SETC  ''          RESET IN/OUTPUT                  00589000
&ZMS                 SETC  'WHEN "YES" IS SPECIFIED'                    00589100
&ZMS                 SETC  '&ZMS , "ENQTOKENTBL" KEY AND ITS'           00589200
                     MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'             00589300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00589400
.ZG190C              ANOP  ,                                            00589500
.*-------------------------------------------------------------------   00589600
.***AG.KCK02 NAME, OPT RQD INPUT, KEYS -GPR OUT OF RANGE                00589700
                     AIF   (K'&ZXENQTOKENTBL LE 0).ZG190R  NOT I/O      00589800
                     AIF   ('&XENQTOKENTBL'(1,1) NE '(').ZG190R         00589900
&ZCGPR               SETC  '&XENQTOKENTBL'(2,K'&XENQTOKENTBL-2)         00590000
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG190P                00590100
                     AIF   (K'&ZCGPR GT 2).ZG190Q                       00590200
                     AIF   ('&ZCGPR' EQ '0').ZG190Q                     00590300
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00590400
                     AIF   (T'&ZCGPR NE 'N').ZG190Q  INVALID REG NAME   00590500
.ZG190P              ANOP  ,                                            00590600
                     AIF   (T'&ZCGPR NE 'N').ZG190R  NON NUMERIC        00590700
                     AIF   ('&ZCGPR' LT '2').ZG190Q                     00590800
                     AIF   ('&ZCGPR' LE '12').ZG190R                    00590900
.ZG190Q              ANOP  ,                                            00591000
&ZMS                 SETC  '"ENQTOKENTBL='                              00591100
&ZMS                 SETC  '&ZMS.&ENQTOKENTBL"'                         00591200
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00591300
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00591400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00591500
.ZG190R              ANOP  ,                                            00591600
.*----------------------------------------------------------------***   00591700
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00591800
                     AIF   (N'&RETURNTABLE LE 1).ZG193A  CK NUM         00591900
&ZMS                 SETC  '"RETURNTABLE='                              00592000
&ZMS                 SETC  '&ZMS.&RETURNTABLE"'                         00592100
&ZMS                 SETC  '&ZMS "RETURNTABLE"'                         00592200
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00592300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00592400
.ZG193A              ANOP  ,                                            00592500
.*-------------------------------------------------------------------   00592600
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00592700
                     AIF   (K'&RETURNTABLE(1) LE 0).ZG193C  NO PARM     00592800
&ZXRETURNTABLE       SETC  'OUTPUT'    SET OUTPUT                       00592900
&XRETURNTABLE        SETC  '&RETURNTABLE(1)'    SET XVARIABLE           00593000
                     AIF   (N'&RETURNTABLE GT 1).ZG193C                 00593100
&XRETURNTABLE        SETC  '&RETURNTABLE'       SET XVARIABLE           00593200
.ZG193C              ANOP  ,                                            00593300
.*-------------------------------------------------------------------   00593400
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00593500
                     AIF   (K'&ZXRETURNTABLE LE 0).ZG193R  NOT I/O      00593600
                     AIF   ('&XRETURNTABLE'(1,1) NE '(').ZG193R         00593700
&ZCGPR               SETC  '&XRETURNTABLE'(2,K'&XRETURNTABLE-2)         00593800
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG193P                00593900
                     AIF   (K'&ZCGPR GT 2).ZG193Q                       00594000
                     AIF   ('&ZCGPR' EQ '0').ZG193Q                     00594100
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00594200
                     AIF   (T'&ZCGPR NE 'N').ZG193Q  INVALID REG NAME   00594300
.ZG193P              ANOP  ,                                            00594400
                     AIF   (T'&ZCGPR NE 'N').ZG193R  NON NUMERIC        00594500
                     AIF   ('&ZCGPR' LT '2').ZG193Q                     00594600
                     AIF   ('&ZCGPR' LE '12').ZG193R                    00594700
.ZG193Q              ANOP  ,                                            00594800
&ZMS                 SETC  '"RETURNTABLE='                              00594900
&ZMS                 SETC  '&ZMS.&RETURNTABLE"'                         00595000
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00595100
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00595200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00595300
.ZG193R              ANOP  ,                                            00595400
.*------------------------------------------------------------------    00595500
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00595600
.ZG195               ANOP  ,                                            00595700
&ZXRESLIST           SETC  'INPUT'     SET IN/OUTPUT                    00595800
                     AIF   (K'&XRESLIST GT 0).ZG195E  VALID ARG         00595900
                     AIF   (T'&RESLIST EQ 'O').ZG195D  OMITTED          00596000
&ZASYSLNDX           SETA  0                                            00596100
.ZG195A              ANOP  ,           POSITIONAL MACRO KEY             00596200
&ZASYSLNDX           SETA  &ZASYSLNDX+1                                 00596300
                     AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG195C            00596400
&ZTLC                SETC 'RESLIST'                                     00596500
                     AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG195A   00596600
.ZG195B              ANOP  ,                                            00596700
&ZXRESLIST           SETC  ''          RESET IN/OUTPUT                  00596800
&ZMS                 SETC  'THE "RESLIST" KEY'                          00596900
&ZMS                 SETC  '&ZMS MUST CONTAIN ONE'                      00597000
                     MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'             00597100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00597200
                     AGO   .ZG195E                                      00597300
.ZG195C              ANOP  ,                                            00597400
&ZXRESLIST           SETC  ''          RESET IN/OUTPUT                  00597500
&ZMS                 SETC  '"RESLIST='                                  00597600
&ZMS                 SETC  '&ZMS.&RESLIST"'                             00597700
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00597800
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00597900
&ZMS                 SETC  '&ZMS "NO"'                                  00598000
&ZMS                 SETC  '&ZMS OR "YES".'                             00598100
                     MNOTE 8,' &ZMS '                                   00598200
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00598300
                     AGO   .ZG195E                                      00598400
.ZG195D              ANOP  ,                                            00598500
&XRESLIST            SETC  'NO'        SET DEFAULT KEYWORD              00598600
.ZG195E              ANOP  ,                                            00598700
.*----------------------------------------------------------------***   00598800
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00598900
                     AIF   (N'&OWNINGTTOKEN LE 1).ZG197A  CK NUM        00599000
&ZMS                 SETC  '"OWNINGTTOKEN='                             00599100
&ZMS                 SETC  '&ZMS.&OWNINGTTOKEN"'                        00599200
&ZMS                 SETC  '&ZMS "OWNINGTTOKEN"'                        00599300
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00599400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00599500
.ZG197A              ANOP  ,                                            00599600
.*-------------------------------------------------------------------   00599700
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00599800
&ZXOWNINGTTOKEN      SETC  'INPUT'     SET IN/OUTPUT                    00599900
&XOWNINGTTOKEN       SETC  'CURRENT_TASK'                               00600000
                     AIF   (K'&OWNINGTTOKEN(1) LE 0).ZG197B  PARM       00600100
&XOWNINGTTOKEN       SETC  '&OWNINGTTOKEN(1)'   SET XVARIABLE           00600200
                     AIF   (N'&OWNINGTTOKEN GT 1).ZG197B  MULTI         00600300
&XOWNINGTTOKEN       SETC  '&OWNINGTTOKEN'      SET XVARIABLE           00600400
.ZG197B              ANOP  ,                                            00600500
.*-------------------------------------------------------------------   00600600
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00600700
                     AIF   (K'&ZXOWNINGTTOKEN LE 0).ZG197R  NOT I/O     00600800
         AIF   ('&XOWNINGTTOKEN' EQ 'CURRENT_TASK').ZG197R              00600900
                     AIF   ('&XOWNINGTTOKEN'(1,1) NE '(').ZG197R        00601000
&ZCGPR               SETC  '&XOWNINGTTOKEN'(2,K'&XOWNINGTTOKEN-2)       00601100
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG197P                00601200
                     AIF   (K'&ZCGPR GT 2).ZG197Q                       00601300
                     AIF   ('&ZCGPR' EQ '0').ZG197Q                     00601400
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00601500
                     AIF   (T'&ZCGPR NE 'N').ZG197Q  INVALID REG NAME   00601600
.ZG197P              ANOP  ,                                            00601700
                     AIF   (T'&ZCGPR NE 'N').ZG197R  NON NUMERIC        00601800
                     AIF   ('&ZCGPR' LT '2').ZG197Q                     00601900
                     AIF   ('&ZCGPR' LE '12').ZG197R                    00602000
.ZG197Q              ANOP  ,                                            00602100
&ZMS                 SETC  '"OWNINGTTOKEN='                             00602200
&ZMS                 SETC  '&ZMS.&OWNINGTTOKEN"'                        00602300
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00602400
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'             00602500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00602600
.ZG197R              ANOP  ,                                            00602700
.*------------------------------------------------------------------    00602800
.***AG.KKCTL04 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00602900
.ZG199               ANOP  ,                                            00603000
&ZXREQUEST           SETC  'INPUT'     SET IN/OUTPUT                    00603100
                     AIF   (K'&XREQUEST GT 0).ZG199E  VALID ARG         00603200
                     AIF   (T'&REQUEST EQ 'O').ZG199D  OMITTED          00603300
&ZASYSLNDX           SETA  0                                            00603400
.ZG199A              ANOP  ,           POSITIONAL MACRO KEY             00603500
&ZASYSLNDX           SETA  &ZASYSLNDX+1                                 00603600
                     AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG199C            00603700
&ZTLC                SETC 'REQUEST'                                     00603800
                     AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG199A   00603900
.ZG199B              ANOP  ,                                            00604000
&ZXREQUEST           SETC  ''          RESET IN/OUTPUT                  00604100
&ZMS                 SETC  'THE "REQUEST" KEY'                          00604200
&ZMS                 SETC  '&ZMS MUST CONTAIN ONE'                      00604300
                     MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'             00604400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00604500
                     AGO   .ZG199E                                      00604600
.ZG199C              ANOP  ,                                            00604700
&ZXREQUEST           SETC  ''          RESET IN/OUTPUT                  00604800
&ZMS                 SETC  '"REQUEST='                                  00604900
&ZMS                 SETC  '&ZMS.&REQUEST"'                             00605000
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00605100
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00605200
&ZMS                 SETC  '&ZMS "OBTAIN",'                             00605300
&ZMS                 SETC  '&ZMS "CHANGE",'                             00605400
&ZMS                 SETC  '&ZMS OR "RELEASE".'                         00605500
                     MNOTE 8,' &ZMS '                                   00605600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00605700
                     AGO   .ZG199E                                      00605800
.ZG199D              ANOP  ,                                            00605900
&XREQUEST            SETC  'OBTAIN'    SET DEFAULT KEYWORD              00606000
.ZG199E              ANOP  ,                                            00606100
.*------------------------------------------------------------------    00606200
.***AG.KKCTL05 VALUE, RQD INPUT, ME KYWRDCTL -KEYWORD CONTROL           00606300
                     AIF   (K'&REQUEST(1) GT 0).ZG199F  PARM            00606400
&XREQUEST            SETC  ''          ENSURE NULL KEYWORD              00606500
&ZXREQUEST           SETC  ''          RESET IN/OUTPUT                  00606600
&ZMS                 SETC  'THE'                                        00606700
&ZMS                 SETC  '&ZMS "REQUEST" KEY AND ITS'                 00606800
&ZMS                 SETC  '&ZMS ARGUMENT ARE REQUIRED.'                00606900
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00607000
&ZMS                 SETC  '&ZMS "OBTAIN",'                             00607100
&ZMS                 SETC  '&ZMS "CHANGE",'                             00607200
&ZMS                 SETC  '&ZMS OR "RELEASE".'                         00607300
                     MNOTE 8,' &ZMS '                                   00607400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00607500
.ZG199F              ANOP  ,                                            00607600
.*------------------------------------------------------------------    00607700
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00607800
&XCOND               SETC  ''          INITIALIZE XVARIABLE             00607900
.*-------------------------------------------------------------------   00608000
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00608100
.ZG202               ANOP  ,                                            00608200
                     AIF   (K'&COND(1) LE 0).ZG202A                     00608300
&ZTLC                SETC 'NO'                                          00608400
                     AIF   ('&COND(1)' NE '&ZTLC').ZG203                00608500
&XCOND               SETC  'NO'        SET KEYWORD                      00608600
                     AIF   (N'&COND LE 1).ZG202A  CK NUM                00608700
&ZMS                 SETC  '"COND='                                     00608800
&ZMS                 SETC  '&ZMS.&COND"'                                00608900
&ZMS                 SETC  '&ZMS "COND"'                                00609000
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00609100
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00609200
.ZG202A              ANOP  ,                                            00609300
.*-------------------------------------------------------------------   00609400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00609500
.ZG203               ANOP  ,                                            00609600
&ZTLC                SETC 'YES'                                         00609700
                     AIF   ('&COND(1)' NE '&ZTLC').ZG204                00609800
&XCOND               SETC  'YES'       SET KEYWORD                      00609900
                     AIF   (N'&COND LE 1).ZG203A  CK NUM                00610000
&ZMS                 SETC  '"COND='                                     00610100
&ZMS                 SETC  '&ZMS.&COND"'                                00610200
&ZMS                 SETC  '&ZMS "COND"'                                00610300
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00610400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00610500
.ZG203A              ANOP  ,                                            00610600
.*------------------------------------------------------------------    00610700
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00610800
.ZG204               ANOP  ,                                            00610900
&ZXCOND              SETC  'INPUT'     SET IN/OUTPUT                    00611000
                     AIF   (K'&XCOND GT 0).ZG204E  VALID ARG            00611100
                     AIF   (T'&COND EQ 'O').ZG204D  OMITTED             00611200
&ZASYSLNDX           SETA  0                                            00611300
.ZG204A              ANOP  ,           POSITIONAL MACRO KEY             00611400
&ZASYSLNDX           SETA  &ZASYSLNDX+1                                 00611500
                     AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG204C            00611600
&ZTLC                SETC 'COND'                                        00611700
                     AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG204A   00611800
.ZG204B              ANOP  ,                                            00611900
&ZXCOND              SETC  ''          RESET IN/OUTPUT                  00612000
&ZMS                 SETC  'THE "COND" KEY'                             00612100
&ZMS                 SETC  '&ZMS MUST CONTAIN ONE'                      00612200
                     MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'             00612300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00612400
                     AGO   .ZG204E                                      00612500
.ZG204C              ANOP  ,                                            00612600
&ZXCOND              SETC  ''          RESET IN/OUTPUT                  00612700
&ZMS                 SETC  '"COND='                                     00612800
&ZMS                 SETC  '&ZMS.&COND"'                                00612900
&ZMS                 SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '    00613000
&ZMS                 SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'          00613100
&ZMS                 SETC  '&ZMS "NO"'                                  00613200
&ZMS                 SETC  '&ZMS OR "YES".'                             00613300
                     MNOTE 8,' &ZMS '                                   00613400
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00613500
                     AGO   .ZG204E                                      00613600
.ZG204D              ANOP  ,                                            00613700
&XCOND               SETC  'NO'        SET DEFAULT KEYWORD              00613800
.ZG204E              ANOP  ,                                            00613900
.*----------------------------------------------------------------***   00614000
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00614100
                     AIF   (N'&RETCODE LE 1).ZG206A  CK NUM             00614200
&ZMS                 SETC  '"RETCODE='                                  00614300
&ZMS                 SETC  '&ZMS.&RETCODE"'                             00614400
&ZMS                 SETC  '&ZMS "RETCODE"'                             00614500
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00614600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00614700
.ZG206A              ANOP  ,                                            00614800
.*-------------------------------------------------------------------   00614900
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00615000
                     AIF   (K'&RETCODE(1) LE 0).ZG206C  NO PARM         00615100
&ZXRETCODE           SETC  'OUTPUT'    SET OUTPUT                       00615200
&XRETCODE            SETC  '&RETCODE(1)'        SET XVARIABLE           00615300
                     AIF   (N'&RETCODE GT 1).ZG206C                     00615400
&XRETCODE            SETC  '&RETCODE'  SET XVARIABLE                    00615500
.ZG206C              ANOP  ,                                            00615600
.*-------------------------------------------------------------------   00615700
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00615800
                     AIF   (K'&ZXRETCODE LE 0).ZG206R  NOT I/O          00615900
                     AIF   ('&XRETCODE'(1,1) NE '(').ZG206R             00616000
&ZCGPR               SETC  '&XRETCODE'(2,K'&XRETCODE-2)                 00616100
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG206P                00616200
                     AIF   (K'&ZCGPR GT 2).ZG206Q                       00616300
                     AIF   ('&ZCGPR' EQ '0').ZG206Q                     00616400
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00616500
                     AIF   (T'&ZCGPR NE 'N').ZG206Q  INVALID REG NAME   00616600
.ZG206P              ANOP  ,                                            00616700
                     AIF   (T'&ZCGPR NE 'N').ZG206R  NON NUMERIC        00616800
                     AIF   ('&ZCGPR' EQ '15').ZG206R                    00616900
                     AIF   ('&ZCGPR' LT '2').ZG206Q                     00617000
                     AIF   ('&ZCGPR' LE '12').ZG206R                    00617100
.ZG206Q              ANOP  ,                                            00617200
&ZMS                 SETC  '"RETCODE='                                  00617300
&ZMS                 SETC  '&ZMS.&RETCODE"'                             00617400
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00617500
                     MNOTE 8,' &ZMS IN THE RANGE (2)-(12) OR (15).'     00617600
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00617700
.ZG206R              ANOP  ,                                            00617800
.*----------------------------------------------------------------***   00617900
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00618000
                     AIF   (N'&RSNCODE LE 1).ZG209A  CK NUM             00618100
&ZMS                 SETC  '"RSNCODE='                                  00618200
&ZMS                 SETC  '&ZMS.&RSNCODE"'                             00618300
&ZMS                 SETC  '&ZMS "RSNCODE"'                             00618400
                     MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'          00618500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00618600
.ZG209A              ANOP  ,                                            00618700
.*-------------------------------------------------------------------   00618800
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00618900
                     AIF   (K'&RSNCODE(1) LE 0).ZG209C  NO PARM         00619000
&ZXRSNCODE           SETC  'OUTPUT'    SET OUTPUT                       00619100
&XRSNCODE            SETC  '&RSNCODE(1)'        SET XVARIABLE           00619200
                     AIF   (N'&RSNCODE GT 1).ZG209C                     00619300
&XRSNCODE            SETC  '&RSNCODE'  SET XVARIABLE                    00619400
.ZG209C              ANOP  ,                                            00619500
.*-------------------------------------------------------------------   00619600
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00619700
                     AIF   (K'&ZXRSNCODE LE 0).ZG209R  NOT I/O          00619800
                     AIF   ('&XRSNCODE'(1,1) NE '(').ZG209R             00619900
&ZCGPR               SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                 00620000
                     AIF   ('&ZCGPR'(1,1) NE '0').ZG209P                00620100
                     AIF   (K'&ZCGPR GT 2).ZG209Q                       00620200
                     AIF   ('&ZCGPR' EQ '0').ZG209R                     00620300
&ZCGPR               SETC  '&ZCGPR'(2,1)                                00620400
                     AIF   (T'&ZCGPR NE 'N').ZG209Q  INVALID REG NAME   00620500
.ZG209P              ANOP  ,                                            00620600
                     AIF   (T'&ZCGPR NE 'N').ZG209R  NON NUMERIC        00620700
                     AIF   ('&ZCGPR' EQ '0').ZG209R                     00620800
                     AIF   ('&ZCGPR' LT '2').ZG209Q                     00620900
                     AIF   ('&ZCGPR' LE '12').ZG209R                    00621000
.ZG209Q              ANOP  ,                                            00621100
&ZMS                 SETC  '"RSNCODE='                                  00621200
&ZMS                 SETC  '&ZMS.&RSNCODE"'                             00621300
&ZMS                 SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'    00621400
                     MNOTE 8,' &ZMS IN THE RANGE (0) OR (2)-(12).'      00621500
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00621600
.ZG209R              ANOP  ,                                            00621700
.******************************************************************     00621800
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00621900
.******************************************************************     00622000
                     ACTR  10000                                        00622100
.*----------------------------------------------------------------***   00622200
.***AH.P02 EXTRA POSITIONALS                                            00622300
                     AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS         00622400
                     AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL         00622500
                     AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL     00622600
                     AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL      00622700
.ZGLISTX1            ANOP  ,                                            00622800
&ZCVAL               SETC  ''          ERROR FIELD                      00622900
&ZAWRK               SETA  0           POSITIONAL NUMBER                00623000
.ZGLIST2             ANOP  ,                                            00623100
&ZAWRK               SETA  &ZAWRK+1    NEXT POSITIONAL                  00623200
                     AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE         00623300
&ZCVAL               SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA              00623400
                     AGO   .ZGLIST2                                     00623500
.*                                                                      00623600
.ZGLIST3             ANOP  ,                                            00623700
&ZCVAL               SETC '&ZCVAL'(2,K'&ZCVAL-1)  STRIP COMMA           00623800
&ZMS                 SETC  'POSITIONAL ARGUMENT(S),'                    00623900
&ZMS                 SETC  '&ZMS "&ZCVAL"'                              00624000
&ZMS                 SETC  '&ZMS CANNOT BE USED.'                       00624100
&ZMS                 SETC  '&ZMS NO POSITIONAL ARGUMENTS'               00624200
                     MNOTE 8,' &ZMS ARE ALLOWED.'                       00624300
&ZMACRET             SETA  8           SET MACRO ERROR RETURN CODE      00624400
.ZGLISTX             ANOP  ,                                            00624500
&ZASYSLNDX           SETA  0                                            00624600
.*-------------------------------------------------------------------   00624700
.***AG.MF04 MF=(SLE)                                                    00624800
.ZGMFX               ANOP  ,           END OF FULL SYNTAX CHECK         00624900
.*******************************************************************    00625000
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00625100
.*******************************************************************    00625200
                     AIF   (&ZMACRET NE 0).ZLX2  ERROR DETECTED         00625300
.*******************************************************************    00625400
.***AE.01  START OF ISGENQ MACRO CODE                                   00625500
.*******************************************************************    00625600
                     LCLC  &M0M0001                 NAME                00625700
&M0M0001             SETC  '&XLABEL'                SET NAME            00625800
                     AIF   (K'&XLABEL NE 0).XLAB2                       00625900
&M0M0001             SETC  'M00M&SYSNDX'            DEFAULT NAME        00626000
.*                                                                      00626100
.XLAB2               ANOP  ,                                            00626200
                     AIF   ('&XMF' EQ 'L').XLAB3                        00626300
&M0M0001 DS    0H                             ISGENQ-2                  00626400
.XLAB3               ANOP  ,                                            00626500
.*******************************************************************    00626600
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00626700
.*******************************************************************    00626800
              PUSH  PRINT                                               00626900
                     AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON   00627000
                     PRINT OFF         ++ PR01                          00627100
                     AGO   .ZPRNTXX                                     00627200
.ZPRINTX             PRINT ON                                           00627300
.ZPRNTXX             ANOP  ,                                            00627400
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00627500
         AIF   ('&XMF' EQ 'L').ZSKIPCHECK IF LIST FORM SKIP CHECKING    00627600
.* Check for COND and return code dependencies                          00627700
         AIF ('&XCOND' NE 'NO').ZCONDY                                  00627800
         AIF ('&XRETCODE' NE '').ZCONDNERR                              00627900
         AIF ('&XRSNCODE' NE '').ZCONDNERR                              00628000
         AIF ('&XRETURNTABLE' EQ '').ZCONDEND                           00628100
.ZCONDNERR ANOP ,                                                       00628200
&ZMS     SETC  'COND=NO is mutually exclusive with'                     00628300
         MNOTE 8,' &ZMS RETCODE, RSNCODE and RETURNTABLE.'              00628400
&ZMACRET SETA  8           SET MACRO ERROR RETURN CODE                  00628500
         AGO .ZCONDEND                                                  00628600
.ZCONDY  ANOP ,                                                         00628700
         AIF ('&XRETCODE' EQ '').ZCONDYERR                              00628800
         AIF ('&XRSNCODE' EQ '').ZCONDYERR                              00628900
         AIF ('&XRESLIST' NE 'YES').ZCONDEND                            00629000
         AIF ('&XRETURNTABLE' NE '').ZCONDEND                           00629100
.ZCONDYERR ANOP ,                                                       00629200
&ZMS     SETC  'When COND=YES, RETCODE and RSNCODE (and'                00629300
&ZMS     SETC  ' &ZMS RETURNTABLE, if RESLIST=YES) are'                 00629400
         MNOTE 8,' &ZMS required keywords.'                             00629500
&ZMACRET SETA  8           SET MACRO ERROR RETURN CODE                  00629600
.ZCONDEND ANOP ,                                                        00629700
.* Check for more COND dependencies                                     00629800
         AIF ('&XCOND' NE 'NO').ZCONDEND3                               00629900
         AIF ('&XWAITTYPE' NE 'ECB').ZCONDEND2                     @P2C 00630000
&ZMS     SETC  'COND=NO and WAITTYPE=ECB are'                      @P2C 00630100
         MNOTE 8,' &ZMS mutually exclusive.'                       @P2C 00630200
&ZMACRET SETA  8           SET MACRO ERROR RETURN CODE                  00630300
.ZCONDEND2 ANOP ,                                                       00630400
         AIF ('&XTEST' NE 'YES').ZCONDEND3                         @P2A 00630500
&ZMS     SETC  'COND=NO and TEST=YES are mutually'                 @P2A 00630600
         MNOTE 8,' &ZMS exclusive.'                                @P2A 00630700
&ZMACRET SETA  8           SET MACRO ERROR RETURN CODE             @P2A 00630800
.ZCONDEND3 ANOP ,                                                  @P2A 00630900
.* Check for ANSAREA/ANSLEN                                             00631000
         AIF ('&XANSAREA' EQ '').ZANSNO1                                00631100
         AIF ('&XANSLEN' EQ 'NO_ANSLEN').ZANSERR1                  @P1A 00631200
         AIF ('&XANSLEN' EQ '').ZANSERR1                           @P1C 00631300
         AGO .ZANSEND1                                                  00631400
.ZANSNO1 ANOP ,                                                         00631500
         AIF ('&XANSLEN' EQ 'NO_ANSLEN').ZANSEND1                  @P1A 00631600
         AIF ('&XANSLEN' EQ '').ZANSEND1                                00631700
.ZANSERR1 ANOP ,                                                        00631800
&ZMS     SETC  'ANSAREA and ANSLEN keywords'                            00631900
         MNOTE 8,' &ZMS require each other.'                            00632000
&ZMACRET SETA  8           SET MACRO ERROR RETURN CODE                  00632100
.ZANSEND1 ANOP ,                                                        00632200
.* Check for RESERVEVOLUME/OWNINGTTOKEN                            @P9A 00632300
         AIF ('&XRESERVEVOLUME' NE 'YES').ZRESNO1                       00632400
         AIF ('&XOWNINGTTOKEN' EQ 'CURRENT_TASK').ZRESNO1               00632500
         AIF ('&XOWNINGTTOKEN' EQ '').ZRESNO1                           00632600
&ZMS     SETC  'RESERVEVOLUME=YES and OWNINGTTOKEN'                     00632700
         MNOTE 8,' &ZMS are mutually exclusive.'                        00632800
&ZMACRET SETA  8           SET MACRO ERROR RETURN CODE                  00632900
.ZRESNO1 ANOP ,                                                         00633000
.ZSKIPCHECK ANOP ,                                                      00633100
.* Create COND and REQUEST constant declares                       @P3A 00633200
         LCLC  &THEPLIST                                                00633300
&THEPLIST  SETC '&XMFCTRL'                                              00633400
         AIF   ('&XMF' EQ 'L').ZPLISTSET                                00633500
&THEPLIST  SETC  '#Z'.'&SYSNDX'.'A'                                @PEC 00633600
.ZPLISTSET ANOP ,                                                       00633700
&THEPLIST._XCOND_NO         EQU X'01'                                   00633800
&THEPLIST._XCOND_YES        EQU X'02'                                   00633900
&THEPLIST._XREQUEST_OBTAIN  EQU X'01'                                   00634000
&THEPLIST._XREQUEST_CHANGE  EQU X'02'                                   00634100
&THEPLIST._XREQUEST_RELEASE EQU X'03'                                   00634200
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00634300
.********************************************************************   00634400
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00634500
.********************************************************************   00634600
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00634700
                      LCLA  &ZOPN1         INVOCATION INDEX             00634800
                      LCLC  &ZOPL(4095)    LABEL                        00634900
                      LCLC  &ZOPO(4095)    OPERATION                    00635000
                      LCLC  &ZOPV(4095)    VALUE                        00635100
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00635200
.*                                                                      00635300
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00635400
.******************************************************************     00635500
.***AL.L10 ISGENQ FMT=LIST MF=S!L PARAMETERS                            00635600
.******************************************************************     00635700
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00635800
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00635900
&XMFCTRL              SETC  '#Z'.'&SYSNDX'.'A'                          00636000
&XMFATTR              SETC  '0D'                                        00636100
.*                                                                      00636200
&ZOPN                 SETA  &ZOPN+1                                     00636300
&ZOPL(&ZOPN)          SETC  ' '                                         00636400
&ZOPO(&ZOPN)          SETC  'CNOP'                                      00636500
&ZOPV(&ZOPN)          SETC  '4,8'                                       00636600
&ZOPN                 SETA  &ZOPN+1                                     00636700
&ZOPL(&ZOPN)          SETC  ' '                                         00636800
&ZOPO(&ZOPN)          SETC  'BRAS'                                      00636900
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              00637000
&ZOPD(&ZOPN)          SETC  '++ ISGENQ ARG PARMS'                       00637100
.*                                                                      00637200
&ZOPN                 SETA  &ZOPN+1                                     00637300
&ZOPL(&ZOPN)          SETC  ' '                                         00637400
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00637500
&ZOPV(&ZOPN)          SETC  '1'                                         00637600
&ZOPD(&ZOPN)          SETC  ' '                                         00637700
.*                                                                      00637800
.ZLMFSL2              ANOP  ,                                           00637900
.*-------------------------------------------------------------------   00638000
.***AM.L00  ISGENQ FMT=LIST name                                        00638100
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00638200
&ZOPN                 SETA &ZOPN+1                                      00638300
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00638400
&ZOPO(&ZOPN)          SETC 'EQU'                                        00638500
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00638600
&ZOPD(&ZOPN)          SETC '++ ISGENQ NAME'                             00638700
.ZLMFSL2M             ANOP  ,                                           00638800
.*-------------------------------------------------------------------   00638900
.***AM.L01  ISGENQ FMT=LIST PARAMETERS                                  00639000
&ZOPN                 SETA &ZOPN+1                                      00639100
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00639200
&ZOPO(&ZOPN)          SETC 'DS'                                         00639300
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00639400
&ZOPD(&ZOPN)          SETC '++ ISGENQ PARM LIST'                        00639500
.*-------------------------------------------------------------------   00639600
.***AM.L02 XVERSION XL1                                                 00639700
&ZOPN                 SETA &ZOPN+1                                      00639800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00639900
&ZOPO(&ZOPN)          SETC 'DS'                                         00640000
&ZOPV(&ZOPN)          SETC 'XL1'                                        00640100
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00640200
.*-------------------------------------------------------------------   00640300
.***AM.L09  XRSV0000 CL1                                                00640400
&ZOPN                 SETA &ZOPN+1                                      00640500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0000'                         00640600
&ZOPO(&ZOPN)          SETC 'DS'                                         00640700
&ZOPV(&ZOPN)          SETC 'CL1'                                        00640800
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00640900
.*-------------------------------------------------------------------   00641000
.***AM.L05 XSCOPE XL1                                                   00641100
&ZOPN                 SETA &ZOPN+1                                      00641200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSCOPE'                           00641300
&ZOPO(&ZOPN)          SETC 'DS'                                         00641400
&ZOPV(&ZOPN)          SETC 'XL1'                                        00641500
&ZOPD(&ZOPN)          SETC '++ &ZXSCOPE XSCOPE'                         00641600
.*                                                                      00641700
&ZOPN                 SETA  &ZOPN+1                                     00641800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSCOPE_STEP'                     00641900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00642000
&ZOPV(&ZOPN)          SETC  '1'                                         00642100
&ZOPD(&ZOPN)          SETC  '++ XSCOPE.'                                00642200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).STEP'                         00642300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00642400
.*                                                                      00642500
&ZOPN                 SETA  &ZOPN+1                                     00642600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSCOPE_SYSTEM'                   00642700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00642800
&ZOPV(&ZOPN)          SETC  '2'                                         00642900
&ZOPD(&ZOPN)          SETC  '++ XSCOPE.'                                00643000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SYSTEM'                       00643100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00643200
.*                                                                      00643300
&ZOPN                 SETA  &ZOPN+1                                     00643400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSCOPE_SYSTEMS'                  00643500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00643600
&ZOPV(&ZOPN)          SETC  '3'                                         00643700
&ZOPD(&ZOPN)          SETC  '++ XSCOPE.'                                00643800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SYSTEMS'                      00643900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00644000
.*                                                                      00644100
&ZOPN                 SETA  &ZOPN+1                                     00644200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSCOPE_SYSPLEX'                  00644300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00644400
&ZOPV(&ZOPN)          SETC  '3'                                         00644500
&ZOPD(&ZOPN)          SETC  '++ XSCOPE.'                                00644600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SYSPLEX'                      00644700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00644800
.*-------------------------------------------------------------------   00644900
.***AM.L05 XCONTROL XL1                                                 00645000
&ZOPN                 SETA &ZOPN+1                                      00645100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCONTROL'                         00645200
&ZOPO(&ZOPN)          SETC 'DS'                                         00645300
&ZOPV(&ZOPN)          SETC 'XL1'                                        00645400
&ZOPD(&ZOPN)          SETC '++ &ZXCONTROL XCONTROL'                     00645500
.*                                                                      00645600
&ZOPN                 SETA  &ZOPN+1                                     00645700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XCONTROL_SHARED'                 00645800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00645900
&ZOPV(&ZOPN)          SETC  '1'                                         00646000
&ZOPD(&ZOPN)          SETC  '++ XCONTROL.'                              00646100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).SHARED'                       00646200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00646300
.*                                                                      00646400
&ZOPN                 SETA  &ZOPN+1                                     00646500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XCONTROL_EXCLUSIVE'              00646600
&ZOPO(&ZOPN)          SETC  'EQU'                                       00646700
&ZOPV(&ZOPN)          SETC  '2'                                         00646800
&ZOPD(&ZOPN)          SETC  '++ XCONTROL.'                              00646900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).EXCLUSIVE'                    00647000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00647100
.*-------------------------------------------------------------------   00647200
.***AM.L03 XFLAGS1 BL.8                                                 00647300
&ZOPN                 SETA &ZOPN+1                                      00647400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFLAGS1'                          00647500
&ZOPO(&ZOPN)          SETC 'DS'                                         00647600
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00647700
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00647800
.*                                                                      00647900
&ZOPN                 SETA  &ZOPN+1                                     00648000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XTEST_YES'                       00648100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00648200
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00648300
&ZOPD(&ZOPN)          SETC  '++ XTEST.'                                 00648400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00648500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00648600
.*                                                                      00648700
&ZOPN                 SETA  &ZOPN+1                                     00648800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XCONTENTIONACT_FAIL'             00648900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00649000
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             00649100
&ZOPD(&ZOPN)          SETC  '++ XCONTENTIONACT.'                        00649200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).FAIL'                         00649300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00649400
.*                                                                      00649500
&ZOPN                 SETA  &ZOPN+1                                     00649600
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XWAITTYPE_ECB'                   00649700
&ZOPO(&ZOPN)          SETC  'EQU'                                       00649800
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             00649900
&ZOPD(&ZOPN)          SETC  '++ XWAITTYPE.'                             00650000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).ECB'                          00650100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00650200
.*                                                                      00650300
&ZOPN                 SETA  &ZOPN+1                                     00650400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XRESLIST_YES'                    00650500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00650600
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             00650700
&ZOPD(&ZOPN)          SETC  '++ XRESLIST.'                              00650800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00650900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00651000
.*                                                                      00651100
&ZOPN                 SETA  &ZOPN+1                                     00651200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XENQMAX_NO'                      00651300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00651400
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             00651500
&ZOPD(&ZOPN)          SETC  '++ XENQMAX.'                               00651600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).NO'                           00651700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00651800
.*                                                                      00651900
&ZOPN                 SETA  &ZOPN+1                                     00652000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XRNL_NO'                         00652100
&ZOPO(&ZOPN)          SETC  'EQU'                                       00652200
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             00652300
&ZOPD(&ZOPN)          SETC  '++ XRNL.'                                  00652400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).NO'                           00652500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00652600
.*                                                                      00652700
&ZOPN                 SETA  &ZOPN+1                                     00652800
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XQNAME_DO_NOT_OVERRIDE'          00652900
&ZOPO(&ZOPN)          SETC  'EQU'                                       00653000
&ZOPV(&ZOPN)          SETC  'B''00000001'''                             00653100
&ZOPD(&ZOPN)          SETC  '++ XQNAME.'                                00653200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DO_NOT_OVERRIDE'              00653300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00653400
.*-------------------------------------------------------------------   00653500
.***AM.L03 XFLAGS2 BL.8                                                 00653600
&ZOPN                 SETA &ZOPN+1                                      00653700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFLAGS2'                          00653800
&ZOPO(&ZOPN)          SETC 'DS'                                         00653900
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00654000
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00654100
.*                                                                      00654200
&ZOPN                 SETA  &ZOPN+1                                     00654300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XRESERVEVOLUME_YES'              00654400
&ZOPO(&ZOPN)          SETC  'EQU'                                       00654500
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00654600
&ZOPD(&ZOPN)          SETC  '++ XRESERVEVOLUME.'                        00654700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00654800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00654900
.*                                                                      00655000
&ZOPN                 SETA  &ZOPN+1                                     00655100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSYNCHRES_YES'                   00655200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00655300
&ZOPV(&ZOPN)          SETC  'B''01000000'''                             00655400
&ZOPD(&ZOPN)          SETC  '++ XSYNCHRES.'                             00655500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00655600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00655700
.*                                                                      00655800
&ZOPN                 SETA  &ZOPN+1                                     00655900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSYNCHRES_NO'                    00656000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00656100
&ZOPV(&ZOPN)          SETC  'B''00100000'''                             00656200
&ZOPD(&ZOPN)          SETC  '++ XSYNCHRES.'                             00656300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).NO'                           00656400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00656500
.*                                                                      00656600
&ZOPN                 SETA  &ZOPN+1                                     00656700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XCONTROL_DO_NOT_OVERRIDE'        00656800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00656900
&ZOPV(&ZOPN)          SETC  'B''00010000'''                             00657000
&ZOPD(&ZOPN)          SETC  '++ XCONTROL.'                              00657100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DO_NOT_OVERRIDE'              00657200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00657300
.*                                                                      00657400
&ZOPN                 SETA  &ZOPN+1                                     00657500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSCOPE_DO_NOT_OVERRIDE'          00657600
&ZOPO(&ZOPN)          SETC  'EQU'                                       00657700
&ZOPV(&ZOPN)          SETC  'B''00001000'''                             00657800
&ZOPD(&ZOPN)          SETC  '++ XSCOPE.'                                00657900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DO_NOT_OVERRIDE'              00658000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00658100
.*                                                                      00658200
&ZOPN                 SETA  &ZOPN+1                                     00658300
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XRNL_DO_NOT_OVERRIDE'            00658400
&ZOPO(&ZOPN)          SETC  'EQU'                                       00658500
&ZOPV(&ZOPN)          SETC  'B''00000100'''                             00658600
&ZOPD(&ZOPN)          SETC  '++ XRNL.'                                  00658700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DO_NOT_OVERRIDE'              00658800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00658900
.*                                                                      00659000
&ZOPN                 SETA  &ZOPN+1                                     00659100
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XSYNCHRES_DO_NOT_OVERRIDE'       00659200
&ZOPO(&ZOPN)          SETC  'EQU'                                       00659300
&ZOPV(&ZOPN)          SETC  'B''00000010'''                             00659400
&ZOPD(&ZOPN)          SETC  '++ XSYNCHRES.'                             00659500
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DO_NOT_OVERRIDE'              00659600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00659700
.*                                                                      00659800
&ZOPN                 SETA  &ZOPN+1                                     00659900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XRNAME_DO_NOT_OVERRIDE'          00660000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00660100
&ZOPV(&ZOPN)          SETC  'B''00000001'''                             00660200
&ZOPD(&ZOPN)          SETC  '++ XRNAME.'                                00660300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DO_NOT_OVERRIDE'              00660400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00660500
.*-------------------------------------------------------------------   00660600
.***AM.L03 XFLAGS3 BL.8                                                 00660700
&ZOPN                 SETA &ZOPN+1                                      00660800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFLAGS3'                          00660900
&ZOPO(&ZOPN)          SETC 'DS'                                         00661000
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00661100
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00661200
.*                                                                      00661300
&ZOPN                 SETA  &ZOPN+1                                     00661400
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._KEYUSED_CONTROL'                 00661500
&ZOPO(&ZOPN)          SETC  'EQU'                                       00661600
&ZOPV(&ZOPN)          SETC  'B''10000000'''                             00661700
&ZOPD(&ZOPN)          SETC  '++ KEYUSED.'                               00661800
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).CONTROL'                      00661900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00662000
.*                                                                      00662100
&ZOPN                 SETA  &ZOPN+1                                     00662200
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XRNAMELEN_DO_NOT_OVERRIDE'       00662300
&ZOPO(&ZOPN)          SETC  'EQU'                                       00662400
&ZOPV(&ZOPN)          SETC  'B''00000001'''                             00662500
&ZOPD(&ZOPN)          SETC  '++ XRNAMELEN.'                             00662600
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DO_NOT_OVERRIDE'              00662700
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00662800
.*-------------------------------------------------------------------   00662900
.***AM.L03 XFLAGS4 BL.8                                                 00663000
&ZOPN                 SETA &ZOPN+1                                      00663100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XFLAGS4'                          00663200
&ZOPO(&ZOPN)          SETC 'DS'                                         00663300
&ZOPV(&ZOPN)          SETC 'BL.8'                                       00663400
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00663500
.*                                                                      00663600
&ZOPN                 SETA  &ZOPN+1                                     00663700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XUCB@_DO_NOT_OVERRIDE'           00663800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00663900
&ZOPV(&ZOPN)          SETC  'B''00000001'''                             00664000
&ZOPD(&ZOPN)          SETC  '++ XUCB@.'                                 00664100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).DO_NOT_OVERRIDE'              00664200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00664300
.*-------------------------------------------------------------------   00664400
.***AM.L09 ADDR3164 XRESTABLE AD                                        00664500
&ZOPN                 SETA &ZOPN+1                                      00664600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRESTABLE_ADDR3164'               00664700
&ZOPO(&ZOPN)          SETC 'DS'                                         00664800
&ZOPV(&ZOPN)          SETC 'AD'                                         00664900
&ZOPD(&ZOPN)          SETC '++ &ZXRESTABLE ADDR3164'                    00665000
.*-------------------------------------------------------------------   00665100
.***AM.L09 ADDR3164 XENQTOKEN AD                                        00665200
&ZOPN                 SETA &ZOPN+1                                      00665300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XENQTOKEN_ADDR3164'               00665400
&ZOPO(&ZOPN)          SETC 'DS'                                         00665500
&ZOPV(&ZOPN)          SETC 'AD'                                         00665600
&ZOPD(&ZOPN)          SETC '++ &ZXENQTOKEN ADDR3164'                    00665700
.*-------------------------------------------------------------------   00665800
.***AM.L09 ADDR3164 XRETURNTABLE AD                                     00665900
&ZOPN                 SETA &ZOPN+1                                      00666000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRETURNTABLE_ADDR3164'            00666100
&ZOPO(&ZOPN)          SETC 'DS'                                         00666200
&ZOPV(&ZOPN)          SETC 'AD'                                         00666300
&ZOPD(&ZOPN)          SETC '++ &ZXRETURNTABLE ADDR3164'                 00666400
.*-------------------------------------------------------------------   00666500
.***AM.L09 ADDR3164 XENQTOKENTBL AD                                     00666600
&ZOPN                 SETA &ZOPN+1                                      00666700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XENQTOKENTBL_ADDR3164'            00666800
&ZOPO(&ZOPN)          SETC 'DS'                                         00666900
&ZOPV(&ZOPN)          SETC 'AD'                                         00667000
&ZOPD(&ZOPN)          SETC '++ &ZXENQTOKENTBL ADDR3164'                 00667100
.*-------------------------------------------------------------------   00667200
.***AM.L09 ADDR3164 XRNAME AD                                           00667300
&ZOPN                 SETA &ZOPN+1                                      00667400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRNAME_ADDR3164'                  00667500
&ZOPO(&ZOPN)          SETC 'DS'                                         00667600
&ZOPV(&ZOPN)          SETC 'AD'                                         00667700
&ZOPD(&ZOPN)          SETC '++ &ZXRNAME ADDR3164'                       00667800
.*-------------------------------------------------------------------   00667900
.***AM.L09 ADDR3164 XANSAREA AD                                         00668000
&ZOPN                 SETA &ZOPN+1                                      00668100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XANSAREA_ADDR3164'                00668200
&ZOPO(&ZOPN)          SETC 'DS'                                         00668300
&ZOPV(&ZOPN)          SETC 'AD'                                         00668400
&ZOPD(&ZOPN)          SETC '++ &ZXANSAREA ADDR3164'                     00668500
.*-------------------------------------------------------------------   00668600
.***AM.L09  XQNAME CL8                                                  00668700
&ZOPN                 SETA &ZOPN+1                                      00668800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XQNAME'                           00668900
&ZOPO(&ZOPN)          SETC 'DS'                                         00669000
&ZOPV(&ZOPN)          SETC 'CL8'                                        00669100
&ZOPD(&ZOPN)          SETC '++ &ZXQNAME '                               00669200
.*-------------------------------------------------------------------   00669300
.***AM.L09  XOWNINGTTOKEN CL16                                          00669400
&ZOPN                 SETA &ZOPN+1                                      00669500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XOWNINGTTOKEN'                    00669600
&ZOPO(&ZOPN)          SETC 'DS'                                         00669700
&ZOPV(&ZOPN)          SETC 'CL16'                                       00669800
&ZOPD(&ZOPN)          SETC '++ &ZXOWNINGTTOKEN '                        00669900
.*-------------------------------------------------------------------   00670000
.***AM.L09 ALET XRESTABLE F                                             00670100
&ZOPN                 SETA &ZOPN+1                                      00670200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRESTABLE_ALET'                   00670300
&ZOPO(&ZOPN)          SETC 'DS'                                         00670400
&ZOPV(&ZOPN)          SETC 'F'                                          00670500
&ZOPD(&ZOPN)          SETC '++ &ZXRESTABLE ALET'                        00670600
.*-------------------------------------------------------------------   00670700
.***AM.L09 ALET XENQTOKEN F                                             00670800
&ZOPN                 SETA &ZOPN+1                                      00670900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XENQTOKEN_ALET'                   00671000
&ZOPO(&ZOPN)          SETC 'DS'                                         00671100
&ZOPV(&ZOPN)          SETC 'F'                                          00671200
&ZOPD(&ZOPN)          SETC '++ &ZXENQTOKEN ALET'                        00671300
.*-------------------------------------------------------------------   00671400
.***AM.L09 ALET XRETURNTABLE F                                          00671500
&ZOPN                 SETA &ZOPN+1                                      00671600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRETURNTABLE_ALET'                00671700
&ZOPO(&ZOPN)          SETC 'DS'                                         00671800
&ZOPV(&ZOPN)          SETC 'F'                                          00671900
&ZOPD(&ZOPN)          SETC '++ &ZXRETURNTABLE ALET'                     00672000
.*-------------------------------------------------------------------   00672100
.***AM.L09 ALET XENQTOKENTBL F                                          00672200
&ZOPN                 SETA &ZOPN+1                                      00672300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XENQTOKENTBL_ALET'                00672400
&ZOPO(&ZOPN)          SETC 'DS'                                         00672500
&ZOPV(&ZOPN)          SETC 'F'                                          00672600
&ZOPD(&ZOPN)          SETC '++ &ZXENQTOKENTBL ALET'                     00672700
.*-------------------------------------------------------------------   00672800
.***AM.L09 ALET XRNAME F                                                00672900
&ZOPN                 SETA &ZOPN+1                                      00673000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRNAME_ALET'                      00673100
&ZOPO(&ZOPN)          SETC 'DS'                                         00673200
&ZOPV(&ZOPN)          SETC 'F'                                          00673300
&ZOPD(&ZOPN)          SETC '++ &ZXRNAME ALET'                           00673400
.*-------------------------------------------------------------------   00673500
.***AM.L09 ALET XANSAREA F                                              00673600
&ZOPN                 SETA &ZOPN+1                                      00673700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XANSAREA_ALET'                    00673800
&ZOPO(&ZOPN)          SETC 'DS'                                         00673900
&ZOPV(&ZOPN)          SETC 'F'                                          00674000
&ZOPD(&ZOPN)          SETC '++ &ZXANSAREA ALET'                         00674100
.*-------------------------------------------------------------------   00674200
.***AM.L09  XANSLEN F                                                   00674300
&ZOPN                 SETA &ZOPN+1                                      00674400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XANSLEN'                          00674500
&ZOPO(&ZOPN)          SETC 'DS'                                         00674600
&ZOPV(&ZOPN)          SETC 'F'                                          00674700
&ZOPD(&ZOPN)          SETC '++ &ZXANSLEN '                              00674800
.*-------------------------------------------------------------------   00674900
.***AM.L09  XECB@ A                                                     00675000
&ZOPN                 SETA &ZOPN+1                                      00675100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XECB@'                            00675200
&ZOPO(&ZOPN)          SETC 'DS'                                         00675300
&ZOPV(&ZOPN)          SETC 'A'                                          00675400
&ZOPD(&ZOPN)          SETC '++ &ZXECB@ '                                00675500
.*-------------------------------------------------------------------   00675600
.***AM.L09  XUCB@ A                                                     00675700
&ZOPN                 SETA &ZOPN+1                                      00675800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XUCB@'                            00675900
&ZOPO(&ZOPN)          SETC 'DS'                                         00676000
&ZOPV(&ZOPN)          SETC 'A'                                          00676100
&ZOPD(&ZOPN)          SETC '++ &ZXUCB@ '                                00676200
.*-------------------------------------------------------------------   00676300
.***AM.L09  XNUMRES XL2                                                 00676400
&ZOPN                 SETA &ZOPN+1                                      00676500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XNUMRES'                          00676600
&ZOPO(&ZOPN)          SETC 'DS'                                         00676700
&ZOPV(&ZOPN)          SETC 'XL2'                                        00676800
&ZOPD(&ZOPN)          SETC '++ &ZXNUMRES '                              00676900
.*-------------------------------------------------------------------   00677000
.***AM.L09  XRNAMELEN XL1                                               00677100
&ZOPN                 SETA &ZOPN+1                                      00677200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRNAMELEN'                        00677300
&ZOPO(&ZOPN)          SETC 'DS'                                         00677400
&ZOPV(&ZOPN)          SETC 'XL1'                                        00677500
&ZOPD(&ZOPN)          SETC '++ &ZXRNAMELEN '                            00677600
.*-------------------------------------------------------------------   00677700
.***AM.L09  XRSV0001 CL1                                                00677800
&ZOPN                 SETA &ZOPN+1                                      00677900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0001'                         00678000
&ZOPO(&ZOPN)          SETC 'DS'                                         00678100
&ZOPV(&ZOPN)          SETC 'CL1'                                        00678200
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00678300
.*-------------------------------------------------------------------   00678400
.***AM.L09  XRSVNNNN CL8                                                00678500
&ZOPN                 SETA &ZOPN+1                                      00678600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSVNNNN'                         00678700
&ZOPO(&ZOPN)          SETC 'DS'                                         00678800
&ZOPV(&ZOPN)          SETC 'CL8'                                        00678900
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00679000
.*-------------------------------------------------------------------   00679100
.***AM.MLM2 SAVED LOCATION COUNTER                                      00679200
                      AIF  (&XPLISTVER GE 2).ZL53LA                     00679300
                      AIF  ('&ZENDBASEPL' NE '').ZL53LA                 00679400
&ZENDBASEPL           SETC 'YES'                                        00679500
&ZOPN                 SETA &ZOPN+1                                      00679600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00679700
&ZOPO(&ZOPN)          SETC 'EQU'                                        00679800
&ZOPV(&ZOPN)          SETC '*'                                          00679900
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00680000
.ZL53LA               ANOP  ,                                           00680100
.*-------------------------------------------------------------------   00680200
.***AM.LVER1                                                            00680300
                      AIF  (&XPLISTVER LT 2).ZL53L                      00680400
.*-------------------------------------------------------------------   00680500
.*-------------------------------------------------------------------   00680600
.***AM.L09 ADDR3164 XUSERDATA AD                                        00680700
&ZOPN                 SETA &ZOPN+1                                      00680800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XUSERDATA_ADDR3164'               00680900
&ZOPO(&ZOPN)          SETC 'DS'                                         00681000
&ZOPV(&ZOPN)          SETC 'AD'                                         00681100
&ZOPD(&ZOPN)          SETC '++ &ZXUSERDATA ADDR3164'                    00681200
.*-------------------------------------------------------------------   00681300
.***AM.LVER2                                                            00681400
.ZL53L                ANOP  ,                                           00681500
.*-------------------------------------------------------------------   00681600
.*-------------------------------------------------------------------   00681700
.***AM.LVER1                                                            00681800
                      AIF  (&XPLISTVER LT 2).ZL54L                      00681900
.*-------------------------------------------------------------------   00682000
.*-------------------------------------------------------------------   00682100
.***AM.L09 ALET XUSERDATA F                                             00682200
&ZOPN                 SETA &ZOPN+1                                      00682300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XUSERDATA_ALET'                   00682400
&ZOPO(&ZOPN)          SETC 'DS'                                         00682500
&ZOPV(&ZOPN)          SETC 'F'                                          00682600
&ZOPD(&ZOPN)          SETC '++ &ZXUSERDATA ALET'                        00682700
.*-------------------------------------------------------------------   00682800
.***AM.LVER2                                                            00682900
.ZL54L                ANOP  ,                                           00683000
.*-------------------------------------------------------------------   00683100
.*-------------------------------------------------------------------   00683200
.***AM.LVER1                                                            00683300
                      AIF  (&XPLISTVER LT 2).ZL55L                      00683400
.*-------------------------------------------------------------------   00683500
.*-------------------------------------------------------------------   00683600
.***AM.L09  XRSVNNN1 CL28                                               00683700
&ZOPN                 SETA &ZOPN+1                                      00683800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSVNNN1'                         00683900
&ZOPO(&ZOPN)          SETC 'DS'                                         00684000
&ZOPV(&ZOPN)          SETC 'CL28'                                       00684100
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00684200
.*-------------------------------------------------------------------   00684300
.***AM.LVER2                                                            00684400
.ZL55L                ANOP  ,                                           00684500
.*-------------------------------------------------------------------   00684600
.*-------------------------------------------------------------------   00684700
.***AM.MLM1 SAVED LOCATION COUNTER                                      00684800
                      AIF  ('&ZENDBASEPL' NE '').ZL56LB                 00684900
&ZENDBASEPL           SETC 'YES'                                        00685000
&ZOPN                 SETA &ZOPN+1                                      00685100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00685200
&ZOPO(&ZOPN)          SETC 'EQU'                                        00685300
&ZOPV(&ZOPN)          SETC '*'                                          00685400
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00685500
.ZL56LB               ANOP  ,                                           00685600
.*-------------------------------------------------------------------   00685700
.***AM.PJR1 DEFINED ON XSCOPE                                           00685800
&ZOPN                 SETA &ZOPN+1                                      00685900
&ZOPL(&ZOPN)          SETC ' '                                          00686000
&ZOPO(&ZOPN)          SETC 'ORG'                                        00686100
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+2'                                00686200
&ZOPD(&ZOPN)          SETC ' '                                          00686300
.*-------------------------------------------------------------------   00686400
.***AM.L09  XSCOPEVAL XL1                                               00686500
&ZOPN                 SETA &ZOPN+1                                      00686600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSCOPEVAL'                        00686700
&ZOPO(&ZOPN)          SETC 'DS'                                         00686800
&ZOPV(&ZOPN)          SETC 'XL1'                                        00686900
&ZOPD(&ZOPN)          SETC '++ &ZXSCOPEVAL '                            00687000
.*-------------------------------------------------------------------   00687100
.***AM.PJR1 DEFINED ON XCONTROL                                         00687200
&ZOPN                 SETA &ZOPN+1                                      00687300
&ZOPL(&ZOPN)          SETC ' '                                          00687400
&ZOPO(&ZOPN)          SETC 'ORG'                                        00687500
&ZOPV(&ZOPN)          SETC '&XMFCTRL.+3'                                00687600
&ZOPD(&ZOPN)          SETC ' '                                          00687700
.*-------------------------------------------------------------------   00687800
.***AM.L09  XCONTROLVAL XL1                                             00687900
&ZOPN                 SETA &ZOPN+1                                      00688000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XCONTROLVAL'                      00688100
&ZOPO(&ZOPN)          SETC 'DS'                                         00688200
&ZOPV(&ZOPN)          SETC 'XL1'                                        00688300
&ZOPD(&ZOPN)          SETC '++ &ZXCONTROLVAL '                          00688400
&ZOPN                 SETA &ZOPN+1                                      00688500
&ZOPL(&ZOPN)          SETC ' '                                          00688600
&ZOPO(&ZOPN)          SETC 'ORG'                                        00688700
&ZOPV(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00688800
&ZOPD(&ZOPN)          SETC 'RESET LOCATION COUNTER'                     00688900
.*-------------------------------------------------------------------   00689000
.***AM.L10 END OF ISGENQ LIST PARAMETERS                                00689100
&ZOPN                 SETA &ZOPN+1                                      00689200
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00689300
&ZOPO(&ZOPN)          SETC 'EQU'                                        00689400
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00689500
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00689600
.*                                                                      00689700
&ZOPN                 SETA &ZOPN+1                                      00689800
&ZOPL(&ZOPN)          SETC ' '                                          00689900
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00690000
&ZOPV(&ZOPN)          SETC '1'                                          00690100
&ZOPD(&ZOPN)          SETC ' '                                          00690200
.*-------------------------------------------------------------------   00690300
.***AL.L12 ISGENQ FMT=LIST MF=S!L PARAMETERS                            00690400
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00690500
.*                                                                      00690600
&ZOPN                 SETA  &ZOPN+1                                     00690700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00690800
&ZOPO(&ZOPN)          SETC  'DC'                                        00690900
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00691000
&ZOPD(&ZOPN)          SETC  '++ ISGENQ ARG PARMS'                       00691100
.*                                                                      00691200
.ZLMFSLX              ANOP  ,                                           00691300
.*-------------------------------------------------------------------   00691400
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00691500
&ZPLLEN               SETA 128                                          00691600
.*                                                                      00691700
                      AIF  (&XPLISTVER LT 2).ZLLEN2Z                    00691800
&ZPLLEN               SETA 168                                          00691900
.ZLLEN2Z              ANOP  ,                                           00692000
.*                                                                      00692100
.******************************************************************     00692200
.***AI.L01 ISGENQ FMT=LIST FILL IN PARAMETER AREA                       00692300
.******************************************************************     00692400
                      ACTR  10000                                       00692500
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00692600
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00692700
&ZCVAL                SETC  'LAE'          XAX MODE                     00692800
.ZIMFXA               ANOP ,                                            00692900
.*                                                                      00693000
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00693100
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00693200
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00693300
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00693400
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00693500
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00693600
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00693700
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00693800
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00693900
&ZOPN                 SETA  &ZOPN+1                                     00694000
&ZOPL(&ZOPN)          SETC  ' '                                         00694100
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00694200
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00694300
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00694400
                      AGO   .ZIMFNX                                     00694500
.*                                                                      00694600
.ZIMFN2               ANOP ,                                            00694700
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     00694800
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  00694900
&ZOPN                 SETA  &ZOPN+1                                     00695000
&ZOPL(&ZOPN)          SETC  ' '                                         00695100
&ZOPO(&ZOPN)          SETC  'LAE'                                       00695200
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  00695300
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00695400
                      AGO   .ZIMFNX                                     00695500
.ZIMFNX1              ANOP ,                                            00695600
&ZOPN                 SETA  &ZOPN+1                                     00695700
&ZOPL(&ZOPN)          SETC  ' '                                         00695800
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00695900
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00696000
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00696100
.ZIMFNX               ANOP ,                                            00696200
.********************************************************************   00696300
.***AI.L02 ISGENQ FMT=LIST INITIALIZE PARAMETER AREA                    00696400
.********************************************************************   00696500
.***AI.L03 MF=(SLE)                                                     00696600
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00696700
.*                                                                      00696800
&ZOPN                 SETA  &ZOPN+1                                     00696900
&ZOPL(&ZOPN)          SETC  ' '                                         00697000
&ZOPO(&ZOPN)          SETC  'XC'                                        00697100
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00697200
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00697300
.ZIMFLX               ANOP  ,                                           00697400
.*-------------------------------------------------------------------   00697500
.***AI.L04A XVERSION XL1                                                00697600
                      AIF   (&XPLISTVER EQ 0).ZIMFVW                    00697700
&ZOPN                 SETA  &ZOPN+1                                     00697800
&ZOPL(&ZOPN)          SETC  ' '                                         00697900
&ZOPO(&ZOPN)          SETC  'MVI'                                       00698000
&ZOPV(&ZOPN)          SETC  '0(1),&XPLISTVER'                           00698100
&ZOPD(&ZOPN)          SETC  '++ INPUT XVERSION XL1'                     00698200
.ZIMFVW               ANOP  ,                                           00698300
.*-------------------------------------------------------------------   00698400
.***AI.L07 XSCOPE AL1                                                   00698500
&ZW                   SETC  ''                                          00698600
.*-------------------------------------------------------------------   00698700
.***AI.L15 XSCOPE "STEP" AL1                                            00698800
         AIF   ('&XSCOPE' NE 'STEP').ZI4A                               00698900
&ZW                   SETC  '1'                                         00699000
.ZI4A                 ANOP  ,                                           00699100
.*-------------------------------------------------------------------   00699200
.***AI.L15 XSCOPE "SYSTEM" AL1                                          00699300
         AIF   ('&XSCOPE' NE 'SYSTEM').ZI5A                             00699400
&ZW                   SETC  '2'                                         00699500
.ZI5A                 ANOP  ,                                           00699600
.*-------------------------------------------------------------------   00699700
.***AI.L15 XSCOPE "SYSTEMS" AL1                                         00699800
         AIF   ('&XSCOPE' NE 'SYSTEMS').ZI6A                            00699900
&ZW                   SETC  '3'                                         00700000
.ZI6A                 ANOP  ,                                           00700100
.*-------------------------------------------------------------------   00700200
.***AI.L15 XSCOPE "SYSPLEX" AL1                                         00700300
         AIF   ('&XSCOPE' NE 'SYSPLEX').ZI7A                            00700400
&ZW                   SETC  '3'                                         00700500
.ZI7A                 ANOP  ,                                           00700600
.*-------------------------------------------------------------------   00700700
.***AI.L17 XSCOPE AL1                                                   00700800
                      AIF   ('&ZW' EQ '0').ZI7B                         00700900
                      AIF   ('&ZW' EQ '').ZI7B                          00701000
.*                                                                      00701100
&ZOPN                 SETA  &ZOPN+1                                     00701200
&ZOPL(&ZOPN)          SETC  ' '                                         00701300
&ZOPO(&ZOPN)          SETC  'MVI'                                       00701400
&ZOPV(&ZOPN)          SETC  '2(1),&ZW'                                  00701500
&ZOPD(&ZOPN)          SETC  '++ &ZXSCOPE XSCOPE'                        00701600
.ZI7B                 ANOP  ,                                           00701700
.*-------------------------------------------------------------------   00701800
.***AI.L07 XCONTROL AL1                                                 00701900
&ZW                   SETC  ''                                          00702000
.*-------------------------------------------------------------------   00702100
.***AI.L15 XCONTROL "SHARED" AL1                                        00702200
         AIF   ('&XCONTROL' NE 'SHARED').ZI9A                           00702300
&ZW                   SETC  '1'                                         00702400
.ZI9A                 ANOP  ,                                           00702500
.*-------------------------------------------------------------------   00702600
.***AI.L15 XCONTROL "EXCLUSIVE" AL1                                     00702700
         AIF   ('&XCONTROL' NE 'EXCLUSIVE').ZI10A                       00702800
&ZW                   SETC  '2'                                         00702900
.ZI10A                ANOP  ,                                           00703000
.*-------------------------------------------------------------------   00703100
.***AI.L17 XCONTROL AL1                                                 00703200
                      AIF   ('&ZW' EQ '0').ZI10B                        00703300
                      AIF   ('&ZW' EQ '').ZI10B                         00703400
.*                                                                      00703500
&ZOPN                 SETA  &ZOPN+1                                     00703600
&ZOPL(&ZOPN)          SETC  ' '                                         00703700
&ZOPO(&ZOPN)          SETC  'MVI'                                       00703800
&ZOPV(&ZOPN)          SETC  '3(1),&ZW'                                  00703900
&ZOPD(&ZOPN)          SETC  '++ &ZXCONTROL XCONTROL'                    00704000
.ZI10B                ANOP  ,                                           00704100
.*-------------------------------------------------------------------   00704200
.***AI.L05 XFLAGS1 BL1                                                  00704300
&ZW                   SETC  ''                                          00704400
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00704500
.*-------------------------------------------------------------------   00704600
.***AI.L08 XFLAGS1 "YES"                                                00704700
.***      BL1'X1XXXXXX'                                                 00704800
         AIF   ('&XTEST' NE 'YES').ZI12A                                00704900
&ZW                   SETC  '&ZW.01'                                    00705000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00705100
                      AGO   .ZI12C                                      00705200
.*                                                                      00705300
.ZI12A                ANOP  ,                                           00705400
&ZW                   SETC  '&ZW.00'                                    00705500
.ZI12C                ANOP  ,                                           00705600
.*-------------------------------------------------------------------   00705700
.***AI.L08 XFLAGS1 "FAIL"                                               00705800
.***      BL1'XX1XXXXX'                                                 00705900
         AIF   ('&XCONTENTIONACT' NE 'FAIL').ZI13A                      00706000
&ZW                   SETC  '&ZW.1'                                     00706100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00706200
                      AGO   .ZI13C                                      00706300
.*                                                                      00706400
.ZI13A                ANOP  ,                                           00706500
&ZW                   SETC  '&ZW.0'                                     00706600
.ZI13C                ANOP  ,                                           00706700
.*-------------------------------------------------------------------   00706800
.***AI.L08 XFLAGS1 "ECB"                                                00706900
.***      BL1'XXX1XXXX'                                                 00707000
         AIF   ('&XWAITTYPE' NE 'ECB').ZI14A                            00707100
&ZW                   SETC  '&ZW.1'                                     00707200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00707300
                      AGO   .ZI14C                                      00707400
.*                                                                      00707500
.ZI14A                ANOP  ,                                           00707600
&ZW                   SETC  '&ZW.0'                                     00707700
.ZI14C                ANOP  ,                                           00707800
.*-------------------------------------------------------------------   00707900
.***AI.L08 XFLAGS1 "YES"                                                00708000
.***      BL1'XXXX1XXX'                                                 00708100
         AIF   ('&XRESLIST' NE 'YES').ZI15A                             00708200
&ZW                   SETC  '&ZW.1'                                     00708300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00708400
                      AGO   .ZI15C                                      00708500
.*                                                                      00708600
.ZI15A                ANOP  ,                                           00708700
&ZW                   SETC  '&ZW.0'                                     00708800
.ZI15C                ANOP  ,                                           00708900
.*-------------------------------------------------------------------   00709000
.***AI.L08 XFLAGS1 "NO"                                                 00709100
.***      BL1'XXXXX1XX'                                                 00709200
         AIF   ('&XENQMAX' NE 'NO').ZI16A                               00709300
&ZW                   SETC  '&ZW.1'                                     00709400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00709500
                      AGO   .ZI16C                                      00709600
.*                                                                      00709700
.ZI16A                ANOP  ,                                           00709800
&ZW                   SETC  '&ZW.0'                                     00709900
.ZI16C                ANOP  ,                                           00710000
.*-------------------------------------------------------------------   00710100
.***AI.L08 XFLAGS1 "NO"                                                 00710200
.***      BL1'XXXXXX1X'                                                 00710300
         AIF   ('&XRNL' NE 'NO').ZI17A                                  00710400
&ZW                   SETC  '&ZW.1'                                     00710500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00710600
                      AGO   .ZI17C                                      00710700
.*                                                                      00710800
.ZI17A                ANOP  ,                                           00710900
&ZW                   SETC  '&ZW.0'                                     00711000
.ZI17C                ANOP  ,                                           00711100
.*-------------------------------------------------------------------   00711200
.***AI.L08 XFLAGS1 "DO_NOT_OVERRIDE"                                    00711300
.***      BL1'XXXXXXX1'                                                 00711400
         AIF   ('&XQNAME' NE 'DO_NOT_OVERRIDE').ZI18A                   00711500
&ZW                   SETC  '&ZW.1'                                     00711600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00711700
                      AGO   .ZI18C                                      00711800
.*                                                                      00711900
.ZI18A                ANOP  ,                                           00712000
&ZW                   SETC  '&ZW.0'                                     00712100
.ZI18C                ANOP  ,                                           00712200
.*-------------------------------------------------------------------   00712300
.***AI.L11 XFLAGS1 BL1                                                  00712400
                      AIF   ('&ZCLNG' NE 'YES').ZI18E  ALL ZERO BITS    00712500
&ZOPN                 SETA  &ZOPN+1                                     00712600
&ZOPL(&ZOPN)          SETC  ' '                                         00712700
&ZOPO(&ZOPN)          SETC  'OI'                                        00712800
&ZOPV(&ZOPN)          SETC  '4(1),B''&ZW'''                             00712900
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00713000
.ZI18E                ANOP  ,                                           00713100
.*-------------------------------------------------------------------   00713200
.***AI.L05 XFLAGS2 BL1                                                  00713300
&ZW                   SETC  ''                                          00713400
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00713500
.*-------------------------------------------------------------------   00713600
.***AI.L08 XFLAGS2 "YES"                                                00713700
.***      BL1'1XXXXXXX'                                                 00713800
         AIF   ('&XRESERVEVOLUME' NE 'YES').ZI20A                       00713900
&ZW                   SETC  '&ZW.1'                                     00714000
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00714100
                      AGO   .ZI20C                                      00714200
.*                                                                      00714300
.ZI20A                ANOP  ,                                           00714400
&ZW                   SETC  '&ZW.0'                                     00714500
.ZI20C                ANOP  ,                                           00714600
.*-------------------------------------------------------------------   00714700
.***AI.L08 XFLAGS2 "YES"                                                00714800
.***      BL1'X1XXXXXX'                                                 00714900
         AIF   ('&XSYNCHRES' NE 'YES').ZI21A                            00715000
&ZW                   SETC  '&ZW.1'                                     00715100
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00715200
                      AGO   .ZI21C                                      00715300
.*                                                                      00715400
.ZI21A                ANOP  ,                                           00715500
&ZW                   SETC  '&ZW.0'                                     00715600
.ZI21C                ANOP  ,                                           00715700
.*-------------------------------------------------------------------   00715800
.***AI.L08 XFLAGS2 "NO"                                                 00715900
.***      BL1'XX1XXXXX'                                                 00716000
         AIF   ('&XSYNCHRES' NE 'NO').ZI22A                             00716100
&ZW                   SETC  '&ZW.1'                                     00716200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00716300
                      AGO   .ZI22C                                      00716400
.*                                                                      00716500
.ZI22A                ANOP  ,                                           00716600
&ZW                   SETC  '&ZW.0'                                     00716700
.ZI22C                ANOP  ,                                           00716800
.*-------------------------------------------------------------------   00716900
.***AI.L08 XFLAGS2 "DO_NOT_OVERRIDE"                                    00717000
.***      BL1'XXX1XXXX'                                                 00717100
         AIF   ('&XCONTROL' NE 'DO_NOT_OVERRIDE').ZI23A                 00717200
&ZW                   SETC  '&ZW.1'                                     00717300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00717400
                      AGO   .ZI23C                                      00717500
.*                                                                      00717600
.ZI23A                ANOP  ,                                           00717700
&ZW                   SETC  '&ZW.0'                                     00717800
.ZI23C                ANOP  ,                                           00717900
.*-------------------------------------------------------------------   00718000
.***AI.L08 XFLAGS2 "DO_NOT_OVERRIDE"                                    00718100
.***      BL1'XXXX1XXX'                                                 00718200
         AIF   ('&XSCOPE' NE 'DO_NOT_OVERRIDE').ZI24A                   00718300
&ZW                   SETC  '&ZW.1'                                     00718400
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00718500
                      AGO   .ZI24C                                      00718600
.*                                                                      00718700
.ZI24A                ANOP  ,                                           00718800
&ZW                   SETC  '&ZW.0'                                     00718900
.ZI24C                ANOP  ,                                           00719000
.*-------------------------------------------------------------------   00719100
.***AI.L08 XFLAGS2 "DO_NOT_OVERRIDE"                                    00719200
.***      BL1'XXXXX1XX'                                                 00719300
         AIF   ('&XRNL' NE 'DO_NOT_OVERRIDE').ZI25A                     00719400
&ZW                   SETC  '&ZW.1'                                     00719500
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00719600
                      AGO   .ZI25C                                      00719700
.*                                                                      00719800
.ZI25A                ANOP  ,                                           00719900
&ZW                   SETC  '&ZW.0'                                     00720000
.ZI25C                ANOP  ,                                           00720100
.*-------------------------------------------------------------------   00720200
.***AI.L08 XFLAGS2 "DO_NOT_OVERRIDE"                                    00720300
.***      BL1'XXXXXX1X'                                                 00720400
         AIF   ('&XSYNCHRES' NE 'DO_NOT_OVERRIDE').ZI26A                00720500
&ZW                   SETC  '&ZW.1'                                     00720600
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00720700
                      AGO   .ZI26C                                      00720800
.*                                                                      00720900
.ZI26A                ANOP  ,                                           00721000
&ZW                   SETC  '&ZW.0'                                     00721100
.ZI26C                ANOP  ,                                           00721200
.*-------------------------------------------------------------------   00721300
.***AI.L08 XFLAGS2 "DO_NOT_OVERRIDE"                                    00721400
.***      BL1'XXXXXXX1'                                                 00721500
         AIF   ('&XRNAME' NE 'DO_NOT_OVERRIDE').ZI27A                   00721600
&ZW                   SETC  '&ZW.1'                                     00721700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00721800
                      AGO   .ZI27C                                      00721900
.*                                                                      00722000
.ZI27A                ANOP  ,                                           00722100
&ZW                   SETC  '&ZW.0'                                     00722200
.ZI27C                ANOP  ,                                           00722300
.*-------------------------------------------------------------------   00722400
.***AI.L11 XFLAGS2 BL1                                                  00722500
                      AIF   ('&ZCLNG' NE 'YES').ZI27E  ALL ZERO BITS    00722600
&ZOPN                 SETA  &ZOPN+1                                     00722700
&ZOPL(&ZOPN)          SETC  ' '                                         00722800
&ZOPO(&ZOPN)          SETC  'OI'                                        00722900
&ZOPV(&ZOPN)          SETC  '5(1),B''&ZW'''                             00723000
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00723100
.ZI27E                ANOP  ,                                           00723200
.*-------------------------------------------------------------------   00723300
.***AI.L05 XFLAGS3 BL1                                                  00723400
&ZW                   SETC  ''                                          00723500
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00723600
.*-------------------------------------------------------------------   00723700
.***AI.L08 XFLAGS3 "CONTROL"                                            00723800
.***      BL1'1XXXXXXX'                                                 00723900
         AIF   ('&CONTROL' EQ '').ZI29A                                 00724000
         AIF   ('&CONTROL' EQ 'EXCLUSIVE').ZI29A                        00724100
&ZW                   SETC  '&ZW.1'                                     00724200
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00724300
                      AGO   .ZI29C                                      00724400
.*                                                                      00724500
.ZI29A                ANOP  ,                                           00724600
&ZW                   SETC  '&ZW.0'                                     00724700
.ZI29C                ANOP  ,                                           00724800
.*-------------------------------------------------------------------   00724900
.***AI.L08 XFLAGS3 "DO_NOT_OVERRIDE"                                    00725000
.***      BL1'XXXXXXX1'                                                 00725100
         AIF   ('&XRNAMELEN' NE 'DO_NOT_OVERRIDE').ZI30A                00725200
&ZW                   SETC  '&ZW.0000001'                               00725300
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00725400
                      AGO   .ZI30C                                      00725500
.*                                                                      00725600
.ZI30A                ANOP  ,                                           00725700
&ZW                   SETC  '&ZW.0000000'                               00725800
.ZI30C                ANOP  ,                                           00725900
.*-------------------------------------------------------------------   00726000
.***AI.L11 XFLAGS3 BL1                                                  00726100
                      AIF   ('&ZCLNG' NE 'YES').ZI30E  ALL ZERO BITS    00726200
&ZOPN                 SETA  &ZOPN+1                                     00726300
&ZOPL(&ZOPN)          SETC  ' '                                         00726400
&ZOPO(&ZOPN)          SETC  'OI'                                        00726500
&ZOPV(&ZOPN)          SETC  '6(1),B''&ZW'''                             00726600
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00726700
.ZI30E                ANOP  ,                                           00726800
.*-------------------------------------------------------------------   00726900
.***AI.L05 XFLAGS4 BL1                                                  00727000
&ZW                   SETC  ''                                          00727100
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00727200
.*-------------------------------------------------------------------   00727300
.***AI.L08 XFLAGS4 "DO_NOT_OVERRIDE"                                    00727400
.***      BL1'XXXXXXX1'                                                 00727500
         AIF   ('&XUCB@' NE 'DO_NOT_OVERRIDE').ZI32A                    00727600
&ZW                   SETC  '&ZW.00000001'                              00727700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00727800
                      AGO   .ZI32C                                      00727900
.*                                                                      00728000
.ZI32A                ANOP  ,                                           00728100
&ZW                   SETC  '&ZW.00000000'                              00728200
.ZI32C                ANOP  ,                                           00728300
.*-------------------------------------------------------------------   00728400
.***AI.L11 XFLAGS4 BL1                                                  00728500
                      AIF   ('&ZCLNG' NE 'YES').ZI32E  ALL ZERO BITS    00728600
&ZOPN                 SETA  &ZOPN+1                                     00728700
&ZOPL(&ZOPN)          SETC  ' '                                         00728800
&ZOPO(&ZOPN)          SETC  'OI'                                        00728900
&ZOPV(&ZOPN)          SETC  '7(1),B''&ZW'''                             00729000
&ZOPD(&ZOPN)          SETC  '++ INPUT BL1'                              00729100
.ZI32E                ANOP  ,                                           00729200
.*-------------------------------------------------------------------   00729300
.***AI.L19 ADDR3164 XRESTABLE AD                                        00729400
                      AIF   ('&ZXRESTABLE' EQ '').ZI33H                 00729500
&ZCLNG                SETC  '&XRESTABLE'                                00729600
&ZCGPR                SETC  '14'                                        00729700
         AIF   ('&XRESTABLE'(1,1) EQ '(').ZI33F  IN GPR                 00729800
.*                                                                      00729900
&ZOPN                 SETA  &ZOPN+1                                     00730000
&ZOPL(&ZOPN)          SETC  ' '                                         00730100
&ZOPO(&ZOPN)          SETC  'LA'                                        00730200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00730300
&ZOPD(&ZOPN)          SETC  '++ &ZXRESTABLE XRESTABLE'                  00730400
.*                                                                      00730500
                      AGO   .ZI33G                                      00730600
.*                                                                      00730700
.ZI33F                ANOP  ,                                           00730800
&ZCGPR   SETC  '&XRESTABLE'(2,K'&XRESTABLE-2)                           00730900
.*                                                                      00731000
.ZI33G                ANOP  ,                                           00731100
                      AIF   ('&SYSAM64' EQ 'YES').ZI33H1A               00731200
.*                                                                      00731300
&ZOPN                 SETA  &ZOPN+1                                     00731400
&ZOPL(&ZOPN)          SETC  ' '                                         00731500
&ZOPO(&ZOPN)          SETC  'ST'                                        00731600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4+8(,1)'                            00731700
&ZOPD(&ZOPN)          SETC  '++ &ZXRESTABLE XRESTABLE'                  00731800
.*                                                                      00731900
                      AGO   .ZI33H                                      00732000
.ZI33H1A              ANOP  ,                                           00732100
.*                                                                      00732200
&ZOPN                 SETA  &ZOPN+1                                     00732300
&ZOPL(&ZOPN)          SETC  ' '                                         00732400
&ZOPO(&ZOPN)          SETC  'STG'                                       00732500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,8(,1)'                              00732600
&ZOPD(&ZOPN)          SETC  '++ &ZXRESTABLE XRESTABLE'                  00732700
.*                                                                      00732800
.ZI33H                ANOP  ,                                           00732900
.*-------------------------------------------------------------------   00733000
.***AI.L19 ADDR3164 XENQTOKEN AD                                        00733100
                      AIF   ('&ZXENQTOKEN' EQ '').ZI34H                 00733200
&ZCLNG                SETC  '&XENQTOKEN'                                00733300
&ZCGPR                SETC  '14'                                        00733400
         AIF   ('&XENQTOKEN'(1,1) EQ '(').ZI34F  IN GPR                 00733500
.*                                                                      00733600
&ZOPN                 SETA  &ZOPN+1                                     00733700
&ZOPL(&ZOPN)          SETC  ' '                                         00733800
&ZOPO(&ZOPN)          SETC  'LA'                                        00733900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00734000
&ZOPD(&ZOPN)          SETC  '++ &ZXENQTOKEN XENQTOKEN'                  00734100
.*                                                                      00734200
                      AGO   .ZI34G                                      00734300
.*                                                                      00734400
.ZI34F                ANOP  ,                                           00734500
&ZCGPR   SETC  '&XENQTOKEN'(2,K'&XENQTOKEN-2)                           00734600
.*                                                                      00734700
.ZI34G                ANOP  ,                                           00734800
                      AIF   ('&SYSAM64' EQ 'YES').ZI34H1A               00734900
.*                                                                      00735000
&ZOPN                 SETA  &ZOPN+1                                     00735100
&ZOPL(&ZOPN)          SETC  ' '                                         00735200
&ZOPO(&ZOPN)          SETC  'ST'                                        00735300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4+16(,1)'                           00735400
&ZOPD(&ZOPN)          SETC  '++ &ZXENQTOKEN XENQTOKEN'                  00735500
.*                                                                      00735600
                      AGO   .ZI34H                                      00735700
.ZI34H1A              ANOP  ,                                           00735800
.*                                                                      00735900
&ZOPN                 SETA  &ZOPN+1                                     00736000
&ZOPL(&ZOPN)          SETC  ' '                                         00736100
&ZOPO(&ZOPN)          SETC  'STG'                                       00736200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,16(,1)'                             00736300
&ZOPD(&ZOPN)          SETC  '++ &ZXENQTOKEN XENQTOKEN'                  00736400
.*                                                                      00736500
.ZI34H                ANOP  ,                                           00736600
.*-------------------------------------------------------------------   00736700
.***AI.L19 ADDR3164 XRETURNTABLE AD                                     00736800
                      AIF   ('&ZXRETURNTABLE' EQ '').ZI35H              00736900
&ZCLNG                SETC  '&XRETURNTABLE'                             00737000
&ZCGPR                SETC  '14'                                        00737100
         AIF   ('&XRETURNTABLE'(1,1) EQ '(').ZI35F  IN GPR              00737200
.*                                                                      00737300
&ZOPN                 SETA  &ZOPN+1                                     00737400
&ZOPL(&ZOPN)          SETC  ' '                                         00737500
&ZOPO(&ZOPN)          SETC  'LA'                                        00737600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00737700
&ZOPD(&ZOPN)          SETC  '++ &ZXRETURNTABLE XRETURNTABLE'            00737800
.*                                                                      00737900
                      AGO   .ZI35G                                      00738000
.*                                                                      00738100
.ZI35F                ANOP  ,                                           00738200
&ZCGPR   SETC  '&XRETURNTABLE'(2,K'&XRETURNTABLE-2)                     00738300
.*                                                                      00738400
.ZI35G                ANOP  ,                                           00738500
                      AIF   ('&SYSAM64' EQ 'YES').ZI35H1A               00738600
.*                                                                      00738700
&ZOPN                 SETA  &ZOPN+1                                     00738800
&ZOPL(&ZOPN)          SETC  ' '                                         00738900
&ZOPO(&ZOPN)          SETC  'ST'                                        00739000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4+24(,1)'                           00739100
&ZOPD(&ZOPN)          SETC  '++ &ZXRETURNTABLE XRETURNTABLE'            00739200
.*                                                                      00739300
                      AGO   .ZI35H                                      00739400
.ZI35H1A              ANOP  ,                                           00739500
.*                                                                      00739600
&ZOPN                 SETA  &ZOPN+1                                     00739700
&ZOPL(&ZOPN)          SETC  ' '                                         00739800
&ZOPO(&ZOPN)          SETC  'STG'                                       00739900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,24(,1)'                             00740000
&ZOPD(&ZOPN)          SETC  '++ &ZXRETURNTABLE XRETURNTABLE'            00740100
.*                                                                      00740200
.ZI35H                ANOP  ,                                           00740300
.*-------------------------------------------------------------------   00740400
.***AI.L19 ADDR3164 XENQTOKENTBL AD                                     00740500
                      AIF   ('&ZXENQTOKENTBL' EQ '').ZI36H              00740600
&ZCLNG                SETC  '&XENQTOKENTBL'                             00740700
&ZCGPR                SETC  '14'                                        00740800
         AIF   ('&XENQTOKENTBL'(1,1) EQ '(').ZI36F  IN GPR              00740900
.*                                                                      00741000
&ZOPN                 SETA  &ZOPN+1                                     00741100
&ZOPL(&ZOPN)          SETC  ' '                                         00741200
&ZOPO(&ZOPN)          SETC  'LA'                                        00741300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00741400
&ZOPD(&ZOPN)          SETC  '++ &ZXENQTOKENTBL XENQTOKENTBL'            00741500
.*                                                                      00741600
                      AGO   .ZI36G                                      00741700
.*                                                                      00741800
.ZI36F                ANOP  ,                                           00741900
&ZCGPR   SETC  '&XENQTOKENTBL'(2,K'&XENQTOKENTBL-2)                     00742000
.*                                                                      00742100
.ZI36G                ANOP  ,                                           00742200
                      AIF   ('&SYSAM64' EQ 'YES').ZI36H1A               00742300
.*                                                                      00742400
&ZOPN                 SETA  &ZOPN+1                                     00742500
&ZOPL(&ZOPN)          SETC  ' '                                         00742600
&ZOPO(&ZOPN)          SETC  'ST'                                        00742700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4+32(,1)'                           00742800
&ZOPD(&ZOPN)          SETC  '++ &ZXENQTOKENTBL XENQTOKENTBL'            00742900
.*                                                                      00743000
                      AGO   .ZI36H                                      00743100
.ZI36H1A              ANOP  ,                                           00743200
.*                                                                      00743300
&ZOPN                 SETA  &ZOPN+1                                     00743400
&ZOPL(&ZOPN)          SETC  ' '                                         00743500
&ZOPO(&ZOPN)          SETC  'STG'                                       00743600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,32(,1)'                             00743700
&ZOPD(&ZOPN)          SETC  '++ &ZXENQTOKENTBL XENQTOKENTBL'            00743800
.*                                                                      00743900
.ZI36H                ANOP  ,                                           00744000
.*-------------------------------------------------------------------   00744100
.***AI.L18 ADDR3164 XRNAME AD                                           00744200
         AIF   ('&XRNAME' NE 'DO_NOT_OVERRIDE').ZI37                    00744300
&ZXRNAME              SETC  ''             RESET INPUT/OUTPUT           00744400
.ZI37                 ANOP  ,                                           00744500
.*-------------------------------------------------------------------   00744600
.***AI.L19 ADDR3164 XRNAME AD                                           00744700
                      AIF   ('&ZXRNAME' EQ '').ZI37H                    00744800
&ZCLNG                SETC  '&XRNAME'                                   00744900
&ZCGPR                SETC  '14'                                        00745000
         AIF   ('&XRNAME'(1,1) EQ '(').ZI37F  IN GPR                    00745100
.*                                                                      00745200
&ZOPN                 SETA  &ZOPN+1                                     00745300
&ZOPL(&ZOPN)          SETC  ' '                                         00745400
&ZOPO(&ZOPN)          SETC  'LA'                                        00745500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00745600
&ZOPD(&ZOPN)          SETC  '++ &ZXRNAME XRNAME'                        00745700
.*                                                                      00745800
                      AGO   .ZI37G                                      00745900
.*                                                                      00746000
.ZI37F                ANOP  ,                                           00746100
&ZCGPR   SETC  '&XRNAME'(2,K'&XRNAME-2)                                 00746200
.*                                                                      00746300
.ZI37G                ANOP  ,                                           00746400
                      AIF   ('&SYSAM64' EQ 'YES').ZI37H1A               00746500
.*                                                                      00746600
&ZOPN                 SETA  &ZOPN+1                                     00746700
&ZOPL(&ZOPN)          SETC  ' '                                         00746800
&ZOPO(&ZOPN)          SETC  'ST'                                        00746900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4+40(,1)'                           00747000
&ZOPD(&ZOPN)          SETC  '++ &ZXRNAME XRNAME'                        00747100
.*                                                                      00747200
                      AGO   .ZI37H                                      00747300
.ZI37H1A              ANOP  ,                                           00747400
.*                                                                      00747500
&ZOPN                 SETA  &ZOPN+1                                     00747600
&ZOPL(&ZOPN)          SETC  ' '                                         00747700
&ZOPO(&ZOPN)          SETC  'STG'                                       00747800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,40(,1)'                             00747900
&ZOPD(&ZOPN)          SETC  '++ &ZXRNAME XRNAME'                        00748000
.*                                                                      00748100
.ZI37H                ANOP  ,                                           00748200
.*-------------------------------------------------------------------   00748300
.***AI.L19 ADDR3164 XANSAREA AD                                         00748400
                      AIF   ('&ZXANSAREA' EQ '').ZI38H                  00748500
&ZCLNG                SETC  '&XANSAREA'                                 00748600
&ZCGPR                SETC  '14'                                        00748700
         AIF   ('&XANSAREA'(1,1) EQ '(').ZI38F  IN GPR                  00748800
.*                                                                      00748900
&ZOPN                 SETA  &ZOPN+1                                     00749000
&ZOPL(&ZOPN)          SETC  ' '                                         00749100
&ZOPO(&ZOPN)          SETC  'LA'                                        00749200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00749300
&ZOPD(&ZOPN)          SETC  '++ &ZXANSAREA XANSAREA'                    00749400
.*                                                                      00749500
                      AGO   .ZI38G                                      00749600
.*                                                                      00749700
.ZI38F                ANOP  ,                                           00749800
&ZCGPR   SETC  '&XANSAREA'(2,K'&XANSAREA-2)                             00749900
.*                                                                      00750000
.ZI38G                ANOP  ,                                           00750100
                      AIF   ('&SYSAM64' EQ 'YES').ZI38H1A               00750200
.*                                                                      00750300
&ZOPN                 SETA  &ZOPN+1                                     00750400
&ZOPL(&ZOPN)          SETC  ' '                                         00750500
&ZOPO(&ZOPN)          SETC  'ST'                                        00750600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4+48(,1)'                           00750700
&ZOPD(&ZOPN)          SETC  '++ &ZXANSAREA XANSAREA'                    00750800
.*                                                                      00750900
                      AGO   .ZI38H                                      00751000
.ZI38H1A              ANOP  ,                                           00751100
.*                                                                      00751200
&ZOPN                 SETA  &ZOPN+1                                     00751300
&ZOPL(&ZOPN)          SETC  ' '                                         00751400
&ZOPO(&ZOPN)          SETC  'STG'                                       00751500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,48(,1)'                             00751600
&ZOPD(&ZOPN)          SETC  '++ &ZXANSAREA XANSAREA'                    00751700
.*                                                                      00751800
.ZI38H                ANOP  ,                                           00751900
.*-------------------------------------------------------------------   00752000
.***AI.L18  XQNAME CL8                                                  00752100
         AIF   ('&XQNAME' NE 'DO_NOT_OVERRIDE').ZI39                    00752200
&ZXQNAME              SETC  ''             RESET INPUT/OUTPUT           00752300
.ZI39                 ANOP  ,                                           00752400
.*-------------------------------------------------------------------   00752500
.***AI.L25  XQNAME CL8                                                  00752600
                      AIF   ('&ZXQNAME' EQ '').ZI39E                    00752700
                      AIF   ('&ZXQNAME' EQ 'OUTPUT').ZI39E              00752800
&ZCGPR                SETC  '&XQNAME'                                   00752900
.*                                                                      00753000
                      AIF   ('&XQNAME'(1,1) NE '(').ZI39B               00753100
&ZCGPR   SETC  '0('.'&XQNAME'(2,K'&XQNAME-2).')'                        00753200
.ZI39B                ANOP  ,                                           00753300
.*                                                                      00753400
&ZOPN                 SETA  &ZOPN+1                                     00753500
&ZOPL(&ZOPN)          SETC  ' '                                         00753600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00753700
&ZOPV(&ZOPN)          SETC  '56(8,1),&ZCGPR'                            00753800
&ZOPD(&ZOPN)          SETC  '++ &ZXQNAME XQNAME'                        00753900
.*                                                                      00754000
.ZI39E                ANOP  ,                                           00754100
.*-------------------------------------------------------------------   00754200
.***AI.L18  XOWNINGTTOKEN CL16                                          00754300
         AIF   ('&XOWNINGTTOKEN' NE 'CURRENT_TASK').ZI40                00754400
&ZXOWNINGTTOKEN       SETC  ''             RESET INPUT/OUTPUT           00754500
.ZI40                 ANOP  ,                                           00754600
.*-------------------------------------------------------------------   00754700
.***AI.L25  XOWNINGTTOKEN CL16                                          00754800
                      AIF   ('&ZXOWNINGTTOKEN' EQ '').ZI40E             00754900
                      AIF   ('&ZXOWNINGTTOKEN' EQ 'OUTPUT').ZI40E       00755000
&ZCGPR                SETC  '&XOWNINGTTOKEN'                            00755100
.*                                                                      00755200
                      AIF   ('&XOWNINGTTOKEN'(1,1) NE '(').ZI40B        00755300
&ZCGPR   SETC  '0('.'&XOWNINGTTOKEN'(2,K'&XOWNINGTTOKEN-2).')'          00755400
.ZI40B                ANOP  ,                                           00755500
.*                                                                      00755600
&ZOPN                 SETA  &ZOPN+1                                     00755700
&ZOPL(&ZOPN)          SETC  ' '                                         00755800
&ZOPO(&ZOPN)          SETC  'MVC'                                       00755900
&ZOPV(&ZOPN)          SETC  '64(16,1),&ZCGPR'                           00756000
&ZOPD(&ZOPN)          SETC  '++ &ZXOWNINGTTOKEN XOWNINGTTOKEN'          00756100
.*                                                                      00756200
.ZI40E                ANOP  ,                                           00756300
.*-------------------------------------------------------------------   00756400
.***AI.L23 ALET XRESTABLE F                                             00756500
         AIF   ('&ZXRESTABLE' EQ '').ZI41G                              00756600
         AIF   ('&SYSASCE' EQ 'P').ZI41G   SYSSTATE PRIMARY             00756700
&ZCLNG                SETC  '&XRESTABLE'                                00756800
         AIF   ('&XRESTABLE'(1,1) EQ '(').ZI41E  IN AR                  00756900
.*                                                                      00757000
&ZCGPR                SETC  '14'                                        00757100
&ZOPN                 SETA  &ZOPN+1                                     00757200
&ZOPL(&ZOPN)          SETC  ' '                                         00757300
&ZOPO(&ZOPN)          SETC  'LAE'                                       00757400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00757500
&ZOPD(&ZOPN)          SETC  '++ &ZXRESTABLE XRESTABLE'                  00757600
                      AGO   .ZI41F                                      00757700
.*                                                                      00757800
.ZI41E                ANOP  ,                                           00757900
&ZCGPR   SETC  '&XRESTABLE'(2,K'&XRESTABLE-2)                           00758000
.*                                                                      00758100
.ZI41F                ANOP  ,                                           00758200
.*                                                                      00758300
&ZOPN                 SETA  &ZOPN+1                                     00758400
&ZOPL(&ZOPN)          SETC  ' '                                         00758500
&ZOPO(&ZOPN)          SETC  'STAM'                                      00758600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,80(1)'                       00758700
&ZOPD(&ZOPN)          SETC  '++ &ZXRESTABLE XRESTABLE'                  00758800
.*                                                                      00758900
.ZI41G                ANOP  ,                                           00759000
.*-------------------------------------------------------------------   00759100
.***AI.L23 ALET XENQTOKEN F                                             00759200
         AIF   ('&ZXENQTOKEN' EQ '').ZI42G                              00759300
         AIF   ('&SYSASCE' EQ 'P').ZI42G   SYSSTATE PRIMARY             00759400
&ZCLNG                SETC  '&XENQTOKEN'                                00759500
         AIF   ('&XENQTOKEN'(1,1) EQ '(').ZI42E  IN AR                  00759600
.*                                                                      00759700
&ZCGPR                SETC  '14'                                        00759800
&ZOPN                 SETA  &ZOPN+1                                     00759900
&ZOPL(&ZOPN)          SETC  ' '                                         00760000
&ZOPO(&ZOPN)          SETC  'LAE'                                       00760100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00760200
&ZOPD(&ZOPN)          SETC  '++ &ZXENQTOKEN XENQTOKEN'                  00760300
                      AGO   .ZI42F                                      00760400
.*                                                                      00760500
.ZI42E                ANOP  ,                                           00760600
&ZCGPR   SETC  '&XENQTOKEN'(2,K'&XENQTOKEN-2)                           00760700
.*                                                                      00760800
.ZI42F                ANOP  ,                                           00760900
.*                                                                      00761000
&ZOPN                 SETA  &ZOPN+1                                     00761100
&ZOPL(&ZOPN)          SETC  ' '                                         00761200
&ZOPO(&ZOPN)          SETC  'STAM'                                      00761300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,84(1)'                       00761400
&ZOPD(&ZOPN)          SETC  '++ &ZXENQTOKEN XENQTOKEN'                  00761500
.*                                                                      00761600
.ZI42G                ANOP  ,                                           00761700
.*-------------------------------------------------------------------   00761800
.***AI.L23 ALET XRETURNTABLE F                                          00761900
         AIF   ('&ZXRETURNTABLE' EQ '').ZI43G                           00762000
         AIF   ('&SYSASCE' EQ 'P').ZI43G   SYSSTATE PRIMARY             00762100
&ZCLNG                SETC  '&XRETURNTABLE'                             00762200
         AIF   ('&XRETURNTABLE'(1,1) EQ '(').ZI43E  IN AR               00762300
.*                                                                      00762400
&ZCGPR                SETC  '14'                                        00762500
&ZOPN                 SETA  &ZOPN+1                                     00762600
&ZOPL(&ZOPN)          SETC  ' '                                         00762700
&ZOPO(&ZOPN)          SETC  'LAE'                                       00762800
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00762900
&ZOPD(&ZOPN)          SETC  '++ &ZXRETURNTABLE XRETURNTABLE'            00763000
                      AGO   .ZI43F                                      00763100
.*                                                                      00763200
.ZI43E                ANOP  ,                                           00763300
&ZCGPR   SETC  '&XRETURNTABLE'(2,K'&XRETURNTABLE-2)                     00763400
.*                                                                      00763500
.ZI43F                ANOP  ,                                           00763600
.*                                                                      00763700
&ZOPN                 SETA  &ZOPN+1                                     00763800
&ZOPL(&ZOPN)          SETC  ' '                                         00763900
&ZOPO(&ZOPN)          SETC  'STAM'                                      00764000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,88(1)'                       00764100
&ZOPD(&ZOPN)          SETC  '++ &ZXRETURNTABLE XRETURNTABLE'            00764200
.*                                                                      00764300
.ZI43G                ANOP  ,                                           00764400
.*-------------------------------------------------------------------   00764500
.***AI.L23 ALET XENQTOKENTBL F                                          00764600
         AIF   ('&ZXENQTOKENTBL' EQ '').ZI44G                           00764700
         AIF   ('&SYSASCE' EQ 'P').ZI44G   SYSSTATE PRIMARY             00764800
&ZCLNG                SETC  '&XENQTOKENTBL'                             00764900
         AIF   ('&XENQTOKENTBL'(1,1) EQ '(').ZI44E  IN AR               00765000
.*                                                                      00765100
&ZCGPR                SETC  '14'                                        00765200
&ZOPN                 SETA  &ZOPN+1                                     00765300
&ZOPL(&ZOPN)          SETC  ' '                                         00765400
&ZOPO(&ZOPN)          SETC  'LAE'                                       00765500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00765600
&ZOPD(&ZOPN)          SETC  '++ &ZXENQTOKENTBL XENQTOKENTBL'            00765700
                      AGO   .ZI44F                                      00765800
.*                                                                      00765900
.ZI44E                ANOP  ,                                           00766000
&ZCGPR   SETC  '&XENQTOKENTBL'(2,K'&XENQTOKENTBL-2)                     00766100
.*                                                                      00766200
.ZI44F                ANOP  ,                                           00766300
.*                                                                      00766400
&ZOPN                 SETA  &ZOPN+1                                     00766500
&ZOPL(&ZOPN)          SETC  ' '                                         00766600
&ZOPO(&ZOPN)          SETC  'STAM'                                      00766700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,92(1)'                       00766800
&ZOPD(&ZOPN)          SETC  '++ &ZXENQTOKENTBL XENQTOKENTBL'            00766900
.*                                                                      00767000
.ZI44G                ANOP  ,                                           00767100
.*-------------------------------------------------------------------   00767200
.***AI.L18 ALET XRNAME F                                                00767300
         AIF   ('&XRNAME' NE 'DO_NOT_OVERRIDE').ZI45                    00767400
&ZXRNAME              SETC  ''             RESET INPUT/OUTPUT           00767500
.ZI45                 ANOP  ,                                           00767600
.*-------------------------------------------------------------------   00767700
.***AI.L23 ALET XRNAME F                                                00767800
         AIF   ('&ZXRNAME' EQ '').ZI45G                                 00767900
         AIF   ('&SYSASCE' EQ 'P').ZI45G   SYSSTATE PRIMARY             00768000
&ZCLNG                SETC  '&XRNAME'                                   00768100
         AIF   ('&XRNAME'(1,1) EQ '(').ZI45E  IN AR                     00768200
.*                                                                      00768300
&ZCGPR                SETC  '14'                                        00768400
&ZOPN                 SETA  &ZOPN+1                                     00768500
&ZOPL(&ZOPN)          SETC  ' '                                         00768600
&ZOPO(&ZOPN)          SETC  'LAE'                                       00768700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00768800
&ZOPD(&ZOPN)          SETC  '++ &ZXRNAME XRNAME'                        00768900
                      AGO   .ZI45F                                      00769000
.*                                                                      00769100
.ZI45E                ANOP  ,                                           00769200
&ZCGPR   SETC  '&XRNAME'(2,K'&XRNAME-2)                                 00769300
.*                                                                      00769400
.ZI45F                ANOP  ,                                           00769500
.*                                                                      00769600
&ZOPN                 SETA  &ZOPN+1                                     00769700
&ZOPL(&ZOPN)          SETC  ' '                                         00769800
&ZOPO(&ZOPN)          SETC  'STAM'                                      00769900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,96(1)'                       00770000
&ZOPD(&ZOPN)          SETC  '++ &ZXRNAME XRNAME'                        00770100
.*                                                                      00770200
.ZI45G                ANOP  ,                                           00770300
.*-------------------------------------------------------------------   00770400
.***AI.L23 ALET XANSAREA F                                              00770500
         AIF   ('&ZXANSAREA' EQ '').ZI46G                               00770600
         AIF   ('&SYSASCE' EQ 'P').ZI46G   SYSSTATE PRIMARY             00770700
&ZCLNG                SETC  '&XANSAREA'                                 00770800
         AIF   ('&XANSAREA'(1,1) EQ '(').ZI46E  IN AR                   00770900
.*                                                                      00771000
&ZCGPR                SETC  '14'                                        00771100
&ZOPN                 SETA  &ZOPN+1                                     00771200
&ZOPL(&ZOPN)          SETC  ' '                                         00771300
&ZOPO(&ZOPN)          SETC  'LAE'                                       00771400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00771500
&ZOPD(&ZOPN)          SETC  '++ &ZXANSAREA XANSAREA'                    00771600
                      AGO   .ZI46F                                      00771700
.*                                                                      00771800
.ZI46E                ANOP  ,                                           00771900
&ZCGPR   SETC  '&XANSAREA'(2,K'&XANSAREA-2)                             00772000
.*                                                                      00772100
.ZI46F                ANOP  ,                                           00772200
.*                                                                      00772300
&ZOPN                 SETA  &ZOPN+1                                     00772400
&ZOPL(&ZOPN)          SETC  ' '                                         00772500
&ZOPO(&ZOPN)          SETC  'STAM'                                      00772600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,100(1)'                      00772700
&ZOPD(&ZOPN)          SETC  '++ &ZXANSAREA XANSAREA'                    00772800
.*                                                                      00772900
.ZI46G                ANOP  ,                                           00773000
.*-------------------------------------------------------------------   00773100
.***AI.L18  XANSLEN F                                                   00773200
         AIF   ('&XANSLEN' NE 'NO_ANSLEN').ZI47                         00773300
&ZXANSLEN             SETC  ''             RESET INPUT/OUTPUT           00773400
.ZI47                 ANOP  ,                                           00773500
.*-------------------------------------------------------------------   00773600
.***AI.L25  XANSLEN F                                                   00773700
                      AIF   ('&ZXANSLEN' EQ '').ZI47E                   00773800
                      AIF   ('&ZXANSLEN' EQ 'OUTPUT').ZI47E             00773900
&ZCGPR                SETC  '&XANSLEN'                                  00774000
.*                                                                      00774100
                      AIF   ('&XANSLEN'(1,1) NE '(').ZI47B              00774200
&ZCGPR   SETC  '0('.'&XANSLEN'(2,K'&XANSLEN-2).')'                      00774300
                      AGO   .ZI47D                                      00774400
.ZI47B                ANOP  ,                                           00774500
.*                                                                      00774600
&ZC                   SETC  '&XANSLEN'(1,1)                             00774700
                      AIF   (T'&ZC NE 'N').ZI47D                        00774800
&ZC                   SETC  '&XANSLEN'                                  00774900
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI47D               00775000
&ZCGPR                SETC  '=AL4(&XANSLEN)'                            00775100
.*                                                                      00775200
.ZI47D                ANOP  ,                                           00775300
.*                                                                      00775400
&ZOPN                 SETA  &ZOPN+1                                     00775500
&ZOPL(&ZOPN)          SETC  ' '                                         00775600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00775700
&ZOPV(&ZOPN)          SETC  '104(4,1),&ZCGPR'                           00775800
&ZOPD(&ZOPN)          SETC  '++ &ZXANSLEN XANSLEN'                      00775900
.*                                                                      00776000
.ZI47E                ANOP  ,                                           00776100
.*-------------------------------------------------------------------   00776200
.***AI.L25  XECB@ AL4                                                   00776300
                      AIF   ('&ZXECB@' EQ '').ZI48E                     00776400
                      AIF   ('&ZXECB@' EQ 'OUTPUT').ZI48E               00776500
&ZCGPR                SETC  '&XECB@'                                    00776600
.*                                                                      00776700
                      AIF   ('&XECB@'(1,1) NE '(').ZI48B                00776800
&ZCGPR   SETC  '0('.'&XECB@'(2,K'&XECB@-2).')'                          00776900
                      AGO   .ZI48D                                      00777000
.ZI48B                ANOP  ,                                           00777100
.*                                                                      00777200
&ZC                   SETC  '&XECB@'(1,1)                               00777300
                      AIF   (T'&ZC NE 'N').ZI48D                        00777400
&ZC                   SETC  '&XECB@'                                    00777500
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI48D               00777600
&ZCGPR                SETC  '=AL4(&XECB@)'                              00777700
.*                                                                      00777800
.ZI48D                ANOP  ,                                           00777900
.*                                                                      00778000
&ZOPN                 SETA  &ZOPN+1                                     00778100
&ZOPL(&ZOPN)          SETC  ' '                                         00778200
&ZOPO(&ZOPN)          SETC  'MVC'                                       00778300
&ZOPV(&ZOPN)          SETC  '108(4,1),&ZCGPR'                           00778400
&ZOPD(&ZOPN)          SETC  '++ &ZXECB@ XECB@'                          00778500
.*                                                                      00778600
.ZI48E                ANOP  ,                                           00778700
.*-------------------------------------------------------------------   00778800
.***AI.L18  XUCB@ AL4                                                   00778900
         AIF   ('&XUCB@' NE 'DO_NOT_OVERRIDE').ZI49                     00779000
&ZXUCB@               SETC  ''             RESET INPUT/OUTPUT           00779100
.ZI49                 ANOP  ,                                           00779200
.*-------------------------------------------------------------------   00779300
.***AI.L25  XUCB@ AL4                                                   00779400
                      AIF   ('&ZXUCB@' EQ '').ZI49E                     00779500
                      AIF   ('&ZXUCB@' EQ 'OUTPUT').ZI49E               00779600
&ZCGPR                SETC  '&XUCB@'                                    00779700
.*                                                                      00779800
                      AIF   ('&XUCB@'(1,1) NE '(').ZI49B                00779900
&ZCGPR   SETC  '0('.'&XUCB@'(2,K'&XUCB@-2).')'                          00780000
                      AGO   .ZI49D                                      00780100
.ZI49B                ANOP  ,                                           00780200
.*                                                                      00780300
&ZC                   SETC  '&XUCB@'(1,1)                               00780400
                      AIF   (T'&ZC NE 'N').ZI49D                        00780500
&ZC                   SETC  '&XUCB@'                                    00780600
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI49D               00780700
&ZCGPR                SETC  '=AL4(&XUCB@)'                              00780800
.*                                                                      00780900
.ZI49D                ANOP  ,                                           00781000
.*                                                                      00781100
&ZOPN                 SETA  &ZOPN+1                                     00781200
&ZOPL(&ZOPN)          SETC  ' '                                         00781300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00781400
&ZOPV(&ZOPN)          SETC  '112(4,1),&ZCGPR'                           00781500
&ZOPD(&ZOPN)          SETC  '++ &ZXUCB@ XUCB@'                          00781600
.*                                                                      00781700
.ZI49E                ANOP  ,                                           00781800
.*-------------------------------------------------------------------   00781900
.***AI.L25  XNUMRES XL2                                                 00782000
                      AIF   ('&ZXNUMRES' EQ '').ZI50E                   00782100
                      AIF   ('&ZXNUMRES' EQ 'OUTPUT').ZI50E             00782200
&ZCGPR                SETC  '&XNUMRES'                                  00782300
.*                                                                      00782400
                      AIF   ('&XNUMRES'(1,1) NE '(').ZI50B              00782500
&ZCGPR   SETC  '0('.'&XNUMRES'(2,K'&XNUMRES-2).')'                      00782600
                      AGO   .ZI50D                                      00782700
.ZI50B                ANOP  ,                                           00782800
.*                                                                      00782900
&ZC                   SETC  '&XNUMRES'(1,1)                             00783000
                      AIF   (T'&ZC NE 'N').ZI50D                        00783100
&ZC                   SETC  '&XNUMRES'                                  00783200
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI50D               00783300
&ZCGPR                SETC  '=AL2(&XNUMRES)'                            00783400
.*                                                                      00783500
.ZI50D                ANOP  ,                                           00783600
.*                                                                      00783700
&ZOPN                 SETA  &ZOPN+1                                     00783800
&ZOPL(&ZOPN)          SETC  ' '                                         00783900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00784000
&ZOPV(&ZOPN)          SETC  '116(2,1),&ZCGPR'                           00784100
&ZOPD(&ZOPN)          SETC  '++ &ZXNUMRES XNUMRES'                      00784200
.*                                                                      00784300
.ZI50E                ANOP  ,                                           00784400
.*-------------------------------------------------------------------   00784500
.***AI.L18  XRNAMELEN XL1                                               00784600
         AIF   ('&XRNAMELEN' NE 'DO_NOT_OVERRIDE').ZI51                 00784700
&ZXRNAMELEN           SETC  ''             RESET INPUT/OUTPUT           00784800
.ZI51                 ANOP  ,                                           00784900
.*-------------------------------------------------------------------   00785000
.***AI.L25  XRNAMELEN XL1                                               00785100
                      AIF   ('&ZXRNAMELEN' EQ '').ZI51E                 00785200
                      AIF   ('&ZXRNAMELEN' EQ 'OUTPUT').ZI51E           00785300
&ZCGPR                SETC  '&XRNAMELEN'                                00785400
.*                                                                      00785500
                      AIF   ('&XRNAMELEN'(1,1) NE '(').ZI51B            00785600
&ZCGPR   SETC  '0('.'&XRNAMELEN'(2,K'&XRNAMELEN-2).')'                  00785700
                      AGO   .ZI51D                                      00785800
.ZI51B                ANOP  ,                                           00785900
.*                                                                      00786000
&ZC                   SETC  '&XRNAMELEN'(1,1)                           00786100
                      AIF   (T'&ZC NE 'N').ZI51D                        00786200
&ZC                   SETC  '&XRNAMELEN'                                00786300
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI51D               00786400
&ZCGPR                SETC  '=AL1(&XRNAMELEN)'                          00786500
.*                                                                      00786600
.ZI51D                ANOP  ,                                           00786700
.*                                                                      00786800
&ZOPN                 SETA  &ZOPN+1                                     00786900
&ZOPL(&ZOPN)          SETC  ' '                                         00787000
&ZOPO(&ZOPN)          SETC  'MVC'                                       00787100
&ZOPV(&ZOPN)          SETC  '118(1,1),&ZCGPR'                           00787200
&ZOPD(&ZOPN)          SETC  '++ &ZXRNAMELEN XRNAMELEN'                  00787300
.*                                                                      00787400
.ZI51E                ANOP  ,                                           00787500
.*-------------------------------------------------------------------   00787600
.***AI.LVER01                                                           00787700
                      AIF  (&XPLISTVER LT 2).ZI54Z                      00787800
.*-------------------------------------------------------------------   00787900
.***AI.L18 ADDR3164 XUSERDATA AD                                        00788000
         AIF   ('&XUSERDATA' NE 'NO_USERDATA').ZI54                     00788100
&ZXUSERDATA           SETC  ''             RESET INPUT/OUTPUT           00788200
.ZI54                 ANOP  ,                                           00788300
.*-------------------------------------------------------------------   00788400
.***AI.L19 ADDR3164 XUSERDATA AD                                        00788500
                      AIF   ('&ZXUSERDATA' EQ '').ZI54H                 00788600
&ZCLNG                SETC  '&XUSERDATA'                                00788700
&ZCGPR                SETC  '14'                                        00788800
         AIF   ('&XUSERDATA'(1,1) EQ '(').ZI54F  IN GPR                 00788900
.*                                                                      00789000
&ZOPN                 SETA  &ZOPN+1                                     00789100
&ZOPL(&ZOPN)          SETC  ' '                                         00789200
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00789300
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00789400
&ZOPD(&ZOPN)          SETC  '++ &ZXUSERDATA XUSERDATA'                  00789500
.*                                                                      00789600
                      AGO   .ZI54G                                      00789700
.*                                                                      00789800
.ZI54F                ANOP  ,                                           00789900
&ZCGPR   SETC  '&XUSERDATA'(2,K'&XUSERDATA-2)                           00790000
.*                                                                      00790100
.ZI54G                ANOP  ,                                           00790200
                      AIF   ('&SYSAM64' EQ 'YES').ZI54H1A               00790300
.*                                                                      00790400
&ZOPN                 SETA  &ZOPN+1                                     00790500
&ZOPL(&ZOPN)          SETC  ' '                                         00790600
&ZOPO(&ZOPN)          SETC  'ST'                                        00790700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4+128(,1)'                          00790800
&ZOPD(&ZOPN)          SETC  '++ &ZXUSERDATA XUSERDATA'                  00790900
.*                                                                      00791000
                      AGO   .ZI54H                                      00791100
.ZI54H1A              ANOP  ,                                           00791200
.*                                                                      00791300
&ZOPN                 SETA  &ZOPN+1                                     00791400
&ZOPL(&ZOPN)          SETC  ' '                                         00791500
&ZOPO(&ZOPN)          SETC  'STG'                                       00791600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,128(,1)'                            00791700
&ZOPD(&ZOPN)          SETC  '++ &ZXUSERDATA XUSERDATA'                  00791800
.*                                                                      00791900
.ZI54H                ANOP  ,                                           00792000
.*-------------------------------------------------------------------   00792100
.***AI.LVER02                                                           00792200
.ZI54Z                ANOP  ,                                           00792300
.*-------------------------------------------------------------------   00792400
.***AI.LVER01                                                           00792500
                      AIF  (&XPLISTVER LT 2).ZI55Z                      00792600
.*-------------------------------------------------------------------   00792700
.***AI.L18 ALET XUSERDATA F                                             00792800
         AIF   ('&XUSERDATA' NE 'NO_USERDATA').ZI55                     00792900
&ZXUSERDATA           SETC  ''             RESET INPUT/OUTPUT           00793000
.ZI55                 ANOP  ,                                           00793100
.*-------------------------------------------------------------------   00793200
.***AI.L23 ALET XUSERDATA F                                             00793300
         AIF   ('&ZXUSERDATA' EQ '').ZI55G                              00793400
         AIF   ('&SYSASCE' EQ 'P').ZI55G   SYSSTATE PRIMARY             00793500
&ZCLNG                SETC  '&XUSERDATA'                                00793600
         AIF   ('&XUSERDATA'(1,1) EQ '(').ZI55E  IN AR                  00793700
.*                                                                      00793800
&ZCGPR                SETC  '14'                                        00793900
                      AGO   .ZI55F                                      00794000
.*                                                                      00794100
.ZI55E                ANOP  ,                                           00794200
&ZCGPR   SETC  '&XUSERDATA'(2,K'&XUSERDATA-2)                           00794300
.*                                                                      00794400
.ZI55F                ANOP  ,                                           00794500
.*                                                                      00794600
&ZOPN                 SETA  &ZOPN+1                                     00794700
&ZOPL(&ZOPN)          SETC  ' '                                         00794800
&ZOPO(&ZOPN)          SETC  'STAM'                                      00794900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCGPR,136(1)'                      00795000
&ZOPD(&ZOPN)          SETC  '++ &ZXUSERDATA XUSERDATA'                  00795100
.*                                                                      00795200
.ZI55G                ANOP  ,                                           00795300
.*-------------------------------------------------------------------   00795400
.***AI.LVER02                                                           00795500
.ZI55Z                ANOP  ,                                           00795600
.*-------------------------------------------------------------------   00795700
.***AI.LVER01                                                           00795800
                      AIF  (&XPLISTVER LT 2).ZI56Z                      00795900
.*-------------------------------------------------------------------   00796000
.***AI.LVER02                                                           00796100
.ZI56Z                ANOP  ,                                           00796200
.*-------------------------------------------------------------------   00796300
.***AI.L25  XSCOPEVAL XL1                                               00796400
                      AIF   ('&ZXSCOPEVAL' EQ '').ZI58E                 00796500
                      AIF   ('&ZXSCOPEVAL' EQ 'OUTPUT').ZI58E           00796600
&ZCGPR                SETC  '&XSCOPEVAL'                                00796700
.*                                                                      00796800
                      AIF   ('&XSCOPEVAL'(1,1) NE '(').ZI58B            00796900
&ZCGPR   SETC  '0('.'&XSCOPEVAL'(2,K'&XSCOPEVAL-2).')'                  00797000
                      AGO   .ZI58D                                      00797100
.ZI58B                ANOP  ,                                           00797200
.*                                                                      00797300
&ZC                   SETC  '&XSCOPEVAL'(1,1)                           00797400
                      AIF   (T'&ZC NE 'N').ZI58D                        00797500
&ZC                   SETC  '&XSCOPEVAL'                                00797600
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI58D               00797700
&ZCGPR                SETC  '=AL1(&XSCOPEVAL)'                          00797800
.*                                                                      00797900
.ZI58D                ANOP  ,                                           00798000
.*                                                                      00798100
&ZOPN                 SETA  &ZOPN+1                                     00798200
&ZOPL(&ZOPN)          SETC  ' '                                         00798300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00798400
&ZOPV(&ZOPN)          SETC  '2(1,1),&ZCGPR'                             00798500
&ZOPD(&ZOPN)          SETC  '++ &ZXSCOPEVAL XSCOPEVAL'                  00798600
.*                                                                      00798700
.ZI58E                ANOP  ,                                           00798800
.*-------------------------------------------------------------------   00798900
.***AI.L25  XCONTROLVAL XL1                                             00799000
                      AIF   ('&ZXCONTROLVAL' EQ '').ZI60E               00799100
                      AIF   ('&ZXCONTROLVAL' EQ 'OUTPUT').ZI60E         00799200
&ZCGPR                SETC  '&XCONTROLVAL'                              00799300
.*                                                                      00799400
                      AIF   ('&XCONTROLVAL'(1,1) NE '(').ZI60B          00799500
&ZCGPR   SETC  '0('.'&XCONTROLVAL'(2,K'&XCONTROLVAL-2).')'              00799600
                      AGO   .ZI60D                                      00799700
.ZI60B                ANOP  ,                                           00799800
.*                                                                      00799900
&ZC                   SETC  '&XCONTROLVAL'(1,1)                         00800000
                      AIF   (T'&ZC NE 'N').ZI60D                        00800100
&ZC                   SETC  '&XCONTROLVAL'                              00800200
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI60D               00800300
&ZCGPR                SETC  '=AL1(&XCONTROLVAL)'                        00800400
.*                                                                      00800500
.ZI60D                ANOP  ,                                           00800600
.*                                                                      00800700
&ZOPN                 SETA  &ZOPN+1                                     00800800
&ZOPL(&ZOPN)          SETC  ' '                                         00800900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00801000
&ZOPV(&ZOPN)          SETC  '3(1,1),&ZCGPR'                             00801100
&ZOPD(&ZOPN)          SETC  '++ &ZXCONTROLVAL XCONTROLVAL'              00801200
.*                                                                      00801300
.ZI60E                ANOP  ,                                           00801400
.*-------------------------------------------------------------------   00801500
&ZOPN1                SETA &ZOPN                                        00801600
.*******************************************************************    00801700
.***  PROCESS ISGENQ OUTPUT PARAMETERS                                  00801800
.*******************************************************************    00801900
                      ACTR  10000                                       00802000
.*******************************************************************    00802100
.***AO.X02  RETURN CODE PROCESSING                                      00802200
.*******************************************************************    00802300
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00802400
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00802500
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00802600
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00802700
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00802800
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00802900
&ZOPN                 SETA  &ZOPN+1                                     00803000
&ZOPL(&ZOPN)          SETC  ' '                                         00803100
&ZOPO(&ZOPN)          SETC  'ST'                                        00803200
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00803300
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00803400
                      AGO   .ZMRETX                                     00803500
.*                                                                      00803600
.ZMRET2               ANOP  ,                                           00803700
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00803800
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00803900
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00804000
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00804100
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00804200
&ZOPN                 SETA  &ZOPN+1                                     00804300
&ZOPL(&ZOPN)          SETC  ' '                                         00804400
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00804500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00804600
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00804700
.ZMRETX               ANOP  ,                                           00804800
.*******************************************************************    00804900
.***AO.X03  REASON CODE PROCESSING                                      00805000
.*******************************************************************    00805100
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00805200
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00805300
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00805400
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00805500
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00805600
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00805700
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00805800
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00805900
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00806000
&ZOPN                 SETA  &ZOPN+1                                     00806100
&ZOPL(&ZOPN)          SETC  ' '                                         00806200
&ZOPO(&ZOPN)          SETC  'ST'                                        00806300
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00806400
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00806500
                      AGO   .ZMRSNX                                     00806600
.*                                                                      00806700
.ZMRSN2               ANOP  ,                                           00806800
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00806900
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00807000
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00807100
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00807200
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00807300
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00807400
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00807500
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00807600
&ZOPN                 SETA  &ZOPN+1                                     00807700
&ZOPL(&ZOPN)          SETC  ' '                                         00807800
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00807900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00808000
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00808100
.ZMRSNX               ANOP  ,                                           00808200
.*******************************************************************    00808300
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00808400
.*******************************************************************    00808500
.ZMFLX                ANOP  ,              MF=L PROCESSING              00808600
.*******************************************************************    00808700
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00808800
.*******************************************************************    00808900
                      ACTR  10000                                       00809000
.*                                                                      00809100
                      LCLA  &ZLC           COLUMN POSITION              00809200
                      LCLA  &ZOPX          LIST TABLE INDEX             00809300
                      LCLC  &ZLL           LABEL                        00809400
                      LCLC  &ZLOP          OPERATION                    00809500
                      LCLC  &ZLV           VALUE                        00809600
                      LCLC  &ZLD           DESCRIPTION                  00809700
.*                                                                      00809800
&ZOPX                 SETA  1                                           00809900
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00810000
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00810100
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00810200
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00810300
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00810400
                      AIF   (K'&ZLD LE 0).ZL5                           00810500
&ZLC                  SETA  35             COMMENT COLUMN               00810600
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00810700
&ZLC                  SETA  33             COMMMENT COLUMN              00810800
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00810900
&ZLV                  SETC  '&ZLV'.' '                                  00811000
                      AGO   .ZL3                                        00811100
.*                                                                      00811200
.ZL4                  ANOP  ,                                           00811300
&ZLV                  SETC  '&ZLV'.' '                                  00811400
.ZL5                  ANOP  ,                                           00811500
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00811600
.*                                                                      00811700
&ZLL     &ZLOP &ZLV                                                     00811800
.*                                                                      00811900
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00812000
                      AGO   .ZL2           CONTINUE LOOPING             00812100
.*                                                                      00812200
.ZLX                  ANOP  ,                                           00812300
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00812400
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00812500
         LCLC  &R0COND,&R0REQ                                           00812600
         LCLC  &R0CONDREM,&R0REQREM                                     00812700
         AIF ('&XREQUEST' EQ 'OBTAIN').ZSETREQOB                        00812800
         AIF ('&XREQUEST' EQ 'CHANGE').ZSETREQCH                        00812900
         AIF ('&XREQUEST' EQ 'RELEASE').ZSETREQRE                       00813000
&R0REQ   SETC  '00'                    SET TO BAD VALUE                 00813100
         AGO .ZENDSETREQ                                                00813200
.ZSETREQOB ANOP ,                                                       00813300
&R0REQ   SETC  '_XREQUEST_OBTAIN'      INDICATE REQUEST=OBTAIN          00813400
         NI    6(1),B'01111111'        CLEAR KEYUSED_CONTROL FOR COMPAT 00813500
         AGO .ZENDSETREQ                                                00813600
.ZSETREQCH ANOP ,                                                       00813700
&R0REQ   SETC  '_XREQUEST_CHANGE'      INDICATE REQUEST=CHANGE          00813800
         AGO .ZENDSETREQ                                                00813900
.ZSETREQRE ANOP ,                                                       00814000
&R0REQ   SETC  '_XREQUEST_RELEASE'     INDICATE REQUEST=RELEASE         00814100
.ZENDSETREQ ANOP ,                                                      00814200
         AIF ('&XCOND' NE 'YES').ZSETCONDN                              00814300
&R0COND  SETC  '_XCOND_YES'            INDICATE COND=YES                00814400
         AGO .ZENDSETCOND                                               00814500
.ZSETCONDN ANOP ,                                                       00814600
&R0COND  SETC  '_XCOND_NO'             INDICATE COND=NO                 00814700
.ZENDSETCOND ANOP ,                                                     00814800
         AIF   ('&SYSAM64' EQ 'YES').ZLOADCVT64                   @01A  00814900
         L     14,16(0,0)              GET CVT ADDRESS                  00815000
         AGO .ZENDLOADCVT                                         @01A  00815100
.ZLOADCVT64 ANOP ,                                                @01A  00815200
         LLGT  14,16(0,0)              GET CVT ADDRESS            @01A  00815300
.ZENDLOADCVT ANOP ,                                               @01A  00815400
         L     14,772(14,0)            GET SFT ADDRESS                  00815500
         L     14,4*028-4(14,0)        GET LX/EX FOR SERVICE RTN        00815600
  LHI 0,(&THEPLIST.&R0REQ.*256)+&THEPLIST.&R0COND                       00815700
         PC    0(14)                   PC to ISGGRT                     00815800
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00815900
.ZLINKX               ANOP  ,                                           00816000
.*******************************************************************    00816100
.***AP.X01  FORMAT GENERATED CODE                                       00816200
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00816300
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00816400
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00816500
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00816600
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00816700
                      AIF   (K'&ZLD LE 0).ZL51                          00816800
&ZLC                  SETA  35             COMMENT COLUMN               00816900
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00817000
&ZLC                  SETA  33             COMMENT COLUMN               00817100
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00817200
&ZLV                  SETC  '&ZLV'.' '                                  00817300
                      AGO   .ZL31                                       00817400
.*                                                                      00817500
.ZL41                 ANOP  ,                                           00817600
&ZLV                  SETC  '&ZLV'.' '                                  00817700
.ZL51                 ANOP  ,                                           00817800
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00817900
.*                                                                      00818000
&ZLL     &ZLOP &ZLV                                                     00818100
.*                                                                      00818200
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00818300
                      AGO   .ZL21          CONTINUE LOOPING             00818400
.*                                                                      00818500
.ZLX1                 ANOP  ,                                           00818600
.*******************************************************************    00818700
.***AP.X02  END OF ISGENQ MACRO                                         00818800
&ZISGENQ              SETC  'YES'          SET ISGENQ USED              00818900
         POP   PRINT                                                    00819000
*                                            ISGENQ-2                   00819100
         SPACE 1                                                        00819200
.ZLX2                 ANOP  ,                                           00819300
         MEND                                                           00819400
**********************************************************************/ 00819500
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00819600
*%ISGENQ: MACRO KEYS(REQUEST,TEST,CONTENTIONACT,WAITTYPE,ECB@,          00819700
*                 OWNINGTTOKEN,ENQMAX,USERDATA,ANSAREA,ANSLEN,RESLIST,  00819800
*                 QNAME,RNAME,RNAMELEN,CONTROL,CONTROLVAL,              00819900
*                 RESERVEVOLUME,SCOPE,SCOPEVAL,RNL,UCB@,SYNCHRES,       00820000
*                 ENQTOKEN,NUMRES,RESTABLE,ENQTOKENTBL,RETURNTABLE,     00820100
*                 COND,RETCODE,RSNCODE,PLISTVER,MF);                    00820200
*  ANS('?'!!MACLABEL!!' '!!'ISGENQP '!!MACLIST!!                        00820300
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              00820400
*%END ISGENQ;                                                           00820500
