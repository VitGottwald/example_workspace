*/**** START OF SPECIFICATIONS **************************************** 00000100
*                                                                     * 00000200
*                                                                     * 00000300
*01* MACRO NAME:  IWM4MSTO                              -01/31/13-<0> * 00000400
*                                                                     * 00000500
*                                                                     * 00000600
*01* DESCRIPTIVE NAME:  Stops a Work Unit                             * 00000700
*                                                                     * 00000800
*01* PROPRIETARY STATEMENT:                                           * 00000900
*                                                                     * 00001000
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001100
*     5650-ZOS COPYRIGHT IBM CORP. 2013                               * 00001200
*                                                                     * 00001300
* STATUS= HBB7790                                                     * 00001400
*                                                                     * 00001500
*                                                                     * 00001600
*                                                                     * 00001700
*01* FUNCTION:                                                        * 00001800
*                                                                     * 00001900
*                                                                     * 00002000
*      The purpose of this service is to stop a work unit which has   * 00002100
*      been started by IWM4MSTR. A work unit started by IWM4MINI is   * 00002200
*      not affected by this service. The work unit is unblocked, if   * 00002300
*      it is blocked at the time you issue this macro.                * 00002400
*                                                                     * 00002500
*01* EXTERNAL CLASSIFICATION:  PI                                     * 00002600
*                                                                     * 00002700
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00002800
*                                                                     * 00002900
*01* ENVIRONMENT:                                                     * 00003000
*                                                                     * 00003100
*                                                                     * 00003200
*      Dispatchable unit mode: Task or SRB mode.                      * 00003300
*                                                                     * 00003400
*      Minimum authorization: Supervisor state or program key mask    * 00003500
*                        (PKM) allowing keys 0-7.                     * 00003600
*                                                                     * 00003700
*      AMODE:            31- or 64-bit.  If in 64-Bit addressing      * 00003800
*                        mode, code SYSSTATE AMODE64=YES before       * 00003900
*                        invoking this macro.                         * 00004000
*                                                                     * 00004100
*      ASC mode:         Primary.                                     * 00004200
*                                                                     * 00004300
*      Cross Memory Mode: Any PASN, any HASN, any SASN.               * 00004400
*                                                                     * 00004500
*      Interrupt status: Enabled for I/O and external interrupts.     * 00004600
*                                                                     * 00004700
*      Locks:            No restriction.                              * 00004800
*                                                                     * 00004900
*      Control parameters: Control parameters must be in the primary  * 00005000
*                        address space.                               * 00005100
*                                                                     * 00005200
*                                                                     * 00005300
*                                                                     * 00005400
*01* PROGRAMMING REQUIREMENTS:                                        * 00005500
*                                                                     * 00005600
*                                                                     * 00005700
*    1.  The macro CVT must be included to use this macro.            * 00005800
*                                                                     * 00005900
*    2.  The macro IWMYCON must be included to use this macro.        * 00006000
*                                                                     * 00006100
*    3.  The macro IWMPB must be in the library concatenation, since  * 00006200
*        it is included by IWMYCON.                                   * 00006300
*                                                                     * 00006400
*    4.  Note that the high order halfword of bits 0-31 of register   * 00006500
*        0, and the reason code variable when specified, may be       * 00006600
*        non-zero and represents diagnostic data which is NOT part of * 00006700
*        the external interface.  The high order halfword should thus * 00006800
*        be excluded from comparison with the reason code values      * 00006900
*        described above.  The constant, IWMRSNCODE_MASK_CONST        * 00007000
*        defined in IWMYCON, may be used for this purpose.            * 00007100
*                                                                     * 00007200
*                                                                     * 00007300
*                                                                     * 00007400
*01* RESTRICTIONS:                                                    * 00007500
*                                                                     * 00007600
*                                                                     * 00007700
*    1.  This macro may not be used prior to the completion of WLM    * 00007800
*        address space initialization                                 * 00007900
*                                                                     * 00008000
*    2.  Caller must have issued the IWM4MSTR macro successfully.     * 00008100
*                                                                     * 00008200
*    3.  Caller is responsible for error recovery                     * 00008300
*                                                                     * 00008400
*    4.  The current PSW key must be 0 or match the key specified on  * 00008500
*        IWM4MCRE provided the latter is a system key (0-7).          * 00008600
*                                                                     * 00008700
*    5.  The caller must serialize to prevent any delay monitoring    * 00008800
*        services from being invoked concurrently for the environment * 00008900
*        represented by the monitoring token                          * 00009000
*                                                                     * 00009100
*    6.  This macro may only be used on z/OS V2R1 or higher.          * 00009200
*                                                                     * 00009300
*                                                                     * 00009400
*                                                                     * 00009500
*01* INPUT REGISTER INFORMATION:                                      * 00009600
*                                                                     * 00009700
*    Before issuing the IWM4MSTO macro, the caller does not have to   * 00009800
*    place any information into any register unless using it in       * 00009900
*    register notation for a particular parameter, or using it as a   * 00010000
*    base register.                                                   * 00010100
*                                                                     * 00010200
*    The following general purpose registers (GPRs) have to contain   * 00010300
*    the specified information:                                       * 00010400
*                                                                     * 00010500
*                                                                     * 00010600
*    REGISTER  CONTENTS                                               * 00010700
*                                                                     * 00010800
*    13        The address of a 216-byte standard save area in the    * 00010900
*              primary address space.                                 * 00011000
*                                                                     * 00011100
*                                                                     * 00011200
*                                                                     * 00011300
*01* OUTPUT REGISTER INFORMATION:                                     * 00011400
*                                                                     * 00011500
*    When control returns to the caller, the GPRs contain:            * 00011600
*                                                                     * 00011700
*                                                                     * 00011800
*    REGISTER  CONTENTS                                               * 00011900
*                                                                     * 00012000
*    0         Reason code if the return code in GPR 15 is not 0,     * 00012100
*              otherwise, used as a work register by the system. The  * 00012200
*              reason code is stored in bits 0-31                     * 00012300
*                                                                     * 00012400
*    1         Used as work register by the system                    * 00012500
*                                                                     * 00012600
*    2-13      Unchanged                                              * 00012700
*                                                                     * 00012800
*    14        Used as work register by the system                    * 00012900
*                                                                     * 00013000
*    15        Return code is stored in bits 0-31                     * 00013100
*                                                                     * 00013200
*                                                                     * 00013300
*                                                                     * 00013400
*    When control returns to the caller, the ARs contain:             * 00013500
*                                                                     * 00013600
*                                                                     * 00013700
*    REGISTER  CONTENTS                                               * 00013800
*                                                                     * 00013900
*    0-1       Used as work registers by the system                   * 00014000
*                                                                     * 00014100
*    2-13      Unchanged                                              * 00014200
*                                                                     * 00014300
*    14-15     Used as work registers by the system.                  * 00014400
*                                                                     * 00014500
*                                                                     * 00014600
*                                                                     * 00014700
*    Some callers depend on register contents remaining the same      * 00014800
*    before and after issuing a service.  If the system changes the   * 00014900
*    contents of registers on which the caller depends, the caller    * 00015000
*    must save them before issuing the service, and restore them      * 00015100
*    after the system returns control.                                * 00015200
*                                                                     * 00015300
*01* PERFORMANCE IMPLICATIONS:                                        * 00015400
*                                                                     * 00015500
*    None                                                             * 00015600
*                                                                     * 00015700
*01* SYNTAX:                                                          * 00015800
*                                                                     * 00015900
*Ýxlabel¨  IWM4MSTO  Ð  MONTKN=xmontkn                                * 00016000
*                    ¿ ,MONTKN64=xmontkn64                            * 00016100
*                     Ý,EWLM=»NOº¨                                    * 00016200
*                     Ý,END_FLOW=»NO!YESº¨                            * 00016300
*                     Ý,MESSAGES_SENT                                 * 00016400
*                                     =»xmessages_sent!NO_MESSAGES_SE * 00016500
*                                     NTº¨                            * 00016600
*                     Ý,EWLM_RCVD_CORR                                * 00016700
*                                      =»xewlm_rcvd_corr!NO_EWLM_RCVD * 00016800
*                                      _CORRº                         * 00016900
*                         Ý,AFTER_STRT=»NO!YESº¨¨                     * 00017000
*                     Ý,STATUS=»xstatus!IWMEWLMARMSTATUSGOODº¨        * 00017100
*                     Ý,RETCODE=xretcode¨                             * 00017200
*                     Ý,RSNCODE=xrsncode¨                             * 00017300
*                     Ý,PLISTVER=»xplistver!IMPLIED_VERSIONº¨         * 00017400
*                    ÐÝ,MF=S¨                                         * 00017500
*                    ÔÝ,MF=(L,xmfctrl»,xmfattr!0Dº)¨                  * 00017600
*                    ¿Ý,MF=(E,xmfctrl»,COMPLETEº)¨                    * 00017700
*                                                                     * 00017800
*                                                                     * 00017900
*      Where:                                                         * 00018000
*                                                                     * 00018100
*                                                                     * 00018200
*      Ýxlabel¨                                                       * 00018300
*          is an optional symbol, starting in column 1, that is the   * 00018400
*          name on the IWM4MSTO macro invocation.  The name must      * 00018500
*          conform to the rules for an ordinary assembler language    * 00018600
*          symbol.                                                    * 00018700
*          DEFAULT: No name.                                          * 00018800
*                                                                     * 00018900
*                                                                     * 00019000
*                                                                     * 00019100
*                                                                     * 00019200
*      The following is a set of mutually exclusive keys.  This set   * 00019300
*      is required; only one key must be specified.                   * 00019400
*                                                                     * 00019500
*                                                                     * 00019600
*      MONTKN=xmontkn                                                 * 00019700
*          belongs to a set of mutually exclusive keys. It is the     * 00019800
*          name (RS-type), or address in register (2)-(12), of a 32   * 00019900
*          bit input which contains the delay monitoring token.       * 00020000
*                                                                     * 00020100
*      MONTKN64=xmontkn64                                             * 00020200
*          belongs to a set of mutually exclusive keys. It is the     * 00020300
*          name (RS-type), or address in register (2)-(12), of a 64   * 00020400
*          bit input which contains the long delay monitoring token.  * 00020500
*                                                                     * 00020600
*                                                                     * 00020700
*                                                                     * 00020800
*      End of a set of mutually exclusive required keys.              * 00020900
*                                                                     * 00021000
*                                                                     * 00021100
*                                                                     * 00021200
*      ÝEWLM=»NOº¨                                                    * 00021300
*          is an optional keyword input which indicates if this work  * 00021400
*          manager intents to participate in cross platform           * 00021500
*          Enterprise Workload Management (eWLM).                     * 00021600
*          DEFAULT: NO                                                * 00021700
*                                                                     * 00021800
*                                                                     * 00021900
*          EWLM=NO                                                    * 00022000
*              The work manager interacts only with WLM and no        * 00022100
*              interaction with eWLM takes place.                     * 00022200
*              DEFAULT: NO                                            * 00022300
*                                                                     * 00022400
*                                                                     * 00022500
*                                                                     * 00022600
*                                                                     * 00022700
*                                                                     * 00022800
*                                                                     * 00022900
*      ÝEND_FLOW=»NO!YESº¨                                            * 00023000
*          is an optional keyword input which indicates the           * 00023100
*          completion of a message flow.                              * 00023200
*          DEFAULT: NO                                                * 00023300
*                                                                     * 00023400
*                                                                     * 00023500
*          END_FLOW=NO                                                * 00023600
*                                                                     * 00023700
*              indicates that a message flow has not completed.       * 00023800
*                                                                     * 00023900
*          END_FLOW=YES                                               * 00024000
*                                                                     * 00024100
*              indicates that a message flow has completed.  Specify  * 00024200
*              END_FLOW=YES, if you know that the running work unit   * 00024300
*              is the last one in a work unit flow. This indication   * 00024400
*              can not be cleared, if it has been set.                * 00024500
*                                                                     * 00024600
*                                                                     * 00024700
*                                                                     * 00024800
*                                                                     * 00024900
*                                                                     * 00025000
*                                                                     * 00025100
*      ÝMESSAGES_SENT=»xmessages_sent!NO_MESSAGES_SENTº¨              * 00025200
*          is the name (RS-type), or address in register (2)-(12), of * 00025300
*          an optional fullword input which contains the number of    * 00025400
*          messages sent to other applications. This  value is added  * 00025500
*          to the total messages_sent value of the work unit. The     * 00025600
*          total messages_sent value should not exceed 32767.         * 00025700
*          DEFAULT: NO_MESSAGES_SENT indicates that parameter         * 00025800
*          MESSAGES_SEND has not been specified.                      * 00025900
*                                                                     * 00026000
*                                                                     * 00026100
*                                                                     * 00026200
*                                                                     * 00026300
*      ÝEWLM_RCVD_CORR=»xewlm_rcvd_corr!NO_EWLM_RCVD_CORRº            * 00026400
*          is the name (RS-type), or address in register (2)-(12), of * 00026500
*          an optional character input which contains a cross         * 00026600
*          platform Enterprise Workload Management (EWLM) correlator  * 00026700
*          received from another application.  Workflows often have   * 00026800
*          multiple parent work units that must complete before a new * 00026900
*          work unit can be initiated. You can pass only 1 parent     * 00027000
*          correlator to the IWM4MSTR macro and one additional parent * 00027100
*          correlator to the IWM4MSTO macro. You have to issue the    * 00027200
*          IWM4MUPD macro, if more than two parent correlators should * 00027300
*          be assigned to a work unit.                                * 00027400
*          This correlator is ignored, if it is an unknown EWLM       * 00027500
*          correlator.                                                * 00027600
*          DEFAULT: NO_EWLM_RCVD_CORR indicates that parameter        * 00027700
*          EWLM_RCVD_CORR has not been specified.                     * 00027800
*                                                                     * 00027900
*                                                                     * 00028000
*          ÝAFTER_STRT=»NO!YESº¨¨                                     * 00028100
*              is an optional keyword input which indicates the       * 00028200
*              moment the correlator has been received.               * 00028300
*              DEFAULT: NO                                            * 00028400
*                                                                     * 00028500
*                                                                     * 00028600
*              AFTER_STRT=NO                                          * 00028700
*                                                                     * 00028800
*                  indicates that the correlator has been received    * 00028900
*                  before this work unit has been started by          * 00029000
*                  IWM4MSTR.                                          * 00029100
*                                                                     * 00029200
*              AFTER_STRT=YES                                         * 00029300
*                                                                     * 00029400
*                  indicates that the correlator has arrived within   * 00029500
*                  the scope of this work unit that means after       * 00029600
*                  issuing IWM4MSTR.                                  * 00029700
*                                                                     * 00029800
*                                                                     * 00029900
*                                                                     * 00030000
*                                                                     * 00030100
*                                                                     * 00030200
*                                                                     * 00030300
*                                                                     * 00030400
*                                                                     * 00030500
*      ÝSTATUS=»xstatus!IWMEWLMARMSTATUSGOODº¨                        * 00030600
*          is the name (RS-type), or address in register (2)-(12), of * 00030700
*          an optional fullword input which contains the completion   * 00030800
*          status code of the work unit.  Available completion status * 00030900
*          codes (defined in macro IWMYCON) are:                      * 00031000
*          * IwmEwlmArmStatusGood(0),                                 * 00031100
*          * IwmEwlmArmStatusAborted(1),                              * 00031200
*          * IwmEwlmArmStatusFailed(2) or                             * 00031300
*          * IwmEwlmArmStatusUnknown(3)                               * 00031400
*          The codes above correspond to status codes in the          * 00031500
*          OpenGroup ARM 4.0 Standard (for the meaning of the status  * 00031600
*          codes see the ARM 4.0 Standard at                          * 00031700
*          http://www.opengroup.org/management/arm).                  * 00031800
*                                                                     * 00031900
*          DEFAULT: IWMEWLMARMSTATUSGOOD                              * 00032000
*          indicates that the work unit completed successfully.       * 00032100
*                                                                     * 00032200
*                                                                     * 00032300
*                                                                     * 00032400
*                                                                     * 00032500
*      ÝRETCODE=xretcode¨                                             * 00032600
*          is the name (RS-type) of an optional fullword output       * 00032700
*          variable, or register (2)-(12) or (15), into which the     * 00032800
*          return code is to be copied from GPR 15.  If you specify   * 00032900
*          15, GPR15, REG15, or R15 (within or without parentheses),  * 00033000
*          the value will be left in GPR 15.                          * 00033100
*                                                                     * 00033200
*                                                                     * 00033300
*                                                                     * 00033400
*                                                                     * 00033500
*      ÝRSNCODE=xrsncode¨                                             * 00033600
*          is the name (RS-type) of an optional fullword output       * 00033700
*          variable into which the reason code is to be copied from   * 00033800
*          GPR 0.  If you specify 0, 00, GPR0, GPR00, REG0, REG00, or * 00033900
*          R0 (within or without parentheses), the value will be left * 00034000
*          in GPR 0.                                                  * 00034100
*                                                                     * 00034200
*                                                                     * 00034300
*                                                                     * 00034400
*                                                                     * 00034500
*      ÝPLISTVER=»xplistver!IMPLIED_VERSIONº¨                         * 00034600
*          is an optional byte input decimal value in the "0-0" range * 00034700
*          that specifies the macro version.  PLISTVER is the only    * 00034800
*          key allowed on the list form of MF and determines which    * 00034900
*          parameter list is generated.  Note that MAX may be         * 00035000
*          specified instead of a number, and the parameter list will * 00035100
*          be of the largest size currently supported. This size may  * 00035200
*          grow from release to release (thus possibly affecting the  * 00035300
*          amount of storage needed by your program).  If your        * 00035400
*          program can tolerate this, IBM recommends that you always  * 00035500
*          specify MAX when creating the list form parameter list as  * 00035600
*          that will ensure that the list form parameter list is      * 00035700
*          always long enough to hold whatever parameters might be    * 00035800
*          specified on the execute form.                             * 00035900
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00036000
*          default is the lowest version which allows all of the      * 00036100
*          parameters specified on the invocation to be processed.    * 00036200
*                                                                     * 00036300
*                                                                     * 00036400
*                                                                     * 00036500
*                                                                     * 00036600
*      ÝMF=»S!L!Eº¨                                                   * 00036700
*          is an optional keyword input which specifies the macro     * 00036800
*          form.                                                      * 00036900
*          DEFAULT: S                                                 * 00037000
*                                                                     * 00037100
*                                                                     * 00037200
*          ÝMF=S¨                                                     * 00037300
*              specifies the standard form of the macro.  The "S"     * 00037400
*              form generates code to put the parameters into an      * 00037500
*              in-line parameter list and invoke the desired service. * 00037600
*              Full checking for required macro keys is done along    * 00037700
*              with supplying defaults for omitted optional           * 00037800
*              parameters.                                            * 00037900
*                                                                     * 00038000
*          ÝMF=(L,xmfctrl»,xmfattr!0Dº)¨                              * 00038100
*              specifies the list form of the macro.  The "L" form    * 00038200
*              defines an area to be used for the parameter list.     * 00038300
*              Only the PLISTVER key may be specified on the          * 00038400
*              invocation.  All other macro parameters are flagged as * 00038500
*              errors.  If PLISTVER is not specified, the original    * 00038600
*              parameter list definition is used.                     * 00038700
*                                                                     * 00038800
*            ,xmfctrl                                                 * 00038900
*              is a required input.  It is the name of a storage area * 00039000
*              for the parameter list.                                * 00039100
*                                                                     * 00039200
*            »,xmfattr!0Dº                                            * 00039300
*              is an optional 60 character input string that varies   * 00039400
*              from 1 to 60 characters. Use it to force boundary      * 00039500
*              alignment of the parameter list. Use only 0F or 0D.    * 00039600
*              DEFAULT: 0D which forces the parameter list to a       * 00039700
*              doubleword boundary.                                   * 00039800
*                                                                     * 00039900
*          ÝMF=(E,xmfctrl»,COMPLETEº)¨                                * 00040000
*              specifies the execute form of the macro.  The "E" form * 00040100
*              generates code to put the parameters into the          * 00040200
*              parameter list specified by xmfctrl and provides full  * 00040300
*              syntax checking with default setting.                  * 00040400
*                                                                     * 00040500
*            ,xmfctrl                                                 * 00040600
*              is a required input.  It is the name (RS-type), or     * 00040700
*              address in register (1)-(12), of a storage area for    * 00040800
*              the parameter list.                                    * 00040900
*                                                                     * 00041000
*            »,COMPLETEº                                              * 00041100
*              is an optional keyword input which specifies the       * 00041200
*              degree of macro parameter syntax checking.             * 00041300
*              DEFAULT: COMPLETE                                      * 00041400
*                                                                     * 00041500
*                                                                     * 00041600
*              COMPLETE                                               * 00041700
*                  Checking for required macro keys is done and       * 00041800
*                  defaults are supplied for omitted optional         * 00041900
*                  parameters.                                        * 00042000
*                                                                     * 00042100
*                                                                     * 00042200
*                                                                     * 00042300
*                                                                     * 00042400
*                                                                     * 00042500
*                                                                     * 00042600
*                                                                     * 00042700
*01* ABEND CODES:  None.                                              * 00042800
*                                                                     * 00042900
*01* RETURN CODES:                                                    * 00043000
*                                                                     * 00043100
*                                                                     * 00043200
*            0    Name: IwmRetCodeOk                                  * 00043300
*                                                                     * 00043400
*                 Meaning: Successful completion.                     * 00043500
*                                                                     * 00043600
*                 Action: None required.                              * 00043700
*                                                                     * 00043800
*            4    Name: IwmRetCodeWarning                             * 00043900
*                                                                     * 00044000
*                 Meaning: Successful completion, unusual conditions  * 00044100
*                 noted.                                              * 00044200
*                                                                     * 00044300
*                                                                     * 00044400
*                 HEX REASON  MEANING/ACTION                          * 00044500
*                 CODE                                                * 00044600
*                                                                     * 00044700
*                 xxxx0402    Name: IwmRsnCodeNoMonEnv                * 00044800
*                                                                     * 00044900
*                             Meaning:  The input monitoring token    * 00045000
*                             indicates no monitoring environment was * 00045100
*                             established.                            * 00045200
*                                                                     * 00045300
*                             Action: Establish a monitoring          * 00045400
*                             environment by macro IWM4MCRE.          * 00045500
*                                                                     * 00045600
*                 xxxx0441    Name: IwmRsnCodeTooManyMsgCorrs         * 00045700
*                                                                     * 00045800
*                             Meaning:  The correlator passed to      * 00045900
*                             EWLM_RCVD_CORR is ignored, since the    * 00046000
*                             maximum number of supported correlators * 00046100
*                             has been reached.                       * 00046200
*                                                                     * 00046300
*                             Action: None required.                  * 00046400
*                                                                     * 00046500
*                 xxxx0443    Name: IwmRsnCodeTooManyMsgsSent         * 00046600
*                                                                     * 00046700
*                             Meaning:  The value passed to           * 00046800
*                             MESSAGES_SENT is ignored, since the     * 00046900
*                             maximum number of messages sent is      * 00047000
*                             reached.                                * 00047100
*                                                                     * 00047200
*                             Action: None required.                  * 00047300
*                                                                     * 00047400
*                 xxxx0444    Name: IwmRsnCodeTooManyMsgsReceived     * 00047500
*                                                                     * 00047600
*                             Meaning:  The EWLM_RCVD_CORR parameter  * 00047700
*                             has been specified too often.  The      * 00047800
*                             correlated counter is not increased.    * 00047900
*                                                                     * 00048000
*                             Action: None required.                  * 00048100
*                                                                     * 00048200
*                                                                     * 00048300
*                                                                     * 00048400
*            8    Name: IwmRetCodeInvocError                          * 00048500
*                                                                     * 00048600
*                 Meaning: Invalid invocation environment or          * 00048700
*                 parameters.                                         * 00048800
*                                                                     * 00048900
*                                                                     * 00049000
*                 HEX REASON  MEANING/ACTION                          * 00049100
*                 CODE                                                * 00049200
*                                                                     * 00049300
*                 xxxx0820    Name: IwmRsnCodeBadMonEnv               * 00049400
*                                                                     * 00049500
*                             Meaning:  Input monitoring environment  * 00049600
*                             does not pass short form validity       * 00049700
*                             checking.                               * 00049800
*                                                                     * 00049900
*                             Action: Check for possible storage      * 00050000
*                             overlay.                                * 00050100
*                                                                     * 00050200
*                 xxxx0897    Name: IwmRsnCodeTranStatusInvalid       * 00050300
*                                                                     * 00050400
*                             Meaning:  An unsupported value has been * 00050500
*                             passed to the STATUS parameter.         * 00050600
*                                                                     * 00050700
*                             Action: Specify a supported value.      * 00050800
*                                                                     * 00050900
*                 xxxx08AC    Name: IwmRsnCodeTranNotStarted          * 00051000
*                                                                     * 00051100
*                             Meaning:  No work unit has been started * 00051200
*                             by IWM4MSTR for the specified           * 00051300
*                             monitoring environment.                 * 00051400
*                                                                     * 00051500
*                             Action: Start a work unit by IWM4MSTR   * 00051600
*                             macro, before issuing this macro.       * 00051700
*                                                                     * 00051800
*                                                                     * 00051900
*                                                                     * 00052000
*                                                                     * 00052100
*                                                                     * 00052200
*01* REASON CODES:                                                    * 00052300
*                                                                     * 00052400
*       A reason code will be returned whenever the return code is    * 00052500
*       non-zero.  Reason codes, as appropriate, are defined under    * 00052600
*       their corresponding return code.  Reason code and return code * 00052700
*       constants are defined within IWMYCON.  Note that the high     * 00052800
*       order halfword of bits 0-31 of register 0, and the reason     * 00052900
*       code variable when specified, may be non-zero and represents  * 00053000
*       diagnostic data which is NOT part of the external interface.  * 00053100
*       The high order halfword should thus be excluded from          * 00053200
*       comparison with the reason code values described above.  The  * 00053300
*       constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may be    * 00053400
*       used for this purpose.                                        * 00053500
*                                                                     * 00053600
*01* MODULE TYPE:  ASSEM MACRO                                        * 00053700
*                                                                     * 00053800
*02*   PROCESSOR:  ASSEM                                              * 00053900
*                                                                     * 00054000
*01* COMPONENT:  SCWLM                                                * 00054100
*                                                                     * 00054200
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00054300
*                                                                     * 00054400
*01* EXAMPLES:                                                        * 00054500
*                                                                     * 00054600
*01* MACRO USAGE NOTES:                                               * 00054700
*                                                                     * 00054800
*                                                                     * 00054900
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00055000
*        global macro variable.  Any value other than 'NO' will       * 00055100
*        result in the macro expansion being printed.  The default is * 00055200
*        'YES'.  The following examples illustrate how the ZPRINT     * 00055300
*        variable should be set.                                      * 00055400
*                                                                     * 00055500
*                    GBLC &ZPRINT                                     * 00055600
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00055700
*                                                                     * 00055800
*                                                                     * 00055900
*    2.  All   keys   currently   contained  in  the  IWM4MSTO  macro * 00056000
*        correspond  to  version  0.   If you specify PLISTVER, use a * 00056100
*        value of 0 or MAX.                                           * 00056200
*                                                                     * 00056300
*                                                                     * 00056400
*                                                                     * 00056500
*                                                                     * 00056600
*01* CHANGE ACTIVITY:                                                 * 00056700
*                                                                     * 00056800
*   Flag LineItem  FMID    Date   ID    Comment                       * 00056900
*                                                                     * 00057000
*    $L0=LPBABV   HBB7790 121023 3241AH:  Initial version PB above 2G * 00057100
*    $P0=ME24923  HBB7790 121016 3241AH:  Fix SYSAM64 logic           * 00057200
*    $P1=ME25540  HBB7790 130122 3241DW:  Literal not accessible in   * 00057300
*                                         AMODE 64                    * 00057400
****** END OF SPECIFICATIONS *****************************************/ 00057500
*/********************************************************************* 00057600
         MACRO                                                          00057700
&XLABEL  IWM4MSTO &MONTKN=,&MONTKN64=,&EWLM=,&END_FLOW=,               *00057800
               &MESSAGES_SENT=,&EWLM_RCVD_CORR=,&AFTER_STRT=,&STATUS=, *00057900
               &RETCODE=,&RSNCODE=,&PLISTVER=,&MF=                      00058000
.*                                                                      00058100
*                    MACDATE -01/31/13-<0>                              00058200
.*                                                                      00058300
.*******************************************************************    00058400
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00058500
.*******************************************************************    00058600
                    GBLC  &ZPRINT     YES=PRINT NO=NO PRINT             00058700
                    GBLC  &ZTEST      YES=TEST NO=NO TEST               00058800
                    GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX       00058900
.*                                                                      00059000
                    GBLC  &ZIWM4MSTO  YES=MACRO USED AT LEAST ONCE      00059100
.*******************************************************************    00059200
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00059300
.*******************************************************************    00059400
                    LCLC  &ZMS        ERROR MESSAGE WORK AREA           00059500
                    LCLC  &ZCNDX      SYSNDX CHARACTERS                 00059600
                    LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED        00059700
                    LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR       00059800
                    LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE       00059900
                    LCLA  &ZAWRK      USED AS A WORK AREA               00060000
                    LCLA  &ZASIZ      USED FOR SIZE OF VALUE            00060100
                    LCLA  &ZN         NUMERIC WORK VARIABLE             00060200
                    LCLC  &ZC         CHARACTER WORK VARIABLE           00060300
                    LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE       00060400
                    LCLA  &ZTLA       VALUE TOO LONG VARIABLE           00060500
                    LCLC  &ZMAC_G     "G" or null                       00060600
&ZMAC_G             SETC  ''                                            00060700
                    LCLC  &ZMAC_LR                                      00060800
&ZMAC_LR            SETC  'LR'                                          00060900
                    LCLC  &ZMAC_L                                       00061000
&ZMAC_L             SETC  'L'                                           00061100
                    LCLC  &ZMAC_ST                                      00061200
&ZMAC_ST            SETC  'ST'                                          00061300
                    LCLC  &ZMAC_LLGT                                    00061400
&ZMAC_LLGT          SETC  'L'                                           00061500
                    LCLC  &ZMAC_LGR                                     00061600
&ZMAC_LGR           SETC  'LR'                                          00061700
                    LCLC  &ZMAC_LG                                      00061800
&ZMAC_LG            SETC  'L'                                           00061900
                    LCLC  &ZMAC_STG                                     00062000
&ZMAC_STG           SETC  'ST'                                          00062100
                    LCLA  &ZMACRET    MACRO RETURN CODE                 00062200
&ZMACRET            SETA  0           ASSUME NO ERRORS                  00062300
.*                                                                      00062400
                    LCLC  &ZCSYSLIST(255)       NONXKEY, POS ARRAY      00062500
                    LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()        00062600
                    LCLA  &ZPLLEN     PARAMETER LIST LENGTH             00062700
                    LCLC  &ZENDBASEPL           End of base PL          00062800
                    LCLA  &ZPLWORKA   PARAMETER LIST LENGTH             00062900
.*******************************************************************    00063000
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00063100
.*******************************************************************    00063200
                    LCLA  &ZI         INDEX FOR ARRAY                   00063300
                    LCLA  &ZJ         INDEX FOR PARMS                   00063400
                    LCLA  &ZK         INDEX FOR PARSE                   00063500
                    LCLA  &ZLO        LOW RANGE VALUE                   00063600
                    LCLA  &ZHI        HIGH RANGE VALUE                  00063700
                    LCLC  &ZW         WORK AREA FOR PARM                00063800
.********************************************************************   00063900
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00064000
.********************************************************************   00064100
                    GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL           00064200
                    GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE    00064300
                    GBLA  &SYSALVL    SYSSTATE ARCHLVL                  00064400
                    GBLC  &SYSAM64    SYSSTATE AMODE64                  00064500
.*                                                                      00064600
                    AIF   (K'&SYSASCE GT 0).ZSYS4  SYS STATE DEFINED    00064700
                    AIF   (K'&SYSSPLV GT 0).ZSYS2  SP LEVEL DEFINED     00064800
                    SPLEVEL  TEST                                       00064900
.ZSYS2              ANOP  ,                                             00065000
                    AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1         00065100
                    AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1         00065200
                    SYSSTATE TEST                                       00065300
                    AGO   .ZSYS4                                        00065400
.ZSYS3              ANOP  ,                                             00065500
&SYSASCE            SETC  'P'         ASSUME SYSSTATE PRIMARY           00065600
.ZSYS4              ANOP  ,                                             00065700
                    AIF   ('&SYSAM64' NE 'YES').ZSYSN64                 00065800
&ZMAC_LLGT          SETC 'LLGT'                                         00065900
&ZMAC_LGR           SETC 'LGR'                                          00066000
&ZMAC_LG            SETC 'LG'                                           00066100
&ZMAC_STG           SETC 'STG'                                          00066200
.ZSYSN64            ANOP  ,                                             00066300
&ZMAC_G             SETC 'G'                                            00066400
&ZMAC_LR            SETC 'LGR'                                          00066500
&ZMAC_L             SETC 'LG'                                           00066600
&ZMAC_ST            SETC 'STG'                                          00066700
.*******************************************************************    00066800
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00066900
.*******************************************************************    00067000
                    LCLC  &XUSEDMONTKNKEY       ++ NAME                 00067100
                    LCLC  &XMONTKN    ++ NAME                           00067200
                    LCLC  &XMONTKN64  ++ NAME                           00067300
                    LCLC  &XEWLM      ++ VALUE                          00067400
                    LCLC  &XEND_FLOW  ++ VALUE                          00067500
                    LCLC  &XMESSAGES_SENT       ++ NAME                 00067600
                    LCLC  &XEWLM_RCVD_CORR      ++ NAME                 00067700
                    LCLC  &XAFTER_STRT          ++ VALUE                00067800
                    LCLC  &XSTATUS    ++ NAME                           00067900
                    LCLC  &XRETCODE   ++ NAME                           00068000
                    LCLC  &XRSNCODE   ++ NAME                           00068100
                    LCLA  &XPLISTVER  ++ VALUE                          00068200
                    LCLC  &XMF        ++ VALUE                          00068300
                    LCLC  &XMFCTRL    ++ NAME                           00068400
                    LCLC  &XMFATTR    ++ VALUE                          00068500
                    LCLC  &XMFSCK     ++ VALUE                          00068600
.*******************************************************************    00068700
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00068800
.*******************************************************************    00068900
                    LCLC  &ZXUSEDMONTKNKEY      ++ INPUT NAME           00069000
                    LCLC  &ZXMONTKN   ++ INPUT NAME                     00069100
                    LCLC  &ZXMONTKN64           ++ INPUT NAME           00069200
                    LCLC  &ZXEWLM     ++ INPUT VALUE                    00069300
                    LCLC  &ZXEND_FLOW           ++ INPUT VALUE          00069400
                    LCLC  &ZXMESSAGES_SENT      ++ INPUT NAME           00069500
                    LCLC  &ZXEWLM_RCVD_CORR     ++ INPUT NAME           00069600
                    LCLC  &ZXAFTER_STRT         ++ INPUT VALUE          00069700
                    LCLC  &ZXSTATUS   ++ INPUT NAME                     00069800
                    LCLC  &ZXRETCODE  ++ OUTPUT NAME                    00069900
                    LCLC  &ZXRSNCODE  ++ OUTPUT NAME                    00070000
                    LCLC  &ZXPLISTVER           ++ INPUT VALUE          00070100
                    LCLC  &ZXMF       ++ INPUT VALUE                    00070200
                    LCLC  &ZXMFCTRL   ++ INPUT NAME                     00070300
                    LCLC  &ZXMFATTR   ++ INPUT VALUE                    00070400
                    LCLC  &ZXMFSCK    ++ INPUT VALUE                    00070500
.********************************************************************   00070600
.***AC.PLV01  PROCESS PLISTVER                                      *   00070700
.********************************************************************   00070800
&XPLISTVER      SETA  0                                                 00070900
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00071000
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00071100
&XPLISTVER      SETA  0                                                 00071200
.ZPLV0          ANOP  ,                                                 00071300
.*                                                                      00071400
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00071500
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00071600
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00071700
.*-------------------------------------------------------------------   00071800
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00071900
&ZMS            SETC  '"PLISTVER='                                      00072000
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00072100
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00072200
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00072300
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00072400
                AGO   .ZPVCK2                                           00072500
.ZPVCK3         ANOP  ,                                                 00072600
.*-------------------------------------------------------------------   00072700
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00072800
&ZMS            SETC  '"PLISTVER='                                      00072900
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00073000
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00073100
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00073200
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00073300
                AGO   .ZPVCKE                                           00073400
.ZPVCK2         ANOP  ,                                                 00073500
.*-------------------------------------------------------------------   00073600
&ZCVAL          SETC  '&PLISTVER(1)'                                    00073700
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00073800
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00073900
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00074000
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00074100
                AIF   (&ZN LE 0).ZPVCK4A   NOT HIGH                     00074200
.ZPVCK6         ANOP  ,                                                 00074300
&ZMS            SETC  '"PLISTVER='                                      00074400
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00074500
&ZMS            SETC  '&ZMS THE RANGE IS "0-0"'                         00074600
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00074700
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00074800
&XPLISTVER      SETA  0                                                 00074900
                AGO   .ZPVCKE                                           00075000
.*-------------------------------------------------------------------   00075100
.ZPVCK4A        ANOP  ,                                                 00075200
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00075300
&ZMS            SETC  'PLISTVER='                                       00075400
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00075500
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00075600
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00075700
                MNOTE 8,' &ZMS IS REQUIRED.'                            00075800
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00075900
                AGO   .ZPVCK5                                           00076000
.ZPVCK4         ANOP  ,                                                 00076100
&XPLISTVER      SETA  &PLISTVER(1)                                      00076200
.ZPVCK5         ANOP  ,                                                 00076300
.ZPVCKE         ANOP  ,                                                 00076400
.********************************************************************   00076500
.***AG.MF01 PROCESS MF MACRO FORMS                                      00076600
.********************************************************************   00076700
                    ACTR  10000                                         00076800
.*------------------------------------------------------------------    00076900
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00077000
&XMF                SETC  ''          INITIALIZE XVARIABLE              00077100
.*-------------------------------------------------------------------   00077200
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00077300
.ZG39               ANOP  ,                                             00077400
&ZTLC               SETC 'S'                                            00077500
                    AIF   ('&MF(1)' NE '&ZTLC').ZG40                    00077600
&XMF                SETC  'S'         SET KEYWORD                       00077700
                    AIF   (N'&MF LE 1).ZG39A    CK NUM                  00077800
&ZMS                SETC  '"MF='                                        00077900
&ZMS                SETC  '&ZMS.&MF"'                                   00078000
&ZMS                SETC  '&ZMS "MF"'                                   00078100
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00078200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00078300
.ZG39A              ANOP  ,                                             00078400
.*-------------------------------------------------------------------   00078500
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00078600
.ZG40               ANOP  ,                                             00078700
&ZTLC               SETC 'L'                                            00078800
                    AIF   ('&MF(1)' NE '&ZTLC').ZG47                    00078900
&XMF                SETC  'L'         SET KEYWORD                       00079000
                    AIF   (N'&MF LE 3).ZG40A    CK NUM                  00079100
&ZMS                SETC  '"MF='                                        00079200
&ZMS                SETC  '&ZMS.&MF"'                                   00079300
&ZMS                SETC  '&ZMS "MF"'                                   00079400
                    MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'          00079500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00079600
.ZG40A              ANOP  ,                                             00079700
.*-------------------------------------------------------------------   00079800
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00079900
                    AIF   (N'&SYSLIST NE 0).ZG40B  POSITIONALS?         00080000
                    AIF   ('&MONTKN' NE '').ZG40B  KEYS?                00080100
                    AIF   ('&MONTKN64' NE '').ZG40B  KEYS?              00080200
                    AIF   ('&EWLM' NE '').ZG40B  KEYS?                  00080300
                    AIF   ('&END_FLOW' NE '').ZG40B  KEYS?              00080400
                    AIF   ('&MESSAGES_SENT' NE '').ZG40B  KEYS?         00080500
                    AIF   ('&EWLM_RCVD_CORR' NE '').ZG40B  KEYS?        00080600
                    AIF   ('&AFTER_STRT' NE '').ZG40B  KEYS?            00080700
                    AIF   ('&STATUS' NE '').ZG40B  KEYS?                00080800
                    AIF   ('&RETCODE' NE '').ZG40B  KEYS?               00080900
                    AIF   ('&RSNCODE' NE '').ZG40B  KEYS?               00081000
                    AGO    .ZG40C     INVOCATION OKAY                   00081100
.ZG40B              ANOP  ,                                             00081200
&ZMS                SETC  'THE "L" FORM OF "MF"'                        00081300
&ZMS                SETC  '&ZMS CAN ONLY HAVE'                          00081400
&ZMS                SETC  '&ZMS THE "PLISTVER" KEY'                     00081500
                    MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'        00081600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00081700
.ZG40C              ANOP  ,                                             00081800
.*-------------------------------------------------------------------   00081900
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00082000
&ZXMFCTRL           SETC  'INPUT'     SET IN/OUTPUT                     00082100
&XMFCTRL            SETC  '&MF(2,1)'  SET XVARIABLE                     00082200
                    AIF   (N'&MF(2) GT 1).ZG42B  MULTI PARMS            00082300
&XMFCTRL            SETC  '&MF(2)'    SET XVARIABLE                     00082400
.ZG42B              AIF   (K'&MF(2) GT 0).ZG42C                         00082500
&ZXMFCTRL           SETC  ''          RESET IN/OUTPUT                   00082600
&ZMS                SETC  'WHEN "L" IS SPECIFIED'                       00082700
&ZMS                SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'           00082800
                    MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                  00082900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00083000
.ZG42C              ANOP  ,                                             00083100
.*-------------------------------------------------------------------   00083200
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00083300
                    AIF   (K'&ZXMFCTRL LE 0).ZG42P  NOT I/O             00083400
                    AIF   ('&XMFCTRL'(1,1) NE '(').ZG42P                00083500
&ZXMFCTRL           SETC  ''          RESET IN/OUTPUT                   00083600
&ZMS                SETC  '"MF='                                        00083700
&ZMS                SETC  '&ZMS.&MF"'                                   00083800
&ZMS                SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'     00083900
                    MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'             00084000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00084100
.ZG42P              ANOP  ,                                             00084200
.*-------------------------------------------------------------------   00084300
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00084400
&ZXMFATTR           SETC  'INPUT'     SET IN/OUTPUT                     00084500
&XMFATTR            SETC  '0D'                                          00084600
                    AIF   (K'&MF(3) LE 0).ZG45B  PARM                   00084700
&XMFATTR            SETC  '&MF(3,1)'  SET XVARIABLE                     00084800
                    AIF   (N'&MF(3) GT 1).ZG45B  MULTI                  00084900
&XMFATTR            SETC  '&MF(3)'    SET XVARIABLE                     00085000
.ZG45B              ANOP  ,                                             00085100
.*-------------------------------------------------------------------   00085200
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00085300
                    AIF   (K'&ZXMFATTR LE 0).ZG45P  NOT I/O             00085400
                    AIF   ('&XMFATTR'(1,1) NE '(').ZG45P                00085500
&ZXMFATTR           SETC  ''          RESET IN/OUTPUT                   00085600
&ZMS                SETC  '"MF='                                        00085700
&ZMS                SETC  '&ZMS.&MF"'                                   00085800
&ZMS                SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'     00085900
                    MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'             00086000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00086100
.ZG45P              ANOP  ,                                             00086200
.*-------------------------------------------------------------------   00086300
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00086400
                    AIF   (K'&ZXMFATTR LE 0).ZG45S  NOT I/O             00086500
                    AIF   (K'&XMFATTR LE 60).ZG45S  LNG OK              00086600
&ZXMFATTR           SETC  ''          RESET IN/OUTPUT                   00086700
&ZMS                SETC  '"MF='                                        00086800
&ZMS                SETC  '&ZMS.&MF"'                                   00086900
&ZMS                SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'         00087000
                    MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'            00087100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00087200
.ZG45S              ANOP  ,                                             00087300
.*-------------------------------------------------------------------   00087400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00087500
.ZG47               ANOP  ,                                             00087600
&ZTLC               SETC 'E'                                            00087700
                    AIF   ('&MF(1)' NE '&ZTLC').ZG55                    00087800
&XMF                SETC  'E'         SET KEYWORD                       00087900
                    AIF   (N'&MF LE 3).ZG47A    CK NUM                  00088000
&ZMS                SETC  '"MF='                                        00088100
&ZMS                SETC  '&ZMS.&MF"'                                   00088200
&ZMS                SETC  '&ZMS "MF"'                                   00088300
                    MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'          00088400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00088500
.ZG47A              ANOP  ,                                             00088600
.*-------------------------------------------------------------------   00088700
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00088800
&ZXMFCTRL           SETC  'INPUT'     SET IN/OUTPUT                     00088900
&XMFCTRL            SETC  '&MF(2,1)'  SET XVARIABLE                     00089000
                    AIF   (N'&MF(2) GT 1).ZG49B  MULTI PARMS            00089100
&XMFCTRL            SETC  '&MF(2)'    SET XVARIABLE                     00089200
.ZG49B              AIF   (K'&MF(2) GT 0).ZG49C                         00089300
&ZXMFCTRL           SETC  ''          RESET IN/OUTPUT                   00089400
&ZMS                SETC  'WHEN "E" IS SPECIFIED'                       00089500
&ZMS                SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'           00089600
                    MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                  00089700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00089800
.ZG49C              ANOP  ,                                             00089900
.*-------------------------------------------------------------------   00090000
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00090100
                    AIF   (K'&ZXMFCTRL LE 0).ZG49R  NOT I/O             00090200
                    AIF   ('&XMFCTRL'(1,1) NE '(').ZG49R                00090300
&ZCGPR              SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                    00090400
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG49P                  00090500
                    AIF   (K'&ZCGPR GT 2).ZG49Q                         00090600
                    AIF   ('&ZCGPR' EQ '0').ZG49Q                       00090700
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00090800
                    AIF   (T'&ZCGPR NE 'N').ZG49Q  INVALID REG NAME     00090900
.ZG49P              ANOP  ,                                             00091000
                    AIF   (T'&ZCGPR NE 'N').ZG49R  NON NUMERIC          00091100
                    AIF   ('&ZCGPR' LT '1').ZG49Q                       00091200
                    AIF   ('&ZCGPR' LE '12').ZG49R                      00091300
.ZG49Q              ANOP  ,                                             00091400
&ZMS                SETC  '"MF='                                        00091500
&ZMS                SETC  '&ZMS.&MF"'                                   00091600
&ZMS                SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'     00091700
                    MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'              00091800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00091900
.ZG49R              ANOP  ,                                             00092000
.*-------------------------------------------------------------------   00092100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00092200
&XMFSCK             SETC  ''          INITIALIZE XVARIABLE              00092300
.ZG53A   AIF   ('&MF(3)' NE 'COMPLETE').ZG54A                           00092400
&XMFSCK             SETC  'COMPLETE'  SET KEYWORD                       00092500
.*-------------------------------------------------------------------   00092600
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00092700
.ZG54A              AIF   (K'&XMFSCK GT 0).ZG54C  KEYWORD               00092800
                    AIF   (K'&MF(3) LE 0).ZG54B                         00092900
&ZMS                SETC  '"MF='                                        00093000
&ZMS                SETC  '&ZMS.&MF"'                                   00093100
&ZMS                SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '     00093200
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00093300
&ZMS                SETC  '&ZMS "COMPLETE".'                            00093400
                    MNOTE 8,' &ZMS '                                    00093500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00093600
.ZG54B              ANOP  ,                                             00093700
&XMFSCK             SETC  'COMPLETE'  SET DEFAULT KEYWORD               00093800
.ZG54C              ANOP  ,                                             00093900
&ZXMFSCK            SETC  'INPUT'     SET IN/OUTPUT                     00094000
.*------------------------------------------------------------------    00094100
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00094200
.ZG55               ANOP  ,                                             00094300
&ZXMF               SETC  'INPUT'     SET IN/OUTPUT                     00094400
                    AIF   (K'&XMF GT 0).ZG55E   VALID ARG               00094500
                    AIF   (T'&MF EQ 'O').ZG55D  OMITTED                 00094600
&ZASYSLNDX          SETA  0                                             00094700
.ZG55A              ANOP  ,           POSITIONAL MACRO KEY              00094800
&ZASYSLNDX          SETA  &ZASYSLNDX+1                                  00094900
                    AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG55C              00095000
&ZTLC               SETC 'MF'                                           00095100
                    AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG55A     00095200
.ZG55B              ANOP  ,                                             00095300
&ZXMF               SETC  ''          RESET IN/OUTPUT                   00095400
&ZMS                SETC  'THE "MF" KEY'                                00095500
&ZMS                SETC  '&ZMS MUST CONTAIN ONE'                       00095600
                    MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'              00095700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00095800
                    AGO   .ZG55E                                        00095900
.ZG55C              ANOP  ,                                             00096000
&ZXMF               SETC  ''          RESET IN/OUTPUT                   00096100
&ZMS                SETC  '"MF='                                        00096200
&ZMS                SETC  '&ZMS.&MF"'                                   00096300
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00096400
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00096500
&ZMS                SETC  '&ZMS "S",'                                   00096600
&ZMS                SETC  '&ZMS "L",'                                   00096700
&ZMS                SETC  '&ZMS OR "E".'                                00096800
                    MNOTE 8,' &ZMS '                                    00096900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00097000
                    AGO   .ZG55E                                        00097100
.ZG55D              ANOP  ,                                             00097200
&XMF                SETC  'S'         SET DEFAULT KEYWORD               00097300
&XMFSCK             SETC  'COMPLETE'  COMPLETE CHECKING                 00097400
.ZG55E              ANOP  ,                                             00097500
.********************************************************************   00097600
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00097700
.********************************************************************   00097800
                    ACTR  10000                                         00097900
.*-------------------------------------------------------------------   00098000
.***AG.MF03 MF=(SLE)                                                    00098100
                    AIF   ('&XMF' EQ 'L').ZGMFX                         00098200
.*----------------------------------------------------------------***   00098300
.***AG.KMEKY01 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00098400
&XUSEDMONTKNKEY     SETC  ''          INITIALIZE XVARIABLE              00098500
                    AIF   (K'&MONTKN LE 0).ZG2C                         00098600
&ZXUSEDMONTKNKEY    SETC  'INPUT'     SET IN/OUTPUT                     00098700
&XUSEDMONTKNKEY     SETC  'MONTKN'    SET XVARIABLE                     00098800
&ZXMONTKN           SETC  'INPUT'     SET IN/OUTPUT                     00098900
&XMONTKN            SETC  '&MONTKN(1)'          SET XVARIABLE PARM      00099000
                    AIF   (N'&MONTKN GT 1).ZG2A                         00099100
&XMONTKN            SETC  '&MONTKN'   SET XVARIABLE PARM                00099200
.ZG2A               AIF   (N'&MONTKN LE 1).ZG2B  CK NUM                 00099300
&ZMS                SETC  '"MONTKN='                                    00099400
&ZMS                SETC  '&ZMS.&MONTKN"'                               00099500
&ZMS                SETC  '&ZMS "MONTKN"'                               00099600
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00099700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00099800
.ZG2B               AIF   (K'&XMONTKN GT 0).ZG2C  ONE PARM              00099900
&ZXUSEDMONTKNKEY    SETC  ''          RESET IN/OUTPUT                   00100000
&ZXMONTKN           SETC  ''          RESET IN/OUTPUT                   00100100
&ZMS                SETC  ' '                                           00100200
&ZMS                SETC  '&ZMS "MONTKN" KEY AND ITS'                   00100300
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00100400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00100500
.ZG2C               ANOP  ,                                             00100600
.*----------------------------------------------------------------***   00100700
.***AG.KMEKY02 NAME, RQD INPUT, ME KEYS -XVARIABLE                      00100800
                    AIF   (K'&MONTKN64 LE 0).ZG3D  NO ME KEY            00100900
                    AIF   (N'&MONTKN64 LE 1).ZG3A  CK NUM               00101000
&ZMS                SETC  '"MONTKN64='                                  00101100
&ZMS                SETC  '&ZMS.&MONTKN64"'                             00101200
&ZMS                SETC  '&ZMS "MONTKN64"'                             00101300
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00101400
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00101500
.ZG3A               AIF   (K'&XUSEDMONTKNKEY LE 0).ZG3B                 00101600
&ZMS                SETC  '"MONTKN64'                                   00101700
&ZMS                SETC  '&ZMS.=&MONTKN64"'                            00101800
&ZMS                SETC  '&ZMS IS MUTUALLY EXCLUSIVE WITH THE'         00101900
&ZMS                SETC  '&ZMS "&XUSEDMONTKNKEY"'                      00102000
                    MNOTE 8,' &ZMS KEY.'                                00102100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00102200
                    AGO   .ZG3D                                         00102300
.*                                                                      00102400
.ZG3B               ANOP  ,                                             00102500
&ZXUSEDMONTKNKEY    SETC  'INPUT'     SET IN/OUTPUT                     00102600
&XUSEDMONTKNKEY     SETC  'MONTKN64'  SET XVARIABLE                     00102700
&ZXMONTKN64         SETC  'INPUT'     SET IN/OUTPUT                     00102800
&XMONTKN64          SETC  '&MONTKN64(1)'        SET XVARIABLE PARM      00102900
                    AIF   (N'&MONTKN64 GT 1).ZG3C                       00103000
&XMONTKN64          SETC  '&MONTKN64'           SET XVARIABLE PARM      00103100
.ZG3C               AIF   (K'&XMONTKN64 GT 0).ZG3D  ONE PARM            00103200
&ZXUSEDMONTKNKEY    SETC  ''          RESET IN/OUTPUT                   00103300
&ZXMONTKN64         SETC  ''          RESET IN/OUTPUT                   00103400
&ZMS                SETC  ' '                                           00103500
&ZMS                SETC  '&ZMS "MONTKN64" KEY AND ITS'                 00103600
                    MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'              00103700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00103800
.ZG3D               ANOP  ,                                             00103900
.*------------------------------------------------------------------    00104000
.***AG.KME4Y09 NAME, RQD INPUT, ME KEYS -CHECK IF KEY ENTERED           00104100
                    AIF   (K'&XUSEDMONTKNKEY GT 0).ZG4B                 00104200
&ZXUSEDMONTKNKEY    SETC  ''          RESET IN/OUTPUT                   00104300
&ZXMONTKN           SETC  ''          RESET IN/OUTPUT                   00104400
&XUSEDMONTKNKEY     SETC  ''          ENSURE NULL                       00104500
&XMONTKN            SETC  ''          ENSURE NULL                       00104600
&ZMS                SETC  'ONE OF THE FOLLOWING'                        00104700
&ZMS                SETC  '&ZMS MUTUALLY EXCLUSIVE KEY(S) IS'           00104800
&ZMS                SETC  '&ZMS REQUIRED:'                              00104900
&ZMS                SETC  '&ZMS "MONTKN"'       VALID ME KEY            00105000
&ZMS                SETC  '&ZMS OR "MONTKN64".'  VALID ME KEY           00105100
                    MNOTE 8,' &ZMS '                                    00105200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00105300
.ZG4B               ANOP  ,                                             00105400
.*-------------------------------------------------------------------   00105500
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00105600
.ZG2ZY  AIF    ('&XUSEDMONTKNKEY' NE 'MONTKN').ZG3ZY                    00105700
.*-------------------------------------------------------------------   00105800
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00105900
                    AIF   (K'&ZXMONTKN LE 0).ZG2R  NOT I/O              00106000
                    AIF   ('&XMONTKN'(1,1) NE '(').ZG2R                 00106100
&ZCGPR              SETC  '&XMONTKN'(2,K'&XMONTKN-2)                    00106200
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                   00106300
                    AIF   (K'&ZCGPR GT 2).ZG2Q                          00106400
                    AIF   ('&ZCGPR' EQ '0').ZG2Q                        00106500
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00106600
                    AIF   (T'&ZCGPR NE 'N').ZG2Q  INVALID REG NAME      00106700
.ZG2P               ANOP  ,                                             00106800
                    AIF   (T'&ZCGPR NE 'N').ZG2R  NON NUMERIC           00106900
                    AIF   ('&ZCGPR' LT '2').ZG2Q                        00107000
                    AIF   ('&ZCGPR' LE '12').ZG2R                       00107100
.ZG2Q               ANOP  ,                                             00107200
&ZMS                SETC  '"MONTKN='                                    00107300
&ZMS                SETC  '&ZMS.&MONTKN"'                               00107400
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00107500
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00107600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00107700
.ZG2R               ANOP  ,                                             00107800
.*-------------------------------------------------------------------   00107900
.***AG.KMEKY13 NAME, RQD INPUT, ME KEYS -PROCESS DEPENDENCIES           00108000
.ZG3ZY  AIF    ('&XUSEDMONTKNKEY' NE 'MONTKN64').ZG4ZY                  00108100
.*-------------------------------------------------------------------   00108200
.***AG.KCK02 NAME, RQD INPUT, ME KEYS -GPR OUT OF RANGE                 00108300
                    AIF   (K'&ZXMONTKN64 LE 0).ZG3R  NOT I/O            00108400
                    AIF   ('&XMONTKN64'(1,1) NE '(').ZG3R               00108500
&ZCGPR              SETC  '&XMONTKN64'(2,K'&XMONTKN64-2)                00108600
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG3P                   00108700
                    AIF   (K'&ZCGPR GT 2).ZG3Q                          00108800
                    AIF   ('&ZCGPR' EQ '0').ZG3Q                        00108900
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00109000
                    AIF   (T'&ZCGPR NE 'N').ZG3Q  INVALID REG NAME      00109100
.ZG3P               ANOP  ,                                             00109200
                    AIF   (T'&ZCGPR NE 'N').ZG3R  NON NUMERIC           00109300
                    AIF   ('&ZCGPR' LT '2').ZG3Q                        00109400
                    AIF   ('&ZCGPR' LE '12').ZG3R                       00109500
.ZG3Q               ANOP  ,                                             00109600
&ZMS                SETC  '"MONTKN64='                                  00109700
&ZMS                SETC  '&ZMS.&MONTKN64"'                             00109800
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00109900
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00110000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00110100
.ZG3R               ANOP  ,                                             00110200
.*-------------------------------------------------------------------   00110300
.***AG.KMEKY15 NAME, RQD INPUT, ME KEYS -END                            00110400
.ZG4ZY              ANOP ,            END MUTUALLY EXCLUSIVE KEYS       00110500
.*----------------------------------------------------------------***   00110600
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00110700
                    AIF   (N'&EWLM LE 1).ZG6A   CK NUM                  00110800
&ZMS                SETC  '"EWLM='                                      00110900
&ZMS                SETC  '&ZMS.&EWLM"'                                 00111000
&ZMS                SETC  '&ZMS "EWLM"'                                 00111100
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00111200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00111300
.ZG6A               ANOP  ,                                             00111400
.*-------------------------------------------------------------------   00111500
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00111600
&XEWLM              SETC  ''          INITIALIZE XVARIABLE              00111700
.ZG7A   AIF   ('&EWLM(1)' NE 'NO').ZG8A                                 00111800
&XEWLM              SETC  'NO'        SET KEYWORD                       00111900
.*-------------------------------------------------------------------   00112000
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00112100
.ZG8A               AIF   (K'&XEWLM GT 0).ZG8C  KEYWORD                 00112200
                    AIF   (K'&EWLM(1) LE 0).ZG8B                        00112300
&ZMS                SETC  '"EWLM='                                      00112400
&ZMS                SETC  '&ZMS.&EWLM"'                                 00112500
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00112600
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00112700
&ZMS                SETC  '&ZMS "NO".'                                  00112800
                    MNOTE 8,' &ZMS '                                    00112900
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00113000
.ZG8B               ANOP  ,                                             00113100
&XEWLM              SETC  'NO'        SET DEFAULT KEYWORD               00113200
.ZG8C               ANOP  ,                                             00113300
&ZXEWLM             SETC  'INPUT'     SET IN/OUTPUT                     00113400
.*----------------------------------------------------------------***   00113500
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00113600
                    AIF   (N'&END_FLOW LE 1).ZG10A  CK NUM              00113700
&ZMS                SETC  '"END_FLOW='                                  00113800
&ZMS                SETC  '&ZMS.&END_FLOW"'                             00113900
&ZMS                SETC  '&ZMS "END_FLOW"'                             00114000
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00114100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00114200
.ZG10A              ANOP  ,                                             00114300
.*-------------------------------------------------------------------   00114400
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00114500
&XEND_FLOW          SETC  ''          INITIALIZE XVARIABLE              00114600
.ZG11A   AIF   ('&END_FLOW(1)' NE 'NO').ZG12A                           00114700
&XEND_FLOW          SETC  'NO'        SET KEYWORD                       00114800
.*-------------------------------------------------------------------   00114900
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00115000
.ZG12A   AIF   ('&END_FLOW(1)' NE 'YES').ZG13A                          00115100
&XEND_FLOW          SETC  'YES'       SET KEYWORD                       00115200
.*-------------------------------------------------------------------   00115300
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00115400
.ZG13A              AIF   (K'&XEND_FLOW GT 0).ZG13C  KEYWORD            00115500
                    AIF   (K'&END_FLOW(1) LE 0).ZG13B                   00115600
&ZMS                SETC  '"END_FLOW='                                  00115700
&ZMS                SETC  '&ZMS.&END_FLOW"'                             00115800
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00115900
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00116000
&ZMS                SETC  '&ZMS "NO"'                                   00116100
&ZMS                SETC  '&ZMS OR "YES".'                              00116200
                    MNOTE 8,' &ZMS '                                    00116300
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00116400
.ZG13B              ANOP  ,                                             00116500
&XEND_FLOW          SETC  'NO'        SET DEFAULT KEYWORD               00116600
.ZG13C              ANOP  ,                                             00116700
&ZXEND_FLOW         SETC  'INPUT'     SET IN/OUTPUT                     00116800
.*----------------------------------------------------------------***   00116900
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00117000
                    AIF   (N'&MESSAGES_SENT LE 1).ZG15A  CK NUM         00117100
&ZMS                SETC  '"MESSAGES_SENT='                             00117200
&ZMS                SETC  '&ZMS.&MESSAGES_SENT"'                        00117300
&ZMS                SETC  '&ZMS "MESSAGES_SENT"'                        00117400
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00117500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00117600
.ZG15A              ANOP  ,                                             00117700
.*-------------------------------------------------------------------   00117800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00117900
&ZXMESSAGES_SENT    SETC  'INPUT'     SET IN/OUTPUT                     00118000
&XMESSAGES_SENT     SETC  'NO_MESSAGES_SENT'                            00118100
                    AIF   (K'&MESSAGES_SENT(1) LE 0).ZG15B  PARM        00118200
&XMESSAGES_SENT     SETC  '&MESSAGES_SENT(1)'   SET XVARIABLE           00118300
                    AIF   (N'&MESSAGES_SENT GT 1).ZG15B  MULTI          00118400
&XMESSAGES_SENT     SETC  '&MESSAGES_SENT'      SET XVARIABLE           00118500
.ZG15B              ANOP  ,                                             00118600
.*-------------------------------------------------------------------   00118700
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00118800
                    AIF   (K'&ZXMESSAGES_SENT LE 0).ZG15R  NOT I/O      00118900
         AIF   ('&XMESSAGES_SENT' EQ 'NO_MESSAGES_SENT').ZG15R          00119000
                    AIF   ('&XMESSAGES_SENT'(1,1) NE '(').ZG15R         00119100
&ZCGPR              SETC  '&XMESSAGES_SENT'(2,K'&XMESSAGES_SENT-2)      00119200
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG15P                  00119300
                    AIF   (K'&ZCGPR GT 2).ZG15Q                         00119400
                    AIF   ('&ZCGPR' EQ '0').ZG15Q                       00119500
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00119600
                    AIF   (T'&ZCGPR NE 'N').ZG15Q  INVALID REG NAME     00119700
.ZG15P              ANOP  ,                                             00119800
                    AIF   (T'&ZCGPR NE 'N').ZG15R  NON NUMERIC          00119900
                    AIF   ('&ZCGPR' LT '2').ZG15Q                       00120000
                    AIF   ('&ZCGPR' LE '12').ZG15R                      00120100
.ZG15Q              ANOP  ,                                             00120200
&ZMS                SETC  '"MESSAGES_SENT='                             00120300
&ZMS                SETC  '&ZMS.&MESSAGES_SENT"'                        00120400
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00120500
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00120600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00120700
.ZG15R              ANOP  ,                                             00120800
.*----------------------------------------------------------------***   00120900
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00121000
                    AIF   (N'&EWLM_RCVD_CORR LE 1).ZG18A  CK NUM        00121100
&ZMS                SETC  '"EWLM_RCVD_CORR='                            00121200
&ZMS                SETC  '&ZMS.&EWLM_RCVD_CORR"'                       00121300
&ZMS                SETC  '&ZMS "EWLM_RCVD_CORR"'                       00121400
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00121500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00121600
.ZG18A              ANOP  ,                                             00121700
.*-------------------------------------------------------------------   00121800
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00121900
&ZXEWLM_RCVD_CORR   SETC  'INPUT'     SET IN/OUTPUT                     00122000
&XEWLM_RCVD_CORR    SETC  'NO_EWLM_RCVD_CORR'                           00122100
                    AIF   (K'&EWLM_RCVD_CORR(1) LE 0).ZG18B  PARM       00122200
&XEWLM_RCVD_CORR    SETC  '&EWLM_RCVD_CORR(1)'  SET XVARIABLE           00122300
                    AIF   (N'&EWLM_RCVD_CORR GT 1).ZG18B  MULTI         00122400
&XEWLM_RCVD_CORR    SETC  '&EWLM_RCVD_CORR'     SET XVARIABLE           00122500
.ZG18B              ANOP  ,                                             00122600
.*-------------------------------------------------------------------   00122700
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00122800
                    AIF   (K'&ZXEWLM_RCVD_CORR LE 0).ZG18R  NOT I/O     00122900
         AIF   ('&XEWLM_RCVD_CORR' EQ 'NO_EWLM_RCVD_CORR').ZG18R        00123000
                    AIF   ('&XEWLM_RCVD_CORR'(1,1) NE '(').ZG18R        00123100
&ZCGPR              SETC  '&XEWLM_RCVD_CORR'(2,K'&XEWLM_RCVD_CORR-2)    00123200
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG18P                  00123300
                    AIF   (K'&ZCGPR GT 2).ZG18Q                         00123400
                    AIF   ('&ZCGPR' EQ '0').ZG18Q                       00123500
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00123600
                    AIF   (T'&ZCGPR NE 'N').ZG18Q  INVALID REG NAME     00123700
.ZG18P              ANOP  ,                                             00123800
                    AIF   (T'&ZCGPR NE 'N').ZG18R  NON NUMERIC          00123900
                    AIF   ('&ZCGPR' LT '2').ZG18Q                       00124000
                    AIF   ('&ZCGPR' LE '12').ZG18R                      00124100
.ZG18Q              ANOP  ,                                             00124200
&ZMS                SETC  '"EWLM_RCVD_CORR='                            00124300
&ZMS                SETC  '&ZMS.&EWLM_RCVD_CORR"'                       00124400
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00124500
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00124600
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00124700
.ZG18R              ANOP  ,                                             00124800
.*----------------------------------------------------------------***   00124900
.***AG.KKWRD01 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00125000
                    AIF   (N'&AFTER_STRT LE 1).ZG20A  CK NUM            00125100
&ZMS                SETC  '"AFTER_STRT='                                00125200
&ZMS                SETC  '&ZMS.&AFTER_STRT"'                           00125300
&ZMS                SETC  '&ZMS "AFTER_STRT"'                           00125400
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00125500
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00125600
.ZG20A              ANOP  ,                                             00125700
.*-------------------------------------------------------------------   00125800
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00125900
&XAFTER_STRT        SETC  ''          INITIALIZE XVARIABLE              00126000
.ZG21A   AIF   ('&AFTER_STRT(1)' NE 'NO').ZG22A                         00126100
&XAFTER_STRT        SETC  'NO'        SET KEYWORD                       00126200
.*-------------------------------------------------------------------   00126300
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00126400
.ZG22A   AIF   ('&AFTER_STRT(1)' NE 'YES').ZG23A                        00126500
&XAFTER_STRT        SETC  'YES'       SET KEYWORD                       00126600
.*-------------------------------------------------------------------   00126700
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00126800
.ZG23A              AIF   (K'&XAFTER_STRT GT 0).ZG23C  KEYWORD          00126900
                    AIF   (K'&AFTER_STRT(1) LE 0).ZG23B                 00127000
&ZMS                SETC  '"AFTER_STRT='                                00127100
&ZMS                SETC  '&ZMS.&AFTER_STRT"'                           00127200
&ZMS                SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '     00127300
&ZMS                SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'           00127400
&ZMS                SETC  '&ZMS "NO"'                                   00127500
&ZMS                SETC  '&ZMS OR "YES".'                              00127600
                    MNOTE 8,' &ZMS '                                    00127700
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00127800
.ZG23B              ANOP  ,                                             00127900
&XAFTER_STRT        SETC  'NO'        SET DEFAULT KEYWORD               00128000
.ZG23C              ANOP  ,                                             00128100
&ZXAFTER_STRT       SETC  'INPUT'     SET IN/OUTPUT                     00128200
.*-------------------------------------------------------------------   00128300
.***AG.KKWRD06 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00128400
                    AIF   (K'&EWLM_RCVD_CORR(1) GT 0).ZG23D  KEY        00128500
                    AIF   (K'&AFTER_STRT(1) LE 0).ZG23D  PARM           00128600
&ZMS                SETC  '"AFTER_STRT'                                 00128700
&ZMS                SETC  '&ZMS.=&AFTER_STRT"'                          00128800
&ZMS                SETC  '&ZMS CAN ONLY BE SPECIFIED IF'               00128900
&ZMS                SETC  '&ZMS '                                       00129000
&ZMS                SETC  '&ZMS "EWLM_RCVD_CORR"'                       00129100
                    MNOTE 8,' &ZMS IS ALSO SPECIFIED.'                  00129200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00129300
.ZG23D              ANOP  ,                                             00129400
.*----------------------------------------------------------------***   00129500
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00129600
                    AIF   (N'&STATUS LE 1).ZG26A  CK NUM                00129700
&ZMS                SETC  '"STATUS='                                    00129800
&ZMS                SETC  '&ZMS.&STATUS"'                               00129900
&ZMS                SETC  '&ZMS "STATUS"'                               00130000
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00130100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00130200
.ZG26A              ANOP  ,                                             00130300
.*-------------------------------------------------------------------   00130400
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00130500
&ZXSTATUS           SETC  'INPUT'     SET IN/OUTPUT                     00130600
&XSTATUS            SETC  'IWMEWLMARMSTATUSGOOD'                        00130700
                    AIF   (K'&STATUS(1) LE 0).ZG26B  PARM               00130800
&XSTATUS            SETC  '&STATUS(1)'          SET XVARIABLE           00130900
                    AIF   (N'&STATUS GT 1).ZG26B  MULTI                 00131000
&XSTATUS            SETC  '&STATUS'   SET XVARIABLE                     00131100
.ZG26B              ANOP  ,                                             00131200
.*-------------------------------------------------------------------   00131300
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00131400
                    AIF   (K'&ZXSTATUS LE 0).ZG26R  NOT I/O             00131500
         AIF   ('&XSTATUS' EQ 'IWMEWLMARMSTATUSGOOD').ZG26R             00131600
                    AIF   ('&XSTATUS'(1,1) NE '(').ZG26R                00131700
&ZCGPR              SETC  '&XSTATUS'(2,K'&XSTATUS-2)                    00131800
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG26P                  00131900
                    AIF   (K'&ZCGPR GT 2).ZG26Q                         00132000
                    AIF   ('&ZCGPR' EQ '0').ZG26Q                       00132100
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00132200
                    AIF   (T'&ZCGPR NE 'N').ZG26Q  INVALID REG NAME     00132300
.ZG26P              ANOP  ,                                             00132400
                    AIF   (T'&ZCGPR NE 'N').ZG26R  NON NUMERIC          00132500
                    AIF   ('&ZCGPR' LT '2').ZG26Q                       00132600
                    AIF   ('&ZCGPR' LE '12').ZG26R                      00132700
.ZG26Q              ANOP  ,                                             00132800
&ZMS                SETC  '"STATUS='                                    00132900
&ZMS                SETC  '&ZMS.&STATUS"'                               00133000
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00133100
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'              00133200
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00133300
.ZG26R              ANOP  ,                                             00133400
.*----------------------------------------------------------------***   00133500
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00133600
                    AIF   (N'&RETCODE LE 1).ZG29A  CK NUM               00133700
&ZMS                SETC  '"RETCODE='                                   00133800
&ZMS                SETC  '&ZMS.&RETCODE"'                              00133900
&ZMS                SETC  '&ZMS "RETCODE"'                              00134000
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00134100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00134200
.ZG29A              ANOP  ,                                             00134300
.*-------------------------------------------------------------------   00134400
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00134500
                    AIF   (K'&RETCODE(1) LE 0).ZG29C  NO PARM           00134600
&ZXRETCODE          SETC  'OUTPUT'    SET OUTPUT                        00134700
&XRETCODE           SETC  '&RETCODE(1)'         SET XVARIABLE           00134800
                    AIF   (N'&RETCODE GT 1).ZG29C                       00134900
&XRETCODE           SETC  '&RETCODE'  SET XVARIABLE                     00135000
.ZG29C              ANOP  ,                                             00135100
.*-------------------------------------------------------------------   00135200
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00135300
                    AIF   (K'&ZXRETCODE LE 0).ZG29R  NOT I/O            00135400
                    AIF   ('&XRETCODE'(1,1) NE '(').ZG29R               00135500
&ZCGPR              SETC  '&XRETCODE'(2,K'&XRETCODE-2)                  00135600
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG29P                  00135700
                    AIF   (K'&ZCGPR GT 2).ZG29Q                         00135800
                    AIF   ('&ZCGPR' EQ '0').ZG29Q                       00135900
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00136000
                    AIF   (T'&ZCGPR NE 'N').ZG29Q  INVALID REG NAME     00136100
.ZG29P              ANOP  ,                                             00136200
                    AIF   (T'&ZCGPR NE 'N').ZG29R  NON NUMERIC          00136300
                    AIF   ('&ZCGPR' EQ '15').ZG29R                      00136400
                    AIF   ('&ZCGPR' LT '2').ZG29Q                       00136500
                    AIF   ('&ZCGPR' LE '12').ZG29R                      00136600
.ZG29Q              ANOP  ,                                             00136700
&ZMS                SETC  '"RETCODE='                                   00136800
&ZMS                SETC  '&ZMS.&RETCODE"'                              00136900
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00137000
                    MNOTE 8,' &ZMS IN THE RANGE (2)-(12) OR (15).'      00137100
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00137200
.ZG29R              ANOP  ,                                             00137300
.*----------------------------------------------------------------***   00137400
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00137500
                    AIF   (N'&RSNCODE LE 1).ZG32A  CK NUM               00137600
&ZMS                SETC  '"RSNCODE='                                   00137700
&ZMS                SETC  '&ZMS.&RSNCODE"'                              00137800
&ZMS                SETC  '&ZMS "RSNCODE"'                              00137900
                    MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'           00138000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00138100
.ZG32A              ANOP  ,                                             00138200
.*-------------------------------------------------------------------   00138300
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00138400
                    AIF   (K'&RSNCODE(1) LE 0).ZG32C  NO PARM           00138500
&ZXRSNCODE          SETC  'OUTPUT'    SET OUTPUT                        00138600
&XRSNCODE           SETC  '&RSNCODE(1)'         SET XVARIABLE           00138700
                    AIF   (N'&RSNCODE GT 1).ZG32C                       00138800
&XRSNCODE           SETC  '&RSNCODE'  SET XVARIABLE                     00138900
.ZG32C              ANOP  ,                                             00139000
.*-------------------------------------------------------------------   00139100
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00139200
                    AIF   (K'&ZXRSNCODE LE 0).ZG32R  NOT I/O            00139300
                    AIF   ('&XRSNCODE'(1,1) NE '(').ZG32R               00139400
&ZCGPR              SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                  00139500
                    AIF   ('&ZCGPR'(1,1) NE '0').ZG32P                  00139600
                    AIF   (K'&ZCGPR GT 2).ZG32Q                         00139700
                    AIF   ('&ZCGPR' EQ '0').ZG32R                       00139800
&ZCGPR              SETC  '&ZCGPR'(2,1)                                 00139900
                    AIF   (T'&ZCGPR NE 'N').ZG32Q  INVALID REG NAME     00140000
.ZG32P              ANOP  ,                                             00140100
                    AIF   (T'&ZCGPR NE 'N').ZG32R  NON NUMERIC          00140200
                    AIF   ('&ZCGPR' EQ '0').ZG32R                       00140300
                    AIF   ('&ZCGPR' LT '2').ZG32Q                       00140400
                    AIF   ('&ZCGPR' LE '12').ZG32R                      00140500
.ZG32Q              ANOP  ,                                             00140600
&ZMS                SETC  '"RSNCODE='                                   00140700
&ZMS                SETC  '&ZMS.&RSNCODE"'                              00140800
&ZMS                SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'     00140900
                    MNOTE 8,' &ZMS IN THE RANGE (0) OR (2)-(12).'       00141000
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00141100
.ZG32R              ANOP  ,                                             00141200
.******************************************************************     00141300
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00141400
.******************************************************************     00141500
                    ACTR  10000                                         00141600
.*----------------------------------------------------------------***   00141700
.***AH.P02 EXTRA POSITIONALS                                            00141800
                    AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS          00141900
                    AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL          00142000
                    AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL      00142100
                    AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL       00142200
.ZGLISTX1           ANOP  ,                                             00142300
&ZCVAL              SETC  ''          ERROR FIELD                       00142400
&ZAWRK              SETA  0           POSITIONAL NUMBER                 00142500
.ZGLIST2            ANOP  ,                                             00142600
&ZAWRK              SETA  &ZAWRK+1    NEXT POSITIONAL                   00142700
                    AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE          00142800
&ZCVAL              SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA               00142900
                    AGO   .ZGLIST2                                      00143000
.*                                                                      00143100
.ZGLIST3            ANOP  ,                                             00143200
&ZCVAL              SETC '&ZCVAL'(2,K'&ZCVAL-1)  STRIP COMMA            00143300
&ZMS                SETC  'POSITIONAL ARGUMENT(S),'                     00143400
&ZMS                SETC  '&ZMS "&ZCVAL"'                               00143500
&ZMS                SETC  '&ZMS CANNOT BE USED.'                        00143600
&ZMS                SETC  '&ZMS NO POSITIONAL ARGUMENTS'                00143700
                    MNOTE 8,' &ZMS ARE ALLOWED.'                        00143800
&ZMACRET            SETA  8           SET MACRO ERROR RETURN CODE       00143900
.ZGLISTX            ANOP  ,                                             00144000
&ZASYSLNDX          SETA  0                                             00144100
.*-------------------------------------------------------------------   00144200
.***AG.MF04 MF=(SLE)                                                    00144300
.ZGMFX              ANOP  ,           END OF FULL SYNTAX CHECK          00144400
.*******************************************************************    00144500
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00144600
.*******************************************************************    00144700
                    AIF   (&ZMACRET NE 0).ZLX2  ERROR DETECTED          00144800
.*******************************************************************    00144900
.***AE.01  START OF IWM4MSTO MACRO CODE                                 00145000
.*******************************************************************    00145100
                    LCLC  &M0M0001                 NAME                 00145200
&M0M0001            SETC  '&XLABEL'                SET NAME             00145300
                    AIF   (K'&XLABEL NE 0).XLAB2                        00145400
&M0M0001            SETC  'M00M&SYSNDX'            DEFAULT NAME         00145500
.*                                                                      00145600
.XLAB2              ANOP  ,                                             00145700
                    AIF   ('&XMF' EQ 'L').XLAB3                         00145800
&M0M0001 DS    0H                             IWM4MSTO-0                00145900
.XLAB3              ANOP  ,                                             00146000
.*******************************************************************    00146100
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00146200
.*******************************************************************    00146300
              PUSH  PRINT                                               00146400
                    AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON    00146500
                    PRINT OFF         ++ PR01                           00146600
                    AGO   .ZPRNTXX                                      00146700
.ZPRINTX            PRINT ON                                            00146800
.ZPRNTXX            ANOP  ,                                             00146900
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00147000
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00147100
.********************************************************************   00147200
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00147300
.********************************************************************   00147400
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00147500
                      LCLA  &ZOPN1         INVOCATION INDEX             00147600
                      LCLC  &ZOPL(4095)    LABEL                        00147700
                      LCLC  &ZOPO(4095)    OPERATION                    00147800
                      LCLC  &ZOPV(4095)    VALUE                        00147900
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00148000
.*                                                                      00148100
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00148200
.******************************************************************     00148300
.***AL.L10 IWM4MSTO FMT=LIST MF=S!L PARAMETERS                          00148400
.******************************************************************     00148500
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00148600
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00148700
&XMFCTRL              SETC  '#Z'.'&SYSNDX'.'A'                          00148800
&XMFATTR              SETC  '0D'                                        00148900
.*                                                                      00149000
&ZOPN                 SETA  &ZOPN+1                                     00149100
&ZOPL(&ZOPN)          SETC  ' '                                         00149200
&ZOPO(&ZOPN)          SETC  'CNOP'                                      00149300
&ZOPV(&ZOPN)          SETC  '4,8'                                       00149400
&ZOPN                 SETA  &ZOPN+1                                     00149500
&ZOPL(&ZOPN)          SETC  ' '                                         00149600
&ZOPO(&ZOPN)          SETC  'BRAS'                                      00149700
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              00149800
&ZOPD(&ZOPN)          SETC  '++ IWM4MSTO ARG PARMS'                     00149900
.*                                                                      00150000
&ZOPN                 SETA  &ZOPN+1                                     00150100
&ZOPL(&ZOPN)          SETC  ' '                                         00150200
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00150300
&ZOPV(&ZOPN)          SETC  '1'                                         00150400
&ZOPD(&ZOPN)          SETC  ' '                                         00150500
.*                                                                      00150600
.ZLMFSL2              ANOP  ,                                           00150700
.*-------------------------------------------------------------------   00150800
.***AM.L00  IWM4MSTO FMT=LIST name                                      00150900
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00151000
&ZOPN                 SETA &ZOPN+1                                      00151100
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00151200
&ZOPO(&ZOPN)          SETC 'EQU'                                        00151300
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00151400
&ZOPD(&ZOPN)          SETC '++ IWM4MSTO NAME'                           00151500
.ZLMFSL2M             ANOP  ,                                           00151600
.*-------------------------------------------------------------------   00151700
.***AM.L01  IWM4MSTO FMT=LIST PARAMETERS                                00151800
&ZOPN                 SETA &ZOPN+1                                      00151900
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00152000
&ZOPO(&ZOPN)          SETC 'DS'                                         00152100
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00152200
&ZOPD(&ZOPN)          SETC '++ IWM4MSTO PARM LIST'                      00152300
.*-------------------------------------------------------------------   00152400
.***AM.L02 XVERSION XL1                                                 00152500
&ZOPN                 SETA &ZOPN+1                                      00152600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00152700
&ZOPO(&ZOPN)          SETC 'DS'                                         00152800
&ZOPV(&ZOPN)          SETC 'XL1'                                        00152900
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00153000
.*-------------------------------------------------------------------   00153100
.***AM.L03 XMSTOP_OPTIONS BL.16                                         00153200
&ZOPN                 SETA &ZOPN+1                                      00153300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMSTOP_OPTIONS'                   00153400
&ZOPO(&ZOPN)          SETC 'DS'                                         00153500
&ZOPV(&ZOPN)          SETC 'BL.16'                                      00153600
&ZOPD(&ZOPN)          SETC '++ FIELD_LABEL'                             00153700
.*                                                                      00153800
&ZOPN                 SETA  &ZOPN+1                                     00153900
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XEND_FLOW_YES'                   00154000
&ZOPO(&ZOPN)          SETC  'EQU'                                       00154100
&ZOPV(&ZOPN)          SETC  'B''1000000000000000'''                     00154200
&ZOPD(&ZOPN)          SETC  '++ XEND_FLOW.'                             00154300
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00154400
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00154500
.*                                                                      00154600
&ZOPN                 SETA  &ZOPN+1                                     00154700
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._XAFTER_STRT_YES'                 00154800
&ZOPO(&ZOPN)          SETC  'EQU'                                       00154900
&ZOPV(&ZOPN)          SETC  'B''0100000000000000'''                     00155000
&ZOPD(&ZOPN)          SETC  '++ XAFTER_STRT.'                           00155100
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).YES'                          00155200
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00155300
.*                                                                      00155400
&ZOPN                 SETA  &ZOPN+1                                     00155500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL._IWM4MSTO'                        00155600
&ZOPO(&ZOPN)          SETC  'EQU'                                       00155700
&ZOPV(&ZOPN)          SETC  'B''0000000000000001'''                     00155800
&ZOPD(&ZOPN)          SETC  '++ MACUSED.'                               00155900
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN).IWM4MSTO'                     00156000
&ZOPD(&ZOPN)          SETC  '&ZOPD(&ZOPN) KEYWORD'                      00156100
.*-------------------------------------------------------------------   00156200
.***AM.L09  XRSV0003 CL1                                                00156300
&ZOPN                 SETA &ZOPN+1                                      00156400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0003'                         00156500
&ZOPO(&ZOPN)          SETC 'DS'                                         00156600
&ZOPV(&ZOPN)          SETC 'CL1'                                        00156700
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00156800
.*-------------------------------------------------------------------   00156900
.***AM.L09  XMONTKN BL.32                                               00157000
&ZOPN                 SETA &ZOPN+1                                      00157100
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMONTKN'                          00157200
&ZOPO(&ZOPN)          SETC 'DS'                                         00157300
&ZOPV(&ZOPN)          SETC 'BL.32'                                      00157400
&ZOPD(&ZOPN)          SETC '++ &ZXMONTKN '                              00157500
.*-------------------------------------------------------------------   00157600
.***AM.L09  XRSV0008 CL4                                                00157700
&ZOPN                 SETA &ZOPN+1                                      00157800
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0008'                         00157900
&ZOPO(&ZOPN)          SETC 'DS'                                         00158000
&ZOPV(&ZOPN)          SETC 'CL4'                                        00158100
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00158200
.*-------------------------------------------------------------------   00158300
.***AM.L09  XMESSAGES_SENT F                                            00158400
&ZOPN                 SETA &ZOPN+1                                      00158500
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMESSAGES_SENT'                   00158600
&ZOPO(&ZOPN)          SETC 'DS'                                         00158700
&ZOPV(&ZOPN)          SETC 'F'                                          00158800
&ZOPD(&ZOPN)          SETC '++ &ZXMESSAGES_SENT '                       00158900
.*-------------------------------------------------------------------   00159000
.***AM.L09  XSTATUS F                                                   00159100
&ZOPN                 SETA &ZOPN+1                                      00159200
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XSTATUS'                          00159300
&ZOPO(&ZOPN)          SETC 'DS'                                         00159400
&ZOPV(&ZOPN)          SETC 'F'                                          00159500
&ZOPD(&ZOPN)          SETC '++ &ZXSTATUS '                              00159600
.*-------------------------------------------------------------------   00159700
.***AM.L09  XRSV0014 CL4                                                00159800
&ZOPN                 SETA &ZOPN+1                                      00159900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0014'                         00160000
&ZOPO(&ZOPN)          SETC 'DS'                                         00160100
&ZOPV(&ZOPN)          SETC 'CL4'                                        00160200
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00160300
.*-------------------------------------------------------------------   00160400
.***AM.L09  XMONTKN64 BL.64                                             00160500
&ZOPN                 SETA &ZOPN+1                                      00160600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XMONTKN64'                        00160700
&ZOPO(&ZOPN)          SETC 'DS'                                         00160800
&ZOPV(&ZOPN)          SETC 'BL.64'                                      00160900
&ZOPD(&ZOPN)          SETC '++ &ZXMONTKN64 '                            00161000
.*-------------------------------------------------------------------   00161100
.***AM.L09 ADDR3164 XEWLM_RCVD_CORR AD                                  00161200
&ZOPN                 SETA &ZOPN+1                                      00161300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XEWLM_RCVD_CORR_ADDR3164'         00161400
&ZOPO(&ZOPN)          SETC 'DS'                                         00161500
&ZOPV(&ZOPN)          SETC 'AD'                                         00161600
&ZOPD(&ZOPN)          SETC '++ &ZXEWLM_RCVD_CORR ADDR3164'              00161700
.*-------------------------------------------------------------------   00161800
.***AM.L10 END OF IWM4MSTO LIST PARAMETERS                              00161900
&ZOPN                 SETA &ZOPN+1                                      00162000
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00162100
&ZOPO(&ZOPN)          SETC 'EQU'                                        00162200
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00162300
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00162400
.*                                                                      00162500
&ZOPN                 SETA &ZOPN+1                                      00162600
&ZOPL(&ZOPN)          SETC ' '                                          00162700
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00162800
&ZOPV(&ZOPN)          SETC '1'                                          00162900
&ZOPD(&ZOPN)          SETC ' '                                          00163000
.*-------------------------------------------------------------------   00163100
.***AL.L12 IWM4MSTO FMT=LIST MF=S!L PARAMETERS                          00163200
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00163300
.*                                                                      00163400
&ZOPN                 SETA  &ZOPN+1                                     00163500
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00163600
&ZOPO(&ZOPN)          SETC  'DC'                                        00163700
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00163800
&ZOPD(&ZOPN)          SETC  '++ IWM4MSTO ARG PARMS'                     00163900
.*                                                                      00164000
.ZLMFSLX              ANOP  ,                                           00164100
.*-------------------------------------------------------------------   00164200
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00164300
&ZPLLEN               SETA 40                                           00164400
.*                                                                      00164500
.******************************************************************     00164600
.***AI.L01 IWM4MSTO FMT=LIST FILL IN PARAMETER AREA                     00164700
.******************************************************************     00164800
                      ACTR  10000                                       00164900
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00165000
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00165100
&ZCVAL                SETC  'LAE'          XAX MODE                     00165200
.ZIMFXA               ANOP ,                                            00165300
.*                                                                      00165400
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00165500
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00165600
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00165700
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00165800
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00165900
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00166000
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00166100
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00166200
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00166300
&ZOPN                 SETA  &ZOPN+1                                     00166400
&ZOPL(&ZOPN)          SETC  ' '                                         00166500
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00166600
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00166700
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00166800
                      AGO   .ZIMFNX                                     00166900
.*                                                                      00167000
.ZIMFN2               ANOP ,                                            00167100
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     00167200
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  00167300
&ZOPN                 SETA  &ZOPN+1                                     00167400
&ZOPL(&ZOPN)          SETC  ' '                                         00167500
&ZOPO(&ZOPN)          SETC  'LAE'                                       00167600
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  00167700
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00167800
                      AGO   .ZIMFNX                                     00167900
.ZIMFNX1              ANOP ,                                            00168000
&ZOPN                 SETA  &ZOPN+1                                     00168100
&ZOPL(&ZOPN)          SETC  ' '                                         00168200
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00168300
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00168400
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00168500
.ZIMFNX               ANOP ,                                            00168600
.********************************************************************   00168700
.***AI.L02 IWM4MSTO FMT=LIST INITIALIZE PARAMETER AREA                  00168800
.********************************************************************   00168900
.***AI.L03 MF=(SLE)                                                     00169000
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00169100
.*                                                                      00169200
&ZOPN                 SETA  &ZOPN+1                                     00169300
&ZOPL(&ZOPN)          SETC  ' '                                         00169400
&ZOPO(&ZOPN)          SETC  'XC'                                        00169500
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00169600
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00169700
.ZIMFLX               ANOP  ,                                           00169800
.*-------------------------------------------------------------------   00169900
.***AI.L05 XMSTOP_OPTIONS BL2                                           00170000
&ZW                   SETC  ''                                          00170100
&ZCLNG                SETC  ''             RESET BIT ON FLAG            00170200
.*-------------------------------------------------------------------   00170300
.***AI.L08 XMSTOP_OPTIONS "YES"                                         00170400
.***      BL2'1XXXXXXXXXXXXXXX'                                         00170500
         AIF   ('&XEND_FLOW' NE 'YES').ZI3A                             00170600
&ZW                   SETC  '&ZW.1'                                     00170700
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00170800
                      AGO   .ZI3C                                       00170900
.*                                                                      00171000
.ZI3A                 ANOP  ,                                           00171100
&ZW                   SETC  '&ZW.0'                                     00171200
.ZI3C                 ANOP  ,                                           00171300
.*-------------------------------------------------------------------   00171400
.***AI.L08 XMSTOP_OPTIONS "YES"                                         00171500
.***      BL2'X1XXXXXXXXXXXXXX'                                         00171600
         AIF   ('&XAFTER_STRT' NE 'YES').ZI4A                           00171700
&ZW                   SETC  '&ZW.1'                                     00171800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00171900
                      AGO   .ZI4C                                       00172000
.*                                                                      00172100
.ZI4A                 ANOP  ,                                           00172200
&ZW                   SETC  '&ZW.0'                                     00172300
.ZI4C                 ANOP  ,                                           00172400
.*-------------------------------------------------------------------   00172500
.***AI.L08 XMSTOP_OPTIONS "IWM4MSTO"                                    00172600
.***      BL2'XXXXXXXXXXXXXXX1'                                         00172700
&ZW                   SETC  '&ZW.00000000000001'                        00172800
&ZCLNG                SETC  'YES'          SET BIT ON FLAG              00172900
.*-------------------------------------------------------------------   00173000
.***AI.L10 XMSTOP_OPTIONS BL2                                           00173100
                      AIF   ('&ZCLNG' NE 'YES').ZI5E  ALL ZERO BITS     00173200
&ZOPN                 SETA  &ZOPN+1                                     00173300
&ZOPL(&ZOPN)          SETC  ' '                                         00173400
&ZOPO(&ZOPN)          SETC  'OC'                                        00173500
&ZOPV(&ZOPN)          SETC  '1(2,1),=BL2''&ZW'''                        00173600
&ZOPD(&ZOPN)          SETC  '++ 55 BL2'                                 00173700
.ZI5E                 ANOP  ,                                           00173800
.*-------------------------------------------------------------------   00173900
.***AI.L25  XMONTKN XL4                                                 00174000
                      AIF   ('&ZXMONTKN' EQ '').ZI7E                    00174100
                      AIF   ('&ZXMONTKN' EQ 'OUTPUT').ZI7E              00174200
&ZCGPR                SETC  '&XMONTKN'                                  00174300
.*                                                                      00174400
                      AIF   ('&XMONTKN'(1,1) NE '(').ZI7B               00174500
&ZCGPR   SETC  '0('.'&XMONTKN'(2,K'&XMONTKN-2).')'                      00174600
                      AGO   .ZI7D                                       00174700
.ZI7B                 ANOP  ,                                           00174800
.*                                                                      00174900
&ZC                   SETC  '&XMONTKN'(1,1)                             00175000
                      AIF   (T'&ZC NE 'N').ZI7D                         00175100
&ZC                   SETC  '&XMONTKN'                                  00175200
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI7D                00175300
&ZCGPR                SETC  '=BL4''&XMONTKN'''                          00175400
.*                                                                      00175500
.ZI7D                 ANOP  ,                                           00175600
.*                                                                      00175700
&ZOPN                 SETA  &ZOPN+1                                     00175800
&ZOPL(&ZOPN)          SETC  ' '                                         00175900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00176000
&ZOPV(&ZOPN)          SETC  '4(4,1),&ZCGPR'                             00176100
&ZOPD(&ZOPN)          SETC  '++ &ZXMONTKN XMONTKN'                      00176200
.*                                                                      00176300
.ZI7E                 ANOP  ,                                           00176400
.*-------------------------------------------------------------------   00176500
.***AI.L18  XMESSAGES_SENT F                                            00176600
         AIF   ('&XMESSAGES_SENT' NE 'NO_MESSAGES_SENT').ZI9            00176700
&ZXMESSAGES_SENT      SETC  ''             RESET INPUT/OUTPUT           00176800
.ZI9                  ANOP  ,                                           00176900
.*-------------------------------------------------------------------   00177000
.***AI.L25  XMESSAGES_SENT F                                            00177100
                      AIF   ('&ZXMESSAGES_SENT' EQ '').ZI9E             00177200
                      AIF   ('&ZXMESSAGES_SENT' EQ 'OUTPUT').ZI9E       00177300
&ZCGPR                SETC  '&XMESSAGES_SENT'                           00177400
.*                                                                      00177500
                      AIF   ('&XMESSAGES_SENT'(1,1) NE '(').ZI9B        00177600
&ZCGPR   SETC  '0('.'&XMESSAGES_SENT'(2,K'&XMESSAGES_SENT-2).')'        00177700
                      AGO   .ZI9D                                       00177800
.ZI9B                 ANOP  ,                                           00177900
.*                                                                      00178000
&ZC                   SETC  '&XMESSAGES_SENT'(1,1)                      00178100
                      AIF   (T'&ZC NE 'N').ZI9D                         00178200
&ZC                   SETC  '&XMESSAGES_SENT'                           00178300
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI9D                00178400
&ZCGPR                SETC  '=FL4''&XMESSAGES_SENT'''                   00178500
.*                                                                      00178600
.ZI9D                 ANOP  ,                                           00178700
.*                                                                      00178800
&ZOPN                 SETA  &ZOPN+1                                     00178900
&ZOPL(&ZOPN)          SETC  ' '                                         00179000
&ZOPO(&ZOPN)          SETC  'MVC'                                       00179100
&ZOPV(&ZOPN)          SETC  '12(4,1),&ZCGPR'                            00179200
&ZOPD(&ZOPN)          SETC  '++ &ZXMESSAGES_SENT XMESSAGES_SENT'        00179300
.*                                                                      00179400
.ZI9E                 ANOP  ,                                           00179500
.*-------------------------------------------------------------------   00179600
.***AI.L18  XSTATUS F                                                   00179700
         AIF   ('&XSTATUS' NE 'IWMEWLMARMSTATUSGOOD').ZI10              00179800
&ZXSTATUS             SETC  ''             RESET INPUT/OUTPUT           00179900
.ZI10                 ANOP  ,                                           00180000
.*-------------------------------------------------------------------   00180100
.***AI.L25  XSTATUS F                                                   00180200
                      AIF   ('&ZXSTATUS' EQ '').ZI10E                   00180300
                      AIF   ('&ZXSTATUS' EQ 'OUTPUT').ZI10E             00180400
&ZCGPR                SETC  '&XSTATUS'                                  00180500
.*                                                                      00180600
                      AIF   ('&XSTATUS'(1,1) NE '(').ZI10B              00180700
&ZCGPR   SETC  '0('.'&XSTATUS'(2,K'&XSTATUS-2).')'                      00180800
                      AGO   .ZI10D                                      00180900
.ZI10B                ANOP  ,                                           00181000
.*                                                                      00181100
&ZC                   SETC  '&XSTATUS'(1,1)                             00181200
                      AIF   (T'&ZC NE 'N').ZI10D                        00181300
&ZC                   SETC  '&XSTATUS'                                  00181400
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI10D               00181500
&ZCGPR                SETC  '=FL4''&XSTATUS'''                          00181600
.*                                                                      00181700
.ZI10D                ANOP  ,                                           00181800
.*                                                                      00181900
&ZOPN                 SETA  &ZOPN+1                                     00182000
&ZOPL(&ZOPN)          SETC  ' '                                         00182100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00182200
&ZOPV(&ZOPN)          SETC  '16(4,1),&ZCGPR'                            00182300
&ZOPD(&ZOPN)          SETC  '++ &ZXSTATUS XSTATUS'                      00182400
.*                                                                      00182500
.ZI10E                ANOP  ,                                           00182600
.*-------------------------------------------------------------------   00182700
.***AI.L25  XMONTKN64 XL8                                               00182800
                      AIF   ('&ZXMONTKN64' EQ '').ZI12E                 00182900
                      AIF   ('&ZXMONTKN64' EQ 'OUTPUT').ZI12E           00183000
&ZCGPR                SETC  '&XMONTKN64'                                00183100
.*                                                                      00183200
                      AIF   ('&XMONTKN64'(1,1) NE '(').ZI12B            00183300
&ZCGPR   SETC  '0('.'&XMONTKN64'(2,K'&XMONTKN64-2).')'                  00183400
                      AGO   .ZI12D                                      00183500
.ZI12B                ANOP  ,                                           00183600
.*                                                                      00183700
&ZC                   SETC  '&XMONTKN64'(1,1)                           00183800
                      AIF   (T'&ZC NE 'N').ZI12D                        00183900
&ZC                   SETC  '&XMONTKN64'                                00184000
                      AIF   ('&ZC'(K'&ZC,1) EQ ')').ZI12D               00184100
&ZCGPR                SETC  '=BL8''&XMONTKN64'''                        00184200
.*                                                                      00184300
.ZI12D                ANOP  ,                                           00184400
.*                                                                      00184500
&ZOPN                 SETA  &ZOPN+1                                     00184600
&ZOPL(&ZOPN)          SETC  ' '                                         00184700
&ZOPO(&ZOPN)          SETC  'MVC'                                       00184800
&ZOPV(&ZOPN)          SETC  '24(8,1),&ZCGPR'                            00184900
&ZOPD(&ZOPN)          SETC  '++ &ZXMONTKN64 XMONTKN64'                  00185000
.*                                                                      00185100
.ZI12E                ANOP  ,                                           00185200
.*-------------------------------------------------------------------   00185300
.***AI.L18 ADDR3164 XEWLM_RCVD_CORR AD                                  00185400
         AIF   ('&XEWLM_RCVD_CORR' NE 'NO_EWLM_RCVD_CORR').ZI13         00185500
&ZXEWLM_RCVD_CORR     SETC  ''             RESET INPUT/OUTPUT           00185600
.ZI13                 ANOP  ,                                           00185700
.*-------------------------------------------------------------------   00185800
.***AI.L19 ADDR3164 XEWLM_RCVD_CORR AD                                  00185900
                      AIF   ('&ZXEWLM_RCVD_CORR' EQ '').ZI13H           00186000
&ZCLNG                SETC  '&XEWLM_RCVD_CORR'                          00186100
&ZCGPR                SETC  '14'                                        00186200
         AIF   ('&XEWLM_RCVD_CORR'(1,1) EQ '(').ZI13F  IN GPR           00186300
.*                                                                      00186400
&ZOPN                 SETA  &ZOPN+1                                     00186500
&ZOPL(&ZOPN)          SETC  ' '                                         00186600
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00186700
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00186800
&ZOPD(&ZOPN)          SETC  '++ &ZXEWLM_RCVD_CORR XEWLM_RCVD_CORR'      00186900
.*                                                                      00187000
                      AGO   .ZI13G                                      00187100
.*                                                                      00187200
.ZI13F                ANOP  ,                                           00187300
&ZCGPR   SETC  '&XEWLM_RCVD_CORR'(2,K'&XEWLM_RCVD_CORR-2)               00187400
.*                                                                      00187500
.ZI13G                ANOP  ,                                           00187600
                      AIF   ('&SYSAM64' EQ 'YES').ZI13H1A               00187700
.*                                                                      00187800
&ZOPN                 SETA  &ZOPN+1                                     00187900
&ZOPL(&ZOPN)          SETC  ' '                                         00188000
&ZOPO(&ZOPN)          SETC  'ST'                                        00188100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,4+32(,1)'                           00188200
&ZOPD(&ZOPN)          SETC  '++ &ZXEWLM_RCVD_CORR XEWLM_RCVD_CORR'      00188300
.*                                                                      00188400
                      AGO   .ZI13H                                      00188500
.ZI13H1A              ANOP  ,                                           00188600
.*                                                                      00188700
&ZOPN                 SETA  &ZOPN+1                                     00188800
&ZOPL(&ZOPN)          SETC  ' '                                         00188900
&ZOPO(&ZOPN)          SETC  'STG'                                       00189000
&ZOPV(&ZOPN)          SETC  '&ZCGPR,32(,1)'                             00189100
&ZOPD(&ZOPN)          SETC  '++ &ZXEWLM_RCVD_CORR XEWLM_RCVD_CORR'      00189200
.*                                                                      00189300
.ZI13H                ANOP  ,                                           00189400
.*-------------------------------------------------------------------   00189500
&ZOPN1                SETA &ZOPN                                        00189600
.*******************************************************************    00189700
.***  PROCESS IWM4MSTO OUTPUT PARAMETERS                                00189800
.*******************************************************************    00189900
                      ACTR  10000                                       00190000
.*******************************************************************    00190100
.***AO.X02  RETURN CODE PROCESSING                                      00190200
.*******************************************************************    00190300
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00190400
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00190500
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00190600
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00190700
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00190800
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00190900
&ZOPN                 SETA  &ZOPN+1                                     00191000
&ZOPL(&ZOPN)          SETC  ' '                                         00191100
&ZOPO(&ZOPN)          SETC  'ST'                                        00191200
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00191300
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00191400
                      AGO   .ZMRETX                                     00191500
.*                                                                      00191600
.ZMRET2               ANOP  ,                                           00191700
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00191800
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00191900
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00192000
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00192100
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00192200
&ZOPN                 SETA  &ZOPN+1                                     00192300
&ZOPL(&ZOPN)          SETC  ' '                                         00192400
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00192500
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00192600
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00192700
.ZMRETX               ANOP  ,                                           00192800
.*******************************************************************    00192900
.***AO.X03  REASON CODE PROCESSING                                      00193000
.*******************************************************************    00193100
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00193200
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00193300
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00193400
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00193500
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00193600
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00193700
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00193800
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00193900
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00194000
&ZOPN                 SETA  &ZOPN+1                                     00194100
&ZOPL(&ZOPN)          SETC  ' '                                         00194200
&ZOPO(&ZOPN)          SETC  'ST'                                        00194300
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00194400
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00194500
                      AGO   .ZMRSNX                                     00194600
.*                                                                      00194700
.ZMRSN2               ANOP  ,                                           00194800
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00194900
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00195000
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00195100
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00195200
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00195300
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00195400
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00195500
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00195600
&ZOPN                 SETA  &ZOPN+1                                     00195700
&ZOPL(&ZOPN)          SETC  ' '                                         00195800
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00195900
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00196000
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00196100
.ZMRSNX               ANOP  ,                                           00196200
.*******************************************************************    00196300
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00196400
.*******************************************************************    00196500
.ZMFLX                ANOP  ,              MF=L PROCESSING              00196600
.*******************************************************************    00196700
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00196800
.*******************************************************************    00196900
                      ACTR  10000                                       00197000
.*                                                                      00197100
                      LCLA  &ZLC           COLUMN POSITION              00197200
                      LCLA  &ZOPX          LIST TABLE INDEX             00197300
                      LCLC  &ZLL           LABEL                        00197400
                      LCLC  &ZLOP          OPERATION                    00197500
                      LCLC  &ZLV           VALUE                        00197600
                      LCLC  &ZLD           DESCRIPTION                  00197700
.*                                                                      00197800
&ZOPX                 SETA  1                                           00197900
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00198000
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00198100
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00198200
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00198300
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00198400
                      AIF   (K'&ZLD LE 0).ZL5                           00198500
&ZLC                  SETA  35             COMMENT COLUMN               00198600
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00198700
&ZLC                  SETA  33             COMMMENT COLUMN              00198800
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00198900
&ZLV                  SETC  '&ZLV'.' '                                  00199000
                      AGO   .ZL3                                        00199100
.*                                                                      00199200
.ZL4                  ANOP  ,                                           00199300
&ZLV                  SETC  '&ZLV'.' '                                  00199400
.ZL5                  ANOP  ,                                           00199500
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00199600
.*                                                                      00199700
&ZLL     &ZLOP &ZLV                                                     00199800
.*                                                                      00199900
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00200000
                      AGO   .ZL2           CONTINUE LOOPING             00200100
.*                                                                      00200200
.ZLX                  ANOP  ,                                           00200300
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00200400
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00200500
         AIF   ('&XEWLM' NE 'YES').Msto_NoEwlm                     @L0A 00200600
         LCLC  &T_Montkn                                                00200700
.*--------------------------------------------------------------------- 00200800
.* Do we run on HBB7790 or higher                                       00200900
.*--------------------------------------------------------------------- 00201000
         LLGT  14,16(0,0)              Get CVT address                  00201100
         TM    CVTOSLV6-CVT(14),CVTH7790   Test for HBB7790             00201200
         JO    Msto&SYSNDX._Begin      Branch when Lvl is present  @P1C 00201300
         LA    0,IwmRsnCodeBadVersion  HBB7790 is required              00201400
         LA    15,IwmRetCodeInvocError Set Return Code                  00201500
         J     Msto&SYSNDX._End        Branch to end label         @P1C 00201600
Msto&SYSNDX._Begin DS 0H                                                00201700
.*--------------------------------------------------------------------- 00201800
.* MONTKN / MONTKN64 - Setup                                            00201900
.*--------------------------------------------------------------------- 00202000
         AIF ('&MONTKN' EQ '').Msto_Montkn64                            00202100
&T_Montkn SETC '&MONTKN'                                                00202200
         AIF   ('&MONTKN'(1,1) NE '(').Msto_Montkn31_Code               00202300
&T_Montkn SETC '&MONTKN'(2,K'&MONTKN-2)                                 00202400
&T_Montkn SETC '0(&T_Montkn.)'                                          00202500
.Msto_Montkn31_Code ANOP                                                00202600
.* R14 is now a valid base displacement                                 00202700
         LLGT  14,&T_Montkn            Fetch 31bit Monitoring Token     00202800
         AGO .Msto_Montkn_End                                           00202900
.Msto_Montkn64 ANOP                                                     00203000
&T_Montkn SETC '&MONTKN64'                                              00203100
         AIF   ('&MONTKN64'(1,1) NE '(').Msto_Montkn64_Code             00203200
&T_Montkn SETC '&MONTKN64'(2,K'&MONTKN-2)                               00203300
&T_Montkn SETC '0(&T_Montkn.)'                                          00203400
.Msto_Montkn64_Code ANOP                                                00203500
.* R14 is now a valid base displacement                                 00203600
         LG    14,&T_Montkn            Fetch 64bit Monitoring Token     00203700
.Msto_Montkn_End ANOP                                                   00203800
         LTGR  14,14                   Test the MONTKN value            00203900
         JNZ   Msto&SYSNDX._EnvPresent Branch when MON env is present   00204000
*                                                                  @P1C 00204100
         LA    0,IwmRsnCodeNoMonenv    Set reason code = No Mon Env     00204200
         LA    15,IwmRetCodeWarning    Set warning return code          00204300
         J     Msto&SYSNDX._End        Branch to end label         @P1C 00204400
Msto&SYSNDX._EnvPresent DS 0H                                           00204500
         AIF   ('&SYSAM64' EQ 'YES').Msto_A64_Switch1              @P0C 00204600
         SAM64                                                          00204700
.Msto_A64_Switch1 ANOP                                                  00204800
         LLILF 15,PB_ID_CONST          Load PB eyecatecher         @P1A 00204900
         CL    15,PB_ID-PB(,14)        Test Mon eyecatcher         @P1C 00205000
         JE    Msto&SYSNDX._EnvOk      Branch when MON env passes  @P1C 00205100
         AIF   ('&SYSAM64' EQ 'YES').Msto_A31_Switch1              @P0C 00205200
         SAM31                                                          00205300
.Msto_A31_Switch1 ANOP                                                  00205400
         LA    0,IwmRsnCodeBadMonenv   Set reason code = Bad Mon Env    00205500
         LA    15,IwmRetCodeInvocError SET INVOCATION ERROR RETURN CODE 00205600
         J     Msto&SYSNDX._End        Branch to end label         @P1C 00205700
Msto&SYSNDX._EnvOk DS 0H                                                00205800
         ST    1,PB_EWLM_PARMLIST-PB(,14) Store Addr of parmlist        00205900
         MVI   PB_EWLM_REQUEST-PB(14),PB_EWLM_REQUEST_IWM4MSTO          00206000
         AIF   ('&SYSAM64' EQ 'YES').Msto_A31_Switch2              @P0C 00206100
         SAM31                                                          00206200
.Msto_A31_Switch2 ANOP                                                  00206300
         LGR   1,14                    GPR1  ->  PB                     00206400
         LLGT  14,16(0,0)              Get CVT Address                  00206500
         LLGT  14,X'8C'(14,0)          Get ECVT Address                 00206600
         LLGT  14,X'C4'(14,0)          Get WMVT Address                 00206700
         AIF   ('&SYSAM64' NE 'YES').Msto_Amode31                       00206800
         LLGT  15,X'16C'(14,0)         Get M_Upde Entry Point Addr      00206900
         BASR  14,15                   Call 64bit Entry Point           00207000
         AGO   .Msto_End                                                00207100
.Msto_Amode31 ANOP                                                      00207200
         LLGTR 1,1                     Clear High Half of R1            00207300
         LLGT  15,X'168'(14,0)         Get M_Upde Entry Point Addr      00207400
         BASR  14,15                   Call 31bit Entry Point           00207500
         AGO   .Msto_End                                           @L0A 00207600
.Msto_NoEwlm ANOP                                                  @L0A 00207700
         LA    15,IWMRETCODEOK         Set RC=0                    @L0A 00207800
.Msto_End ANOP                                                          00207900
Msto&SYSNDX._End DS 0H                 END LABEL                        00208000
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00208100
.ZLINKX               ANOP  ,                                           00208200
.*******************************************************************    00208300
.***AP.X01  FORMAT GENERATED CODE                                       00208400
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00208500
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00208600
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00208700
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00208800
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00208900
                      AIF   (K'&ZLD LE 0).ZL51                          00209000
&ZLC                  SETA  35             COMMENT COLUMN               00209100
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00209200
&ZLC                  SETA  33             COMMENT COLUMN               00209300
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00209400
&ZLV                  SETC  '&ZLV'.' '                                  00209500
                      AGO   .ZL31                                       00209600
.*                                                                      00209700
.ZL41                 ANOP  ,                                           00209800
&ZLV                  SETC  '&ZLV'.' '                                  00209900
.ZL51                 ANOP  ,                                           00210000
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00210100
.*                                                                      00210200
&ZLL     &ZLOP &ZLV                                                     00210300
.*                                                                      00210400
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00210500
                      AGO   .ZL21          CONTINUE LOOPING             00210600
.*                                                                      00210700
.ZLX1                 ANOP  ,                                           00210800
.*******************************************************************    00210900
.***AP.X02  END OF IWM4MSTO MACRO                                       00211000
&ZIWM4MSTO            SETC  'YES'          SET IWM4MSTO USED            00211100
         POP   PRINT                                                    00211200
*                                            IWM4MSTO-0                 00211300
         SPACE 1                                                        00211400
.ZLX2                 ANOP  ,                                           00211500
         MEND                                                           00211600
**********************************************************************/ 00211700
*/*PB.OC01 INVOKE MACRO---------------------------------------------*/  00211800
*%IWM4MSTO: MACRO KEYS(MONTKN,MONTKN64,EWLM,END_FLOW,MESSAGES_SENT,     00211900
*                 EWLM_RCVD_CORR,AFTER_STRT,STATUS,RETCODE,RSNCODE,     00212000
*                 PLISTVER,MF);                                         00212100
*  ANS('?'!!MACLABEL!!' '!!'IWM4MSOP '!!MACLIST!!                       00212200
*         ' '!!MACKEYS!!';') COL(MACLMAR);                              00212300
*%END IWM4MSTO;                                                         00212400
