*%IWMSRDRS: MACRO KEYS(LOCATION,NETWORK_ID,LUNAME,HOST,RETCODE,         00000100
*                 RSNCODE,PLISTVER,MF);                                 00000200
*/**** START OF SPECIFICATIONS **************************************** 00000300
*                                                                     * 00000400
*                                                                     * 00000500
*01* MACRO NAME:  IWMSRDRS                              -07/02/15-<1> * 00000600
*                                                                     * 00000700
*                                                                     * 00000800
*01* DESCRIPTIVE NAME:  Sysplex Routing Deregistration                * 00000900
*                                                                     * 00001000
*01* PROPRIETARY STATEMENT:                                           * 00001100
*                                                                     * 00001200
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00001300
*     5647-A01 COPYRIGHT IBM CORP. 1994, 1997                         * 00001400
*                                                                     * 00001500
* STATUS= JBB6604                                                     * 00001600
*                                                                     * 00001700
*                                                                     * 00001800
*                                                                     * 00001900
*01* FUNCTION:                                                        * 00002000
*                                                                     * 00002100
*      IWMSRDRS will deregister a server that had previously          * 00002200
*      registered via IWMSRSRG, the Sysplex Router Registration       * 00002300
*      macro, for sysplex workload balancing. Deregistration removes  * 00002400
*      the specified server as a candidate from the Sysplex Routing   * 00002500
*      Selection service, IWMSRSRS.  Since the propagation of the     * 00002600
*      deregistration to other systems is asynchronous, a newly       * 00002700
*      deregistered triplet will continue to be eligible for          * 00002800
*      selection by other systems for a period of time after return   * 00002900
*      from the IWMSRDRS invocation.  If the server was registered    * 00003000
*      with a host name the caller must provide the host name in      * 00003100
*      order to deregister the server.                                * 00003200
*                                                                     * 00003300
*01* EXTERNAL CLASSIFICATION:  GUPI                                   * 00003400
*                                                                     * 00003500
*01* END OF EXTERNAL CLASSIFICATION:                                  * 00003600
*                                                                     * 00003700
*01* ENVIRONMENT:                                                     * 00003800
*                                                                     * 00003900
*                                                                     * 00004000
*      Minimum authorization:                                         * 00004100
*                                                                     * 00004200
*                                                                     * 00004300
*                        o   Problem state with any PSW key if the    * 00004400
*                            server address space to be deregistered  * 00004500
*                            is the home address space. If resource   * 00004600
*                            BPX.WLMSERVER is defined in the FACILITY * 00004700
*                            class, an unauthorized caller requires   * 00004800
*                            access authority to this resource or the * 00004900
*                            IWM.SERVER.REGISTER resource in the      * 00005000
*                            FACILITY class.                          * 00005100
*                                                                     * 00005200
*                        o   If the server to be deregistered is not  * 00005300
*                            the home address space, one of the       * 00005400
*                            following:                               * 00005500
*                                                                     * 00005600
*                                                                     * 00005700
*                            -   Supervisor state                     * 00005800
*                                                                     * 00005900
*                            -   Program key mask (PKM) allowing at   * 00006000
*                                least one of the keys 0-7            * 00006100
*                                                                     * 00006200
*                            -   The caller has access authority to   * 00006300
*                                the resource IWM.SERVER.REGISTER in  * 00006400
*                                the FACILITY class. If this resource * 00006500
*                                is not defined, access authority to  * 00006600
*                                the FACILITY class resource          * 00006700
*                                BPX.WLMSERVER is required.           * 00006800
*                                                                     * 00006900
*                                                                     * 00007000
*                                                                     * 00007100
*                                                                     * 00007200
*                                                                     * 00007300
*      Dispatchable unit mode: Task or SRB mode.                      * 00007400
*                                                                     * 00007500
*      Cross Memory Mode: Any PASN, any HASN, any SASN.               * 00007600
*                                                                     * 00007700
*      AMODE:            31-bit.                                      * 00007800
*                                                                     * 00007900
*      ASC mode:         Primary.                                     * 00008000
*                                                                     * 00008100
*      Interrupt status: Enabled for I/O and external interrupts.     * 00008200
*                                                                     * 00008300
*      Locks:            No locks held.  FRRs may be established.     * 00008400
*                                                                     * 00008500
*      Control parameters: Control parameters must be in the primary  * 00008600
*                        address space.                               * 00008700
*                                                                     * 00008800
*      Restrictions:                                                  * 00008900
*                                                                     * 00009000
*                                                                     * 00009100
*                        1.  This macro may not be used prior to the  * 00009200
*                            completion of WLM address space          * 00009300
*                            initialization                           * 00009400
*                                                                     * 00009500
*                        2.  All parameter areas must reside in       * 00009600
*                            current primary.                         * 00009700
*                                                                     * 00009800
*                                                                     * 00009900
*                                                                     * 00010000
*                                                                     * 00010100
*                                                                     * 00010200
*01* INPUT REGISTERS:  GR0-GR1     Reserved                           * 00010300
*                      GR2-GR13    Undefined                          * 00010400
*                      GR14-GR15   Reserved                           * 00010500
*                      AR0-AR1     Reserved                           * 00010600
*                      AR2-AR13    Undefined                          * 00010700
*                      AR14-AR15   Reserved                           * 00010800
*                                                                     * 00010900
*01* OUTPUT REGISTERS: GR0         Reason code if GR15 return code is * 00011000
*                                  non-zero                           * 00011100
*                      GR1         Used as a work register by the     * 00011200
*                                  macro                              * 00011300
*                      GR2-GR13    Unchanged                          * 00011400
*                      GR14        Used as a work register by the     * 00011500
*                                  macro                              * 00011600
*                      GR15        Return code                        * 00011700
*                      AR0-AR1     Used as a work register by the     * 00011800
*                                  macro                              * 00011900
*                      AR2-AR13    Unchanged                          * 00012000
*                      AR14-AR15   Used as a work register by the     * 00012100
*                                  macro                              * 00012200
*                                                                     * 00012300
*01* SYNTAX:                                                          * 00012400
*                                                                     * 00012500
*Ýxlabel¨  IWMSRDRS     LOCATION=xlocation                            * 00012600
*                      ,NETWORK_ID=xnetwork_id                        * 00012700
*                      ,LUNAME=xluname                                * 00012800
*                     Ý,HOST=»xhost!NO_HOSTº¨                         * 00012900
*                     Ý,RETCODE=xretcode¨                             * 00013000
*                     Ý,RSNCODE=xrsncode¨                             * 00013100
*                     Ý,PLISTVER=»xplistver!IMPLIED_VERSIONº¨         * 00013200
*                    ÐÝ,MF=S¨                                         * 00013300
*                    ÔÝ,MF=(L,xmfctrl»,xmfattr!0Dº)¨                  * 00013400
*                    ¿Ý,MF=(E,xmfctrl»,COMPLETEº)¨                    * 00013500
*                                                                     * 00013600
*                                                                     * 00013700
*      Where:                                                         * 00013800
*                                                                     * 00013900
*                                                                     * 00014000
*      Ýxlabel¨                                                       * 00014100
*          is an optional symbol, starting in column 1, that is the   * 00014200
*          name on the IWMSRDRS macro invocation.  The name must      * 00014300
*          conform to the rules for an ordinary assembler language    * 00014400
*          symbol.                                                    * 00014500
*          DEFAULT: No name.                                          * 00014600
*                                                                     * 00014700
*                                                                     * 00014800
*                                                                     * 00014900
*                                                                     * 00015000
*      LOCATION(xlocation)                                            * 00015100
*          is the name (RS-type) (or address in register (2)-(12) ASM * 00015200
*          only) of a required 18 character input which contains the  * 00015300
*          server LOCATION associated with the registered address     * 00015400
*          space.                                                     * 00015500
*                                                                     * 00015600
*                                                                     * 00015700
*                                                                     * 00015800
*                                                                     * 00015900
*      NETWORK_ID(xnetwork_id)                                        * 00016000
*          is the name (RS-type) (or address in register (2)-(12) ASM * 00016100
*          only) of a required 8 character input which contains the   * 00016200
*          Network ID associated with the registered address space.   * 00016300
*                                                                     * 00016400
*                                                                     * 00016500
*                                                                     * 00016600
*                                                                     * 00016700
*      LUNAME(xluname)                                                * 00016800
*          is the name (RS-type) (or address in register (2)-(12) ASM * 00016900
*          only) of a required 8 character input which contains the   * 00017000
*          server Logical Unit name associated with the registered    * 00017100
*          address space.                                             * 00017200
*                                                                     * 00017300
*                                                                     * 00017400
*                                                                     * 00017500
*                                                                     * 00017600
*      ÝHOST(»xhost!NO_HOSTº)¨                                        * 00017700
*          is the name (RS-type) (or address in register (2)-(12) ASM * 00017800
*          only) of an optional 64 character input which contains the * 00017900
*          server HOST name associated with the address space to be   * 00018000
*          deregistered. The value should be padded on the right with * 00018100
*          blanks for any unused characters.                          * 00018200
*          DEFAULT: NO_HOST indicates that a HOST name was not        * 00018300
*          passed.                                                    * 00018400
*                                                                     * 00018500
*                                                                     * 00018600
*                                                                     * 00018700
*                                                                     * 00018800
*      ÝRETCODE(xretcode)¨                                            * 00018900
*          is the name (RS-type) of an optional fullword output       * 00019000
*          variable (or register (2)-(12) or (15) ASM only) into      * 00019100
*          which the return code is to be copied from GPR 15.  If you * 00019200
*          specify 15, GPR15, REG15, or R15 (within or without        * 00019300
*          parentheses), the value will be left in GPR 15.            * 00019400
*                                                                     * 00019500
*                                                                     * 00019600
*                                                                     * 00019700
*                                                                     * 00019800
*      ÝRSNCODE(xrsncode)¨                                            * 00019900
*          is the name (RS-type) of an optional fullword output       * 00020000
*          variable into which the reason code is to be copied from   * 00020100
*          GPR 0.  If you specify 0, 00, GPR0, GPR00, REG0, REG00, or * 00020200
*          R0 (within or without parentheses), the value will be left * 00020300
*          in GPR 0.                                                  * 00020400
*                                                                     * 00020500
*                                                                     * 00020600
*                                                                     * 00020700
*                                                                     * 00020800
*      ÝPLISTVER(»xplistver!IMPLIED_VERSIONº)¨                        * 00020900
*          is an optional byte input decimal value in the "0-1" range * 00021000
*          that specifies the macro version.  PLISTVER is the only    * 00021100
*          key allowed on the list form of MF and determines which    * 00021200
*          parameter list is generated.  The macro keys associated    * 00021300
*          with each supported version of the macro are listed in     * 00021400
*          MACRO USAGE NOTE 2.  Note that MAX may be specified        * 00021500
*          instead of a number, and the parameter list will be of the * 00021600
*          largest size currently supported. This size may grow from  * 00021700
*          release to release (thus possibly affecting the amount of  * 00021800
*          storage needed by your program).  If your program can      * 00021900
*          tolerate this, IBM recommends that you always specify MAX  * 00022000
*          when creating the list form parameter list as that will    * 00022100
*          ensure that the list form parameter list is always long    * 00022200
*          enough to hold whatever parameters might be specified on   * 00022300
*          the execute form.                                          * 00022400
*          DEFAULT: IMPLIED_VERSION.  When PLISTVER is omitted, the   * 00022500
*          default is the lowest version which allows all of the      * 00022600
*          parameters specified on the invocation to be processed.    * 00022700
*                                                                     * 00022800
*                                                                     * 00022900
*                                                                     * 00023000
*                                                                     * 00023100
*      ÝMF(»S!L!Eº)¨                                                  * 00023200
*          is an optional keyword input which specifies the macro     * 00023300
*          form.                                                      * 00023400
*          DEFAULT: S                                                 * 00023500
*                                                                     * 00023600
*                                                                     * 00023700
*          ÝMF(S)¨                                                    * 00023800
*              specifies the standard form of the macro.  The "S"     * 00023900
*              form generates code to put the parameters into the     * 00024000
*              parameter list and invoke the desired service.  Full   * 00024100
*              checking for required macro keys is done along with    * 00024200
*              supplying defaults for omitted optional parameters.    * 00024300
*              The ?EPILOG macro must be invoked at the end of the    * 00024400
*              module.                                                * 00024500
*                                                                     * 00024600
*              For assembly language code modules, the "S" form       * 00024700
*              generates code to put the parameters into an in-line   * 00024800
*              parameter list and invoke the desired service.  Full   * 00024900
*              checking for required macro keys is done along with    * 00025000
*              supplying defaults for omitted optional parameters.    * 00025100
*                                                                     * 00025200
*          ÝMF(L,xmfctrl»,xmfattr!BDY(DWORD)º)¨                       * 00025300
*              specifies the list form of the macro.  The "L" form    * 00025400
*              defines an area to be used for the parameter list.     * 00025500
*              Only the PLISTVER key may be specified on the          * 00025600
*              invocation.  All other macro parameters are flagged as * 00025700
*              errors.  If PLISTVER is not specified, the original    * 00025800
*              parameter list definition is used.                     * 00025900
*                                                                     * 00026000
*            ,xmfctrl                                                 * 00026100
*              is a required input.  It is the name of a storage area * 00026200
*              for the parameter list.                                * 00026300
*                                                                     * 00026400
*            »,xmfattr!BDY(DWORD)º                                    * 00026500
*              is an optional 60 character input string that varies   * 00026600
*              from 1 to 60 characters. Use it to force boundary      * 00026700
*              alignment of the parameter list. Use only 0F or 0D     * 00026800
*              (assembler-only).                                      * 00026900
*              DEFAULT: 0D for Assembler, BDY(DWORD) for PL/X, which  * 00027000
*              forces the parameter list to a doubleword boundary.    * 00027100
*                                                                     * 00027200
*          ÝMF(E,xmfctrl»,COMPLETEº)¨                                 * 00027300
*              specifies the execute form of the macro.  The "E" form * 00027400
*              generates code to put the parameters into the          * 00027500
*              parameter list specified by xmfctrl and provides full  * 00027600
*              syntax checking with default setting.                  * 00027700
*                                                                     * 00027800
*            ,xmfctrl                                                 * 00027900
*              is a required input.  It is the name (RS-type) (or     * 00028000
*              address in register (1)-(12) ASM only) of a storage    * 00028100
*              area for the parameter list.                           * 00028200
*                                                                     * 00028300
*            »,COMPLETEº                                              * 00028400
*              is an optional keyword input which specifies the       * 00028500
*              degree of macro parameter syntax checking.             * 00028600
*              DEFAULT: COMPLETE                                      * 00028700
*                                                                     * 00028800
*                                                                     * 00028900
*              COMPLETE                                               * 00029000
*                  Checking for required macro keys is done and       * 00029100
*                  defaults are supplied for omitted optional         * 00029200
*                  parameters.                                        * 00029300
*                                                                     * 00029400
*                                                                     * 00029500
*                                                                     * 00029600
*                                                                     * 00029700
*                                                                     * 00029800
*                                                                     * 00029900
*                                                                     * 00030000
*01* RETURN CODES:                                                    * 00030100
*                                                                     * 00030200
*                                                                     * 00030300
*            0    Name: IwmRetCodeOk                                  * 00030400
*                                                                     * 00030500
*                 Meaning: Successful completion.                     * 00030600
*                                                                     * 00030700
*            4    Name: IwmRetCodeWarning                             * 00030800
*                                                                     * 00030900
*                 Meaning: Successful completion, unusual conditions  * 00031000
*                 noted.                                              * 00031100
*                                                                     * 00031200
*                                                                     * 00031300
*                 HEX REASON  MEANING                                 * 00031400
*                 CODE                                                * 00031500
*                                                                     * 00031600
*                 xxxx0418    IwmRsnCodeServerNotRegistered:  Server  * 00031700
*                             not registered                          * 00031800
*                                                                     * 00031900
*                                                                     * 00032000
*                                                                     * 00032100
*                                                                     * 00032200
*            8    Name: IwmRetCodeInvocError                          * 00032300
*                                                                     * 00032400
*                 Meaning: Invalid invocation environment or          * 00032500
*                 parameters                                          * 00032600
*                                                                     * 00032700
*                                                                     * 00032800
*                 HEX REASON  MEANING                                 * 00032900
*                 CODE                                                * 00033000
*                                                                     * 00033100
*                 xxxx0803    IwmRsnCodeDisabled:  Caller is          * 00033200
*                             disabled.                               * 00033300
*                                                                     * 00033400
*                 xxxx0804    IwmRsnCodeLocked:  Caller is locked.    * 00033500
*                                                                     * 00033600
*                 xxxx080B    IwmRsnCodeBadPl:  Error accessing       * 00033700
*                             parameter list                          * 00033800
*                                                                     * 00033900
*                 xxxx0823    IwmRsnCodeDatoff:  Caller invoked       * 00034000
*                             service while DATOFF                    * 00034100
*                                                                     * 00034200
*                 xxxx0824    IwmRsnCodeAmode24:  Caller invoked      * 00034300
*                             service but was in 24 bit addressing    * 00034400
*                             mode.                                   * 00034500
*                                                                     * 00034600
*                 xxxx0825    IwmRsnCodeAscModeNotPrimary:  Caller    * 00034700
*                             invoked service but was not DAT on      * 00034800
*                             Primary ASC mode.                       * 00034900
*                                                                     * 00035000
*                 xxxx0828    IwmRsnCodeBadVersion:  Version number   * 00035100
*                             in parameter list or version length     * 00035200
*                             field is not valid.                     * 00035300
*                                                                     * 00035400
*                                                                     * 00035500
*                                                                     * 00035600
*                                                                     * 00035700
*            C    Name: IwmRetCodeEnvError                            * 00035800
*                                                                     * 00035900
*                 Meaning: Environmental error.                       * 00036000
*                                                                     * 00036100
*                                                                     * 00036200
*                 HEX REASON  MEANING                                 * 00036300
*                 CODE                                                * 00036400
*                                                                     * 00036500
*                 xxxx0C35    IwmRsnCodeNotSecAuthServReg:  The       * 00036600
*                             caller is not authorized by SAF to      * 00036700
*                             deregister a server.  Unauthorized      * 00036800
*                             callers (problem state or none of the   * 00036900
*                             authorized keys 0 to 7) require access  * 00037000
*                             authority to the RACF resource          * 00037100
*                             IWM.SERVER.REGISTER in the FACILITY     * 00037200
*                             class. If this resource is not defined, * 00037300
*                             access authority to the FACILITY class  * 00037400
*                             resource BPX.WLMSERVER is required.     * 00037500
*                                                                     * 00037600
*                                                                     * 00037700
*                                                                     * 00037800
*           10    Name: IwmRetCodeCompError                           * 00037900
*                                                                     * 00038000
*                 Meaning: Component error (no reason codes)          * 00038100
*                                                                     * 00038200
*                                                                     * 00038300
*                                                                     * 00038400
*                                                                     * 00038500
*                                                                     * 00038600
*01* REASON CODES:                                                    * 00038700
*                                                                     * 00038800
*       A unique reason code will be returned whenever the return     * 00038900
*       code is non-zero.  Reason codes, as appropriate, are defined  * 00039000
*       under their corresponding return code.  Reason code and       * 00039100
*       return code constants are defined within IWMYCON.  Note that  * 00039200
*       the high order halfword of register 0, and the reason code    * 00039300
*       variable when specified, may be non-zero and represents       * 00039400
*       diagnostic data which is NOT part of the external interface.  * 00039500
*       The high order halfword should thus be excluded from          * 00039600
*       comparison with the reason code values described above.  The  * 00039700
*       constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may be    * 00039800
*       used for this purpose.                                        * 00039900
*                                                                     * 00040000
*01* MODULE TYPE:  ASSEM-PL/X MACRO                                   * 00040100
*                                                                     * 00040200
*02*   PROCESSOR:  ASSEM-PL/X                                         * 00040300
*                                                                     * 00040400
*01* COMPONENT:  SCWLM                                                * 00040500
*                                                                     * 00040600
*01* DISTRIBUTION LIBRARY: AMACLIB                                    * 00040700
*                                                                     * 00040800
*01* MACRO USAGE NOTES:                                               * 00040900
*                                                                     * 00041000
*                                                                     * 00041100
*    1.  Printing of the macro expansion is controlled by the ZPRINT  * 00041200
*        global macro variable.  Any value other than 'NO' will       * 00041300
*        result in the macro expansion being printed.  The default is * 00041400
*        'YES'.  The following examples illustrate how the ZPRINT     * 00041500
*        variable should be set.                                      * 00041600
*                                                                     * 00041700
*                    GBLC &ZPRINT                                     * 00041800
*            &ZPRINT SETC 'YES'          &ZPRINT SETC 'NO'            * 00041900
*                                                                     * 00042000
*                                                                     * 00042100
*    2.  The IWMSRDRS macro supports multiple versions. The macro key * 00042200
*        list  below  contains the version level in which the key was * 00042300
*        first  introduced.  Positionals  are  identified by the word * 00042400
*        'Positional'  followed by the numeric value of its position. * 00042500
*        Nested  positionals  are  preceded  by their outer key.  The * 00042600
*        lowest value represents the original version and the highest * 00042700
*        value  represents  the  most  recent version of the IWMSRDRS * 00042800
*        macro.    When  specifying  PLISTVER,  be sure that it is at * 00042900
*        least  as high as the highest version number of all the keys * 00043000
*        being used.                                                  * 00043100
*                                                                     * 00043200
*        VERSION   KEY                                                * 00043300
*                                                                     * 00043400
*              0      LOCATION                                        * 00043500
*                     LUNAME                                          * 00043600
*                     NETWORK_ID                                      * 00043700
*              1      HOST                                            * 00043800
*                                                                     * 00043900
*    3.  The macro IWMYCON must be included to use this macro.        * 00044000
*                                                                     * 00044100
*    4.  The  macro IWMPB must be in the library concatenation, since * 00044200
*        it is included by IWMYCON.                                   * 00044300
*                                                                     * 00044400
*    5.  Note  that  the  high  order halfword of register 0, and the * 00044500
*        reason  code  variable  when  specified, may be non-zero and * 00044600
*        represents diagnostic data which is NOT part of the external * 00044700
*        interface.   The high order halfword should thus be excluded * 00044800
*        from comparison with the reason code values described above. * 00044900
*        The  constant, IWMRSNCODE_MASK_CONST defined in IWMYCON, may * 00045000
*        be used for this purpose.                                    * 00045100
*                                                                     * 00045200
*    6.  The  PL/AS version of the macro needs the EPILOG macro to be * 00045300
*        included.                                                    * 00045400
*                                                                     * 00045500
*    7.  All  character  inputs are assumed to be padded on the right * 00045600
*        with blanks, when needed to fill out the entire length.      * 00045700
*                                                                     * 00045800
*                                                                     * 00045900
*                                                                     * 00046000
*01* CHANGE ACTIVITY:                                                 * 00046100
*                                                                     * 00046200
*   Flag LineItem  FMID    Date   ID    Comment                       * 00046300
*                                                                     * 00046400
*    $L0=ENCLV    HBB5520 940222 PDDD:  Sysplex Router.               * 00046500
*    $L1=WLMPDNS  JBB6604 961031 PDKP:  Host name Support.            * 00046600
*    $P1=PSY0190  JBB6604 970115 PDKP:  Add reason code Doc.          * 00046700
*    $P2=OA46405  HBB77A0 141031 3241MG:  Doc updates.                * 00046800
****** END OF SPECIFICATIONS *****************************************/ 00046900
*/********************************************************************* 00047000
         MACRO                                                          00047100
&XLABEL  IWMSRDRS &LOCATION=,&NETWORK_ID=,&LUNAME=,&HOST=,&RETCODE=,   *00047200
               &RSNCODE=,&PLISTVER=,&MF=                                00047300
.*                                                                      00047400
*                MACDATE -07/02/15-<1>                                  00047500
.*                                                                      00047600
.*******************************************************************    00047700
.***AB.02  GLOBAL VARIABLES TO CONTROL PRINT AND CODE GENERATION        00047800
.*******************************************************************    00047900
                GBLC  &ZPRINT     YES=PRINT NO=NO PRINT                 00048000
                GBLC  &ZTEST      YES=TEST NO=NO TEST                   00048100
                GBLC  &ZSYSTEM    PCCODE10, MVS, SAK, VM, XAX           00048200
.*                                                                      00048300
                GBLC  &ZIWMSRDRS  YES=MACRO USED AT LEAST ONCE          00048400
.*******************************************************************    00048500
.***AB.03  COMMONLY USED LOCAL MACRO VARIABLES                          00048600
.*******************************************************************    00048700
                LCLC  &ZMS        ERROR MESSAGE WORK AREA               00048800
                LCLC  &ZCNDX      SYSNDX CHARACTERS                     00048900
                LCLC  &ZCLNG      USED WHEN LENGTH IS NEEDED            00049000
                LCLC  &ZCGPR      USED WHEN VALUE IS IN A GPR           00049100
                LCLC  &ZCVAL      USED TO CONTAIN FIXED VALUE           00049200
                LCLA  &ZAWRK      USED AS A WORK AREA                   00049300
                LCLA  &ZASIZ      USED FOR SIZE OF VALUE                00049400
                LCLA  &ZN         NUMERIC WORK VARIABLE                 00049500
                LCLC  &ZC         CHARACTER WORK VARIABLE               00049600
                LCLC  &ZTLC       CHARACTER TOO LONG VARIABLE           00049700
                LCLA  &ZTLA       VALUE TOO LONG VARIABLE               00049800
                LCLC  &ZMAC_G     "G" or null                           00049900
&ZMAC_G         SETC  ''                                                00050000
                LCLC  &ZMAC_LR                                          00050100
&ZMAC_LR        SETC  'LR'                                              00050200
                LCLC  &ZMAC_L                                           00050300
&ZMAC_L         SETC  'L'                                               00050400
                LCLC  &ZMAC_ST                                          00050500
&ZMAC_ST        SETC  'ST'                                              00050600
                LCLC  &ZMAC_LLGT                                        00050700
&ZMAC_LLGT      SETC  'L'                                               00050800
                LCLC  &ZMAC_LGR                                         00050900
&ZMAC_LGR       SETC  'LR'                                              00051000
                LCLC  &ZMAC_LG                                          00051100
&ZMAC_LG        SETC  'L'                                               00051200
                LCLC  &ZMAC_STG                                         00051300
&ZMAC_STG       SETC  'ST'                                              00051400
                LCLA  &ZMACRET    MACRO RETURN CODE                     00051500
&ZMACRET        SETA  0           ASSUME NO ERRORS                      00051600
.*                                                                      00051700
                LCLC  &ZCSYSLIST(255)           NONXKEY, POS ARRAY      00051800
                LCLA  &ZASYSLNDX  WORK INDEX FOR ZCSYSLIST()            00051900
                LCLA  &ZPLLEN     PARAMETER LIST LENGTH                 00052000
                LCLC  &ZENDBASEPL               End of base PL          00052100
                LCLA  &ZPLWORKA   PARAMETER LIST LENGTH                 00052200
.*******************************************************************    00052300
.***AB.04  MACRO VARIABLES FOR RANGES AND SETS OF ARGUMENTS             00052400
.*******************************************************************    00052500
                LCLA  &ZI         INDEX FOR ARRAY                       00052600
                LCLA  &ZJ         INDEX FOR PARMS                       00052700
                LCLA  &ZK         INDEX FOR PARSE                       00052800
                LCLA  &ZLO        LOW RANGE VALUE                       00052900
                LCLA  &ZHI        HIGH RANGE VALUE                      00053000
                LCLC  &ZW         WORK AREA FOR PARM                    00053100
.********************************************************************   00053200
.***AB.05  INVOKE MVS MACROS TO CONTROL CODE GENERATION                 00053300
.********************************************************************   00053400
                GBLC  &SYSSPLV    SP LEVEL 1,2,3 -SPLEVEL               00053500
                GBLC  &SYSASCE    SYSTEM STATE P ANY AR-SYSSTATE        00053600
                GBLA  &SYSALVL    SYSSTATE ARCHLVL                      00053700
                GBLC  &SYSAM64    SYSSTATE AMODE64                      00053800
.*                                                                      00053900
                AIF   (K'&SYSASCE GT 0).ZSYS4   SYS STATE DEFINED       00054000
                AIF   (K'&SYSSPLV GT 0).ZSYS2   SP LEVEL DEFINED        00054100
                SPLEVEL  TEST                                           00054200
.ZSYS2          ANOP  ,                                                 00054300
                AIF   ('&SYSSPLV' EQ '1').ZSYS3  PRE SP 3.1             00054400
                AIF   ('&SYSSPLV' EQ '2').ZSYS3  PRE SP 3.1             00054500
                SYSSTATE TEST                                           00054600
                AGO   .ZSYS4                                            00054700
.ZSYS3          ANOP  ,                                                 00054800
&SYSASCE        SETC  'P'         ASSUME SYSSTATE PRIMARY               00054900
.ZSYS4          ANOP  ,                                                 00055000
                AIF   ('&SYSAM64' NE 'YES').ZSYSN64                     00055100
&ZMAC_LLGT      SETC 'LLGT'                                             00055200
&ZMAC_LGR       SETC 'LGR'                                              00055300
&ZMAC_LG        SETC 'LG'                                               00055400
&ZMAC_STG       SETC 'STG'                                              00055500
.ZSYSN64        ANOP  ,                                                 00055600
.*******************************************************************    00055700
.***AB.07  DEFINE ALL MACRO VARIABLES                                   00055800
.*******************************************************************    00055900
                LCLC  &XLOCATION  ++ NAME                               00056000
                LCLC  &XNETWORK_ID              ++ NAME                 00056100
                LCLC  &XLUNAME    ++ NAME                               00056200
                LCLC  &XHOST      ++ NAME                               00056300
                LCLC  &XRETCODE   ++ NAME                               00056400
                LCLC  &XRSNCODE   ++ NAME                               00056500
                LCLA  &XPLISTVER  ++ VALUE                              00056600
                LCLC  &XMF        ++ VALUE                              00056700
                LCLC  &XMFCTRL    ++ NAME                               00056800
                LCLC  &XMFATTR    ++ VALUE                              00056900
                LCLC  &XMFSCK     ++ VALUE                              00057000
.*******************************************************************    00057100
.***AB.13  DEFINE MACRO VARIABLES FOR INPUT/OUTPUT PROCESSING           00057200
.*******************************************************************    00057300
                LCLC  &ZXLOCATION               ++ INPUT NAME           00057400
                LCLC  &ZXNETWORK_ID             ++ INPUT NAME           00057500
                LCLC  &ZXLUNAME   ++ INPUT NAME                         00057600
                LCLC  &ZXHOST     ++ INPUT NAME                         00057700
                LCLC  &ZXRETCODE  ++ OUTPUT NAME                        00057800
                LCLC  &ZXRSNCODE  ++ OUTPUT NAME                        00057900
                LCLC  &ZXPLISTVER               ++ INPUT VALUE          00058000
                LCLC  &ZXMF       ++ INPUT VALUE                        00058100
                LCLC  &ZXMFCTRL   ++ INPUT NAME                         00058200
                LCLC  &ZXMFATTR   ++ INPUT VALUE                        00058300
                LCLC  &ZXMFSCK    ++ INPUT VALUE                        00058400
.********************************************************************   00058500
.***AC.PLV01  PROCESS PLISTVER                                      *   00058600
.********************************************************************   00058700
&XPLISTVER      SETA  0                                                 00058800
                AIF   (K'&PLISTVER(1) LE 0).ZPLV0                       00058900
                AIF   ('&PLISTVER(1)' NE 'MAX').ZPLV0                   00059000
&XPLISTVER      SETA  1                                                 00059100
.ZPLV0          ANOP  ,                                                 00059200
.*                                                                      00059300
                AIF   ('&HOST' EQ '').ZPLV1E                            00059400
                AIF   (&XPLISTVER GE 1).ZPLV1E                          00059500
&XPLISTVER      SETA  1                                                 00059600
.ZPLV1E         ANOP  ,                                                 00059700
.*                                                                      00059800
                AIF   (K'&PLISTVER(1) LE 0).ZPVCKE                      00059900
                AIF   ('&PLISTVER(1)' EQ 'IMPLIED_VERSION').ZPVCKE      00060000
                AIF   ('&PLISTVER(1)' EQ 'MAX').ZPVCKE                  00060100
.*-------------------------------------------------------------------   00060200
                AIF   (N'&PLISTVER LE 1).ZPVCK3  CK NUM                 00060300
&ZMS            SETC  '"PLISTVER='                                      00060400
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00060500
&ZMS            SETC  '&ZMS "PLISTVER"'                                 00060600
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00060700
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00060800
                AGO   .ZPVCK2                                           00060900
.ZPVCK3         ANOP  ,                                                 00061000
.*-------------------------------------------------------------------   00061100
                AIF   ('&PLISTVER'(1,1) NE '(').ZPVCK2                  00061200
&ZMS            SETC  '"PLISTVER='                                      00061300
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00061400
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00061500
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 1.'                 00061600
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00061700
                AGO   .ZPVCKE                                           00061800
.ZPVCK2         ANOP  ,                                                 00061900
.*-------------------------------------------------------------------   00062000
&ZCVAL          SETC  '&PLISTVER(1)'                                    00062100
                AIF   ('&ZCVAL'(1,1) EQ '(').ZPVCKE  IN GPR             00062200
                AIF   (T'&ZCVAL NE 'N').ZPVCK6  NUMERIC ERR             00062300
&ZN             SETA   &PLISTVER(1)        CONVERT TO ARITHMETIC        00062400
                AIF   (&ZN LT 0).ZPVCK6    TOO LOW                      00062500
                AIF   (&ZN LE 1).ZPVCK4A   NOT HIGH                     00062600
.ZPVCK6         ANOP  ,                                                 00062700
&ZMS            SETC  '"PLISTVER='                                      00062800
&ZMS            SETC  '&ZMS.&PLISTVER"'                                 00062900
&ZMS            SETC  '&ZMS THE RANGE IS "0-1"'                         00063000
                MNOTE 8,' &ZMS FOR ARGUMENT 1.'                         00063100
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00063200
&XPLISTVER      SETA  1                                                 00063300
                AGO   .ZPVCKE                                           00063400
.*-------------------------------------------------------------------   00063500
.ZPVCK4A        ANOP  ,                                                 00063600
                AIF   (&ZN GE &XPLISTVER).ZPVCK4                        00063700
&ZMS            SETC  'PLISTVER='                                       00063800
&ZMS            SETC  '&ZMS.&PLISTVER(1)'                               00063900
&ZMS            SETC  '&ZMS., BUT PLISTVER OF'                          00064000
&ZMS            SETC  '&ZMS &XPLISTVER'                                 00064100
                MNOTE 8,' &ZMS IS REQUIRED.'                            00064200
&ZMACRET        SETA  8      SET MACRO ERROR RETURN CODE                00064300
                AGO   .ZPVCK5                                           00064400
.ZPVCK4         ANOP  ,                                                 00064500
&XPLISTVER      SETA  &PLISTVER(1)                                      00064600
.ZPVCK5         ANOP  ,                                                 00064700
.ZPVCKE         ANOP  ,                                                 00064800
.********************************************************************   00064900
.***AG.MF01 PROCESS MF MACRO FORMS                                      00065000
.********************************************************************   00065100
                ACTR  10000                                             00065200
.*------------------------------------------------------------------    00065300
.***AG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00065400
&XMF            SETC  ''          INITIALIZE XVARIABLE                  00065500
.*-------------------------------------------------------------------   00065600
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00065700
.ZG24           ANOP  ,                                                 00065800
&ZTLC           SETC 'S'                                                00065900
                AIF   ('&MF(1)' NE '&ZTLC').ZG25                        00066000
&XMF            SETC  'S'         SET KEYWORD                           00066100
                AIF   (N'&MF LE 1).ZG24A        CK NUM                  00066200
&ZMS            SETC  '"MF='                                            00066300
&ZMS            SETC  '&ZMS.&MF"'                                       00066400
&ZMS            SETC  '&ZMS "MF"'                                       00066500
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00066600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00066700
.ZG24A          ANOP  ,                                                 00066800
.*-------------------------------------------------------------------   00066900
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00067000
.ZG25           ANOP  ,                                                 00067100
&ZTLC           SETC 'L'                                                00067200
                AIF   ('&MF(1)' NE '&ZTLC').ZG32                        00067300
&XMF            SETC  'L'         SET KEYWORD                           00067400
                AIF   (N'&MF LE 3).ZG25A        CK NUM                  00067500
&ZMS            SETC  '"MF='                                            00067600
&ZMS            SETC  '&ZMS.&MF"'                                       00067700
&ZMS            SETC  '&ZMS "MF"'                                       00067800
                MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'              00067900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00068000
.ZG25A          ANOP  ,                                                 00068100
.*-------------------------------------------------------------------   00068200
.***AG.KKCTL08 -MF(L) SPECIAL CHECK                                     00068300
                AIF   (N'&SYSLIST NE 0).ZG25B   POSITIONALS?            00068400
                AIF   ('&LOCATION' NE '').ZG25B  KEYS?                  00068500
                AIF   ('&NETWORK_ID' NE '').ZG25B  KEYS?                00068600
                AIF   ('&LUNAME' NE '').ZG25B   KEYS?                   00068700
                AIF   ('&HOST' NE '').ZG25B     KEYS?                   00068800
                AIF   ('&RETCODE' NE '').ZG25B  KEYS?                   00068900
                AIF   ('&RSNCODE' NE '').ZG25B  KEYS?                   00069000
                AGO    .ZG25C     INVOCATION OKAY                       00069100
.ZG25B          ANOP  ,                                                 00069200
&ZMS            SETC  'THE "L" FORM OF "MF"'                            00069300
&ZMS            SETC  '&ZMS CAN ONLY HAVE'                              00069400
&ZMS            SETC  '&ZMS THE "PLISTVER" KEY'                         00069500
                MNOTE 8,' &ZMS SPECIFIED ON THE INVOCATION.'            00069600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00069700
.ZG25C          ANOP  ,                                                 00069800
.*-------------------------------------------------------------------   00069900
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00070000
&ZXMFCTRL       SETC  'INPUT'     SET IN/OUTPUT                         00070100
&XMFCTRL        SETC  '&MF(2,1)'  SET XVARIABLE                         00070200
                AIF   (N'&MF(2) GT 1).ZG27B     MULTI                   00070300
&XMFCTRL        SETC  '&MF(2)'    SET XVARIABLE                         00070400
.ZG27B          AIF   (K'&MF(2) GT 0).ZG27C                             00070500
&ZXMFCTRL       SETC  ''          RESET IN/OUTPUT                       00070600
&ZMS            SETC  'WHEN "L" IS SPECIFIED'                           00070700
&ZMS            SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'               00070800
                MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                      00070900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00071000
.ZG27C          ANOP  ,                                                 00071100
.*-------------------------------------------------------------------   00071200
.***AG.KCK01 NAME, OPT RQD INPUT, POS(2) -GPR NOT ALLOWED               00071300
                AIF   (K'&ZXMFCTRL LE 0).ZG27P  NOT I/O                 00071400
                AIF   ('&XMFCTRL'(1,1) NE '(').ZG27P                    00071500
&ZXMFCTRL       SETC  ''          RESET IN/OUTPUT                       00071600
&ZMS            SETC  '"MF='                                            00071700
&ZMS            SETC  '&ZMS.&MF"'                                       00071800
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00071900
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 2.'                 00072000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00072100
.ZG27P          ANOP  ,                                                 00072200
.*-------------------------------------------------------------------   00072300
.***AG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE                      00072400
&ZXMFATTR       SETC  'INPUT'     SET IN/OUTPUT                         00072500
&XMFATTR        SETC  '0D'                                              00072600
                AIF   (K'&MF(3) LE 0).ZG30B     PARM                    00072700
&XMFATTR        SETC  '&MF(3,1)'  SET XVARIABLE                         00072800
                AIF   (N'&MF(3) GT 1).ZG30B     MULTI                   00072900
&XMFATTR        SETC  '&MF(3)'    SET XVARIABLE                         00073000
.ZG30B          ANOP  ,                                                 00073100
.*-------------------------------------------------------------------   00073200
.***AG.KCK01 VALUE, OPT INPUT, POS(3) -GPR NOT ALLOWED                  00073300
                AIF   (K'&ZXMFATTR LE 0).ZG30P  NOT I/O                 00073400
                AIF   ('&XMFATTR'(1,1) NE '(').ZG30P                    00073500
&ZXMFATTR       SETC  ''          RESET IN/OUTPUT                       00073600
&ZMS            SETC  '"MF='                                            00073700
&ZMS            SETC  '&ZMS.&MF"'                                       00073800
&ZMS            SETC  '&ZMS CONTAINS GPR NOTATION WHICH IS NOT'         00073900
                MNOTE 8,' &ZMS ALLOWED FOR ARGUMENT 3.'                 00074000
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00074100
.ZG30P          ANOP  ,                                                 00074200
.*-------------------------------------------------------------------   00074300
.***AG.KCK03 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH                 00074400
                AIF   (K'&ZXMFATTR LE 0).ZG30S  NOT I/O                 00074500
                AIF   (K'&XMFATTR LE 60).ZG30S  LNG OK                  00074600
&ZXMFATTR       SETC  ''          RESET IN/OUTPUT                       00074700
&ZMS            SETC  '"MF='                                            00074800
&ZMS            SETC  '&ZMS.&MF"'                                       00074900
&ZMS            SETC  '&ZMS ARGUMENT 3 EXCEEDS THE MAXIMUM'             00075000
                MNOTE 8,' &ZMS LENGTH OF 60 CHARACTERS.'                00075100
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00075200
.ZG30S          ANOP  ,                                                 00075300
.*-------------------------------------------------------------------   00075400
.***AG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00075500
.ZG32           ANOP  ,                                                 00075600
&ZTLC           SETC 'E'                                                00075700
                AIF   ('&MF(1)' NE '&ZTLC').ZG40                        00075800
&XMF            SETC  'E'         SET KEYWORD                           00075900
                AIF   (N'&MF LE 3).ZG32A        CK NUM                  00076000
&ZMS            SETC  '"MF='                                            00076100
&ZMS            SETC  '&ZMS.&MF"'                                       00076200
&ZMS            SETC  '&ZMS "MF"'                                       00076300
                MNOTE 8,' &ZMS CAN HAVE ONLY 3 ARGUMENTS.'              00076400
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00076500
.ZG32A          ANOP  ,                                                 00076600
.*-------------------------------------------------------------------   00076700
.***AG.KXVAR06 NAME, OPT RQD INPUT, POS(2) -XVARIABLE                   00076800
&ZXMFCTRL       SETC  'INPUT'     SET IN/OUTPUT                         00076900
&XMFCTRL        SETC  '&MF(2,1)'  SET XVARIABLE                         00077000
                AIF   (N'&MF(2) GT 1).ZG34B     MULTI                   00077100
&XMFCTRL        SETC  '&MF(2)'    SET XVARIABLE                         00077200
.ZG34B          AIF   (K'&MF(2) GT 0).ZG34C                             00077300
&ZXMFCTRL       SETC  ''          RESET IN/OUTPUT                       00077400
&ZMS            SETC  'WHEN "E" IS SPECIFIED'                           00077500
&ZMS            SETC  '&ZMS FOR THE "MF" KEY, POSITIONAL'               00077600
                MNOTE 8,' &ZMS ARG 2 IS REQUIRED.'                      00077700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00077800
.ZG34C          ANOP  ,                                                 00077900
.*-------------------------------------------------------------------   00078000
.***AG.KCK02 NAME, OPT RQD INPUT, POS(2) -GPR OUT OF RANGE              00078100
                AIF   (K'&ZXMFCTRL LE 0).ZG34R  NOT I/O                 00078200
                AIF   ('&XMFCTRL'(1,1) NE '(').ZG34R                    00078300
&ZCGPR          SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)                        00078400
                AIF   ('&ZCGPR'(1,1) NE '0').ZG34P                      00078500
                AIF   (K'&ZCGPR GT 2).ZG34Q                             00078600
                AIF   ('&ZCGPR' EQ '0').ZG34Q                           00078700
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00078800
                AIF   (T'&ZCGPR NE 'N').ZG34Q   INVALID REG NAME        00078900
.ZG34P          ANOP  ,                                                 00079000
                AIF   (T'&ZCGPR NE 'N').ZG34R   NON NUMERIC             00079100
                AIF   ('&ZCGPR' LT '1').ZG34Q                           00079200
                AIF   ('&ZCGPR' LE '12').ZG34R                          00079300
.ZG34Q          ANOP  ,                                                 00079400
&ZMS            SETC  '"MF='                                            00079500
&ZMS            SETC  '&ZMS.&MF"'                                       00079600
&ZMS            SETC  '&ZMS ARGUMENT 2 MUST SPECIFY A REGISTER'         00079700
                MNOTE 8,' &ZMS IN THE RANGE (1)-(12).'                  00079800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00079900
.ZG34R          ANOP  ,                                                 00080000
.*-------------------------------------------------------------------   00080100
.***AG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00080200
&XMFSCK         SETC  ''          INITIALIZE XVARIABLE                  00080300
.ZG38A   AIF   ('&MF(3)' NE 'COMPLETE').ZG39A                           00080400
&XMFSCK         SETC  'COMPLETE'  SET KEYWORD                           00080500
.*-------------------------------------------------------------------   00080600
.***AG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD             00080700
.ZG39A          AIF   (K'&XMFSCK GT 0).ZG39C    KEYWORD                 00080800
                AIF   (K'&MF(3) LE 0).ZG39B                             00080900
&ZMS            SETC  '"MF='                                            00081000
&ZMS            SETC  '&ZMS.&MF"'                                       00081100
&ZMS            SETC  '&ZMS ARGUMENT 3 IS AN UNKNOWN KEYWORD. '         00081200
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00081300
&ZMS            SETC  '&ZMS "COMPLETE".'                                00081400
                MNOTE 8,' &ZMS '                                        00081500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00081600
.ZG39B          ANOP  ,                                                 00081700
&XMFSCK         SETC  'COMPLETE'  SET DEFAULT KEYWORD                   00081800
.ZG39C          ANOP  ,                                                 00081900
&ZXMFSCK        SETC  'INPUT'     SET IN/OUTPUT                         00082000
.*------------------------------------------------------------------    00082100
.***AG.KKCTL04 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL           00082200
.ZG40           ANOP  ,                                                 00082300
&ZXMF           SETC  'INPUT'     SET IN/OUTPUT                         00082400
                AIF   (K'&XMF GT 0).ZG40E       VALID ARG               00082500
                AIF   (T'&MF EQ 'O').ZG40D      OMITTED                 00082600
&ZASYSLNDX      SETA  0                                                 00082700
.ZG40A          ANOP  ,           POSITIONAL MACRO KEY                  00082800
&ZASYSLNDX      SETA  &ZASYSLNDX+1                                      00082900
                AIF   (&ZASYSLNDX GT N'&SYSLIST).ZG40C                  00083000
&ZTLC           SETC 'MF'                                               00083100
                AIF   ('&SYSLIST(&ZASYSLNDX)' NE '&ZTLC').ZG40A         00083200
.ZG40B          ANOP  ,                                                 00083300
&ZXMF           SETC  ''          RESET IN/OUTPUT                       00083400
&ZMS            SETC  'THE "MF" KEY'                                    00083500
&ZMS            SETC  '&ZMS MUST CONTAIN ONE'                           00083600
                MNOTE 8,' &ZMS (OR MORE) ARGUMENT(S).'                  00083700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00083800
                AGO   .ZG40E                                            00083900
.ZG40C          ANOP  ,                                                 00084000
&ZXMF           SETC  ''          RESET IN/OUTPUT                       00084100
&ZMS            SETC  '"MF='                                            00084200
&ZMS            SETC  '&ZMS.&MF"'                                       00084300
&ZMS            SETC  '&ZMS ARGUMENT 1 IS AN UNKNOWN KEYWORD. '         00084400
&ZMS            SETC  '&ZMS VALID KEYWORD CHOICE(S) ARE:'               00084500
&ZMS            SETC  '&ZMS "S",'                                       00084600
&ZMS            SETC  '&ZMS "L",'                                       00084700
&ZMS            SETC  '&ZMS OR "E".'                                    00084800
                MNOTE 8,' &ZMS '                                        00084900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00085000
                AGO   .ZG40E                                            00085100
.ZG40D          ANOP  ,                                                 00085200
&XMF            SETC  'S'         SET DEFAULT KEYWORD                   00085300
&XMFSCK         SETC  'COMPLETE'  COMPLETE CHECKING                     00085400
.ZG40E          ANOP  ,                                                 00085500
.********************************************************************   00085600
.***AG.MF02  FULL MACRO SYNTAX CHECKING                                 00085700
.********************************************************************   00085800
                ACTR  10000                                             00085900
.*-------------------------------------------------------------------   00086000
.***AG.MF03 MF=(SLE)                                                    00086100
                AIF   ('&XMF' EQ 'L').ZGMFX                             00086200
.*----------------------------------------------------------------***   00086300
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00086400
                AIF   (N'&LOCATION LE 1).ZG2A   CK NUM                  00086500
&ZMS            SETC  '"LOCATION='                                      00086600
&ZMS            SETC  '&ZMS.&LOCATION"'                                 00086700
&ZMS            SETC  '&ZMS "LOCATION"'                                 00086800
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00086900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00087000
.ZG2A           ANOP  ,                                                 00087100
.*-------------------------------------------------------------------   00087200
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00087300
&ZXLOCATION     SETC  'INPUT'     SET IN/OUTPUT                         00087400
&XLOCATION      SETC  '&LOCATION(1)'            SET XVARIABLE           00087500
                AIF   (N'&LOCATION GT 1).ZG2B   MULTI                   00087600
&XLOCATION      SETC  '&LOCATION'               SET XVARIABLE           00087700
.ZG2B           AIF   (K'&LOCATION(1) GT 0).ZG2C                        00087800
&ZXLOCATION     SETC  ''          RESET IN/OUTPUT                       00087900
&ZMS            SETC  ' '                                               00088000
&ZMS            SETC  '&ZMS "LOCATION" KEY AND ITS'                     00088100
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  00088200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00088300
.ZG2C           ANOP  ,                                                 00088400
.*-------------------------------------------------------------------   00088500
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00088600
                AIF   (K'&ZXLOCATION LE 0).ZG2R  NOT I/O                00088700
                AIF   ('&XLOCATION'(1,1) NE '(').ZG2R                   00088800
&ZCGPR          SETC  '&XLOCATION'(2,K'&XLOCATION-2)                    00088900
                AIF   ('&ZCGPR'(1,1) NE '0').ZG2P                       00089000
                AIF   (K'&ZCGPR GT 2).ZG2Q                              00089100
                AIF   ('&ZCGPR' EQ '0').ZG2Q                            00089200
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00089300
                AIF   (T'&ZCGPR NE 'N').ZG2Q    INVALID REG NAME        00089400
.ZG2P           ANOP  ,                                                 00089500
                AIF   (T'&ZCGPR NE 'N').ZG2R    NON NUMERIC             00089600
                AIF   ('&ZCGPR' LT '2').ZG2Q                            00089700
                AIF   ('&ZCGPR' LE '12').ZG2R                           00089800
.ZG2Q           ANOP  ,                                                 00089900
&ZMS            SETC  '"LOCATION='                                      00090000
&ZMS            SETC  '&ZMS.&LOCATION"'                                 00090100
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00090200
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00090300
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00090400
.ZG2R           ANOP  ,                                                 00090500
.*----------------------------------------------------------------***   00090600
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00090700
                AIF   (N'&NETWORK_ID LE 1).ZG5A  CK NUM                 00090800
&ZMS            SETC  '"NETWORK_ID='                                    00090900
&ZMS            SETC  '&ZMS.&NETWORK_ID"'                               00091000
&ZMS            SETC  '&ZMS "NETWORK_ID"'                               00091100
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00091200
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00091300
.ZG5A           ANOP  ,                                                 00091400
.*-------------------------------------------------------------------   00091500
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00091600
&ZXNETWORK_ID   SETC  'INPUT'     SET IN/OUTPUT                         00091700
&XNETWORK_ID    SETC  '&NETWORK_ID(1)'          SET XVARIABLE           00091800
                AIF   (N'&NETWORK_ID GT 1).ZG5B  MULTI                  00091900
&XNETWORK_ID    SETC  '&NETWORK_ID'             SET XVARIABLE           00092000
.ZG5B           AIF   (K'&NETWORK_ID(1) GT 0).ZG5C                      00092100
&ZXNETWORK_ID   SETC  ''          RESET IN/OUTPUT                       00092200
&ZMS            SETC  ' '                                               00092300
&ZMS            SETC  '&ZMS "NETWORK_ID" KEY AND ITS'                   00092400
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  00092500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00092600
.ZG5C           ANOP  ,                                                 00092700
.*-------------------------------------------------------------------   00092800
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00092900
                AIF   (K'&ZXNETWORK_ID LE 0).ZG5R  NOT I/O              00093000
                AIF   ('&XNETWORK_ID'(1,1) NE '(').ZG5R                 00093100
&ZCGPR          SETC  '&XNETWORK_ID'(2,K'&XNETWORK_ID-2)                00093200
                AIF   ('&ZCGPR'(1,1) NE '0').ZG5P                       00093300
                AIF   (K'&ZCGPR GT 2).ZG5Q                              00093400
                AIF   ('&ZCGPR' EQ '0').ZG5Q                            00093500
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00093600
                AIF   (T'&ZCGPR NE 'N').ZG5Q    INVALID REG NAME        00093700
.ZG5P           ANOP  ,                                                 00093800
                AIF   (T'&ZCGPR NE 'N').ZG5R    NON NUMERIC             00093900
                AIF   ('&ZCGPR' LT '2').ZG5Q                            00094000
                AIF   ('&ZCGPR' LE '12').ZG5R                           00094100
.ZG5Q           ANOP  ,                                                 00094200
&ZMS            SETC  '"NETWORK_ID='                                    00094300
&ZMS            SETC  '&ZMS.&NETWORK_ID"'                               00094400
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00094500
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00094600
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00094700
.ZG5R           ANOP  ,                                                 00094800
.*----------------------------------------------------------------***   00094900
.***AG.KXVAR05 NAME, RQD INPUT, KEYS -XVARIABLE KEY                     00095000
                AIF   (N'&LUNAME LE 1).ZG8A     CK NUM                  00095100
&ZMS            SETC  '"LUNAME='                                        00095200
&ZMS            SETC  '&ZMS.&LUNAME"'                                   00095300
&ZMS            SETC  '&ZMS "LUNAME"'                                   00095400
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00095500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00095600
.ZG8A           ANOP  ,                                                 00095700
.*-------------------------------------------------------------------   00095800
.***AG.KXVAR06 NAME, RQD INPUT, KEYS -XVARIABLE                         00095900
&ZXLUNAME       SETC  'INPUT'     SET IN/OUTPUT                         00096000
&XLUNAME        SETC  '&LUNAME(1)'              SET XVARIABLE           00096100
                AIF   (N'&LUNAME GT 1).ZG8B     MULTI                   00096200
&XLUNAME        SETC  '&LUNAME'   SET XVARIABLE                         00096300
.ZG8B           AIF   (K'&LUNAME(1) GT 0).ZG8C                          00096400
&ZXLUNAME       SETC  ''          RESET IN/OUTPUT                       00096500
&ZMS            SETC  ' '                                               00096600
&ZMS            SETC  '&ZMS "LUNAME" KEY AND ITS'                       00096700
                MNOTE 8,' &ZMS ARGUMENT ARE REQUIRED.'                  00096800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00096900
.ZG8C           ANOP  ,                                                 00097000
.*-------------------------------------------------------------------   00097100
.***AG.KCK02 NAME, RQD INPUT, KEYS -GPR OUT OF RANGE                    00097200
                AIF   (K'&ZXLUNAME LE 0).ZG8R   NOT I/O                 00097300
                AIF   ('&XLUNAME'(1,1) NE '(').ZG8R                     00097400
&ZCGPR          SETC  '&XLUNAME'(2,K'&XLUNAME-2)                        00097500
                AIF   ('&ZCGPR'(1,1) NE '0').ZG8P                       00097600
                AIF   (K'&ZCGPR GT 2).ZG8Q                              00097700
                AIF   ('&ZCGPR' EQ '0').ZG8Q                            00097800
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00097900
                AIF   (T'&ZCGPR NE 'N').ZG8Q    INVALID REG NAME        00098000
.ZG8P           ANOP  ,                                                 00098100
                AIF   (T'&ZCGPR NE 'N').ZG8R    NON NUMERIC             00098200
                AIF   ('&ZCGPR' LT '2').ZG8Q                            00098300
                AIF   ('&ZCGPR' LE '12').ZG8R                           00098400
.ZG8Q           ANOP  ,                                                 00098500
&ZMS            SETC  '"LUNAME='                                        00098600
&ZMS            SETC  '&ZMS.&LUNAME"'                                   00098700
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00098800
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00098900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00099000
.ZG8R           ANOP  ,                                                 00099100
.*----------------------------------------------------------------***   00099200
.***AG.KXVAR05 NAME, OPT INPUT, KEYS -XVARIABLE KEY                     00099300
                AIF   (N'&HOST LE 1).ZG11A      CK NUM                  00099400
&ZMS            SETC  '"HOST='                                          00099500
&ZMS            SETC  '&ZMS.&HOST"'                                     00099600
&ZMS            SETC  '&ZMS "HOST"'                                     00099700
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00099800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00099900
.ZG11A          ANOP  ,                                                 00100000
.*-------------------------------------------------------------------   00100100
.***AG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE                         00100200
&ZXHOST         SETC  'INPUT'     SET IN/OUTPUT                         00100300
&XHOST          SETC  'NO_HOST'                                         00100400
                AIF   (K'&HOST(1) LE 0).ZG11B   PARM                    00100500
&XHOST          SETC  '&HOST(1)'  SET XVARIABLE                         00100600
                AIF   (N'&HOST GT 1).ZG11B      MULTI                   00100700
&XHOST          SETC  '&HOST'     SET XVARIABLE                         00100800
.ZG11B          ANOP  ,                                                 00100900
.*-------------------------------------------------------------------   00101000
.***AG.KCK02 NAME, OPT INPUT, KEYS -GPR OUT OF RANGE                    00101100
                AIF   (K'&ZXHOST LE 0).ZG11R    NOT I/O                 00101200
         AIF   ('&XHOST' EQ 'NO_HOST').ZG11R                            00101300
                AIF   ('&XHOST'(1,1) NE '(').ZG11R                      00101400
&ZCGPR          SETC  '&XHOST'(2,K'&XHOST-2)                            00101500
                AIF   ('&ZCGPR'(1,1) NE '0').ZG11P                      00101600
                AIF   (K'&ZCGPR GT 2).ZG11Q                             00101700
                AIF   ('&ZCGPR' EQ '0').ZG11Q                           00101800
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00101900
                AIF   (T'&ZCGPR NE 'N').ZG11Q   INVALID REG NAME        00102000
.ZG11P          ANOP  ,                                                 00102100
                AIF   (T'&ZCGPR NE 'N').ZG11R   NON NUMERIC             00102200
                AIF   ('&ZCGPR' LT '2').ZG11Q                           00102300
                AIF   ('&ZCGPR' LE '12').ZG11R                          00102400
.ZG11Q          ANOP  ,                                                 00102500
&ZMS            SETC  '"HOST='                                          00102600
&ZMS            SETC  '&ZMS.&HOST"'                                     00102700
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00102800
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12).'                  00102900
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00103000
.ZG11R          ANOP  ,                                                 00103100
.*----------------------------------------------------------------***   00103200
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00103300
                AIF   (N'&RETCODE LE 1).ZG14A   CK NUM                  00103400
&ZMS            SETC  '"RETCODE='                                       00103500
&ZMS            SETC  '&ZMS.&RETCODE"'                                  00103600
&ZMS            SETC  '&ZMS "RETCODE"'                                  00103700
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00103800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00103900
.ZG14A          ANOP  ,                                                 00104000
.*-------------------------------------------------------------------   00104100
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00104200
                AIF   (K'&RETCODE(1) LE 0).ZG14C  NO PARM               00104300
&ZXRETCODE      SETC  'OUTPUT'    SET OUTPUT                            00104400
&XRETCODE       SETC  '&RETCODE(1)'             SET XVARIABLE           00104500
                AIF   (N'&RETCODE GT 1).ZG14C                           00104600
&XRETCODE       SETC  '&RETCODE'  SET XVARIABLE                         00104700
.ZG14C          ANOP  ,                                                 00104800
.*-------------------------------------------------------------------   00104900
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00105000
                AIF   (K'&ZXRETCODE LE 0).ZG14R  NOT I/O                00105100
                AIF   ('&XRETCODE'(1,1) NE '(').ZG14R                   00105200
&ZCGPR          SETC  '&XRETCODE'(2,K'&XRETCODE-2)                      00105300
                AIF   ('&ZCGPR'(1,1) NE '0').ZG14P                      00105400
                AIF   (K'&ZCGPR GT 2).ZG14Q                             00105500
                AIF   ('&ZCGPR' EQ '0').ZG14Q                           00105600
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00105700
                AIF   (T'&ZCGPR NE 'N').ZG14Q   INVALID REG NAME        00105800
.ZG14P          ANOP  ,                                                 00105900
                AIF   (T'&ZCGPR NE 'N').ZG14R   NON NUMERIC             00106000
                AIF   ('&ZCGPR' EQ '15').ZG14R                          00106100
                AIF   ('&ZCGPR' LT '2').ZG14Q                           00106200
                AIF   ('&ZCGPR' LE '12').ZG14R                          00106300
.ZG14Q          ANOP  ,                                                 00106400
&ZMS            SETC  '"RETCODE='                                       00106500
&ZMS            SETC  '&ZMS.&RETCODE"'                                  00106600
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00106700
                MNOTE 8,' &ZMS IN THE RANGE (2)-(12) OR (15).'          00106800
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00106900
.ZG14R          ANOP  ,                                                 00107000
.*----------------------------------------------------------------***   00107100
.***AG.KXVAR05 NAME, OPT OUTPUT, KEYS -XVARIABLE KEY                    00107200
                AIF   (N'&RSNCODE LE 1).ZG17A   CK NUM                  00107300
&ZMS            SETC  '"RSNCODE='                                       00107400
&ZMS            SETC  '&ZMS.&RSNCODE"'                                  00107500
&ZMS            SETC  '&ZMS "RSNCODE"'                                  00107600
                MNOTE 8,' &ZMS CAN HAVE ONLY 1 ARGUMENT.'               00107700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00107800
.ZG17A          ANOP  ,                                                 00107900
.*-------------------------------------------------------------------   00108000
.***AG.KXVAR14 NAME, OPT OUTPUT, KEYS -XVARIABLE                        00108100
                AIF   (K'&RSNCODE(1) LE 0).ZG17C  NO PARM               00108200
&ZXRSNCODE      SETC  'OUTPUT'    SET OUTPUT                            00108300
&XRSNCODE       SETC  '&RSNCODE(1)'             SET XVARIABLE           00108400
                AIF   (N'&RSNCODE GT 1).ZG17C                           00108500
&XRSNCODE       SETC  '&RSNCODE'  SET XVARIABLE                         00108600
.ZG17C          ANOP  ,                                                 00108700
.*-------------------------------------------------------------------   00108800
.***AG.KCK02 NAME, OPT OUTPUT, KEYS -GPR OUT OF RANGE                   00108900
                AIF   (K'&ZXRSNCODE LE 0).ZG17R  NOT I/O                00109000
                AIF   ('&XRSNCODE'(1,1) NE '(').ZG17R                   00109100
&ZCGPR          SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                      00109200
                AIF   ('&ZCGPR'(1,1) NE '0').ZG17P                      00109300
                AIF   (K'&ZCGPR GT 2).ZG17Q                             00109400
                AIF   ('&ZCGPR' EQ '0').ZG17R                           00109500
&ZCGPR          SETC  '&ZCGPR'(2,1)                                     00109600
                AIF   (T'&ZCGPR NE 'N').ZG17Q   INVALID REG NAME        00109700
.ZG17P          ANOP  ,                                                 00109800
                AIF   (T'&ZCGPR NE 'N').ZG17R   NON NUMERIC             00109900
                AIF   ('&ZCGPR' EQ '0').ZG17R                           00110000
                AIF   ('&ZCGPR' LT '2').ZG17Q                           00110100
                AIF   ('&ZCGPR' LE '12').ZG17R                          00110200
.ZG17Q          ANOP  ,                                                 00110300
&ZMS            SETC  '"RSNCODE='                                       00110400
&ZMS            SETC  '&ZMS.&RSNCODE"'                                  00110500
&ZMS            SETC  '&ZMS ARGUMENT 1 MUST SPECIFY A REGISTER'         00110600
                MNOTE 8,' &ZMS IN THE RANGE (0) OR (2)-(12).'           00110700
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00110800
.ZG17R          ANOP  ,                                                 00110900
.******************************************************************     00111000
.***AH.P00 CHECK STANDALONE POSITIONAL VARIABLES                        00111100
.******************************************************************     00111200
                ACTR  10000                                             00111300
.*----------------------------------------------------------------***   00111400
.***AH.P02 EXTRA POSITIONALS                                            00111500
                AIF   (N'&SYSLIST LE 0).ZGLISTX  NO EXTRAS              00111600
                AIF   (N'&SYSLIST NE 2).ZGLISTX1  NOT NULL              00111700
                AIF   ('&SYSLIST(1)' NE '').ZGLISTX1  NOT NULL          00111800
                AIF   ('&SYSLIST(2)' EQ '').ZGLISTX  NOT NULL           00111900
.ZGLISTX1       ANOP  ,                                                 00112000
&ZCVAL          SETC  ''          ERROR FIELD                           00112100
&ZAWRK          SETA  0           POSITIONAL NUMBER                     00112200
.ZGLIST2        ANOP  ,                                                 00112300
&ZAWRK          SETA  &ZAWRK+1    NEXT POSITIONAL                       00112400
                AIF   (&ZAWRK GT N'&SYSLIST).ZGLIST3  DONE              00112500
&ZCVAL          SETC '&ZCVAL,&SYSLIST(&ZAWRK)'  EXTRA                   00112600
                AGO   .ZGLIST2                                          00112700
.*                                                                      00112800
.ZGLIST3        ANOP  ,                                                 00112900
&ZCVAL          SETC '&ZCVAL'(2,K'&ZCVAL-1)     STRIP COMMA             00113000
&ZMS            SETC  'POSITIONAL ARGUMENT(S),'                         00113100
&ZMS            SETC  '&ZMS "&ZCVAL"'                                   00113200
&ZMS            SETC  '&ZMS CANNOT BE USED.'                            00113300
&ZMS            SETC  '&ZMS NO POSITIONAL ARGUMENTS'                    00113400
                MNOTE 8,' &ZMS ARE ALLOWED.'                            00113500
&ZMACRET        SETA  8           SET MACRO ERROR RETURN CODE           00113600
.ZGLISTX        ANOP  ,                                                 00113700
&ZASYSLNDX      SETA  0                                                 00113800
.*-------------------------------------------------------------------   00113900
.***AG.MF04 MF=(SLE)                                                    00114000
.ZGMFX          ANOP  ,           END OF FULL SYNTAX CHECK              00114100
.*******************************************************************    00114200
.***AE.ZMR01 NO CODE GENERATED IF ERRORS DETECTED                       00114300
.*******************************************************************    00114400
                AIF   (&ZMACRET NE 0).ZLX2      ERROR DETECTED          00114500
.*******************************************************************    00114600
.***AE.01  START OF IWMSRDRS MACRO CODE                                 00114700
.*******************************************************************    00114800
                LCLC  &M0M0001                 NAME                     00114900
&M0M0001        SETC  '&XLABEL'                SET NAME                 00115000
                AIF   (K'&XLABEL NE 0).XLAB2                            00115100
&M0M0001        SETC  'M00M&SYSNDX'            DEFAULT NAME             00115200
.*                                                                      00115300
.XLAB2          ANOP  ,                                                 00115400
                AIF   ('&XMF' EQ 'L').XLAB3                             00115500
&M0M0001 DS    0H                             IWMSRDRS-1                00115600
.XLAB3          ANOP  ,                                                 00115700
.*******************************************************************    00115800
.***AE.PR01 PRINT CONTROLS, DEFAULT IS YES                              00115900
.*******************************************************************    00116000
              PUSH  PRINT                                               00116100
                AIF   ('&ZPRINT' NE 'NO').ZPRINTX  TURN PRINT ON        00116200
                PRINT OFF         ++ PR01                               00116300
                AGO   .ZPRNTXX                                          00116400
.ZPRINTX        PRINT ON                                                00116500
.ZPRNTXX        ANOP  ,                                                 00116600
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00116700
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00116800
.********************************************************************   00116900
.***AL.L01 INTERNAL ARRAY TO PRODUCE FORMATTED CODE                     00117000
.********************************************************************   00117100
                      LCLA  &ZOPN          LIST INSTRUCTION INDEX       00117200
                      LCLA  &ZOPN1         INVOCATION INDEX             00117300
                      LCLC  &ZOPL(4095)    LABEL                        00117400
                      LCLC  &ZOPO(4095)    OPERATION                    00117500
                      LCLC  &ZOPV(4095)    VALUE                        00117600
                      LCLC  &ZOPD(4095)    DESCRIPTION                  00117700
.*                                                                      00117800
&ZOPN                 SETA  0              INITIAL INST INDEX VALUE     00117900
.******************************************************************     00118000
.***AL.L10 IWMSRDRS FMT=LIST MF=S!L PARAMETERS                          00118100
.******************************************************************     00118200
                      AIF   ('&XMF' EQ 'L').ZLMFSL2                     00118300
                      AIF   ('&XMF' NE 'S').ZLMFSLX                     00118400
&XMFCTRL              SETC  '#Z'.'&SYSNDX'.'A'                          00118500
&XMFATTR              SETC  '0D'                                        00118600
.*                                                                      00118700
&ZOPN                 SETA  &ZOPN+1                                     00118800
&ZOPL(&ZOPN)          SETC  ' '                                         00118900
                      AIF   (&SYSALVL NE 0).ZALVL6A                     00119000
&ZOPO(&ZOPN)          SETC  'B'                                         00119100
&ZOPV(&ZOPN)          SETC  '&XMFCTRL.S'                                00119200
                      AGO   .ZALVL6B                                    00119300
.ZALVL6A              ANOP                                              00119400
&ZOPO(&ZOPN)          SETC  'CNOP'                                      00119500
&ZOPV(&ZOPN)          SETC  '4,8'                                       00119600
&ZOPN                 SETA  &ZOPN+1                                     00119700
&ZOPL(&ZOPN)          SETC  ' '                                         00119800
&ZOPO(&ZOPN)          SETC  'BRAS'                                      00119900
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL.S'                              00120000
.ZALVL6B              ANOP                                              00120100
&ZOPD(&ZOPN)          SETC  '++ IWMSRDRS ARG PARMS'                     00120200
.*                                                                      00120300
&ZOPN                 SETA  &ZOPN+1                                     00120400
&ZOPL(&ZOPN)          SETC  ' '                                         00120500
&ZOPO(&ZOPN)          SETC  'SPACE'                                     00120600
&ZOPV(&ZOPN)          SETC  '1'                                         00120700
&ZOPD(&ZOPN)          SETC  ' '                                         00120800
.*                                                                      00120900
.ZLMFSL2              ANOP  ,                                           00121000
.*-------------------------------------------------------------------   00121100
.***AM.L00  IWMSRDRS FMT=LIST name                                      00121200
                      AIF   ('&XMF' NE 'L').ZLMFSL2M                    00121300
&ZOPN                 SETA &ZOPN+1                                      00121400
&ZOPL(&ZOPN)          SETC '&M0M0001'                                   00121500
&ZOPO(&ZOPN)          SETC 'EQU'                                        00121600
&ZOPV(&ZOPN)          SETC '&XMFCTRL'                                   00121700
&ZOPD(&ZOPN)          SETC '++ IWMSRDRS NAME'                           00121800
.ZLMFSL2M             ANOP  ,                                           00121900
.*-------------------------------------------------------------------   00122000
.***AM.L01  IWMSRDRS FMT=LIST PARAMETERS                                00122100
&ZOPN                 SETA &ZOPN+1                                      00122200
&ZOPL(&ZOPN)          SETC '&XMFCTRL'                                   00122300
&ZOPO(&ZOPN)          SETC 'DS'                                         00122400
&ZOPV(&ZOPN)          SETC '&XMFATTR'                                   00122500
&ZOPD(&ZOPN)          SETC '++ IWMSRDRS PARM LIST'                      00122600
.*-------------------------------------------------------------------   00122700
.***AM.L02 XVERSION XL1                                                 00122800
&ZOPN                 SETA &ZOPN+1                                      00122900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XVERSION'                         00123000
&ZOPO(&ZOPN)          SETC 'DS'                                         00123100
&ZOPV(&ZOPN)          SETC 'XL1'                                        00123200
&ZOPD(&ZOPN)          SETC '++ INPUT XVERSION'                          00123300
.*-------------------------------------------------------------------   00123400
.***AM.L09  XLUNAME CL8                                                 00123500
&ZOPN                 SETA &ZOPN+1                                      00123600
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLUNAME'                          00123700
&ZOPO(&ZOPN)          SETC 'DS'                                         00123800
&ZOPV(&ZOPN)          SETC 'CL8'                                        00123900
&ZOPD(&ZOPN)          SETC '++ &ZXLUNAME '                              00124000
.*-------------------------------------------------------------------   00124100
.***AM.L09  XNETWORK_ID CL8                                             00124200
&ZOPN                 SETA &ZOPN+1                                      00124300
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XNETWORK_ID'                      00124400
&ZOPO(&ZOPN)          SETC 'DS'                                         00124500
&ZOPV(&ZOPN)          SETC 'CL8'                                        00124600
&ZOPD(&ZOPN)          SETC '++ &ZXNETWORK_ID '                          00124700
.*-------------------------------------------------------------------   00124800
.***AM.L09  XLOCATION CL18                                              00124900
&ZOPN                 SETA &ZOPN+1                                      00125000
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XLOCATION'                        00125100
&ZOPO(&ZOPN)          SETC 'DS'                                         00125200
&ZOPV(&ZOPN)          SETC 'CL18'                                       00125300
&ZOPD(&ZOPN)          SETC '++ &ZXLOCATION '                            00125400
.*-------------------------------------------------------------------   00125500
.***AM.L09  XRSV001A CL4                                                00125600
&ZOPN                 SETA &ZOPN+1                                      00125700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV001A'                         00125800
&ZOPO(&ZOPN)          SETC 'DS'                                         00125900
&ZOPV(&ZOPN)          SETC 'CL4'                                        00126000
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00126100
.*-------------------------------------------------------------------   00126200
.***AM.MLM2 SAVED LOCATION COUNTER                                      00126300
                      AIF  (&XPLISTVER GE 1).ZL5LA                      00126400
                      AIF  ('&ZENDBASEPL' NE '').ZL5LA                  00126500
&ZENDBASEPL           SETC 'YES'                                        00126600
&ZOPN                 SETA &ZOPN+1                                      00126700
&ZOPL(&ZOPN)          SETC '&XMFCTRL._PL_END'                           00126800
&ZOPO(&ZOPN)          SETC 'EQU'                                        00126900
&ZOPV(&ZOPN)          SETC '*'                                          00127000
&ZOPD(&ZOPN)          SETC '++ END OF BASE PLIST'                       00127100
.ZL5LA                ANOP  ,                                           00127200
.*-------------------------------------------------------------------   00127300
.***AM.LVER1                                                            00127400
                      AIF  (&XPLISTVER LT 1).ZL5L                       00127500
.*-------------------------------------------------------------------   00127600
.*-------------------------------------------------------------------   00127700
.***AM.L09  XRSV0023 CL1                                                00127800
&ZOPN                 SETA &ZOPN+1                                      00127900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV0023'                         00128000
&ZOPO(&ZOPN)          SETC 'DS'                                         00128100
&ZOPV(&ZOPN)          SETC 'CL1'                                        00128200
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00128300
.*-------------------------------------------------------------------   00128400
.***AM.LVER2                                                            00128500
.ZL5L                 ANOP  ,                                           00128600
.*-------------------------------------------------------------------   00128700
.*-------------------------------------------------------------------   00128800
.***AM.LVER1                                                            00128900
                      AIF  (&XPLISTVER LT 1).ZL6L                       00129000
.*-------------------------------------------------------------------   00129100
.*-------------------------------------------------------------------   00129200
.***AM.L09  XPLISTLEN XL2                                               00129300
&ZOPN                 SETA &ZOPN+1                                      00129400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XPLISTLEN'                        00129500
&ZOPO(&ZOPN)          SETC 'DS'                                         00129600
&ZOPV(&ZOPN)          SETC 'XL2'                                        00129700
&ZOPD(&ZOPN)          SETC '++ INPUT '                                  00129800
.*-------------------------------------------------------------------   00129900
.***AM.LVER2                                                            00130000
.ZL6L                 ANOP  ,                                           00130100
.*-------------------------------------------------------------------   00130200
.*-------------------------------------------------------------------   00130300
.***AM.LVER1                                                            00130400
                      AIF  (&XPLISTVER LT 1).ZL7L                       00130500
.*-------------------------------------------------------------------   00130600
.*-------------------------------------------------------------------   00130700
.***AM.L09  XRSV002A CL2                                                00130800
&ZOPN                 SETA &ZOPN+1                                      00130900
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XRSV002A'                         00131000
&ZOPO(&ZOPN)          SETC 'DS'                                         00131100
&ZOPV(&ZOPN)          SETC 'CL2'                                        00131200
&ZOPD(&ZOPN)          SETC '++ RESERVED '                               00131300
.*-------------------------------------------------------------------   00131400
.***AM.LVER2                                                            00131500
.ZL7L                 ANOP  ,                                           00131600
.*-------------------------------------------------------------------   00131700
.*-------------------------------------------------------------------   00131800
.***AM.LVER1                                                            00131900
                      AIF  (&XPLISTVER LT 1).ZL8L                       00132000
.*-------------------------------------------------------------------   00132100
.*-------------------------------------------------------------------   00132200
.***AM.L09 ADDR XHOST A                                                 00132300
&ZOPN                 SETA &ZOPN+1                                      00132400
&ZOPL(&ZOPN)          SETC '&XMFCTRL._XHOST_ADDR'                       00132500
&ZOPO(&ZOPN)          SETC 'DS'                                         00132600
&ZOPV(&ZOPN)          SETC 'A'                                          00132700
&ZOPD(&ZOPN)          SETC '++ &ZXHOST ADDR'                            00132800
.*-------------------------------------------------------------------   00132900
.***AM.LVER2                                                            00133000
.ZL8L                 ANOP  ,                                           00133100
.*-------------------------------------------------------------------   00133200
.*-------------------------------------------------------------------   00133300
.***AM.L10 END OF IWMSRDRS LIST PARAMETERS                              00133400
&ZOPN                 SETA &ZOPN+1                                      00133500
&ZOPL(&ZOPN)          SETC '&XMFCTRL.L'                                 00133600
&ZOPO(&ZOPN)          SETC 'EQU'                                        00133700
&ZOPV(&ZOPN)          SETC '*-&XMFCTRL'                                 00133800
&ZOPD(&ZOPN)          SETC '++ LENGTH OF PLIST'                         00133900
.*                                                                      00134000
&ZOPN                 SETA &ZOPN+1                                      00134100
&ZOPL(&ZOPN)          SETC ' '                                          00134200
&ZOPO(&ZOPN)          SETC 'SPACE'                                      00134300
&ZOPV(&ZOPN)          SETC '1'                                          00134400
&ZOPD(&ZOPN)          SETC ' '                                          00134500
.*-------------------------------------------------------------------   00134600
.***AL.L12 IWMSRDRS FMT=LIST MF=S!L PARAMETERS                          00134700
                      AIF   ('&XMF' EQ 'L').ZMFLX  DONE IF MF=L         00134800
.*                                                                      00134900
&ZOPN                 SETA  &ZOPN+1                                     00135000
&ZOPL(&ZOPN)          SETC  '&XMFCTRL.S'                                00135100
&ZOPO(&ZOPN)          SETC  'DC'                                        00135200
&ZOPV(&ZOPN)          SETC  '0H''0'''                                   00135300
&ZOPD(&ZOPN)          SETC  '++ IWMSRDRS ARG PARMS'                     00135400
.*                                                                      00135500
.ZLMFSLX              ANOP  ,                                           00135600
.*-------------------------------------------------------------------   00135700
.***AL.L13 SET ZPLLEN TO ITS APPROPRIATE VALUE                          00135800
&ZPLLEN               SETA 39                                           00135900
.*                                                                      00136000
                      AIF  (&XPLISTVER LT 1).ZLLEN2Z                    00136100
&ZPLLEN               SETA 48                                           00136200
.ZLLEN2Z              ANOP  ,                                           00136300
.*                                                                      00136400
.******************************************************************     00136500
.***AI.L01 IWMSRDRS FMT=LIST FILL IN PARAMETER AREA                     00136600
.******************************************************************     00136700
                      ACTR  10000                                       00136800
&ZCVAL                SETC  'LA'           ASSUME XA MODE               00136900
                      AIF   ('&SYSASCE' EQ 'P').ZIMFXA  SYSSTATE PRI    00137000
&ZCVAL                SETC  'LAE'          XAX MODE                     00137100
.ZIMFXA               ANOP ,                                            00137200
.*                                                                      00137300
                      AIF   ('&XMFCTRL'(1,1) NE '(').ZIMFN2  NOT GPR    00137400
&ZCGPR                SETC  '&XMFCTRL'(2,K'&XMFCTRL-2)  GET GPR         00137500
                      AIF   ('&ZCGPR' EQ 'GPR1').ZIMFNX                 00137600
                      AIF   ('&ZCGPR' EQ 'GPR01').ZIMFNX                00137700
                      AIF   ('&ZCGPR' EQ 'REG1').ZIMFNX                 00137800
                      AIF   ('&ZCGPR' EQ 'REG01').ZIMFNX                00137900
                      AIF   ('&ZCGPR' EQ 'R1').ZIMFNX                   00138000
                      AIF   ('&ZCGPR' EQ '1').ZIMFNX                    00138100
                      AIF   ('&ZCGPR' EQ '01').ZIMFNX                   00138200
&ZOPN                 SETA  &ZOPN+1                                     00138300
&ZOPL(&ZOPN)          SETC  ' '                                         00138400
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00138500
&ZOPV(&ZOPN)          SETC  '1,0(,&ZCGPR)'                              00138600
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00138700
                      AGO   .ZIMFNX                                     00138800
.*                                                                      00138900
.ZIMFN2               ANOP ,                                            00139000
                      AIF   (&SYSALVL EQ 0).ZIMFNX1                     00139100
                      AIF   ('&XMF' NE 'S').ZIMFNX1                     00139200
                      AIF   ('&ZCVAL' NE 'LAE').ZIMFNX                  00139300
&ZOPN                 SETA  &ZOPN+1                                     00139400
&ZOPL(&ZOPN)          SETC  ' '                                         00139500
&ZOPO(&ZOPN)          SETC  'LAE'                                       00139600
&ZOPV(&ZOPN)          SETC  '1,0(1,0)'                                  00139700
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00139800
                      AGO   .ZIMFNX                                     00139900
.ZIMFNX1              ANOP ,                                            00140000
&ZOPN                 SETA  &ZOPN+1                                     00140100
&ZOPL(&ZOPN)          SETC  ' '                                         00140200
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00140300
&ZOPV(&ZOPN)          SETC  '1,&XMFCTRL'                                00140400
&ZOPD(&ZOPN)          SETC  '++ LOCATE ARG PARMS'                       00140500
.ZIMFNX               ANOP ,                                            00140600
.********************************************************************   00140700
.***AI.L02 IWMSRDRS FMT=LIST INITIALIZE PARAMETER AREA                  00140800
.********************************************************************   00140900
.***AI.L03 MF=(SLE)                                                     00141000
                      AIF   ('&XMF' EQ 'L').ZIMFLX                      00141100
.*                                                                      00141200
&ZOPN                 SETA  &ZOPN+1                                     00141300
&ZOPL(&ZOPN)          SETC  ' '                                         00141400
&ZOPO(&ZOPN)          SETC  'XC'                                        00141500
&ZOPV(&ZOPN)          SETC  '0(&ZPLLEN,1),0(1)'                         00141600
&ZOPD(&ZOPN)          SETC  '++ INITIALIZE'                             00141700
.ZIMFLX               ANOP  ,                                           00141800
.*-------------------------------------------------------------------   00141900
.***AI.L04A XVERSION XL1                                                00142000
                      AIF   (&XPLISTVER EQ 0).ZIMFVW                    00142100
&ZOPN                 SETA  &ZOPN+1                                     00142200
&ZOPL(&ZOPN)          SETC  ' '                                         00142300
&ZOPO(&ZOPN)          SETC  'MVI'                                       00142400
&ZOPV(&ZOPN)          SETC  '0(1),&XPLISTVER'                           00142500
&ZOPD(&ZOPN)          SETC  '++ INPUT XVERSION XL1'                     00142600
.ZIMFVW               ANOP  ,                                           00142700
.*-------------------------------------------------------------------   00142800
.***AI.L25  XLUNAME CL8                                                 00142900
                      AIF   ('&ZXLUNAME' EQ '').ZI2E                    00143000
                      AIF   ('&ZXLUNAME' EQ 'OUTPUT').ZI2E              00143100
&ZCGPR                SETC  '&XLUNAME'                                  00143200
.*                                                                      00143300
                      AIF   ('&XLUNAME'(1,1) NE '(').ZI2B               00143400
&ZCGPR   SETC  '0('.'&XLUNAME'(2,K'&XLUNAME-2).')'                      00143500
.ZI2B                 ANOP  ,                                           00143600
.*                                                                      00143700
&ZOPN                 SETA  &ZOPN+1                                     00143800
&ZOPL(&ZOPN)          SETC  ' '                                         00143900
&ZOPO(&ZOPN)          SETC  'MVC'                                       00144000
&ZOPV(&ZOPN)          SETC  '1(8,1),&ZCGPR'                             00144100
&ZOPD(&ZOPN)          SETC  '++ &ZXLUNAME XLUNAME'                      00144200
.*                                                                      00144300
.ZI2E                 ANOP  ,                                           00144400
.*-------------------------------------------------------------------   00144500
.***AI.L25  XNETWORK_ID CL8                                             00144600
                      AIF   ('&ZXNETWORK_ID' EQ '').ZI3E                00144700
                      AIF   ('&ZXNETWORK_ID' EQ 'OUTPUT').ZI3E          00144800
&ZCGPR                SETC  '&XNETWORK_ID'                              00144900
.*                                                                      00145000
                      AIF   ('&XNETWORK_ID'(1,1) NE '(').ZI3B           00145100
&ZCGPR   SETC  '0('.'&XNETWORK_ID'(2,K'&XNETWORK_ID-2).')'              00145200
.ZI3B                 ANOP  ,                                           00145300
.*                                                                      00145400
&ZOPN                 SETA  &ZOPN+1                                     00145500
&ZOPL(&ZOPN)          SETC  ' '                                         00145600
&ZOPO(&ZOPN)          SETC  'MVC'                                       00145700
&ZOPV(&ZOPN)          SETC  '9(8,1),&ZCGPR'                             00145800
&ZOPD(&ZOPN)          SETC  '++ &ZXNETWORK_ID XNETWORK_ID'              00145900
.*                                                                      00146000
.ZI3E                 ANOP  ,                                           00146100
.*-------------------------------------------------------------------   00146200
.***AI.L25  XLOCATION CL18                                              00146300
                      AIF   ('&ZXLOCATION' EQ '').ZI4E                  00146400
                      AIF   ('&ZXLOCATION' EQ 'OUTPUT').ZI4E            00146500
&ZCGPR                SETC  '&XLOCATION'                                00146600
.*                                                                      00146700
                      AIF   ('&XLOCATION'(1,1) NE '(').ZI4B             00146800
&ZCGPR   SETC  '0('.'&XLOCATION'(2,K'&XLOCATION-2).')'                  00146900
.ZI4B                 ANOP  ,                                           00147000
.*                                                                      00147100
&ZOPN                 SETA  &ZOPN+1                                     00147200
&ZOPL(&ZOPN)          SETC  ' '                                         00147300
&ZOPO(&ZOPN)          SETC  'MVC'                                       00147400
&ZOPV(&ZOPN)          SETC  '17(18,1),&ZCGPR'                           00147500
&ZOPD(&ZOPN)          SETC  '++ &ZXLOCATION XLOCATION'                  00147600
.*                                                                      00147700
.ZI4E                 ANOP  ,                                           00147800
.*-------------------------------------------------------------------   00147900
.***AI.LVER01                                                           00148000
                      AIF  (&XPLISTVER LT 1).ZI6Z                       00148100
.*-------------------------------------------------------------------   00148200
.***AI.LVER02                                                           00148300
.ZI6Z                 ANOP  ,                                           00148400
.*-------------------------------------------------------------------   00148500
.***AI.LVER01                                                           00148600
                      AIF  (&XPLISTVER LT 1).ZI7Z                       00148700
.*-------------------------------------------------------------------   00148800
.***AI.L04 XPLISTLEN XL2                                                00148900
&ZOPN                 SETA  &ZOPN+1                                     00149000
&ZOPL(&ZOPN)          SETC  ' '                                         00149100
&ZOPO(&ZOPN)          SETC  'MVC'                                       00149200
&ZOPV(&ZOPN)          SETC  '40(2,1),=AL2(&ZPLLEN)'                     00149300
&ZOPD(&ZOPN)          SETC  '++ INPUT XPLISTLEN XL2'                    00149400
.*-------------------------------------------------------------------   00149500
.***AI.LVER02                                                           00149600
.ZI7Z                 ANOP  ,                                           00149700
.*-------------------------------------------------------------------   00149800
.***AI.LVER01                                                           00149900
                      AIF  (&XPLISTVER LT 1).ZI8Z                       00150000
.*-------------------------------------------------------------------   00150100
.***AI.LVER02                                                           00150200
.ZI8Z                 ANOP  ,                                           00150300
.*-------------------------------------------------------------------   00150400
.***AI.LVER01                                                           00150500
                      AIF  (&XPLISTVER LT 1).ZI9Z                       00150600
.*-------------------------------------------------------------------   00150700
.***AI.L18 ADDR XHOST A                                                 00150800
         AIF   ('&XHOST' NE 'NO_HOST').ZI9                              00150900
&ZXHOST               SETC  ''             RESET INPUT/OUTPUT           00151000
.ZI9                  ANOP  ,                                           00151100
.*-------------------------------------------------------------------   00151200
.***AI.L19 ADDR XHOST A                                                 00151300
                      AIF   ('&ZXHOST' EQ '').ZI9H                      00151400
&ZCLNG                SETC  '&XHOST'                                    00151500
&ZCGPR                SETC  '14'                                        00151600
         AIF   ('&XHOST'(1,1) EQ '(').ZI9F  IN GPR                      00151700
.*                                                                      00151800
&ZOPN                 SETA  &ZOPN+1                                     00151900
&ZOPL(&ZOPN)          SETC  ' '                                         00152000
&ZOPO(&ZOPN)          SETC  '&ZCVAL'                                    00152100
&ZOPV(&ZOPN)          SETC  '&ZCGPR,&ZCLNG'                             00152200
&ZOPD(&ZOPN)          SETC  '++ &ZXHOST XHOST'                          00152300
.*                                                                      00152400
                      AGO   .ZI9G                                       00152500
.*                                                                      00152600
.ZI9F                 ANOP  ,                                           00152700
&ZCGPR   SETC  '&XHOST'(2,K'&XHOST-2)                                   00152800
.*                                                                      00152900
.ZI9G                 ANOP  ,                                           00153000
.*                                                                      00153100
&ZOPN                 SETA  &ZOPN+1                                     00153200
&ZOPL(&ZOPN)          SETC  ' '                                         00153300
&ZOPO(&ZOPN)          SETC  'ST'                                        00153400
&ZOPV(&ZOPN)          SETC  '&ZCGPR,44(,1)'                             00153500
&ZOPD(&ZOPN)          SETC  '++ &ZXHOST XHOST'                          00153600
.*                                                                      00153700
.ZI9H                 ANOP  ,                                           00153800
.*-------------------------------------------------------------------   00153900
.***AI.LVER02                                                           00154000
.ZI9Z                 ANOP  ,                                           00154100
.*-------------------------------------------------------------------   00154200
&ZOPN1                SETA &ZOPN                                        00154300
.*******************************************************************    00154400
.***  PROCESS IWMSRDRS OUTPUT PARAMETERS                                00154500
.*******************************************************************    00154600
                      ACTR  10000                                       00154700
.*******************************************************************    00154800
.***AO.X02  RETURN CODE PROCESSING                                      00154900
.*******************************************************************    00155000
                      AIF   (N'&RETCODE LE 0).ZMRETX                    00155100
                      AIF   ('&XRETCODE'(1,1) EQ '(').ZMRET2            00155200
                      AIF   ('&XRETCODE' EQ 'GPR15').ZMRETX             00155300
                      AIF   ('&XRETCODE' EQ 'REG15').ZMRETX             00155400
                      AIF   ('&XRETCODE' EQ 'R15').ZMRETX               00155500
                      AIF   ('&XRETCODE' EQ '15').ZMRETX                00155600
&ZOPN                 SETA  &ZOPN+1                                     00155700
&ZOPL(&ZOPN)          SETC  ' '                                         00155800
&ZOPO(&ZOPN)          SETC  'ST'                                        00155900
&ZOPV(&ZOPN)          SETC  '15,&XRETCODE'                              00156000
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00156100
                      AGO   .ZMRETX                                     00156200
.*                                                                      00156300
.ZMRET2               ANOP  ,                                           00156400
&ZCGPR                SETC  '&XRETCODE'(2,K'&XRETCODE-2)                00156500
                      AIF   ('&ZCGPR' EQ 'GPR15').ZMRETX                00156600
                      AIF   ('&ZCGPR' EQ 'REG15').ZMRETX                00156700
                      AIF   ('&ZCGPR' EQ 'R15').ZMRETX                  00156800
                      AIF   ('&ZCGPR' EQ '15').ZMRETX                   00156900
&ZOPN                 SETA  &ZOPN+1                                     00157000
&ZOPL(&ZOPN)          SETC  ' '                                         00157100
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00157200
&ZOPV(&ZOPN)          SETC  '&ZCGPR,15'                                 00157300
&ZOPD(&ZOPN)          SETC  '++ SET RETURN CODE'                        00157400
.ZMRETX               ANOP  ,                                           00157500
.*******************************************************************    00157600
.***AO.X03  REASON CODE PROCESSING                                      00157700
.*******************************************************************    00157800
                      AIF   (N'&RSNCODE LE 0).ZMRSNX                    00157900
                      AIF   ('&XRSNCODE'(1,1) EQ '(').ZMRSN2            00158000
                      AIF   ('&XRSNCODE' EQ 'GPR0').ZMRSNX              00158100
                      AIF   ('&XRSNCODE' EQ 'GPR00').ZMRSNX             00158200
                      AIF   ('&XRSNCODE' EQ 'REG0').ZMRSNX              00158300
                      AIF   ('&XRSNCODE' EQ 'REG00').ZMRSNX             00158400
                      AIF   ('&XRSNCODE' EQ 'R0').ZMRSNX                00158500
                      AIF   ('&XRSNCODE' EQ '0').ZMRSNX                 00158600
                      AIF   ('&XRSNCODE' EQ '00').ZMRSNX                00158700
&ZOPN                 SETA  &ZOPN+1                                     00158800
&ZOPL(&ZOPN)          SETC  ' '                                         00158900
&ZOPO(&ZOPN)          SETC  'ST'                                        00159000
&ZOPV(&ZOPN)          SETC  '0,&XRSNCODE'                               00159100
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00159200
                      AGO   .ZMRSNX                                     00159300
.*                                                                      00159400
.ZMRSN2               ANOP  ,                                           00159500
&ZCGPR                SETC  '&XRSNCODE'(2,K'&XRSNCODE-2)                00159600
                      AIF   ('&ZCGPR' EQ 'GPR0').ZMRSNX                 00159700
                      AIF   ('&ZCGPR' EQ 'GPR00').ZMRSNX                00159800
                      AIF   ('&ZCGPR' EQ 'REG0').ZMRSNX                 00159900
                      AIF   ('&ZCGPR' EQ 'REG00').ZMRSNX                00160000
                      AIF   ('&ZCGPR' EQ 'R0').ZMRSNX                   00160100
                      AIF   ('&ZCGPR' EQ '0').ZMRSNX                    00160200
                      AIF   ('&ZCGPR' EQ '00').ZMRSNX                   00160300
&ZOPN                 SETA  &ZOPN+1                                     00160400
&ZOPL(&ZOPN)          SETC  ' '                                         00160500
&ZOPO(&ZOPN)          SETC  '&ZMAC_LR'                                  00160600
&ZOPV(&ZOPN)          SETC  '&ZCGPR,0'                                  00160700
&ZOPD(&ZOPN)          SETC  '++ SET REASON CODE'                        00160800
.ZMRSNX               ANOP  ,                                           00160900
.*******************************************************************    00161000
.***AO.X04  LABEL FOR MF=L PROCESSING                                   00161100
.*******************************************************************    00161200
.ZMFLX                ANOP  ,              MF=L PROCESSING              00161300
.*******************************************************************    00161400
.***AO.X05  FORMAT GENERATED INSTRUCTIONS                               00161500
.*******************************************************************    00161600
                      ACTR  10000                                       00161700
.*                                                                      00161800
                      LCLA  &ZLC           COLUMN POSITION              00161900
                      LCLA  &ZOPX          LIST TABLE INDEX             00162000
                      LCLC  &ZLL           LABEL                        00162100
                      LCLC  &ZLOP          OPERATION                    00162200
                      LCLC  &ZLV           VALUE                        00162300
                      LCLC  &ZLD           DESCRIPTION                  00162400
.*                                                                      00162500
&ZOPX                 SETA  1                                           00162600
.ZL2                  AIF   (&ZOPX GT &ZOPN1).ZLX  B IF DONE            00162700
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00162800
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00162900
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00163000
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00163100
                      AIF   (K'&ZLD LE 0).ZL5                           00163200
&ZLC                  SETA  35             COMMENT COLUMN               00163300
                      AIF   ('&ZLD'(1,1) NE '*').ZL3                    00163400
&ZLC                  SETA  33             COMMMENT COLUMN              00163500
.ZL3                  AIF   (K'&ZLV GE &ZLC-16-1).ZL4                   00163600
&ZLV                  SETC  '&ZLV'.' '                                  00163700
                      AGO   .ZL3                                        00163800
.*                                                                      00163900
.ZL4                  ANOP  ,                                           00164000
&ZLV                  SETC  '&ZLV'.' '                                  00164100
.ZL5                  ANOP  ,                                           00164200
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00164300
.*                                                                      00164400
&ZLL     &ZLOP &ZLV                                                     00164500
.*                                                                      00164600
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00164700
                      AGO   .ZL2           CONTINUE LOOPING             00164800
.*                                                                      00164900
.ZLX                  ANOP  ,                                           00165000
                      AIF   ('&XMF' EQ 'L').ZLINKX  MF=L                00165100
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00165200
         L     14,16(0,0)              GET CVT ADDRESS                  00165300
         L     14,772(14,0)            GET SFT ADDRESS                  00165400
         L     14,380(14,0)            GET LX FOR SERVICE ROUTINE       00165500
         LA    15,29                   GET EX FOR SERVICE ROUTINE       00165600
         OR    14,15                   GET PC NUMBER                    00165700
         PC    0(14)                                                    00165800
END&SYSNDX DS    0H                    END LABEL                        00165900
.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*  00166000
.ZLINKX               ANOP  ,                                           00166100
.*******************************************************************    00166200
.***AP.X01  FORMAT GENERATED CODE                                       00166300
.ZL21                 AIF   (&ZOPX GT &ZOPN).ZLX1  B IF DONE            00166400
&ZLL                  SETC  '&ZOPL(&ZOPX)'                              00166500
&ZLOP                 SETC  '&ZOPO(&ZOPX)'                              00166600
&ZLV                  SETC  '&ZOPV(&ZOPX)'                              00166700
&ZLD                  SETC  '&ZOPD(&ZOPX)'                              00166800
                      AIF   (K'&ZLD LE 0).ZL51                          00166900
&ZLC                  SETA  35             COMMENT COLUMN               00167000
                      AIF   ('&ZLD'(1,1) NE '*').ZL31                   00167100
&ZLC                  SETA  33             COMMENT COLUMN               00167200
.ZL31                 AIF   (K'&ZLV GE &ZLC-16-1).ZL41                  00167300
&ZLV                  SETC  '&ZLV'.' '                                  00167400
                      AGO   .ZL31                                       00167500
.*                                                                      00167600
.ZL41                 ANOP  ,                                           00167700
&ZLV                  SETC  '&ZLV'.' '                                  00167800
.ZL51                 ANOP  ,                                           00167900
&ZLV                  SETC  '&ZLV'.'&ZLD'                               00168000
.*                                                                      00168100
&ZLL     &ZLOP &ZLV                                                     00168200
.*                                                                      00168300
&ZOPX                 SETA  &ZOPX+1        NEXT STRUCTURE               00168400
                      AGO   .ZL21          CONTINUE LOOPING             00168500
.*                                                                      00168600
.ZLX1                 ANOP  ,                                           00168700
.*******************************************************************    00168800
.***AP.X02  END OF IWMSRDRS MACRO                                       00168900
&ZIWMSRDRS            SETC  'YES'          SET IWMSRDRS USED            00169000
         POP   PRINT                                                    00169100
*                                            IWMSRDRS-1                 00169200
         SPACE 1                                                        00169300
.ZLX2                 ANOP  ,                                           00169400
         MEND                                                           00169500
**********************************************************************/ 00169600
*/**** START OF SPECIFICATIONS **************************************** 00169700
*                                                                     * 00169800
*                                                                     * 00169900
*01* MACRO NAME:  IWMSRDRS                              -07/02/15-<1> * 00170000
*                                                                     * 00170100
*                                                                     * 00170200
*01* DESCRIPTIVE NAME:  Sysplex Routing Deregistration                * 00170300
*                                                                     * 00170400
*01* PROPRIETARY STATEMENT:                                           * 00170500
*                                                                     * 00170600
*     LICENSED MATERIALS - PROPERTY OF IBM                            * 00170700
*     5647-A01 COPYRIGHT IBM CORP. 1994, 1997                         * 00170800
*                                                                     * 00170900
* STATUS= JBB6604                                                     * 00171000
*                                                                     * 00171100
*                                                                     * 00171200
*                                                                     * 00171300
*01* FUNCTION:                                                        * 00171400
*       See the IWMSRDRS macro prologue for details.                  * 00171500
*                                                                     * 00171600
*01* INPUT:                                                           * 00171700
*                                                                     * 00171800
*            ?IWMSRDRS     LOCATION(xlocation)                        * 00171900
*                          NETWORK_ID(xnetwork_id)                    * 00172000
*                          LUNAME(xluname)                            * 00172100
*                         ÝHOST(»xhost!NO_HOSTº)¨                     * 00172200
*                         ÝRETCODE(xretcode)¨                         * 00172300
*                         ÝRSNCODE(xrsncode)¨                         * 00172400
*                         ÝPLISTVER(»xplistver!IMPLIED_VERSIONº)¨     * 00172500
*                        ÐÝMF(S)¨                                     * 00172600
*                        ÔÝMF(L,xmfctrl»,xmfattr!BDY(DWORD)º)¨        * 00172700
*                        ¿ÝMF(E,xmfctrl»,COMPLETEº)¨                  * 00172800
*                                                                     * 00172900
****** END OF SPECIFICATIONS *****************************************/ 00173000
*/*PB.ECHO01 MACRO INVOCATION ECHO-----------------------------------*/ 00173100
*  ANS('@SPACE;') NORESCAN COL(MACLMAR);                                00173200
*  ANS('/* ? IWMSRDRS '!!MACLIST!!' ')                                  00173300
*      NORESCAN COL(MACLMAR+5);    /* START ECHO */                     00173400
*                                                                       00173500
*  DCL ZELO  FIXED;                                                     00173600
*  DCL ZECOL FIXED;                                                     00173700
*                                                                       00173800
*  ZELO=1;     /* STARTING COLUMN */                                    00173900
*  DO WHILE ZELO<=LENGTH(MACKEYS);  /* PARENTHSIS SCAN */               00174000
*    ZECOL=INDEX(MACKEYS(ZELO:LENGTH(MACKEYS)),')');                    00174100
*    IF ZECOL>0                                                         00174200
*      THEN                                                             00174300
*        DO;   /* PARENTHESIS FOUND */                                  00174400
*          ANS(MACKEYS(ZELO:ZELO+ZECOL-1)!!' ')                         00174500
*             NORESCAN COL(MACLMAR+5);                                  00174600
*          ZELO=ZELO+ZECOL;        /* NEXT PORTION */                   00174700
*        END;                                                           00174800
*      ELSE                                                             00174900
*        DO;   /* REMAINING KEYS */                                     00175000
*          ANS(MACKEYS(ZELO:LENGTH(MACKEYS)))                           00175100
*             NORESCAN COL(MACLMAR+5);                                  00175200
*          ZELO=LENGTH(MACKEYS)+1;                                      00175300
*        END;                                                           00175400
*  END;                                                                 00175500
*  ANS(' -07/02/15-1- */')                                              00175600
*      NORESCAN COL(MACLMAR+5);    /* END ECHO */                       00175700
*/********************************************************************/ 00175800
*/*PV.DCL01 MACRO DECLARES AND CODE GENERATION CONTROLS              */ 00175900
*/********************************************************************/ 00176000
*  DCL ZPRINT  EXTERNAL; DEACT ZPRINT; /* YES=PRINT, NO=NO PRINT     */ 00176100
*  DCL ZTEST   EXTERNAL; DEACT ZTEST;  /* YES=TEST, NO=NO TEST       */ 00176200
*  DCL ZSYSTEM EXTERNAL; DEACT ZSYSTEM;/* PCCODE10, MVS, SAK, VM     */ 00176300
*                                                                       00176400
*  DCL   ZIWMSRDRS CHAR EXTERNAL; /* YES=USED AT LEAST ONCE          */ 00176500
*  DEACT ZIWMSRDRS;                                                     00176600
*                                                                       00176700
*  DCL ZMACRET FIXED; DEACT ZMACRET;                                    00176800
*  ZMACRET=0;                   /* MACRO COMPILE RETURN CODE         */ 00176900
*                                                                       00177000
*  DCL ZMS CHAR;   DEACT ZMS;   /* ERROR MESSAGE                     */ 00177100
*  DCL ZCVAL CHAR; DEACT ZCVAL; /* ERROR MESSAGE WORK AREA           */ 00177200
*                                                                       00177300
*  DCL ZI FIXED;  DEACT ZI;     /* INDEX FOR VARIABLE NUM OF PARMS   */ 00177400
*  DCL ZJ FIXED;  DEACT ZJ;     /* INDEX FOR VARIABLE NUM OF PARMS   */ 00177500
*  DCL ZK FIXED;  DEACT ZK;     /* INDEX FOR RANGE COLON (:)         */ 00177600
*  DCL ZL FIXED;  DEACT ZL;     /* INDEX FOR RANGE VALUE CHECKING    */ 00177700
*  DCL ZLO FIXED; DEACT ZLO;    /* LOW RANGE VALUE                   */ 00177800
*  DCL ZHI FIXED; DEACT ZHI;    /* HIGH RANGE VALUE                  */ 00177900
*  DCL ZW CHAR;   DEACT ZW;     /* WORK AREA FOR RANGE VALUE SUBLIST */ 00178000
*  DCL ZN FIXED;  DEACT ZN;     /* NUMERIC WORK VARIABLE             */ 00178100
*  DCL ZC CHAR;   DEACT ZC;     /* CHARACTER WORK VARIABLE           */ 00178200
*  DCL ZMAXINVOCLEN FIXED; DEACT ZMAXINVOCLEN;  /* INVOCATION LENGTH */ 00178300
*  DCL ZPLLEN FIXED; DEACT ZPLLEN;        /* PARAMETER LIST LENGTH   */ 00178400
*                                                                       00178500
*  DCL ZPRMMAX FIXED;           /* MAXIMUM PARM LIST SIZE            */ 00178600
*  DCL ZPRMNUM FIXED;           /* PARAMETER ARRAY INDEX             */ 00178700
*  DCL ZPRM(100);               /* PARAMETER ENTRY                   */ 00178800
*  DCL EHAMAXLEN FIXED EXTERNAL;   /* MAX ILIST SIZE FOR PARM LISTS  */ 00178900
*  DCL EHAREGS CHARACTER EXTERNAL; /* REG DCLS                       */ 00179000
*  DCL EHAREGS64 CHARACTER EXTERNAL; /* REG DCLS                     */ 00179100
*  DCL EHALIST CHARACTER EXTERNAL; /* STANDARD PARM LIST GENERATION  */ 00179200
*/*******************************************************************/  00179300
*/*PV.XVAR01 DECLARE ALL MACRO PARAMETER VARIABLES                  */  00179400
*/*******************************************************************/  00179500
*  DCL XLOCATION;  DEACT XLOCATION;  /***PV.XVAR02 INPUT NAME */        00179600
*  DCL ZXLOCATION; DEACT ZXLOCATION;  /***INPUT/OUTPUT CONTROL */       00179700
*  DCL   XNETWORK_ID;              /***PV.XVAR03 INPUT NAME */          00179800
*  DEACT XNETWORK_ID;              /***PV.XVAR03 INPUT NAME */          00179900
*  DCL   ZXNETWORK_ID;             /***INPUT/OUTPUT CONTROL */          00180000
*  DEACT ZXNETWORK_ID;             /***INPUT/OUTPUT CONTROL */          00180100
*  DCL XLUNAME;  DEACT XLUNAME;    /***PV.XVAR02 INPUT NAME */          00180200
*  DCL ZXLUNAME; DEACT ZXLUNAME;   /***INPUT/OUTPUT CONTROL */          00180300
*  DCL XHOST;  DEACT XHOST;        /***PV.XVAR02 INPUT NAME */          00180400
*  DCL ZXHOST; DEACT ZXHOST;       /***INPUT/OUTPUT CONTROL */          00180500
*  DCL XRETCODE;  DEACT XRETCODE;  /***PV.XVAR02 OUTPUT NAME */         00180600
*  DCL ZXRETCODE; DEACT ZXRETCODE;  /***INPUT/OUTPUT CONTROL */         00180700
*  DCL XRSNCODE;  DEACT XRSNCODE;  /***PV.XVAR02 OUTPUT NAME */         00180800
*  DCL ZXRSNCODE; DEACT ZXRSNCODE;  /***INPUT/OUTPUT CONTROL */         00180900
*  DCL XPLISTVER FIXED;  DEACT XPLISTVER;  /***PV.XVAR02 INPUT VALUE */ 00181000
*  DCL ZXPLISTVER; DEACT ZXPLISTVER;  /***INPUT/OUTPUT CONTROL */       00181100
*  DCL XMF;  DEACT XMF;            /***PV.XVAR02 INPUT VALUE */         00181200
*  DCL ZXMF; DEACT ZXMF;           /***INPUT/OUTPUT CONTROL */          00181300
*  DCL XMFCTRL;  DEACT XMFCTRL;    /***PV.XVAR02 INPUT NAME */          00181400
*  DCL ZXMFCTRL; DEACT ZXMFCTRL;   /***INPUT/OUTPUT CONTROL */          00181500
*  DCL XMFATTR;  DEACT XMFATTR;    /***PV.XVAR02 INPUT VALUE */         00181600
*  DCL ZXMFATTR; DEACT ZXMFATTR;   /***INPUT/OUTPUT CONTROL */          00181700
*  DCL XMFSCK;  DEACT XMFSCK;      /***PV.XVAR02 INPUT VALUE */         00181800
*  DCL ZXMFSCK; DEACT ZXMFSCK;     /***INPUT/OUTPUT CONTROL */          00181900
*/********************************************************************/ 00182000
*/***PC.PLV01  PROCESS PLISTVER                                      */ 00182100
*/********************************************************************/ 00182200
*  IF TRANSLATE(PLISTVER(1)) = 'MAX' THEN                               00182300
*    XPLISTVER=1;                                                       00182400
*  ELSE                                                                 00182500
*    XPLISTVER=0;                                                       00182600
*  IF HOST^='' & XPLISTVER<1                                            00182700
*    THEN                                                               00182800
*      XPLISTVER=1;                                                     00182900
*  IF PLISTVER^=''                                                      00183000
*     & TRANSLATE(PLISTVER(1))^='IMPLIED_VERSION'                       00183100
*     & TRANSLATE(PLISTVER(1))^='MAX'                                   00183200
*    THEN                                                               00183300
*      DO;                                                              00183400
*                                                                       00183500
*        ZCVAL='';                           /* ERROR FLAG */           00183600
*        IF PLISTVER='PLISTVER' ! PLISTVER='()'  /*CHECK ENTRY*/        00183700
*          THEN                                                         00183800
*            DO;                                                        00183900
*              ZMS=' 8, THE "PLISTVER" KEY'!! /**KOPTP* MSG*/           00184000
*                  ' MUST CONTAIN ONE'!!                                00184100
*                  ' (OR MORE) ARGUMENT(S).';                           00184200
*              ANS MSG('?IWMSRDRS ---> '!!ZMS);                         00184300
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00184400
*              ZMACRET=8;                    /* MACRO ERROR */          00184500
*              ZCVAL='NO_ARGUMENT';                                     00184600
*            END;                                                       00184700
*        IF NUMBER(PLISTVER)>1               /* CHECK POSITIONALS */    00184800
*          THEN                                                         00184900
*            DO;                                                        00185000
*              ZMS=' 8, "PLISTVER'!!         /**KPOSP* MSG*/            00185100
*                  PLISTVER!!                                           00185200
*                  '" "PLISTVER"'!!                                     00185300
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        00185400
*              ANS MSG('?IWMSRDRS ---> '!!ZMS);                         00185500
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00185600
*              ZMACRET=8;                    /* MACRO ERROR */          00185700
*            END;                                                       00185800
*                                                                       00185900
*        ZC=PLISTVER(1);                                                00186000
*        DO ZL=1 TO LENGTH(ZC);              /* MUST BE NUMBER */       00186100
*          IF ZC(ZL:ZL)<'0' !                /* MUST BE NUMERIC */      00186200
*             ZC(ZL:ZL)>'9'                  /* MUST BE NUMERIC */      00186300
*            THEN                                                       00186400
*              ZCVAL='NUMERIC';              /* NUMERIC ERROR */        00186500
*        END;                                                           00186600
*        IF ZCVAL=''                                                    00186700
*          THEN                                                         00186800
*            DO;                             /* CHECK RANGE LIMITS */   00186900
*            IF FIXED(PLISTVER(1))>=XPLISTVER                           00187000
*              THEN                                                     00187100
*                XPLISTVER=FIXED(PLISTVER(1));                          00187200
*              ELSE                                                     00187300
*                DO;                                                    00187400
*              ZMS=' 8, PLISTVER='!!         /**KVALP* MSG*/            00187500
*                    PLISTVER(1)!!                                      00187600
*                  ', BUT PLISTVER OF '!!                               00187700
*                    CHAR(XPLISTVER)!!                                  00187800
*                  ' IS REQUIRED.';                                     00187900
*              ANS MSG('?IWMSRDRS ---> '!!ZMS);                         00188000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00188100
*              ZMACRET=8;                    /* MACRO ERROR */          00188200
*                END;                                                   00188300
*              IF XPLISTVER<0 !              /* LOW LIMIT */            00188400
*                 XPLISTVER>1                /* HIGH LIMIT */           00188500
*                THEN                                                   00188600
*                  ZCVAL='RANGE';            /* RANGE ERROR */          00188700
*            END;                                                       00188800
*        IF ZCVAL^=''                                                   00188900
*          THEN                                                         00189000
*            DO;                             /* RANGE ERROR */          00189100
*              ZXPLISTVER='';                /* RESET IN/OUTPUT */      00189200
*              ZMS=' 8, "PLISTVER '!!        /**KRNGP* MSG*/            00189300
*                  PLISTVER!!                                           00189400
*                  '" THE RANGE IS "0-1"'!!                             00189500
*                  ' FOR ARGUMENT 1.';                                  00189600
*              ANS MSG('?IWMSRDRS ---> '!!ZMS);                         00189700
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00189800
*              ZMACRET=8;                    /* MACRO ERROR */          00189900
*            END;                                                       00190000
*      END;                                                             00190100
*                                                                       00190200
*/********************************************************************/ 00190300
*/***PG.MF01  PROCESS MF MACRO FORMS                                 */ 00190400
*/********************************************************************/ 00190500
*/*PG.KKCTL01 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00190600
*  XMF='';                                                              00190700
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00190800
*  IF TRANSLATE(MF(1))                                                  00190900
*              = 'S'                         /* CHECK FOR KEYWORD */    00191000
*    THEN                                                               00191100
*      DO;                                                              00191200
*        XMF='S';                            /* SET XVARIABLE */        00191300
*        IF NUMBER(MF)>1                     /* CHECK POSITIONALS */    00191400
*          THEN                                                         00191500
*            DO;                                                        00191600
*              ZMS=' 8, "MF'!!               /**KPOSP* MSG*/            00191700
*                  MF!!                                                 00191800
*                  '" "MF"'!!                                           00191900
*                  ' CAN HAVE ONLY 1 ARGUMENT.';                        00192000
*              ANS MSG('?IWMSRDRS ---> '!!ZMS);                         00192100
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00192200
*              ZMACRET=8;                    /* MACRO ERROR */          00192300
*            END;                                                       00192400
*/*PG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00192500
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     00192600
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00192700
*  IF TRANSLATE(MF(1))                                                  00192800
*              = 'L'                         /* CHECK FOR KEYWORD */    00192900
*    THEN                                                               00193000
*      DO;                                                              00193100
*        XMF='L';                            /* SET XVARIABLE */        00193200
*        IF NUMBER(MF)>3                     /* CHECK POSITIONALS */    00193300
*          THEN                                                         00193400
*            DO;                                                        00193500
*              ZMS=' 8, "MF'!!               /**KPOSP* MSG*/            00193600
*                  MF!!                                                 00193700
*                  '" "MF"'!!                                           00193800
*                  ' CAN HAVE ONLY 3 ARGUMENTS.';                       00193900
*              ANS MSG('?IWMSRDRS ---> '!!ZMS);                         00194000
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00194100
*              ZMACRET=8;                    /* MACRO ERROR */          00194200
*            END;                                                       00194300
*/*PG.KKCTL10 -MF(L) SPECIAL CHECK-----------------------------------*/ 00194400
*        ZMAXINVOCLEN = LENGTH(MF) + 2;                                 00194500
*        IF PLISTVER ^= ''                                              00194600
*          THEN                                                         00194700
*            ZMAXINVOCLEN=ZMAXINVOCLEN + LENGTH(PLISTVER) + 8;          00194800
*        IF LENGTH(MACKEYS) > ZMAXINVOCLEN !                            00194900
*           MACLIST ^= ''                    /* CHECK FOR OTHER PARMS*/ 00195000
*          THEN                                                         00195100
*            DO;                                                        00195200
*              ZMS=' 8, THE "L" FORM OF "MF"'!! /**MFLP* MSG*/          00195300
*                  ' CAN ONLY HAVE'!!                                   00195400
*                  ' THE "PLISTVER" KEY'!!                              00195500
*                  ' SPECIFIED ON THE INVOCATION.';                     00195600
*              ANS MSG('?IWMSRDRS ---> '!!ZMS);                         00195700
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00195800
*              ZMACRET=8;                    /* MACRO ERROR */          00195900
*            END;                                                       00196000
*/*PG.KXVAR03 NAME, OPT RQD INPUT, POS(2) -XVARIABLE-----------------*/ 00196100
*  XMFCTRL=MF(2);                            /* SET XVARIABLE */        00196200
*  IF MF(2)=''                               /* CHECK FOR NULL */       00196300
*   THEN                                                                00196400
*    DO;                                     /* KEY IS REQUIRED */      00196500
*        ZXMFCTRL='';                        /* RESET IN/OUTPUT */      00196600
*        ZMS=' 8, WHEN "L" IS SPECIFIED'!!                              00196700
*            ' FOR THE "MF" KEY, POSITIONAL'!!                          00196800
*            ' ARG 2 IS REQUIRED.';          /**KRQDP* MSG*/            00196900
*        ANS MSG('?IWMSRDRS ---> '!!ZMS);                               00197000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00197100
*        ZMACRET=8;                          /* MACRO ERROR */          00197200
*    END;                                                               00197300
*  ELSE                                                                 00197400
*    ZXMFCTRL='INPUT';                       /* SET IN/OUTPUT */        00197500
*/*PG.KXVAR13 VALUE, OPT INPUT, POS(3) -XVARIABLE--------------------*/ 00197600
*  ZXMFATTR='INPUT';                         /* SET IN/OUTPUT */        00197700
*  XMFATTR='BDY(DWORD)';                     /* SET DEFAULT */          00197800
*  IF MF(3)^=''                              /* CHECK FOR NULL */       00197900
*    THEN                                                               00198000
*      XMFATTR=MF(3);                        /* SET XVARIABLE */        00198100
*/*PG.KCK01 VALUE, OPT INPUT, POS(3) -CHARACTER LENGTH---------------*/ 00198200
*  IF ZXMFATTR^='' &                         /* NOT IN/OUTPUT */        00198300
*     LENGTH(XMFATTR)>60                                                00198400
*    THEN                                                               00198500
*      DO;                                                              00198600
*        ZXMFATTR='';                        /* RESET IN/OUTPUT */      00198700
*        ZMS=' 8, "MF'!!                     /**KLNGP* MSG*/            00198800
*            MF!!                                                       00198900
*            '" ARGUMENT 3 EXCEEDS THE MAXIMUM'!!                       00199000
*            ' LENGTH OF 60 CHARACTERS. ';                              00199100
*        ANS MSG('?IWMSRDRS ---> '!!ZMS);                               00199200
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00199300
*        ZMACRET=8;                          /* MACRO ERROR */          00199400
*      END;                                                             00199500
*/*PG.KKCTL02 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00199600
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     00199700
*/*PG.KKCTL03 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00199800
*  IF TRANSLATE(MF(1))                                                  00199900
*              = 'E'                         /* CHECK FOR KEYWORD */    00200000
*    THEN                                                               00200100
*      DO;                                                              00200200
*        XMF='E';                            /* SET XVARIABLE */        00200300
*        IF NUMBER(MF)>3                     /* CHECK POSITIONALS */    00200400
*          THEN                                                         00200500
*            DO;                                                        00200600
*              ZMS=' 8, "MF'!!               /**KPOSP* MSG*/            00200700
*                  MF!!                                                 00200800
*                  '" "MF"'!!                                           00200900
*                  ' CAN HAVE ONLY 3 ARGUMENTS.';                       00201000
*              ANS MSG('?IWMSRDRS ---> '!!ZMS);                         00201100
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00201200
*              ZMACRET=8;                    /* MACRO ERROR */          00201300
*            END;                                                       00201400
*/*PG.KXVAR03 NAME, OPT RQD INPUT, POS(2) -XVARIABLE-----------------*/ 00201500
*  XMFCTRL=MF(2);                            /* SET XVARIABLE */        00201600
*  IF MF(2)=''                               /* CHECK FOR NULL */       00201700
*   THEN                                                                00201800
*    DO;                                     /* KEY IS REQUIRED */      00201900
*        ZXMFCTRL='';                        /* RESET IN/OUTPUT */      00202000
*        ZMS=' 8, WHEN "E" IS SPECIFIED'!!                              00202100
*            ' FOR THE "MF" KEY, POSITIONAL'!!                          00202200
*            ' ARG 2 IS REQUIRED.';          /**KRQDP* MSG*/            00202300
*        ANS MSG('?IWMSRDRS ---> '!!ZMS);                               00202400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00202500
*        ZMACRET=8;                          /* MACRO ERROR */          00202600
*    END;                                                               00202700
*  ELSE                                                                 00202800
*    ZXMFCTRL='INPUT';                       /* SET IN/OUTPUT */        00202900
*/*PG.KKWRD02 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 00203000
*  XMFSCK='';                                /* RESET XVARIABLE */      00203100
*  IF TRANSLATE(MF(3))                                                  00203200
*              = 'COMPLETE'                  /* CHECK FOR KEYWORD */    00203300
*    THEN                                                               00203400
*      XMFSCK = 'COMPLETE';                  /* SET XVARIABLE */        00203500
*/*PG.KKWRD03 VALUE, OPT INPUT, ME KEYWORD -SINGLE KEYWORD-----------*/ 00203600
*  ZXMFSCK='INPUT';                          /* SET IN/OUTPUT */        00203700
*  IF XMFSCK=''                              /* CHECK FOR KEYWORD */    00203800
*    THEN                                                               00203900
*      DO;                                   /* KEYWORD NOT ENTERED */  00204000
*        XMFSCK='COMPLETE';                  /* SET DEFAULT */          00204100
*        IF MF(3)^=''                                                   00204200
*          THEN                                                         00204300
*            DO;                                                        00204400
*              ZXMFSCK='';                   /* RESET IN/OUTPUT */      00204500
*              ZMS=' 8, "MF'!!               /**KUKWP* MSG*/            00204600
*                  MF!!'"'!!                                            00204700
*                  ' ARGUMENT 3 IS AN UNKNOWN KEYWORD. '!!              00204800
*                  ' VALID KEYWORD CHOICE(S) ARE:'!!                    00204900
*                  ' "COMPLETE".';           /* VALID KEYWORD */        00205000
*              ANS MSG('?IWMSRDRS ---> '!!ZMS);                         00205100
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00205200
*              ZMACRET=8;                    /* MACRO ERROR */          00205300
*            END;                                                       00205400
*      END;                                                             00205500
*/*PG.KKCTL05 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00205600
*      END;  /**** END OF A MUTUALLY EXCLUSIVE KYWRDCTL DO GROUP */     00205700
*/*PG.KKCTL06 VALUE, OPT INPUT, ME KYWRDCTL -KEYWORD CONTROL---------*/ 00205800
*  IF MF='MF'                                                           00205900
*    ! MF='()'                               /*CHECK ENTRY*/            00206000
*     THEN                                                              00206100
*       DO;                                                             00206200
*              ZMS=' 8, THE "MF" KEY'!!      /**KOPTP* MSG*/            00206300
*                  ' MUST CONTAIN ONE'!!                                00206400
*                  ' (OR MORE) ARGUMENT(S).';                           00206500
*              ANS MSG('?IWMSRDRS ---> '!!ZMS);                         00206600
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00206700
*              ZMACRET=8;                    /* MACRO ERROR */          00206800
*       END;                                                            00206900
*  ELSE                                                                 00207000
*    DO;                                                                00207100
*      ZXMF='INPUT';                         /* SET IN/OUTPUT */        00207200
*      IF XMF=''                             /* CHECK FOR KEYWORD */    00207300
*        THEN                                                           00207400
*          DO;                               /* KEYWORD NOT ENTERED */  00207500
*            XMF='S';                        /* SET DEFAULT */          00207600
*            XMFSCK='COMPLETE';              /* COMPLETE CHECKING */    00207700
*            IF MF(1)^=''                    /* CHECK FOR KEYWORD */    00207800
*              THEN                                                     00207900
*                DO;                                                    00208000
*                  ZXMF='';                  /* RESET IN/OUTPUT */      00208100
*              ZMS=' 8, "MF'!!               /**KUKWP* MSG*/            00208200
*                  MF!!'"'!!                                            00208300
*                  ' ARGUMENT 1 IS AN UNKNOWN KEYWORD. '!!              00208400
*                  ' VALID KEYWORD CHOICE(S) ARE:'!!                    00208500
*                  ' "S",'!!                 /* VALID KEYWORD */        00208600
*                  ' "L",'!!                 /* VALID KEYWORD */        00208700
*                  ' OR "E".';               /* VALID KEYWORD */        00208800
*              ANS MSG('?IWMSRDRS ---> '!!ZMS);                         00208900
*              ANS(COMMENT(ZMS)) COL(MACLMAR);                          00209000
*              ZMACRET=8;                    /* MACRO ERROR */          00209100
*                END;                                                   00209200
*          END;                                                         00209300
*    END;                                                               00209400
*/********************************************************************/ 00209500
*/***PD.P01 FULL DEFAULT CHECKING                                    */ 00209600
*/********************************************************************/ 00209700
*  IF PLISTVER=''                                                       00209800
*     ! PLISTVER(1)='IMPLIED_VERSION'                                   00209900
*    THEN                                                               00210000
*      ZC='ON';                              /* DEFAULT FLAG ON */      00210100
*    ELSE                                                               00210200
*      ZC='OFF';                             /* DEFAULT FLAG OFF */     00210300
*/********************************************************************/ 00210400
*/***PD.P02 DEFAULT ECHO                                             */ 00210500
*/********************************************************************/ 00210600
*/*PD.P02 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 00210700
*  IF XMF^='L'                                                          00210800
*    THEN                                                               00210900
*      DO;                                   /* FULL SYNTAX CHECK */    00211000
*        ANS('/*DEFAULT(S): */')                                        00211100
*           NORESCAN COL(MACLMAR+5);                                    00211200
*/*PD.KXVAR01 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 00211300
*  XHOST='';                                                            00211400
*  IF HOST(1)=''                                                        00211500
*    THEN                                                               00211600
*      DO;                                                              00211700
*        XHOST='NO_HOST';                    /* SET DEFAULT */          00211800
*        ZC='ON';                            /* DEFAULT FLAG ON */      00211900
*      END;                                                             00212000
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 00212100
*  IF XPLISTVER>=1                                                      00212200
*    THEN                                                               00212300
*      DO;                                                              00212400
*  IF XHOST^=''                                                         00212500
*    THEN DO;                                                           00212600
*      ANS('/* HOST('!!                                                 00212700
*          XHOST!!                                                      00212800
*          ')*/')                                                       00212900
*          NORESCAN COL(MACLMAR+5);                                     00213000
*      XHOST = '';                                                      00213100
*    END;                                                               00213200
*      END;                                                             00213300
*/*PD.DFLT02 PRINT DEFAULT(S) IF APPROPRIATE ------------------------*/ 00213400
*  IF PLISTVER=''                                                       00213500
*    THEN DO;                                                           00213600
*      ANS('/* PLISTVER('!!                                             00213700
*          CHAR(XPLISTVER)!!                                            00213800
*          ')*/')                                                       00213900
*          NORESCAN COL(MACLMAR+5);                                     00214000
*    END;                                                               00214100
*  IF ZC='OFF'                               /*NO DEFAULTS TAKEN */     00214200
*    THEN                                                               00214300
*      ANS('/* NONE. */')                                               00214400
*         NORESCAN COL(MACLMAR+5);                                      00214500
*/*PD.P04 END DEFAULT ECHO ------------------------------------------*/ 00214600
*      END;                                                             00214700
*/********************************************************************/ 00214800
*/*PB.SYSL01 INVOKE SP LEVEL AND SYSTEM STATE MACROS                 */ 00214900
*/********************************************************************/ 00215000
*  DCL SYSSPLV CHAR EXTERNAL; DEACT SYSSPLV;/* SPLEVEL 1,2,3         */ 00215100
*  DCL SYSASCE CHAR EXTERNAL; DEACT SYSASCE;/* STATE ANY P AR */        00215200
*  DCL SYSAM64 CHAR EXTERNAL; DEACT SYSAM64;                            00215300
*  DCL SYSALVL FIXED EXTERNAL; DEACT SYSALVL;                           00215400
*                                                                       00215500
*  IF SYSASCE=''                                                        00215600
*    THEN                                                               00215700
*      DO;                                                              00215800
*        IF SYSSPLV=''                                                  00215900
*          THEN                                                         00216000
*            ANS('?SPLEVEL  (TEST);') COL(MACLMAR);                     00216100
*        IF SYSSPLV^='1' & SYSSPLV^='2'                                 00216200
*          THEN                                                         00216300
*            ANS('?SYSSTATE (TEST);') COL(MACLMAR);                     00216400
*          ELSE                                                         00216500
*            SYSASCE='P';                    /* SYSSTATE DEFAULT*/      00216600
*      END;                                                             00216700
*/********************************************************************/ 00216800
*/***PG.P01 FULL MACRO SYNTAX CHECKING                               */ 00216900
*/********************************************************************/ 00217000
*/*PG.P02 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 00217100
*  IF XMF^='L'                                                          00217200
*    THEN                                                               00217300
*      DO;                                   /* FULL SYNTAX CHECK */    00217400
*/*PG.P03 EXCESSIVE POSITIONAL ARGUMENTS-----------------------------*/ 00217500
*  IF NUMBER(MACLIST)>0                      /* CHECK POSITIONALS */    00217600
*    THEN                                                               00217700
*      DO;                                                              00217800
*        ZMS=' 8, POSITIONAL ARGUMENT(S),'!! /**PPOSP* MSG*/            00217900
*            ' "'!!MACLIST!!'"'!!                                       00218000
*            ' CANNOT BE USED.'!!                                       00218100
*            ' NO POSITIONAL ARGUMENTS'!!                               00218200
*            ' ARE ALLOWED.';                                           00218300
*        ANS MSG('?IWMSRDRS ---> '!!ZMS);                               00218400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00218500
*        ZMACRET=8;                          /* MACRO ERROR */          00218600
*      END;                                                             00218700
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 00218800
*  IF NUMBER(LOCATION)>1                     /* CHECK POSITIONALS */    00218900
*    THEN                                                               00219000
*      DO;                                                              00219100
*        ZMS=' 8, "LOCATION'!!               /**KPOSP* MSG*/            00219200
*            LOCATION!!                                                 00219300
*            '" "LOCATION"'!!                                           00219400
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              00219500
*        ANS MSG('?IWMSRDRS ---> '!!ZMS);                               00219600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00219700
*        ZMACRET=8;                          /* MACRO ERROR */          00219800
*      END;                                                             00219900
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 00220000
*  XLOCATION=LOCATION(1);                    /* SET XVARIABLE */        00220100
*  IF LOCATION(1)=''                         /* CHECK FOR NULL */       00220200
*   THEN                                                                00220300
*    DO;                                     /* KEY IS REQUIRED */      00220400
*        ZXLOCATION='';                      /* RESET IN/OUTPUT */      00220500
*        ZMS=' 8,  '!!                                                  00220600
*            ' "LOCATION" KEY AND ITS'!!                                00220700
*            ' ARGUMENT ARE REQUIRED.';      /**KRQDP* MSG*/            00220800
*        ANS MSG('?IWMSRDRS ---> '!!ZMS);                               00220900
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00221000
*        ZMACRET=8;                          /* MACRO ERROR */          00221100
*    END;                                                               00221200
*  ELSE                                                                 00221300
*    ZXLOCATION='INPUT';                     /* SET IN/OUTPUT */        00221400
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 00221500
*  IF NUMBER(NETWORK_ID)>1                   /* CHECK POSITIONALS */    00221600
*    THEN                                                               00221700
*      DO;                                                              00221800
*        ZMS=' 8, "NETWORK_ID'!!             /**KPOSP* MSG*/            00221900
*            NETWORK_ID!!                                               00222000
*            '" "NETWORK_ID"'!!                                         00222100
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              00222200
*        ANS MSG('?IWMSRDRS ---> '!!ZMS);                               00222300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00222400
*        ZMACRET=8;                          /* MACRO ERROR */          00222500
*      END;                                                             00222600
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 00222700
*  XNETWORK_ID=NETWORK_ID(1);                /* SET XVARIABLE */        00222800
*  IF NETWORK_ID(1)=''                       /* CHECK FOR NULL */       00222900
*   THEN                                                                00223000
*    DO;                                     /* KEY IS REQUIRED */      00223100
*        ZXNETWORK_ID='';                    /* RESET IN/OUTPUT */      00223200
*        ZMS=' 8,  '!!                                                  00223300
*            ' "NETWORK_ID" KEY AND ITS'!!                              00223400
*            ' ARGUMENT ARE REQUIRED.';      /**KRQDP* MSG*/            00223500
*        ANS MSG('?IWMSRDRS ---> '!!ZMS);                               00223600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00223700
*        ZMACRET=8;                          /* MACRO ERROR */          00223800
*    END;                                                               00223900
*  ELSE                                                                 00224000
*    ZXNETWORK_ID='INPUT';                   /* SET IN/OUTPUT */        00224100
*/*PG.KXVAR01 NAME, RQD INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 00224200
*  IF NUMBER(LUNAME)>1                       /* CHECK POSITIONALS */    00224300
*    THEN                                                               00224400
*      DO;                                                              00224500
*        ZMS=' 8, "LUNAME'!!                 /**KPOSP* MSG*/            00224600
*            LUNAME!!                                                   00224700
*            '" "LUNAME"'!!                                             00224800
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              00224900
*        ANS MSG('?IWMSRDRS ---> '!!ZMS);                               00225000
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00225100
*        ZMACRET=8;                          /* MACRO ERROR */          00225200
*      END;                                                             00225300
*/*PG.KXVAR03 NAME, RQD INPUT, KEYS -XVARIABLE-----------------------*/ 00225400
*  XLUNAME=LUNAME(1);                        /* SET XVARIABLE */        00225500
*  IF LUNAME(1)=''                           /* CHECK FOR NULL */       00225600
*   THEN                                                                00225700
*    DO;                                     /* KEY IS REQUIRED */      00225800
*        ZXLUNAME='';                        /* RESET IN/OUTPUT */      00225900
*        ZMS=' 8,  '!!                                                  00226000
*            ' "LUNAME" KEY AND ITS'!!                                  00226100
*            ' ARGUMENT ARE REQUIRED.';      /**KRQDP* MSG*/            00226200
*        ANS MSG('?IWMSRDRS ---> '!!ZMS);                               00226300
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00226400
*        ZMACRET=8;                          /* MACRO ERROR */          00226500
*    END;                                                               00226600
*  ELSE                                                                 00226700
*    ZXLUNAME='INPUT';                       /* SET IN/OUTPUT */        00226800
*/*PG.KXVAR01 NAME, OPT INPUT, KEYS -EXCESSIVE ARGUMENTS-------------*/ 00226900
*  IF HOST='HOST' ! HOST='()'                /*CHECK ENTRY*/            00227000
*    THEN                                                               00227100
*      DO;                                                              00227200
*        ZMS=' 8, THE "HOST" KEY'!!          /**KOPTP* MSG*/            00227300
*            ' MUST CONTAIN ONE'!!                                      00227400
*            ' (OR MORE) ARGUMENT(S).';                                 00227500
*        ANS MSG('?IWMSRDRS ---> '!!ZMS);                               00227600
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00227700
*        ZMACRET=8;                          /* MACRO ERROR */          00227800
*      END;                                                             00227900
*  IF NUMBER(HOST)>1                         /* CHECK POSITIONALS */    00228000
*    THEN                                                               00228100
*      DO;                                                              00228200
*        ZMS=' 8, "HOST'!!                   /**KPOSP* MSG*/            00228300
*            HOST!!                                                     00228400
*            '" "HOST"'!!                                               00228500
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              00228600
*        ANS MSG('?IWMSRDRS ---> '!!ZMS);                               00228700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00228800
*        ZMACRET=8;                          /* MACRO ERROR */          00228900
*      END;                                                             00229000
*/*PG.KXVAR13 NAME, OPT INPUT, KEYS -XVARIABLE-----------------------*/ 00229100
*  ZXHOST='INPUT';                           /* SET IN/OUTPUT */        00229200
*  XHOST='NO_HOST';                          /* SET DEFAULT */          00229300
*  IF HOST(1)^=''                            /* CHECK FOR NULL */       00229400
*    THEN                                                               00229500
*      XHOST=HOST(1);                        /* SET XVARIABLE */        00229600
*/*PG.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 00229700
*  IF RETCODE='RETCODE' ! RETCODE='()'       /*CHECK ENTRY*/            00229800
*    THEN                                                               00229900
*      DO;                                                              00230000
*        ZMS=' 8, THE "RETCODE" KEY'!!       /**KOPTP* MSG*/            00230100
*            ' MUST CONTAIN ONE'!!                                      00230200
*            ' (OR MORE) ARGUMENT(S).';                                 00230300
*        ANS MSG('?IWMSRDRS ---> '!!ZMS);                               00230400
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00230500
*        ZMACRET=8;                          /* MACRO ERROR */          00230600
*      END;                                                             00230700
*  IF NUMBER(RETCODE)>1                      /* CHECK POSITIONALS */    00230800
*    THEN                                                               00230900
*      DO;                                                              00231000
*        ZMS=' 8, "RETCODE'!!                /**KPOSP* MSG*/            00231100
*            RETCODE!!                                                  00231200
*            '" "RETCODE"'!!                                            00231300
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              00231400
*        ANS MSG('?IWMSRDRS ---> '!!ZMS);                               00231500
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00231600
*        ZMACRET=8;                          /* MACRO ERROR */          00231700
*      END;                                                             00231800
*/*PG.KXVAR15 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 00231900
*  IF RETCODE(1)^=''                         /* CHECK FOR NULL */       00232000
*    THEN                                                               00232100
*      DO;                                                              00232200
*        XRETCODE=RETCODE(1);                /* SET XVARIABLE */        00232300
*        ZXRETCODE='OUTPUT';                 /* SET OUTPUT */           00232400
*      END;                                                             00232500
*  ELSE                                                                 00232600
*    IF ZXRETCODE^=''                                                   00232700
*      THEN                                                             00232800
*        ZXRETCODE='';                       /* RESET OUTPUT */         00232900
*/*PG.KXVAR01 NAME, OPT OUTPUT, KEYS -EXCESSIVE ARGUMENTS------------*/ 00233000
*  IF RSNCODE='RSNCODE' ! RSNCODE='()'       /*CHECK ENTRY*/            00233100
*    THEN                                                               00233200
*      DO;                                                              00233300
*        ZMS=' 8, THE "RSNCODE" KEY'!!       /**KOPTP* MSG*/            00233400
*            ' MUST CONTAIN ONE'!!                                      00233500
*            ' (OR MORE) ARGUMENT(S).';                                 00233600
*        ANS MSG('?IWMSRDRS ---> '!!ZMS);                               00233700
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00233800
*        ZMACRET=8;                          /* MACRO ERROR */          00233900
*      END;                                                             00234000
*  IF NUMBER(RSNCODE)>1                      /* CHECK POSITIONALS */    00234100
*    THEN                                                               00234200
*      DO;                                                              00234300
*        ZMS=' 8, "RSNCODE'!!                /**KPOSP* MSG*/            00234400
*            RSNCODE!!                                                  00234500
*            '" "RSNCODE"'!!                                            00234600
*            ' CAN HAVE ONLY 1 ARGUMENT.';                              00234700
*        ANS MSG('?IWMSRDRS ---> '!!ZMS);                               00234800
*        ANS(COMMENT(ZMS)) COL(MACLMAR);                                00234900
*        ZMACRET=8;                          /* MACRO ERROR */          00235000
*      END;                                                             00235100
*/*PG.KXVAR15 NAME, OPT OUTPUT, KEYS -XVARIABLE----------------------*/ 00235200
*  IF RSNCODE(1)^=''                         /* CHECK FOR NULL */       00235300
*    THEN                                                               00235400
*      DO;                                                              00235500
*        XRSNCODE=RSNCODE(1);                /* SET XVARIABLE */        00235600
*        ZXRSNCODE='OUTPUT';                 /* SET OUTPUT */           00235700
*      END;                                                             00235800
*  ELSE                                                                 00235900
*    IF ZXRSNCODE^=''                                                   00236000
*      THEN                                                             00236100
*        ZXRSNCODE='';                       /* RESET OUTPUT */         00236200
*/*PG.P04 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 00236300
*      END;                                  /* END COMPLETE CHECKING*/ 00236400
*/********************************************************************/ 00236500
*/***PE.MR01 GENERATE CODE IF ZMACRET=0                              */ 00236600
*/********************************************************************/ 00236700
*  IF ZMACRET = 0                                                       00236800
*    THEN                                                               00236900
*      DO;                                                              00237000
*/********************************************************************/ 00237100
*/***PE.PR01 PRINT CONTROLS, DEFAULT IS YES                          */ 00237200
*/********************************************************************/ 00237300
*  ANS(MACCONC!!'LIST PUSH NOECHO;') NORESCAN COL(MACLMAR);             00237400
*  IF ZPRINT='NO'                            /* PRINT IS OFF */         00237500
*    THEN                                                               00237600
*      ANS(MACCONC!!'LIST OFF NOECHO;') NORESCAN COL(MACLMAR);          00237700
*    ELSE                                                               00237800
*      ANS(MACCONC!!'LIST ON NOECHO;')  NORESCAN COL(MACLMAR);          00237900
*/********************************************************************/ 00238000
*/*PE.DO02 OUTER MACRO DO STATEMENT----------------------------------*/ 00238100
*  IF XMF^='L'                                                          00238200
*    THEN                                                               00238300
*      ANS('DO; /* IWMSRDRS-PLISTVER */')                               00238400
*          NORESCAN COL(MACLMAR);                                       00238500
*/*MCMPLS01 RFY 15*/                                                    00238600
*  IF XMF^='L' & ZMACRET = 0                                            00238700
*    THEN                                                               00238800
*      ANS('RFY GPR15F RSTD;') NORESCAN COL(MACLMAR);                   00238900
*/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/  00239000
       DCL EHAMAPS CHAR EXTERNAL;                                       00239100
       IF INDEX(EHAMAPS,'XM@')=0 THEN                                   00239200
         EHAMAPS=EHAMAPS!!'XM@,';                                       00239300
       IF INDEX(EHAREGS,'00F')=0                                        00239400
         THEN                                                           00239500
           EHAREGS=EHAREGS!!'00F'; /* GPR00F                      */    00239600
       IF INDEX(EHAREGS,'15F')=0                                        00239700
         THEN                                                           00239800
           EHAREGS=EHAREGS!!'15F'; /* GPR15F                      */    00239900
*/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/  00240000
*/*PL.LL01 ?IWMSRDRS MF=L PARAMETER LIST-----------------------------*/ 00240100
*  IF XMF='L'                                                           00240200
*    THEN                                                               00240300
*      DO;                                                              00240400
*        ANS('DCL 1 '!!XMFCTRL!!' '!!XMFATTR!!', '!!                    00240500
*            '/* ?IWMSRDRS PARM LIST*/')                                00240600
*            NORESCAN COL(MACLMAR);                                     00240700
*/*PL.LL02  XVERSION FIXED(8) INPUT----------------------------------*/ 00240800
*        ANS('2 '!!XMFCTRL!!                                            00240900
*            '_XVERSION FIXED(8), '!!                                   00241000
*            '/* INPUT XVERSION*/')                                     00241100
*            NORESCAN COL(MACLMAR+2);                                   00241200
*/*PL.LL13  XLUNAME CHAR(8) INPUT------------------------------------*/ 00241300
*        ANS('2 '!!XMFCTRL                                              00241400
*         !! '_XLUNAME CHAR(8), '                                       00241500
*         !! '/* '!!ZXLUNAME                                            00241600
*         !! ' XLUNAME */'                                              00241700
*            ) NORESCAN COL(MACLMAR+2);                                 00241800
*/*PL.LL13  XNETWORK_ID CHAR(8) INPUT--------------------------------*/ 00241900
*        ANS('2 '!!XMFCTRL                                              00242000
*         !! '_XNETWORK_ID CHAR(8), '                                   00242100
*         !! '/* '!!ZXNETWORK_ID                                        00242200
*         !! ' XNETWORK_ID */'                                          00242300
*            ) NORESCAN COL(MACLMAR+2);                                 00242400
*/*PL.LL13  XLOCATION CHAR(18) INPUT---------------------------------*/ 00242500
*        ANS('2 '!!XMFCTRL                                              00242600
*         !! '_XLOCATION CHAR(18), '                                    00242700
*         !! '/* '!!ZXLOCATION                                          00242800
*         !! ' XLOCATION */'                                            00242900
*            ) NORESCAN COL(MACLMAR+2);                                 00243000
*/*PL.LL13  XRSV001A CHAR(4) RESERVED--------------------------------*/ 00243100
*        ANS('2 '!!XMFCTRL                                              00243200
*         !! '_XRSV001A CHAR(4), '                                      00243300
*         !! '/* RESERVED */'                                           00243400
*            ) NORESCAN COL(MACLMAR+2);                                 00243500
*/*PL.LPVER01 -------------------------------------------------------*/ 00243600
*  IF XPLISTVER>=1                                                      00243700
*    THEN                                                               00243800
*      DO;                                                              00243900
*/*PL.LL13  XRSV0023 CHAR(1) RESERVED--------------------------------*/ 00244000
*        ANS('2 '!!XMFCTRL                                              00244100
*         !! '_XRSV0023 CHAR(1), '                                      00244200
*         !! '/* RESERVED */'                                           00244300
*            ) NORESCAN COL(MACLMAR+2);                                 00244400
*/*PL.LPVER02 -------------------------------------------------------*/ 00244500
*      END;                                                             00244600
*/*PL.LPVER01 -------------------------------------------------------*/ 00244700
*  IF XPLISTVER>=1                                                      00244800
*    THEN                                                               00244900
*      DO;                                                              00245000
*/*PL.LL02  XPLISTLEN FIXED(16) BDY(BYTE) INPUT----------------------*/ 00245100
*        ANS('2 '!!XMFCTRL!!                                            00245200
*            '_XPLISTLEN FIXED(16) BDY(BYTE), '!!                       00245300
*            '/* INPUT XPLISTLEN*/')                                    00245400
*            NORESCAN COL(MACLMAR+2);                                   00245500
*/*PL.LPVER02 -------------------------------------------------------*/ 00245600
*      END;                                                             00245700
*/*PL.LPVER01 -------------------------------------------------------*/ 00245800
*  IF XPLISTVER>=1                                                      00245900
*    THEN                                                               00246000
*      DO;                                                              00246100
*/*PL.LL13  XRSV002A CHAR(2) RESERVED--------------------------------*/ 00246200
*        ANS('2 '!!XMFCTRL                                              00246300
*         !! '_XRSV002A CHAR(2), '                                      00246400
*         !! '/* RESERVED */'                                           00246500
*            ) NORESCAN COL(MACLMAR+2);                                 00246600
*/*PL.LPVER02 -------------------------------------------------------*/ 00246700
*      END;                                                             00246800
*/*PL.LPVER01 -------------------------------------------------------*/ 00246900
*  IF XPLISTVER>=1                                                      00247000
*    THEN                                                               00247100
*      DO;                                                              00247200
*/*PL.LL13 ADDR XHOST PTR(31) INPUT ADDR-----------------------------*/ 00247300
*        ANS('2 '!!XMFCTRL                                              00247400
*         !! '_XHOST_ADDR PTR(31), '                                    00247500
*         !! '/* '!!ZXHOST_ADDR                                         00247600
*         !! ' XHOST_ADDR */'                                           00247700
*            ) NORESCAN COL(MACLMAR+2);                                 00247800
*/*PL.LPVER02 -------------------------------------------------------*/ 00247900
*      END;                                                             00248000
*/*PL.LL18 ----------------------------------------------------------*/ 00248100
*        ANS('2 * CHAR(0);')                                            00248200
*            NORESCAN COL(MACLMAR+2);                                   00248300
*/*PL.LL17 END OF MF=L PARAMETER LIST--------------------------------*/ 00248400
*      END;                                                             00248500
*/*PL.L01 MACRO WORK VARIABLES---------------------------------------*/ 00248600
*  DCL ZPRMLINE CHAR;          /* ZPRM ARRAY ENTRY ACCUMULATOR      */  00248700
*  DEACT ZPRMLINE;                                                      00248800
*  DCL ZNDX CHAR;              /* UNIQUE LIST STRUCTURE NAME        */  00248900
*  DEACT ZNDX;                                                          00249000
*  ZNDX=MACINDEX;              /* MACINDEX                          */  00249100
*  DCL XVERSION CHAR;                                                   00249200
*  DEACT XVERSION;                                                      00249300
*/*PL.L02 ?IWMSRDRS PARAMETER LIST-----------------------------------*/ 00249400
*  IF XMF^='L'                                                          00249500
*    THEN                                                               00249600
*      DO;                                                              00249700
*/*PL.L03 ?IWMSRDRS PARAMETER LIST-----------------------------------*/ 00249800
*        IF XMF='S'                                                     00249900
*          THEN                                                         00250000
*            XMFCTRL='#ZPLIST';                                         00250100
*/*PL.L04 ?IWMSRDRS PARAMETER LIST-----------------------------------*/ 00250200
*        ZPRMLINE='DCL 1 #Z'!!ZNDX!!' DEF('!!                           00250300
*                 XMFCTRL!!'),'!!                                       00250400
*                 ' /* ?IWMSRDRS PARM LIST*/';                          00250500
*/*PL.L05 ADDR XVERSION FIXED(8) INPUT-------------------------------*/ 00250600
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             00250700
*                 '_XVERSION FIXED(8), '!!                              00250800
*                 '/* INPUT XVERSION*/';                                00250900
*/*PL.L08  XLUNAME CHAR(8) INPUT-------------------------------------*/ 00251000
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             00251100
*                 '_XLUNAME CHAR(8), '!!                                00251200
*                 '/* '!!ZXLUNAME!!                                     00251300
*                 ' XLUNAME */';                                        00251400
*/*PL.L08  XNETWORK_ID CHAR(8) INPUT---------------------------------*/ 00251500
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             00251600
*                 '_XNETWORK_ID CHAR(8), '!!                            00251700
*                 '/* '!!ZXNETWORK_ID!!                                 00251800
*                 ' XNETWORK_ID */';                                    00251900
*/*PL.L08  XLOCATION CHAR(18) INPUT----------------------------------*/ 00252000
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             00252100
*                 '_XLOCATION CHAR(18), '!!                             00252200
*                 '/* '!!ZXLOCATION!!                                   00252300
*                 ' XLOCATION */';                                      00252400
*/*PL.L08  XRSV001A CHAR(4) RESERVED---------------------------------*/ 00252500
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             00252600
*                 '_XRSV001A CHAR(4), '!!                               00252700
*                 '/* RESERVED */';                                     00252800
*/*PL.LPVER03 -------------------------------------------------------*/ 00252900
*  IF XPLISTVER>=1                                                      00253000
*    THEN                                                               00253100
*      DO;                                                              00253200
*/*PL.L08  XRSV0023 CHAR(1) RESERVED---------------------------------*/ 00253300
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             00253400
*                 '_XRSV0023 CHAR(1), '!!                               00253500
*                 '/* RESERVED */';                                     00253600
*/*PL.LPVER04 -------------------------------------------------------*/ 00253700
*      END;                                                             00253800
*/*PL.LPVER03 -------------------------------------------------------*/ 00253900
*  IF XPLISTVER>=1                                                      00254000
*    THEN                                                               00254100
*      DO;                                                              00254200
*/*PL.L05  XPLISTLEN FIXED(16) BDY(BYTE) INPUT-----------------------*/ 00254300
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             00254400
*                 '_XPLISTLEN FIXED(16) BDY(BYTE), '!!                  00254500
*                 '/* INPUT XPLISTLEN*/';                               00254600
*/*PL.LPVER04 -------------------------------------------------------*/ 00254700
*      END;                                                             00254800
*/*PL.LPVER03 -------------------------------------------------------*/ 00254900
*  IF XPLISTVER>=1                                                      00255000
*    THEN                                                               00255100
*      DO;                                                              00255200
*/*PL.L08  XRSV002A CHAR(2) RESERVED---------------------------------*/ 00255300
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             00255400
*                 '_XRSV002A CHAR(2), '!!                               00255500
*                 '/* RESERVED */';                                     00255600
*/*PL.LPVER04 -------------------------------------------------------*/ 00255700
*      END;                                                             00255800
*/*PL.LPVER03 -------------------------------------------------------*/ 00255900
*  IF XPLISTVER>=1                                                      00256000
*    THEN                                                               00256100
*      DO;                                                              00256200
*/*PL.L08 ADDR XHOST PTR(31) INPUT ADDR------------------------------*/ 00256300
*        ZPRMLINE=ZPRMLINE!!' 2 #Z'!!ZNDX!!                             00256400
*                 '_XHOST_ADDR PTR(31), '!!                             00256500
*                 '/* '!!ZXHOST_ADDR!!                                  00256600
*                 ' XHOST_ADDR */';                                     00256700
*/*PL.LPVER04 -------------------------------------------------------*/ 00256800
*      END;                                                             00256900
*/*PL.L11 CONSTANT TO ENSURE THAT LIST FORM IS LONG ENOUGH ----------*/ 00257000
*        ZPRMNUM=ZPRMNUM+1;                                             00257100
*        ZPRM(ZPRMNUM)=ZPRMLINE!!' 2 * CHAR(0);';                       00257200
*        IF XPLISTVER^=0                                                00257300
*           & XMF^='S'                                                  00257400
*          THEN                                                         00257500
*            DO;                                                        00257600
*              ZPRMNUM=ZPRMNUM+1;                                       00257700
*              ZPRM(ZPRMNUM)=                                           00257800
*               'DCL #Z'!!ZNDX!!'_LENCHECK FIXED(32) CONSTANT('!!       00257900
*               'LENGTH('!!XMFCTRL!!')-LENGTH(#Z'!!ZNDX!!'));'!!        00258000
*               '/* CONSTANT TO ENSURE THAT THE LIST FORM'!!            00258100
*               ' IS LONG ENOUGH */';                                   00258200
*            END;                                                       00258300
*/*PL.L12 PARAMETER LIST SIZE----------------------------------------*/ 00258400
*        ZPLLEN=39;                                                     00258500
*        IF XPLISTVER>=1                                                00258600
*          THEN                                                         00258700
*            ZPLLEN=48;                                                 00258800
*        IF ZPRMMAX<ZPLLEN                                              00258900
*           & XMF^='E'                                                  00259000
*          THEN                                                         00259100
*            ZPRMMAX=ZPLLEN;                                            00259200
*/*PL.L13 -----------------------------------------------------------*/ 00259300
*      END;                                                             00259400
*/*PI.L01 XMF^='L' & XMFSCK='COMPLETE' ------------------------------*/ 00259500
*  IF XMF^='L'                                                          00259600
*    THEN                                                               00259700
*      DO;                                                              00259800
*        ANS('RFY GPR15F UNRSTD;') NORESCAN COL(MACLMAR);               00259900
*/*PI.L03 CLEAR PARAMETER LIST --------------------------------------*/ 00260000
*            ANS('#Z'!!ZNDX!!'=''''B;'!!                                00260100
*                '/* CLEAR PARAMETER AREA */')                          00260200
*                NORESCAN COL(MACLMAR);                                 00260300
*/*PI.L05A XVERSION FIXED(8)-----------------------------------------*/ 00260400
*        IF XPLISTVER^=0                                                00260500
*          THEN                                                         00260600
*            ANS('#Z'!!ZNDX!!'_XVERSION='!!CHAR(XPLISTVER)!!'; '!!      00260700
*                '/* XVERSION FIXED(8) */')                             00260800
*                NORESCAN COL(MACLMAR);                                 00260900
*/*PI.L21 XLUNAME NAME CHAR(8)---------------------------------------*/ 00261000
*        IF ZXLUNAME='INPUT' !                                          00261100
*           ZXLUNAME='INOUT'                                            00261200
*          THEN                                                         00261300
*            ANS('#Z'!!ZNDX!!'_XLUNAME='!!                              00261400
*                XLUNAME!!';'!!                                         00261500
*                '/* XLUNAME CHAR(8) */')                               00261600
*                NORESCAN COL(MACLMAR);                                 00261700
*/*PI.L21 XNETWORK_ID NAME CHAR(8)-----------------------------------*/ 00261800
*        IF ZXNETWORK_ID='INPUT' !                                      00261900
*           ZXNETWORK_ID='INOUT'                                        00262000
*          THEN                                                         00262100
*            ANS('#Z'!!ZNDX!!'_XNETWORK_ID='!!                          00262200
*                XNETWORK_ID!!';'!!                                     00262300
*                '/* XNETWORK_ID CHAR(8) */')                           00262400
*                NORESCAN COL(MACLMAR);                                 00262500
*/*PI.L21 XLOCATION NAME CHAR(18)------------------------------------*/ 00262600
*        IF ZXLOCATION='INPUT' !                                        00262700
*           ZXLOCATION='INOUT'                                          00262800
*          THEN                                                         00262900
*            ANS('#Z'!!ZNDX!!'_XLOCATION='!!                            00263000
*                XLOCATION!!';'!!                                       00263100
*                '/* XLOCATION CHAR(18) */')                            00263200
*                NORESCAN COL(MACLMAR);                                 00263300
*/*PI.LPVER01 -------------------------------------------------------*/ 00263400
*  IF XPLISTVER>=1                                                      00263500
*    THEN                                                               00263600
*      DO;                                                              00263700
*/*PI.L05C XPLISTLEN FIXED(16)---------------------------------------*/ 00263800
*        ANS('#Z'!!ZNDX!!'_XPLISTLEN=LENGTH(#Z'!!ZNDX!!');'!!           00263900
*            '/* XPLISTLEN FIXED(16) */')                               00264000
*            NORESCAN COL(MACLMAR);                                     00264100
*/*PI.LPVER02 -------------------------------------------------------*/ 00264200
*      END;                                                             00264300
*/*PI.LPVER01 -------------------------------------------------------*/ 00264400
*  IF XPLISTVER>=1                                                      00264500
*    THEN                                                               00264600
*      DO;                                                              00264700
*/*PI.L14 CHECK FOR * AS THE CHAR(64) ARGUMENT-----------------------*/ 00264800
*        IF TRANSLATE(XHOST)                                            00264900
*                    = 'NO_HOST'                                        00265000
*          THEN                                                         00265100
*            ZXHOST='';                      /* RESET INPUT/INOUT */    00265200
*/*PI.L15 ADDR(XHOST) CHAR(64)---------------------------------------*/ 00265300
*        IF ZXHOST^=''                                                  00265400
*          THEN                                                         00265500
*            ANS('#Z'!!ZNDX!!'_XHOST_ADDR='!!                           00265600
*                'ADDR('!!XHOST!!');'!!                                 00265700
*                '/* ADDR XHOST CHAR(64) */')                           00265800
*                NORESCAN COL(MACLMAR);                                 00265900
*/*PI.LPVER02 -------------------------------------------------------*/ 00266000
*      END;                                                             00266100
*/*PI.L31 INVOKE FUNCTION--------------------------------------------*/ 00266200
*              IF NUMBER(RSNCODE)>0                                     00266300
*                THEN                                                   00266400
*                  ANS('RFY GPR00F RSTD;') NORESCAN COL(MACLMAR);       00266500
*              IF NUMBER(RETCODE)>0                                     00266600
*                THEN                                                   00266700
*                  ANS('RFY GPR15F RSTD;') NORESCAN COL(MACLMAR);       00266800
*              ANS('RFY GPR01P RSTD;') NORESCAN COL(MACLMAR);           00266900
*              ANS('GPR01P=ADDR(#Z'!!ZNDX!!');'!!                       00267000
*                  '/* PARAMETER LIST */')                              00267100
*                  NORESCAN COL(MACLMAR);                               00267200
*              IF SYSASCE^='P'                                          00267300
*                THEN                                                   00267400
*                  ANS('SAR(GPR01P,ALET(#Z'!!ZNDX!!'));'!!              00267500
*                      '/* PARAMETER LIST AR */')                       00267600
*                      NORESCAN COL(MACLMAR);                           00267700
*/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/  00267800
         ANS('PC(XM@(96)!29);') SKIP COL(5);                            00267900
*/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/  00268000
*              ANS('RFY GPR01P UNRSTD;') NORESCAN COL(MACLMAR);         00268100
*/*PO.L08 XRETCODE RETURN CODE---------------------------------------*/ 00268200
*              IF NUMBER(RETCODE)>0                                     00268300
*                THEN                                                   00268400
*                    ANS(XRETCODE!!                                     00268500
*                     '=GPR15F; /* SET RETURN CODE */')                 00268600
*                      NORESCAN COL(MACLMAR);                           00268700
*/*PO.L09 XRSNCODE REASON CODE---------------------------------------*/ 00268800
*              IF NUMBER(RSNCODE)>0                                     00268900
*                THEN                                                   00269000
*                    ANS(XRSNCODE!!                                     00269100
*                     '=GPR00F; /* SET REASON CODE */')                 00269200
*                      NORESCAN COL(MACLMAR);                           00269300
*/*PO.L10 REMOVE REGISTER RESTRICTIONS-------------------------------*/ 00269400
*              IF NUMBER(RSNCODE)>0                                     00269500
*                THEN                                                   00269600
*              ANS('RFY GPR00F UNRSTD;') NORESCAN COL(MACLMAR);         00269700
*              IF NUMBER(RETCODE)>0                                     00269800
*                THEN                                                   00269900
*              ANS('RFY GPR15F UNRSTD;') NORESCAN COL(MACLMAR);         00270000
*/*PO.L12 END OF PARAMETER LIST PROCESSING---------------------------*/ 00270100
*      END;                                                             00270200
*/*PO.L13 IWMSRDRS USAGE INDICATOR-----------------------------------*/ 00270300
*  ZIWMSRDRS='YES';                          /* SET IWMSRDRS USED */    00270400
*/*PO.L15 END OF EXECUTABLE IWMSRDRS-PLISTVER MACRO------------------*/ 00270500
*  IF XMF^='L'                                                          00270600
*    THEN                                                               00270700
*      ANS('END; /* IWMSRDRS-PLISTVER */')                              00270800
*          NORESCAN COL(MACLMAR);                                       00270900
*/*PO.L16 RESTORE PRINT CONTROLS-------------------------------------*/ 00271000
*  ANS(MACCONC!!'LIST POP NOECHO;') NORESCAN COL(MACLMAR);              00271100
*/*PO.L17 END OF IWMSRDRS MACRO--------------------------------------*/ 00271200
*  ANS(MACCONC!!'SPACE;') NORESCAN COL(MACLMAR);                        00271300
*  ANS(' ') NORESCAN COL(MACLMAR);                                      00271400
*/*******************************************************************/  00271500
*/*  PO.L18 END OF CODE TO BE BYPASSED WHEN ZMACRET ^= 0            */  00271600
*/*******************************************************************/  00271700
*      END;                                                             00271800
*/*******************************************************************/  00271900
*/*  MVS ONLY     -CHECK IF AMG PARM LISTS ARE PRESENT              */  00272000
*/*               -ROUND MAX AMG PARM LIST TO DOUBLEWORD MULTIPLES  */  00272100
*/*******************************************************************/  00272200
*  IF ZPRMNUM>0                   /* NUMBER OF AMG PARM LIST ENTRIES*/  00272300
*    THEN                                                               00272400
*      DO;                                                              00272500
*        ZPRMMAX=((ZPRMMAX+7)/8)*8; /* ROUND PARM LIST SIZE UP TO       00272600
*                                      DOUBLEWORD MULTIPLES        */   00272700
*/*******************************************************************/  00272800
*/*  MVS -GENERATE PARM LIST DCL TO OVERLAY ?EPILOG'S ILIST AREA    */  00272900
*/*******************************************************************/  00273000
*        IF XMF ^= 'M' & XMF ^= 'E'                                     00273100
*          THEN                                                         00273200
*            DO;                                                        00273300
*              IF INDEX(EHALIST,',AMG,')=0 /* HAS DECLARE BEEN DONE?*/  00273400
*                THEN                                                   00273500
*                  DO;                                                  00273600
*                    ANS('?EPILOG                                       00273700
*                        STRING(''DCL #ZPLIST DEF(ILIST);'');');        00273800
*                    EHALIST=EHALIST!!',AMG,';                          00273900
*                  END;                                                 00274000
*            END;                                                       00274100
*/*******************************************************************/  00274200
*/*  MVS  -EXTRACT PARM LISTS FROM AMG GLOBAL MACRO ARRAYS          */  00274300
*/*******************************************************************/  00274400
*        IF XMF ^= 'M' & XMF ^= 'E'                                     00274500
*          THEN                                                         00274600
*            DO;                                                        00274700
*              IF ZPRMMAX>EHAMAXLEN                                     00274800
*                THEN                                                   00274900
*                  EHAMAXLEN=ZPRMMAX; /* SET MAX PARM LIST SIZE     */  00275000
*            END;                                                       00275100
*        DO ZI=1 TO ZPRMNUM; /* EXTRACT AMG PARM LISTS               */ 00275200
*          ANS('?EPILOG STRING('''!!ZPRM(ZI)!!''');')                   00275300
*              COL(MACLMAR);                                            00275400
*        END;                                                           00275500
*      END;                                                             00275600
*/*-----------------------------------------------------------------*/  00275700
*/*  MVS  -ENSURE THAT GPRS NEEDED BY AMG MACROS WILL BE PROVIDED   */  00275800
*/*        BY ?EPILOG                                               */  00275900
*/*-----------------------------------------------------------------*/  00276000
*        IF INDEX(EHAREGS,'01P')=0                                      00276100
*          THEN                                                         00276200
*            EHAREGS=EHAREGS!!'01P'; /* GPR01P                      */  00276300
*        IF INDEX(EHAREGS,'00F')=0                                      00276400
*          & NUMBER(RSNCODE)>0                                          00276500
*          THEN                                                         00276600
*            EHAREGS=EHAREGS!!'00F'; /* GPR00F                      */  00276700
*        IF INDEX(EHAREGS,'15F')=0                                      00276800
*          THEN                                                         00276900
*            EHAREGS=EHAREGS!!'15F'; /* GPR15F                      */  00277000
*  RETURN CODE(ZMACRET);                                                00277100
*%END IWMSRDRS;                                                         00277200
