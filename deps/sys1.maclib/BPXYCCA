*                                                                       00001000
* %DCL BPXYCCA_INCLUDED CHAR EXT;                                       00002000
* %DEACTIVATE BPXYCCA_INCLUDED;                                         00003000
* %IF BPXYCCA_INCLUDED = '' %THEN                                       00004000
* %DO;                                                                  00005000
*/* Macro made bi-lingual on 10027. CBGEN compile date 09235         */ 00006000
*% /*                                                                   00007000
         MACRO                                                          00008000
         BPXYCCA &DSECT=YES,&LIST=YES,&TITLE=YES,&CCA=YES               00009000
         GBLC  &BPXYCCA_INCLUDED                                        00010000
         GBLC  &ZCBPRINT                                                00011000
&BPXYCCA_INCLUDED SETC 'YES'                                            00012000
         AIF   ('&LIST' EQ 'NONE').P0                                   00013000
         AIF   ('&TITLE' EQ 'NO').P5                                    00014000
 TITLE   'BPXYCCA  - Msg Attributes for console_np service           '  00015000
.P5      ANOP                                                           00016000
**/ BPXYCCA_1:;                                                         00017000
*/****START OF SPECIFICATIONS****************************************** 00018000
*                                                                       00019000
*    $MAC (BPXYCCA) COMP(SCPX1) PROD(BPX):                              00020000
*                                                                       00021000
*01* MACRO NAME: BPXYCCA                                                00022000
*                                                                       00023000
*01* DSECT NAME: BPXYCCA                                                00024000
*                                                                       00025000
*01* DESCRIPTIVE NAME: Msg Attributes for console_np service            00026000
*                                                                       00027000
*02*   ACRONYM: CCA                                                     00028000
**/                                                                     00029000
*/*01* PROPRIETARY STATEMENT=                                        */ 00030000
*/***PROPRIETARY_STATEMENT********************************************/ 00031000
*/*                                                                  */ 00032000
*/*                                                                  */ 00033000
*/* LICENSED MATERIALS - PROPERTY OF IBM                             */ 00034000
*/* 5694-A01 COPYRIGHT IBM CORP. 1997, 2011                          */ 00036000
*/*                                                                  */ 00037000
*/* STATUS= HBB7780                                                  */ 00038000
*/*                                                                  */ 00039000
*/***END_OF_PROPRIETARY_STATEMENT*************************************/ 00040000
*/*                                                                     00041000
*                                                                       00042000
*01* EXTERNAL CLASSIFICATION:  GUPI                                     00043000
*01* END OF EXTERNAL CLASSIFICATION:                                    00044000
*                                                                       00045000
*01* FUNCTION:                                                          00046000
*                                                                       00047000
*      The CCA maps a request to the console_np service to send         00048000
*      a msg to the operators console.                                  00049000
*                                                                       00050000
*01* METHOD OF ACCESS:                                                  00051000
*                                                                       00052000
*02*   PL/X:                                                            00053000
*                                                                       00054000
*        %INCLUDE SYSLIB(BPXYCCA)                                       00055000
*        By default, the CCA is based on CCAPtr.  If                    00056000
*        other basing is desired, use %CCABASE='BASED(XXXXXX)'.         00057000
*        If %CCABASE='BASED(CCAPTR)' is coded, a Declare for            00058000
*        CCAPTR is also generated.                                      00059000
*                                                                       00060000
*02*   ASM:                                                             00061000
*                                                                       00062000
*        With DSECT=NO, storage is allocated in line                    00063000
*        and addressability is provided thru that DSECT or CSECT.       00064000
*        With DSECT=YES, a DSECT is produced and "USING STAT,reg"       00065000
*        is required for addressability.  Here "reg" contains the       00066000
*        address of CCA#LENGTH bytes of storage.                        00067000
*        The default is DSECT=YES.                                      00068000
*                                                                       00069000
*01* SIZE: Release dependent.  Refer to the mapping.                    00070000
*            CCA -- X'0070' bytes                                       00071000
*                                                                       00072000
*01* POINTED TO BY: Input parameter of console_np system call           00073000
*                                                                       00074000
*01* CREATED BY: Invoker of console_np system call routine              00075000
*                                                                       00076000
*01* DELETED BY: Invoker of console_np system call routine              00077000
*                                                                       00078000
*01* STORAGE ATTRIBUTES:                                                00079000
*02*   SUBPOOL: N/A                                                     00080000
*02*   KEY:     N/A                                                     00081000
*02*   RESIDENCY: Caller's Primary address space                        00082000
*                                                                       00083000
*01* FREQUENCY: 1 per console_np system call                            00084000
*                                                                       00085000
*01* SERIALIZATION: N/A                                                 00086000
*                                                                       00087000
*01* DEPENDENCIES: None                                                 00088000
*                                                                       00089000
*01* NOTES:                                                             00090000
*                                                                       00091000
*01* COMPONENT: OpenMVS (SCPX1)                                         00092000
*                                                                       00093000
*01* DISTRIBUTION LIBRARY:  AMACLIB                                     00094000
*                                                                       00095000
*01* EYE-CATCHER: CCA                                                   00096000
*02*   OFFSET:  0                                                       00097000
*02*   LENGTH:  4                                                       00098000
*                                                                       00099000
*01* CHANGE-ACTIVITY:                                                   00100000
*                                                                       00101000
*    $L0=DSPA164  HOM1150 960223 PDJJ: Console Modify Support A164.01   00102000
*    $P1=PSP????  HOM1150 960328 PDJJ: Remove eye catcher               00103000
*    $D1=DXVA413  HBB7704 000110 PDJQ: Add desc/router codes A413.00    00104000
*    $D2=???????  ??????? 000110 PDJJ: 64 bit support                   00105000
*    $P2=PYN0220  HBB7708 020301 PDFO: Bilingual fixup                  00106000
*    $D3=DCRB886  HBB7780 100130 PDJQ: Add CART/ConsoleID B886.00       00107000
*    $P3=ME19121  HBB7780 110712 PD2R: Remove Restricted Materials      00107101
****END OF SPECIFICATIONS*********************************************/ 00108000
*% /*                                                                   00109000
.P0      ANOP                                                           00110000
         AIF   ('&ZCBPRINT' EQ 'NO').P1                                 00111000
         AIF   ('&LIST' EQ 'YES').P2                                    00112000
.P1      ANOP                                                           00113000
         PUSH  PRINT                                                    00114000
         PRINT OFF                                                      00115000
.P2      ANOP                                                           00116000
         AIF   ('&CCA' EQ 'NO').L0002                                   00117000
         AIF   ('&DSECT' EQ 'YES').L0003                                00118000
         AIF   ('&CCA' NE 'YES').L0002                                  00119000
CCA      DS    0D                                                       00120000
         AGO   .L0004                                                   00121000
.L0003   ANOP                                                           00122000
CCA      DSECT                                                          00123000
.L0004   ANOP                                                           00124000
CCAVERSION DS  H         +00 Version                                    00125000
         DS    BL2       +02 Reserved                                   00126000
CCAMSGLENGTH DS F        +04 Length of msg pointed to by CCAMsgPtr      00127000
CCAMSGPTRG DS  0CL8      +08 Ptr for amode 64 use                       00128000
CCAMSGPTR DS   A         +08 Pointer to Msg text                        00129000
         DS    CL4       +12 Not used in amode 31                       00130000
         DS    CL4       +16 Reserved                                   00131000
CCAENDVER1 DS  0C        End of Version 1                               00132000
CCASTARTVER2 DS 0CL52                                                   00133000
         DS    CL4       +20 Reserved (dwd bdy)                         00134000
CCAWTOPARMS DS 0CL36                                                    00135000
CCAROUTCDELISTG DS 0CL8  +24 Ptr for amode 64 use                       00136000
CCAROUTCDELIST DS A      +24 Pointer to list of fullword routing codes  00137000
         DS    CL4       +28 Not used in amode 31                       00138000
CCADESCLISTG DS 0CL8     +32 Ptr for amode 64 use                       00139000
CCADESCLIST DS A         +32 Pointer to list of fullword descriptor    *00140000
                         codes                                          00141000
         DS    CL4       +36 Not used in amode 31                       00142000
CCAWMCSFLAGS DS 0BL4     +40 WTO MCS Flags                              00143000
CCAHRDCPY EQU  X'80'     Message to hardcopy log only                   00144000
         ORG   CCAWMCSFLAGS+4                                           00145000
CCAWTOTOKEN DS F         +44 Token used to identify message (for later *00146000
                         use by DOM)                                    00147000
CCAMSGIDPTRG DS 0CL8     +48 Ptr for amode 64 use                       00148000
CCAMSGIDPTR DS A         +48 Pointer to location where output message  *00149000
                         id is returned                                 00150000
         DS    CL4       +52 Not used in amode 31                       00151000
         DS    CL4       +56 Reserved (dwd bdy)                         00152000
CCADOMPARMS DS 0CL12                                                    00153000
CCADOMTOKEN DS F         +60                                            00154000
CCAMSGIDLISTG DS 0CL8    +64 Ptr for amode 64 use                       00155000
CCAMSGIDLIST DS A        +64 Ptr to msg ids to be dom                   00156000
         DS    CL4       +68 Not used in amode 31                       00157000
CCAENDVER2 DS  0C        End of Version 2                               00158000
CCASTARTVER3 DS 0CL40    Start of version 3                             00159000
CCAMODCARTPTRG DS 0CL8   +72 Pointer for amode 64 use                   00160000
CCAMODCARTPTR DS A       +72 Pointer to 8 byte CART returned for       *00161000
                         MODIFY/STOP command                            00162000
         DS    CL4       +76 Not used in amode 31                       00163000
CCAMODCONSOLEIDPTRG DS 0CL8 +80 Pointer for amode 64 use                00164000
CCAMODCONSOLEIDPTR DS A  +80 Pointer to 4 byte ConsoleID returned for  *00165000
                         MODIFY/STOP cmd                                00166000
         DS    CL4       +84 Not used in amode 31                       00167000
CCAMSGCART DS  CL8       +88 Supplied - CART to be specified on WTO    *00168000
                         when message is issued                         00169000
CCAMSGCONSOLEID DS CL4   +96 Supplied - ConsoleID to be specified on   *00170000
                         WTO when message is issued                     00171000
         DS    CL12      +100 Reserved for future use                   00172000
CCAENDVER3 DS  0C        End of Version 3                               00173000
CCA#LEN  EQU   112       Length of CCA                                  00174000
CCA#VER  EQU   2         Current version                                00175000
CCA#VER1LEN EQU 20       Length of Version 1                            00176000
CCA#VER2LEN EQU 72       Length of Version 2                            00177000
CCA#VER3LEN EQU 112      Length of Version 3                            00178000
CCA#VER01 EQU  1         Version 1                                      00179000
CCA#VER02 EQU  2         Version 2                                      00180000
CCA#VER03 EQU  3         Version 3                                      00181000
CCA_LEN  EQU   *-CCA                                                    00182000
.L0002   ANOP                                                           00183000
         AIF   ('&ZCBPRINT' EQ 'NO').P3                                 00184000
         AIF   ('&LIST' EQ 'YES').P4                                    00185000
.P3      ANOP                                                           00186000
         POP   PRINT                                                    00187000
.P4      ANOP                                                           00188000
.P_EXIT  ANOP                                                           00189000
         MEND                                                           00190000
**/ BPXYCCA_2:;                                                         00191000
* %BPXYCCA_INCLUDED = 'YES';                                            00192000
* %DCL ZCBPRINT CHAR EXT;                                               00193000
* %DEACTIVATE ZCBPRINT;                                                 00194000
* %DCL BPXYCCA_LIST CHAR EXT;                                           00195000
* %DEACTIVATE BPXYCCA_LIST;                                             00196000
* %IF BPXYCCA_LIST ^= 'NO' &                                            00197000
*    ZCBPRINT ^= 'NO' %THEN                                             00198000
*   %GOTO BPXYCCA_3;                                                    00199000
*   @LIST PUSH NOECHO;                                                  00200000
*   @LIST NOASSEMBLE NOECHO;                                            00201000
*   @LIST OFF C NOECHO;                                                 00202000
* %BPXYCCA_3:;                                                          00203000
*/* Start of PL/X Source                                             */ 00204000
* %IF CCABASE = '' %THEN                                                00205000
*   %DO;                                                                00206000
*     %CCABASE = 'Based(CCAPtr)';                                       00207000
*   %END;                                                               00208000
* %IF TRANSLATE(CCABASE) = 'BASED(CCAPTR)' %THEN                        00209000
*   %DO;                                                                00210000
*     DCL CCAPtr Ptr(31);           /* Pointer to the CCA            */ 00211000
*   %END;                                                               00212000
* %IF AsaxmacP64 = ''                                         /* @D2A*/ 00213000
*    %Then %AsaxmacP64 = 'Char(8)';                           /* @D2A*/ 00214000
* %IF AsaxmacF64 = ''                                         /* @D2A*/ 00215000
*    %Then %AsaxmacF64 = 'Char(8)';                           /* @D2A*/ 00216000
* %IF AsaxmacF63 = ''                                         /* @D2A*/ 00217000
*    %Then %AsaxmacF63 = 'Char(8)';                           /* @D2A*/ 00218000
*Dcl                                                                    00219000
* 1  CCA        CCABASE,                                                00220000
*  3 CCAVersion Fixed(16),       /* +00 Version                      */ 00221000
*  3 *            Bit(16),       /* +02 Reserved                     */ 00222000
*  3 CCAMsgLength Fixed(32),     /* +04 Length of msg pointed to by     00223000
*                                       CCAMsgPtr                    */ 00224000
*  3 CCAMsgPtrG AsaxmacP64 Bdy(Dword), /* +08 Ptr for amode  64 use     00225000
*                                                                @D2A*/ 00226000
*   5 CCAMsgPtr Ptr(31),         /* +08 Pointer to Msg text          */ 00227000
*   5 *           Char(4),       /* +12 Not used in amode 31     @D2A*/ 00228000
*  3 *            Char(4),       /* +16  Reserved                    */ 00229000
*  3 CCAEndVer1 Char(0),         /*      End of Version 1        @D1C*/ 00230000
*  3 CCAStartVer2 Bdy(Dword,5),  /*      Start of version 2      @D2C*/ 00231000
*   5 *           Char(4),       /* +20  Reserved (dwd bdy)      @D1A*/ 00232000
*   5 CCAWTOParms,                                            /* @D1A*/ 00233000
*    7 CCARoutCdeListG AsaxmacP64 Bdy(Dword), /* +24  Ptr for amode 64  00234000
*                                        use                     @D2A*/ 00235000
*     9 CCARoutCdeList Ptr(31),  /* +24  Pointer to list of fullword    00236000
*                                        routing codes           @D1A*/ 00237000
*     9 *              Char(4),  /* +28 Not used in amode 31     @D2A*/ 00238000
*    7 CCADescListG  AsaxmacP64 Bdy(Dword), /* +32  Ptr for amode 64    00239000
*                                        use                     @D2A*/ 00240000
*     9 CCADescList  Ptr(31),    /* +32  Pointer to list of fullword    00241000
*                                        descriptor codes        @D1A*/ 00242000
*     9 *            Char(4),    /* +36 Not used in amode 31     @D2A*/ 00243000
*    7 CCAWMCSFlags Bit(32),     /* +40  WTO MCS Flags           @D1A*/ 00244000
*     9 CCAHrdCpy   Bit(1),      /*      Message to hardcopy log only   00245000
*                                                                @D1A*/ 00246000
*    7 CCAWTOToken    Fixed(32), /* +44  Token used to identify message 00247000
*                                        (for later use by DOM)  @D1A*/ 00248000
*    7 CCAMsgIDPtrG AsaxmacP64 Bdy(Dword),  /* +48 Ptr for amode 64 use 00249000
*                                                                @D2A*/ 00250000
*     9 CCAMsgIDPtr Ptr(31),     /* +48  Pointer to location where      00251000
*                                  output message id is returned @D1A*/ 00252000
*     9 *            Char(4),    /* +52 Not used in amode 31     @D2A*/ 00253000
*    7 *             Char(4),    /* +56 Reserved (dwd bdy)       @D1A*/ 00254000
*   5 CCADOMParms Bdy(Dword,5),                               /* @D2C*/ 00255000
*    7 CCADOMToken Fixed(32),    /* +60                          @D1A*/ 00256000
*    7 CCAMsgIdListG AsaxmacP64 Bdy(Dword), /* +64 Ptr for amode 64 use 00257000
*                                                                @D2A*/ 00258000
*     9 CCAMsgIdList Ptr(31),    /* +64 Ptr to msg ids to be dom @D1A*/ 00259000
*     9 *            Char(4),    /* +68 Not used in amode 31     @D2A*/ 00260000
*  3 CCAEndVer2   Char(0),       /*      End of Version 2        @D1A*/ 00261000
*  3 CCAStartVer3 Bdy(Dword),    /*      Start of version 3      @D3A*/ 00262000
*   5 CCAModCARTPtrG  AsaxmacP64 Bdy(Dword), /* +72 Pointer for amode   00263000
*                                   64 use                       @D3A*/ 00264000
*    7 CCAModCARTPtr  Ptr(31), /* +72 Pointer to 8 byte CART returned   00265000
*                                 for MODIFY/STOP command        @D3A*/ 00266000
*    7 *           Char(4),      /* +76 Not used in amode 31     @D3A*/ 00267000
*   5 CCAModConsoleIDPtrG  AsaxmacP64 Bdy(Dword), /* +80 Pointer for    00268000
*                                   amode 64 use                 @D3A*/ 00269000
*    7 CCAModConsoleIDPtr  Ptr(31), /* +80 Pointer to 4 byte ConsoleID  00270000
*                                   returned for MODIFY/STOP cmd @D3A*/ 00271000
*    7 *           Char(4),      /* +84 Not used in amode 31     @D3A*/ 00272000
*   5 CCAMsgCART      Char(8),   /* +88 Supplied - CART to be           00273000
*                                   specified on WTO when message is    00274000
*                                   issued                       @D3A*/ 00275000
*   5 CCAMsgConsoleID Char(4),   /* +96 Supplied - ConsoleID to be      00276000
*                                   specified on WTO when message is    00277000
*                                   issued                       @D3A*/ 00278000
*   5 *            Char(12),     /* +100 Reserved for future use @D3A*/ 00279000
*  3 CCAEndVer3   Char(0),       /*      End of Version 3        @D3A*/ 00280000
*  3 * Char(0) Bdy(Dword);       /*     Ensure CCA ends on doubleword   00281000
*                                       boundary                 @D1A*/ 00282000
*                                                                       00283000
*DCL                                                                    00284000
*  CCA#Len    Fixed(16) Constant(Length(CCA)), /* Length of CCA      */ 00285000
*  CCA#Ver    Fixed(16) Constant(CCA#Ver02), /* Current version      */ 00286000
*  CCA#Ver1Len Fixed(16) Constant(Offset(CCAEndVer1)), /* Length of     00287000
*                                               Version 1            */ 00288000
*  CCA#Ver2Len Fixed(16) Constant(Offset(CCAEndVer2)), /* Length of     00289000
*                                               Version 2        @D1A*/ 00290000
*  CCA#Ver3Len Fixed(16) Constant(Offset(CCAEndVer3)), /* Length of     00291000
*                                               Version 3        @D3A*/ 00292000
*  CCA#Ver01  Fixed(16) Constant(1),         /* Version 1            */ 00293000
*  CCA#Ver02  Fixed(16) Constant(2),         /* Version 2        @D1A*/ 00294000
*  CCA#Ver03  Fixed(16) Constant(3);         /* Version 3        @D3A*/ 00295000
*/* End of PL/X Source                                               */ 00296000
* %IF BPXYCCA_LIST ^= 'NO' &                                            00297000
*    ZCBPRINT ^= 'NO' %THEN                                             00298000
*   %GOTO BPXYCCA_4;                                                    00299000
*   @LIST POP NOECHO;                                                   00300000
* %BPXYCCA_4:;                                                          00301000
* %END;                                                                 00302000
