*/*01* PROPRIETARY STATEMENT=                                        */ 00010000
*/***PROPRIETARY_STATEMENT********************************************/ 00020000
*/*                                                                  */ 00030000
*/*                                                                  */ 00040000
*/* LICENSED MATERIALS - PROPERTY OF IBM                             */ 00050000
*/* THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                      */ 00060000
*/* 5650-ZOS COPYRIGHT IBM CORP. 1977, 2015                          */ 00070001
*/*                                                                  */ 00080000
*/* STATUS= HBB77A0                                                  */ 00090001
*/*                                                                  */ 00100000
*/***END_OF_PROPRIETARY_STATEMENT*************************************/ 00110000
*%/*                                                               @P1A 00120000
         MACRO                                                          00130000
&NAME    ENQ   &P,&SMC=,&RET=,&UCB=,&ECB=,&TCB=,&GENERIC=NO,&MF=I,     X00140000
               &RNL=,&MASID=,&MTCB=,&RELATED=,&LOC=,&LINKAGE=      @L3C 00150000
.********************************************************************** 00160000
.*                                                                      00170000
.*01* MACRO-NAME = ENQ                                                  00180000
.*                                                                      00190000
.*01*  MACRO-DATE = 03/16/15                                       @PFC 00200001
.*                                                                      00210000
.*01* DESCRIPTIVE-NAME = ENQ MACRO                                      00220000
.*                                                                      00230000
.*01* EXTERNAL CLASSIFICATION: PI                                       00240000
.*01* END OF EXTERNAL CLASSIFICATION:                                   00250000
.*                                                                      00260000
.*01* FUNCTION =                                                        00270000
.*                GENERATE ENQ SVC (SVC 56) OR ENQ PC.  ALSO,           00280000
.*                GENERATE AND/OR MODIFY THE PARAMETER-LIST OF ENQ,     00290000
.*                RESERVE, OR DEQ.                                 @PEC 00300000
.*                                                                      00310000
.*                                                                      00320000
.*01* MODULE-TYPE = MACRO                                               00330000
.*                                                                      00340000
.*01* PROCESSOR = ASSEMBLER                                             00350000
.*                                                                      00360000
.*01* MACROS = IHBERMAC, IHBSETR, ENQP                             @04C 00370000
.*                                                                      00380000
.*01* CHANGE-ACTIVITY =                                                 00390000
.*                                                                      00400000
.*  $L1=MASIDENQ,JBB2125,830411,PD1L: Add MASID and MTCB operands.      00410000
.*                                    Modify generation of PEL prefix.  00420000
.*                                                                 @L1A 00430000
.*  $D1=DEO0156,HBB4410,890515,PDDX: Add support for RNL keyword        00440000
.*                                   DCR - 156                     @D1A 00450000
.*  $P1=PAJ0021,JBB2125,830411,PD1L: Fix Prolog for invocation as a     00460000
.*                                   PLS macro.                    @P1A 00470000
.*  $P2=PAJ0054,JBB2125,830411,PD1L: Store MASID/MTCB if MF=E macro     00480000
.*                                   with ECB=.                    @P2A 00490000
.*  $P3=PAJ0083,JBB2125,830527,PD1L: Store correct PELRET if MASID=     00500000
.*                                   with ECB=.                    @P3A 00510000
.*  $P4=PEO1730,HBB4410,890515,PDDX: Correct macro date and copyright.  00520000
.*                                                                 @P4A 00530000
.*  $P5=PEO2208,HBB4410,890626,PDDX: Fix RNL code to allow obscure      00540000
.*                                   types of the EXECUTE form.    @P5A 00550000
.*  $P6=PEO2299,HBB4410,890814,PDAW: Add continuation character.   @P6A 00560000
.*  $P7=PEO2246,HBB4410,891023,PDDX: Add a warning message when DEQ     00570000
.*                                   with UCB has a Scope other than    00580000
.*                                   SYSTEMS.                      @P7A 00590000
.*  $P8=PEO3322,HBB4410,900105,PDDX: Allow Scope to be omitted for a    00600000
.*                                   request with UCB.  Assume a Scope  00610000
.*                                   of SYSTEMS.                  @P8A  00620000
.*  $L2=UCBVP  ,HBB5510,940210,PDAW: Add DEVN keyword.             @L2A 00630000
.*  $P9=PN70247,HBB5520,940310,PDAW: Correct MACDATE.              @P9A 00640000
.*  $PA=PN70590,HBB5520,940602,PDAW: Add DEVN to RESERVE check.    @PAA 00650000
.*  $PB=PN71744,HBB5520,941022,PDAW: Add external class.           @PBA 00660000
.*                                                                      00670000
.* MACSTAT Y-3                                                 @ZA00466 00680000
.* MACSTAT Y-3                                                 @ZA14267 00690000
.* MACSTAT Y-3                                                 @ZA24620 00700000
.* MACSTAT Y-3 77.277/OZ26012                                  @ZA26012 00710000
.* MACSTAT Y-3 77.277/OZ26497                                  @ZA26497 00720000
.* MACSTAT Y-3 79.066/OZ37604 FIX DEQ EXECUTE WITH UCB         @ZA37604 00730000
.* MACSTAT Y-3 81.293/OZ53727 UPDATE PARAMETER BYTE WITH PARAMETERS     00740000
.*                           SPECIFIED IN EACH ELEMENT ON MULTIPLE      00750000
.*                           ENQUEUE.                          @ZA53727 00760000
.* OY12665 THE SETA STATEMENT USED IN CONJUNCTION WITH THE LENGTH       00770000
.*         ATTRIBUTE REQUIRES THAT THE DEFINED CONSTANT FOR THE RNAME   00780000
.*         BE DECLARED IN OPEN CODE.  THE SETA STATEMENT HAS BEEN       00790000
.*         CHANGED TO A DC TO ALLOW THE RNAME TO BE DECLARED OUTSIDE    00800000
.*         OF THE PROGRAM (FOR EXAMPLE WITHIN A MACROLIBRARY). @YA12665 00810000
.* OY18966 DETERMINE THE TYPE ATTRIBUTE OF THE RNAME ADDRESS TO         00820000
.*         DECIDE IF A DC OR SETA INSTRUCTION IS NEEDED TO RESOLVE      00830000
.*         THE RNAME LENGTH.                                   @YA18966 00840000
.* $01=OY56643,HBB4430,920821,PDEL: Restore &TYPER symbol.         @01A 00850000
.* $02=OY59863,HBB4430,930104,PDAW: Add better error checking for       00860000
.*                                  MASID and MTCB.                @02A 00870000
.* $03=OW11070,HBB4420,950505,PDHB: Remove/add support for DEVN/LOC     00880000
.*                                  keywords, respectively, for         00890000
.*                                  RESERVE and DEQ.  DCR 105.     @03A 00900000
.* $PC=PSD0270,JBB6602,950707,PDHB: MNOTE an ENQ with a UCB specified   00910000
.*                                  instead of letting it go unnoticed  00920000
.*                                  during macro expansion because it   00930000
.*                                  could later fail with an ABEND438.  00940000
.*                                  FIN of APAR OW13339.           @PCA 00950000
.*  $L3=PCENQ ,HBB7705,010117,PD2V: Add LINKAGE keyword            @L3A 00960000
.*  $L4=SAM64 ,HBB7706,010911,PDXB: SAM 64                              00970000
.* $04=OW53321,HBB7707,020429,PDFX: Use LAE for AR mode callers         00980000
.* $05=OA03493,HBB7707,030623,PDFX: Fix setting of R1 when MF=E, plist  00990000
.*                                  is passed in reg, and have prefix   01000000
.* $PD=PYN0826,HBB7708,021218,PDXB: Relative branch                @PDA 01010000
.* $PE=ME00655,HBB7720,040603,PDPP: Remove check for MASID and MTCB     01020000
.*                                  for LINKAGE=SYSTEM                  01030000
.* $06=OA44561,HBB7790,140218,PDGB: Use proper load instr for amode     01040000
.* $PF=ME29019 HBB77A0 150316 PDGB: correct copyright              @PFA 01041001
.*                                                                      01050000
.********************************************************************** 01060000
.*                                                                      01070000
.********************************************************************** 01080000
.*                                                                      01090000
.*  &B is used to control the bits within PELFLAG:                      01100000
.*                                                                      01110000
.*     &B(1) and &B(4) control PELSCPE1 and PELSCPE2 for SCOPE and      01120000
.*                     and UCB operands.                                01130000
.*                                                                      01140000
.*     &B(2) controls PELSYSMC (obsolete and reserved).                 01150000
.*                                                                      01160000
.*     &B(3) controls PELSTPMC for the SMC=STEP operand.                01170000
.*                                                                      01180000
.*     &B(5), &B(6), and &B(7) control PELRET1, PELRET2, and PELRET3    01190000
.*                             for the RET= and ECB= operands.          01200000
.*                                                                      01210000
.*     &B(8) controls PELSHARE for the SHARED/EXCLUSIVE operands.       01220000
.*                                                                      01230000
.*  &BA is used to control bits turned ON by an Or Immediate (OI):      01240000
.*                                                                      01250000
.*     &BA(1)=1 indicates that TCB= was specified.                      01260000
.*                                                                      01270000
.*     &BA(2)=1 indicates that GENERIC=YES was specified.               01280000
.*                                                                      01290000
.*     &BA(3)=1 indicates that RNL=NO was specified.               @D1A 01300000
.*                                                                      01310000
.*     &BA(4)=1 indicates that LOC=ANY was specified.              @03A 01320000
.*                                                                      01330000
.*  &BB is used to control bits turned OFF by an And Immediate (IN):    01340000
.*                                                                      01350000
.*     &BB(1)=1 indicates that SMC= was omitted (PELSYSMC).             01360000
.*                                                                      01370000
.*     &BB(2)=1 indicates that RET= was omitted (PELRET1, PELRET2,      01380000
.*              and PELRET3).                                           01390000
.*                                                                      01400000
.*     &BB(3)=1 indicates that an omitted EXCLUSIVE/SHARED operand was  01410000
.*              encountered (PELSHARE).                                 01420000
.*                                                                      01430000
.*     &BB(4) and &BB(5) are affected by the SCOPE and  UCB operands    01440000
.*                       (PELSCPE1 and PELSCPE2).                       01450000
.*                                                                      01460000
.*     &BB(6)=1 indicates that RNL=YES is specified with a MF=E         01470000
.*              invocation.                                        @D1A 01480000
.*                                                                      01490000
.*     &BB(7)=1 indicates that LOC=BELOW is specified with a MF=E       01500000
.*              invocation.                                        @D1A 01510000
.*                                                                      01520000
.*  &LIST is used to control the displacement within the parameter list 01530000
.*        of the bytes undated by the OI, NI, and ST instructions.      01540000
.*                                                                      01550000
.*  &LSTEND is used to control the bits of the PELLAST byte:            01560000
.*                                                                      01570000
.*     80-bit (128 decimal) = PELEOL                                    01580000
.*     40- "  ( 64    "   ) = PELIGNOR                                  01590000
.*     20- "  ( 32    "   ) = PELOCANY (LOC=ANY operand)           @03C 01600000
.*     08- "  (  8    "   ) = PELSAVE  (MASID= operand)                 01610000
.*     04- "  (  4    "   ) = PELNORNL (RNL= operand)              @D1A 01620000
.*     02- "  (  2    "   ) = PELGEN2  (GENERIC= operand)               01630000
.*     01- "  (  1    "   ) = PELTCBF  (TCB= operand)                   01640000
.*                                                                      01650000
.*  &PFLEN is the length of the PEL-Prefix.                             01660000
.*                                                                      01670000
.*  &PFXXXD is the displacement of field XXX from the beginning of the  01680000
.*          PEL-Prefix.  XXX is ECB, TCB, MAS, or MTC.                  01690000
.*                                                                      01700000
.********************************************************************** 01710000
         GBLB  &IHBRES                 RESERVE MACRO CALL INDICATOR     01720000
         GBLB  &IHBDEQ                 DEQ MACRO CALL INDICATOR         01730000
         GBLC  &LABEL                  USED TO BRANCH PAST PARM LIST    01740000
         LCLA  &QN,&RN,&ES,&RL,&SS     INDICES TO PARM SUB OPERANDS     01750000
         LCLA  &PFLEN,&PFTCBD,&PFECBD,&PFMASD,&PFMTCD                  X01760000
                                       PFX LENGTH AND DISPLACMENTS @L1A 01770000
         LCLA  &LEN                    LENGTH INTERMEDIARY              01780000
         LCLA  &LIST                   PARAMETER BUILD LIST POINTER     01790000
         LCLA  &LISTA                  PARAMETER BUILD LIST POINTER     01800000
         LCLA  &MASK0NI,&MASK0OI       BYTE TO 'AND' AND 'OR' BYTE 0    01810000
.*                                     OF AN EXECUTE FORM          @P5C 01820000
         LCLA  &MASK2NI,&MASK2OI       BYTE TO 'AND' AND 'OR' BYTE 2    01830000
.*                                     OF AN EXECUTE FORM          @P5C 01840000
         LCLB  &M(4)                   BITS INDICATING WHETHER TO       01850000
.*                                     PERFORM ABOVE 'AND'S AND 'OR'S   01860000
         LCLA  &NUMBER                 COUNT OF POSITIONAL PARMS        01870000
         LCLA  &BSIZE                  SIZE OF BRANCH TO TAKE WHEN      01880000
.*                                     GENERATING LOOP DURING EXPANSION 01890000
.*                                     OF EXECUTE FORM             @P5A 01900000
         LCLA  &LSTEND                 USED TO SET LISTEND BITS  X02113 01910000
         LCLB  &NQ                     ENQ/RES EXTRA PARM INDICATOR     01920000
         LCLB  &B(8),&BB(7),&BA(4)     Represents bits of code fields. X01930000
                                                                   @03C 01940000
         LCLC  &C                      TO GATHER REG PARM W/O PARENS    01950000
         LCLC  &TYPER                  TO TEST RNAME TYPE ATTRIBUTE     01960000
.*                                                                 @01A 01970000
         LCLC  &L,&LR                                              @L4A 01980000
         GBLC  &SYSAM64                                            @L4A 01990000
         GBLC  &SYSASCE                    ASC MODE                @04A 02000000
         GBLA  &SYSALVL                    ARCHLVL                 @PDA 02010000
         SYSSTATE TEST                                             @L4A 02020000
         AIF   ('&SYSAM64' EQ 'YES').AM641                         @L4A 02030000
&L       SETC  'L'                                                 @L4A 02040000
&LR      SETC  'LR'                                                @L4A 02050000
         AGO   .AM31641                                            @L4A 02060000
.AM641   ANOP                                                      @L4A 02070000
&L       SETC  'LLGT'                                              @L4A 02080000
&LR      SETC  'LGR'                                               @L4A 02090000
.AM31641 ANOP                                                      @L4A 02100000
         AIF   (&IHBDEQ OR &IHBRES).SKIPDAT                             02110000
*         MACRO-DATE = 03/16/15                                    @PFC 02120001
.SKIPDAT ANOP                                                           02130000
.*                                                                      02140000
.********************************************************************** 02150000
.* VALIDITY-CHECK COUNT OF POSITIONAL SUB-OPERANDS                    * 02160000
.********************************************************************** 02170000
.*                                                                      02180000
&NQ      SETB  (NOT(&IHBDEQ))                                           02190000
         AIF   ('&MF(1)' NE 'E' AND '&P' EQ '').ERR1                    02200000
&NUMBER  SETA  N'&P                                                     02210000
         AIF   ('&NUMBER' GT '5' AND '&UCB' NE '').ERR7                 02220000
.*                                                                      02230000
.********************************************************************** 02240000
.* DETERMINE THE REQUIRED FORMAT AND LENGTH OF THE PEL-PREFIX         * 02250000
.********************************************************************** 02260000
.*                                                                      02270000
         AIF   ('&TCB' NE '' OR '&ECB' NE '').OLDPF                @L1A 02280000
         AIF   ('&MASID' EQ '').CKMTC                              @L1A 02290000
.NEWPF   ANOP                                                      @L1A 02300000
         AIF   ('&MTCB' EQ '').ERR20          MASID requires MTCB  @02A 02310000
         AIF   ('&TCB' NE '').ERR26           MASID & TCB conflict @02A 02320000
         AIF   ('&MF' NE 'L').NEWPF2                               @L1A 02330000
         AIF   ('&MASID' NE '0').ERR15A                            @L1A 02340000
         AIF   ('&MTCB' NE '0' AND '&MTCB' NE '').ERR15B           @L1A 02350000
.NEWPF2  ANOP                                                      @L1A 02360000
&PFLEN   SETA  20            PREFIX HAS MASID                      @L1A 02370000
&PFTCBD  SETA  0                                                   @L1A 02380000
&PFECBD  SETA  4                                                   @L1A 02390000
&PFMASD  SETA  8                                                   @L1A 02400000
&PFMTCD  SETA  12                                                  @L1A 02410000
         AGO   .NOPF                                               @L1A 02420000
.CKMTC   AIF   ('&MTCB' NE '').ERR11B                              @L1A 02430000
         AGO   .NOPF                                               @L1A 02440000
.OLDPF   AIF   ('&MASID' NE '').NEWPF                              @L1A 02450000
         AIF   ('&MTCB' NE '').ERR11B                              @L1A 02460000
         AIF   ('&ECB' NE '' AND '&TCB' NE '').PFECTC              @L1A 02470000
&PFLEN   SETA  4             PREFIX HAS ECB OR TCB                 @L1A 02480000
&PFTCBD  SETA  0                                                   @L1A 02490000
&PFECBD  SETA  0                                                   @L1A 02500000
         AGO   .NOPF                                               @L1A 02510000
.PFECTC  ANOP                                                      @L1A 02520000
&PFLEN   SETA  8             PREFIX HAS ECB AND TCB                @L1A 02530000
&PFTCBD  SETA  0                                                   @L1A 02540000
&PFECBD  SETA  4                                                   @L1A 02550000
.NOPF    ANOP                                                      @L1A 02560000
.*                                                                      02570000
.********************************************************************** 02580000
.********************************************************************** 02590000
.*  Validity check all keyword operands.  Applies to ALL entries.     * 02600000
.********************************************************************** 02610000
.********************************************************************** 02620000
.*                                                                      02630000
         AIF   (&IHBDEQ).CHKGEN                                  X02113 02640000
         AIF   ('&GENERIC' NE 'NO').ERR18                        X02113 02650000
         AGO   .NCHKGEN                                          X02113 02660000
.CHKGEN  ANOP                                                    X02113 02670000
         AIF   ('&GENERIC' NE 'NO' AND '&GENERIC' NE 'YES').ERR16       02680000
.*                                                               X02113 02690000
         AIF   ('&GENERIC' EQ 'YES' AND '&RET' NE 'HAVE').ERR17  X02113 02700000
.NCHKGEN ANOP                                                    X02113 02710000
         AIF   (&IHBRES OR &IHBDEQ).NOTENQ  Branch if not an ENQ.X02113 02720000
.*                                                                      02730000
.********************************************************************** 02740000
.*  Make some checks unique only to ENQ.                              * 02750000
.********************************************************************** 02760000
.*                                                                      02770000
         AIF   ('&LINKAGE' EQ '').LINKOK  Linkage not specified    @L3A 02780000
         AIF   ('&LINKAGE' NE 'SVC' AND '&LINKAGE' NE 'SYSTEM').ERR28   02790000
.*                                                                 @L3A 02800000
.LINKOK  ANOP                                                      @L3A 02810000
         AIF   ('&TCB' NE '' AND '&ECB' NE '').BOTH2  RET NOT  @ZA14267 02820000
.*                                     PERMITTED WITH ECB AND  @ZA14267 02830000
.*                                     TCB (SAME AS ECB ONLY)  @ZA14267 02840000
         AIF   ('&RET' EQ 'HAVE' AND '&TCB' NE '').ERR13         X02113 02850000
         AIF   ('&RET' EQ 'NONE' AND '&TCB' NE '').ERR13         X02113 02860000
         AIF   ('&RET' EQ '' AND '&TCB' NE '').ERR13             X02113 02870000
.*                                     TCB NOT ALLOWED WITH      X02113 02880000
.*                                     RET=HAVE,NONE,OMITTED     X02113 02890000
.*                                     ON ENQ                    X02113 02900000
.BOTH2   ANOP                                                  @ZA14267 02910000
         AIF   ('&TCB' NE '' AND '&SMC' NE '').ERR12             X02113 02920000
.*                                     TCB WITH SMC INVALID      X02113 02930000
         AIF   ('&UCB' EQ '').NOUCB   If a UCB was not specified on     02940000
.*                                    this ENQ, branch around issuing   02950000
.*                                    a warning MNOTE.             @PCA 02960000
         MNOTE 4,' While a UCB is tolerated on an ENQ invocation, an ABX02970000
               END438 may be later received during execution.  ThereforX02980000
               e, consideration should be given in replacing this ENQ wX02990000
               ith a RESERVE macro.'                               @PCA 03000000
.NOUCB   ANOP                                                      @PCA 03010000
.NOTENQ  ANOP                                                    X02113 03020000
.*                                                                      03030000
.********************************************************************** 03040000
.*  Validity check the LOC keyword and issue a warning if bad.        * 03050000
.********************************************************************** 03060000
.*                                                                      03070000
         AIF   ('&LOC' NE '' AND '&LOC' NE 'ANY' AND '&LOC' NE 'BELOW')X03080000
               .ERR27               Invalid LOC specified.         @03C 03090000
.*                                                                1@03D 03100000
.*                                                                      03110000
.********************************************************************** 03120000
.*  Validity check the RNL keyword and issue a warning if bad.        * 03130000
.********************************************************************** 03140000
.*                                                                      03150000
         AIF   ('&RNL' NE '' AND '&RNL' NE 'NO' AND '&RNL' NE 'YES').ER*03160000
               R19                     INVALID RNL SPECIFIED       @D1A 03170000
.*                                                                      03180000
.********************************************************************** 03190000
.*  Validity check the ECB, SMC, and RET keywords and their combin-   * 03200000
.*  ations and issue appropriate warning messages if necessary.       * 03210000
.********************************************************************** 03220000
.*                                                                      03230000
         AIF   ('&ECB' NE '' AND '&SMC' NE '' OR '&ECB' NE '' AND '&RET*03240000
               ' NE '').ERR11            SMC, RET NOT ALLOWED WITH ECB  03250000
         AIF   ('&RET' EQ 'NONE' AND '&MASID' NE '').ERR21         @02A 03260000
         AIF   ('&RET' EQ 'USE' AND '&MASID' NE '').ERR22          @02A 03270000
         AIF   ('&RET' EQ 'CHNG' AND '&MASID' NE '').ERR24         @02A 03280000
         AIF   ('&RET' EQ '' AND '&MASID' NE '' AND '&ECB' EQ '').ERR23 03290000
.*                                     MASID/MTCB conflict with    @02A 03300000
.*                                     RET=NONE and RET=USE. Also  @02A 03310000
.*                                     don't let RET be omitted    @02A 03320000
.*                                     unless ECB is specified.    @02A 03330000
.SMC     AIF   ('&SMC' EQ '' OR '&SMC' EQ 'NONE').RET                   03340000
&B(2)    SETB  0                                               @ZA12435 03350000
&B(3)    SETB  ('&SMC' EQ 'STEP')                                       03360000
         AIF   (NOT &B(3)).ERR8                                @ZA12435 03370000
         AIF   ('&MASID' NE '').ERR25  MASID/MTCB & SMC conflict   @02A 03380000
.RET     AIF   ('&RET' EQ '' OR '&RET' EQ 'NONE').RETOK                 03390000
         AIF   (&IHBDEQ).RETDEQ                                         03400000
&B(5)    SETB  ('&RET' EQ 'TEST' OR '&ECB' NE '')                       03410000
&B(6)    SETB ('&RET' EQ 'TEST' OR '&RET' EQ 'USE' OR '&RET' EQ 'CHNG') 03420000
&B(7)    SETB ('&RET' EQ 'TEST' OR '&RET' EQ 'USE' OR '&RET' EQ 'HAVE') 03430000
         AGO   .RETCK                                                   03440000
.RETDEQ  ANOP                                                           03450000
&B(7)    SETB  ('&RET' EQ 'HAVE')                                       03460000
.RETCK   AIF   (NOT &B(5) AND NOT &B(6) AND NOT &B(7)).ERR5             03470000
.RETOK   ANOP                                                           03480000
.*                                                                      03490000
.********************************************************************** 03500000
.*  Validity check the Macro Form (MF=) operand.                      * 03510000
.********************************************************************** 03520000
.********************************************************************** 03530000
.*                  Branch to Execute Form if necessary --->>>        * 03540000
.********************************************************************** 03550000
.********************************************************************** 03560000
.*                                                                      03570000
         AIF   ('&MF(1)' EQ 'E').EROUT Go process Execute form --->>>   03580000
         AIF   ('&MF' EQ 'L').DS       SET NAME FIELD FOR LIST FORM     03590000
         AIF   ('&MF' NE 'I').ERR4     LAST POSSIBLE CHOICE             03600000
.*                                                                      03610000
.********************************************************************** 03620000
.*  Generate branch for Standard Form (MF=I) or MF= omitted.          * 03630000
.********************************************************************** 03640000
.*                                                                      03650000
&LABEL   SETC  'IHB'.'&SYSNDX'         UNIQUE TAG TO BRANCH AROUND LIST 03660000
         CNOP  0,4                                                      03670000
         AIF   (&SYSALVL GT 0).RELB1A                              @PDA 03680000
&NAME    BAL   1,&LABEL                BRANCH AROUND AND ADDRESS LIST   03690000
         AGO   .RELB1B                                             @PDA 03700000
.RELB1A  ANOP                                                      @PDA 03710000
&NAME    BRAS  1,&LABEL                ADDRESS LIST                @PDA 03720000
.RELB1B  ANOP                                                      @PDA 03730000
         AGO   .DS2                    GENERATE PARAMETER LIST     @L1C 03740000
.DS      ANOP                                                           03750000
         DS    0F                      ESTABLISH A FULLWORD BOUNDARY    03760000
.*                                                                      03770000
.********************************************************************** 03780000
.*  Generate parameter list for List (MF=L) or Standard (MF=I) form.  * 03790000
.********************************************************************** 03800000
.*                                                                      03810000
.DS2     AIF   (&PFLEN LT 20).CHKTCB1    NOT NEW-FORMAT PREFIX     @L1A 03820000
.*                                                                      03830000
.********************************************************************** 03840000
.*  Generate parameter list if MASID= present.                    @L1A* 03850000
.********************************************************************** 03860000
.*                                                                      03870000
         AIF   ('&MF' EQ 'L' AND '&TCB' NE '' AND '&TCB' NE '0').ERR15 X03880000
                       TCB MUST BE OMITTED OR ZERO ON MF=L         @L1A 03890000
         DC    A(0)                       TCB-ADDRESS              @L1A 03900000
&C       SETC  '0'                     ASSUME NO ECB-ADDRESS       @L1A 03910000
         AIF   ('&ECB' EQ '').PFNOEC                               @L1A 03920000
         AIF   (&IHBDEQ).ERR6          ECB NOT ALLOWED W. DEQ      @L1A 03930000
         AIF   ('&ECB'(1,1) EQ '(' AND '&MF' EQ 'L').ERR3          @L1A 03940000
&B(5)    SETB  1                       ECB INDICATOR (FOR PELRET)  @P3A 03950000
         AIF   ('&ECB'(1,1) EQ '(').PFNOEC                         @L1A 03960000
&C       SETC  '&ECB'                                              @L1A 03970000
.PFNOEC  DC    A(&C)                      ECB-ADDRESS              @L1A 03980000
         DC    A(0)                       MASID VALUE              @L1A 03990000
         DC    A(0)                       MTCB VALUE               @L1A 04000000
         DC    XL3'000000',AL1(&PFLEN)    PREFIX FORMAT-WORD       @L1A 04010000
&LSTEND  SETA  8                       SET PELSAVE FOR NEW PREFIX  @L1A 04020000
         AGO   .GENGEN                 DEFINE ELEMENTS             @L1A 04030000
.*                                                                      04040000
.********************************************************************** 04050000
.*  Generate parameter list if MASID= absent.  TCB= and/or ECB=   @L1A* 04060000
.*  may be present.                                               @L1C* 04070000
.********************************************************************** 04080000
.*                                                                      04090000
.CHKTCB1 AIF ('&TCB' EQ '').ECB        NOT TCB, CHECK ECB      @ZA14267 04100000
.*                                                                      04110000
.********************************************************************** 04120000
.*  Process the TCB= operand (PEL-PREFIX).                            * 04130000
.********************************************************************** 04140000
.*                                                                      04150000
&LSTEND  SETA  1                       SHOW DIRECTED ENQ/DEQ     X02113 04160000
         AIF   ('&MF' EQ 'I').STNDARD  IF LIST FORM, TCB=0       X02113 04170000
         AIF   ('&TCB' NE '0').ERR15   ERROR IN SPECIFYING TCB   X02113 04180000
.STNDARD ANOP                                                    X02113 04190000
.TCBREG  DC    A(0)                    PREFIX - TCB ADDRESS      X02113 04200000
.*                                                                      04210000
.********************************************************************** 04220000
.*  Process the ECB= operand (PEL-PREFIX).                            * 04230000
.********************************************************************** 04240000
.*                                                                      04250000
.ECB     AIF   ('&ECB' EQ '').GENGEN   IF NOT ECB, CONTINUE        @L1C 04260000
         AIF   (&IHBDEQ).ERR6          ECB NOT ALLOWED W. DEQ           04270000
&B(5)    SETB  1                       ECB INDICATOR                    04280000
         AIF   ('&ECB'(1,1) EQ '(').ECBREG     ADDRESS FOUND IN A REG   04290000
         DC    A(&ECB)                 PREFIX - ECB ADDRESS             04300000
         AGO   .GENGEN                                             @L1C 04310000
.ECBREG  AIF   ('&MF' EQ 'L').ERR3                                      04320000
         DC    A(0)                    PREFIX - ECB ADDRESS             04330000
.*                                                                      04340000
.********************************************************************** 04350000
.*  Process the Generic= operand and generate a label.                * 04360000
.********************************************************************** 04370000
.*                                                                      04380000
.GENGEN ANOP                                                       @L1C 04390000
         AIF   ('&GENERIC' EQ 'NO').NOGEN1                       X02113 04400000
&LSTEND  SETA  &LSTEND+2               INDICATE GENERIC DEQ      X02113 04410000
.NOGEN1  ANOP                                                    X02113 04420000
.*                                                                      04430000
.********************************************************************** 04440000
.*  Process the RNL= operand.                                         * 04450000
.********************************************************************** 04460000
.*                                                                      04470000
         AIF   ('&RNL' NE 'NO').SKIPRNL                            @D1A 04480000
&LSTEND  SETA  &LSTEND+4               INDICATE RNL(NO)            @D1A 04490000
.SKIPRNL ANOP                                                      @D1A 04500000
.*                                                                      04510000
.********************************************************************** 04520000
.********************************************************************** 04530000
.******      End validity check of all keyword operands.              * 04540000
.********************************************************************** 04550000
.********************************************************************** 04560000
.*                                                                      04570000
         AIF   ('&MF' EQ 'I').STNDFRM                            X02113 04580000
         AIF   ('&NAME' EQ '').STNDFRM                           X02113 04590000
&NAME    EQU   *                                                 X02113 04600000
.STNDFRM ANOP                                                    X02113 04610000
&QN      SETA  1                       INDEX TO QNAME POSITIONAL PARM   04620000
.*                                                                      04630000
.********************************************************************** 04640000
.********************************************************************** 04650000
.******      Loop to generate a PEL for each Resource Name.      ****** 04660000
.********************************************************************** 04670000
.******         Standard (MF=I) and List (MF=L) formats.         ****** 04680000
.********************************************************************** 04690000
.********************************************************************** 04700000
.*                                                                      04710000
.LOOP1   ANOP                                                           04720000
&RN      SETA  &QN+1                   RNAME - 2ND POSITIONAL PARM      04730000
&ES      SETA  &RN+&NQ                 EX/SHR - 3RD W. ENQ RES          04740000
&RL      SETA  &ES+1                   RNAME LENGTH - NEXT PARM         04750000
&SS      SETA  &RL+1                   STEP/SYSTEM - LAST PARM OF SEQ   04760000
.*                                                                      04770000
.********************************************************************** 04780000
.*  Handle PELSHR, PELSCPE1, PELSCPE2 for EXCLUSIVE/SHARED, SCOPE=,   * 04790000
.*  and UCB= keywords.                                            @03C* 04800000
.********************************************************************** 04810000
.*                                                                      04820000
&B(8)    SETB  0                       SHARED/EXCLUSIVE - EX DEFAULTS   04830000
&B(1)    SETB  0                       SCOPE - 1 EQ SYSTEM OR SYSTEMS   04840000
&B(4)    SETB  0                       0 EQ STEP; 1 EQ SYSTEMS or UCB   04850000
.*                                                                      04860000
.********************************************************************** 04870000
.*  EXCLUSIVE/SHARED parameter.  Valid for ENQ/RESERVE only.          * 04880000
.********************************************************************** 04890000
.*                                                                      04900000
         AIF   (&IHBDEQ).SCOPE                                          04910000
         AIF   ('&P(&ES)' EQ '' OR '&P(&ES)' EQ 'E').SCOPE              04920000
         AIF   ('&P(&ES)' NE 'S').ERR9                                  04930000
&B(8)    SETB  1                       SHARED REQUEST                   04940000
.*                                                                      04950000
.********************************************************************** 04960000
.*  SCOPE parameter (STEP/SYSTEM/SYSTEMS).                            * 04970000
.********************************************************************** 04980000
.*                                                                      04990000
.SCOPE   AIF   ('&UCB' NE '').UCB   Was a UCB keyword specified?   @03C 05000000
         AIF   ('&P(&SS)' EQ '' OR '&P(&SS)' EQ 'STEP').LISTEND         05010000
&B(1)    SETB  ('&P(&SS)' EQ 'SYSTEMS')                                 05020000
&B(4)    SETB  ('&P(&SS)' EQ 'SYSTEMS')                                 05030000
         AIF   (&B(1)).LISTEND                                          05040000
&B(1)    SETB  ('&P(&SS)' EQ 'SYSTEM')                                  05050000
         AIF   (NOT &B(1)).ERR10                                        05060000
         AGO   .LISTEND                                                 05070000
.UCB     ANOP                                                           05080000
         AIF   ('&P(&SS)' EQ 'SYSTEMS' OR '&P(&SS)' EQ '').UCB2         05090000
.*                                  Is SCOPE valid with UCB?       @03C 05100000
         AIF   (&IHBRES).BADRESV         NO, GIVE A WARNING MSG    @P8C 05110000
.*                                                                1@03D 05120000
         IHBERMAC 1015,&P(&SS),UCB,SYSTEMS  SCOPE IS INVALID W/UCB @P8C 05130000
         AGO   .UCB2                                               @P8A 05140000
.*                                                                3@03D 05150000
.BADRESV ANOP      A RESERVE SPECIFIED SCOPE OF STEP OR SYSTEM     @P8A 05160000
         IHBERMAC 1015,&P(&SS),RESERVE,SYSTEMS   SCOPE IS INVALID ON    05170000
.*                                       A RESERVE                 @P8A 05180000
.UCB2    ANOP                                                      @P7A 05190000
&B(4)    SETB  1                                                   SDS1 05200000
.*                                                                      05210000
.********************************************************************** 05220000
.*  Process the LOC keyword.                                          * 05230000
.********************************************************************** 05240000
.*                                                                      05250000
         AIF   ('&LOC' EQ '' OR '&LOC' EQ 'BELOW').SKIPLOC         @03C 05260000
.*                                  If LOC=ANY was specified then...    05270000
&LSTEND  SETA  &LSTEND+32           Set the PELOCANY flag.         @03C 05280000
.SKIPLOC ANOP                                                      @03C 05290000
.*                                                                      05300000
.********************************************************************** 05310000
.*  Process the PELIGNOR flag.                                        * 05320000
.********************************************************************** 05330000
.*                                                                      05340000
.LISTEND AIF   ('&LSTEND' NE '0').NOLD   If no new options...    X02113 05350000
&LSTEND  SETA  64                   ...set the PELIGNOR flag     X02113 05360000
.*                                   so bits 2-7 are ignored.    X02113 05370000
.NOLD    ANOP                                                    X02113 05380000
.*                                                                      05390000
.********************************************************************** 05400000
.*  Process the PELEOL flag.                                          * 05410000
.********************************************************************** 05420000
.*                                                                      05430000
         AIF   (&QN+4+&NQ LE &NUMBER).NOTLAST                    X02113 05440000
&LSTEND  SETA  &LSTEND+128             SET TO SHOW END OF LIST   X02113 05450000
.NOTLAST DC    AL1(&LSTEND)            PELLAST flag byte.        X02113 05460000
.*                                                                      05470000
.********************************************************************** 05480000
.*  Process the PELMILEN value (RNAME length).                        * 05490000
.********************************************************************** 05500000
.*                                                                      05510000
.LENGTH  AIF   ('&P(&RL)' EQ '' AND '&MF' EQ 'L').NAMEL                 05520000
         AIF   ('&P(&RN)' EQ '').SKIP                                   05530000
         AIF   ('&P(&RL)' EQ '' AND '&P(&RN)'(1,1) EQ '(').ERR2         05540000
.SKIP    AIF   ('&P(&RL)' EQ '').NAMEL                                  05550000
         AIF   ('&P(&RL)'(1,1) EQ '(').REGL                             05560000
         DC    AL1(&P(&RL))            PELMILEN - RNAME length.         05570000
         AGO   .CODE                                                    05580000
.REGL    AIF   ('&MF' EQ 'L').ERR3                                      05590000
.ZEROL   DC    AL1(0)                  PELMILEN - RNAME length.         05600000
         AGO   .CODE                                                    05610000
.NAMEL   AIF   ('&P(&RN)' EQ '').ZEROL                                  05620000
&TYPER   SETC  T'&P(&RN)               SET TYPE ATTRIBUTE     @YA18966  05630000
         AIF   ('&TYPER' EQ 'C').CTYPE TEST FOR CHARACTER               05640000
.*                                     CONSTANT ATTRIBUTE     @YA18966  05650000
         DC    AL1(L'&P(&RN))          PELMILEN - RNAME length.         05660000
.*                                                            @YA12665  05670000
         AGO   .CODE                                                    05680000
.CTYPE   ANOP                                                 @YA18966  05690000
&LEN     SETA  L'&P(&RN)                                                05700000
         DC    AL1(&LEN)               PELMILEN - RNAME length.         05710000
.*                                                                      05720000
.********************************************************************** 05730000
.*  Process the PELFLAG and PELRET indicators (Options and Return     * 05740000
.*  Code flags).                                                      * 05750000
.********************************************************************** 05760000
.*                                                                      05770000
.CODE    DC    BL1'&B(8)&B(1)&B(2)&B(3)&B(4)&B(5)&B(6)&B(7)'            05780000
*                                      PELFLAG - flag byte 2.           05790000
         DC    AL1(0)                  PELRET - return code byte.       05800000
.*                                                                      05810000
.********************************************************************** 05820000
.*  Process the PELMAJA and PELMINA fields (QNAME and RNAME           * 05830000
.*  addresses).  RNAME can and must be omitted for GENERIC=YES.       * 05840000
.********************************************************************** 05850000
.*                                                                      05860000
         AIF   ('&P(&QN)' EQ '' AND '&MF' EQ 'L').ZEROQ                 05870000
         AIF   ('&P(&QN)' EQ '').ERR2                                   05880000
         AIF   ('&P(&QN)'(1,1) EQ '(').REGQ   IF QNAME-ADDRESS IN REG   05890000
         DC    A(&P(&QN))              QNAME ADDRESS                    05900000
         AGO   .RNAME                                                   05910000
.REGQ    AIF   ('&MF' EQ 'L').ERR3                                      05920000
.ZEROQ   DC    A(0)                    QNAME ADDRESS                    05930000
.RNAME   AIF   ('&P(&RN)' EQ '' AND '&MF' EQ 'L').ZEROR                 05940000
         AIF   ('&GENERIC' EQ 'NO').NOGEN2                       X02113 05950000
         AIF   ('&P(&RN)' EQ '').ZEROR SHOULD BE NO RNAME W GEN. X02113 05960000
         IHBERMAC 1016,RNAME,GENERIC                             X02113 05970000
         AGO   .ZEROR                                            X02113 05980000
.NOGEN2  ANOP                                                    X02113 05990000
         AIF   ('&P(&RN)' EQ '').ERR2                                   06000000
         AIF   ('&P(&RN)'(1,1) EQ '(').REGR                             06010000
         DC    A(&P(&RN))              RNAME ADDRESS                    06020000
         AGO   .CONT                                                    06030000
.REGR    AIF   ('&MF' EQ 'L').ERR3                                      06040000
.ZEROR   DC    A(0)                    RNAME ADDRESS                    06050000
.CONT    ANOP                                                           06060000
&QN      SETA  &QN+4+&NQ                                                06070000
         AIF   (&QN LE &NUMBER).LOOP1                            X02113 06080000
.*                                                                      06090000
.********************************************************************** 06100000
.********************************************************************** 06110000
.******    End loop to generate a PEL for each Resource Name.    ****** 06120000
.********************************************************************** 06130000
.******         Standard (MF=I) and List (MF=L) formats.         ****** 06140000
.********************************************************************** 06150000
.********************************************************************** 06160000
.*                                                                      06170000
.END     ANOP                                                      @L2C 06180000
.*                                                                      06190000
.********************************************************************** 06200000
.*  Process the PELUCBAA field if UCB= was specified.                 * 06210000
.********************************************************************** 06220000
.*                                                                1@03D 06230000
         AIF   ('&UCB' EQ '').EXITML                               @L2C 06240000
.*                                  If no UCB keyword then exit.        06250000
         AIF   ('&UCB'(1,1) EQ '(').ENQ040                         SDS1 06260000
.*                                  If the UCB keyword is in register   06270000
.*                                  format then branch.                 06280000
         DC    A(&UCB)                 PELUCBAA - address to pointer    06290000
*                                                 to UCB.               06300000
         AGO   .EXITML                                             @L1C 06310000
.ENQ040  AIF   ('&MF' EQ 'L').ERR3  Go issue a terminating error        06320000
.*                                  message.                            06330000
         DC    A(0)                 UCB parameter value.                06340000
.*                                                                7@03D 06350000
.********************************************************************** 06360000
.*  Exit Macro if List Form (MF=L).  Otherwise, branch to process     * 06370000
.*  Standard Form.                                                    * 06380000
.********************************************************************** 06390000
.*                                                                      06400000
.EXITML  AIF   ('&MF' EQ 'I').STORE    Branch if Standard Form.    @L1C 06410000
&IHBDEQ  SETB  0                       No SVC is generated for MF=L.    06420000
&IHBRES  SETB  0                       Ditto.                      SDS1 06430000
.*                                                                      06440000
.********************************************************************** 06450000
.********************************************************************** 06460000
.******                List Form (MF=L) Macro Exit --->>>        ****** 06470000
.********************************************************************** 06480000
.********************************************************************** 06490000
.*                                                                      06500000
         MEXIT                      List Form (MF=L) Macro Exit --->>>  06510000
.*                                                                      06520000
.********************************************************************** 06530000
.********************************************************************** 06540000
.******               Process Standard Form (MF=I)               ****** 06550000
.********************************************************************** 06560000
.********************************************************************** 06570000
.*                                                                      06580000
.********************************************************************** 06590000
.*  Store values from registers, if necessary.                        * 06600000
.********************************************************************** 06610000
.*                                                                      06620000
.STORE   ANOP                                                           06630000
.*                                                                      06640000
.********************************************************************** 06650000
.*  Checking for parameter list.                                      * 06660000
.********************************************************************** 06670000
.*                                                                      06680000
&LABEL   DS    0H                      OBJECT OF THE BAL                06690000
         AIF   ('&SYSASCE' EQ 'P').ASCP2                           @04A 06700000
         LAE   1,0(1,0)                CLEAR AR1                   @04A 06710000
.ASCP2   ANOP ,                                                    @04A 06720000
.*                                                                      06730000
.********************************************************************** 06740000
.*  Process the TCB= keyword (store in the PEL-PREFIX).               * 06750000
.********************************************************************** 06760000
.*                                                                      06770000
         AIF   ('&TCB' EQ '').CHKECB   IF NOT TCB, CHECK ECB   @ZA14267 06780000
         AIF   ('&TCB'(1,1) EQ '(').STRGTCB CHK FOR NONREG PTR @ZA14267 06790000
         L     0,&TCB                  PICK UP TCB ADDRESS     @ZA14267 06800000
         ST    0,&PFTCBD.(0,1)         PUT IN PREFIX               @L1C 06810000
         AGO   .CHKECB                 GO CHECK FOR ECB PFX    @ZA14267 06820000
.STRGTCB ANOP                          TCB PTR PASSED IN REG   @ZA14267 06830000
&LEN     SETA  K'&TCB-2                SET LEN OF REG NBR      @ZA14267 06840000
&C       SETC  '&TCB'(2,&LEN)          SET DC TO REG NBR       @ZA14267 06850000
         ST    &C,&PFTCBD.(0,1)        STORE TCB ADDRESS           @L1C 06860000
.CHKECB  ANOP                                                  @ZA14267 06870000
.*                                                                      06880000
.********************************************************************** 06890000
.*  Process the ECB= keyword (store in the PEL-PREFIX).               * 06900000
.********************************************************************** 06910000
.*                                                                      06920000
         AIF   ('&ECB' EQ '').CHKMAS   ECB NOT CODED               @P2C 06930000
         AIF   ('&ECB'(1,1) NE '(').CHKMAS                     @ZA14267 06940000
.* (IF ECB WAS CODED BUT NOT AS A REG, IT IS ALREADY IN PFX)   @ZA14267 06950000
&LEN     SETA  K'&ECB-2                SET LEN OF REG NBR      @ZA14267 06960000
&C       SETC  '&ECB'(2,&LEN)          SET &C TO REG NBR       @ZA14267 06970000
.*                                                                 @L1D 06980000
         ST    &C,&PFECBD.(0,1)        STORE ECB ADDRESS           @L1C 06990000
.*                                                                      07000000
.********************************************************************** 07010000
.*  Process the MASID= keyword.                                       * 07020000
.********************************************************************** 07030000
.*                                                                      07040000
.CHKMAS  AIF   ('&MASID' EQ '').CHKMTC        SKIP MASID SETUP     @L1A 07050000
         AIF   ('&MASID' EQ '0').CHKMTC                            @L1A 07060000
         AIF   ('&MASID'(1,1) EQ '(').IMASINR                      @L1A 07070000
         L     0,&MASID                PICK UP MASID VALUE         @L1A 07080000
&C       SETC  '0'                     REGISTER 0 IS MASID SOURCE  @L1A 07090000
         AGO   .IMASST                 STORE MASID IN LIST         @L1A 07100000
.IMASINR ANOP                          MF=I, MASID IS IN REGISTER  @L1A 07110000
&LEN     SETA  K'&MASID-2              SET &LEN TO LEN OF REG NBR  @L1A 07120000
&C       SETC  '&MASID'(2,&LEN)        REG NBR IS MASID SOURCE     @L1A 07130000
.IMASST  ST    &C,&PFMASD.(1)          SET MASID VALUE IN LIST     @L1A 07140000
.*                                                                      07150000
.********************************************************************** 07160000
.*  Process the MTCB= keyword.                                        * 07170000
.********************************************************************** 07180000
.*                                                                      07190000
.CHKMTC  AIF   ('&MTCB' EQ '').CHKEND         SKIP MTCB SETUP      @L1A 07200000
         AIF   ('&MTCB' EQ '0').CHKEND                             @L1A 07210000
         AIF   ('&MTCB'(1,1) EQ '(').IMTCINR                       @L1A 07220000
         L     0,&MTCB                 PICK UP MTCB VALUE          @L1A 07230000
&C       SETC  '0'                     REGISTER 0 IS MTCB SOURCE   @L1A 07240000
         AGO   .IMTCST                 STORE MTCB IN LIST          @L1A 07250000
.IMTCINR ANOP                          MF=I, MTCB IS IN REGISTER   @L1A 07260000
&LEN     SETA  K'&MTCB-2               SET &LEN TO LEN OF REG NBR  @L1A 07270000
&C       SETC  '&MTCB'(2,&LEN)         SET &C TO REG NBR           @L1A 07280000
.IMTCST  ST    &C,&PFMTCD.(1)          SET MTCB VALUE IN LIST      @L1A 07290000
.CHKEND  ANOP                                                      @L1A 07300000
.*                                                                      07310000
.********************************************************************** 07320000
.*  Adjust the parameter list pointer, Register 1, past the prefix,   * 07330000
.*  if present.                                                       * 07340000
.********************************************************************** 07350000
.*                                                                      07360000
.CHKLA   AIF   (&PFLEN EQ 0).SETUP     NO PREFIX                   @L1C 07370000
.*                                                                 @L1D 07380000
         LA    1,&PFLEN.(0,1)          MOVE POINTER PAST PREFIX    @L1C 07390000
.*                                                                2@L1D 07400000
.SETUP   ANOP                                                           07410000
&LIST    SETA  0                         INDEX TO PARAMETER LIST        07420000
&QN      SETA  1                                                        07430000
.*                                                                      07440000
.********************************************************************** 07450000
.********************************************************************** 07460000
.******      Loop to generate a PEL for each Resource Name.      ****** 07470000
.********************************************************************** 07480000
.******                  Standard Form (MF=I)                    ****** 07490000
.********************************************************************** 07500000
.********************************************************************** 07510000
.*                                                                      07520000
.LOOP2   ANOP                                                           07530000
&RN      SETA  &QN+1                                                    07540000
&RL      SETA  &QN+2+&NQ                                                07550000
&LIST    SETA  &LIST+1                  POINT INDEX TO RNAME LENGTH     07560000
         AIF   ('&P(&RL)' EQ '').NOREGL                                 07570000
         AIF   ('&P(&RL)'(1,1) NE '(').NOREGL                           07580000
&LEN     SETA  K'&P(&RL)-2                                              07590000
&C       SETC  '&P(&RL)'(2,&LEN)                                        07600000
         STC   &C,&LIST.(0,1)                     STORE RNAME LENGTH    07610000
.*                                                                      07620000
.********************************************************************** 07630000
.*  Process the PELMAJA field (QNAME address)                         * 07640000
.********************************************************************** 07650000
.*                                                                      07660000
.NOREGL  ANOP                                                           07670000
&LIST    SETA  &LIST+3                   ADDRESS QNAME ADDRESS SLOT     07680000
         AIF   ('&P(&QN)'(1,1) NE '(').NOREGQ                           07690000
&LEN     SETA  K'&P(&QN)-2                                              07700000
&C       SETC  '&P(&QN)'(2,&LEN)                                        07710000
         ST    &C,&LIST.(0,1)                     STORE QNAME ADDRESS   07720000
.*                                                                      07730000
.********************************************************************** 07740000
.*  Process the PELMINA field (RNAME address)                         * 07750000
.********************************************************************** 07760000
.*                                                                      07770000
.NOREGQ  ANOP                                                           07780000
&LIST    SETA  &LIST+4                                                  07790000
         AIF   ('&GENERIC' EQ 'YES').NOREGR                      X02113 07800000
.*                                     IGNORE RNAME IF GENERIC   X02113 07810000
         AIF   ('&P(&RN)'(1,1) NE '(').NOREGR                           07820000
&LEN     SETA  K'&P(&RN)-2                                              07830000
&C       SETC  '&P(&RN)'(2,&LEN)                                        07840000
         ST    &C,&LIST.(0,1)                     STORE RNAME ADDRESS   07850000
.NOREGR  ANOP                                                           07860000
&LIST    SETA  &LIST+4                                                  07870000
&QN      SETA  &QN+4+&NQ                                                07880000
         AIF   (&QN LE &NUMBER).LOOP2                            X02113 07890000
.*                                                                      07900000
.********************************************************************** 07910000
.********************************************************************** 07920000
.******    End loop to generate a PEL for each Resource Name.    ****** 07930000
.********************************************************************** 07940000
.******                  Standard Form (MF=I)                    ****** 07950000
.********************************************************************** 07960000
.********************************************************************** 07970000
.*                                                                      07980000
.********************************************************************** 07990000
.*  Process the PELUCBAA field if UCB= was specified.                 * 08000000
.********************************************************************** 08010000
.*                                                                      08020000
.END1    AIF   ('&UCB' EQ '').EXITMIE                              @03C 08030000
.*                                                                1@03D 08040000
         AIF   ('&UCB'(1,1) NE '(').EXITMIE                        SDS1 08050000
&LEN     SETA  K'&UCB-2                                            SDS1 08060000
&C       SETC  '&UCB'(2,&LEN)                                      SDS1 08070000
         ST    &C,&LIST.(0,1)     STORE UCB PARAMETER              SDS1 08080000
.EXITMIE AIF   (&IHBDEQ OR &IHBRES).MEXIT   EXIT MF=I OR MF=E      SDS1 08090000
         AIF   ('&LINKAGE' EQ 'SYSTEM').EXITPC  ISSUE PC           @L3A 08100000
         SVC   56                                                       08110000
         AGO   .NOPC                                               @L3A 08120000
.EXITPC  &L    15,16(0,0)              GET ADDRESS OF CVT          @06C 08130000
         &L    15,772(15,0)            GET ADDRESS OF SFT          @06C 08140000
         &L    15,85*4-4(15,0)         GET LX/EX FOR PC ENQ        @06C 08150000
         PC    0(15)                                               @L1C 08160000
.NOPC    ANOP                                                           08170000
.*                                                                      08180000
.********************************************************************** 08190000
.********************************************************************** 08200000
.*   Exit Macro without generating an SVC for both DEQ and RESERVE.   * 08210000
.********************************************************************** 08220000
.********************************************************************** 08230000
.*                                                                      08240000
.MEXIT   MEXIT                                                          08250000
.*                                                                      08260000
.********************************************************************** 08270000
.********************************************************************** 08280000
.******                 Process Execute Form (MF=E)              ****** 08290000
.********************************************************************** 08300000
.********************************************************************** 08310000
.*                                                                      08320000
.********************************************************************** 08330000
.*  Store values from registers, if necessary.                        * 08340000
.********************************************************************** 08350000
.*                                                                      08360000
.EROUT   ANOP                                                           08370000
         AIF   (N'&MF NE 2).ERR4                                        08380000
.*                                                                      08390000
.********************************************************************** 08400000
.*  Point Register 1 at the PEL Prefix, if necessary.                 * 08410000
.********************************************************************** 08420000
.*                                                                      08430000
         AIF   (&PFLEN EQ 0).INNRA     NO PREFIX                   @L1A 08440000
         AIF   ('&MF(2)'(1,1) EQ '(').GETPFL                       @L1A 08450000
&NAME    DS    0H                      INITIALIZE PARAMETER-LIST   @L1A 08460000
         AGO   .PFTCB                  TEST FOR TCB OPERAND        @L1A 08470000
.GETPFL  ANOP                                                      @L1A 08480000
&NAME    LA    0,&PFLEN.(0,0)          GET LENGTH OF PREFIX        @L1A 08490000
         AIF   (K'&MF(2) EQ 3 AND '&MF(2)'(2,1) EQ '1').INREG1     @L1M 08500000
.*                                     CHECK IF PARM LIST ADDR     @L1M 08510000
.*                                     IS IN REG 1                 @L1M 08520000
         IHBSETR &MF(2),1              SET PARM LIST IN REG 1      @05C 08530000
.INREG1  SR    1,0                     ADDRESS THE PREFIX          @L1M 08540000
.*                                                              002@L1D 08550000
.PFTCB   AIF   ('&TCB' EQ '').PFECB    GO CHECK FOR ECB            @L1C 08560000
.*                                                                      08570000
.********************************************************************** 08580000
.*  Process the TCB= keyword (store in the PEL-PREFIX).               * 08590000
.********************************************************************** 08600000
.*                                                                      08610000
&BA(1)   SETB  1                    TCB OPERAND IS PRESENT         @L1C 08620000
         AIF   ('&MF(2)'(1,1) EQ '(').RSVTCB                       @L1C 08630000
.*                                                                 @L1D 08640000
         AIF   ('&TCB'(1,1) EQ '(').STCBINR                        @L1C 08650000
         L     0,&TCB                  PICK UP TCB ADDRESS         @L1C 08660000
&C       SETC  '0'                                                 @L1C 08670000
         AGO   .STCBST                                             @L1C 08680000
.*                                                               X02113 08690000
.STCBINR ANOP                                                      @L1C 08700000
&LEN     SETA  K'&TCB-2                SET &LEN TO LEN OF REG NBRX02113 08710000
&C       SETC  '&TCB'(2,&LEN)          SET &C TO REG NBR         X02113 08720000
.STCBST  ST    &C,&MF(2)-&PFLEN+&PFTCBD   SET TCB ADDRESS IN LIST  @L1C 08730000
         AGO   .PFECB                          TCB OPERAND IS DONE @L1C 08740000
.*                                                              013@L1D 08750000
.RSVTCB ANOP                       MF=REG, SET VALUE OF TCB        @L1A 08760000
        AIF    ('&TCB'(1,1) EQ '(').RTCBINR                        @L1C 08770000
         L     0,&TCB                  PICK UP TCB ADDRESS       X02113 08780000
&C       SETC  '0'                                                 @L1A 08790000
.*                                                                 @L1D 08800000
         AGO   .RTCBST                                             @L1C 08810000
.*                                                               X02113 08820000
.RTCBINR ANOP                          TCB IS IN REG             X02113 08830000
&LEN     SETA  K'&TCB-2                                          X02113 08840000
&C       SETC  '&TCB'(2,&LEN)                                    X02113 08850000
.RTCBST  ST    &C,&PFTCBD.(0,1)        SET TCB IN PARM PREFIX      @L1C 08860000
.*                                                              004@L1D 08870000
.*                                                                      08880000
.********************************************************************** 08890000
.*  Process the ECB= keyword (store in the PEL-PREFIX).               * 08900000
.********************************************************************** 08910000
.*                                                                      08920000
.PFECB   AIF   ('&ECB' EQ '').PFMAS              CHECK FOR MASID   @L1A 08930000
         AIF   ('&MF(2)'(1,1) EQ '(').RSVECB                       @L1C 08940000
         AIF   ('&ECB'(1,1) EQ '(').SECBINR                        @L1C 08950000
         LA    0,&ECB                  . ADDRESS THE ECB           @L1C 08960000
&C       SETC  '0'                                                 @L1C 08970000
         AGO   .SECBST                                             @L1C 08980000
.*                                                                      08990000
.SECBINR ANOP                                                      @L1C 09000000
&LEN     SETA  K'&ECB-2                                          X02113 09010000
&C       SETC  '&ECB'(2,&LEN)          GET REGISTER NAME         X02113 09020000
.SECBST  ST    &C,&MF(2)-&PFLEN+&PFECBD   .SET ECB ADDR IN PREFIX  @L1C 09030000
         AGO   .PFMAS                    ECB OPERAND IS DONE       @L1C 09040000
.*                                                                 @L1D 09050000
.RSVECB  ANOP                      MF=REG, SET VALUE OF ECB        @L1C 09060000
.*                                                              006@L1D 09070000
         AIF   ('&ECB'(1,1) EQ '(').RECBINR                        @L1C 09080000
         LA    0,&ECB                  . AND THE ECB                    09090000
&C       SETC  '0'                                                 @L1C 09100000
.*                                                                 @L1D 09110000
         AGO   .RECBST                                             @L1C 09120000
.*                                                                      09130000
.RECBINR ANOP                                                      @L1C 09140000
&LEN     SETA  K'&ECB-2                                                 09150000
&C       SETC  '&ECB'(2,&LEN)                                           09160000
.RECBST  ST    &C,&PFECBD.(0,1)        . SET ECB IN PARM PREFIX    @L1C 09170000
.*                                                                2@L1D 09180000
.*                                                                      09190000
.********************************************************************** 09200000
.*  Process the MASID= keyword.                                       * 09210000
.********************************************************************** 09220000
.*                                                                      09230000
.PFMAS   AIF   ('&MASID' EQ '').PFMTC         SKIP MASID SETUP     @L1A 09240000
         AIF   ('&MASID' EQ '0').PFMTC                             @L1A 09250000
         AIF   ('&MF(2)'(1,1) EQ '(').RSVMAS   MF=(E,(REG)) MASID  @L1A 09260000
         AIF   ('&MASID'(1,1) EQ '(').SMASINR                      @L1A 09270000
         L     0,&MASID                PICK UP MASID VALUE         @L1A 09280000
&C       SETC  '0'                     SET &C TO 0                 @L1A 09290000
         AGO   .SMASST                 STORE MASID IN LIST         @L1A 09300000
.*                                                                 @L1A 09310000
.SMASINR ANOP                    MF=SYMBOL, SET VALUE OF MASID     @L1A 09320000
&LEN     SETA  K'&MASID-2              SET &LEN TO LEN OF REG NBR  @L1A 09330000
&C       SETC  '&MASID'(2,&LEN)        SET &C TO REG NBR           @L1A 09340000
.SMASST  ST    &C,&MF(2)-&PFLEN+&PFMASD   SET MASID VALUE IN LIST  @L1A 09350000
         AGO   .PFMTC                  MASID OPERAND DONE          @L1A 09360000
.RSVMAS  ANOP                    MF=REG, SET VALUE OF MASID        @L1A 09370000
         AIF   ('&MASID'(1,1) EQ '(').RMASINR                      @L1A 09380000
         L     0,&MASID                PICK UP MASID VALUE         @L1A 09390000
&C       SETC  '0'                     SET &C TO 0                 @L1A 09400000
         AGO   .RMASST                 STORE MASID IN LIST         @L1A 09410000
.*                                                                 @L1A 09420000
.RMASINR ANOP                    MF=REG, MASID IN REGISTER         @L1A 09430000
&LEN     SETA  K'&MASID-2              SET &LEN TO LEN OF REG NBR  @L1A 09440000
&C       SETC  '&MASID'(2,&LEN)        SET &C TO REG NBR           @L1A 09450000
.RMASST  ST    &C,&PFMASD.(1)             SET MASID VALUE IN LIST  @L1A 09460000
.*                                                                      09470000
.********************************************************************** 09480000
.*  Process the MTCB= keyword.                                        * 09490000
.********************************************************************** 09500000
.*                                                                      09510000
.PFMTC   AIF   ('&MTCB' EQ '').PFEND          SKIP MTCB SETUP      @L1A 09520000
         AIF   ('&MTCB' EQ '0').PFEND                              @L1A 09530000
         AIF   ('&MF(2)'(1,1) EQ '(').RSVMTC   MF=(E,(REG)) MTCB   @L1A 09540000
         AIF   ('&MTCB'(1,1) EQ '(').SMTCINR                       @L1A 09550000
         L     0,&MTCB                 PICK UP MTCB VALUE          @L1A 09560000
&C       SETC  '0'                     SET &C TO 0                 @L1A 09570000
         AGO   .SMTCST                 STORE MTCB IN LIST          @L1A 09580000
.*                                                                 @L1A 09590000
.SMTCINR ANOP                      MF=SYMBOL, SET VALUE OF MTCB    @L1A 09600000
&LEN     SETA  K'&MTCB-2               SET &LEN TO LEN OF REG NBR  @L1A 09610000
&C       SETC  '&MTCB'(2,&LEN)         SET &C TO REG NBR           @L1A 09620000
.SMTCST  ST    &C,&MF(2)-&PFLEN+&PFMTCD   SET MTCB VALUE IN LIST   @L1A 09630000
         AGO   .PFEND                  MTCB OPERAND DONE           @L1A 09640000
.RSVMTC  ANOP                      MF=REG, SET VALUE OF MTCB       @L1A 09650000
         AIF   ('&MTCB'(1,1) EQ '(').RMTCINR                       @L1A 09660000
         L     0,&MTCB                 PICK UP MTCB VALUE          @L1A 09670000
&C       SETC  '0'                     SET &C TO 0                 @L1A 09680000
         AGO   .RMTCST                 STORE MTCB IN LIST          @L1A 09690000
.*                                                                 @L1A 09700000
.RMTCINR ANOP                      MF=REGISTER, MTCB IN REGISTER   @L1A 09710000
&LEN     SETA  K'&MTCB-2               SET &LEN TO LEN OF REG NBR  @L1A 09720000
&C       SETC  '&MTCB'(2,&LEN)         SET &C TO REG NBR           @L1A 09730000
.RMTCST  ST    &C,&PFMTCD.(1)          SET MTCB VALUE IN LIST      @L1A 09740000
.PFEND   ANOP                                                      @L1A 09750000
.*                                                                      09760000
.********************************************************************** 09770000
.*  Adjust the parameter list pointer, Register 1, past the prefix,   * 09780000
.*  if present.                                                       * 09790000
.********************************************************************** 09800000
.*                                                                      09810000
         AIF   ('&MF(2)'(1,1) NE '(').PFSYM                        @L1A 09820000
         LA    1,&PFLEN.(0,1)          SKIP OVER PREFIX            @L1A 09830000
         AGO   .EXLOOPS                                            @L1C 09840000
.PFSYM   ANOP                                                      @L1A 09850000
         IHBSETR  &MF(2),1             . ADDRESS THE LIST          @04C 09860000
         AGO   .EXLOOPS                                                 09870000
.*                                                              068@L1D 09880000
.*                                                                      09890000
.INNRA   ANOP                                                           09900000
&NAME    DS    0H                                                  @04A 09910000
         IHBSETR &MF(2),1                                          @04C 09920000
.*                                                               X02113 09930000
.EXLOOPS ANOP                                                           09940000
.*                                                                      09950000
.********************************************************************** 09960000
.*  Prepare to set values of the keyword operands into each PEL.      * 09970000
.*  However, bypass this process if none of the following positional  * 09980000
.*  operands were specified:                                          * 09990000
.*  SMC=, RET=, UCB=, RNL=,TCB=, or LOC=.                         @03C* 10000000
.********************************************************************** 10010000
.*                                                                      10020000
&QN      SETA  1                                                        10030000
&LIST    SETA  0                                                        10040000
&BA(2)   SETB  ('&GENERIC' EQ 'YES')                                    10050000
&BA(3)   SETB  ('&RNL' EQ 'NO')     Turn on RNL bit if necessary.  @D1A 10060000
&BA(4)   SETB  ('&LOC' EQ 'ANY')    Turn on PELOCANY if necessary..@03A 10070000
&BB(1)   SETB  ('&SMC' EQ '')                                           10080000
&BB(2)   SETB  ('&RET' EQ '')                                           10090000
&BB(5)   SETB  ('&UCB' EQ '')                                      @03C 10100000
&BB(6)   SETB  ('&RNL' EQ 'YES')    Turn off RNL bit if necessary. @D1A 10110000
&BB(7)   SETB  ('&LOC' EQ 'BELOW')  Turn off PELOCANY if necessary.@03A 10120000
         AIF   ('&P' NE '').LLOOP                                       10130000
         AIF   (&BB(1) AND &BB(2) AND &BB(5) AND NOT &BA(1) AND ('&RNL'*10140000
               EQ '') AND ('&LOC' EQ '')).EXITMIE   --->>>         @03C 10150000
.*                                                                      10160000
.********************************************************************** 10170000
.*  Process omitted positional operands (EXCLUSIVE/SHARED/SCOPE).     * 10180000
.********************************************************************** 10190000
.*                                                                      10200000
&BB(3)   SETB  1                                                        10210000
&BB(4)   SETB  1                                                        10220000
         AIF   (&BB(5)).ENQ065      Skip if UCB omitted.           @01C 10230000
&BB(4)   SETB  0                                                   SDS1 10240000
&B(4)    SETB  1                                                   SDS1 10250000
.ENQ065  ANOP                                                      SDS1 10260000
&LIST    SETA  &LIST+2                                                  10270000
         AGO   .ENQ080                                             SDS1 10280000
.*                                                                      10290000
.********************************************************************** 10300000
.********************************************************************** 10310000
.******      Loop to generate a PEL for each Resource Name.      ****** 10320000
.********************************************************************** 10330000
.******                   Execute Form (MF=E)                    ****** 10340000
.********************************************************************** 10350000
.********************************************************************** 10360000
.*                                                                      10370000
.LLOOP   AIF   (&QN GT &NUMBER).ENQ110                        BH A33990 10380000
&RN      SETA  &QN+1                                                    10390000
&ES      SETA  &RN+&NQ                                                  10400000
&RL      SETA  &ES+1                                                    10410000
&SS      SETA  &RL+1                                                    10420000
.*                                                                      10430000
.********************************************************************** 10440000
.*  Process the PELSHARE flag (EXCLUSIVE/SHARED).                     * 10450000
.********************************************************************** 10460000
.*                                                                      10470000
&BB(3)   SETB  1                        ASSUME PARM IS MISSING     @P5A 10480000
         AIF   (&IHBDEQ).SHR                                            10490000
&BB(3)   SETB  ('&P(&ES)' EQ '')                                        10500000
.SHR     ANOP                                                           10510000
&BB(4)   SETB  ('&P(&SS)' EQ '')                                        10520000
&LIST    SETA  &LIST+1                                                  10530000
.*                                                                      10540000
.********************************************************************** 10550000
.*  Process the PELMILEN value (RNAME length).                        * 10560000
.********************************************************************** 10570000
.*                                                                      10580000
         AIF   ('&P(&RL)' EQ '').ECODES                                 10590000
         AIF   ('&P(&RL)'(1,1) EQ '(').EREGL                            10600000
         MVI   &LIST.(1),&P(&RL)       PELMILEN - RNAME length.         10610000
         AGO   .ECODES                                                  10620000
.EREGL   ANOP                                                           10630000
&LEN     SETA  K'&P(&RL)-2                                              10640000
&C       SETC  '&P(&RL)'(2,&LEN)                                        10650000
         STC   &C,&LIST.(0,1)                                           10660000
.ECODES  ANOP                                                           10670000
&LIST    SETA  &LIST+1                                                  10680000
.*                                                                      10690000
.********************************************************************** 10700000
.*  Bypass flag manipulation if none of the following are specified:  * 10710000
.*                                                                    * 10720000
.*  SMC=, RET=, E/S=, UCB=, TCB=, RNL=, or LOC=.                  @03C* 10730000
.********************************************************************** 10740000
.*                                                                      10750000
         AIF   (&BB(1) AND &BB(2) AND &BB(5) AND (&BB(3) OR &IHBDEQ) ANX10760000
               D &BB(4) AND NOT &BA(1) AND ('&RNL' EQ '') AND ('&LOC' EX10770000
               Q '')).ENQ090                                       @03C 10780000
         AIF   (&IHBDEQ).SHRD                                           10790000
&B(8)    SETB  ('&P(&ES)' EQ 'S')                                       10800000
         AIF   (NOT &B(8) AND NOT &BB(3) AND NOT '&P(&ES)' EQ 'E').ERR9 10810000
.SHRD    ANOP                                                           10820000
&BB(4)   SETB  0                                                   SDS1 10830000
&BB(5)   SETB  0                                                   SDS1 10840000
         AIF   (&IHBRES).ENQ070                                    @P8C 10850000
         AIF   ('&UCB' NE '').ENQ070                               @03C 10860000
&B(1)    SETB  ('&P(&SS)' EQ 'SYSTEMS')                            SDS1 10870000
&B(4)    SETB  ('&P(&SS)' EQ 'SYSTEMS')                            SDS1 10880000
         AIF   (&B(1)).ENQ080                                      SDS1 10890000
&B(1)    SETB  ('&P(&SS)' EQ 'SYSTEM')                             SDS1 10900000
         AIF   (&B(1)).ENQ080                                 BH A33990 10910000
         AIF   ('&P(&SS)' EQ 'STEP').ENQ080                    @ZA53727 10920000
         AIF   ('&P(&SS)' EQ '' AND ('&MF' EQ 'L')).ENQ080    BH A33990 10930000
&BB(4)   SETB  1                                              BH A33990 10940000
&BB(5)   SETB  1                                              BH A33990 10950000
.*                                                            BH A33990 10960000
         AIF   ('&P(&SS)' EQ '' AND ('&MF(1)' EQ 'E')).ENQ080 BH A33990 10970000
         AGO   .ERR10                                         BH A33990 10980000
.ENQ070  ANOP                       This is either a RESERVE or a DEQ   10990000
.*                                  with the UCB option.           @03C 11000000
         AIF   ('&P(&SS)' EQ 'SYSTEMS' OR '&P(&SS)' EQ '').ENQ075  IS   11010000
.*                                       SCOPE VALID WITH UCB ?    @P7A 11020000
         AIF   (&IHBRES).ENQ072          NO, GIVE A WARNING MSG    @P8C 11030000
.*                                                                1@03D 11040000
         IHBERMAC 1015,&P(&SS),UCB,SYSTEMS  SCOPE IS INVALID W/UCB @P7A 11050000
         AGO   .ENQ075                                             @P8A 11060000
.*                                                                3@03D 11070000
.ENQ072  ANOP      A RESERVE SPECIFIED SCOPE OF STEP OR SYSTEM     @P8A 11080000
         IHBERMAC 1015,&P(&SS),RESERVE,SYSTEMS   SCOPE IS INVALID ON    11090000
.*                                       A RESERVE                 @P8A 11100000
.ENQ075  ANOP                                                      @P7A 11110000
&B(4)    SETB  1                                                   SDS1 11120000
.ENQ080  ANOP                                                      SDS1 11130000
         AIF   (&BA(1) OR &BA(2) OR &BA(3) OR &BB(6) OR &BA(4)).ENQ083  11140000
.*                                  If either TCB=, GENERIC=YES,        11150000
.*                                  RNL=NO/YES, or LOC=ANY were         11160000
.*                                  specified then...go set the option  11170000
.*                                  masks.                         @03C 11180000
         AGO   .ENQ085                                                  11190000
.ENQ083  ANOP                                                           11200000
&LISTA   SETA  &LIST-2                                                  11210000
&MASK0NI SETA  255-4*&BB(6)                                             11220000
.*                                  Set AND option mask.                11230000
&MASK0OI SETA  32*&BA(4)+4*&BA(3)+2*&BA(2)+&BA(1)                  @03C 11240000
.*                                  Set OR option mask.                 11250000
         AIF   (&MASK0OI EQ 0).ENQ084 If there are not options to add,  11260000
.*                                    branch around turning them on.    11270000
         OI    &LISTA.(1),&MASK0OI  Turn on PELLAST option flags.       11280000
&MASK0NI SETA  &MASK0NI-64          Turn off PELIGNOR.                  11290000
.ENQ084  ANOP                                                           11300000
         NI    &LISTA.(1),&MASK0NI  Turn off PELLAST options flags that 11310000
.*                                  should not be set.                  11320000
.ENQ085  ANOP                            GENERATE THE NI AND OI@ZA53727 11330000
.*                                       TO UPDATE THE FLAG    @ZA53727 11340000
.*                                       BYTE IN THE RESOURCE  @ZA53727 11350000
.*                                       ELEMENTS SPECIFIED.   @ZA53727 11360000
&MASK2NI SETA  128*&BB(3)+64*&BB(4)+48*&BB(1)+8*&BB(5)+7*&BB(2)         11370000
         AIF   (&MASK2NI EQ 255).ENQ087                            @P5C 11380000
         NI    &LIST.(1),&MASK2NI        SET OPTIONS SPECIFIED @ZA00466 11390000
&MASK2OI SETA  128*&B(8)+64*&B(1)+32*&B(2)+16*&B(3)+8*&B(4)+4*&B(5)+2*&X11400000
               B(6)+&B(7)                                          SDS1 11410000
         AIF   (&MASK2OI EQ 0).ENQ087    GENERATE LOOP BUT NOT @ZA26497 11420000
.*                                       OI IF RET=NONE        @ZA26497 11430000
         OI    &LIST.(1),&MASK2OI        FOR THIS ELEMENT      @ZA00466 11440000
.ENQ087  ANOP                            CHECK WHETHER A LOOP MUST BE   11450000
.*                                       GENERATED                 @P5A 11460000
         AIF   ('&UCB' NE '').ENQ090     No loop if RESERVE.       @03C 11470000
         AIF   ('&MF(1)' NE 'E').ENQ090  IS IT EXEC FORM       @ZA00466 11480000
         AIF   (&QN GT 1).ENQ090         BRANCH AROUND BUILDING@ZA53727 11490000
.*                                       CODE FOR LOOP IF NOT  @ZA53727 11500000
.*                                       FIRST TIME THROUGH    @ZA53727 11510000
.*                                                             @ZA53727 11520000
&MASK0NI SETA  255-64*&BA(3)-4*&BB(6)    Turn off PELIGNOR or RNL bits. 11530000
&M(1)    SETB  (&MASK0NI NE 255)         BITS TO 'AND' ?           @P5A 11540000
&MASK0OI SETA  4*&BA(3)                  TURN ON RNL BIT           @P5A 11550000
&M(2)    SETB  (&MASK0OI NE 0)           BITS TO 'OR' ?            @P5A 11560000
&MASK2NI SETA  128+64+48*&BB(1)+8+7*&BB(2)                     @ZA53727 11570000
&M(3)    SETB  (&MASK2NI NE 255)         BITS TO 'AND' ?           @P5A 11580000
&MASK2OI SETA  32*&B(2)+16*&B(3)+4*&B(5)+2*&B(6)+&B(7)         @ZA53727 11590000
&M(4)    SETB  (&MASK2OI NE 0)           BITS TO 'OR' ?            @P5A 11600000
         AIF   (NOT (&M(1) OR &M(3))).ENQ090   NO LOOP IF NO BITS ARE   11610000
.*                                       TO BE CHANGED             @P5A 11620000
.*                                                                      11630000
.*                                       IT IS NECESSARY TO    @ZA53727 11640000
.*                                       GENERATE THE FOLLOWING@ZA53727 11650000
.*                                       LOOP BECAUSE ALL      @ZA53727 11660000
.*                                       RESOURCE ELEMENTS IN  @ZA53727 11670000
.*                                       THE PARM LIST MAY NOT @ZA53727 11680000
.*                                       BE SPECIFIED IN THE   @ZA53727 11690000
.*                                       EXECUTE FORM. IF RET  @ZA53727 11700000
.*                                       OR SMC PARAMETERS WERE@ZA53727 11710000
.*                                       SPECIFIED, THE FLAG   @ZA53727 11720000
.*                                       BYTE IN EACH ELEMENT  @ZA53727 11730000
.*                                       IN THE PARMLIST MUST  @ZA53727 11740000
.*                                       BE UPDATED.           @ZA53727 11750000
.*                                                             @ZA53727 11760000
.* IF RNL PARAMETER WAS SPECIFIED, THE CORRESPONDING BITS IN THE        11770000
.* FIRST FLAG BYTE MUST ALSO BE UPDATED ACCORDINGLY.               @P5A 11780000
.*                                                                      11790000
.* CALCULATE SIZE OF LOOP: TWELVE BYTES FOR TM, BO AND LA, PLUS         11800000
.* FOUR BYTES FOR EACH BIT OPERATION (NI, OI) TO BE DONE           @P5A 11810000
.*                                                                      11820000
&BSIZE   SETA  (12+4*(&M(1)*(1+&M(2))+&M(3)*(1+&M(4))))            @P5A 11830000
         &LR   14,1                      PRESERVE REG 1            @L4C 11840000
         TM    0(14),128                 IS IT END OF LIST     @ZA00466 11850000
         AIF   (&SYSALVL GT 0).RELB2A                              @PDA 11860000
         BO    *+&BSIZE                  YES, GET OUT OF LOOP      @P5C 11870000
         AGO   .RELB2B                                             @PDA 11880000
.RELB2A  ANOP                                                      @PDA 11890000
         JO    *+&BSIZE                  YES, GET OUT OF LOOP      @PDA 11900000
.RELB2B  ANOP                                                      @PDA 11910000
         LA    14,12(14)                 INDEX TO NEXT ENTRY   @ZA00466 11920000
         AIF   (NOT &M(1)).ENQNO0        BITS MUST BE RESET  ?     @P5A 11930000
         NI    &LISTA.(14),&MASK0NI      TURN OFF OPTIONS          @P5A 11940000
         AIF   (NOT &M(2)).ENQNO0        BITS MUST BE SET ?        @P5A 11950000
         OI    &LISTA.(14),&MASK0OI      TURN ON OPTIONS           @P5A 11960000
.ENQNO0  AIF   (NOT &M(3)).ENQNO2                              @ZA26497 11970000
         NI    &LIST.(14),&MASK2NI       SET RET AND SMC IN ALL@ZA53727 11980000
         AIF   (NOT &M(4)).ENQNO2                                       11990000
         OI    &LIST.(14),&MASK2OI       ELEMENTS IN LIST.     @ZA53727 12000000
.ENQNO2  ANOP                                                           12010000
         AIF   (&SYSALVL GT 0).RELB3A                              @PDA 12020000
         B     *-&BSIZE                  STAY IN LOOP              @P5C 12030000
         AGO   .RELB3B                                             @PDA 12040000
.RELB3A  ANOP                                                      @PDA 12050000
         J     *-&BSIZE                  STAY IN LOOP              @PDA 12060000
.RELB3B  ANOP                                                      @PDA 12070000
.*                                                                      12080000
.********************************************************************** 12090000
.*  Process the PELMAJA field (QNAME address)                         * 12100000
.********************************************************************** 12110000
.*                                                                      12120000
.ENQ090  AIF   ('&P' EQ '').ENQ100                             SDS1     12130000
&LIST    SETA  &LIST+2                                                  12140000
         AIF   ('&P(&QN)' EQ '').ERN                                    12150000
         AIF   ('&P(&QN)'(1,1) EQ '(').EQNREG                           12160000
         LA    14,&P(&QN)                GET QNAME ADDRESS              12170000
         ST    14,&LIST.(0,1)            STORE QNAME ADDRESS            12180000
         AGO   .ERN                                                     12190000
.EQNREG  ANOP                                                           12200000
&LEN     SETA  K'&P(&QN)-2                                              12210000
&C       SETC  '&P(&QN)'(2,&LEN)                                        12220000
         ST    &C,&LIST.(0,1)            STORE QNAME ADDRESS            12230000
.ERN     ANOP                                                           12240000
&LIST    SETA  &LIST+4                                                  12250000
.*                                                                      12260000
.********************************************************************** 12270000
.*  Process the PELMINA field (RNAME address)                         * 12280000
.********************************************************************** 12290000
.*                                                                      12300000
         AIF   ('&P(&RN)' EQ '').EEND                                   12310000
         AIF   ('&GENERIC' EQ 'NO').NOGEN4                       X02113 12320000
         IHBERMAC 1016,RNAME,GENERIC                             X02113 12330000
         AGO   .EEND                                             X02113 12340000
.NOGEN4  ANOP                                                    X02113 12350000
         AIF   ('&P(&RN)'(1,1) EQ '(').ERNREG                           12360000
         LA    14,&P(&RN)                GET RNAME ADDRESS              12370000
         ST    14,&LIST.(0,1)            STORE RNAME ADDRESS            12380000
         AGO   .EEND                                                    12390000
.ERNREG  ANOP                                                           12400000
&LEN     SETA  K'&P(&RN)-2                                              12410000
&C       SETC  '&P(&RN)'(2,&LEN)                                        12420000
         ST    &C,&LIST.(0,1)            STORE RNAME ADDRESS            12430000
.EEND    ANOP                                                           12440000
&LIST    SETA  &LIST+4                                                  12450000
&QN      SETA  &QN+4+&NQ                                                12460000
         AGO   .LLOOP                                                   12470000
.*                                                                      12480000
.********************************************************************** 12490000
.********************************************************************** 12500000
.******    End loop to generate a PEL for each Resource Name.    ****** 12510000
.********************************************************************** 12520000
.******                   Execute Form (MF=E)                    ****** 12530000
.********************************************************************** 12540000
.********************************************************************** 12550000
.*                                                                      12560000
.ENQ100  ANOP                                                      SDS1 12570000
.*                                                                      12580000
.********************************************************************** 12590000
.*  Process the PELUCBAA field if UCB= was specified.                 * 12600000
.********************************************************************** 12610000
.*                                                                      12620000
&LIST    SETA  12                                                  SDS1 12630000
.ENQ110  ANOP                                                      @L2C 12640000
.*                                                                1@03D 12650000
         AIF   ('&UCB' EQ '').EXITMIE                              @L2C 12660000
         AIF   ('&UCB'(1,1) EQ '(').ENQ120                         SDS1 12670000
         LA    14,&UCB            GET UCB PARAMETER                SDS1 12680000
         ST    14,&LIST.(0,1)     STORE UCB PARAMETER              SDS1 12690000
         AGO   .EXITMIE                                            SDS1 12700000
.ENQ120  ANOP                                                      SDS1 12710000
&LEN     SETA  K'&UCB-2                                            SDS1 12720000
&C       SETC  '&UCB'(2,&LEN)                                      SDS1 12730000
         ST    &C,&LIST.(0,1)     STORE UCB PARAMETER              SDS1 12740000
         AGO   .EXITMIE                                            SDS1 12750000
.*                                                               10@03D 12760000
.*                                                                      12770000
.********************************************************************** 12780000
.*  Process error messages and exit.                                  * 12790000
.********************************************************************** 12800000
.*                                                                      12810000
.ERR1    IHBERMAC 2                    INVALID FIRST OPERAND            12820000
         AGO   .ERREX                                                   12830000
.ERR2    IHBERMAC  24                  REQ'D OPERANDS NOT SPECIFIED     12840000
         AGO   .ERREX                                                   12850000
.ERR3    IHBERMAC 69                   INVALID REG NOTATION WITH MF=L   12860000
         AGO   .ERREX                                                   12870000
.ERR4    IHBERMAC  35,,&MF             INVALID MF OPERAND SPEC - MF=XXX 12880000
         AGO   .ERREX                                                   12890000
.ERR5    IHBERMAC 157,RET,&RET         INVALID CODE FOR RET - IGNORED   12900000
         AGO   .ERREX                                                   12910000
.ERR6    IHBERMAC 1001,DEQ,,&ECB       INVALID DEQ OP SPEC - ECB=       12920000
         AGO   .ERREX                                                   12930000
.ERR7    IHBERMAC 196                 MORE THAN 5 POSITIONAL OPERANDS   12940000
&IHBRES  SETB  0                                                   SDS1 12950000
         MEXIT                                                          12960000
.ERR8    IHBERMAC 1001,SMC,&SMC       INVALID SMC SPECIFIED    @ZA12435 12970000
         AGO   .ERREX                                                   12980000
.ERR9    IHBERMAC 157,SCOPE,&P(&ES)   INVALID CODE FOR SCOPE-IGNORED    12990000
         AGO   .ERREX                                                   13000000
.ERR10   IHBERMAC 157,SYSTEMS,&P(&SS) INVALID CODE FOR SYSTEMS - IGNORE 13010000
         AGO   .ERREX                                                   13020000
.ERR11   IHBERMAC 1003,RET,SMC       RET AND/OR SMC PARAMETERS INVALID  13030000
         AGO   .ERREX                                            X02113 13040000
.ERR11B  MNOTE 12,'When MTCB is used, MASID must also be specified.'    13050000
.*                                                                 @02C 13060000
         AGO   .ERREX                                              @L1A 13070000
.ERR12   IHBERMAC 1020,SMC,TCB         SMC INVALID WITH TCB      X02113 13080000
         AGO   .ERREX                                            X02113 13090000
.ERR13   IHBERMAC 1003,RET,TCB         INVALID RET AND/OR TCB    X02113 13100000
         AGO   .ERREX                                            X02113 13110000
.ERR15   IHBERMAC 1001,TCB,&TCB        INVALID TCB SPECIFIED     X02113 13120000
         AGO   .ERREX                                            X02113 13130000
.ERR15A  IHBERMAC 1001,MASID,&MASID    INVALID MASID SPECIFIED     @L1A 13140000
         AGO   .ERREX                                              @L1A 13150000
.ERR15B  IHBERMAC 1001,MTCB,&MTCB      INVALID MTCB SPECIFIED      @L1A 13160000
         AGO   .ERREX                                              @L1A 13170000
.ERR16   IHBERMAC 1001,GENERIC,&GENERIC                          X02113 13180000
.*                                     INVALID GENERIC SPECIFIED X02113 13190000
         AGO   .ERREX                                            X02113 13200000
.ERR17   IHBERMAC 1003,RET,GENERIC     RET AND/OR GENERIC INVALIDX02113 13210000
         AGO   .ERREX                                            X02113 13220000
.ERR18   IHBERMAC 1014,GENERIC         GENERIC INVALID ON ENQ OR X02113 13230000
.*                                     RESERVE                   X02113 13240000
         AGO   .ERREX                                              @D1A 13250000
.ERR19   IHBERMAC 1001,RNL,&RNL        INVALID RNL SPECIFIED       @D1A 13260000
         AGO   .ERREX                                              @02A 13270000
.ERR20   MNOTE 12,'When MASID is used, MTCB must also be specified.'    13280000
.*                                                                 @02A 13290000
         AGO   .ERREX                                              @02A 13300000
.ERR21   MNOTE 12,'RET=NONE cannot be used with MASID or MTCB.'    @02A 13310000
         AGO   .ERREX                                              @02A 13320000
.ERR22   MNOTE 12,'RET=USE cannot be used with MASID or MTCB.'     @02A 13330000
         AGO   .ERREX                                              @02A 13340000
.ERR23   MNOTE 12,'A valid RET= value must be coded with MASID/MTCB.'   13350000
.*                                                                 @02A 13360000
         AGO   .ERREX                                              @02A 13370000
.ERR24   MNOTE 12,'RET=CHNG cannot be used with MASID or MTCB.'    @02A 13380000
         AGO   .ERREX                                              @02A 13390000
.ERR25   MNOTE 12,'SMC=STEP cannot be used with MASID or MTCB.'    @02A 13400000
         AGO   .ERREX                                              @02A 13410000
.ERR26   MNOTE 12,'TCB cannot be specified with MASID or MTCB.'    @02A 13420000
         AGO   .ERREX                                              @L2A 13430000
.ERR27   IHBERMAC 1001,LOC,&LOC     Invalid LOC specified.         @03C 13440000
         AGO   .ERREX                                              @L3A 13450000
.ERR28   MNOTE 12,'Invalid LINKAGE specified.'                     @L3A 13460000
         AGO   .ERREX                                              @L3A 13470000
.ERREX   ANOP                                                           13480000
&IHBDEQ  SETB  0                                                        13490000
&IHBRES  SETB  0                                                   SDS1 13500000
         MEND                                                           13510000
**/                                                                     13520000
*   ENQ:/*************************************************************/ 13530000
*   /* PL/S VERSION OF ENQ MACRO                                     */ 13540000
*   /*****************************************************************/ 13550000
*      MACRO KEYS(MF,RET,RNL,ECB,SMC,TCB,LS,OUTR15,RELATED,LINKAGE);    13560000
*        ANS('?'!!MACLABEL!!'ENQP '!!MACLIST!!MACKEYS!!';');  /* @L3C*/ 13570000
*%END;                                                                  13580000
