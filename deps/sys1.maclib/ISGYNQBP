*                                                                       00001000
* %DCL ISGYNQBP_INCLUDED CHAR EXT;                                      00002000
* %DEACTIVATE ISGYNQBP_INCLUDED;                                        00003000
* %IF ISGYNQBP_INCLUDED = '' %THEN                                      00004000
* %DO;                                                                  00005000
*/* Macro made bi-lingual on 13023. CBGEN compile date 12258         */ 00006000
*% /*                                                                   00007000
         MACRO                                                          00008000
         ISGYNQBP &DSECT=YES,&LIST=YES,&TITLE=YES,&NQBP=YES,           *00009000
               &NQBPRSC_ENTRY=COND                                      00010000
         GBLC  &ISGYNQBP_INCLUDED                                       00011000
         GBLC  &ZCBPRINT                                                00012000
&ISGYNQBP_INCLUDED SETC 'YES'                                           00013000
         AIF   ('&LIST' EQ 'NONE').P0                                   00014000
         AIF   ('&TITLE' EQ 'NO').P5                                    00015000
 TITLE   'ISGYNQBP  - GRS ISGNQXITBatch and ISGNQXITBatchCnd         '  00016000
.P5      ANOP                                                           00017000
**/ ISGYNQBP_1:;                                                        00018000
*/* START OF SPECIFICATIONS ******************************************* 00019000
*                                                                       00020000
*01* DESCRIPTIVE NAME:  GRS ISGNQXITBatch and ISGNQXITBatchCnd          00021000
*                       Exit Parameter List                             00022000
*02*  ACRONYM:  NQBP                                                    00023000
*                                                                       00024000
*01* PROPRIETARY STATEMENT =                                            00025000
*                                                                       00026000
*    LICENSED MATERIALS - PROPERTY OF IBM                               00027000
*    5650-ZOS COPYRIGHT IBM CORP. 2001,2013                             00028000
*                                                                       00029000
*01* STATUS = HBB7790                                                   00030000
*                                                                       00031000
*01* EXTERNAL CLASSIFICATION: PI                                        00032000
*01* END OF EXTERNAL CLASSIFICATION:                                    00033000
*                                                                       00034000
*01* MACRO NAME: ISGYNQBP                                               00035000
*                                                                       00036000
*01* DSECT NAME: NQBP                                                   00037000
*                                                                       00038000
*01* COMPONENT:  Global Resource Serialization (SCSDS)                  00039000
*                                                                       00040000
*01* EYE-CATCHER:  NQBP                                                 00041000
*02*  OFFSET:  0                                                        00042000
*02*  LENGTH:  4                                                        00043000
*                                                                       00044000
*01* STORAGE ATTRIBUTES:                                                00045000
*02*  SUBPOOL:  229 or 215                                              00046000
*02*  KEY:  0                                                           00047000
*02*  RESIDENCY:  Above the 16M line                                    00048000
*                                                                       00049000
*01* SIZE:  LENGTH(NQBP)                                                00050000
*            NQBP          -- X'0060' bytes                             00051000
*            NQBPRSC_ENTRY -- X'0078' bytes                             00052000
*                                                                       00053000
*01* FREQUENCY:  1 per active ENQ/DEQ request                           00054000
*                                                                       00055000
*01* CREATED BY: ISGGNX                                                 00056000
*                                                                       00057000
*01* POINTED TO BY: R1 points to the NQBP on entry to the exit routine  00058000
*                                                                       00059000
*01* SERIALIZATION: N/A                                                 00060000
*                                                                       00061000
*01* FUNCTION:                                                          00062000
*                                                                       00063000
*    The Batched ENQ/DEQ Parameter list is passed to the ISGNQXITBATCH  00064000
*    and ISGNQXITBATCHCND installation exits. These exits have the      00065000
*    ability to interrogate and alter ENQ, RESERVE, DEQ or ISGENQ       00066000
*    requests.                                                          00067000
*                                                                       00068000
*    The parameter list consists of a header (Nqbp) and a               00069000
*    queue of resources/entries. Each resource is mapped by             00070000
*    NqbpRsc_Entry. The resources are queued via NqbpRsc_NextNqbpRsc@.  00071000
*    A zero value indicates the end of the queue. The number of         00072000
*    resources is also indicated via Nqbp_#Resources.                   00073000
*                                                                       00074000
*    These exits can only make the following changes to a request:      00075000
*    1.Reject the request, requesting GRS to ABEND.  See                00076000
*      Nqbp_RF1_SetABEND below for more information.                    00077000
*    2.Reject the request, requesting GRS to set a return code and      00078000
*      for ISGENQ a reason code.  See Nqbp_RF1_SetRscRequest,           00079000
*      NqbpRsc_RF1_SetReturnCode and NqbpRsc_RF1_SetReasonCode below    00080000
*      for more information.                                            00081000
*    3.Convert a Reserve from a hardware Reserve to a global ENQ. See   00082000
*      Nqbp_RF1_SetRscRequest and NqbpRsc_RF1_ConvertReserve below      00083000
*      for more information.                                            00084000
*                                                                       00085000
*    Any other desired changes must be made through the ISGNQXIT or     00086000
*    ISGNQXITFast exits.                                                00087000
*                                                                       00088000
*    Generic DEQ needs special consideration.  A generic DEQ is denoted 00089000
*    by a zero RNAME length (NqbpRsc_RNameLen =0). It DEQs all          00090000
*    resources held by the requester for the given QNAME across all     00091000
*    Scopes and RNAMEs. As the scope is irrelevant and not used, all    00092000
*    scope fields presented to the exit must be ignored (however, the   00093000
*    current scope will be set to SYSTEMS).                             00094000
*                                                                       00095000
*    The exits are called after each of the individual resources have   00096000
*    been processed by ISGNQXIT/ISGNQXITFAST exits and GRS RNLs. The    00097000
*    RNLs are always processed with any alterations made by the         00098000
*    ISGNQXIT/ISGNQXITFAST exits.  A history of the changes made by     00099000
*    the exits and RNLs is provided via the following fields:           00100000
*                                                                       00101000
*    Scope alteration history:                                          00102000
*     1.NqbpRsc_OriginalScope - The scope specified on the ENQ,         00103000
*                               DEQ, ISGENQ, or RESERVE.                00104000
*     2.NqbpRsc_NqxitScope    - The scope after any ISGNQXIT/FAST exit  00105000
*                               alterations.                            00106000
*     3.NqbpRsc_Scope         - The scope after any RNL alterations.    00107000
*                               Regardless of all other indicators,     00108000
*                               this is the final scope that will be    00109000
*                               used.                                   00110000
*                                                                       00111000
*                                                                       00112000
*    RNL processing history:                                            00113000
*     NqbpRsc_SF1_RnlEqNo     - RNLs were not processed                 00114000
*     NqbpRsc_SF2_Included    - A SYSTEM scope was promoted to SYSTEMS  00115000
*     NqbpRsc_SF2_Excluded    - A SYSTEMS scope was excluded to SYSTEM  00116000
*                               This and NqbpRsc_SF2_Included can be    00117000
*                               on as it may have been promoted         00118000
*                               generically and then more specifically  00119000
*                               demoted.                                00120000
*     NqbpRsc_SF2_Converted   - A RESERVE obtain/release was            00121000
*                               converted from a RESERVE-ENQ/DEQ to     00122000
*                               a ENQ/DEQ only.                         00123000
*                                                                       00124000
*    For all ENQ requests that specify a RET value or an ECB value the  00125000
*    ISGNQXITBATCH exit routines can set a non-zero return code,        00126000
*    overriding ENQ/RESERVE functionality. To set a return code, the    00127000
*    exit routine sets:                                                 00128000
*                                                                       00129000
*      Nqbp_RF1_SetRscRequest in the NQBP                               00130000
*      NqbpRsc_RF1_SetReturnCode in the appropriate NqbpRsc entry       00131000
*      NqbpRsc_CP_ReturnCode to a non-zero value                        00132000
*                                                                       00133000
*    If you would like GRS to represent a request set '0' (or do not    00134000
*    set anything in the return code field, it will default to 0)       00135000
*    for the request.  GRS will set the appropriate return code.        00136000
*                                                                       00137000
*    When one of the following return codes is set by the batch exit,   00138000
*    GRS will bypass processing of the resource and pass the return     00139000
*    code back to the caller.  The request will not be represented by   00140000
*    GRS.                                                               00141000
*                                                                       00142000
*    A batch exit routine is allowed to set the following return codes: 00143000
*                                                                       00144000
*    ENQ/RESERVE:                                                       00145000
*                                                                       00146000
*       RET=TEST RC=4,8,14,20                                           00147000
*       RET=USE  RC=4,8,14,18                                           00148000
*       RET=CHNG RC=4,8,14                                              00149000
*       RET=HAVE RC=8,14,18,28,44                                       00150000
*       RET=ECB  RC=8,14,18,28,44                                       00151000
*                                                                       00152000
*    DEQ:                                                               00153000
*                                                                       00154000
*       RET=HAVE RC=4,8                                                 00155000
*                                                                       00156000
*    ISGENQ:                                                            00157000
*                                                                       00158000
*       RC=4 RSN=0402,0404,0405,0406,0407,0409,040A,040B                00159000
*       RC=8 RSN=0815                                                   00160000
*       RC=C RSN=0C05                                                   00161000
*       RC=10 RSN=FFyy where yy are diagnostic bits set by the exit     00162000
*                                                                       00163000
*    ENQ/DEQ/RESERVE and ISGENQ return codes are documented in the      00164000
*    MVS: Authorized Assembler Reference books.                         00165000
*                                                                       00166000
*    For all requests the ISGNQXITBATCH exit routine can set a one-byte 00167000
*    ABEND code and half-word reason code for the request.  The one     00168000
*    byte ABEND code is used to generate the ABEND code.  For example,  00169000
*    if the exit routine sets the ABEND code to 5 for an ENQ request,   00170000
*    a '538'x ABEND will be generated by ENQ processing.                00171000
*    To set an ABEND code, the exit routine sets:                       00172000
*      Nqbp_RF1_SetABEND in the NQBP                                    00173000
*      Nqbp_CP_ABENDCode to a non-zero value                            00174000
*      Nqbp_CP_ABENDReason to a non-zero value (optional)               00175000
*                                                                       00176000
*    ENQ/DEQ/RESERVE ABEND codes are documented in the MVS: System      00177000
*    Codes book.                                                        00178000
*                                                                       00179000
*    Most of the exits that are driven for a request are provided a     00180000
*    unique "request token" which allows the exits to correlate any     00181000
*    required user information between exit callers. For example, the   00182000
*    Nqbp_RD_RequestToken will be the same as the Nqxp_RequestToken if  00183000
*    both the ISGNQXITBatchCnd and ISGNQXITFAST exits are driven for    00184000
*    the same request.                                                  00185000
*                                                                       00186000
*01* METHOD OF ACCESS: DECLARE NQBPPTR PTR(31)                          00187000
*                      %INCLUDE SYSLIB(ISGYNQBP)                        00188000
*                                                                       00189000
*01* DELETED BY: ISGGNX                                                 00190000
*                                                                       00191000
*01* NOTES: None                                                        00192000
*                                                                       00193000
*02*  DEPENDENCIES:                                                     00194000
*                                                                       00195000
*     The length of a NqbpRsc entry must be the same as the length of a 00196000
*     NqqpRsc entry                                                     00197000
*     The length of a NqbpRname entry must be the same as the length of 00198000
*     a NqqpRname entry                                                 00199000
*                                                                       00200000
*01* DISTRIBUTION LIBRARY: AMACLIB                                      00201000
*                                                                       00202000
*01* CHANGE ACTIVITY:                                                   00203000
*                                                                       00204000
*    $L0=GRSWC   ,HBB7705,010117,PDBD: GRS Wildcard                     00205000
*    $L1=GRSWC   ,HBB7705,010907,PDDV: Add original scope               00206000
*    $01=OW56028 ,HBB7707,021211,PDPP: Maintain a table of NQARs        00207000
*    $L2=64GRS   ,HBB7709,030506,PD2V: Add exit changes                 00208000
*    $P1=64GRS   ,HBB7709,031215,PD2V: Move ISGENQ bit                  00209000
*    $P2=PJK1603 ,HBB7709,040315,PDRY: Add Nqbp_SF1_IsgEnqCondYes -     00210000
*                                      indicates the conditional state  00211000
*                                      of an ISGENQ request             00212000
*    $P3=ME01463 ,HBB7720,040812,PDRY: Add cbgen pragma statements      00213000
*       =OA09100 ,HBB7709,041215,PD2V: Update comments on return code   00214000
*                                      restrictions                     00215000
*       =ME01463 ,HBB7730,050808,PDCJ: Fix copyright                    00216000
*    $P4=ME05220 ,HBB7730,060109,PDRY: Update comments                  00217000
*    $L3=GRSTOR2 ,HBB7740,060404,PDGA: Update comments and add          00218000
*                                      NqbpRsc_NqxitScope field.        00219000
*    $L4=GRSTOR2 ,HBB7740,060523,PDBC: Sync up with Queued1 changes     00220000
*    $L5=GRSRSNS ,HBB7750,070403,PDFX: Add more ISGENQ data             00221000
*    $02=OA21410 ,HBB7740,070717,PDRY: Ensure assembler and PL/X        00222000
*                                      definitions match and add        00223000
*                                      Nqbp_kRetEcb                     00224000
*    $P5=ME10689 ,HBB7750,070731,PDFY: Update comments                  00225000
*    $L6=GRSISVCP,HBB7760,071128,PDFX: Update comments                  00226000
*    $L7=GRSCHNG ,HBB7790,110217,PDFY: Change to Share indication       00227000
**** END OF SPECIFICATIONS *******************************************/ 00228000
*% /*                                                                   00229000
.P0      ANOP                                                           00230000
         AIF   ('&ZCBPRINT' EQ 'NO').P1                                 00231000
         AIF   ('&LIST' EQ 'YES').P2                                    00232000
.P1      ANOP                                                           00233000
         PUSH  PRINT                                                    00234000
         PRINT OFF                                                      00235000
.P2      ANOP                                                           00236000
         AIF   ('&NQBP' EQ 'NO').L0002                                  00237000
         AIF   ('&DSECT' EQ 'YES').L0003                                00238000
         AIF   ('&NQBP' NE 'YES').L0002                                 00239000
NQBP     DS    0D                                                       00240000
         AGO   .L0004                                                   00241000
.L0003   ANOP                                                           00242000
NQBP     DSECT                                                          00243000
.L0004   ANOP                                                           00244000
NQBP_ID  DS    CL4       Eyecatcher                                     00245000
NQBP_VERSION DS X        Version. See version constants below e.g.     *00246000
                         Nqbp_kVersion#1                                00247000
         DS    CL3       Reserved                                       00248000
NQBP_WORKAREA@ DS A      Pointer to a 4K work area, usable by exit     *00249000
                         routines                                       00250000
NQBP_REQUESTDATA DS CL56 ENQ/DEQ request state information, these      *00251000
                         values cannot be changed                       00252000
         ORG   NQBP_REQUESTDATA                                         00253000
NQBP_RD_REQUESTTOKEN DS CL16 Unique token identifying the GRS exit     *00254000
                         call processing for the request. If needed,   *00255000
                         all exits driven for this request can use     *00256000
                         this token to identify the same request. See  *00257000
                         the prologue for more information.             00258000
NQBP_RD_ASCB@ DS A       Pointer to requester's ASCB                    00259000
NQBP_RD_TCB@ DS A        Pointer to requester's TCB or directed TCB if *00260000
                         TCB= was specified                             00261000
NQBP_RD_MASID DS H       Request MASID value                            00262000
         DS    CL2       Reserved                                       00263000
NQBP_RD_MTCB DS A        Request MTCB value                             00264000
NQBP_RD_JOBNAME DS CL8   Requester's Jobname                            00265000
NQBP_RD_SYSNAME DS CL8   Requester's Sysname                            00266000
NQBP_RD_NSI@ DS A        Requester's next sequential instruction       *00267000
                         address, when ENQ/DEQ ends, this is address   *00268000
                         of the next instruction in the calling        *00269000
                         program that will be executed                  00270000
*  Bit definitions:                                                     00271000
NQBP_RD_AMODE31 EQU X'80' When set, ENQ caller is AMODE 31              00272000
NQBP_RD_ECB@ DS A        Pointer to original request ECB (set when     *00273000
                         ECB= specified on the request)                 00274000
NQBP_STATEFLAGS DS CL4   ENQ/DEQ request state flags, these values     *00275000
                         cannot be changed                              00276000
         ORG   NQBP_STATEFLAGS                                          00277000
NQBP_STATEFLAGS1 DS B    First byte of state flags                      00278000
*  Bit definitions:                                                     00279000
NQBP_SF1_ENQ EQU X'80'   When 1, request is ENQ/RESERVE, when 0,       *00280000
                         request is DEQ. If Nqbp_SF1_ISGENQ is set     *00281000
                         then when 1, ISGENQ REQUEST=OBTAIN or CHANGE, *00282000
                         when 0, REQUEST=RELEASE. See Nqbp_SF2_Change  *00283000
                         to distinguish between ISGENQ REQUEST=OBTAIN  *00284000
                         and REQUEST=CHANGE.                            00285000
NQBP_SF1_AUTHORIZED EQU X'40' Caller is authorized                      00286000
NQBP_SF1_MATCHTASK EQU X'20' When 1, request specified MASID/MTCB       00287000
NQBP_SF1_SMCORRMC EQU X'10'                                             00288000
NQBP_SF1_STEPMUSTCOMPLETE EQU X'10' When 1, ENQ request specified      *00289000
                         SMC=YES                                        00290000
NQBP_SF1_RESETMUSTCOMPLETE EQU X'10' When 1, DEQ request specified     *00291000
                         RMC=YES                                        00292000
NQBP_SF1_LINKAGE EQU X'08' When 1, request is PC entered when 0,       *00293000
                         request is SVC entered. As ISGENQ requests    *00294000
                         are all PC entered, this bit will be 1 for    *00295000
                         all ISGENQ requests.                           00296000
NQBP_SF1_ISGENQ EQU X'02' When 1, request is via ISGENQ service         00297000
NQBP_SF1_ISGENQCONDYES EQU X'01' When 1, request is a conditional      *00298000
                         ISGENQ request (ISGENQ COND=YES)               00299000
NQBP_STATEFLAGS2 DS B    State flags byte two                           00300000
*  Bit definitions:                                                     00301000
NQBP_SF2_CHANGE EQU X'20' When 1, request is a change (i.e. ENQ        *00302000
                         RET=CHNG or ISGENQ REQUEST=CHANGE).            00303000
NQBP_SF2_TEST_YES EQU X'10' When 1, ISGENQ with TEST=YES. When 0, Not  *00304000
                         ISGENQ with TEST=YES (i.e. TEST=NO if         *00305000
                         Nqbp_SF1_ISGENQ is set).                       00306000
NQBP_SF2_CONTENTIONACT_FAIL EQU X'08' When 1, ISGENQ with              *00307000
                         CONTENTIONACT=FAIL. When 0, not               *00308000
                         CONTENTIONACT=FAIL (i.e. CONTENTIONACT=WAIT   *00309000
                         if Nqbp_SF1_ISGENQ is set and                 *00310000
                         Nqbp_SF2_TEST_YES is off).                     00311000
NQBP_SF2_ECB EQU X'04'   When 1, ECB keyword specified (i.e. ISGENQ    *00312000
                         WAITTYPE=ECB or or ENQ with ECB). When 0, No  *00313000
                         ECB specified (i.e. WAITTYPE=SUSPEND if       *00314000
                         Nqbp_SF1_ISGENQ is set and Nqbp_SF2_TEST_YES  *00315000
                         and Nqbp_SF2_CONTENTIONACT_FAIL are off).      00316000
NQBP_SF2_CHANGETOSHARED EQU X'02' When 1, ISGENQ REQUEST=CHANGE        *00317000
                         specified CONTROL=SHARED. If the request is   *00318000
                         successful, the requester will be converted   *00319000
                         from an exclusive owner to a shared owner.    *00320000
                         Only valid when Nqbp_SF2_Change is 1           00321000
         DS    CL2       Reserved                                       00322000
NQBP_REQUESTFLAGS DS CL4 Request flags                                  00323000
         ORG   NQBP_REQUESTFLAGS                                        00324000
NQBP_REQUESTFLAGS1 DS B  First byte of flags                            00325000
*  Bit definitions:                                                     00326000
NQBP_RF1_SETRSCREQUEST EQU X'80' When 1, indicates that a request was  *00327000
                         made in one or more NqbpRsc entries            00328000
NQBP_RF1_SETABEND EQU X'40' When 1, indicates that an ABEND is         *00329000
                         requested from mainline processing             00330000
         DS    CL3       Reserved                                       00331000
NQBP_#RESOURCES DS F     Number of resources in the request             00332000
NQBP_FIRSTNQBPRSC@ DS A  Pointer to first NqbpRsc entry                *00333000
                         (NqbpRsc_Entry)                                00334000
NQBP_CURRENTPARAMETERS DS CL4 Parameters as changed by exit routines    00335000
         ORG   NQBP_CURRENTPARAMETERS                                   00336000
NQBP_CP_ABENDCODE DS X   First digit of of the ABEND code (eg. x30 for *00337000
                         DEQ and x38 for ENQ)                           00338000
         DS    CL1       Reserved                                       00339000
NQBP_CP_ABENDREASON DS H ABEND Reason Code                              00340000
         DS    CL8       Reserved                                       00341000
NQBP_END DS    0C                                                       00342000
NQBP_LEN EQU   *-NQBP                                                   00343000
.L0002   ANOP                                                           00344000
         AIF   ('&NQBPRSC_ENTRY' EQ 'NO').L0005                         00345000
         AIF   ('&DSECT' EQ 'YES').L0006                                00346000
         AIF   ('&NQBPRSC_ENTRY' NE 'YES').L0005                        00347000
.L0006   ANOP                                                           00348000
*                                                                       00349000
*   ******************************************************************  00350000
*                                                                       00351000
*                        NQBP Resource Entry                            00352000
*    Note:  With the exception of the request flags and current         00353000
*    parameters, the NQBP Resource entry is read only.                  00354000
*                                                                       00355000
*   ******************************************************************  00356000
*                                                                       00357000
*                                                                       00358000
         AIF   ('&DSECT' EQ 'YES').L0007                                00359000
NQBPRSC_ENTRY DS 0D                                                     00360000
         AGO   .L0008                                                   00361000
.L0007   ANOP                                                           00362000
NQBPRSC_ENTRY DSECT                                                     00363000
.L0008   ANOP                                                           00364000
NQBPRSC_NEXTNQBPRSC@ DS A Pointer to next NqbpRsc entry, 0 indicates   *00365000
                         end of list                                    00366000
NQBPRSC_TOKEN DS CL8     For control program use only - defines which  *00367000
                         entry in the request corresponds to this      *00368000
                         NqbpRsc_Entry                                  00369000
NQBPRSC_QNAME DS CL8     Request QName                                  00370000
NQBPRSC_RNAME@ DS A      Pointer to NQBP RNAME                          00371000
NQBPRSC_SCOPE DS X       Final Scope after all possible alterations.   *00372000
                         See Nqbp_kScope for possible values and the   *00373000
                         prologue on how the scope can change. Only    *00374000
                         valid for non generic DEQ requests (i.e.      *00375000
                         NqbpRsc_RNameLen^=0).                          00376000
NQBPRSC_RET DS X         Request RET value, see Nqbp_kRET values Note  *00377000
                         that this field will be the same for every    *00378000
                         NqbpRsc entry in the list.                     00379000
*  Bit definitions:                                                     00380000
NQBPRSC_RET1 EQU X'04'   Maps to PELRET1                                00381000
NQBPRSC_RET2 EQU X'02'   Maps to PELRET2                                00382000
NQBPRSC_RET3 EQU X'01'   Maps to PELRET3                                00383000
NQBPRSC_RNAMELEN DS X    Length of the RName. When 0, request is a     *00384000
                         generic DEQ                                    00385000
NQBPRSC_ORIGINALSCOPE DS X Original scope specified on the GRS API.    *00386000
                         See the prologue for information on which     *00387000
                         scopes are presented. See Nqbp_kScope for     *00388000
                         possible values. Only valid for non generic   *00389000
                         DEQ requests (NqbpRsc_RNameLen^=0).            00390000
NQBPRSC_STATEFLAGS DS CL4 Resource state flags                          00391000
         ORG   NQBPRSC_STATEFLAGS                                       00392000
NQBPRSC_STATEFLAGS1 DS B First byte of resource state flags             00393000
*  Bit definitions:                                                     00394000
NQBPRSC_SF1_SHARE EQU X'80' For ENQ/RESERVE requests, when 1 request   *00395000
                         is for shared access, when 0, request is for  *00396000
                         exclusive access                               00397000
NQBPRSC_SF1_RNLEQNO EQU X'40' RNL=NO was specified on the GRS API (the *00398000
                         request).                                      00399000
NQBPRSC_STATEFLAGS2 DS B Second byte of resource flags                  00400000
*  Bit definitions:                                                     00401000
NQBPRSC_SF2_INCLUDED EQU X'80' RNL history indicator: The Resource was *00402000
                         promoted to SYSTEMS scope. It may have also   *00403000
                         been demoted back to SYSTEM level. See        *00404000
                         NqbpRsc_Scope for the final scope.             00405000
NQBPRSC_SF2_CONVERTED EQU X'40' RNL history indicator: The Resource    *00406000
                         was converted from a RESERVE to SYSTEMS ENQ   *00407000
                         only. Note that NqbpRsc_Ucb@ will still be    *00408000
                         set.                                           00409000
NQBPRSC_SF2_EXCLUDED EQU X'20' RNL history indicator: The Resource was *00410000
                         demoted to SYSTEM scope. Note that the        *00411000
                         NqbpRsc_Scope is the final scope.              00412000
NQBPRSC_SF2_GLOBAL EQU X'10' Resource request will be processed        *00413000
                         globally by GRS. Note NqbpRsc_SF2_Global will *00414000
                         always be off in GRS=NONE mode even though    *00415000
                         NqbpRsc_Scope may be SYSTEMS.                  00416000
         DS    CL2                                                      00417000
NQBPRSC_UCB@ DS A        Request UCB address after ISGNQXIT/FAST and   *00418000
                         RNL processing. Only valid when Nqbp_SF1_ENQ  *00419000
                         is set. Note that the actual device RESERVE   *00420000
                         will not be issued when NqbpRsc_SF2_Converted *00421000
                         or NqbpRsc_RF1_ConvertReserve is set.          00422000
NQBPRSC_REQUESTFLAGS DS CL4                                             00423000
         ORG   NQBPRSC_REQUESTFLAGS                                     00424000
NQBPRSC_REQUESTFLAGS1 DS B                                              00425000
*                                                                       00426000
*   ******************************************************************  00427000
*    For conditional (RET=CHNG, RET=USE) or test (RET=TEST) requests    00428000
*    exit routines can override ENQ/DEQ functionality and substitute    00429000
*    a return code (other than zero) to be returned to the caller.      00430000
*    If the return code is set, ENQ/DEQ processing will NOT occur       00431000
*    for the resource.  This override is ignored for all other types    00432000
*    of requests.                                                       00433000
*   ******************************************************************  00434000
*                                                                       00435000
*                                                                       00436000
*  Bit definitions:                                                     00437000
NQBPRSC_RF1_SETRETURNCODE EQU X'80' When 1, request that the return    *00438000
                         code be set for this conditional/test request  00439000
*                                                                       00440000
*   ******************************************************************  00441000
*    For a RESERVE request, exit routines can specify that the          00442000
*    RESERVE be converted to an ENQ.                                    00443000
*   ******************************************************************  00444000
*                                                                       00445000
*                                                                       00446000
NQBPRSC_RF1_CONVERTRESERVE EQU X'40' When 1, request that this RESERVE *00447000
                         be converted to a ENQ only (no device         *00448000
                         reserve)                                       00449000
*                                                                       00450000
*   ******************************************************************  00451000
*    For ISGENQ conditional (RET=CHNG, RET=USE) or test (RET=TEST)      00452000
*    requests exit routines can override ENQ/DEQ functionality and      00453000
*    substitute a reason code (other than zero) to be returned to the   00454000
*    caller. This reason code must accompany a NON zero return code.    00455000
*    This override is ignored for all other types of requests.          00456000
*   ******************************************************************  00457000
*                                                                       00458000
*                                                                       00459000
NQBPRSC_RF1_SETREASONCODE EQU X'20' When 1, request that the reason    *00460000
                         code be set for this conditional/test         *00461000
                         request. Only processed when version is       *00462000
                         Nqbp_kVersion#2 or greater.                    00463000
         DS    X         Reserved                                       00464000
         DS    CL2       Reserved                                       00465000
NQBPRSC_CURRENTPARAMETERS DS CL4 Parameters as changed by exit         *00466000
                         routines                                       00467000
         ORG   NQBPRSC_CURRENTPARAMETERS                                00468000
NQBPRSC_CP_RETURNCODE DS X Current value of return code to be passed   *00469000
                         to the requester                               00470000
         DS    CL3       Reserved                                       00471000
NQBPRSC_CP_REASONCODE DS F Reason code set by exit Only processed when *00472000
                         version is Nqbp_kVersion#2                     00473000
         ORG   NQBPRSC_CP_REASONCODE                                    00474000
         DS    H         We ignore this since we append the exit id     00475000
NQBPRSC_CP_LORSNCODE DS H                                               00476000
NQBPRSC_NQXITSCOPE DS X  Scope value after ISGNQXITFAST and ISGNQXIT   *00477000
                         processing. See Nqbp_kScope for possible      *00478000
                         values and the prologue for information on    *00479000
                         which scopes are presented. Only provided in  *00480000
                         version Nqbp_kVersion#3 and up. A comparision *00481000
                         with NqbpRsc_OriginalScope determines if the  *00482000
                         exit changed the scope. Only valid for non    *00483000
                         generic DEQ requests (NqbpRsc_RNameLen^=0).    00484000
         DS    CL7       Unused                                         00485000
         DS    CL64      Reserved (see ISGYNQQP)                        00486000
NQBPRSC_END DS 0C                                                       00487000
*                                                                       00488000
*   ******************************************************************  00489000
*                                                                       00490000
*                          NQBP Constants                               00491000
*                                                                       00492000
*   ******************************************************************  00493000
*                                                                       00494000
*                                                                       00495000
NQBP_KID EQU   C'NQBP'   Used to identify control block                 00496000
NQBP_KVERSION#1 EQU 1    Version constant -HBB7705                      00497000
NQBP_KVERSION#2 EQU 2    Version constant -HBB7709                      00498000
NQBP_KVERSION#3 EQU 3    Version constant -HBB7740                      00499000
NQBP_KVERSION#4 EQU 4    Version constant -HBB7750                      00500000
NQBP_KCURRENTVERSION EQU 4 Current version                              00501000
NQBP_KBATCHEXIT EQU 1    Parameter list is being passed to the batch   *00502000
                         exit                                           00503000
NQBP_KQUEUEDEXIT EQU 2   Parameter list is being passed to the queued  *00504000
                         exit                                           00505000
NQBP_KSCOPESTEP EQU 0    Scope=Step                                     00506000
NQBP_KSCOPESYSTEM EQU 1  Scope=System                                   00507000
NQBP_KSCOPESYSTEMS EQU 2 Scope=Systems                                  00508000
NQBP_KSCOPESYSPLEX EQU 2 Scope=Sysplex                                  00509000
NQBP_KRETNONE EQU 0      Ret=None                                       00510000
NQBP_KRETHAVE EQU 1      Ret=Have                                       00511000
NQBP_KRETCHNG EQU 2      Ret=Chng                                       00512000
NQBP_KRETUSE EQU 3       Ret=Use                                        00513000
NQBP_KRETECB EQU 4       An ECB is specified for this ENQ request, via *00514000
                         either the ECB= parameter on ENQ or the       *00515000
                         WAITTYPE=ECB parameter on ISGENQ              *00516000
                         REQUEST=OBTAIN                                 00517000
NQBP_KRETTEST EQU 7      Ret=Test                                       00518000
NQBP_KLENGTH EQU 96      Maximum length of Nqbp                         00519000
NQBP_KSUBPOOL EQU 229    Subpool 229                                    00520000
NQBPRSC_ENTRY_LEN EQU *-NQBPRSC_ENTRY                                   00521000
.L0005   ANOP                                                           00522000
         AIF   ('&ZCBPRINT' EQ 'NO').P3                                 00523000
         AIF   ('&LIST' EQ 'YES').P4                                    00524000
.P3      ANOP                                                           00525000
         POP   PRINT                                                    00526000
.P4      ANOP                                                           00527000
.P_EXIT  ANOP                                                           00528000
         MEND                                                           00529000
**/ ISGYNQBP_2:;                                                        00530000
* %ISGYNQBP_INCLUDED = 'YES';                                           00531000
* %DCL ZCBPRINT CHAR EXT;                                               00532000
* %DEACTIVATE ZCBPRINT;                                                 00533000
* %DCL ISGYNQBP_LIST CHAR EXT;                                          00534000
* %DEACTIVATE ISGYNQBP_LIST;                                            00535000
* %IF ISGYNQBP_LIST ^= 'NO' &                                           00536000
*    ZCBPRINT ^= 'NO' %THEN                                             00537000
*   %GOTO ISGYNQBP_3;                                                   00538000
*   @LIST PUSH NOECHO;                                                  00539000
*   @LIST NOASSEMBLE NOECHO;                                            00540000
*   @LIST OFF C NOECHO;                                                 00541000
* %ISGYNQBP_3:;                                                         00542000
*/* Start of PL/X Source                                             */ 00543000
*@LOGIC;                                                      /* @P3A*/ 00544000
*#PRAGMA TOOL=CBGEN.                                                    00545000
*#USEORG.                                                               00546000
*#DELETE.NqbpRsc_KId                                                    00547000
*#DELETE.kR31NqbpArea_Size                                              00548000
*#LINE.%INCLUDE SYSLIB(ISGYNQBP);                                       00549000
*#NOMAP.                                                                00550000
*#LINE.%INCLUDE SYSLIB(ASAREUCO);                                       00551000
*#MAP.                                                                  00552000
*#EPRAGMA.                                                              00553000
*@ENDLOGIC;                                                   /* @L3C*/ 00554000
*%if NqbpAttr = '' %then                                                00555000
*  %NqbpAttr = 'based(NqbpPtr) bdy(dword)';                             00556000
*dcl                                                                    00557000
*   1 NQBP NqbpAttr                                                     00558000
*  ,  3 Nqbp_Id char(4)             /* Eyecatcher                    */ 00559000
*  ,  3 Nqbp_Version fixed(8)       /* Version. See version constants   00560000
*                                      below e.g. Nqbp_kVersion#1       00561000
*                                                                @L3C*/ 00562000
*  ,  3 * char(3)                   /* Reserved                      */ 00563000
*  ,  3 Nqbp_WorkArea@ ptr(31)      /* Pointer to a 4K work area,       00564000
*                                      usable by exit routines       */ 00565000
*  ,  3 Nqbp_RequestData            /* ENQ/DEQ request state            00566000
*                                      information, these values        00567000
*                                      cannot be changed             */ 00568000
*  ,    5 Nqbp_RD_RequestToken char(16) /* Unique token identifying     00569000
*                                      the GRS exit call processing for 00570000
*                                      the request. If needed, all      00571000
*                                      exits driven for this request    00572000
*                                      can use this token to identify   00573000
*                                      the same request.  See the       00574000
*                                      prologue for more information.   00575000
*                                                                @L3C*/ 00576000
*  ,    5 Nqbp_RD_Ascb@ ptr(31)     /* Pointer to requester's ASCB   */ 00577000
*  ,    5 Nqbp_RD_Tcb@ ptr(31)      /* Pointer to requester's TCB or    00578000
*                                      directed TCB if TCB= was         00579000
*                                      specified                     */ 00580000
*  ,    5 Nqbp_RD_MAsid fixed(15)   /* Request MASID value           */ 00581000
*  ,    5 * char(2)                 /* Reserved                      */ 00582000
*  ,    5 Nqbp_RD_MTcb ptr(31)      /* Request MTCB value            */ 00583000
*  ,    5 Nqbp_RD_Jobname char(8)   /* Requester's Jobname           */ 00584000
*  ,    5 Nqbp_RD_Sysname char(8)   /* Requester's Sysname           */ 00585000
*  ,    5 Nqbp_RD_NSI@ ptr(31)      /* Requester's next sequential      00586000
*                                      instruction address, when        00587000
*                                      ENQ/DEQ ends, this is address    00588000
*                                      of the next instruction in the   00589000
*                                      calling program that will be     00590000
*                                      executed                      */ 00591000
*  ,      7 Nqbp_RD_AMode31 bit(1)  /* When set, ENQ caller is AMODE    00592000
*                                      31                            */ 00593000
*  ,    5 Nqbp_RD_Ecb@ ptr(31)      /* Pointer to original request ECB  00594000
*                                      (set when ECB= specified on the  00595000
*                                      request)                      */ 00596000
*  ,  3 Nqbp_StateFlags             /* ENQ/DEQ request state flags,     00597000
*                                      these values cannot be changed   00598000
*                                                                    */ 00599000
*  ,    5 Nqbp_StateFlags1 bit(8)   /* First byte of state flags     */ 00600000
*  ,      7 Nqbp_SF1_ENQ bit(1)     /* When 1, request is ENQ/RESERVE,  00601000
*                                      when 0, request is DEQ.          00602000
*                                      If Nqbp_SF1_ISGENQ is set then   00603000
*                                      when 1, ISGENQ REQUEST=OBTAIN or 00604000
*                                      CHANGE, when 0, REQUEST=RELEASE. 00605000
*                                      See Nqbp_SF2_Change to           00606000
*                                      distinguish between ISGENQ       00607000
*                                      REQUEST=OBTAIN and               00608000
*                                      REQUEST=CHANGE.           @L5C*/ 00609000
*  ,      7 Nqbp_SF1_Authorized bit(1) /* Caller is authorized       */ 00610000
*  ,      7 Nqbp_SF1_MatchTask bit(1) /* When 1, request specified      00611000
*                                      MASID/MTCB                    */ 00612000
*  ,      7 Nqbp_SF1_SMCorRMC bit(1)                                    00613000
*  ,        9 Nqbp_SF1_StepMustComplete bit(1) /* When 1, ENQ request   00614000
*                                      specified SMC=YES             */ 00615000
*  ,          11 Nqbp_SF1_ResetMustComplete bit(1) /* When 1, DEQ       00616000
*                                      request specified RMC=YES     */ 00617000
*  ,      7 Nqbp_SF1_Linkage bit(1) /* When 1, request is PC entered    00618000
*                                      when 0, request is SVC entered.  00619000
*                                      As ISGENQ requests are all PC    00620000
*                                      entered, this bit will be 1 for  00621000
*                                      all ISGENQ requests.      @P5C*/ 00622000
*  ,      7 * bit(1)                /* This bit intentionally left      00623000
*                                      reserved to be kept in sync with 00624000
*                                      ISGYNQQP state flags      @P1A*/ 00625000
*  ,      7 Nqbp_SF1_ISGENQ bit(1)  /* When 1, request is via ISGENQ    00626000
*                                      service                   @L2A*/ 00627000
*  ,      7 Nqbp_SF1_IsgEnqCondYes bit(1) /* When 1, request is a       00628000
*                                      conditional ISGENQ request       00629000
*                                      (ISGENQ COND=YES)         @P2C*/ 00630000
*  ,    5 Nqbp_StateFlags2 bit(8)   /* State flags byte two      @L5A*/ 00631000
*  ,      7 * bit(2)                /* Reserved                  @L5A*/ 00632000
*  ,      7 Nqbp_SF2_Change bit(1)  /* When 1, request is a change      00633000
*                                      (i.e. ENQ RET=CHNG or ISGENQ     00634000
*                                      REQUEST=CHANGE).          @L5A*/ 00635000
*  ,      7 Nqbp_SF2_TEST_YES bit(1) /* When 1, ISGENQ with TEST=YES.   00636000
*                                      When 0, Not ISGENQ with TEST=YES 00637000
*                                      (i.e. TEST=NO if                 00638000
*                                      Nqbp_SF1_ISGENQ is set).  @L5A*/ 00639000
*  ,      7 Nqbp_SF2_CONTENTIONACT_FAIL bit(1) /* When 1, ISGENQ with   00640000
*                                      CONTENTIONACT=FAIL.              00641000
*                                      When 0, not CONTENTIONACT=FAIL   00642000
*                                      (i.e. CONTENTIONACT=WAIT if      00643000
*                                      Nqbp_SF1_ISGENQ is set and       00644000
*                                      Nqbp_SF2_TEST_YES is off).       00645000
*                                                                @L5A*/ 00646000
*  ,      7 Nqbp_SF2_ECB bit(1)     /* When 1, ECB keyword specified    00647000
*                                      (i.e. ISGENQ WAITTYPE=ECB or     00648000
*                                      or ENQ with ECB).                00649000
*                                      When 0, No ECB specified         00650000
*                                      (i.e. WAITTYPE=SUSPEND if        00651000
*                                      Nqbp_SF1_ISGENQ is set and       00652000
*                                      Nqbp_SF2_TEST_YES and            00653000
*                                      Nqbp_SF2_CONTENTIONACT_FAIL      00654000
*                                      are off).                 @L5A*/ 00655000
*  ,      7 Nqbp_SF2_ChangeToShared bit(1) /* When 1, ISGENQ            00656000
*                                      REQUEST=CHANGE specified         00657000
*                                      CONTROL=SHARED. If the request   00658000
*                                      is successful, the requester     00659000
*                                      will be converted from an        00660000
*                                      exclusive owner to a shared      00661000
*                                      owner. Only valid when           00662000
*                                      Nqbp_SF2_Change is 1      @L7A*/ 00663000
*  ,      7 * bit(1)                /* Reserved                  @L7C*/ 00664000
*  ,    5 * char(2)                 /* Reserved                  @L5C*/ 00665000
*  ,  3 Nqbp_RequestFlags           /* Request flags                 */ 00666000
*  ,    5 Nqbp_RequestFlags1 bit(8) /* First byte of flags           */ 00667000
*  ,      7 Nqbp_RF1_SetRscRequest bit(1) /* When 1, indicates that a   00668000
*                                      request was made in one or more  00669000
*                                      NqbpRsc entries               */ 00670000
*  ,      7 Nqbp_RF1_SetABEND bit(1) /* When 1, indicates that an       00671000
*                                      ABEND is requested from          00672000
*                                      mainline processing           */ 00673000
*  ,      7 * bit(6)                /* Reserved                      */ 00674000
*  ,    5 * char(3)                 /* Reserved                      */ 00675000
*  ,  3 Nqbp_#Resources fixed(31)   /* Number of resources in the       00676000
*                                      request                       */ 00677000
*  ,  3 Nqbp_FirstNqbpRsc@ ptr(31)  /* Pointer to first NqbpRsc entry   00678000
*                                      (NqbpRsc_Entry)               */ 00679000
*  ,  3 Nqbp_CurrentParameters      /* Parameters as changed by exit    00680000
*                                      routines                      */ 00681000
*  ,    5 Nqbp_CP_ABENDCode fixed(8) /* First digit of of the ABEND     00682000
*                                      code (eg. x30 for DEQ and x38    00683000
*                                      for ENQ)                      */ 00684000
*  ,    5 * char(1)                 /* Reserved                      */ 00685000
*  ,    5 Nqbp_CP_ABENDReason fixed(16) /* ABEND Reason Code         */ 00686000
*  ,  3 * char(8)                   /* Reserved                      */ 00687000
*  ,  3 Nqbp_End char(0) bdy(dword)                                     00688000
*  ;                                                                    00689000
* /*******************************************************************/ 00690000
* /*                                                                 */ 00691000
* /*                     NQBP Resource Entry                         */ 00692000
* /* Note:  With the exception of the request flags and current      */ 00693000
* /* parameters, the NQBP Resource entry is read only.               */ 00694000
* /*                                                                 */ 00695000
* /*******************************************************************/ 00696000
*%if NqbpRscAttr = '' %then                                             00697000
*  %NqbpRscAttr = 'based(NqbpRscPtr) bdy(dword)';                       00698000
*dcl                                                                    00699000
*   1 NqbpRsc_Entry NqbpRscAttr                                         00700000
*  ,  3 NqbpRsc_NextNqbpRsc@ ptr(31) /* Pointer to next NqbpRsc entry,  00701000
*                                       0 indicates end of list  @L3C*/ 00702000
*  ,  3 NqbpRsc_Token char(8) bdy(word)/* For control program use only  00703000
*                                      - defines which entry in the     00704000
*                                      request corresponds to this      00705000
*                                      NqbpRsc_Entry                 */ 00706000
*  ,  3 NqbpRsc_QName char(8)       /* Request QName                 */ 00707000
*  ,  3 NqbpRsc_RName@ ptr(31)      /* Pointer to NQBP RNAME         */ 00708000
*  ,  3 NqbpRsc_Scope fixed(8)      /* Final Scope after all possible   00709000
*                                      alterations. See Nqbp_kScope     00710000
*                                      for possible values and the      00711000
*                                      prologue on how the scope can    00712000
*                                      change. Only valid for non       00713000
*                                      generic DEQ requests (i.e.       00714000
*                                      NqbpRsc_RNameLen^=0).     @L3C*/ 00715000
*  ,  3 NqbpRsc_Ret fixed(8)        /* Request RET value, see           00716000
*                                      Nqbp_kRET values                 00717000
*                                      Note that this field will be     00718000
*                                      the same for every NqbpRsc entry 00719000
*                                      in the list.              @L5C*/ 00720000
*  ,    5 * bit(5)                  /* Unused                        */ 00721000
*  ,    5 NqbpRsc_Ret1 bit(1)       /* Maps to PELRET1               */ 00722000
*  ,    5 NqbpRsc_Ret2 bit(1)       /* Maps to PELRET2               */ 00723000
*  ,    5 NqbpRsc_Ret3 bit(1)       /* Maps to PELRET3               */ 00724000
*  ,  3 NqbpRsc_RNameLen fixed(8)   /* Length of the RName. When 0,     00725000
*                                      request is a generic DEQ  @P4C*/ 00726000
*  ,  3 NqbpRsc_OriginalScope fixed(8) /* Original scope specified on   00727000
*                                      the GRS API. See the             00728000
*                                      prologue for information on      00729000
*                                      which scopes are presented. See  00730000
*                                      Nqbp_kScope for possible values. 00731000
*                                      Only valid for non generic DEQ   00732000
*                                      requests (NqbpRsc_RNameLen^=0).  00733000
*                                                                @L3C*/ 00734000
*  ,  3 NqbpRsc_StateFlags          /* Resource state flags          */ 00735000
*  ,    5 NqbpRsc_StateFlags1 bit(8) /* First byte of resource state    00736000
*                                      flags                         */ 00737000
*  ,      7 NqbpRsc_SF1_Share bit(1) /* For ENQ/RESERVE requests, when  00738000
*                                      1 request is for shared access,  00739000
*                                      when 0, request is for           00740000
*                                      exclusive access              */ 00741000
*  ,      7 NqbpRsc_SF1_RnlEqNo bit(1) /* RNL=NO was specified on the   00742000
*                                      GRS API (the request).    @L3C*/ 00743000
*  ,    5 NqbpRsc_StateFlags2 bit(8) /* Second byte of resource flags   00744000
*                                                                    */ 00745000
*  ,      7 NqbpRsc_SF2_Included bit(1) /* RNL history indicator:       00746000
*                                      The Resource was promoted to     00747000
*                                      SYSTEMS scope.  It may have also 00748000
*                                      been demoted back to SYSTEM      00749000
*                                      level. See NqbpRsc_Scope for the 00750000
*                                      final scope.              @L3C*/ 00751000
*                                                                       00752000
*  ,      7 NqbpRsc_SF2_Converted bit(1) /* RNL history indicator:      00753000
*                                      The Resource was converted       00754000
*                                      from a RESERVE to SYSTEMS ENQ    00755000
*                                      only.  Note that NqbpRsc_Ucb@    00756000
*                                      will still be set.        @L3C*/ 00757000
*                                                                       00758000
*  ,      7 NqbpRsc_SF2_Excluded bit(1) /* RNL history indicator:       00759000
*                                      The Resource was                 00760000
*                                      demoted to SYSTEM scope.         00761000
*                                      Note that the NqbpRsc_Scope is   00762000
*                                      the final scope.          @L3C*/ 00763000
*                                                                       00764000
*  ,      7 NqbpRsc_SF2_Global bit(1) /* Resource request will be       00765000
*                                      processed globally by GRS. Note  00766000
*                                      NqbpRsc_SF2_Global will          00767000
*                                      always be off in GRS=NONE        00768000
*                                      mode even though NqbpRsc_Scope   00769000
*                                      may be SYSTEMS.           @L3C*/ 00770000
*  ,    5 * char(2)                                                     00771000
*  ,  3 NqbpRsc_Ucb@ ptr(31)        /* Request UCB address after        00772000
*                                      ISGNQXIT/FAST and RNL            00773000
*                                      processing. Only valid when      00774000
*                                      Nqbp_SF1_ENQ is set. Note that   00775000
*                                      the actual device RESERVE        00776000
*                                      will not be issued when          00777000
*                                      NqbpRsc_SF2_Converted or         00778000
*                                      NqbpRsc_RF1_ConvertReserve       00779000
*                                      is set.                   @L3C*/ 00780000
*                                                               @space; 00781000
*  ,  3 NqbpRsc_RequestFlags                                            00782000
*  ,    5 NqbpRsc_RequestFlags1 bit(8)                                  00783000
*  ,                                                                    00784000
* /*******************************************************************/ 00785000
* /* For conditional (RET=CHNG, RET=USE) or test (RET=TEST) requests */ 00786000
* /* exit routines can override ENQ/DEQ functionality and substitute */ 00787000
* /* a return code (other than zero) to be returned to the caller.   */ 00788000
* /* If the return code is set, ENQ/DEQ processing will NOT occur    */ 00789000
* /* for the resource.  This override is ignored for all other types */ 00790000
* /* of requests.                                                    */ 00791000
* /*******************************************************************/ 00792000
*         7 NqbpRsc_RF1_SetReturnCode bit(1) /* When 1, request that    00793000
*                                      the return code be set for this  00794000
*                                      conditional/test request      */ 00795000
*  ,                                                                    00796000
* /*******************************************************************/ 00797000
* /* For a RESERVE request, exit routines can specify that the       */ 00798000
* /* RESERVE be converted to an ENQ.                                 */ 00799000
* /*******************************************************************/ 00800000
*         7 NqbpRsc_RF1_ConvertReserve bit(1) /* When 1, request that   00801000
*                                      this RESERVE be converted to     00802000
*                                      a ENQ only (no device reserve)   00803000
*                                                                @L6A*/ 00804000
*  ,                                                                    00805000
* /*******************************************************************/ 00806000
* /* For ISGENQ conditional (RET=CHNG, RET=USE) or test (RET=TEST)   */ 00807000
* /* requests exit routines can override ENQ/DEQ functionality and   */ 00808000
* /* substitute a reason code (other than zero) to be returned to the*/ 00809000
* /* caller. This reason code must accompany a NON zero return code. */ 00810000
* /* This override is ignored for all other types of requests.   @L2A*/ 00811000
* /*******************************************************************/ 00812000
*         7 NqbpRsc_RF1_SetReasonCode bit(1) /* When 1, request that    00813000
*                                      the reason code be set for this  00814000
*                                      conditional/test request. Only   00815000
*                                      processed when version is        00816000
*                                      Nqbp_kVersion#2 or greater.      00817000
*                                                                @L2A*/ 00818000
*  ,                                                                    00819000
*         7 * bit(1)                /* Reserved                      */ 00820000
*  ,                                                                    00821000
*       5 * fixed(8)                /* Reserved                      */ 00822000
*  ,    5 * char(2)                 /* Reserved                  @L2C*/ 00823000
*  ,  3 NqbpRsc_CurrentParameters   /* Parameters as changed by exit    00824000
*                                      routines                      */ 00825000
*  ,    5 NqbpRsc_CP_ReturnCode fixed(8) /* Current value of return     00826000
*                                      code to be passed to the         00827000
*                                      requester                     */ 00828000
*  ,    5 * char(3)                 /* Reserved                      */ 00829000
*  ,  3 NqbpRsc_CP_ReasonCode fixed(32) /* Reason code set by exit      00830000
*                                      Only processed when version      00831000
*                                      is Nqbp_kVersion#2        @L2A*/ 00832000
*  ,    5 * fixed(16)               /* We ignore this since we append   00833000
*                                      the exit id               @L2A*/ 00834000
*  ,    5 NqbpRsc_CP_LoRsnCode fixed(16) /*                      @L2A*/ 00835000
*  ,  3 NqbpRsc_NqxitScope fixed(8) /* Scope value after ISGNQXITFAST   00836000
*                                      and ISGNQXIT processing.  See    00837000
*                                      Nqbp_kScope for possible values  00838000
*                                      and the prologue for information 00839000
*                                      on which scopes are presented.   00840000
*                                      Only provided in version         00841000
*                                      Nqbp_kVersion#3 and up. A        00842000
*                                      comparision with                 00843000
*                                      NqbpRsc_OriginalScope determines 00844000
*                                      if the exit changed the scope.   00845000
*                                      Only valid for non generic DEQ   00846000
*                                      requests (NqbpRsc_RNameLen^=0).  00847000
*                                                                @L3A*/ 00848000
*  ,  3 * char(7)                   /* Unused                    @L4A*/ 00849000
*  ,  3 * char(64)                  /* Reserved (see ISGYNQQP)   @L4A*/ 00850000
*  ,  3 NqbpRsc_End char(0) bdy(dword)                                  00851000
*  ;                                                                    00852000
* /*******************************************************************/ 00853000
* /*                                                                 */ 00854000
* /*                       NQBP RName Entry                          */ 00855000
* /*             (Note:  These entries are read only)                */ 00856000
* /*                                                                 */ 00857000
* /*******************************************************************/ 00858000
*%Dcl NqbpRscRnameAttr char ext;                                        00859000
*%if NqbpRscRnameAttr = ''                                              00860000
*%then                                                                  00861000
*  %NqbpRscRnameAttr = 'based(NqbpRsc_RName@) bdy(word)';               00862000
*dcl                                                                    00863000
*   NqbpRscRname char(*) NqbpRscRnameAttr         /* Resource RName  */ 00864000
*  ;                                                                    00865000
* /*******************************************************************/ 00866000
* /*                                                                 */ 00867000
* /*                       NQBP Constants                            */ 00868000
* /*                                                                 */ 00869000
* /*******************************************************************/ 00870000
* dcl                                                                   00871000
*    Nqbp_kId char(4) constant('NQBP') /* Used to identify control      00872000
*                                      block                         */ 00873000
*   ,Nqbp_kVersion#1 constant(1)    /* Version constant -HBB7705     */ 00874000
*   ,Nqbp_kVersion#2 constant(2)    /* Version constant -HBB7709 @L2A*/ 00875000
*   ,Nqbp_kVersion#3 constant(3)    /* Version constant -HBB7740 @L3A*/ 00876000
*   ,Nqbp_kVersion#4 constant(4)    /* Version constant -HBB7750 @L5A*/ 00877000
*   ,Nqbp_kCurrentVersion constant(Nqbp_kVersion#4) /* Current version  00878000
*                                                                @L3A*/ 00879000
*   ,Nqbp_kBatchExit constant(1)    /* Parameter list is being passed   00880000
*                                      to the batch exit             */ 00881000
*   ,Nqbp_kQueuedExit constant(2)   /* Parameter list is being passed   00882000
*                                      to the queued exit            */ 00883000
*   ,Nqbp_kScopeStep   constant(0)  /* Scope=Step                @L1A*/ 00884000
*   ,Nqbp_kScopeSystem constant(1)  /* Scope=System                  */ 00885000
*   ,Nqbp_kScopeSystems constant(2) /* Scope=Systems                 */ 00886000
*   ,Nqbp_kScopeSysplex constant(Nqbp_kScopeSystems) /* Scope=Sysplex   00887000
*                                                                @L1A*/ 00888000
*   ,Nqbp_kRetNone constant('00000000'b) /* Ret=None                 */ 00889000
*   ,Nqbp_kRetHave constant('00000001'b) /* Ret=Have                 */ 00890000
*   ,Nqbp_kRetChng constant('00000010'b) /* Ret=Chng                 */ 00891000
*   ,Nqbp_kRetUse constant('00000011'b) /* Ret=Use                   */ 00892000
*   ,Nqbp_kRetEcb constant('00000100'b) /* An ECB is specified          00893000
*                                      for this ENQ request, via        00894000
*                                      either the ECB= parameter on     00895000
*                                      ENQ or the WAITTYPE=ECB          00896000
*                                      parameter on                     00897000
*                                      ISGENQ REQUEST=OBTAIN     @02A*/ 00898000
*   ,Nqbp_kRetTest constant('00000111'b) /* Ret=Test                 */ 00899000
*   ,Nqbp_kLength constant(length(Nqbp)) /* Maximum length of Nqbp   */ 00900000
*   ,Nqbp_kSubPool constant(AsaSubPool_FpTaskRel) /* Subpool 229 @01A*/ 00901000
*   ,NqbpRsc_KId char(16) constant('NQBPRSC_ENTRIES ')  /* Id to        00902000
*                                    signify that NQBP Resource         00903000
*                                    Entries follow              @L3P*/ 00904000
*   ,kR31NqbpArea_Size FIXED(32) CONSTANT(length(Nqbp) +                00905000
*                                       (2*length(NqbpRsc_Entry)) +     00906000
*                                       (2*256)) /* Cell                00907000
*                                             size to hold an NQBP.     00908000
*                                             We are allocating a cell  00909000
*                                             that is large enough to   00910000
*                                             hold the base NQBP, with  00911000
*                                             2 resources of maximum    00912000
*                                             rname length. (If not     00913000
*                                             large enough, will do a   00914000
*                                             storage obtain instead)   00915000
*                                                                @L3C*/ 00916000
*                                                                       00917000
*   ;                                                                   00918000
*/* End of PL/X Source                                               */ 00919000
* %IF ISGYNQBP_LIST ^= 'NO' &                                           00920000
*    ZCBPRINT ^= 'NO' %THEN                                             00921000
*   %GOTO ISGYNQBP_4;                                                   00922000
*   @LIST POP NOECHO;                                                   00923000
* %ISGYNQBP_4:;                                                         00924000
* %END;                                                                 00925000
