*                                                                       00001000
* %DCL CSVDLSMF_INCLUDED CHAR EXT;                                      00002000
* %DEACTIVATE CSVDLSMF_INCLUDED;                                        00003000
* %IF CSVDLSMF_INCLUDED = '' %THEN                                      00004000
* %DO;                                                                  00005000
*/* Macro made bi-lingual on 19035. CBGEN compile date 15295         */ 00006000
*% /*                                                                   00007000
         MACRO                                                          00008000
         CSVDLSMF &DSECT=YES,&LIST=YES,&TITLE=YES,&SMF90T29=YES         00009000
         GBLC  &CSVDLSMF_INCLUDED                                       00010000
         GBLC  &ZCBPRINT                                                00011000
&CSVDLSMF_INCLUDED SETC 'YES'                                           00012000
         AIF   ('&LIST' EQ 'NONE').P0                                   00013000
         AIF   ('&TITLE' EQ 'NO').P5                                    00014000
 TITLE   'CSVDLSMF  - Dynamic Lnklst SMF record 90 subtype 29        '  00015000
.P5      ANOP                                                           00016000
**/ CSVDLSMF_1:;                                                        00017000
*/* START OF SPECIFICATIONS ******************************************* 00018000
*                                                                       00019000
*  **PROPRIETARY_STATEMENT********************************************  00020000
***01* PROPRIETARY STATEMENT=                                        *  00021000
*                                                                    *  00022000
*                                                                    *  00023000
*   LICENSED MATERIALS - PROPERTY OF IBM                             *  00024000
*   5650-ZOS COPYRIGHT IBM CORP. 1997,2017                           *  00025000
*                                                                    *  00026000
*   STATUS= HBB77B0                                                  *  00027000
*                                                                    *  00028000
*  **END_OF_PROPRIETARY_STATEMENT*************************************  00029000
*                                                                       00030000
*01* DESCRIPTIVE NAME:  Dynamic Lnklst SMF record 90 subtype 29         00031000
*02*  ACRONYM:  DLEN                                                    00032000
*                                                                       00033000
*01* MACRO NAME:  CSVDLSMF                                              00034000
*                                                                       00035000
*01* EXTERNAL CLASSIFICATION: GUPI                                      00036000
*01* END OF EXTERNAL CLASSIFICATION:                                    00037000
*                                                                       00038000
*01* DSECT NAME:                                                        00039000
*     SMF90T29                                                          00040000
*                                                                       00041000
*01* COMPONENT:  Contents Supervision (SC1CJ)                           00042000
*                                                                       00043000
*01* EYE-CATCHER:  NONE                                                 00044000
*                                                                       00045000
*01* STORAGE ATTRIBUTES:                                                00046000
*02*  SUBPOOL:  N/A                                                     00047000
*02*  KEY:  N/A                                                         00048000
*02*  RESIDENCY:  N/A                                                   00049000
*                                                                       00050000
*01* SIZE:                                                              00051000
*                SMF90T29 -- X'0078' bytes                              00052000
*                                                                       00053000
*01* CREATED BY:                                                        00054000
*     Dynamic LNKLST processing, and written to SMF data set            00055000
*      upon LNKLST set activation                                       00056000
*                                                                       00057000
*01* POINTED TO BY:                                                     00058000
*     N/A                                                               00059000
*                                                                       00060000
*01* SERIALIZATION:                                                     00061000
*     None required                                                     00062000
*                                                                       00063000
*01* FUNCTION:                                                          00064000
*02* Maps the data provided for SMF record type 90 subtype 29           00065000
*                                                                       00066000
*                                                                       00067000
*                                                                       00068000
*01* METHOD OF ACCESS:                                                  00069000
*02*  IFASMFR ,                                                         00070000
*     Notes: To find the address of the SMF90T29 area, add the address  00071000
*            of the SMF record plus field SMF90DOF                      00072000
*                                                                       00073000
*02*  PL/AS:                                                            00074000
*      %INCLUDE SYSLIB(IFASMFR)                                         00075000
*                                                                       00076000
*01* DELETED BY:  SMF processing                                        00077000
*                                                                       00078000
*01* FREQUENCY:  Created for ACTIVATE request                           00079000
*                                                                       00080000
*01* DEPENDENCIES:  None                                                00081000
*                                                                       00082000
*01* DISTRIBUTION LIBRARY:  AMACLIB                                     00083000
*                                                                       00084000
*01* CHANGE ACTIVITY:                                                   00085000
*   $L0=DYNLLCBG ,HBB6603,941231,PD00XB: Dynamic LNKLST                 00086000
*   $L1=DYNLLCSV ,HBB6603,941231,PD00XB: Dynamic LNKLST                 00087000
*   $L2=WI91716  ,HBB77B0 150806 PD00XB: Consname                       00088000
*   **CAUTION: The intent is that this match EXACTLY CSVDLENF,          00089000
*   **CAUTION: except for the fixed fields (eyecatcher and compID).     00090000
*   **CAUTION: Update CSVDLENF and the ENF                              00091000
*   **CAUTION: section in CSVDLPR if this macro changes.                00092000
*                                                                       00093000
* END OF SPECIFICATIONS *********************************************/  00094000
*% /*                                                                   00095000
.P0      ANOP                                                           00096000
         AIF   ('&ZCBPRINT' EQ 'NO').P1                                 00097000
         AIF   ('&LIST' EQ 'YES').P2                                    00098000
.P1      ANOP                                                           00099000
         PUSH  PRINT                                                    00100000
         PRINT OFF                                                      00101000
.P2      ANOP                                                           00102000
         AIF   ('&SMF90T29' EQ 'NO').L0002                              00103000
         AIF   ('&DSECT' EQ 'YES').L0003                                00104000
         AIF   ('&SMF90T29' NE 'YES').L0002                             00105000
SMF90T29 DS    0D        SMF record (type 90 subtype 29) data           00106000
         AGO   .L0004                                                   00107000
.L0003   ANOP                                                           00108000
SMF90T29 DSECT           SMF record (type 90 subtype 29) data           00109000
.L0004   ANOP                                                           00110000
SMF90T29LNKLSTSEQ# DS F  Seq# of the LNKLST set. LNKLST. Note that the *00111000
                         number always increases when a new LNKLST     *00112000
                         set, or a not-in-use old LNKLST set, is       *00113000
                         activated. But if an in-use LNKLST set is     *00114000
                         activated, the number of that LNKLST set does *00115000
                         not change. That means that on an activation, *00116000
                         the LNKLST sequence number does change from   *00117000
                         what it was (ignoring the the uninteresting   *00118000
                         case where you activate the current LNKLST    *00119000
                         set, which is effectively a no-op), but does   00120000
*                        not necessarily increase.                      00121000
SMF90T29LNKLSTNAME DS CL16 Name of the LNKLST set that was just        *00122000
                         activated                                      00123000
SMF90T29TIMESTAMP DS CL8 Time value (from STCK) of the activation       00124000
SMF90T29CONSID DS F      Console ID of issuer of the activation         00125000
SMF90T29UTOKEN DS 0CL80  Security product user token of issuer of the  *00126000
                         activation, mapped by ICHRUTKN. You can tell  *00127000
                         if the UToken is encrypted or not by bit      *00128000
                         TOKENCR defined by ICHRUTKN                    00129000
         DS    CL64      Part of user token                             00130000
SMF90T29_UTOKENUSERID DS CL8 TOKUSER (userid) field of user token       00131000
         ORG   SMF90T29UTOKEN+80                                        00132000
SMF90T29CONSNAME DS CL8  Console name of issuer of the activation       00133000
SMF90T29IDCHARS EQU C'DS90' Eyecatcher                                  00134000
SMF90T29_LEN EQU *-SMF90T29                                             00135000
.L0002   ANOP                                                           00136000
         AIF   ('&ZCBPRINT' EQ 'NO').P3                                 00137000
         AIF   ('&LIST' EQ 'YES').P4                                    00138000
.P3      ANOP                                                           00139000
         POP   PRINT                                                    00140000
.P4      ANOP                                                           00141000
.P_EXIT  ANOP                                                           00142000
         MEND                                                           00143000
**/ CSVDLSMF_2:;                                                        00144000
* %CSVDLSMF_INCLUDED = 'YES';                                           00145000
* %DCL ZCBPRINT CHAR EXT;                                               00146000
* %DEACTIVATE ZCBPRINT;                                                 00147000
* %DCL CSVDLSMF_LIST CHAR EXT;                                          00148000
* %DEACTIVATE CSVDLSMF_LIST;                                            00149000
* %IF CSVDLSMF_LIST ^= 'NO' &                                           00150000
*    ZCBPRINT ^= 'NO' %THEN                                             00151000
*   %GOTO CSVDLSMF_3;                                                   00152000
*   @LIST PUSH NOECHO;                                                  00153000
*   @LIST NOASSEMBLE NOECHO;                                            00154000
*   @LIST OFF C NOECHO;                                                 00155000
* %CSVDLSMF_3:;                                                         00156000
*/* Start of PL/X Source                                             */ 00157000
* %SELECT(DLSMF_BASED);            /*                            @L1A*/ 00158000
*   %WHEN('')                      /* Not specified?             @L1A*/ 00159000
*     %DLSMF_BASED = 'BASED(ADDR(SMFRCD90)+SMF90DOF)'; /*               00160000
*                                   Default to simply based      @L1A*/ 00161000
*   %WHEN('NO')                    /* Don't want it based?       @L1A*/ 00162000
*       %DLSMF_BASED = '';         /* Nullify the basing expression     00163000
*                                                                @L1A*/ 00164000
*   %OTHERWISE %;                  /* Else leave what user supplied     00165000
*                                                                @L1A*/ 00166000
* %END SELECT;                     /*                            @L1A*/ 00167000
*   DECLARE                                                             00168000
*     1    SMF90T29 DLSMF_BASED,      /* SMF record (type 90 subtype    00169000
*                                   29) data                     @L1A*/ 00170000
*       3    SMF90T29LnklstSeq# Fixed, /* Seq# of the LNKLST set.       00171000
*                     LNKLST. Note that the number always increases     00172000
*                     when a new LNKLST set, or a not-in-use            00173000
*                     old LNKLST set, is activated. But if an           00174000
*                     in-use LNKLST set is activated, the number        00175000
*                     of that LNKLST set does not change. That means    00176000
*                     that on an activation, the LNKLST sequence        00177000
*                     number does change from what it was (ignoring     00178000
*                     the the uninteresting case where you activate     00179000
*                     the current LNKLST set, which is effectively a    00180000
*                     no-op), but does not necessarily increase.        00181000
*                                                                @P2C*/ 00182000
*       3    SMF90T29LnklstName CHAR(16), /* Name of the LNKLST set     00183000
*                                    that was just activated     @L1A*/ 00184000
*       3    SMF90T29TimeStamp CHAR(8), /* Time value (from STCK) of    00185000
*                                    the activation              @L1A*/ 00186000
*       3    SMF90T29Consid FIXED(32),  /* Console ID of issuer of      00187000
*                                    the activation              @L1A*/ 00188000
*       3    SMF90T29UToken CHAR(80),   /* Security product user token  00189000
*                                   of issuer of the activation,        00190000
*                                   mapped by ICHRUTKN. You can tell    00191000
*                                   if the UToken is encrypted or not   00192000
*                                   by bit TOKENCR defined by           00193000
*                                   ICHRUTKN                     @L1A*/ 00194000
*         5  * CHAR(64),              /* Part of user token      @L2A*/ 00195000
*         5  SMF90T29_UTokenUserid Char(8), /* TOKUSER (userid) field   00196000
*                                   of user token                @L2A*/ 00197000
*       3    SMF90T29Consname CHAR(8), /* Console name of issuer of     00198000
*                                    the activation              @L2A*/ 00199000
*       3    * CHAR(0) Bdy(DWORD);    /* End of SMF area         @L1A*/ 00200000
*                                                                       00201000
*                                                                       00202000
*   Declare                                                             00203000
*     SMF90T29IdChars CHAR(*) CONSTANT('DS90'); /* Eyecatcher    @L1A*/ 00204000
* @LOGIC;                                                               00205000
* #PRAGMA TOOL=CBGEN.                                                   00206000
* #USEORG.                                                              00207000
* #EPRAGMA.                                                             00208000
* @ENDLOGIC;                                                            00209000
*/* End of PL/X Source                                               */ 00210000
* %IF CSVDLSMF_LIST ^= 'NO' &                                           00211000
*    ZCBPRINT ^= 'NO' %THEN                                             00212000
*   %GOTO CSVDLSMF_4;                                                   00213000
*   @LIST POP NOECHO;                                                   00214000
* %CSVDLSMF_4:;                                                         00215000
* %END;                                                                 00216000
