* %/*  This makes the BAL version look like a PL/X macro comment        00010000
         MACRO                                                          00020000
&LABEL   CNZMXURF &PARAM,&INUSE=                                   @01C 00030000
.** START OF SPECIFICATIONS ******************************************* 00040000
.*                                                                    * 00050000
.*01* MACRO NAME = CNZMXURF                                           * 00060000
.*                                                                    * 00070000
.*01* DESCRIPTIVE NAME = Locate UCME containing a console ID          * 00080000
.*01* ACRONYM = n/a                                                   * 00090000
.*                                                                    * 00100000
.**01* PROPRIETARY STATEMENT=                                         * 00110000
.* **PROPRIETARY_STATEMENT********************************************* 00120000
.*                                                                    * 00130000
.*                                                                    * 00140000
.*  LICENSED MATERIALS - PROPERTY OF IBM                              * 00150000
.*  5694-A01 COPYRIGHT IBM CORP. 2003, 2008                           * 00170002
.*                                                                    * 00180000
.*  STATUS= HBB7750                                                   * 00190001
.*                                                                    * 00200000
.* **END_OF_PROPRIETARY_STATEMENT************************************** 00210000
.*                                                                    * 00220000
.*01* EXTERNAL CLASSIFICATION: PI                                     * 00230000
.*01* END OF EXTERNAL CLASSIFICATION:                                 * 00240000
.*                                                                    * 00250000
.*01* FUNCTION =                                                      * 00260000
.*                                                                    * 00270000
.*       The CNZMXURF macro is used to locate the UCME                * 00280000
.*       containing the input console ID.                             * 00290000
.*                                                                    * 00300000
.*01* DSECT NAME: n/a                                                 * 00310000
.*01* COMPONENT:  Communications Task (SC1CK)                         * 00320000
.*                                                                    * 00330000
.*01* EYE CATCHER:  n/a                                               * 00340000
.*02*   OFFSET:     n/a                                               * 00350000
.*02*   LENGTH:     n/a                                               * 00360000
.*                                                                    * 00370000
.*01* STORAGE:                                                        * 00380000
.*02*   SUBPOOL:    n/a                                               * 00390000
.*02*   KEY:        n/a                                               * 00400000
.*02*   DATA SPACE: n/a                                               * 00410000
.*02*   RESIDENCY:  n/a                                               * 00420000
.*                                                                    * 00430000
.*01* SIZE:         n/a                                               * 00440000
.*                                                                    * 00450000
.*01* OPERATION =                                                     * 00460000
.*                                                                    * 00470000
.*       The input 4-byte console ID is placed into register 1.       * 00480000
.*                                                                    * 00490000
.*       The UCM is tested for a non-zero CNZMUREF processor          * 00500000
.*       address and either a branch is taken to the service          * 00510000
.*       processor or return code 16 is set in register 15            * 00520000
.*       indicating that the CNZMUREF service is not available.       * 00530000
.*       A BASR is performed to the CNZMUREF processor.               * 00540000
.*                                                                    * 00550000
.*       If an inactive UCME is found, a pointer to it is             * 00560000
.*       returned in register 0.                                      * 00570000
.*                                                                    * 00580000
.*01* INVOCATION =                                                    * 00590000
.*                                                                    * 00600000
.*       CNZMXURF is invoked with a single positional parameter       * 00610000
.*       specifying the 4-byte console ID and an optional named       * 00611000
.*       parameter (INUSE).                                           * 00612000
.*                                                                    * 00613000
.*       For BAL programs, CNZMXURF is invoked as follows:            * 00614000
.*                                                                    * 00615000
.*           CNZMXURF conid!(x)                                       * 00616000
.*                    ¬,INUSE=YES!NO|                                 * 00617000
.*                                                                    * 00618000
.*       For PL/X programs, CNZMXURF is invoked as follows:           * 00619000
.*                                                                    * 00620000
.*           ?CNZMXURF(conid)                                         * 00630000
.*             ¬InUse(YES!NO)|                                        * 00640000
.*             ¬RetUcmePtr(ucmeptr)|                              @P2A* 00650000
.*             ¬RetCode(retcode)|                                 @P2A* 00660000
.*             ;                                                      * 00670000
.*                                                                    * 00680000
.*           (NOTE: PL/X callers must include the IEECUCM mapping.)   * 00690000
.*                                                                    * 00700000
.*       Parameters                                                   * 00710000
.*           conid ! (x) -  Specifies a 4-byte console id where:      * 00720000
.*                                                                    * 00730000
.*                          "conid" is the symbolic address of a      * 00740000
.*                          field containing a 4-byte console ID.     * 00750000
.*                                                                    * 00760000
.*                          or                                        * 00770000
.*                                                                    * 00780000
.*                          "x" is a register, or a symbol equated    * 00790000
.*                          to a register, that contains a 4-byte     * 00791000
.*                          console ID.                               * 00792000
.*                                                                    * 00792100
.*           INUSE=YES!NO - Specifies whether the service will        * 00792200
.*                          return a UCME for a console id only if    * 00792300
.*                          the UCME is initialized and in use.       * 00792400
.*                                                                    * 00792500
.*                          YES - A UCME will be returned for a       * 00792600
.*                                console id only if the UCME is      * 00792700
.*                                initialized and in use.  (NOTE:     * 00792800
.*                                an initialized UCME does not        * 00792900
.*                                imply that the console is           * 00793000
.*                                active.)                            * 00793100
.*                                                                    * 00793200
.*                          NO  - If a UCME exists for a console id,  * 00793300
.*                                it will be returned, even if it     * 00793400
.*                                is not initialized and not in use.  * 00793500
.*                                An uninitialized UCME may exist if  * 00793600
.*                                the console has been removed or     * 00793700
.*                                was never defined. (DEFAULT)        * 00793800
.*                                                                    * 00793900
.*           RetUcmePtr(ucmeptr) - Is the value returned in register  * 00794000
.*                                 0 where:                           * 00794100
.*                                                                    * 00794200
.*                                 "ucmeptr" is the name of a pointer * 00794300
.*                                  variable that is to receive the   * 00794400
.*                                  UCME pointer.  RetUcmePtr is      * 00794500
.*                                  optional.                     @P2A* 00794600
.*                                                                    * 00794700
.*           RetCode(retcode) -   Is the value returned in register   * 00794800
.*                                15 where:                           * 00794900
.*                                                                    * 00795000
.*                                "retcode" is the name of a fixed    * 00795100
.*                                variable that is to receive the     * 00795200
.*                                return code.  RetCode is optional   * 00795300
.*                                                                @P2A* 00795400
.*                                                                    * 00795500
.*     Input registers:                                               * 00795600
.*                                                                    * 00795700
.*                  GR0-GR1    reserved                               * 00795800
.*                  GR2-GR13   undefined                              * 00795900
.*                  GR14-GR15  reserved                               * 00796000
.*                                                                    * 00797000
.*     Output registers:                                              * 00797100
.*                                                                    * 00797200
.*                  GR0        UCME pointer                           * 00797300
.*                  GR1        undefined                              * 00797400
.*                  GR2-GR13   unchanged (saved/restored)             * 00797500
.*                  GR14       undefined                              * 00797600
.*                  GR15       return code                            * 00797700
.*                                                                    * 00797800
.*01* DEPENDENCIES =                                                  * 00797900
.*                                                                    * 00798000
.*     The CNZMUREF routine saves incoming registers on the           * 00799000
.*     linkage stack and restores these registers from the            * 00800000
.*     stack when exiting.                                            * 00810000
.*                                                                    * 00820000
.*01* RETURN And REASON Codes =                                       * 00830000
.*                                                                    * 00840000
.*     The code generated by this macro will check the UCM for        * 00850000
.*     a non-zero address for the CNZMXURF service processor,         * 00860000
.*     CNZMUREF.  If a valid address is found, a BASR                 * 00870000
.*     will be done to the service processor.  The following          * 00880000
.*     return codes are possible and returned in register 15:         * 00890000
.*                                                                    * 00900000
.*            0 - No errors. A pointer to the UCME containing         * 00910000
.*                the console ID is returned in register 0.           * 00920000
.*                If INUSE=YES was specified on the macro             * 00930000
.*                invocation, the UCME is currently initialized.      * 00940000
.*            4 - A UCME containing the specified console ID          * 00950000
.*                was not found                                       * 00960000
.*            8 - Invalid console ID supplied or the UCME for the     * 00961000
.*                console ID is not initialized and in use.           * 00962000
.*                - Non-MCS (0) console class supplied                * 00963000
.*                - INTERNAL console ID (0) supplied                  * 00964000
.*                - INSTREAM console ID (128) supplied                * 00965000
.*                - UNKNOWN  console ID (255) supplied                * 00966000
.*                - Console ID out of the range defined for MCS       * 00967000
.*                  consoles                                          * 00968000
.*                                                                    * 00969000
.*           The following return code is issued via the code         * 00970000
.*           generated by the CNZMXURF macro:                         * 00980000
.*                                                                    * 00990000
.*           16 - CNZMUREF service is not available                   * 01000000
.*                                                                    * 01010000
.*01* CREATED-BY     = N/A                                            * 01020000
.*                                                                    * 01030000
.*01* POINTED-TO-BY  = N/A                                            * 01040000
.*                                                                    * 01050000
.*01* LOCATION       = N/A                                            * 01060000
.*                                                                    * 01070000
.*01* SERIALIZATION  = Serialization of the UCME array and UCMEs  @02C* 01080000
.*                     is the CMS Lock.                           @02C* 01090000
.*                     The caller of CNZMXURF is expected to be   @02A* 01100000
.*                     holding the CMS Lock for the duration of   @02A* 01101000
.*                     the UCME access.                           @02A* 01102000
.*                                                                    * 01110000
.*01* CHANGE ACTIVITY =                                               * 01120000
.*      $MAC(CNZMXURF),COMP(SC1CK): UCME look-up macro                * 01130000
.*      $L0=CSTAR,    JBB7727, 020708 PDKK: Console Restructure       * 01140000
.*      $P1=ME01663   HBB7720, 040831 PDSW: Reversioning Cancelled    * 01150000
.*      $P2=CNZ2A     HBB7730, 050226 PDDV: GCI                       * 01160000
.*      $01=OA13921   JBB7727, 060131 PDEK: Non zero return code when * 01170000
.*                                          UCME is not in use        * 01180000
.*      $02=OA19948   HBB7709, 070830 PDSW: CMS Lock Tracking         * 01181000
.*                                                                    * 01190000
.*01* MESSAGES =                                                      * 01200000
.*       The CNZMXURF macro will issue the following                  * 01210000
.*       messages upon detection of syntax errors:                    * 01220000
.*                                                                    * 01230000
.*02*  WARNING = (SEVERITY 4)                                         * 01240000
.*                                                                    * 01250000
.*    "CNZMXURF x HAS TOO MANY ARGUMENTS. ARGUMENTS IGNORED           * 01260000
.*      AFTER y."                                                     * 01270000
.*                                                                    * 01280000
.*02*  ERROR = (SEVERITY 12)                                          * 01290000
.*                                                                    * 01300000
.*    "NO TEXT GENERATED: CNZMXURF PARAMETER MISSING."                * 01310000
.*    "NO TEXT GENERATED: CNZMXURF INUSE KEYWORD VALUE XX INVALID."   * 01320000
.*                                                                    * 01330000
.** END OF SPECIFICATIONS ********************************************* 01340000
.***START OF CHANGE ACTIVITY******************************************* 01350000
.*                                                                    * 01360000
.* CHANGE DESCRIPTIONS:                                               * 01370000
.* --------------------                                               * 01380000
.* A - Add                                                            * 01390000
.* D - Delete                                                         * 01400000
.* C - Change                                                         * 01410000
.* M - Move                                                           * 01420000
.*                                                                    * 01430000
.* (A) If INUSE=YES was specified, verify that the UCME is in use @01A* 01440000
.*     If UCME is not in use, change return code to 8 and zero    @01A* 01450000
.*     the UCME address                                           @01A* 01460000
.* (A) Added RetCode and RetUcmePtr keys                          @P2A* 01461000
.* (C) Update the Serialization description.                      @02A* 01461100
.*                                                                    * 01462000
.*--------------------------------------------------------------------* 01463000
.*                                                                    * 01464000
.***END OF CHANGE ACTIVITY********************************************* 01465000
.********************************************************************** 01466000
.*   Make sure that the parameter was not blank.  If blank, issue     * 01467000
.* an MNOTE of severity 12 and exit the macro.  If the parameter was  * 01468000
.* not blank, go on to check for the INUSE keyword                @01C* 01469000
.********************************************************************** 01470000
         AIF   ('&PARAM' NE '' AND '&PARAM(1)' NE '' AND               +01480000
                '&PARAM(1,1)' NE '').INUSE                        @01C  01490000
         MNOTE 12,'NO TEXT GENERATED: CNZMXURF PARAMETER MISSING.'      01500000
         AGO   .EXIT                                                    01510000
.********************************************************************** 01520000
.*   If INUSE was specified, it must have been specified as YES or    * 01530000
.* NO, otherwise, issue an MNOTE of severity 12 and continue.     @01A* 01540000
.********************************************************************** 01550000
.INUSE   AIF   ('&INUSE' EQ '' OR '&INUSE' EQ 'YES' OR                 +01560000
                '&INUSE' EQ 'NO').LABEL                           @01A  01570000
         MNOTE 12,'NO TEXT GENERATED: INUSE KEYWORD VALUE &INUSE INVALI+01580000
               D'                                                 @01A  01590000
         AGO   .EXIT                                              @01A  01591000
.********************************************************************** 01592000
.*   See if the user specified a label on the macro invocation. If    * 01593000
.* so, insert the label with an EQU into the source stream;           * 01594000
.* otherwise, just continue.                                          * 01595000
.********************************************************************** 01596000
.LABEL   ANOP                                                           01597000
         AIF   ('&LABEL' EQ '').NOLABEL                                 01598000
&LABEL   EQU   *                                                        01599000
.********************************************************************** 01600000
.*   See if the parameter started with a parenthesis.  If it did,     * 01610000
.* then go handle the enclosed argument.  If not, the user specified  * 01620000
.* a label, so generate instructions to pass the 4-byte console ID    * 01630000
.* in register 1.                                                     * 01640000
.********************************************************************** 01650000
.NOLABEL ANOP                                                           01660000
         AIF   ('&PARAM'(1,1) EQ '(').REG                               01670000
         L     1,&PARAM           Acquire 4-byte console ID.            01680000
         AGO   .REF@                                                    01690000
.********************************************************************** 01700000
.*   CNZMXURF was invoked with a register specified as an argument.   * 01710000
.* Generate instructions to pass the 4-byte console ID in R1.         * 01720000
.********************************************************************** 01730000
.REG     ANOP                                                           01740000
         LR    1,&PARAM           Acquire 4-byte console ID.            01750000
.********************************************************************** 01760000
.*   See if more than one argument was specified.  If so, issue a     * 01770000
.* warning indicating that the extra argument(s) have been ignored;   * 01780000
.* otherwise, just continue.                                          * 01790000
.********************************************************************** 01800000
         AIF   (N'&PARAM EQ 1 AND N'&PARAM(1) EQ 1).REF@                01810000
         MNOTE 4,'CNZMXURF &PARAM HAS TOO MANY ARGUMENTS. ARGUMENTS IGN+01820000
               ORED AFTER &PARAM(1,1).'                                 01830000
.********************************************************************** 01840000
.*   Generate code to load the address of the CNZMUREF processor      * 01850000
.* and branch to it if the address is non-zero. If the address        * 01860000
.* was zero, the generated code will load return code 16 into         * 01870000
.* register 15. If the address was not zero, generate code to         * 01880000
.* perform the BASR to the CNZMUREF processor.                        * 01890000
.********************************************************************** 01900000
.REF@    ANOP                                                           01910000
         L     15,16(0,0)     Address of CVT from PSA                   01920000
         L     15,100(0,15)   Address of UCM from CVT                   01930000
         ICM   15,15,276(15)  Addr of CNZMUREF from UCM (UCMUREFP)      01940000
         BZ    *+10           Do not invoke CNZMUREF processor if      +01950000
                                address was zero                        01960000
         BASR  14,15          Invoke CNZMUREF processor                 01970000
         B     *+8            Branch around next instr - return        +01980000
                               code set by CNZMUREF processor           01990000
         LA    15,16          Set return code 16 - CNZMUREF            +02000000
                               processor not installed                  02010000
.********************************************************************** 02020000
.*   Check if INUSE=YES was specified.  If it was, and CNZMUREF       * 02030000
.* returned a UCME address, verify that the UCME is in use.  If it    * 02040000
.* is not in use, set return code 4 and zero the UCME pointer.    @01A* 02050000
.********************************************************************** 02060000
         AIF   ('&INUSE' NE 'YES').EXIT                           @01A  02070000
         LTR   15,15          Check for return code zero          @01A  02080000
         BNZ   *+22           If return code not zero, exit       @01A  02090000
         LR    14,0           Address of UCME into R14            @01A  02091000
         TM    33(14),B'00010000'  Check if UCME is in use        @01A  02092000
         BNZ   *+12           If UCME in use, exit                @01A  02093000
         LA    0,0            Else, clear UCME address in R0      @01A  02094000
         LA    15,8           Set return code 8 because no in use      +02095000
                              UCME was found                      @01A  02096000
.EXIT    ANOP                                                           02097000
         MEND                                                           02098000
.********************************************************************** 02099000
.*                     PL/X section                                   * 02100000
.********************************************************************** 02110000
**/                                                                     02120000
*CNZMXURF: MACRO Keys(INUSE, RetCode, RetUcmePtr);            /* @01C*/ 02130000
*            If MACECHO ^= ''                                           02140000
*            Then                                                       02150000
*              Ans(comment(MacEcho (1:Length(MacEcho)-1) ))             02160000
*                                        noRescan;             /*@01A*/ 02170000
*            ANS('?'!!'CNZMXURP '!!MACLIST!!MACKEYS!!';'); /*           02180000
*                                           Invoke PL/X version         02190000
*                                           of CNZMXURF          @01C*/ 02200000
*          %END;                                                        02210000
